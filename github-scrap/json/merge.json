{"name": "1148330040/tensorflow-torch", "full_name": "1148330040/TensorFlow-Torch", "topics": [], "description": "tf&torch about nlp"}
{"name": "610265158/face_landmark_pytorch", "full_name": "610265158/face_landmark_pytorch", "topics": [], "description": "pytorch face_landmark"}
{"name": "adamdad/dery", "full_name": "Adamdad/DeRy", "topics": ["neural-networks", "neurips-2022", "transfer-learning", "deep-learning", "deep-neural-networks", "ai", "machine-learning"], "description": "[NeurIPS2022] Deep Model Reassembly"}
{"name": "adap/flower", "full_name": "adap/flower", "topics": ["flower", "federated-learning", "federated-learning-framework", "pytorch-federated-learning", "tensorflow-federated-learning", "keras-federated-learning", "federated-analytics", "fleet-learning", "fleet-intelligence", "deep-learning", "machine-learning", "pytorch", "scikit-learn", "tensorflow"], "description": "Flower: A Friendly Federated Learning Framework"}
{"name": "adapter-hub/adapter-transformers", "full_name": "adapter-hub/adapter-transformers", "topics": ["nlp", "natural-language-processing", "adapters", "transformers", "bert", "pytorch"], "description": "Huggingface Transformers + Adapters = \u2764\ufe0f"}
{"name": "aggelos-michael-papadopoulos/mobilevit-impelmentation-and-training-in-tensorlow-and-pytorch", "full_name": "aggelos-michael-papadopoulos/MobileViT-implementation-and-training-in-Tensorlow-and-Pytorch", "topics": [], "description": "MobileViT Implementation in TensorFlow and Pytorch"}
{"name": "ai4bharat/indic-bert", "full_name": "AI4Bharat/indic-bert", "topics": ["indian-languages", "bert", "multilingual-models", "language-model", "nlp"], "description": "BERT-based Multilingual Model for Indian Languages"}
{"name": "aiaudit-org/raw2logit", "full_name": "aiaudit-org/raw2logit", "topics": ["distribution", "shift", "drift", "camera", "optics", "machine-learning", "deep-learning", "deep-neural-networks", "robustness", "pytorch"], "description": "In order to control processing-induced dataset drift we require two ingredients: raw sensor data and an image processing model. This code repository contains the materials for the second ingredient, the image processing models, as well as scripts to load data and run experiments. https://arxiv.org/abs/2211.02578"}
{"name": "aimagelab/mammoth", "full_name": "aimagelab/mammoth", "topics": ["pytorch", "continual-learning", "neurips2020", "knowledge-distillation", "deep-learning", "der", "experience-replay", "dark-experience-replay"], "description": "An Extendible (General) Continual Learning Framework based on Pytorch - official codebase of Dark Experience for General Continual Learning"}
{"name": "aimakerspace/peekingduck", "full_name": "aisingapore/PeekingDuck", "topics": ["computer-vision", "deep-learning", "pose-estimation", "object-detection", "object-tracking", "python", "pipeline", "nodes"], "description": "A modular framework built to simplify Computer Vision inference workloads."}
{"name": "aimodelshare/aimodelshare", "full_name": "AIModelShare/aimodelshare", "topics": ["machine-learning", "data-science", "deep-learning", "python", "mlops"], "description": null}
{"name": "aioz-ai/cfr_vqa", "full_name": "aioz-ai/CFR_VQA", "topics": ["vqa", "computer-vision", "deep-learning", "reasoning", "reasoning-machine"], "description": "Coarse-to-Fine Reasoning for Visual Question Answering"}
{"name": "airaria/textbrewer", "full_name": "airaria/TextBrewer", "topics": ["bert", "pytorch", "nlp", "knowledge", "distillation"], "description": "A PyTorch-based knowledge distillation toolkit for natural language processing"}
{"name": "aisingapore/peekingduck", "full_name": "aisingapore/PeekingDuck", "topics": ["computer-vision", "deep-learning", "pose-estimation", "object-detection", "object-tracking", "python", "pipeline", "nodes"], "description": "A modular framework built to simplify Computer Vision inference workloads."}
{"name": "akariasai/unanswerable_qa", "full_name": "AkariAsai/unanswerable_qa", "topics": ["question-answering", "machine-reading-comprehension", "natural-questions", "natural-language-processing"], "description": "The official implementation for ACL 2021 \"Challenges in Information Seeking QA: Unanswerable Questions and Paragraph Retrieval\". "}
{"name": "akshitac8/biam", "full_name": "akshitac8/BiAM", "topics": ["multi-label-zsl", "nus-wide", "openimages-v4", "iccv2021", "self-attention", "channel-attention", "generalized-zero-shot-learning", "zero-shot-learning", "multi-label-learning"], "description": "[ICCV 2021]  Official Pytorch implementation for Discriminative Region-based Multi-Label Zero-Shot Learning SOTA results on NUS-WIDE and OpenImages"}
{"name": "aladdinpersson/machine-learning-collection", "full_name": "aladdinpersson/Machine-Learning-Collection", "topics": ["pytorch", "pytorch-implementation", "pytorch-tutorial", "pytorch-gan", "pytorch-examples", "tensorflow2", "tensorflow-tutorials", "tensorflow-examples", "machine-learning", "machine-learning-algorithms", "pytorch-tutorials"], "description": "A resource for learning about Machine learning & Deep Learning"}
{"name": "alanli1997/slim-neck-by-gsconv", "full_name": "AlanLi1997/slim-neck-by-gsconv", "topics": ["lightweight-framework", "objectdetection", "pytorch", "yolo", "yolov4", "yolov5", "gsconv"], "description": "Pytorch implementation of the 'Slim-neck by GSConv: A better design paradigm of detector architectures for autonomous vehicles'"}
{"name": "alasdairtran/fourierflow", "full_name": "alasdairtran/fourierflow", "topics": ["simulation", "navier-stokes", "fourier-transform", "pytorch"], "description": "[ICLR 2023] Factorized Fourier Neural Operators"}
{"name": "alejandrobarrera/birdnet2", "full_name": "AlejandroBarrera/birdnet2", "topics": ["deep-learning", "object-detection", "point-cloud", "pytorch", "neural-network", "autonomous-driving"], "description": "Official Pytorch implementation of Birdnet+"}
{"name": "alekseykorshuk/optimum-transformers", "full_name": "AlekseyKorshuk/optimum-transformers", "topics": ["nlp", "pipeline", "huggingface", "transformers", "onnx", "onnxruntime", "optimum", "natural-language-processing", "benchmark", "infinity"], "description": "Accelerated NLP pipelines for fast inference on CPU and GPU. Built with Transformers, Optimum and ONNX Runtime."}
{"name": "alexandra-chron/hierarchical-domain-adaptation", "full_name": "alexandra-chron/hierarchical-domain-adaptation", "topics": ["adapters", "clustering", "domain-adaptation", "gaussian-mixture-models", "nlp", "pretrained-language-model", "pytorch"], "description": "Code of NAACL 2022 \"Efficient Hierarchical Domain Adaptation for Pretrained Language Models\" paper. "}
{"name": "alexfromapex/tensorexperiments", "full_name": "alexfromapex/tensorexperiments", "topics": ["gpu", "gpu-acceleration", "gpu-computing", "gpu-programming", "m1", "m1-mac", "python", "python3", "pytorch", "tensorflow", "tensorflow2"], "description": "Boilerplate for GPU-Accelerated TensorFlow and PyTorch code on M1 Macbook"}
{"name": "alexklwong/subpixel-embedding-segmentation", "full_name": "alexklwong/subpixel-embedding-segmentation", "topics": ["deep-learning", "computer-vision", "machine-learning", "pytorch", "mri", "medical-imaging", "segmentation", "stroke-lesion", "atlas", "ischemic-stroke", "lesion-segmentation", "ucla"], "description": "PyTorch Implementation of Small Lesion Segmentation in Brain MRIs with Subpixel Embedding (ORAL, MICCAIW 2021)"}
{"name": "alibaba-nlp/kb-ner", "full_name": "Alibaba-NLP/KB-NER", "topics": ["named-entity-recognition", "ner", "semeval-2022", "multimodal", "nlp", "semeval", "naacl2022"], "description": "Winner system (DAMO-NLP) of SemEval 2022 MultiCoNER shared task over 10 out of 13 tracks."}
{"name": "alibaba/alicemind", "full_name": "alibaba/AliceMind", "topics": ["nlp", "bert", "natural-language-processing", "deep-learning"], "description": "ALIbaba's Collection of Encoder-decoders from MinD (Machine IntelligeNce of Damo) Lab"}
{"name": "alibaba/easynlp", "full_name": "alibaba/EasyNLP", "topics": ["transformers", "bert", "nlp", "pretrained-models", "deep-learning", "pytorch", "fewshot-learning", "knowledge-distillation", "knowledge-pretraining", "text-image-retrieval", "text-to-image-synthesis", "machine-learning", "text-classification", "transfer-learning"], "description": "EasyNLP: A Comprehensive and Easy-to-use NLP Toolkit"}
{"name": "alibaba/easyrobust", "full_name": "alibaba/easyrobust", "topics": ["deep-learning", "image-classification", "imagenet", "adversarial-robustness", "robustness", "pretrained-models"], "description": "EasyRobust: an Easy-to-use library for state-of-the-art Robust Computer Vision Research with PyTorch."}
{"name": "alibaba/federatedscope", "full_name": "alibaba/FederatedScope", "topics": ["federated-learning", "machine-learning", "pytorch"], "description": "An easy-to-use federated learning platform"}
{"name": "alibaba/tinyneuralnetwork", "full_name": "alibaba/TinyNeuralNetwork", "topics": ["pytorch", "deep-learning", "model-compression", "pruning", "model-converter", "quantization-aware-training", "deep-neural-networks", "post-training-quantization"], "description": "TinyNeuralNetwork is an efficient and easy-to-use deep learning model compression framework."}
{"name": "alibabaresearch/damo-convai", "full_name": "AlibabaResearch/DAMO-ConvAI", "topics": ["conversational-ai", "deep-learning", "natural-language-processing", "dialog"], "description": "DAMO-ConvAI: The official repository which contains the codebase for Alibaba DAMO Conversational AI."}
{"name": "allanyiin/trident", "full_name": "AllanYiin/trident", "topics": ["pytorch", "tensorflow", "deep-learning", "neural-network", "convolutional-networks"], "description": "Make pytorch and tensorflow two become one."}
{"name": "allanyiin/yolov4", "full_name": "AllanYiin/YoloV4", "topics": ["yolo", "pytorch"], "description": "Yolo v4 in pytorch, tensorflow and onnx"}
{"name": "allegroai/clearml-serving", "full_name": "allegroai/clearml-serving", "topics": ["machine-learning", "mlops", "devops", "deep-learning", "kubernetes", "ai", "clearml", "model-serving", "serving", "serving-pytorch-models", "serving-ml", "tensorflow-serving", "triton", "triton-inference-server"], "description": "ClearML - Model-Serving Orchestration and Repository Solution"}
{"name": "allenai/allenact", "full_name": "allenai/allenact", "topics": ["reinforcement-learning", "embodied-agent", "ai", "research", "python", "deep-learning", "ai2", "computer-vision"], "description": "An open source framework for research in Embodied-AI from AI2."}
{"name": "allenai/embeddingrecycling", "full_name": "allenai/EmbeddingRecycling", "topics": ["machine-learning", "natural-language-processing", "nlp", "transfer-learning-nlp", "efficient-nlp"], "description": "Embedding Recycling for Language models"}
{"name": "allenai/tango", "full_name": "allenai/tango", "topics": ["python", "python3", "machine-learning", "nlp", "ai", "pytorch"], "description": "Organize your experiments into discrete steps that can be cached and reused throughout the lifetime of your research project."}
{"name": "alpa-projects/alpa", "full_name": "alpa-projects/alpa", "topics": ["deep-learning", "machine-learning", "compiler", "distributed-training", "high-performance-computing", "alpa", "jax", "distributed-computing", "llm", "auto-parallelization"], "description": "Training and serving large-scale neural networks"}
{"name": "alvinchangw/cocon_iclr2021", "full_name": "alvinchangw/COCON_ICLR2021", "topics": [], "description": "Pytorch implementation of CoCon: A Self-Supervised Approach for Controlled Text Generation "}
{"name": "alvinwan/nbdt-pytorch-image-models", "full_name": "alvinwan/nbdt-pytorch-image-models", "topics": ["pytorch", "neural-backed-decision-trees", "imagenet", "efficientnet"], "description": "Neural-Backed Decision Tree sample integration with pytorch-image-models"}
{"name": "amanchadha/iperceive", "full_name": "amanchadha/iPerceive", "topics": ["python", "python3", "video", "captioning", "captioning-videos", "dense-captioning", "convolutional-neural-networks", "resnets", "videoqa", "question-answering", "common-sense", "causality", "distilling-the-knowledge", "multi-modal", "transformers", "reasoning", "lstm", "self-attention", "attention", "pytorch"], "description": "Applying Common-Sense Reasoning to Multi-Modal Dense Video Captioning and Video Question Answering | Python3 | PyTorch | CNNs | Causality | Reasoning | LSTMs | Transformers | Multi-Head Self Attention | Published in IEEE Winter Conference on Applications of Computer Vision (WACV) 2021"}
{"name": "amazon-research/meta-q-learning", "full_name": "amazon-science/meta-q-learning", "topics": ["deep-learning", "meta-learning", "reinforcement-learning", "multi-task-learning"], "description": "Code for the paper \"Meta-Q-Learning\"( ICLR 2020)"}
{"name": "ameraner/dsen2-cr", "full_name": "ameraner/dsen2-cr", "topics": ["sar", "cloud-removal", "optical", "satellite-imagery", "satellite-data", "sentinel", "sentinel-2", "sentinel-1", "deep-learning", "residual-neural-network", "satellite"], "description": "DSen2-CR: A network for removing clouds from Sentinel-2 images. This repo contains the model code, written in Python/Keras, as well as links to pre-trained checkpoints and the SEN12MS-CR dataset."}
{"name": "amirmohammadrostami/keywordsspotting-efficientnet-a0", "full_name": "AmirmohammadRostami/KeywordsSpotting-EfficientNet-A0", "topics": ["pytorch", "keyword-spotting", "footballkeyworddataset", "efficientnet", "absolute-zero", "real-time-systems", "football-analysis"], "description": "EfficientNet-Absolute Zero for Continuous Speech Keyword Spotting"}
{"name": "ammesatyajit/videobert", "full_name": "ammesatyajit/VideoBERT", "topics": ["bert", "videobert", "python3", "pytorch"], "description": "Using VideoBERT to tackle video prediction"}
{"name": "andreped/fast-stain-normalization", "full_name": "andreped/fast-stain-normalization", "topics": ["histopathology-images", "digital-pathology", "stain-normalization", "deep-learning", "cpp", "python", "computational-pathology", "fast", "torch", "tensorflow", "tensorflow2"], "description": ":star2: GPU-accelerated stain normalization command line tool"}
{"name": "andrescasado/pergamo", "full_name": "AndresCasado/pergamo", "topics": ["python", "pytorch", "deformable-model", "differentiable-rendering", "machine-learning"], "description": "Code for PERGAMO, a two step approach to learn deformable models"}
{"name": "anexplore/cnn_for_captcha", "full_name": "anexplore/cnn_for_captcha", "topics": ["captcha", "imagecaptcha", "ocr", "deep-learning", "keras", "tensorflow", "torch"], "description": "\u56fe\u7247\u7c7b\u9a8c\u8bc1\u7801\u8bc6\u522b(\u6570\u5b57\u9a8c\u8bc1\u7801/\u7f3a\u53e3\u9a8c\u8bc1\u7801/\u6587\u5b57\u9a8c\u8bc1\u7801/\u65cb\u8f6c\u9a8c\u8bc1\u7801/\u76f8\u4f3c\u7269\u4f53\u9a8c\u8bc1\u7801)"}
{"name": "angeloucn/cfpnet-medicine", "full_name": "AngeLouCN/CFPNet-Medicine", "topics": ["medical-image-segmentation", "real-time-semantic-segmentation", "keras", "python3", "pytorch", "segmentation"], "description": "CFPNet-M: A Light-Weight Encoder-Decoder Based Network for Multimodal Biomedical Image Real-Time Segmentation"}
{"name": "angeloucn/dc-unet", "full_name": "AngeLouCN/DC-UNet", "topics": ["dc-unet", "medical-image-segmentation", "keras-tensorflow", "python3", "dcunet", "pytorch", "segmentation"], "description": "We proposed a novel U-Net-based model -- DC-UNet to do medical image segmentation."}
{"name": "anguyen8/deepface-emd", "full_name": "anguyen8/deepface-emd", "topics": ["computer-vision", "face-identification", "earth-movers-distance", "deep-learning"], "description": "Code for CVPR 2022 https://arxiv.org/abs/2112.04016 DeepFace-EMD Re-ranking Using Patch-wise Earth Movers Distance Improves Out-Of-Distribution Face Identification"}
{"name": "aniketmaurya/chitra", "full_name": "gradsflow/chitra", "topics": ["tensorflow", "image-processing", "object-detection", "deep-learning", "image-dataset", "visualization", "gradcam", "model-interpretation", "model-visualization", "image-classification", "bounding-boxes", "model-deployment", "mlops", "model-serving", "python", "machine-learning", "fastapi", "hacktoberfest", "pytorch"], "description": "A multi-functional library for full-stack Deep Learning. Simplifies Model Building, API development, and Model Deployment."}
{"name": "anirudh257/strm", "full_name": "Anirudh257/strm", "topics": ["few-shot", "few-shot-learning", "few-shot-recognition", "cvpr2022", "cvpr", "action-recognition", "spatio-temporal"], "description": "[CVPR 2022] Official Pytorch Implementation for \"Spatio-temporal Relation Modeling for Few-shot Action Recognition\". SOTA Results for Few-shot Action Recognition"}
{"name": "anisha2102/docvqa", "full_name": "anisha2102/docvqa", "topics": ["visual-question-answering", "computer-vision", "deep-learning", "document-analysis"], "description": "Document Visual Question Answering"}
{"name": "apapiu/guided-diffusion-keras", "full_name": "apapiu/guided-diffusion-keras", "topics": ["deep-learning", "diffusion-models", "generative-model", "keras", "text-to", "text-to-image", "stable-diffusion"], "description": "Text to Image Diffusion Models in Keras"}
{"name": "apple/ml-gmpi", "full_name": "apple/ml-gmpi", "topics": ["3d", "eccv2022", "generative-adversarial-network", "neural-rendering", "pytorch", "generative-model", "multiplane-images"], "description": "Official PyTorch implementation of GMPI (ECCV 2022, Oral Presentation)"}
{"name": "applied-ai-lab/genesis", "full_name": "applied-ai-lab/genesis", "topics": ["machine-learning", "pytorch", "vae", "generative-model", "object-centric"], "description": "Official PyTorch implementation of GENESIS and GENESIS-V2"}
{"name": "ar-ray-code/yolox-ros", "full_name": "Ar-Ray-code/YOLOX-ROS", "topics": ["yolox", "object-detection", "opencv", "deep-learning", "pytorch", "ros2", "openvino", "ros", "tensorrt", "onnxruntime", "tflite"], "description": "YOLOX + ROS2 object detection package"}
{"name": "arcchang1236/ca-noisegan", "full_name": "arcchang1236/CA-NoiseGAN", "topics": ["denoisers", "noise-models", "camera-sensors", "eccv2020", "eccv", "gan", "pytorch", "sidd-dataset"], "description": "The official implementation of our ECCV 2020 paper \"Learning Camera-Aware Noise Models\"."}
{"name": "ashutosh1919/neuro-symbolic-sudoku-solver", "full_name": "ashutosh1919/neuro-symbolic-sudoku-solver", "topics": ["neurosymboliccomputing", "machine-learning", "deep-learning", "reinforcement-learning", "neural-network", "neural-logic-machines", "sudoku-solver", "sudoku", "artificial-intelligence", "artificial-neural-networks", "reinforcement-learning-agent", "explainable-ai", "solving-sudoku-puzzles"], "description": "\u2699\ufe0f Solving sudoku using Deep Reinforcement learning in combination with powerful symbolic representations."}
{"name": "astha-chem/mvts-ano-eval", "full_name": "astha-chem/mvts-ano-eval", "topics": ["anomaly-detection", "deep-learning", "time-series"], "description": "A repository for code accompanying the manuscript 'An Evaluation of Anomaly Detection and Diagnosis in Multivariate Time Series' (published at TNNLS)"}
{"name": "asyml/vision-transformer-pytorch", "full_name": "asyml/vision-transformer-pytorch", "topics": ["vision-transformer", "pytorch"], "description": "Pytorch version of Vision Transformer (ViT) with pretrained models. This is part of CASL (https://casl-project.github.io/) and ASYML project."}
{"name": "atrcheema/ai4water", "full_name": "AtrCheema/AI4Water", "topics": ["machine-learning", "deep-learning", "tabular-data", "time-series"], "description": "framework for developing machine (and deep) learning models for structured data"}
{"name": "atrcheema/dl4seq", "full_name": "AtrCheema/AI4Water", "topics": ["machine-learning", "deep-learning", "tabular-data", "time-series"], "description": "framework for developing machine (and deep) learning models for structured data"}
{"name": "audreycui/relighting", "full_name": "audreycui/relighting", "topics": ["computational-photography", "computer-vision", "deep-learning", "gans", "lighting", "research"], "description": "Local Relighting of Real Scenes"}
{"name": "augmentedstartups/as-one", "full_name": "augmentedstartups/AS-One", "topics": ["computer-vision", "opencv", "yolor", "yolov5", "yolov7", "yolox", "deep-learning", "object-detection", "pytorch", "tracking", "ultralytics", "yolov8"], "description": "Easy & Modular Computer Vision Detectors and Trackers - Run YOLOv8,v7,v6,v5,R,X in under 20 lines of code."}
{"name": "avalon-benchmark/avalon", "full_name": "Avalon-Benchmark/avalon", "topics": ["deep-learning", "machine-learning", "python", "pytorch", "reinforcement-learning", "simulator"], "description": "A 3D video game environment and benchmark designed from scratch for reinforcement learning research"}
{"name": "aws-samples/amazon-sagemaker-local-mode", "full_name": "aws-samples/amazon-sagemaker-local-mode", "topics": ["sagemaker", "amazon-sagemaker", "pytorch", "catboost", "lightgbm", "pycharm", "tensorflow-training", "pytorch-training", "sagemaker-processing", "prophet", "scikit-learn", "prophet-model", "hdbscan-clustering-algorithm", "huggingface", "huggingface-transformers", "machine-learning", "delta-lake", "gensim-word2vec", "dask", "tensorflow"], "description": "Amazon SageMaker Local Mode Examples"}
{"name": "aws/deep-learning-containers", "full_name": "aws/deep-learning-containers", "topics": ["aws", "sagemaker", "docker", "tensorflow", "tensorflow2", "mxnet", "pytorch"], "description": "AWS Deep Learning Containers (DLCs) are a set of Docker images for training and serving models in TensorFlow, TensorFlow 2, PyTorch, and MXNet."}
{"name": "ayaanzhaque/sdcnl", "full_name": "ayaanzhaque/SDCNL", "topics": ["depression", "label-correction", "deep-learning", "scraped-data", "depression-classification", "noisy-labels", "nlp", "suicide", "depression-identification", "reddit", "embeddings", "noise", "icann2021"], "description": "Deep Learning for Suicide and Depression Identification with Unsupervised Label Correction (ICANN 2021)"}
{"name": "ayaka14732/tpu-starter", "full_name": "ayaka14732/tpu-starter", "topics": ["tpu", "deep-learning", "cloud-tpu", "google-cloud-platform", "gcp", "machine-learning", "jax"], "description": "Everything you want to know about Google Cloud TPU"}
{"name": "ayoolaolafenwa/pixellib", "full_name": "ayoolaolafenwa/PixelLib", "topics": ["computer-vision", "machine-learning", "artificial-intelligence", "image-segmentation", "semantic-segmentation", "instance-segmentation", "video-segmentation", "deeplab", "deeplearning", "maskr-cnn", "tensorflow", "deep-learning", "pointrend", "pytorch", "convolutional-neural-networks", "segmentation", "object-detection"], "description": "Visit PixelLib's official documentation  https://pixellib.readthedocs.io/en/latest/"}
{"name": "baguasys/bagua", "full_name": "BaguaSys/bagua", "topics": ["distributed", "pytorch", "rust-lang", "deep-learning", "distributed-systems", "distributed-computing", "machine-learning", "bagua"], "description": "Bagua Speeds up PyTorch"}
{"name": "balcilar/gnn-spectral-expressive-power", "full_name": "balcilar/gnn-spectral-expressive-power", "topics": ["gnn", "graph", "spectral-analysis", "expressiveness-analysis", "pytorch-geometric", "datasets", "tensorflow"], "description": "Code of \"Analyzing the Expressive Power of Graph Neural Networks in a Spectral Perspective\" paper published in ICLR2021"}
{"name": "beir-cellar/beir", "full_name": "beir-cellar/beir", "topics": ["nlp", "information-retrieval", "bert", "benchmark", "sentence-transformers", "question-generation", "retrieval", "passage-retrieval", "elasticsearch", "dpr", "sbert", "retrieval-models", "dataset", "ance", "colbert", "zero-shot-retrieval", "use-qa", "deep-learning", "pytorch"], "description": "A Heterogeneous Benchmark for Information Retrieval. Easy to use, evaluate your models across 15+ diverse IR datasets."}
{"name": "bethgelab/model-vs-human", "full_name": "bethgelab/model-vs-human", "topics": ["pytorch", "tensorflow", "robustness", "benchmark", "toolbox"], "description": "Benchmark your model on out-of-distribution datasets with carefully collected human comparison data (NeurIPS 2021 Oral)"}
{"name": "beyond-ml-labs/beyondml", "full_name": "Beyond-ML-Labs/BeyondML", "topics": ["deep-learning", "machine-learning", "neural-network", "pytorch", "tensorflow"], "description": "Software for developing sparse, performant, multitask artificial neural networks"}
{"name": "biano-ai/serving-compare-middleware", "full_name": "Biano-AI/serving-compare-middleware", "topics": ["tensorflow", "torchserve", "fastapi", "python", "triton-inference-server", "tensorflow-serving", "pytorch"], "description": "FastAPI middleware for comparing different ML model serving approaches"}
{"name": "billpwchan/deeptrust", "full_name": "billpwchan/DeepTrust", "topics": ["twitter", "stock-market", "refinitiv", "anomaly-detection", "information-retrieval", "reliability-assessment", "natural-language-processing", "imperial-college-london"], "description": "DeepTrust: A Reliable Financial Knowledge Retrieval Framework For Explaining Extreme Pricing Anomalies"}
{"name": "bird-tao/clcrn", "full_name": "BIRD-TAO/CLCRN", "topics": ["aaai2022", "graph-neural-networks", "spatio-temporal", "spherical-geometry", "continuous-convolution", "meteorological-forecasting", "pytorch"], "description": "This is an official Pytorch implementation of Conditional Local Convolution for Spatio-temporal Meteorological Forecasting, AAAI 2022 "}
{"name": "blackfeatherqq/facerecognition", "full_name": "BlackFeatherQQ/FaceRecognition", "topics": [], "description": "Using pytorch: yolov5+facenet+svm"}
{"name": "bluemirrors/cvu", "full_name": "BlueMirrors/cvu", "topics": ["computer-vision", "object-detection", "yolov5", "tensorrt", "tensorflow2", "pytorch", "onnxruntime"], "description": "Computer Vision deployment tools for dummies and experts. CVU  aims at making CV pipelines easier to build and consistent around platforms, devices, and models."}
{"name": "bm-k/kominilm", "full_name": "BM-K/KoMiniLM", "topics": ["distillation", "language-model", "natural-language-processing"], "description": "Korean Light Weight Language Model"}
{"name": "bm-k/kosentencebert", "full_name": "BM-K/KoSentenceBERT-ETRI", "topics": ["sentence-bert", "sentence-similarity", "natural-language-processing", "korean-sentence-bert"], "description": "Sentence Embeddings using Siamese ETRI KoBERT-Networks"}
{"name": "bm-k/kosentencebert-etri", "full_name": "BM-K/KoSentenceBERT-ETRI", "topics": ["sentence-bert", "sentence-similarity", "natural-language-processing", "korean-sentence-bert"], "description": "Sentence Embeddings using Siamese ETRI KoBERT-Networks"}
{"name": "bm-k/kosentencebert-skt", "full_name": "BM-K/KoSentenceBERT-SKT", "topics": ["sentence-bert", "sentence-similarity", "natural-language-processing", "korean-sentence-bert"], "description": "Sentence Embeddings using Siamese SKT KoBERT-Networks"}
{"name": "bm-k/kosentencebert_etri", "full_name": "BM-K/KoSentenceBERT-ETRI", "topics": ["sentence-bert", "sentence-similarity", "natural-language-processing", "korean-sentence-bert"], "description": "Sentence Embeddings using Siamese ETRI KoBERT-Networks"}
{"name": "bm-k/kosentencebert_skt", "full_name": "BM-K/KoSentenceBERT-SKT", "topics": ["sentence-bert", "sentence-similarity", "natural-language-processing", "korean-sentence-bert"], "description": "Sentence Embeddings using Siamese SKT KoBERT-Networks"}
{"name": "bm-k/kosentencebert_sktbert", "full_name": "BM-K/KoSentenceBERT-SKT", "topics": ["sentence-bert", "sentence-similarity", "natural-language-processing", "korean-sentence-bert"], "description": "Sentence Embeddings using Siamese SKT KoBERT-Networks"}
{"name": "bobo-y/flexible-yolov5", "full_name": "Bobo-y/flexible-yolov5", "topics": ["yolov5", "resnet", "moblienet", "backbone", "neck", "se", "cbam", "efficientnet", "pytorch", "shufflenet", "hrnet", "dcnv2", "tensorrt", "object-detection", "swin-transformer", "gcn", "yolov3"], "description": "More readable and flexible yolov5 with more backbone(gcn, resnet, shufflenet, moblienet, efficientnet, hrnet, swin-transformer, etc) and (cbam\uff0cdcn and so on), and tensorrt"}
{"name": "bojone/cdial-gpt-tf", "full_name": "bojone/CDial-GPT-tf", "topics": [], "description": "\u7528bert4keras\u52a0\u8f7dCDial-GPT"}
{"name": "bojone/cpm_lm_bert4keras", "full_name": "bojone/CPM_LM_bert4keras", "topics": [], "description": "\u5728bert4keras\u4e0b\u52a0\u8f7dCPM_LM\u6a21\u578b"}
{"name": "brendanxwhitaker/asta", "full_name": "langfield/asta", "topics": [], "description": "Shape annotations for numpy arrays and pytorch/tensorflow tensors."}
{"name": "brummi/monorec", "full_name": "Brummi/MonoRec", "topics": ["depth-estimation", "deep-learning", "unsupervised-learning", "cvpr2021"], "description": "Official implementation of the paper: MonoRec: Semi-Supervised Dense Reconstruction in Dynamic Environments from a Single Moving Camera (CVPR 2021)"}
{"name": "bupt-ai-cz/llvip", "full_name": "bupt-ai-cz/LLVIP", "topics": ["computer-vision", "visible-infrared", "low-light-image", "image-fusion", "object-detection", "cnn", "gan", "deep-learning", "low-light-vision", "image-to-image-translation", "iccv2021"], "description": "LLVIP: A Visible-infrared Paired Dataset for Low-light Vision"}
{"name": "bupt-gamma/gammagl", "full_name": "BUPT-GAMMA/GammaGL", "topics": ["graph", "deep-learning", "framework-agnostic", "tensorlayerx", "pytorch", "tensorflow", "paddlepaddle", "mindspore"], "description": "A multi-backend graph learning library."}
{"name": "buxihuo/luck-yolo", "full_name": "buxihuo/OW-YOLO", "topics": ["yolov5", "pytorch", "yolo", "object-detection", "deep-learning", "unknown", "autolabel", "open-world-detection", "open-world", "yolov8"], "description": "Detect known and unknown objects in the open world\uff08\u5177\u6709\u533a\u5206\u5df2\u77e5\u4e0e\u672a\u77e5\u80fd\u529b\u7684\u5168\u65b0\u68c0\u6d4b\u5668\uff09\uff09"}
{"name": "buxihuo/ow-yolo", "full_name": "buxihuo/OW-YOLO", "topics": ["yolov5", "pytorch", "yolo", "object-detection", "deep-learning", "unknown", "autolabel", "open-world-detection", "open-world", "yolov8"], "description": "Detect known and unknown objects in the open world\uff08\u5177\u6709\u533a\u5206\u5df2\u77e5\u4e0e\u672a\u77e5\u80fd\u529b\u7684\u5168\u65b0\u68c0\u6d4b\u5668\uff09\uff09"}
{"name": "by-liu/mbls", "full_name": "by-liu/MbLS", "topics": ["calibration", "pytorch", "deep-learning", "label-smoothing"], "description": "Code of our method MbLS (Margin-based Label Smoothing) for network calibration. To Appear at CVPR 2022. Paper : https://arxiv.org/abs/2111.15430"}
{"name": "camma-public/cholect45", "full_name": "CAMMA-public/cholect45", "topics": ["python", "dataset", "python3", "action-recognition", "laparoscopy", "endoscopic-images", "cholect40", "cholect45", "cholect50", "action-triplet", "pytorch", "tensorflow", "tensorflow2"], "description": "Laparoscopic video dataset for surgical action triplet recognition"}
{"name": "canturan10/satellighte", "full_name": "canturan10/satellighte", "topics": ["image-classification", "satellite", "pytorch", "pytorch-lightning", "computer-vision", "state-of-the-art", "deep-learning"], "description": "\ud83d\udce1 PyTorch Lightning Implementations of Recent Satellite Image Classification !"}
{"name": "cap-ntu/ml-model-ci", "full_name": "cap-ntu/ML-Model-CI", "topics": ["serving", "deep-learning", "continuous-integration", "inference", "convert-models", "dispatcher", "profiler", "tensorflow-serving", "onnx", "pytorch", "tensorrt", "tensorrt-inference-server", "mlops"], "description": "MLModelCI is a complete MLOps platform for managing, converting, profiling, and deploying MLaaS (Machine Learning-as-a-Service), bridging the gap between current ML training and serving systems."}
{"name": "carla-recourse/carla", "full_name": "carla-recourse/CARLA", "topics": ["python", "machine-learning", "artificial-intelligence", "explainable-ai", "explainable-ml", "explainability", "counterfactual-explanations", "counterfactuals", "counterfactual", "recourse", "benchmark", "benchmarking", "tensorflow", "tensorflow2", "pytorch"], "description": "CARLA: A Python Library to Benchmark Algorithmic Recourse and Counterfactual Explanation Algorithms"}
{"name": "carlsummer/python_developer_tools", "full_name": "carlsummer/python_developer_tools", "topics": ["deep-learning", "pytorch", "tricks"], "description": "\u8bba\u6587\u590d\u73b0\uff0c\u591a\u673a\u591a\u5361"}
{"name": "cdancette/multimodal", "full_name": "multimodal/multimodal", "topics": ["visual-features", "datasets", "embeddings", "vision-and-language", "reasoning", "deep-learning"], "description": "A collection of multimodal datasets, and visual features for VQA and captionning in pytorch. Just run \"pip install multimodal\""}
{"name": "cdjhz/multigen", "full_name": "cdjhz/multigen", "topics": ["pytorch", "kg", "nlg"], "description": "EMNLP2020 - Language Generation with Multi-hop Reasoning on Commonsense Knowledge Graph"}
{"name": "cerebroai/reformers", "full_name": "cerebroai/reformers", "topics": ["reformers", "pytorch", "tensorflow"], "description": "Efficient Transformers for research, PyTorch and Tensorflow using Locality Sensitive Hashing"}
{"name": "cgarciae/treex", "full_name": "cgarciae/treex", "topics": ["jax", "deep-learning"], "description": "A Pytree Module system for Deep Learning in JAX"}
{"name": "cgcl-codes/naturalcc", "full_name": "CGCL-codes/naturalcc", "topics": ["natural-language-processing", "programming-language", "deep-learning", "toolkit"], "description": "NaturalCC: An Open-Source Toolkit for Code Intelligence"}
{"name": "chail/gan-ensembling", "full_name": "chail/gan-ensembling", "topics": ["image-synthesis", "image-classfication", "generative-adversarial-network", "pytorch"], "description": "Invert and perturb GAN images for test-time ensembling"}
{"name": "changlin31/bossnas", "full_name": "changlin31/BossNAS", "topics": ["nas", "neural-architecture-search", "transformer", "automl", "hybrid-neural-network", "self-supervised-learning"], "description": "(ICCV 2021) BossNAS: Exploring Hybrid CNN-transformers with Block-wisely Self-supervised Neural Architecture Search"}
{"name": "chenmnz/cf-vit", "full_name": "ChenMnZ/CF-ViT", "topics": ["computer-vision", "vision-transformer", "image-classification", "dynamic", "efficiency"], "description": "Pytorch implementation of \"CF-ViT: A General Coarse-to-Fine Method for Vision Transformer\""}
{"name": "chiahsuan156/dst-as-prompting", "full_name": "chiahsuan156/DST-as-Prompting", "topics": ["dialogue", "dialogue-state-tracking", "natural-language-processing", "prompt-tuning", "prompting", "schema", "seq2seq", "t5", "task-oriented-dialogue"], "description": "Source code for Dialogue State Tracking with a Language Modelusing Schema-Driven Prompting"}
{"name": "chirag126/vog", "full_name": "chirag126/VOG", "topics": ["interpretability", "atypical-examples", "human-in-the-loop-auditing", "deep-learning", "explainability"], "description": "Estimating Example Difficulty using Variance of Gradients"}
{"name": "chou141253/fgvc-pim", "full_name": "chou141253/FGVC-PIM", "topics": ["fine-grained-visual-categorization", "fgvc", "swin-transformer", "efficientnet", "resnet", "vision-transformer"], "description": "Pytorch implementation for \"A Novel Plug-in Module for Fine-Grained Visual Classification\". fine-grained visual classification task."}
{"name": "chrhenning/hypnettorch", "full_name": "chrhenning/hypnettorch", "topics": ["pytorch", "deep-learning", "hypernetworks", "hypernets", "python", "hypernet", "hypernetwork", "neural-network", "torch"], "description": "Package for working with hypernetworks in PyTorch."}
{"name": "christophalt/pytorch-ie", "full_name": "ChristophAlt/pytorch-ie", "topics": ["information-extraction", "pytorch", "pytorch-lightning", "named-entity-recognition", "relation-extraction", "relation-classification", "datasets", "transformers"], "description": "PyTorch-IE: State-of-the-art Information Extraction in PyTorch"}
{"name": "chriswu1997/multimodal-shape-completion", "full_name": "ChrisWu1997/Multimodal-Shape-Completion", "topics": ["eccv-2020", "shape-completion", "computer-vision", "deep-learning", "computer-graphics"], "description": "code for our ECCV 2020 spotlight paper \"Multimodal Shape Completion via Conditional Generative Adversarial Networks\""}
{"name": "chriswu1997/pq-net", "full_name": "ChrisWu1997/PQ-NET", "topics": ["paper", "3d-shapes", "deep-learning", "cvpr2020"], "description": "code for our CVPR 2020 paper \"PQ-NET: A Generative Part Seq2Seq Network for 3D Shapes\""}
{"name": "chulhongsung/time-series-forecasting", "full_name": "chulhongsung/time-series-forecasting", "topics": ["time-series", "time-series-forecasting", "deep-learning", "pytorch", "tensorflow"], "description": "Tensorflow tutorial repository for time series forecasting models"}
{"name": "clorverccy/gedloss_pytorch", "full_name": "ViEm-ccy/GEDLoss_pytorch", "topics": [], "description": "a pytorch  implementation of Google GEDLoss"}
{"name": "clovaai/frostnet", "full_name": "clovaai/frostnet", "topics": ["deep-learning", "pytorch", "quantization", "quantization-aware-training", "classification", "object-detection", "semantic-segmentation", "style-transfer", "optimizers", "computer-vision", "post-quantization", "quantization-efficient-network", "network-architecture", "int8-quantization"], "description": "FrostNet: Towards Quantization-Aware Network Architecture Search"}
{"name": "cluebenchmark/dataclue", "full_name": "CLUEbenchmark/DataCLUE", "topics": ["data-centric", "nlp", "chinese", "classification-algorithm", "ai", "human-in-the-loop"], "description": "DataCLUE: \u6570\u636e\u4e3a\u4e2d\u5fc3\u7684NLP\u57fa\u51c6\u548c\u5de5\u5177\u5305"}
{"name": "cmpute/d3d", "full_name": "cmpute/d3d", "topics": ["pytorch", "3d-deep-learning", "visualization", "dataset", "object-detection", "object-tracking"], "description": "Devkit for 3D -- Some utils for 3D object detection based on Numpy and Pytorch"}
{"name": "cognlp/cogktr", "full_name": "CogNLP/CogKTR", "topics": ["knowledge", "nlu", "text", "pytorch"], "description": "CogKTR: A Knowledge-Enhanced Text Representation Toolkit for Natural Language Understanding. EMNLP 2022"}
{"name": "compvis/net2net", "full_name": "CompVis/net2net", "topics": ["inn", "pytorch", "lightning", "autoencoders", "gans", "normalizing-flows", "generative-model", "streamlit", "pytorch-lightning"], "description": "Network-to-Network Translation with Conditional Invertible Neural Networks"}
{"name": "cortical-team/neko", "full_name": "cortical-team/neko", "topics": ["deep-learning", "neuromorphic-computing", "learning-algorithms"], "description": null}
{"name": "csebuetnlp/xl-sum", "full_name": "csebuetnlp/xl-sum", "topics": ["abstractive-text-summarization", "text-summarization", "text-summarisation", "abstractive-summarization", "multilingual", "multilinguality", "multilingual-text-summarization", "low-resource-languages", "dataset", "summarization-dataset", "summarization-corpora", "text-summarization-dataset", "text-summarization-model", "low-resource-summarization", "low-resource-text-summarizarion", "multilingual-summarization", "machine-learning", "deep-learning"], "description": "This repository contains the code, data, and models of the paper titled \"XL-Sum: Large-Scale Multilingual Abstractive Summarization for 44 Languages\" published in Findings of the Association for Computational Linguistics: ACL-IJCNLP 2021."}
{"name": "csslab/maia-chess", "full_name": "CSSLab/maia-chess", "topics": ["chess", "chess-engine", "deep-learning", "machine-learning", "computational-social-science"], "description": "Maia is a human-like neural network chess engine trained on millions of human games."}
{"name": "cuge1995/pointcutmix", "full_name": "cuge1995/PointCutMix", "topics": ["point-cloud", "deep-learning", "3d-deep-learning", "data-augmentation"], "description": "our code for paper 'PointCutMix: Regularization Strategy for Point Cloud Classification'"}
{"name": "da-southampton/read_bert_code", "full_name": "DA-southampton/Read_Bert_Code", "topics": [], "description": "Bert\u6e90\u7801\u9605\u8bfb\u4e0e\u8bb2\u89e3(Pytorch\u7248\u672c)-\u4ee5BERT\u6587\u672c\u5206\u7c7b\u4ee3\u7801\u4e3a\u4f8b\u5b50"}
{"name": "dadmatech/dadmatools", "full_name": "Dadmatech/DadmaTools", "topics": ["natural-language-processing", "persian", "nlptoolkit", "tokenizer", "lemmatizer", "postagger", "dependency-parser", "persian-nlp", "ner", "spacy", "constituency-parser", "chunker", "dataset-loader", "embedding-vectors", "embeddings"], "description": "DadmaTools is a Persian NLP tools developed by Dadmatech Co."}
{"name": "daiquocnguyen/qgnn", "full_name": "daiquocnguyen/QGNN", "topics": ["graph-classification", "node-classification", "graph-representation-learning", "quaternion", "graph-neural-networks", "graph-embeddings", "node-embeddings", "text-classification", "hamilton-product", "quaternion-algebra"], "description": "Quaternion Graph Neural Networks (ACML 2021) (Pytorch and Tensorflow)"}
{"name": "danan0755/bert_classifier", "full_name": "danan0755/Bert_Classifier", "topics": [], "description": "bert\u6587\u672c\u5206\u7c7b\uff0cner, albert\uff0ckeras_bert\uff0cbert4keras\uff0ckashgari\uff0cfastbert\uff0cflask + uwsgi + keras\u90e8\u7f72\u6a21\u578b\uff0c\u65f6\u95f4\u5b9e\u4f53\u8bc6\u522b\uff0ctfidf\u5173\u952e\u8bcd\u62bd\u53d6\uff0ctfidf\u6587\u672c\u76f8\u4f3c\u5ea6\uff0c\u7528\u6237\u60c5\u611f\u5206\u6790"}
{"name": "danieltudosiu/nmpevqvae", "full_name": "danieltudosiu/nmpevqvae", "topics": ["deep-learning", "neuroimaging", "neuroinformatics", "vq-vae", "ignite"], "description": "Neuromorphologicaly Preserving Volumetric Data Encoding Using VQ-VAE"}
{"name": "danielzuegner/code-transformer", "full_name": "danielzuegner/code-transformer", "topics": ["deep-learning", "machine-learning", "ml4code", "transformers", "iclr2021"], "description": "Implementation of the paper \"Language-agnostic representation learning of source code from structure and context\". "}
{"name": "darrenjkt/see-mtda", "full_name": "darrenjkt/SEE-MTDA", "topics": ["object-detection", "3d-object-detection", "autonomous-driving", "surface-completion", "unsupervised-domain-adaptation", "computer-vision", "deep-learning"], "description": "(RA-L 2022) See Eye to Eye: A Lidar-Agnostic 3D Detection Framework for Unsupervised Multi-Target Domain Adaptation."}
{"name": "darrenzhang01/excon", "full_name": "DarrenZhang01/ExCon", "topics": ["deep-learning", "artificial-intelligence", "python", "representation-learning", "machine-learning-algorithms"], "description": "ExCon: Explanation-driven Supervised Contrastive Learning"}
{"name": "davidbau/rewriting", "full_name": "davidbau/rewriting", "topics": ["vision", "machine-learning", "graphics", "hci", "gans", "deep-learning", "research"], "description": "Rewriting a Deep Generative Model, ECCV 2020 (oral).  Interactive tool to directly edit the rules of a GAN to synthesize scenes with objects added, removed, or altered.  Change StyleGANv2 to make extravagant eyebrows, or horses wearing hats."}
{"name": "davidzhangyuanhan/noah", "full_name": "ZhangYuanhan-AI/NOAH", "topics": ["prompt-tuning", "transfer-learning", "domain-generalization", "visual-prompting", "pre-trained-model", "pytorch", "deep-learning"], "description": "Searching prompt modules for parameter-efficient transfer learning."}
{"name": "debeshjha/2020-cbms-doubleu-net", "full_name": "DebeshJha/2020-CBMS-DoubleU-Net", "topics": ["semantic-segmentation", "cnn-keras", "u-net", "doubleunet", "unet-image-segmentation", "tensoflow", "doubleu-net", "segmentation-models", "pytorch-implementation", "convolutional-neural-networks", "deep-learning", "image-segmentation", "medical-imaging", "unet"], "description": "DoubleU-Net for Semantic Image Segmentation in TensorFlow & Pytorch (Nominated for Best Paper Award (IEEE CBMS))"}
{"name": "debeshjha/resunetplusplus", "full_name": "DebeshJha/ResUNetPlusPlus", "topics": ["unet", "tensorflow", "image-segmentation", "medical-image-segmentation", "unet-model", "resunet-architecture", "resunet", "resunet-plus-plus", "aspp", "attention", "residual-networks", "squeeze-and-excitation", "conv2d", "pytorch", "pytorch-implementation"], "description": "Official code for ResUNetplusplus for medical image segmentation (TensorFlow & Pytorch implementation) (IEEE ISM)"}
{"name": "debeshjha/resunetplusplus-with-crf-and-tta", "full_name": "DebeshJha/ResUNetPlusPlus-with-CRF-and-TTA", "topics": ["semantic-segmentation", "convolutional-neural-networks", "computer-vision", "image-segmentation", "unet-image-segmentation", "deep-learning", "unet", "resunet", "resunet-architecture", "medical-imaging", "pytorch", "pytorch-implementation", "segmentation", "tensorflow", "image-segmantation"], "description": "ResUNet++, CRF, and TTA  for segmentation of medical images  (IEEE JBIHI)"}
{"name": "deci-ai/super-gradients", "full_name": "Deci-AI/super-gradients", "topics": ["deep-learning", "neural-network", "pretrained-weights", "pretrained-models", "pytorch", "object-detection", "image-classification", "computer-vision", "semantic-segmentation", "imagenet", "transfer-learning"], "description": "Easily train or fine-tune SOTA computer vision models with one open source training library"}
{"name": "declare-lab/dialogue-understanding", "full_name": "declare-lab/dialogue-understanding", "topics": ["dialogue-systems", "dialogue-understanding", "emotion-recognition-in-conversation", "dialogue-act", "conversational-ai", "conversational-agents", "bert-embeddings", "bert", "pretrained-models", "emotion-recognition", "emotion-analysis", "natural-language-processing", "natural-language-understanding", "lstm", "pytorch", "sentiment-analysis", "adversarial-attacks", "explainable-ai", "utterance-level-dialogue", "dialogue"], "description": "This repository contains PyTorch implementation for the baseline models from the paper Utterance-level Dialogue Understanding: An Empirical Study"}
{"name": "deepcam-cn/yolov5-face", "full_name": "deepcam-cn/yolov5-face", "topics": ["yolov5", "tensorrt", "retinaface", "scrfd", "tinaface", "yolo", "pytorch", "arcface", "shufflenet", "blazeface", "yolov7"], "description": "YOLO5Face: Why Reinventing a Face Detector (https://arxiv.org/abs/2105.12931)       ECCV Workshops 2022)"}
{"name": "deepchecks/deepchecks", "full_name": "deepchecks/deepchecks", "topics": ["machine-learning", "ml", "model-validation", "data-validation", "mlops", "data-science", "python", "jupyter-notebook", "model-monitoring", "data-drift", "html-report", "deep-learning", "pytorch", "pandas-dataframe"], "description": "Deepchecks - Tests for Continuous Validation of ML Models & Data. Deepchecks is a Python package for comprehensively validating your machine learning models and data with minimal effort."}
{"name": "deepdoctection/deepdoctection", "full_name": "deepdoctection/deepdoctection", "topics": ["document-parser", "document-image-analysis", "table-recognition", "ocr", "document-ai", "document-understanding", "python", "document-layout-analysis", "table-detection", "pytorch", "tensorflow", "publaynet", "pubtabnet", "layoutlm", "nlp"], "description": "A Repo For Document AI"}
{"name": "deepmind/dks", "full_name": "deepmind/dks", "topics": ["neural-networks", "machine-learning", "deep-learning", "jax", "pytorch", "tensorflow", "artificial-intelligence", "neural-tangent-kernel"], "description": "Multi-framework implementation of Deep Kernel Shaping and Tailored Activation Transformations, which are methods that modify neural network models (and their initializations) to make them easier to train."}
{"name": "deepmind/dm_nevis", "full_name": "deepmind/dm_nevis", "topics": ["benchmark", "continual-learning", "efficient-learning", "jax", "pytorch"], "description": "NEVIS'22: Benchmarking the next generation of never-ending learners"}
{"name": "deeppsp/torch_ecg", "full_name": "DeepPSP/torch_ecg", "topics": ["deep-learning", "ecg", "pytorch"], "description": "Deep learning ECG models implemented using PyTorch"}
{"name": "deepwisdom/autodl", "full_name": "DeepWisdom/AutoDL", "topics": ["autodl", "automl", "nas", "feature-engineering", "model-selection", "full-automl", "artificial-intelligence", "lightgbm", "resnet", "pytorch", "tensorflow", "python", "autodl-challenge", "ai", "deeplearning", "data-science", "machine-learning", "big-data", "multi-label", "automated-machine-learning"], "description": "Automated Deep Learning without ANY human intervention. 1'st Solution for AutoDL challenge@NeurIPS. "}
{"name": "denfed/leaf-audio-pytorch", "full_name": "denfed/leaf-audio-pytorch", "topics": [], "description": "Pytorch port of Google Research's LEAF Audio paper"}
{"name": "dengbocong/nlp-dialogue", "full_name": "DengBoCong/nlp-dialogue", "topics": ["nlp", "bot", "machine-learning", "deep-learning", "bots", "natural-language-processing", "chatbot", "nlu", "conversational-ai"], "description": "A full-process dialogue system that can be deployed online"}
{"name": "dengbocong/nlp-paper", "full_name": "DengBoCong/nlp-paper", "topics": ["dialogue", "speech", "nlp-machine-learning", "paper", "tensorflow2", "pytorch", "nlp", "bert"], "description": "\u81ea\u7136\u8bed\u8a00\u5904\u7406\u9886\u57df\u4e0b\u7684\u76f8\u5173\u8bba\u6587\uff08\u9644\u9605\u8bfb\u7b14\u8bb0\uff09\uff0c\u590d\u73b0\u6a21\u578b\u4ee5\u53ca\u6570\u636e\u5904\u7406\u7b49\uff08\u4ee3\u7801\u542bTensorFlow\u548cPyTorch\u4e24\u7248\u672c\uff09"}
{"name": "dengbocong/text-similarity", "full_name": "DengBoCong/text-similarity", "topics": ["nlp", "deep-learning", "mechine-learing", "similarity", "model", "text-classification", "pytorch", "bert", "transformer"], "description": "\u6587\u672c\u76f8\u4f3c\u5ea6\uff08\u5339\u914d\uff09\u8ba1\u7b97\uff0c\u63d0\u4f9bBaseline\u3001\u8bad\u7ec3\u3001\u63a8\u7406\u3001\u6307\u6807\u5206\u6790...\u4ee3\u7801\u5305\u542bTensorFlow/Pytorch\u53cc\u7248\u672c"}
{"name": "denisbeslic/denovopipeline", "full_name": "denisbeslic/denovopipeline", "topics": ["denovo-assembly", "mass-spectrometry", "machine-learning", "peptide-identification", "pipeline", "pytorch", "tensorflow"], "description": "Pipeline for de novo peptide sequencing (Novor, DeepNovo, SMSNet, PointNovo, Casanovo) and assembly with ALPS."}
{"name": "densechen/arelu", "full_name": "densechen/AReLU", "topics": ["pytorch", "activation-functions", "deep-learning", "attention-mechanism", "transfer-learning", "ai", "python", "attention", "meta-learning"], "description": "AReLU: Attention-based-Rectified-Linear-Unit"}
{"name": "determined-ai/determined", "full_name": "determined-ai/determined", "topics": ["deep-learning", "machine-learning", "ml-platform", "ml-infrastructure", "hyperparameter-optimization", "hyperparameter-search", "distributed-training", "pytorch", "tensorflow", "hyperparameter-tuning", "kubernetes", "data-science", "mlops"], "description": "Determined: Deep Learning Training Platform"}
{"name": "dinghanshen/cutoff", "full_name": "dinghanshen/Cutoff", "topics": ["nlp-machine-learning", "deep-learning", "huggingface-transformers", "fairseq", "augmentation"], "description": "The source code for the Cutoff data augmentation approach proposed in this paper: \"A Simple but Tough-to-Beat Data Augmentation Approach for Natural Language Understanding and Generation\". "}
{"name": "dingkeyan93/dists", "full_name": "dingkeyan93/DISTS", "topics": ["dists", "iqa", "texture", "structure", "similarity", "optimization", "loss-functions", "pytorch", "quality-metrics", "image-quality-assessment"], "description": "IQA: Deep Image Structure and Texture Similarity Metric"}
{"name": "dirtyharrylyl/symnet", "full_name": "DirtyHarryLYL/SymNet", "topics": ["attribute-object", "compositional-zero-shot-learning", "deep-learning", "object-recognition"], "description": "As a part of the HAKE project (HAKE-Object), code for SymNet (CVPR'20 and TPAMI'21)."}
{"name": "disi-unibo-nlp/nlg-metricverse", "full_name": "disi-unibo-nlp/nlg-metricverse", "topics": ["natural-language-processing", "natural-language-generation", "metrics", "python", "pytorch", "language-models", "visualization", "nlg-evaluation"], "description": "[COLING22] An End-to-End Library for Evaluating Natural Language Generation"}
{"name": "dmis-lab/gener", "full_name": "dmis-lab/GeNER", "topics": ["named-entity-recognition", "ner", "dataset", "nlp"], "description": "Simple Questions Generate Named Entity Recognition Datasets (EMNLP 2022)"}
{"name": "dod-advana/gamechanger-ml", "full_name": "dod-advana/gamechanger-ml", "topics": ["dod", "policy-as-code", "ml", "machine-learning", "python", "nlp", "natural-language-processing", "transformer", "mlops"], "description": "GAMECHANGER Machine Learning Repo"}
{"name": "dogyoonlee/rsmix", "full_name": "dogyoonlee/RSMix", "topics": ["data-augmentation", "pointcloud", "deep-learning", "regularization", "modelnet40", "shape-classification", "3d", "3dpointcloud"], "description": "[CVPR 2021] Rigid Subset Mix (RSMix): Regularization Strategy for Point Cloud via Rigidly Mixed Samples"}
{"name": "dorarad/gansformer", "full_name": "dorarad/gansformer", "topics": ["transformers", "gans", "generative-adversarial-networks", "image-generation", "scene-generation", "compositionality", "attention"], "description": "Generative Adversarial Transformers"}
{"name": "doublez0108/mvs", "full_name": "doubleZ0108/MVS", "topics": ["mvs", "multi-view-stereo", "3d-reconstruction", "deep-learning"], "description": "Multi-View Stereo based on deep learning. | Learning notes, codes and more."}
{"name": "dschinagl/occam", "full_name": "dschinagl/occam", "topics": ["3d-object-detection", "autonomous-driving", "explainable-ai", "lidar", "point-cloud", "pytorch", "saliency-map"], "description": "Demo code for the paper: OccAM's Laser"}
{"name": "dusty-nv/jetson-voice", "full_name": "dusty-nv/jetson-voice", "topics": ["speech-recognition", "nlp", "text-to-speech", "jetson", "jetson-nano", "deep-learning", "pytorch", "tensorrt"], "description": "ASR/NLP/TTS deep learning inference library for NVIDIA Jetson using PyTorch and TensorRT"}
{"name": "dvlab-research/blocknerfpytorch", "full_name": "sjtuytc/LargeScaleNeRFPytorch", "topics": ["nerf", "nerf-w", "pytorch-implementation", "block-nerf", "city-nerf", "custum-nerf", "mega-nerf", "view-synthesis", "weekly-nerf", "weekly", "classified", "pytorch-implementations", "pytorch", "pytorch-lightning", "chinese-translation", "deep-learning"], "description": "1. Non-official implementation of Block-NeRF and Mega-NeRF in Pytorch. 2. Train your large-scale NeRF in the wild. 3. Weekly classified NeRF literature."}
{"name": "dvlab-research/largescalenerfpytorch", "full_name": "sjtuytc/LargeScaleNeRFPytorch", "topics": ["nerf", "nerf-w", "pytorch-implementation", "block-nerf", "city-nerf", "custum-nerf", "mega-nerf", "view-synthesis", "weekly-nerf", "weekly", "classified", "pytorch-implementations", "pytorch", "pytorch-lightning", "chinese-translation", "deep-learning"], "description": "1. Non-official implementation of Block-NeRF and Mega-NeRF in Pytorch. 2. Train your large-scale NeRF in the wild. 3. Weekly classified NeRF literature."}
{"name": "dvlab-research/scgan", "full_name": "dvlab-research/SCGAN", "topics": ["deep-learning", "gan", "image-synthesis", "iccv2021", "pytorch", "conditional-gan", "image-rendering", "dynamic-networks"], "description": "The implementation of 'Image synthesis via semantic composition', ICCV2021."}
{"name": "easylearn-fmri/easylearn_dev", "full_name": "easylearn-fmri/easylearn_dev", "topics": ["resting-state-fmri", "machine-learning", "radiomics", "deep-learning", "neuroimaging", "graphic-user-interface"], "description": "Easylearn is designed for machine learning mainly in resting-state fMRI, radiomics and other fields (such as EEG). Easylearn is built on top of scikit-learn, pytorch and other packages. Easylearn can assist doctors and researchers who have limited coding experience to easily realize machine learning, e.g., (MR/CT/PET/EEG)imaging-marker- or other biomarker-based disease diagnosis and prediction, treatment response prediction,  disease subtyping, dimensional decoding for transdiagnostic psychiatric diseases or other diseases, disease mechanism exploration and etc.  "}
{"name": "edisonleeeee/graphgallery", "full_name": "EdisonLeeeee/GraphGallery", "topics": ["graph-neural-networks", "models", "graph", "geometric-deep-learning", "pytorch", "graphgallery", "adversarial-machine-learning", "dgl", "pyg"], "description": "GraphGallery is a gallery for benchmarking Graph Neural Networks."}
{"name": "edisonleeeee/graphwar", "full_name": "EdisonLeeeee/GreatX", "topics": ["adversarial-attacks", "graph-convolutional-networks", "graph-neural-networks", "pytorch", "graph-reliability-toolbox", "distribution-shift", "inherent-noise", "pytorch-geometric"], "description": "A graph reliability toolbox based on PyTorch and PyTorch Geometric (PyG)."}
{"name": "edisonleeeee/greatx", "full_name": "EdisonLeeeee/GreatX", "topics": ["adversarial-attacks", "graph-convolutional-networks", "graph-neural-networks", "pytorch", "graph-reliability-toolbox", "distribution-shift", "inherent-noise", "pytorch-geometric"], "description": "A graph reliability toolbox based on PyTorch and PyTorch Geometric (PyG)."}
{"name": "edouardelasalles/srvp", "full_name": "edouardelasalles/srvp", "topics": ["pytorch", "deep-learning", "video-prediction", "vae", "stochastic", "latent-variable-models", "generative-model", "icml-2020"], "description": "Official implementation of the paper Stochastic Latent Residual Video Prediction"}
{"name": "eezkni/uegan", "full_name": "eezkni/UEGAN", "topics": ["enhancement-and-restoration", "gan", "unsupervised-learning", "generative-adversarial-network", "compter-vision", "image-manipulation"], "description": "[TIP2020] Pytorch implementation of \"Towards Unsupervised Deep Image Enhancement with Generative Adversarial Network\""}
{"name": "eidoslab/torchstain", "full_name": "EIDOSLAB/torchstain", "topics": ["pytorch", "histopathology", "stain-normalization", "computational-pathology", "medical-imaging", "python", "digital-pathology", "numpy", "tensorflow"], "description": "Stain normalization tools for histological analysis and computational pathology"}
{"name": "eliahuhorwitz/conffusion", "full_name": "eliahuhorwitz/Conffusion", "topics": ["computer-vision", "conformal-prediction", "image-generation", "image-to-image", "inpainting", "quantile-regression", "super-resolution", "diffusion-models", "generative-model", "deep-learning", "prediction-intervals", "pytorch", "uncertainty-estimation", "uncertainty-quantification", "diffusion"], "description": "Official Implementation for the \"Conffusion: Confidence Intervals for Diffusion Models\" paper."}
{"name": "eliahuhorwitz/deepsim", "full_name": "eliahuhorwitz/DeepSIM", "topics": ["single-image", "image-editing", "deep-neural-networks", "generative-adversarial-network", "computer-vision", "computer-graphics", "edge-to-image", "segmantation-to-image", "pytorch", "image-to-image-translation", "deep-learning", "iccv2021"], "description": "Official PyTorch implementation of the paper: \"DeepSIM: Image Shape Manipulation from a Single Augmented Training Sample\" (ICCV 2021 Oral)"}
{"name": "elicassion/starformer", "full_name": "elicassion/StARformer", "topics": ["transformer", "reinforcement-learning", "transformer-reinforcement-learning"], "description": "Code for paper StARformer: Transformer with State-Action-Reward Representations."}
{"name": "elttaes/revisiting-plms", "full_name": "elttaes/Revisiting-PLMs", "topics": ["alphafold", "function-prediction", "fitness-prediction", "alphafold2", "benchmark", "contact-prediction", "multiple-sequence-alignment", "protein-annotation", "protein-classification", "protein-language-model", "pytorch", "stability", "esm1b", "metal-ion-binding", "msa-construction", "msa-transformer", "remote-homology-detection", "zero-shot-prediction"], "description": "Exploring Evolution-aware & free protein language models as protein function predictors"}
{"name": "endlesssora/tsit", "full_name": "EndlessSora/TSIT", "topics": ["generative-adversarial-network", "gan", "image-to-image-translation", "image-generation", "image-manipulation", "two-stream-networks", "versatile", "feature-transformation", "multi-scale", "style-transfer", "multi-modal", "semantic-image-synthesis", "eccv2020"], "description": "[ECCV 2020 Spotlight] A Simple and Versatile Framework for Image-to-Image Translation"}
{"name": "enpeizhao/cvprojects", "full_name": "enpeizhao/CVprojects", "topics": ["computer-vision", "machine-learning", "deep-learning", "python"], "description": "computer vision projects |  \u8ba1\u7b97\u673a\u89c6\u89c9\u76f8\u5173\u597d\u73a9\u7684AI\u9879\u76ee"}
{"name": "erfanmhi/deep-reinforcement-learning-cs285-pytorch", "full_name": "erfanMhi/Deep-Reinforcement-Learning-CS285-Pytorch", "topics": ["pytorch", "reinforcement-learning", "deep-learning", "berkeley", "python", "deep-reinforcement-learning", "neural-networks", "openai-gym", "mujoco", "deep-q-learning", "policy-gradient", "actor-critic-algorithm", "model-based-rl", "model-free-rl"], "description": "Solutions of assignments of Deep Reinforcement Learning course presented by the University of California, Berkeley (CS285) in Pytorch framework"}
{"name": "erksch/fnet-pytorch", "full_name": "erksch/fnet-pytorch", "topics": ["transformer", "fnet", "language-model", "pytorch"], "description": "Unofficial PyTorch implementation of Google's FNet: Mixing Tokens with Fourier Transforms. With checkpoints."}
{"name": "ertis-research/kafka-ml", "full_name": "ertis-research/kafka-ml", "topics": ["kafka", "machine-learning", "kubernetes", "tensorflow", "docker", "data-stream", "iot", "keras-tensorflow", "gpu-acceleration", "deep-learning", "keras", "pytorch"], "description": "Kafka-ML: connecting the data stream with ML/AI frameworks (now TensorFlow and PyTorch!)"}
{"name": "esa/torchquad", "full_name": "esa/torchquad", "topics": ["python", "gpu", "pytorch", "torchquad", "numerical-integration", "multidimensional-integration", "integration", "automatic-differentiation", "high-performance-computing", "monte-carlo-integration", "vegas", "vegas-enhanced", "machine-learning"], "description": "Numerical integration in arbitrary dimensions on the GPU using PyTorch / TF / JAX"}
{"name": "evandez/neuron-descriptions", "full_name": "evandez/neuron-descriptions", "topics": ["interpretability", "machine-learning", "research", "computer-vision", "pytorch", "deep-learning"], "description": "Natural Language Descriptions of Deep Visual Features, ICLR 2022"}
{"name": "facebookresearch/neuralcompression", "full_name": "facebookresearch/NeuralCompression", "topics": ["python", "machine-learning", "deep-learning", "compression", "neural-compression", "pytorch", "jax"], "description": "A collection of tools for neural compression enthusiasts."}
{"name": "falkonml/falkon", "full_name": "FalkonML/falkon", "topics": ["kernel-methods", "machine-learning", "large-scale-learning", "kernel", "pytorch", "ai", "python"], "description": "Large-scale, multi-GPU capable, kernel solver"}
{"name": "faresbs/san", "full_name": "faresbs/san", "topics": ["nlp", "gesture-recognition", "language-learning", "action-recognition", "deep-learning"], "description": "The official PyTorch implementation of \"Context Matters: Self-Attention for sign Language Recognition\""}
{"name": "fcakyon/yolov5-pip", "full_name": "fcakyon/yolov5-pip", "topics": ["yolo", "yolov5", "object-detection", "pytorch", "python", "pip", "ultralytics", "yolov3", "yolov4", "machine-learning", "deep-learning", "computer-vision", "aws", "coco", "neptune", "neptune-ai", "s3", "pypi", "cli"], "description": "Packaged version of ultralytics/yolov5 + many extra features"}
{"name": "fdbtrs/cr-fiqa", "full_name": "fdbtrs/CR-FIQA", "topics": ["face-image-quality-assessment", "biometrics", "face-recognition", "cr-fiqa", "pytorch"], "description": "Official repository for CR-FIQA: Face Image Quality Assessment by Learning Sample Relative Classifiability"}
{"name": "fdbtrs/self-restrained-triplet-loss", "full_name": "fdbtrs/Self-restrained-Triplet-Loss", "topics": ["covid-19", "mask", "pytorch", "masked-face-recognition", "masked-face", "triplet-loss", "srt"], "description": "Official repository for Self-restrained Triplet Loss for Accurate Masked Face Recognition"}
{"name": "fedml-ai/fedml", "full_name": "FedML-AI/FedML", "topics": ["federated-learning", "deep-learning", "distributed-training", "blockchain", "edge-ai", "machine-learning", "on-device-training", "inference-engine", "marketplace", "mlops", "privacy", "security"], "description": "FedML - The federated learning and analytics library enabling secure and collaborative machine learning on decentralized data anywhere at any scale. Supporting large-scale cross-silo federated learning, cross-device federated learning on smartphones/IoTs, and research simulation. MLOps and App Marketplace are also enabled (https://open.fedml.ai)."}
{"name": "feng-lab/pytorch-image-models", "full_name": "feng-lab/pytorch-image-models", "topics": [], "description": "Forked from https://github.com/rwightman/pytorch-image-models"}
{"name": "fetchai/colearn", "full_name": "fetchai/colearn", "topics": ["machine-learning", "deep-learning", "python", "blockchain", "priv"], "description": "Colearn is a collection of protocols for running multi-stakeholder machine learning that preserve data privacy"}
{"name": "feymanpriv/pymetric", "full_name": "feymanpriv/pymetric", "topics": ["metric-learning", "classification", "pytorch", "retrieval"], "description": "pytorch metric learning tools and pycls"}
{"name": "fidelity/textwiser", "full_name": "fidelity/textwiser", "topics": ["natural-language-processing", "nlp", "bert", "text-featurization"], "description": "[AAAI 2021] TextWiser: Text Featurization Library"}
{"name": "filippoaleotti/reversing", "full_name": "FilippoAleotti/Reversing", "topics": ["stereo-matching", "monocular-depth-estimation", "computer-vision", "deep-learning", "eccv-2020"], "description": "Code for \"Reversing the cycle: self-supervised deep stereo through enhanced monocular distillation\""}
{"name": "fire717/fireclassification", "full_name": "fire717/FireClassification", "topics": [], "description": "\u57fa\u4e8ePytorch\u7684\u56fe\u50cf\u5206\u7c7b\u6846\u67b6"}
{"name": "fire717/movenet.pytorch", "full_name": "fire717/movenet.pytorch", "topics": ["deep-learning", "pytorch", "pose-estimation", "light-weight-network"], "description": " A Pytorch implementation of MoveNet from Google. Include training code and pre-trained model."}
{"name": "fissoreg/relative-gradient-jacobian", "full_name": "fissoreg/relative-gradient-jacobian", "topics": ["deep-learning", "pytorch", "normalizing-flows", "relative-gradient"], "description": "Relative gradient optimization of the Jacobian term in unsupervised deep learning, NeurIPS 2020"}
{"name": "fnangle/text_classfication-with-bert-pytorch", "full_name": "fnangle/text_classfication-with-bert-pytorch", "topics": [], "description": "nlp text classification task with bert and pytorch on IMDB dataset"}
{"name": "fnangle/text_classfication-with-bert-pytorch-", "full_name": "fnangle/text_classfication-with-bert-pytorch", "topics": [], "description": "nlp text classification task with bert and pytorch on IMDB dataset"}
{"name": "foivospar/ned", "full_name": "foivospar/NED", "topics": ["3dmm", "emotion", "cvpr2022", "pytorch", "deepfakes", "gan", "expression-manipulation", "face-edit", "image-generation", "talking-head", "face"], "description": "PyTorch implementation for NED (CVPR 2022). It can be used to manipulate the facial emotions of actors in videos based on emotion labels or reference styles."}
{"name": "frank-zyw/chinese-text-classification", "full_name": "Frank-ZYW/Chinese-Text-Classification", "topics": [], "description": "\u57fa\u4e8ePytorch\u5b9e\u73b0\u7684\u4e00\u4e9b\u7ecf\u5178\u81ea\u7136\u8bed\u8a00\u5904\u7406\u6a21\u578b\u4e2d\u6587\u77ed\u6587\u672c\u5206\u7c7b\u4efb\u52a1\uff0c\u5305\u542bTextCNN\uff0cTextRCNN\uff0cFastText\uff0cBERT\uff0cROBERT\u4ee5\u53caERNIE"}
{"name": "fundamentalvision/bevformer", "full_name": "fundamentalvision/BEVFormer", "topics": ["deep-learning", "autonomous-driving", "computer-vision", "object-detection"], "description": "[ECCV 2022] This is the official implementation of BEVFormer, a camera-only framework for autonomous driving perception, e.g., 3D object detection and semantic map segmentation."}
{"name": "ganjinzero/kebiolm", "full_name": "GanjinZero/KeBioLM", "topics": ["language-model", "pre-training", "nlp", "biomedical"], "description": "Improving Biomedical Pretrained Language Models with Knowledge [BioNLP 2021]"}
{"name": "gaozhongpai/paiconvmesh", "full_name": "Gaozhongpai/LSAConvMesh", "topics": ["3d-reconstruction", "graph-convolutional-networks", "mesh-generation", "pytorch", "3d-vision"], "description": "Official repository for the paper \"Learning Local Neighboring Structure for Robust 3D Shape Representation\" "}
{"name": "gaparmar/clean-fid", "full_name": "GaParmar/clean-fid", "topics": ["computer-vision", "deep-learning", "computer-graphics", "pytorch", "generative-adversarial-network", "gan", "image-manipulation", "image-generation", "fid-score", "fid-calculation", "fid", "frechet-inception-distance", "frechet-distance"], "description": "PyTorch - FID calculation with proper image resizing and quantization steps [CVPR 2022]"}
{"name": "geohot/tinygrad", "full_name": "geohot/tinygrad", "topics": [], "description": "You like pytorch? You like micrograd? You love tinygrad! \u2764\ufe0f "}
{"name": "georgian-io/pyoats", "full_name": "georgian-io/pyoats", "topics": ["anomaly", "anomaly-detection", "data-science", "time-series", "timeseries", "machine-learning", "deep-learning"], "description": "Quick and Easy Time Series Outlier Detection"}
{"name": "gewelsji/dgnet", "full_name": "GewelsJI/DGNet", "topics": ["deep-learning", "jittor", "pytorch", "camouflage", "camouflaged-object-detection", "concealed-object-detection", "ascend"], "description": "Deep Gradient Network for Camouflaged Object Detection (MIR 2023). Code using PyTorch & Jittor & Huawei-Ascend frameworks are available."}
{"name": "ghosthamlet/gpt2-ml-torch", "full_name": "ghosthamlet/gpt2-ml-torch", "topics": [], "description": "Pytorch model for https://github.com/imcaspar/gpt2-ml"}
{"name": "github-luffy/pfld_68points_pytorch", "full_name": "github-luffy/PFLD_68points_Pytorch", "topics": ["facial-landmarks"], "description": "Implementation of PFLD For 68 Facial Landmarks By Pytorch"}
{"name": "glam-imperial/emotionalconversionstargan", "full_name": "glam-imperial/EmotionalConversionStarGAN", "topics": ["generative-adversarial-network", "stargan", "stargan-vc", "data-augmentation", "emotion-recognition", "speech-synthesis", "deep-learning", "deep-neural-networks", "icassp-2020", "icassp", "imperial-college-london", "augsburg-university", "imperial-glam"], "description": "This repository contains code to replicate results from the ICASSP 2020 paper \"StarGAN for Emotional Speech Conversion: Validated by Data Augmentation of End-to-End Emotion Recognition\"."}
{"name": "godweiyang/nn-cuda-example", "full_name": "godweiyang/NN-CUDA-Example", "topics": ["pytorch", "tensorflow", "cuda", "cpp", "python", "neural-network"], "description": "Several simple examples for popular neural network toolkits calling custom CUDA operators."}
{"name": "golsun/dialogrpt", "full_name": "golsun/DialogRPT", "topics": ["dialog", "pretrained-models", "transformers", "pytorch", "conversational-ai", "dialogpt", "gpt-2", "human-feedback-data", "dataset", "dialog-datasets"], "description": "EMNLP 2020: \"Dialogue Response Ranking Training with Large-Scale Human Feedback Data\""}
{"name": "google-research/big_transfer", "full_name": "google-research/big_transfer", "topics": ["deep-learning", "convolutional-neural-networks", "imagenet", "tensorflow2", "jax", "pytorch", "transfer-learning"], "description": "Official repository for the \"Big Transfer (BiT): General Visual Representation Learning\" paper."}
{"name": "google-research/dataclass_array", "full_name": "google-research/dataclass_array", "topics": ["dataclass", "dataclasses", "jax", "numpy", "tensorflow"], "description": "Dataclasses which can be manipulated as numpy arrays (with batching, reshape, slicing,...)"}
{"name": "google-research/fast-soft-sort", "full_name": "google-research/fast-soft-sort", "topics": ["differentiable", "sorting", "ranking", "pytorch", "tensorflow", "jax"], "description": "Fast Differentiable Sorting and Ranking"}
{"name": "google-research/scenic", "full_name": "google-research/scenic", "topics": ["jax", "computer-vision", "deep-learning", "research", "attention", "transformers", "vision-transformer"], "description": "Scenic: A Jax Library for Computer Vision Research and Beyond"}
{"name": "google/etils", "full_name": "google/etils", "topics": ["python", "numpy", "tensorflow", "jax", "utils"], "description": "Collection of eclectic utils for python."}
{"name": "google/uncertainty-baselines", "full_name": "google/uncertainty-baselines", "topics": ["bayesian-methods", "deep-learning", "machine-learning", "data-science", "tensorflow", "neural-networks", "statistics", "probabilistic-programming"], "description": "High-quality implementations of standard and SOTA methods on a variety of tasks."}
{"name": "gradsflow/chitra", "full_name": "gradsflow/chitra", "topics": ["tensorflow", "image-processing", "object-detection", "deep-learning", "image-dataset", "visualization", "gradcam", "model-interpretation", "model-visualization", "image-classification", "bounding-boxes", "model-deployment", "mlops", "model-serving", "python", "machine-learning", "fastapi", "hacktoberfest", "pytorch"], "description": "A multi-functional library for full-stack Deep Learning. Simplifies Model Building, API development, and Model Deployment."}
{"name": "graphsignal/graphsignal", "full_name": "graphsignal/graphsignal-python", "topics": ["machine-learning", "data-science", "deep-learning", "huggingface", "inference", "jax", "keras", "onnxruntime", "pytorch", "tensorflow", "inference-optimization", "debugging", "monitoring", "python"], "description": "Graphsignal Python agent"}
{"name": "graykode/matorage", "full_name": "graykode/matorage", "topics": ["deep-learning", "storage-manager", "pytorch", "tensorflow"], "description": "Matorage is tensor(multidimensional matrix) object storage manager for deep learning framework(Pytorch, Tensorflow V2, Keras)"}
{"name": "gretelai/gretel-synthetics", "full_name": "gretelai/gretel-synthetics", "topics": ["differential-privacy", "artificial-intelligence", "tensorflow", "privacy", "synthetic-data"], "description": "Synthetic data generators for structured and unstructured text, featuring differentially private learning."}
{"name": "grigorisg9gr/polynomial_nets", "full_name": "grigorisg9gr/polynomial_nets", "topics": ["polynomial-neural-networks", "pi-nets", "image-generation", "mesh-representation-learning", "face-verification", "image-classification", "deep-learning", "deep-neural-networks"], "description": "Official Implementation of the CVPR'20 paper '\u03a0-nets: Deep Polynomial Neural Networks' and its T-PAMI-21 extension."}
{"name": "gsunshine/enjoy-hamburger", "full_name": "Gsunshine/Enjoy-Hamburger", "topics": ["attention", "differentiable-programming", "implicit", "deq", "matrix-factorization", "optimization"], "description": "[ICLR 2021 top 3%] Is Attention Better Than Matrix Decomposition?"}
{"name": "gt-ripl/robo-vln", "full_name": "GT-RIPL/robo-vln", "topics": ["deep-learning", "deep-neural-networks", "supervised-learning", "artificial-intelligence", "robotics", "computer-vision", "language", "transformers", "bert", "pytorch", "python", "habitat-api", "habitat-sim", "vision-and-language", "navigation", "vision-and-language-navigation"], "description": "Pytorch code for ICRA'21 paper: \"Hierarchical Cross-Modal Agent for Robotics Vision-and-Language Navigation\""}
{"name": "gusb3ll/tsuki", "full_name": "Gusb3ll/Tsuki", "topics": ["python", "tensorflow", "pytorch", "deepcreampy", "hent-ai", "anime", "decensoring"], "description": "Manga uncensoring scripts using DeepCreamPy & HentAI combined with custom scripts"}
{"name": "gyunggyung/kogpt2-finetuning", "full_name": "gyunggyung/KoGPT2-FineTuning", "topics": ["nlp", "gpt2", "kogpt2", "finetuning", "korean-nlp", "fine-tuning", "korean", "text-generation", "lyrics-generator", "language-model"], "description": "\ud83d\udd25 Korean GPT-2, KoGPT2 FineTuning cased. \ud55c\uad6d\uc5b4 \uac00\uc0ac \ub370\uc774\ud130 \ud559\uc2b5 \ud83d\udd25"}
{"name": "h-deep/trans-svsr", "full_name": "H-deep/Trans-SVSR", "topics": [], "description": "Pytorch implementation for \"A New Dataset and Transformer for Stereoscopic Video Super-Resolution\""}
{"name": "ha0tang/bigraphgan", "full_name": "Ha0Tang/BiGraphGAN", "topics": ["bmvc", "image-generation", "graph", "bipartite-graphs", "person", "person-image-generation", "selectiongan", "pytorch", "deepfashion", "bmvc20"], "description": "[BMVC 2020 Oral] Bipartite Graph Reasoning GANs for Person Image Generation"}
{"name": "ha0tang/dpgan", "full_name": "Ha0Tang/DPGAN", "topics": ["gan", "generative-adversarial-network"], "description": "[TIP 2021] Layout-to-Image Translation with Double Pooling Generative Adversarial Networks"}
{"name": "ha0tang/xinggan", "full_name": "Ha0Tang/XingGAN", "topics": ["image-generation", "generation", "eccv-2020", "appearance-features", "shape-features", "feature-fusion", "non-local", "crossing", "eccv2020", "pytorch", "deepfashion", "selectiongan"], "description": "[ECCV 2020] XingGAN for Person Image Generation"}
{"name": "habla-liaa/ser-with-w2v2", "full_name": "habla-liaa/ser-with-w2v2", "topics": ["speech-emotion-recognition", "wav2vec2", "deep-learning", "tensorflow", "speech"], "description": "Official implementation of INTERSPEECH 2021 paper 'Emotion Recognition from Speech Using Wav2vec 2.0 Embeddings'"}
{"name": "habout632/stargan2", "full_name": "habout632/StarGAN2", "topics": [], "description": "Unofficial Pytorch version StarGAN v2"}
{"name": "haibo-qiu/synface", "full_name": "haibo-qiu/SynFace", "topics": ["pytorch", "face-recognition", "synthetic-data"], "description": "[ICCV 2021] SynFace: Face Recognition with Synthetic Data"}
{"name": "hari-sikchi/offline_rl", "full_name": "hari-sikchi/offline_rl", "topics": ["reinforcement-learning", "offline-reinforcement", "offline-rl"], "description": "Pytorch implementation of state-of-the-art offline reinforcement learning algorithms."}
{"name": "hasanirtiza/pedesformer-transformer-networks-for-pedestrian-detection", "full_name": "hasanirtiza/PedesFormer-Transformer-Networks-For-Pedestrian-Detection", "topics": ["transformer", "transformers", "pedestrian-detection"], "description": "Transformer Networks for Pedestrian Detection"}
{"name": "hayeonlee/metad2a", "full_name": "HayeonLee/MetaD2A", "topics": ["neural-architecture-search", "pytorch", "meta-learning", "efficient-deep-learning", "machine-learning"], "description": "Official PyTorch implementation of  \"Rapid Neural Architecture Search by Learning to Generate Graphs from Datasets\" (ICLR 2021)"}
{"name": "hccho2/transformer_dateconversion", "full_name": "hccho2/Transformer_DateConversion", "topics": [], "description": "pytorch.nn.Transformer, torchtext, Tensorflow 2, Keras"}
{"name": "heiheiyoyo/uie_pytorch", "full_name": "heiheiyoyo/uie_pytorch", "topics": ["information-extraction", "pytorch", "transformers", "uie"], "description": "PaddleNLP UIE\u6a21\u578b\u7684PyTorch\u7248\u5b9e\u73b0"}
{"name": "hezheug/vibration_gan", "full_name": "hezheug/vibration_gan", "topics": ["tensorflow", "gan", "deep-learning", "imbalanced-learning", "fault-classification", "generative-adversarial-network", "keras"], "description": "Implement GANs to generate time-series signals for imbalanced learning problem. The experiments are conducted using CWRU bearing data."}
{"name": "hkunlp/icl-selective-annotation", "full_name": "HKUNLP/icl-selective-annotation", "topics": ["active-learning", "language-model", "nlp", "sample-selection", "in-context-learning", "natural-language-processing"], "description": "[ICLR 2023] Code for our paper \"Selective Annotation Makes Language Models Better Few-Shot Learners\""}
{"name": "hkunlp/unifiedskg", "full_name": "HKUNLP/UnifiedSKG", "topics": ["natural-language-processing", "pytorch", "huggingface-transformers", "huggingface-datasets", "structured-knowledge-grounding", "semantic-parsing", "question-answering", "data-to-text", "text-generation", "fact-verification", "multi-task-learning", "prompt-learning"], "description": "[EMNLP 2022] A Unified Framework and Analysis for Structured Knowledge Grounding with Text-to-Text Language Models"}
{"name": "hltchkust/caire-covid", "full_name": "HLTCHKUST/CAiRE-COVID", "topics": ["question-answering", "qa", "summarization", "search-engine", "nlp", "kaggle"], "description": "A machine learning-based system that uses state-of-the-art natural language processing (NLP) question answering (QA) techniques combined with summarization for mining the available scientific literature"}
{"name": "hltchkust/ke-dialogue", "full_name": "HLTCHKUST/ke-dialogue", "topics": ["dialogue", "dialogue-system", "pytorch", "gpt", "gpt-2", "knowledge-graph", "knowledge", "mwoz", "smd", "kvr", "opendialkg"], "description": "KE-Dialogue: Injecting knowledge graph into a fully end-to-end dialogue system."}
{"name": "hltchkust/vg-gplms", "full_name": "HLTCHKUST/VG-GPLMs", "topics": ["deep-learning", "summarization", "nlp", "multimodal-deep-learning"], "description": "The code repository for EMNLP 2021 paper \"Vision Guided Generative Pre-trained Language Models for Multimodal Abstractive Summarization\"."}
{"name": "hltchkust/xpersona", "full_name": "HLTCHKUST/Xpersona", "topics": ["crosslingual", "dataset", "bert", "chatbot", "transformer", "dialog"], "description": "XPersona: Evaluating Multilingual Personalized Chatbot"}
{"name": "homebrewnlp/homebrewnlp-jax", "full_name": "HomebrewNLP/Olmax", "topics": ["jax", "tpu", "attention", "transformer", "gpt", "hpc"], "description": "HomebrewNLP in JAX flavour for maintable TPU-Training"}
{"name": "homebrewnlp/olmax", "full_name": "HomebrewNLP/Olmax", "topics": ["jax", "tpu", "attention", "transformer", "gpt", "hpc"], "description": "HomebrewNLP in JAX flavour for maintable TPU-Training"}
{"name": "hongsukchoi/tcmr_release", "full_name": "hongsukchoi/TCMR_RELEASE", "topics": ["video", "temporal", "3d-human-mesh", "3d-human-shape-and-pose-estimation", "3d-human-motion", "cvpr2021"], "description": "Official Pytorch implementation of \"Beyond Static Features for Temporally Consistent 3D Human Pose and Shape from a Video\", CVPR 2021"}
{"name": "houliang1996/slimgan", "full_name": "liang-hou/SlimGAN", "topics": ["gan", "pytorch", "aaai2021"], "description": "Slimmable Generative Adversarial Networks (AAAI 2021)"}
{"name": "houliangict/adcgan", "full_name": "liang-hou/adcgan", "topics": ["cgans", "icml-2022", "pytorch"], "description": "Conditional GANs with Auxiliary Discriminative Classifier (ICML 2022)"}
{"name": "houliangict/slimgan", "full_name": "liang-hou/SlimGAN", "topics": ["gan", "pytorch", "aaai2021"], "description": "Slimmable Generative Adversarial Networks (AAAI 2021)"}
{"name": "hpcaitech/colossalai", "full_name": "hpcaitech/ColossalAI", "topics": ["deep-learning", "hpc", "large-scale", "data-parallelism", "pipeline-parallelism", "model-parallelism", "ai", "big-model", "distributed-computing", "inference", "heterogeneous-training", "foundation-models"], "description": "Making large AI models cheaper, faster and more accessible"}
{"name": "hsiaoliwei/chinese-advertisement-board-identification", "full_name": "HsiaoLiWei/Chinese-advertisement-board-identification", "topics": ["pytorch", "deep-learning", "yolov5", "text-recognition", "text-detection"], "description": "Chinese-Advertisement-Board-Identification.  We use YoloV5 to extract the ROI of the location of  the chinese word. Next, we sort the bounding box and recognize every chinese words which we extracted. The methods which we use are Yolov5, ArgMargin and Focal loss."}
{"name": "hsword/hetu", "full_name": "Hsword/Hetu", "topics": ["deep-learning", "distributed-systems"], "description": "A high-performance distributed deep learning system targeting large-scale and automated distributed training. If you have any interests, please visit/star/fork https://github.com/PKU-DAIR/Hetu"}
{"name": "huangcongqing/mmdetection3d-note", "full_name": "HuangCongQing/mmdetection3d-note", "topics": ["3d-object-detection", "point-cloud", "pytorch", "object-detection", "object-detection-model"], "description": "mmdetection3d  \u4ee3\u7801\u91cd\u70b9\u6ce8\u89e3\u7b14\u8bb0"}
{"name": "huanghuidmml/texttoy", "full_name": "huanghuidmml/tfbert", "topics": ["tensorflow", "bert", "electra", "albert", "trainer", "xla", "mixed-precision", "ernie", "ernie-gram", "chinesebert"], "description": "\u57fa\u4e8etensorflow1.x\u7684\u9884\u8bad\u7ec3\u6a21\u578b\u8c03\u7528\uff0c\u652f\u6301\u5355\u673a\u591a\u5361\u3001\u68af\u5ea6\u7d2f\u79ef\uff0cXLA\u52a0\u901f\uff0c\u6df7\u5408\u7cbe\u5ea6\u3002\u53ef\u7075\u6d3b\u8bad\u7ec3\u3001\u9a8c\u8bc1\u3001\u9884\u6d4b\u3002"}
{"name": "huanghuidmml/tfbert", "full_name": "huanghuidmml/tfbert", "topics": ["tensorflow", "bert", "electra", "albert", "trainer", "xla", "mixed-precision", "ernie", "ernie-gram", "chinesebert"], "description": "\u57fa\u4e8etensorflow1.x\u7684\u9884\u8bad\u7ec3\u6a21\u578b\u8c03\u7528\uff0c\u652f\u6301\u5355\u673a\u591a\u5361\u3001\u68af\u5ea6\u7d2f\u79ef\uff0cXLA\u52a0\u901f\uff0c\u6df7\u5408\u7cbe\u5ea6\u3002\u53ef\u7075\u6d3b\u8bad\u7ec3\u3001\u9a8c\u8bc1\u3001\u9884\u6d4b\u3002"}
{"name": "huangshiyu13/deepfake_detection", "full_name": "huangshiyu13/deepfake_detection", "topics": [], "description": "detect deepfake images(AI\u6362\u8138\u68c0\u6d4b), Pytorch"}
{"name": "huggingface/datasets", "full_name": "huggingface/datasets", "topics": ["nlp", "datasets", "metrics", "evaluation", "pytorch", "tensorflow", "pandas", "numpy", "natural-language-processing", "computer-vision", "machine-learning", "deep-learning", "speech", "hacktoberfest"], "description": "\ud83e\udd17 The largest hub of ready-to-use datasets for ML models with fast, easy-to-use and efficient data manipulation tools"}
{"name": "huggingface/huggingface_hub", "full_name": "huggingface/huggingface_hub", "topics": ["model-hub", "machine-learning", "models", "natural-language-processing", "deep-learning", "pytorch", "pretrained-models", "hacktoberfest"], "description": "All the open source things related to the Hugging Face Hub."}
{"name": "huggingface/optimum", "full_name": "huggingface/optimum", "topics": ["onnx", "pytorch", "inference", "training", "intel", "graphcore", "onnxruntime", "transformers", "quantization", "habana", "optimization"], "description": "\ud83c\udfce\ufe0f Accelerate training and inference of \ud83e\udd17 Transformers with easy to use hardware optimization tools"}
{"name": "hustvl/maptr", "full_name": "hustvl/MapTR", "topics": ["bev", "end-to-end", "real-time", "transformer", "online-hdmap-construction", "shape-representation", "vectorized-hdmap", "autonomous-driving", "iclr2023"], "description": "[ICLR'23 Spotlight] MapTR: Structured Modeling and Learning for Online Vectorized HD Map Construction"}
{"name": "hypergol/hypergol", "full_name": "hypergol/hypergol", "topics": ["machine-learning", "data-science", "performance", "code-generation", "parallel-processing", "data-modelling", "deep-learning", "deployment"], "description": "Hypergol is a Data Science/Machine Learning productivity toolkit to accelerate any projects into production with autogenerated code, standardised structure for data and ML and parallel processing out-of-the-box."}
{"name": "iceclear/mw-gan", "full_name": "IceClear/MW-GAN", "topics": ["mw-gan", "pytorch"], "description": "Official PyTorch implements for Multi-level Wavelet-Based Generative Adversarial Network for Perceptual Quality Enhancement of Compressed Video (ECCV, 2020) and MW-GAN+ for Perceptual Quality Enhancement on Compressed Video (IEEE TCSVT)."}
{"name": "icescentral/mask_public", "full_name": "icescentral/MASK_public", "topics": ["natural-language-processing", "named-entity-recognition", "de-identification", "anonymization"], "description": "Masking identifiable information from health related documents."}
{"name": "icon-lab/syndiff", "full_name": "icon-lab/SynDiff", "topics": ["deep-learning", "medical-imaging", "denoising-diffusion-models", "image-synthesis", "image-to-image-translation"], "description": "Official PyTorch implementation of SynDiff described in the paper (https://arxiv.org/abs/2207.08208)."}
{"name": "idea-ccnl/fengshenbang-lm", "full_name": "IDEA-CCNL/Fengshenbang-LM", "topics": ["chinese-nlp", "pretrained-models", "pytorch", "distributed-training", "transformers", "aigc", "multimodal"], "description": "Fengshenbang-LM(\u5c01\u795e\u699c\u5927\u6a21\u578b)\u662fIDEA\u7814\u7a76\u9662\u8ba4\u77e5\u8ba1\u7b97\u4e0e\u81ea\u7136\u8bed\u8a00\u7814\u7a76\u4e2d\u5fc3\u4e3b\u5bfc\u7684\u5927\u6a21\u578b\u5f00\u6e90\u4f53\u7cfb\uff0c\u6210\u4e3a\u4e2d\u6587AIGC\u548c\u8ba4\u77e5\u667a\u80fd\u7684\u57fa\u7840\u8bbe\u65bd\u3002"}
{"name": "iesl/box-embeddings", "full_name": "iesl/box-embeddings", "topics": ["box-embedding", "deep-learning", "machine-learning"], "description": "Box Embeddings as Modules"}
{"name": "iigroup/maniqa", "full_name": "IIGROUP/MANIQA", "topics": ["nr-iqa", "swintransformer", "vision-transformer", "cvpr2022", "pytorch-implementation", "deep-learning", "csiq", "kadid-10k", "live", "pipal"], "description": "[CVPRW 2022] MANIQA: Multi-dimension Attention Network for No-Reference Image Quality Assessment"}
{"name": "imhuay/studies", "full_name": "imhuay/studies", "topics": ["nlp", "python", "pytorch", "leetcode", "deep-learning", "algorithms", "algorithm"], "description": "Notes of Develop/NLP/DeepLearning/Algorithms/LeetCodes"}
{"name": "imirzadeh/stable-continual-learning", "full_name": "imirzadeh/stable-continual-learning", "topics": ["continual-learning", "catastrophic-forgetting", "pytorch", "lifelong-learning", "deep-learning"], "description": "Towards increasing stability of neural networks for continual learning: https://arxiv.org/abs/2006.06958.pdf (NeurIPS'20)"}
{"name": "incognite-lab/mygym", "full_name": "incognite-lab/myGym", "topics": ["reinforcement-learning", "multi-step-rl", "pick-and-place", "robotic-manipulation", "robotics", "deep-learning", "simulator", "real-time", "robotics-simulation", "simulators", "vision", "multi-network", "semantic-segmentation"], "description": "myGym enables fast prototyping of RL in the area of robotic manipulation and navigation.You can train different robots, in several environments on various tasks. There is automatic evaluation and benchmark tool. From version 2.1 there is support for multi-step tasks, multi-reward training and multi-network architectures."}
{"name": "indolem/indolem", "full_name": "indolem/indolem", "topics": ["indolem", "indobert", "bert", "indonesian-language", "summarization", "dependency-parsing", "glue", "discourse", "sentiment-analysis", "ner", "pos-tagging", "indonesian", "bahasa", "natural-language-processing"], "description": "IndoLEM is a comprehensive Indonesian NLU benchmark, comprising three pillars NLP task: morpho-syntax, semantic, and discourse. Presented in COLING 2020."}
{"name": "indyfree/carla", "full_name": "carla-recourse/CARLA", "topics": ["python", "machine-learning", "artificial-intelligence", "explainable-ai", "explainable-ml", "explainability", "counterfactual-explanations", "counterfactuals", "counterfactual", "recourse", "benchmark", "benchmarking", "tensorflow", "tensorflow2", "pytorch"], "description": "CARLA: A Python Library to Benchmark Algorithmic Recourse and Counterfactual Explanation Algorithms"}
{"name": "inhwanbae/enet-sad_pytorch", "full_name": "InhwanBae/ENet-SAD_Pytorch", "topics": ["lane-detection", "enet", "self-attention-distillation", "pytorch-implementation", "deep-learning", "semantic-segmentation", "pytorch", "python"], "description": "Pytorch implementation of \"Learning Lightweight Lane Detection CNNs by Self Attention Distillation (ICCV 2019)\""}
{"name": "ink-usc/commongen", "full_name": "INK-USC/CommonGen", "topics": ["natural-language-processing", "commonsense-reasoning", "nlg-dataset", "natural-language-generation", "language-generation-dataset", "machine-reasoning", "deep-learning", "text-generation", "nlp-datasets"], "description": "A Constrained Text Generation Challenge Towards Generative Commonsense Reasoning"}
{"name": "intel-isl/deeplagrangianfluids", "full_name": "isl-org/DeepLagrangianFluids", "topics": ["deeplearning", "fluids", "simulation", "convolutional-neural-networks", "convnet", "cnn"], "description": "Code repository for \"Lagrangian Fluid Simulation with Continuous Convolutions\", ICLR 2020."}
{"name": "intel-isl/open3d-ml", "full_name": "isl-org/Open3D-ML", "topics": ["3d-perception", "datasets", "pretrained-models", "lidar", "rgbd", "tensorflow", "pytorch", "visualization", "semantic-segmentation", "object-detection", "3d-object-detection"], "description": "An extension of Open3D to address 3D Machine Learning tasks"}
{"name": "intel/lpot", "full_name": "intel/neural-compressor", "topics": ["low-precision", "pruning", "sparsity", "auto-tuning", "knowledge-distillation", "quantization", "quantization-aware-training", "post-training-quantization", "deep-learning"], "description": "Intel\u00ae Neural Compressor (formerly known as Intel\u00ae Low Precision Optimization Tool), targeting to provide unified APIs for network compression technologies, such as low precision quantization, sparsity, pruning, knowledge distillation, across different deep learning frameworks to pursue optimal inference performance."}
{"name": "intel/neural-compressor", "full_name": "intel/neural-compressor", "topics": ["low-precision", "pruning", "sparsity", "auto-tuning", "knowledge-distillation", "quantization", "quantization-aware-training", "post-training-quantization", "deep-learning"], "description": "Intel\u00ae Neural Compressor (formerly known as Intel\u00ae Low Precision Optimization Tool), targeting to provide unified APIs for network compression technologies, such as low precision quantization, sparsity, pruning, knowledge distillation, across different deep learning frameworks to pursue optimal inference performance."}
{"name": "intel/openfl", "full_name": "intel/openfl", "topics": ["federated-learning", "secure-computation", "openfl", "distributed-computing", "deep-learning", "collaborative-learning", "privacy-preserving-machine-learning", "machine-learning", "fedprox", "fedavg", "federated-analytics", "python", "federated-learning-framework", "federated-deep-learning", "pytorch-federated-learning", "tensorflow-federated-learning", "keras-federated-learning", "distributed-learning", "fedcurv", "fedopt"], "description": "An open framework for Federated Learning."}
{"name": "interdigitalinc/compressai", "full_name": "InterDigitalInc/CompressAI", "topics": ["compression", "deep-learning", "python", "pytorch", "machine-learning", "deep-neural-networks", "neural-network"], "description": "A PyTorch library and evaluation platform for end-to-end compression research"}
{"name": "ipapakis/gcnnmatch", "full_name": "IPapakis/GCNNMatch", "topics": ["multi-object-tracking", "graph-neural-networks", "deep-learning", "computer-vision"], "description": "This repository is the official code implementation of the paper GCNNMatch: Graph Convolutional Neural Networks for Multi-Object Tracking via Sinkhorn Normalization."}
{"name": "iscyy/yoloair", "full_name": "iscyy/yoloair", "topics": ["yolov5", "attention", "backbone", "pytorch", "transformer", "yolor", "yolov3", "yolov4", "yolov7", "yolox", "deep-learning", "yoloair", "scaledyolov4", "yolov6", "ppyolo", "ppyoloe", "tood", "anchor-based", "anchor-free", "yolo"], "description": "\ud83d\udd25\ud83d\udd25\ud83d\udd25YOLOv5, YOLOv6, YOLOv7, YOLOv8, PPYOLOE, YOLOX, YOLOR, YOLOv4, YOLOv3, Transformer, Attention, TOOD and Improved-YOLOv5-YOLOv7... Support to improve backbone, neck, head, loss, IoU, NMS and other modules\ud83d\ude80"}
{"name": "ise-uiuc/freefuzz", "full_name": "ise-uiuc/FreeFuzz", "topics": ["fuzzing", "mining", "pytorch", "tensorflow"], "description": "Free Lunch for Testing: Fuzzing Deep-Learning Libraries from Open Source (ICSE'22)"}
{"name": "isl-org/adaptive-surface-reconstruction", "full_name": "isl-org/adaptive-surface-reconstruction", "topics": ["3d-reconstruction", "3d", "pointcloud", "tensorflow", "pytorch"], "description": "Adaptive Surface Reconstruction for 3D Data Processing"}
{"name": "isl-org/deeplagrangianfluids", "full_name": "isl-org/DeepLagrangianFluids", "topics": ["deeplearning", "fluids", "simulation", "convolutional-neural-networks", "convnet", "cnn"], "description": "Code repository for \"Lagrangian Fluid Simulation with Continuous Convolutions\", ICLR 2020."}
{"name": "isl-org/open3d-ml", "full_name": "isl-org/Open3D-ML", "topics": ["3d-perception", "datasets", "pretrained-models", "lidar", "rgbd", "tensorflow", "pytorch", "visualization", "semantic-segmentation", "object-detection", "3d-object-detection"], "description": "An extension of Open3D to address 3D Machine Learning tasks"}
{"name": "isomap/factedit", "full_name": "isomap/factedit", "topics": ["acl2020", "data-to-text", "text-editing", "text-generation", "nlp", "natural-language-generation", "dataset", "table-to-text", "nlg"], "description": ":monocle_face: Code & Data for Fact-based Text Editing (Iso et al; ACL 2020)"}
{"name": "itailang/geometric_adv", "full_name": "itailang/geometric_adv", "topics": ["point-cloud", "adversarial-attacks", "defense-methods", "autoencoder-model", "geometry-processing", "tensorflow", "pytorch", "3dv2021"], "description": "Geometric Adversarial Attacks and Defenses on 3D Point Clouds (3DV 2021)"}
{"name": "itchyhiker/iris_landmarks_pytorch", "full_name": "digital-nomad-cheng/Iris_Landmarks_PyTorch", "topics": ["iris-dataset", "iris-recognition", "iris-landmarks", "computer-vision", "deep-learning", "ncnn"], "description": "Iris landmarks localization"}
{"name": "iterative/dvclive", "full_name": "iterative/dvclive", "topics": ["machine-learning", "visualization", "developer-tools", "deep-learning", "dvc", "logger"], "description": "Log and track ML metrics, parameters, models with Git and/or DVC"}
{"name": "itmo-nss-team/torch_de_solver", "full_name": "ITMO-NSS-team/torch_DE_solver", "topics": ["equation-solver", "differential-equations", "numerical-methods"], "description": "Combines power of torch, numerical methods to conquer and solve ALL {O,P}DEs"}
{"name": "ivy-dl/ivy", "full_name": "unifyai/ivy", "topics": ["python", "machine-learning", "deep-learning", "neural-network", "gpu", "autograd", "ivy", "abstraction", "template", "tensorflow", "pytorch", "mxnet", "numpy", "jax"], "description": "The Unified Machine Learning Framework"}
{"name": "iwbn/flow-supervisor", "full_name": "iwbn/flow-supervisor", "topics": ["deep-learning", "optical-flow", "pytorch", "tensorflow2"], "description": "Semi-supervised optical flow network "}
{"name": "j3soon/tbparse", "full_name": "j3soon/tbparse", "topics": ["tensorboard", "tensorflow", "pytorch", "tensorboardx", "parser", "plot", "python", "reader", "machine-learning"], "description": "Load tensorboard event logs as pandas DataFrames for scientific plotting; Supports both PyTorch and TensorFlow"}
{"name": "jabb0/fastflow3d", "full_name": "Jabb0/FastFlow3D", "topics": ["point-cloud", "pytorch-lightning", "pytorch", "scene-flow"], "description": "Implementation of the FastFlow3D architecture for scene flow estimation from LiDAR point clouds in PyTorch using PyTorch Lightning."}
{"name": "jack-willturner/gymnastics", "full_name": "jack-willturner/gymnastics", "topics": ["neural-architecture-search", "pytorch", "deep-learning"], "description": "A \"gym\" style toolkit for building lightweight NAS systems. "}
{"name": "jackaduma/las_mandarin_pytorch", "full_name": "jackaduma/LAS_Mandarin_PyTorch", "topics": ["asr", "chinese-speech-recognition", "speech-recognition", "listen-attend-and-spell", "pytorch-implementation", "speech-to-text", "deeplearning", "deep-learning", "mandarin"], "description": "Listen, attend and spell Model and a Chinese Mandarin Pretrained model  (\u4e2d\u6587-\u666e\u901a\u8bdd ASR\u6a21\u578b)"}
{"name": "jacobkrantz/vln-ce", "full_name": "jacobkrantz/VLN-CE", "topics": ["ai", "computer-vision", "robotics", "deep-learning", "research", "python"], "description": "Vision-and-Language Navigation in Continuous Environments using Habitat"}
{"name": "jacopotagliabue/recs-at-resonable-scale", "full_name": "jacopotagliabue/recs-at-resonable-scale", "topics": ["dbt", "deep-learning", "metaflow", "recommender-system", "recsys", "serverless", "reasonable-scale", "reclist"], "description": "Recommendations at \"Reasonable Scale\": joining dataOps with recSys through dbt, Merlin and Metaflow"}
{"name": "janghunhyeon/pcloc", "full_name": "JanghunHyeon/PCLoc", "topics": ["visual-localization", "deep-learning", "indoor-localization", "iccv2021", "image-retrieval", "pose-estimation", "feature-matching"], "description": "Pose Correction for Highly Accurate Visual Localization in Large-scale Indoor Spaces (ICCV 2021)"}
{"name": "janosh/tensorboard-reducer", "full_name": "janosh/tensorboard-reducer", "topics": ["tensorboard", "pytorch", "tensorboard-pytorch", "reducer", "machine-learning", "averaging", "csv", "tensorboard-reducer"], "description": "Reduce multiple PyTorch TensorBoard runs to new event (or CSV) files."}
{"name": "jasonkks/pttr", "full_name": "Jasonkks/PTTR", "topics": ["point-cloud", "pytorch", "tracking", "autonomous-driving"], "description": "Pytorch Implementation of PTTR: Relational 3D Point Cloud Object Tracking with Transformer"}
{"name": "jayleicn/clipbert", "full_name": "jayleicn/ClipBERT", "topics": ["pytorch", "video-retrieval", "video-question-answering", "vqa", "vision-and-language", "cvpr2021"], "description": "[CVPR 2021 Best Student Paper Honorable Mention, Oral] Official PyTorch code for ClipBERT, an efficient framework for end-to-end learning on image-text and video-text tasks. "}
{"name": "jayleicn/tvretrieval", "full_name": "jayleicn/TVRetrieval", "topics": ["video-retrieval", "dataset", "pytorch", "tvr", "tvc"], "description": "[ECCV 2020] PyTorch code for XML on TVRetrieval dataset - TVR: A Large-Scale Dataset for Video-Subtitle Moment Retrieval"}
{"name": "jderobot/rl-studio", "full_name": "JdeRobot/RL-Studio", "topics": ["jderobot", "robotics", "ros", "gazebo", "reinforcement-learning", "artificial-intelligence", "computer-vision", "deep-learning"], "description": "Robotic library for the training of Reinforcement Learning algorithms"}
{"name": "jeffwang0325/image-identification-for-self-driving-cars", "full_name": "JeffWang0325/Image-Identification-for-Self-Driving-Cars", "topics": ["computer-vision", "yolo", "yolov5", "deep-learning", "self-driving-car", "deep-neural-networks", "tensorflow", "pytorch", "convolutional-neural-networks", "traffic-light-classification", "traffic-sign-classification", "tkinter", "tkinter-gui", "tkinter-python", "real-time-detection", "droidcam", "webcam", "webcam-capture", "dr", "python"], "description": "\ud83d\udd8d\ufe0f This project achieves some functions of image identification for Self-Driving Cars. First, use yolov5 for object detection. Second, image classification for traffic light and traffic sign. Furthermore, the GUI of this project makes it more user-friendly for users to realize the image identification for Self-Driving Cars."}
{"name": "jerrodparker20/adaptive-transformers-in-rl", "full_name": "jerrodparker20/adaptive-transformers-in-rl", "topics": ["rl", "pomdp", "transformer", "attention-mechanism", "stabilizing-transformers-for-rl", "adaptive-attention", "transformers-in-rl", "torchbeast", "impala", "monobeast"], "description": "Adaptive Attention Span for Reinforcement Learning"}
{"name": "jerryji1993/dnabert", "full_name": "jerryji1993/DNABERT", "topics": ["kmer", "dnabert-model", "kmer-format", "gpu", "sequence", "genome", "machine-learning", "deep-learning", "natural-language-processing", "nlp"], "description": "DNABERT: pre-trained Bidirectional Encoder Representations from Transformers model for DNA-language in genome"}
{"name": "jetrunner/bert-of-theseus", "full_name": "JetRunner/BERT-of-Theseus", "topics": ["bert", "transformers", "nlp", "glue", "model-compression"], "description": "\u26f5\ufe0fThe official PyTorch implementation for \"BERT-of-Theseus: Compressing BERT by Progressive Module Replacing\" (EMNLP 2020)."}
{"name": "jh-jeong/contrad", "full_name": "jh-jeong/ContraD", "topics": ["deep-learning", "generative-adversarial-network", "gan", "contrastive-learning", "unsupervised-learning", "data-augmentation", "iclr2021", "pytorch"], "description": "Code for the paper \"Training GANs with Stronger Augmentations via Contrastive Discriminator\" (ICLR 2021)"}
{"name": "jhyuklee/densephrases", "full_name": "princeton-nlp/DensePhrases", "topics": ["nlp", "open-domain-qa", "slot-filling", "knowledge-base", "information-retrieval", "passage-retrieval"], "description": "ACL'2021: Learning Dense Representations of Phrases at Scale; EMNLP'2021: Phrase Retrieval Learns Passage Retrieval, Too https://arxiv.org/abs/2012.12624"}
{"name": "jiachens/modelnet40-c", "full_name": "jiachens/ModelNet40-C", "topics": ["deep-learning", "point-cloud-processing", "robustness", "computer-vision", "benchmark", "data-augmentation", "regularization", "corruption-robustness", "ml-safety", "pytorch"], "description": "Repo for \"Benchmarking Robustness of 3D Point Cloud Recognition against Common Corruptions\"  https://arxiv.org/abs/2201.12296"}
{"name": "jianghaojun/condensenetv2", "full_name": "jianghaojun/CondenseNetV2", "topics": ["deep-learning", "computer-vision", "cvpr2021", "mobile-networks", "pytorch"], "description": "[CVPR 2021] CondenseNet V2: Sparse Feature Reactivation for Deep Networks"}
{"name": "jianzhnie/autotabular", "full_name": "jianzhnie/AutoTabular", "topics": ["automl", "structured-data", "pytorch-lightning", "hpo", "tabular-data", "scikit-learn", "xgboost", "lightgbm", "catboost", "machine-learning", "data-science", "feature-engineering", "deep-learning"], "description": "Automatic machine learning for tabular data. \u26a1\ud83d\udd25\u26a1"}
{"name": "jiaweihe1996/gmtracker", "full_name": "jiaweihe1996/GMTracker", "topics": ["pytorch", "deep-learning", "tracking-by-detection"], "description": "Official PyTorch implementation of \"Learnable Graph Matching: Incorporating Graph Partitioning with Deep Feature Learning for Multiple Object Tracking\" (CVPR 2021). "}
{"name": "jiexiaou/idt", "full_name": "jiexiaou/IDT", "topics": ["deep-learning", "image-deraining", "image-restoration", "pytorch", "transformer"], "description": "Official repository for the paper \"Image Deraining Transformer\"."}
{"name": "jina-ai/docarray", "full_name": "docarray/docarray", "topics": ["docarray", "data-structures", "multimodal", "cross-modal", "neural-search", "unstructured-data", "deep-learning", "nested-data", "qdrant", "weaviate", "sqlite", "nearest-neighbor-search", "protobuf", "graphql", "elasticsearch", "dataclass", "multi-modal", "semantic-search", "vector-search"], "description": "\ud83e\uddec The data structure for multimodal data \u00b7 Neural Search \u00b7 Vector Search \u00b7 Document Store"}
{"name": "jina-ai/examples", "full_name": "jina-ai/examples", "topics": ["jina", "examples", "tutorials", "onboarding", "neural-search", "python", "deep-learning", "semantic-search", "nlp"], "description": "Jina examples and demos to help you get started"}
{"name": "jina-ai/jina-hub", "full_name": "jina-ai/jina-hub", "topics": ["jina", "neural-search", "jina-hub", "containerization", "marketplace", "neural-network", "deep-learning", "machine-learning", "cloud-native", "microservice"], "description": "An open-registry for hosting Jina executors via container images"}
{"name": "jingtaozhan/drhard", "full_name": "jingtaozhan/DRhard", "topics": ["information-retrieval", "pytorch", "web-search"], "description": "SIGIR'21: Optimizing DR with hard negatives and achieving SOTA first-stage retrieval performance on TREC DL Track."}
{"name": "jingtaozhan/jpq", "full_name": "jingtaozhan/JPQ", "topics": ["information-retrieval", "web-search", "dense-retrieval", "product-quantization", "compression", "efficiency", "deep-learning", "pytorch"], "description": "CIKM'21: JPQ substantially improves the efficiency of Dense Retrieval with 30x compression ratio, 10x CPU speedup and 2x GPU speedup."}
{"name": "jk96491/rl_algorithms", "full_name": "jk96491/RL_Algorithms", "topics": ["ppo", "a2c", "a3c", "ddpg", "dqn", "reinforce", "pytorch", "tensorflow"], "description": "Take the code of the reinforcement learning algorithm here~"}
{"name": "jmribeiro/yaaf", "full_name": "jmribeiro/yaaf", "topics": ["autonomous-agents", "reinforcement-learning", "deep-learning"], "description": "Yet Another Agents Framework - An RL research-oriented framework for agent prototyping and evaluation"}
{"name": "joennlae/halutmatmul", "full_name": "joennlae/halutmatmul", "topics": ["machine-learning", "matrix-multiplication", "pytorch", "amm", "cuda", "cuda-kernels"], "description": "Hashed Lookup Table based Matrix Multiplication (halutmatmul) built on MADDness/bolt"}
{"name": "joffery/m-ada", "full_name": "joffery/M-ADA", "topics": [], "description": "The Pytorch implementation for \"Learning to Learn Single Domain Generalization\" (CVPR 2020)"}
{"name": "jonasgeiping/breaching", "full_name": "JonasGeiping/breaching", "topics": ["security", "machine-learning", "pytorch", "federated-learning", "decentralized-learning", "privacy-audit"], "description": "Breaching privacy in federated learning scenarios for vision and text"}
{"name": "jonasschult/mask3d", "full_name": "JonasSchult/Mask3D", "topics": ["3d-computer-vision", "computer-vision", "deep-learning", "deep-neural-networks", "pytorch"], "description": "Mask3D predicts accurate 3D semantic instances achieving state-of-the-art on ScanNet, ScanNet200, S3DIS and STPLS3D."}
{"name": "jtchen0528/pcl-i2g", "full_name": "jtchen0528/PCL-I2G", "topics": ["deepfake-detection", "consistency", "self-supervision", "pytorch", "deepfakes", "faceforensics"], "description": "Unofficial Implementation: Learning Self-Consistency for Deepfake Detection"}
{"name": "jtl1207/comic-translation", "full_name": "jtl1207/comic-translation", "topics": ["ocr", "deep-learning", "manga", "paddleocr", "chinese-translation", "text-detection"], "description": "\u57fa\u4e8e\u6df1\u5ea6\u5b66\u4e60\u7684\u6f2b\u753b\u7ffb\u8bd1\u8f85\u52a9\u5de5\u5177\uff0c\u5305\u542b\u7ffb\u8bd1\u3001\u6717\u8bfb\u3001\u56fe\u50cf\u53bb\u5b57\u3001\u81ea\u52a8\u5d4c\u5b57\u529f\u80fd\u3002  \u76ee\u7684\u662f\u5e2e\u52a9\u975e\u4e13\u4e1a\u6c49\u5316\u4eba\u5458\u5b8c\u6210\u66f4\u7b80\u5355\uff0c\u5feb\u901f\u7684\u7ffb\u8bd1\u4efb\u52a1\u3002"}
{"name": "juliawolleb/diffusion-based-segmentation", "full_name": "JuliaWolleb/Diffusion-based-Segmentation", "topics": [], "description": "This is the official Pytorch implementation of the paper \"Diffusion Models for Implicit Image Segmentation Ensembles\"."}
{"name": "julilien/labelrelaxation", "full_name": "julilien/LabelRelaxation", "topics": ["machine-learning", "deep-learning", "label-relaxation", "label-smoothing", "calibration", "regularization"], "description": "Supplementary material and code for the novel label relaxation approach as presented at AAAI21 by Julian Lienen and Eyke H\u00fcllermeier."}
{"name": "junction4nako/mvp_pytorch", "full_name": "Junction4Nako/mvp_pytorch", "topics": [], "description": "pytorch implementation of mvp: a multi-stage vision-language pre-training framework"}
{"name": "junnyu/gau-alpha-pytorch", "full_name": "JunnYu/GAU-alpha-pytorch", "topics": [], "description": "GAU-alpha-pytorch"}
{"name": "junnyu/roformer_pytorch", "full_name": "JunnYu/RoFormer_pytorch", "topics": ["pytorch", "roformer-v1", "roformer-v2", "language-model"], "description": "RoFormer V1 & V2 pytorch"}
{"name": "junshutang/3dfaceshop", "full_name": "junshutang/3DFaceShop", "topics": [], "description": "3DFaceShop: Explicitly Controllable 3D-Aware Portrait Generation (Official Pytorch Implementation)"}
{"name": "jw9730/hot", "full_name": "jw9730/hot", "topics": ["transformer", "graph", "equivariance", "pytorch", "self-attention", "gnn", "hypergraph"], "description": "[NeurIPS'21] Higher-order Transformers for sets, graphs, and hypergraphs, in PyTorch"}
{"name": "kaleidophon/deep-significance", "full_name": "Kaleidophon/deep-significance", "topics": ["significance-testing", "deep-learning", "dl", "hypothesis-testing", "hypothesis-tests", "statistical-significance", "statistical-significance-test", "machine-learning", "ml", "deeplearning", "machinelearning", "compare-scores", "deep-neural-networks"], "description": "Enabling easy statistical significance testing for deep neural networks. "}
{"name": "kaleidophon/token2index", "full_name": "Kaleidophon/token2index", "topics": ["indexing", "token", "nlp", "pytorch", "tensorflow", "numpy", "w2i", "t2i", "stoi", "itos", "i2t", "i2w", "deeplearning", "seq2seq", "deep-learning", "python", "transformers", "rnn", "rnns", "transformer"], "description": "A lightweight but powerful library to build token indices for NLP tasks, compatible with major Deep Learning frameworks like PyTorch and Tensorflow."}
{"name": "karel911/tracer", "full_name": "Karel911/TRACER", "topics": ["pytorch", "aaai2022", "aaai-2022", "pytorch-implementation", "image-segmentation", "salient-object-detection", "attention", "attention-mechanism", "background-removal"], "description": "TRACER: Extreme Attention Guided Salient Object Tracing Network (AAAI 2022) implementation in PyTorch"}
{"name": "karnwatcharasupat/latte", "full_name": "karnwatcharasupat/latte", "topics": ["machine-learning", "python", "deep-learning"], "description": "Latte: Cross-framework Python Package for Evaluation of Latent-based Generative Models"}
{"name": "kaylode/theseus", "full_name": "kaylode/theseus", "topics": ["template", "pytorch", "classification", "segmentation", "computer-vision", "natural-language-processing", "object-detection", "structured-data"], "description": "General template for most Pytorch projects"}
{"name": "keonlee9420/comprehensive-tacotron2", "full_name": "keonlee9420/Comprehensive-Tacotron2", "topics": ["text-to-speech", "tts", "tacotron", "tacotron2", "pytorch", "speech-synthesis", "autoregressive", "single-speaker", "multi-speaker", "robustness", "efficiency", "comprehensive", "neural-tts", "mel-gan", "hifi-gan", "reduction-factor", "diagonal-guided-attention", "deep-learning"], "description": "PyTorch Implementation of Google's Natural TTS Synthesis by Conditioning WaveNet on Mel Spectrogram Predictions. This implementation supports both single-, multi-speaker TTS and several techniques to enforce the robustness and efficiency of the model."}
{"name": "keonlee9420/comprehensive-transformer-tts", "full_name": "keonlee9420/Comprehensive-Transformer-TTS", "topics": ["text-to-speech", "supervised", "unsupervised", "non-autoregressive", "non-ar", "multi-speaker", "ultimate-tts", "tts", "pytorch", "comprehensive", "single-speaker", "fastspeech", "transformer", "neural-tts", "fastspeech2", "hifi-gan", "mel-gan", "sota", "speech-synthesis", "deep-learning"], "description": "A Non-Autoregressive Transformer based Text-to-Speech, supporting a family of SOTA transformers with supervised and unsupervised duration modelings. This project grows with the research community, aiming to achieve the ultimate TTS"}
{"name": "keonlee9420/cross-speaker-emotion-transfer", "full_name": "keonlee9420/Cross-Speaker-Emotion-Transfer", "topics": ["emotion-transfer", "cross-speaker", "global-style-tokens", "conditional-layer-normalization", "text-to-speech", "deep-neural-networks", "pytorch", "tts", "speech-synthesis", "generative-model", "parallel-tacotron", "neural-tts", "non-ar", "non-autoregressive", "semi-supervised-learning"], "description": "PyTorch Implementation of ByteDance's Cross-speaker Emotion Transfer Based on Speaker Condition Layer Normalization and Semi-Supervised Training in Text-To-Speech"}
{"name": "keonlee9420/daft-exprt", "full_name": "keonlee9420/Daft-Exprt", "topics": ["text-to-speech", "style", "pytorch", "tts", "speech-synthesis", "english", "speaker", "prosody", "prosody-transfer", "gaussian-upsampling", "neural-tts", "non-autoregressive"], "description": "PyTorch Implementation of Daft-Exprt: Robust Prosody Transfer Across Speakers for Expressive Speech Synthesis"}
{"name": "keonlee9420/portaspeech", "full_name": "keonlee9420/PortaSpeech", "topics": ["text-to-speech", "normalizing-flows", "generative-model", "deep-neural-networks", "pytorch", "tts", "speech-synthesis", "neural-tts", "non-autoregressive", "portable-tts", "vae", "fastspeech", "hifi-gan", "non-ar", "mel-gan", "high-quality"], "description": "PyTorch Implementation of PortaSpeech: Portable and High-Quality Generative Text-to-Speech"}
{"name": "keonlee9420/robust_fine_grained_prosody_control", "full_name": "keonlee9420/Robust_Fine_Grained_Prosody_Control", "topics": ["speech-synthesis", "pytorch", "robust", "prosody", "tts", "expressive-speech-synthesis", "expressive-tts", "text-to-speech", "controllable-tts", "controllable-speech-synthesis"], "description": "PyTorch Implementation of Robust and fine-grained prosody control of end-to-end speech synthesis"}
{"name": "keras-team/keras-nlp", "full_name": "keras-team/keras-nlp", "topics": ["deep-learning", "keras", "machine-learning", "nlp", "tensorflow"], "description": "Modular Natural Language Processing workflows with Keras"}
{"name": "kevinnan-teen/intelligent-traffic-based-on-cv", "full_name": "Kevinnan-teen/Intelligent-Traffic-Based-On-CV", "topics": ["yolov3", "pytorch", "srs", "python"], "description": "\u672c\u9879\u76ee\u662f\u57fa\u4e8e\u8ba1\u7b97\u673a\u89c6\u89c9\u7684\u7aef\u5230\u7aef\u4ea4\u901a\u8def\u53e3\u667a\u80fd\u76d1\u63a7\u7cfb\u7edf\uff0e\u91c7\u7528\u7684\u8bbe\u8ba1\u67b6\u6784\u7531SRS\u6d41\u5a92\u4f53\u670d\u52a1\u5668\u3001GPU\u670d\u52a1\u5668\u3001Local\u5ba2\u6237\u7aef\u4e09\u90e8\u5206\u7ec4\u6210\uff0e\u53ef\u5c06\u8fdc\u7aef\u89c6\u9891\u6d41\u901a\u8fc7rtmp\u534f\u8bae\u4f20\u8f93\u5230\u6d41\u5a92\u4f53\u670d\u52a1\u5668\uff0c\u7136\u540e\u7ecf\u8fc7\u76ee\u6807\u68c0\u6d4b\u7b49\u4e00\u4e9b\u5217\u7b97\u6cd5\u5bf9\u89c6\u9891\u8fdb\u884c\u5206\u6790\uff0c\u6700\u540e\u5728\u672c\u5730\u5ba2\u6237\u7aef\u67e5\u770b\u5206\u6790\u7ed3\u679c\uff0e\u9879\u76ee\u4e3b\u8981\u7528Python\u5b9e\u73b0\uff0c\u6d41\u5a92\u4f53\u670d\u52a1\u5668\u91c7\u7528\u5f00\u6e90\u7684SRS\u5b9e\u65f6\u89c6\u9891\u670d\u52a1\u5668\u642d\u5efa\uff0cGPU\u670d\u52a1\u5668\u4f7f\u7528YOLO\u6a21\u578b\u5b9e\u73b0\u9053\u8def\u76ee\u6807\u5982\u4eba\u3001\u8f66\u3001\u4ea4\u901a\u706f\u7b49\u7269\u4f53\u7684\u8bc6\u522b\uff0c\u540c\u65f6\u8fd8\u652f\u6301\u5e76\u53d1\u8fde\u63a5\uff0e\u5ba2\u6237\u7aef\u57fa\u4e8ePyQt5\u8fdb\u884c\u5f00\u53d1\uff0e"}
{"name": "khanld/asr-wav2vec-finetune", "full_name": "khanld/ASR-Wav2vec-Finetune", "topics": ["asr", "pytorch", "speech-recognition", "wav2vec2", "finetune-wav2vec", "huggingface", "speech-to-text", "vietnamese-speech-recognition"], "description": ":zap: Finetune Wa2vec 2.0 For Speech Recognition"}
{"name": "ki-ljl/fedavg-numpy-pytorch-tff", "full_name": "ki-ljl/FedAvg-numpy-pytorch-tff", "topics": ["federated-learning", "fedavg", "numpy", "pytorch", "tff"], "description": "Three implementations of FedAvg: numpy, pytorch and tensorflow federated."}
{"name": "klarh/geometric_algebra_attention", "full_name": "klarh/geometric_algebra_attention", "topics": [], "description": "Geometric algebra attention mechanism for tensorflow, keras, pytorch, and jax"}
{"name": "kniter1/tailor", "full_name": "kniter1/TAILOR", "topics": [], "description": "Pytorch implementation for Tailor Versatile Multi-modal Learning for Multi-label Emotion Recognition"}
{"name": "konfuzio-ai/konfuzio-sdk", "full_name": "konfuzio-ai/konfuzio-sdk", "topics": ["python", "nlp", "computer-vision", "ocr", "document-extraction", "text-classification", "text-processing", "document-annotate", "document-annotation", "document-annotation-tool"], "description": "OCR, extract and classify documents. In addition, annotate documents and build your own NLP and Computer Vision models using Python by downloading the data. Find examples in our Colab Notebooks, e. g. how to fine-tune Flair."}
{"name": "koziev/verslibre", "full_name": "Koziev/verslibre", "topics": ["poetry", "text-generation", "poetry-generator", "gpt", "neural-network", "russian-language"], "description": "Using transformers to generate Russian poetry"}
{"name": "kssteven418/ltp", "full_name": "kssteven418/LTP", "topics": ["natural-language-processing", "transformer", "bert", "pruning", "model-compression", "efficient-model", "efficient-neural-networks"], "description": "[KDD'22] Learned Token Pruning for Transformers "}
{"name": "kuroko1t/nne", "full_name": "kuroko1t/nne", "topics": ["pytorch", "onnx", "tensorflow", "tensorrt", "torchscript"], "description": "convert a pytorch model to a model for edge device."}
{"name": "kwotsin/mimicry", "full_name": "kwotsin/mimicry", "topics": ["generative-adversarial-networks", "gans", "reproducibility", "pytorch", "generative-models", "machine-learning", "gan", "sngan", "sngan-projection", "wgan-gp", "ssgan", "dcgan", "infomax-gan", "cgan", "cvpr", "python", "cvpr2020", "cvpr20"], "description": "[CVPR 2020 Workshop] A PyTorch GAN library that reproduces research results for popular GANs."}
{"name": "kywen1119/dsran", "full_name": "kywen1119/DSRAN", "topics": ["pytorch", "image-text-matching", "tcsvt", "cross-modal", "computer-vision"], "description": "Code for journal paper \"Learning Dual Semantic Relations with Graph Attention for Image-Text Matching\", TCSVT, 2020."}
{"name": "l0sg/nanoflow", "full_name": "L0SG/NanoFlow", "topics": ["normalizing-flows", "deep-generative-model", "density-estimation", "speech-synthesis", "pytorch", "probabilistic-models", "generative-models"], "description": "PyTorch implementation of the paper \"NanoFlow: Scalable Normalizing Flows with Sublinear Parameter Complexity.\" (NeurIPS 2020)"}
{"name": "laitathei/yolov7-pytorch-segmentation", "full_name": "laitathei/YOLOv7-Pytorch-Segmentation", "topics": ["yolov5", "yolov7-segmentation", "pytorch", "realsense-camera", "ros"], "description": "YOLOv7 segmentation pytorch implementation guide"}
{"name": "langfield/asta", "full_name": "langfield/asta", "topics": [], "description": "Shape annotations for numpy arrays and pytorch/tensorflow tensors."}
{"name": "laughing-q/yolov5-q", "full_name": "Laughing-q/yolov5-q", "topics": ["pytorch", "segmentation", "deep-learning", "detection"], "description": "This repo is planning for instance segmentation based on yolov5-6.0 and yolact."}
{"name": "layerai/sdk", "full_name": "layerai-archive/sdk", "topics": ["machine-learning", "collaboration", "data-science", "data-versioning", "deep-learning", "experiment-tracking", "hyperparameter-optimization", "hyperparameter-tuning", "keras", "mlops", "model-versioning", "python", "pytorch", "reinforcement-learning", "sklearn", "tensorflow"], "description": "Metadata store for Production ML"}
{"name": "lemonatsu/a-nerf", "full_name": "LemonATsu/A-NeRF", "topics": [], "description": "Pytorch implementation for A-NeRF: Articulated Neural Radiance Fields for Learning Human Shape, Appearance, and Pose"}
{"name": "lemonatsu/danbo-pytorch", "full_name": "LemonATsu/DANBO-pytorch", "topics": [], "description": "Pytorch implementation for DANBO: Disentangled Articulated Neural Body Representations via Graph Neural Networks"}
{"name": "leondgarse/keras_cv_attention_models", "full_name": "leondgarse/keras_cv_attention_models", "topics": ["tensorflow", "visualizing", "keras", "attention", "model", "imagenet", "coco", "recognition", "detection", "anchor-free", "tf", "tf2"], "description": "Keras beit,botnet,CMT,CoaT,CoAtNet,convnext,cotnet,davit,efficientdet,edgenext,efficientformer,efficientnet,fbnet,flexivit,gcvit,ghostnet,gmlp,gpvit,halonet,hornet,iformer,lcnet,levit,maxvit,mlp-mixer,mobilevit,nat,nfnets,pvt,regnet,resmlp,resnest,resnext,resnetd,swin,tinynet,uniformer,volo,wavemlp,yolor,yolov7,yolox"}
{"name": "lhao499/instructrl", "full_name": "lhao499/instructrl", "topics": ["flax", "instruction-following", "instructions", "jax", "machine-learning", "reinforcement-learning", "transformer", "vision-language-transformer"], "description": null}
{"name": "lhwcv/mlsd_pytorch", "full_name": "lhwcv/mlsd_pytorch", "topics": [], "description": "Pytorch implementation of \"M-LSD: Towards Light-weight and Real-time Line Segment Detection\""}
{"name": "liang-hou/adcgan", "full_name": "liang-hou/adcgan", "topics": ["cgans", "icml-2022", "pytorch"], "description": "Conditional GANs with Auxiliary Discriminative Classifier (ICML 2022)"}
{"name": "lightning-ai/lightning-flash", "full_name": "Lightning-AI/lightning-flash", "topics": ["pytorch-lightning", "deep-learning", "machine-learning", "pytorch", "tasks-flash", "classification", "tabular-data", "object-detection", "icevision", "open3d", "fiftyone", "torch-geometric", "pytorch-video"], "description": "Your PyTorch AI Factory - Flash enables you to easily configure and run complex AI recipes for over 15 tasks across 7 data domains"}
{"name": "lightning-ai/tutorials", "full_name": "Lightning-AI/tutorials", "topics": ["tutorials", "jupyter-notebook", "machine-learning", "deep-learning", "notebooks", "python-scripts", "lightning"], "description": "Collection of Pytorch lightning tutorial form as rich scripts automatically transformed to ipython notebooks."}
{"name": "liguge/1d-grad-cam-for-intelligent-fault-diagnosis", "full_name": "liguge/1D-Grad-CAM-for-interpretable-intelligent-fault-diagnosis", "topics": ["deep-learning", "fault-diagnosis"], "description": "\u667a\u80fd\u6545\u969c\u8bca\u65ad\u4e2d\u4e00\u7ef4\u7c7b\u68af\u5ea6\u6fc0\u6d3b\u6620\u5c04\u53ef\u89c6\u5316\u5c55\u793a   1D-Grad-CAM for interpretable intelligent fault diagnosis"}
{"name": "liguge/1d-grad-cam-for-interpretable-intelligent-fault-diagnosis", "full_name": "liguge/1D-Grad-CAM-for-interpretable-intelligent-fault-diagnosis", "topics": ["deep-learning", "fault-diagnosis"], "description": "\u667a\u80fd\u6545\u969c\u8bca\u65ad\u4e2d\u4e00\u7ef4\u7c7b\u68af\u5ea6\u6fc0\u6d3b\u6620\u5c04\u53ef\u89c6\u5316\u5c55\u793a   1D-Grad-CAM for interpretable intelligent fault diagnosis"}
{"name": "linfeng93/large-unidet", "full_name": "linfeng93/Large-UniDet", "topics": ["mmdetection", "pytorch", "robust-vision", "universal-object-detection"], "description": "A practice for million-scale multi-domain universal object detection"}
{"name": "linzichuan/admrl", "full_name": "LinZichuan/AdMRL", "topics": ["meta-reinforcement-learning", "model-based-rl", "adversarial-training", "tensorflow"], "description": "Code for paper \"Model-based Adversarial Meta-Reinforcement Learning\" (https://arxiv.org/abs/2006.08875)"}
{"name": "lisennlp/bert_crf_sequence_annotation", "full_name": "Lisennlp/bert_crf_sequence_annotation", "topics": [], "description": "\u57fa\u4e8ePytorch+BERT+CRF\u7684NLP\u5e8f\u5217\u6807\u6ce8\u6a21\u578b\uff0c\u76ee\u524d\u5305\u62ec\u5206\u8bcd\uff0c\u8bcd\u6027\u6807\u6ce8\uff0c\u547d\u540d\u5b9e\u4f53\u8bc6\u522b\u7b49"}
{"name": "liu2231665/taan-mtl", "full_name": "yingrliu/TAAN-MTL", "topics": ["multi-task-learning", "deep-neural-networks", "pytorch"], "description": "Adaptive Activation Network and Functional Regularization for Efficient and Flexible Deep Multi-Task Learning"}
{"name": "liuruiyang98/jittor-mlp", "full_name": "liuruiyang98/Jittor-MLP", "topics": ["deep-learning", "pytorch", "jittor", "papers"], "description": "Unofficial Implementation of MLP-Mixer, gMLP, resMLP, Vision Permutator, S2MLP, S2MLPv2, RaftMLP, HireMLP, ConvMLP, AS-MLP, SparseMLP, ConvMixer, SwinMLP, RepMLPNet, WaveMLP, MorphMLP, DynaMixer, MS-MLP, Sequencer2D in Jittor and PyTorch! Now, Rearrange and Reduce in einops.layers.jittor are support!! trunc_normal_ is supported for Jittor!! MLP Paper is uploaded!"}
{"name": "liuruoze/mini-alphastar", "full_name": "liuruoze/mini-AlphaStar", "topics": ["mini-alphastar", "supervised-learning", "reinforcement-learning", "starcraft2", "deep-learning", "pytorch", "self-playing-bot", "multi-agent-systems", "gaming", "imitation-learning", "starcraft2-ai", "starcraft-ii-bot", "sc2replay", "deep-reinforcement-learning", "deep-neural-networks"], "description": "A mini-scale reproduction code of the AlphaStar program. Note: the original AlphaStar is the AI proposed by DeepMind to play StarCraft II."}
{"name": "liusongxiang/efficient_tts", "full_name": "liusongxiang/efficient_tts", "topics": [], "description": "Pytorch implementation of \"Efficienttts: an efficient and high-quality text-to-speech architecture\""}
{"name": "lizhaoliu-lec/imageaestheticassessmentpytorch", "full_name": "lizhaoliu-Lec/ImageAestheticAssessmentPyTorch", "topics": ["deeplearning", "aesthetic-assessment", "pytorch", "pytorch-implementation", "covolution-neural-network", "transformer"], "description": "Image Aesthetic Assessment in PyTorch with implemented popular datasets and models (possibly providing the pretrained ones)."}
{"name": "llyx97/rosita", "full_name": "llyx97/Rosita", "topics": ["bert", "knowledge-distillation", "model-compression", "pytorch"], "description": "[AAAI 2021] \"ROSITA: Refined BERT cOmpreSsion with InTegrAted techniques\", Yuanxin Liu, Zheng Lin, Fengcheng Yuan"}
{"name": "lmbxmu/supervit", "full_name": "lmbxmu/SuperViT", "topics": [], "description": "Official Pytorch implementation of Super Vision Transformer"}
{"name": "logintelligence/logadempirical", "full_name": "LogIntelligence/LogADEmpirical", "topics": ["deep-learning", "log-analysis", "log-based-anomaly-detection"], "description": "Log-based Anomaly Detection with Deep Learning: How Far Are We? (ICSE 2022, Technical Track)"}
{"name": "lolrudy/gpv_pose", "full_name": "lolrudy/GPV_Pose", "topics": [], "description": "pytorch implementation of GPV-Pose"}
{"name": "lonepatient/bert-attribute-value-extract", "full_name": "lonePatient/BERT-Attribute-Value-Extract", "topics": ["pytorch", "bert", "attribute-value-extract", "lstm", "crf", "attention"], "description": "A Pytorch implementation of \"Scaling Up Open Tagging from Tens to Thousands: Comprehension Empowered Attribute Value Extraction from Product Title\" (ACL 2019)."}
{"name": "lonepatient/electra_pytorch", "full_name": "lonePatient/electra_pytorch", "topics": ["electra", "pytorch", "bert", "nlp", "deeplearning", "glue", "language-model"], "description": " ELECTRA: Pre-training Text Encoders as Discriminators Rather Than Generators "}
{"name": "lonepatient/nezha_chinese_pytorch", "full_name": "lonePatient/NeZha_Chinese_PyTorch", "topics": ["chinese", "pytorch", "language-model", "nezha"], "description": "NEZHA: Neural Contextualized Representation for Chinese Language Understanding"}
{"name": "lonepatient/torchblocks", "full_name": "lonePatient/TorchBlocks", "topics": ["pytorch", "nlp", "text-classification", "triplet-loss", "siamese-network", "text-similarity", "multilabel-classification", "advertising", "bert", "transformers", "relation-classification", "named-entity-recognition"], "description": "A PyTorch-based toolkit for natural language processing"}
{"name": "loretoparisi/hf-experiments", "full_name": "loretoparisi/hf-experiments", "topics": ["huggingface", "huggingface-transformer", "deep-learning", "nlp", "python", "python3", "summarization", "emotions", "sentiment", "translation", "speech-recognition", "automatic-speech-recognition", "topic-detection", "topic-modeling", "question-answering"], "description": "Experiments with Hugging Face \ud83d\udd2c \ud83e\udd17"}
{"name": "lturing/tacotronv2_wavernn_chinese", "full_name": "lturing/tacotronv2_wavernn_chinese", "topics": [], "description": "tacotronV2 + wavernn \u5b9e\u73b0\u4e2d\u6587\u8bed\u97f3\u5408\u6210(Tensorflow + pytorch) "}
{"name": "lucid1ty/yolov5forcsgo", "full_name": "Lucid1ty/Yolov5ForCSGO", "topics": ["csgo", "detection", "yolov5", "auto-aim", "english", "aimbot", "autoaim", "chinese", "computer-vision", "object-detection", "python", "python3", "pytorch"], "description": "CSGO character detection and auto aim"}
{"name": "lucidrains/bottleneck-transformer-pytorch", "full_name": "lucidrains/bottleneck-transformer-pytorch", "topics": ["artificial-intelligence", "deep-learning", "transformers", "attention-mechanism", "image-classification", "vision"], "description": "Implementation of Bottleneck Transformer in Pytorch"}
{"name": "lucidrains/electra-pytorch", "full_name": "lucidrains/electra-pytorch", "topics": ["artificial-intelligence", "deep-learning", "pre-training", "transformer"], "description": "A simple and working implementation of Electra, the fastest way to pretrain language models from scratch, in Pytorch"}
{"name": "lucidrains/lambda-networks", "full_name": "lucidrains/lambda-networks", "topics": ["artificial-intelligence", "deep-learning", "computer-vision", "attention-mechanism", "attention"], "description": "Implementation of LambdaNetworks, a new approach to image recognition that reaches SOTA with less compute"}
{"name": "lucko515/cnn-raccoon", "full_name": "lucko515/cnn-raccoon", "topics": ["convolutional-neural-networks", "deep-learning", "explainable-ml", "tensorflow", "keras", "pytorch", "dashboards", "visualization-tools"], "description": "Create interactive dashboards for your Convolutional Neural Networks with a single line of code!"}
{"name": "luka-group/lattice", "full_name": "luka-group/Lattice", "topics": ["attention-mechanism", "equivariance", "equivariant-network", "equivariant-representations", "table-to-text", "transformer"], "description": "[NAACL 2022] Robust (Controlled) Table-to-Text Generation with Structure-Aware Equivariance Learning. "}
{"name": "lukashedegaard/datasetops", "full_name": "LukasHedegaard/datasetops", "topics": ["dataset-combinations", "data-science", "multiple-datasets", "pytorch", "tensorflow", "data-munging", "data-wrangling", "data-cleaning", "data-processing", "deep-learning", "dataset"], "description": "Fluent dataset operations, compatible with your favorite libraries"}
{"name": "lukaszahradnik/pyneuralogic", "full_name": "LukasZahradnik/PyNeuraLogic", "topics": ["machine-learning", "deep-learning", "graph-neural-networks", "relational-learning", "python", "geometric-deep-learning", "pytorch", "logic-programming", "differentiable-programming"], "description": "PyNeuraLogic lets you use Python to create Differentiable Logic Programs"}
{"name": "mabaorui/neuralpull", "full_name": "mabaorui/NeuralPull", "topics": ["3d-reconstruction", "deep-learning", "icml", "point-cloud", "tensorflow"], "description": "Implementation of ICML'2021:Neural-Pull: Learning Signed Distance Functions from Point Clouds by Learning to Pull Space onto Surfaces"}
{"name": "maiot-io/zenml", "full_name": "zenml-io/zenml", "topics": ["mlops", "machine-learning", "data-science", "production-ready", "devops-tools", "zenml", "pipelines", "metadata-tracking", "deep-learning", "pytorch", "tensorflow", "ml", "ai", "automl", "hacktobe", "hacktoberfest", "workflow"], "description": "ZenML \ud83d\ude4f: Build portable, production-ready MLOps pipelines. https://zenml.io."}
{"name": "manhph2211/bkai-challenge-vietnamese-ocr", "full_name": "manhph2211/BKAI-Challenge-Vietnamese-OCR", "topics": ["text-detection", "dbnet", "dbnetplus", "transocr", "vietnamese-ocr", "ensemble-text-detection", "scene-text-generator", "bkai", "text-recognition", "pytorch", "ocr", "scene-text-detection-recognition"], "description": "This is our solution dealing with BKAI challenge :smile: "}
{"name": "marload/aquvitae", "full_name": "marload/aquvitae", "topics": ["tensorflow", "pytorch", "light-weight", "deep-learning", "machine-learning", "knowledge-distillation", "model-compression"], "description": "Knowledge Distillation Toolkit"}
{"name": "martinsbruveris/tensorflow-image-models", "full_name": "martinsbruveris/tensorflow-image-models", "topics": ["tensorflow", "imagenet", "vision-transformer"], "description": "TensorFlow port of PyTorch Image Models (timm) - image models with pretrained weights."}
{"name": "maryamboneh/vehicle-detection", "full_name": "MaryamBoneh/Vehicle-Detection", "topics": ["deep-learning", "yolov5", "image-processing", "fine-tuning", "object-detection", "python", "dataset", "car-counting", "vehicle-counting", "yolo"], "description": "Vehicle Detection Using Deep Learning and YOLO Algorithm"}
{"name": "mascerade/supervised-product-matching", "full_name": "Mascerade/supervised-product-matching", "topics": ["python", "machine-learning", "neural-network", "product-matching", "bert", "pytorch", "nlp", "natural-language-processing", "transformer", "characterbert"], "description": "\u2696\ufe0f Neural network for product matching, aka classifying whether two product titles represent the same entity"}
{"name": "materialsvirtuallab/maml", "full_name": "materialsvirtuallab/maml", "topics": ["materials-science", "machine-learning", "deep-learning", "machine-learning-force-field", "spectroscopy", "materials-discovery"], "description": "Python for Materials Machine Learning, Materials Descriptors, Machine Learning Force Fields, Deep Learning, etc."}
{"name": "matthias-wright/flaxmodels", "full_name": "matthias-wright/flaxmodels", "topics": ["stylegan2", "gpt2", "resnet", "vgg", "jax", "flax", "pretrained-models", "deep-learning"], "description": "Pretrained deep learning models for Jax/Flax: StyleGAN2, GPT2, VGG, ResNet, etc."}
{"name": "maximintegratedai/ai8x-training", "full_name": "MaximIntegratedAI/ai8x-training", "topics": ["max78000", "maxim", "machine-learning", "maxim-integrated", "ai", "artificial-intelligence", "deep-learning", "analog-devices", "max78002"], "description": "Model Training for ADI's MAX78000 and MAX78002 AI Devices"}
{"name": "mboudiaf/pytorch-meta-dataset", "full_name": "mboudiaf/pytorch-meta-dataset", "topics": ["few-shot-learning", "few-shot-classifcation", "meta-dataset", "pytorch", "tfrecorddataset"], "description": "A non-official 100% PyTorch implementation of META-DATASET benchmark for few-shot classification"}
{"name": "mczhi/dipp", "full_name": "MCZhi/DIPP", "topics": ["deep-learning", "prediction-model"], "description": "Differentiable Integrated Prediction and Planning Framework for Urban Autonomous Driving  https://mczhi.github.io/DIPP/"}
{"name": "megvii-research/sparsebit", "full_name": "megvii-research/Sparsebit", "topics": ["deep-learning", "post-training-quantization", "pruning", "quantization", "quantization-aware-training", "sparse", "tensorrt"], "description": "A model compression and acceleration toolbox based on pytorch."}
{"name": "meijieru/yet_another_mobilenet_series", "full_name": "meijieru/yet_another_mobilenet_series", "topics": [], "description": "Yet Another Pytorch Distributed MobileNetV2-based Networks Implementation"}
{"name": "menyifang/adgan", "full_name": "menyifang/ADGAN", "topics": ["pose-transfer", "generative-adversarial-network", "gan", "pytorch", "virtual-try-on", "image-synthesis"], "description": "The Implementation of paper \"Controllable Person Image Synthesis with Attribute-Decomposed GAN\" CVPR 2020 (Oral); Pose and Appearance Attributes Transfer;"}
{"name": "menyifang/dct-net", "full_name": "menyifang/DCT-Net", "topics": ["cartoonization", "gan", "generative-adversarial-network", "portrait", "siggraph2022", "style-transfer"], "description": "Official implementation of \"DCT-Net: Domain-Calibrated Translation for Portrait Stylization\", SIGGRAPH 2022 (TOG); Multi-style cartoonization"}
{"name": "messi-q/amevuldetector", "full_name": "Messi-Q/AMEVulDetector", "topics": ["smart-contracts", "vulnerability-detection", "expert-knowledge", "deep-learning"], "description": "Smart Contract Vulnerability Detection From Pure Neural Network to Interpretable Graph Feature and Expert Pattern Fusion (IJCAI-21 Accepted)"}
{"name": "mftnakrsu/automatic_number_plate_recognition_yolo_ocr", "full_name": "mftnakrsu/Automatic_Number_Plate_Recognition_YOLO_OCR", "topics": ["detection", "easyocr", "object", "object-detection", "ocr", "yolo", "yolov5", "csv", "database", "flask", "paddleocr", "realtime", "ai", "artificial-intelligence", "computer-vision", "deep-learning", "machine-learning", "opencv", "python"], "description": "Automatic number plate recognition using tech:  Yolo, OCR, Scene text detection, scene text recognation, flask, torch"}
{"name": "microsoft/adamix", "full_name": "microsoft/AdaMix", "topics": ["adapter", "nlp", "pytorch", "parameter-efficient", "bert", "glue", "nlu", "roberta", "dart", "gpt-2", "nlg", "webnlg"], "description": "This is the implementation of the paper AdaMix: Mixture-of-Adaptations for Parameter-efficient Model Tuning (https://arxiv.org/abs/2205.12410). "}
{"name": "microsoft/archai", "full_name": "microsoft/archai", "topics": ["python", "pytorch", "machine-learning", "deep-learning", "neural-architecture-search", "nas", "automated-machine-learning", "model-compression", "darts", "petridish", "hyperparameter-optimization", "automl"], "description": "Accelerate your Neural Architecture Search (NAS) through fast, reproducible and modular research."}
{"name": "microsoft/astra", "full_name": "microsoft/ASTRA", "topics": ["weak-supervision", "nlp", "machine-learning", "weakly-supervised-learning"], "description": "Self-training with Weak Supervision (NAACL 2021)"}
{"name": "microsoft/bringing-old-photos-back-to-life", "full_name": "microsoft/Bringing-Old-Photos-Back-to-Life", "topics": ["image-restoration", "old-photo-restoration", "generative-adversarial-network", "gans", "pytorch", "image-manipulation", "photo-restoration", "photos"], "description": "Bringing Old Photo Back to Life (CVPR 2020 oral)"}
{"name": "microsoft/deepspeed", "full_name": "microsoft/DeepSpeed", "topics": ["deep-learning", "pytorch", "gpu", "machine-learning", "billion-parameters", "data-parallelism", "model-parallelism", "inference", "pipeline-parallelism", "compression", "mixture-of-experts", "trillion-parameters", "zero"], "description": "DeepSpeed is a deep learning optimization library that makes distributed training and inference easy, efficient, and effective."}
{"name": "microsoft/lmops", "full_name": "microsoft/LMOps", "topics": ["nlp", "agi", "gpt", "llm", "lm", "pretraining", "prompt", "lmops", "promptist", "x-prompt", "language-model"], "description": "General technology for enabling AI capabilities w/ LLMs and MLLMs"}
{"name": "microsoft/lora", "full_name": "microsoft/LoRA", "topics": ["gpt-2", "adaptation", "language-model", "gpt-3", "low-rank", "pytorch", "deep-learning", "roberta", "deberta"], "description": "Code for loralib, an implementation of \"LoRA: Low-Rank Adaptation of Large Language Models\""}
{"name": "microsoft/nn-meter", "full_name": "microsoft/nn-Meter", "topics": ["python", "deep-neural-networks", "latency", "inference", "edge-computing", "edge-ai", "tensorflow-models", "onnx-models", "pytorch", "machine-learning", "deep-learning", "neural-architecture-search", "efficient-model"], "description": "A DNN inference latency prediction toolkit for accurately modeling and predicting the latency on diverse edge devices. "}
{"name": "microsoft/qlib", "full_name": "microsoft/qlib", "topics": ["quantitative-finance", "machine-learning", "stock-data", "platform", "finance", "algorithmic-trading", "python", "investment", "quant", "quantitative-trading", "quant-dataset", "quant-models", "auto-quant", "fintech", "research-paper", "paper", "research", "deep-learning"], "description": "Qlib is an AI-oriented quantitative investment platform, which aims to realize the potential, empower the research, and create the value of AI technologies in quantitative investment. With Qlib, you can easily try your ideas to create better Quant investment strategies. An increasing number of  SOTA Quant research works/papers are released in Qlib."}
{"name": "microsoft/simxns", "full_name": "microsoft/SimXNS", "topics": ["dense-retrieval", "information-retrieval", "natural-language-processing", "negative-mining", "negative-sampling"], "description": "SimXNS, a research project for information retrieval, containing official implementations, by MSRA NLC IR team."}
{"name": "microsoft/styleswin", "full_name": "microsoft/StyleSwin", "topics": ["computer-vision", "deep-learning", "deep-neural-networks", "pytorch", "generative-adversarial-network", "gans", "image-generation", "image-synthesis", "styleswin", "transformer"], "description": "[CVPR 2022] StyleSwin: Transformer-based GAN for High-resolution Image Generation"}
{"name": "microsoft/xpretrain", "full_name": "microsoft/XPretrain", "topics": ["multimodal-learning", "pre-training", "multimedia", "computer-vision", "nlp"], "description": "Multi-modality pre-training"}
{"name": "miemie2013/keras-solo", "full_name": "miemie2013/Keras-SOLO", "topics": ["keras", "solo", "solov2", "solov1"], "description": "Keras-SOLO(Segmenting Objects by Locations)"}
{"name": "miemie2013/keras-yolov4", "full_name": "miemie2013/Keras-YOLOv4", "topics": ["yolov4", "yolo", "keras", "diou", "ciou", "ppyolo"], "description": "yolov4 42.0% mAP.ppyolo 45.1% mAP."}
{"name": "mihdalal/raps", "full_name": "mihdalal/raps", "topics": ["deep-learning", "reinforcement-learning", "robotics", "primitives", "artificial-intelligence"], "description": "[NeurIPS 2021] PyTorch Code for Accelerating Robotic Reinforcement Learning with Parameterized Action Primitives"}
{"name": "mikel-brostrom/yolov5_deepsort_osnet", "full_name": "mikel-brostrom/yolov8_tracking", "topics": ["strongsort", "bytetrack", "ocsort", "osnet", "deep-learning", "segmentation", "tensorrt", "tracking-by-detection", "yolo", "botsort"], "description": "Real-time multi-object tracking and segmentation using YOLOv8"}
{"name": "mikel-brostrom/yolov5_deepsort_pytorch", "full_name": "mikel-brostrom/yolov8_tracking", "topics": ["strongsort", "bytetrack", "ocsort", "osnet", "deep-learning", "segmentation", "tensorrt", "tracking-by-detection", "yolo", "botsort"], "description": "Real-time multi-object tracking and segmentation using YOLOv8"}
{"name": "mikel-brostrom/yolov5_strongsort_osnet", "full_name": "mikel-brostrom/yolov8_tracking", "topics": ["strongsort", "bytetrack", "ocsort", "osnet", "deep-learning", "segmentation", "tensorrt", "tracking-by-detection", "yolo", "botsort"], "description": "Real-time multi-object tracking and segmentation using YOLOv8"}
{"name": "mims-harvard/raindrop", "full_name": "mims-harvard/Raindrop", "topics": ["time-series", "representation-learning", "deep-learning", "graph-neural-networks", "embeddings", "irregular-time-series", "machine-learning"], "description": "Graph Neural Networks for Irregular Time Series"}
{"name": "mims-harvard/tdc", "full_name": "mims-harvard/TDC", "topics": ["machine-learning", "therapeutics", "drug-discovery", "datasets", "biology", "chemistry", "biomedicine", "bioinformatics", "cheminformatics", "deep-learning", "benchmarks", "artificial-intelligence", "precision-medicine"], "description": "Therapeutics Data Commons: Artificial Intelligence Foundation for Therapeutic Science"}
{"name": "mindee/doctr", "full_name": "mindee/doctr", "topics": ["ocr", "deep-learning", "document-recognition", "tensorflow2", "text-detection-recognition", "text-detection", "text-recognition", "optical-character-recognition", "pytorch"], "description": "docTR (Document Text Recognition) - a seamless, high-performing & accessible library for OCR-related tasks powered by Deep Learning."}
{"name": "minghchen/carl_code", "full_name": "minghchen/CARL_code", "topics": [], "description": "Pytorch code for Frame-wise Action Representations for Long Videos via Sequence Contrastive Learning, CVPR2022."}
{"name": "minivision-ai/photo2cartoon", "full_name": "minivision-ai/photo2cartoon", "topics": ["cartoon", "deep-learning", "computer-vision", "gan", "avatar-generator"], "description": "\u4eba\u50cf\u5361\u901a\u5316\u63a2\u7d22\u9879\u76ee (photo-to-cartoon translation project)"}
{"name": "minjunkang/dualpixelface", "full_name": "MinJunKang/DualPixelFace", "topics": ["deep-learning", "depth-estimation", "dual-pixel", "face-reconstruction", "normal-estimation"], "description": "Facial Depth and Normal Estimation using Dual-Pixel Camera (ECCV 22)"}
{"name": "minqi824/adbench", "full_name": "Minqi824/ADBench", "topics": ["anomaly-detection", "benchmark", "data-mining", "deep-learning", "machine-learning", "outlier-detection", "semi-supervised-learning", "supervised-learning", "unsupervised-learning", "data-sicence", "ensemble-learning", "neural-networks", "python"], "description": "Official Implement of \"ADBench: Anomaly Detection Benchmark\"."}
{"name": "mit-acl/nn_robustness_analysis", "full_name": "mit-acl/nn_robustness_analysis", "topics": ["robustness-verification", "robustness-analysis", "neural-networks", "control-systems", "adversarial-attacks", "reachability-analysis", "deep-learning", "robotics"], "description": "Python tools for analyzing the robustness properties of neural networks (NNs) from MIT ACL"}
{"name": "mit-han-lab/data-efficient-gans", "full_name": "mit-han-lab/data-efficient-gans", "topics": ["gans", "pytorch", "tensorflow", "data-efficient", "generative-adversarial-network", "image-generation", "neurips-2020"], "description": "[NeurIPS 2020] Differentiable Augmentation for Data-Efficient GAN Training"}
{"name": "mit-han-lab/mcunet", "full_name": "mit-han-lab/mcunet", "topics": ["deep-learning", "neural-architecture-search", "pytorch", "tinyml", "microncontroller"], "description": "[NeurIPS 2020] MCUNet: Tiny Deep Learning on IoT Devices; [NeurIPS 2021] MCUNetV2: Memory-Efficient Patch-based Inference for Tiny Deep Learning"}
{"name": "mit-han-lab/pytorch-quantum", "full_name": "mit-han-lab/torchquantum", "topics": ["pytorch-quantum", "quantum", "quantum-machine-learning", "neural-network", "machine-learning", "quantum-computing", "pytorch", "deep-learning", "system", "ml-for-systems", "quantum-simulation", "quantum-neural-network", "parameterized-quantum-circuit"], "description": "A PyTorch-based framework for Quantum Simulation, Quantum Machine Learning, Quantum Neural Networks, Parameterized Quantum Circuits with support for easy deployments on real quantum computers."}
{"name": "mit-han-lab/torchquantum", "full_name": "mit-han-lab/torchquantum", "topics": ["pytorch-quantum", "quantum", "quantum-machine-learning", "neural-network", "machine-learning", "quantum-computing", "pytorch", "deep-learning", "system", "ml-for-systems", "quantum-simulation", "quantum-neural-network", "parameterized-quantum-circuit"], "description": "A PyTorch-based framework for Quantum Simulation, Quantum Machine Learning, Quantum Neural Networks, Parameterized Quantum Circuits with support for easy deployments on real quantum computers."}
{"name": "mlech26l/ncps", "full_name": "mlech26l/ncps", "topics": ["ncp", "recurrent-neural-network", "nature-machine-intelligence", "tensorflow", "keras", "cfc"], "description": "PyTorch and TensorFlow implementation of NCP, LTC, and CfC wired neural models"}
{"name": "mlf-core/machine_learning_determinism_evaluation", "full_name": "mlf-core/machine_learning_determinism_evaluation", "topics": ["nextflow", "pytorch", "gpu", "cuda", "deeplearning"], "description": "GPU deterministic machine learning with Nextflow"}
{"name": "mloptpsu/fedtorch", "full_name": "MLOPTPSU/FedTorch", "topics": ["federated-learning", "distributed-optimization", "distributed", "pytorch", "mpi"], "description": "FedTorch is a generic repository for benchmarking different federated and distributed learning algorithms using PyTorch Distributed API."}
{"name": "mlrichter/receptive_field_analysis_toolbox", "full_name": "MLRichter/receptive_field_analysis_toolbox", "topics": ["pytorch", "visualization", "deep-learning", "neural-networks", "machine-learning", "neural-architecture-optimization", "neural-architecture-search", "tensorflow", "receptive-field", "receptive-field-analysis", "hacktoberfest"], "description": "A toolbox for receptive field analysis and visualizing neural network architectures"}
{"name": "mmsir/gainedvae", "full_name": "mmSir/GainedVAE", "topics": ["compression"], "description": "A Pytorch Implementation of a continuously rate adjustable learned image compression framework."}
{"name": "modelscope/modelscope", "full_name": "modelscope/modelscope", "topics": ["nlp", "cv", "speech", "multi-modal", "science", "deep-learning", "machine-learning", "python"], "description": "ModelScope: bring the notion of Model-as-a-Service to life."}
{"name": "monologg/kobigbird", "full_name": "monologg/KoBigBird", "topics": ["nlp", "transformers", "pytorch", "bert", "korean-nlp", "bigbird"], "description": "\ud83e\udd85 Pretrained BigBird Model for Korean (up to 4096 tokens)"}
{"name": "monologg/koelectra", "full_name": "monologg/KoELECTRA", "topics": ["electra", "korean-nlp", "pytorch", "transformers", "tensorflow2", "tensorflow", "nlp", "language-model"], "description": "Pretrained ELECTRA Model for Korean"}
{"name": "mourga/contrastive-active-learning", "full_name": "mourga/contrastive-active-learning", "topics": ["active-learning", "natural-language-processing", "acquisition-functions", "deep-learning"], "description": "Code for the EMNLP 2021 Paper \"Active Learning by Acquiring Contrastive Examples\" & the ACL 2022 Paper \"On the Importance of Effectively Adapting Pretrained Language Models for Active Learning\""}
{"name": "mpatacchiola/contextual-squeeze-and-excitation", "full_name": "mpatacchiola/contextual-squeeze-and-excitation", "topics": ["image-classification", "meta-learning", "pytorch", "transfer-learning", "deep-learning", "few-shot-learning", "paper", "squeeze-and-excitation", "squeeze-and-excitation-networks"], "description": "Official Pytorch implementation of the paper \"Contextual Squeeze-and-Excitation for Efficient Few-Shot Image Classification\" (NeurIPS 2022)"}
{"name": "mpolaris/onnx2tflite", "full_name": "MPolaris/onnx2tflite", "topics": ["onnx2keras", "onnx2tflite", "onnx2tensorflow", "yolov5", "yolov6", "yolov7", "deployment", "onnx", "pytorch2tensorflow", "quantization"], "description": "Tool for onnx->keras or onnx->tflite. If tool is useful for you, please star it."}
{"name": "mps-net/mps-net_release", "full_name": "MPS-Net/MPS-Net_release", "topics": ["3d-human-motion", "3d-human-shape-and-pose-estimation", "cvpr2022", "pytorch"], "description": "Official implementation of CVPR2022 paper \"Capturing Humans in Motion: Temporal-Attentive 3D Human Pose and Shape Estimation from Monocular Video\""}
{"name": "mrrobot2211/pytorch-deep-photo-enhancer", "full_name": "MrRobot2211/pytorch-deep-photo-enhancer", "topics": ["deep-photo-enhancer", "pytorch", "gans"], "description": "pytorch implementation of deep photo enhancer"}
{"name": "msu-mlsys-lab/deepaa", "full_name": "AIoT-MLSys-Lab/DeepAA", "topics": ["deep-learning", "data-augmentation", "automl"], "description": "[ICLR 2022] \"Deep AutoAugment\" by Yu Zheng, Zhi Zhang,  Shen Yan, Mi Zhang"}
{"name": "multimodal/multimodal", "full_name": "multimodal/multimodal", "topics": ["visual-features", "datasets", "embeddings", "vision-and-language", "reasoning", "deep-learning"], "description": "A collection of multimodal datasets, and visual features for VQA and captionning in pytorch. Just run \"pip install multimodal\""}
{"name": "muqiujun-ai/bert4pytorch", "full_name": "MuQiuJun-AI/bert4pytorch", "topics": ["pytorch", "bert", "nlp", "transformer"], "description": "\u8d85\u8f7b\u91cf\u7ea7bert\u7684pytorch\u7248\u672c\uff0c\u5927\u91cf\u4e2d\u6587\u6ce8\u91ca\uff0c\u5bb9\u6613\u4fee\u6539\u7ed3\u6784\uff0c\u6301\u7eed\u66f4\u65b0"}
{"name": "muyuuuu/e-commerce-search-recall", "full_name": "muyuuuu/E-commerce-Search-Recall", "topics": ["huggingface", "cosent", "dssm", "simcse", "pytorch", "tensorflow", "keras", "nsp", "unilm", "simbertv2"], "description": "\u5929\u6c60\u963f\u91cc\u7075\u6770\u95ee\u5929\u5f15\u64ce\u7535\u5546\u641c\u7d22\u7b97\u6cd5\u8d5b\u975e\u5b98\u65b9 baseline\uff0c\u53c8\u540d NLP  \u4ece\u5165\u95e8\u5230 22/2771\u3002"}
{"name": "n00mkrad/flowframes", "full_name": "n00mkrad/flowframes", "topics": ["video-interpolation", "pytorch", "ncnn", "dain", "rife", "gui"], "description": "Flowframes Windows GUI for video interpolation using DAIN (NCNN) or RIFE (CUDA/NCNN)"}
{"name": "na-z/sess", "full_name": "Na-Z/sess", "topics": ["pytorch", "semi-supervised-learning", "3d-object-detection", "point-cloud"], "description": "[CVPR2020 Oral] SESS: Self-Ensembling Semi-Supervised 3D Object Detection"}
{"name": "nadeemlab/deepliif", "full_name": "nadeemlab/DeepLIIF", "topics": ["multiplex", "immunohistochemical-images", "immunohistochemistry", "deep-learning", "multitask-learning", "pathology", "pathology-image", "pathology-gan", "segmentation", "cell-segmentation", "cell-biology", "cloud-native-applications", "pytorch"], "description": "Deep Learning Inferred Multiplex ImmunoFluorescence for IHC Image Quantification (https://deepliif.org) [Nature Machine Intelligence'22, CVPR'22]"}
{"name": "nahidebrahimian/cars-detection-using-yolov5", "full_name": "NahidEbrahimian/Cars-Detection-using-Yolov5", "topics": ["detection", "pytorch", "yolov5"], "description": "Iranian Cars Detection using Yolov5s, PyTorch "}
{"name": "nantu-io/ntcore", "full_name": "nantu-io/ntcore", "topics": ["machine-learning", "python", "deep-learning", "pytorch", "tensorflow", "kubernetes", "docker", "ai", "sklearn", "ml", "mlops"], "description": "Deploy and Monitor ML Model in Any Cloud"}
{"name": "naoto0804/synshadow", "full_name": "naoto0804/SynShadow", "topics": ["shadow-removal", "shadow-detection", "pytorch"], "description": "Learning from Synthetic Shadows for Shadow Detection and Removal [Inoue and Yamasaki, IEEE TCSVT 2021]."}
{"name": "naszilla/nas-encodings", "full_name": "naszilla/nas-encodings", "topics": ["automl", "nas", "nasbench", "deep-learning", "automl-algorithms", "automl-experiments", "neural-architecture-search", "tensorflow", "pytorch"], "description": "Encodings for neural architecture search"}
{"name": "natanielruiz/disrupting-deepfakes", "full_name": "natanielruiz/disrupting-deepfakes", "topics": ["adversarial-attacks", "disrupting-deepfakes", "deepfakes", "deep-learning", "machine-learning", "computer-vision", "deepfake-detection", "face-swap", "faceswap", "fake-news", "defending", "defending-deepfakes"], "description": "\ud83d\udd25\ud83d\udd25Defending Against Deepfakes Using Adversarial Attacks on Conditional Image Translation Networks"}
{"name": "natooz/miditok", "full_name": "Natooz/MidiTok", "topics": ["midi", "music", "deep-learning", "generative-model", "music-generation", "music-information-retrieval", "machine-learning"], "description": "Convenient MIDI / symbolic music tokenizers for Deep Learning networks \ud83c\udfb6"}
{"name": "navassherif98/recipe-generation-from-food-image", "full_name": "navassherif98/Recipe-Generation-from-Food-Image", "topics": ["deep-learning", "machine-learning", "recipe-generation", "food", "food-images", "final-year-project", "final-project", "recipes", "ingredients", "flask-application", "flask", "project", "development", "application", "inverse-cooking", "facebook", "html", "css", "cooking", "dishes"], "description": "An Application for Generating a cooking recipe consist of title, ingredients and instructions from an food image using Deep Learning."}
{"name": "nebuly-ai/nebullvm", "full_name": "nebuly-ai/nebullvm", "topics": ["deep-learning", "pytorch", "onnx", "machine-learning", "tensorflow", "tvm", "openvino", "tensorrt", "huggingface", "compiler", "computing", "inference", "neural-network", "pypi", "quantization", "edge-computing", "gpu", "optimization", "transformers"], "description": "Plug and play modules to optimize the performances of your AI systems \ud83d\ude80"}
{"name": "neclow/serab", "full_name": "Neclow/SERAB", "topics": ["benchmark", "byol", "byol-a", "deep-learning", "emotion-recognition", "pytorch", "scikit-learn", "self-supervised-learning", "speech-processing", "icassp"], "description": "SERAB: a multi-lingual benchmark for speech emotion recognition"}
{"name": "neuralchen/simswap", "full_name": "neuralchen/SimSwap", "topics": ["face", "deepfakes", "faceswap", "gan", "swap", "deepfacelab", "image-manipulation", "video", "pytorch"], "description": "An arbitrary face-swapping framework on images and videos with one single trained model!"}
{"name": "neuralet/smart-social-distancing", "full_name": "galliot-us/smart-social-distancing", "topics": ["edge-ai", "edge-tpu", "deep-learning", "deep-neural-networks", "edge-computing", "coral-dev-board", "coral-tpu", "jetson-nano", "jetson-tx2", "jetson", "nvidia-jetson-tx2", "nvidia-jetson-nano", "nvidia-jetson", "social-distancing", "social-distancing-detection", "social-distance-monitoring"], "description": "Social Distancing Detector using deep learning and capable to run on edge AI devices such as NVIDIA Jetson, Google Coral, and more."}
{"name": "neuralmagic/sparseml", "full_name": "neuralmagic/sparseml", "topics": ["pytorch", "keras", "model-sparsification", "sparsification-recipes", "tensorflow", "smaller-models", "deep-learning-library", "deep-learning-algorithms", "deep-learning-models", "automl", "pruning-algorithms", "sparsity", "sparsification", "recipe-driven-approaches", "pruning", "computer-vision-algorithms", "object-detection", "image-classification", "nlp", "onnx"], "description": "Libraries for applying sparsification recipes to neural networks with a few lines of code, enabling faster and smaller models"}
{"name": "nguyenvo09/eacl2021", "full_name": "nguyenvo09/EACL2021", "topics": ["fact-checking", "fake-news-detection", "pytorch", "nlp", "fact-verification", "eacl2021"], "description": "This is the PyTorch code + data repository for paper \"Hierarchical Multi-head Attentive Network for Evidence-aware Fake News Detection\", EACL 2021"}
{"name": "nickkaparinos/openai-gym-projects", "full_name": "NickKaparinos/OpenAI-Gym-Projects", "topics": ["gym", "python", "deep-reinforcement-learning", "deep-learning", "tianshou", "stable-baselines3", "dqn", "sac", "mujoco", "mujoco-environments"], "description": "OpenAI Gym environment solutions using Deep Reinforcement Learning."}
{"name": "nicozwy/cofced", "full_name": "Nicozwy/CofCED", "topics": ["fake-news-detection", "explainable-fake-news-detection", "dataset", "deep-learning"], "description": "COLING 2022: A Coarse-to-fine Cascaded Evidence-Distillation Neural Network for Explainable Fake News Detection.    "}
{"name": "nikitadurasov/masksembles", "full_name": "nikitadurasov/masksembles", "topics": ["uncertainty-estimation", "deep-learning", "computer-vision", "tensorflow", "torch", "uncertainty-quantification", "uncertainty-neural-networks", "paper", "out-of-distribution-detection"], "description": "Official repository for the paper \"Masksembles for Uncertainty Estimation\" (CVPR2021)."}
{"name": "nimbleedge/envisedge", "full_name": "NimbleEdge/EnvisEdge", "topics": ["recommender-system", "privacy", "machine-learning", "edge-computing", "pytorch", "deep-learning", "python"], "description": "Deploy recommendation engines with Edge Computing"}
{"name": "nimbleedge/recoedge", "full_name": "NimbleEdge/EnvisEdge", "topics": ["recommender-system", "privacy", "machine-learning", "edge-computing", "pytorch", "deep-learning", "python"], "description": "Deploy recommendation engines with Edge Computing"}
{"name": "nipponjo/deepfillv2-pytorch", "full_name": "nipponjo/deepfillv2-pytorch", "topics": ["inpainting", "pytorch", "deepfill", "image-inpainting", "generative-adversarial-network"], "description": "A PyTorch reimplementation of the paper Free-Form Image Inpainting with Gated Convolution (DeepFill v2) (https://arxiv.org/abs/1806.03589) "}
{"name": "nishiwen1214/r-at", "full_name": "nishiwen1214/R-AT", "topics": ["pytorch", "bert"], "description": "Regularized Adversarial Training"}
{"name": "nju-websoft/mukg", "full_name": "nju-websoft/muKG", "topics": ["entity-alignment", "entity-typing", "link-prediction", "representation-learning", "multi-source-knowledge-graphs", "deep-learning", "pytorch"], "description": "\u03bcKG: A Library for Multi-source Knowledge Graph Embeddings and Applications, ISWC 2022"}
{"name": "nlp-suite/nlp-suite", "full_name": "NLP-Suite/NLP-Suite", "topics": ["nlp-suite", "nlp", "research"], "description": "CLICK ON WIKI LINK BELOW OR ON Wiki TAB AT TOP BANNER FOR DOWNLOAD INSTRUCTIONS AND  INFORMATION ON THE NLP SUITE."}
{"name": "nlp-uoregon/trankit", "full_name": "nlp-uoregon/trankit", "topics": ["nlp", "natural-language-processing", "pytorch", "language-model", "xlm-roberta", "machine-learning", "deeplearning", "artificial-intelligence", "universal-dependencies", "multilingual", "adapters", "sentence-segmentation", "tokenization", "part-of-speech-tagging", "morphological-tagging", "dependency-parsing", "lemmatization"], "description": "Trankit is a Light-Weight Transformer-based Python Toolkit for Multilingual Natural Language Processing"}
{"name": "nlpaueb/greek-bert", "full_name": "nlpaueb/greek-bert", "topics": ["natural-language-processing", "language-model", "transformers", "bert"], "description": "A Greek edition of BERT pre-trained language model"}
{"name": "nmichlo/disent", "full_name": "nmichlo/disent", "topics": ["pytorch", "pytorch-lightning", "vae", "disentanglement", "disentangled-representations", "metrics", "configurable", "datasets", "python", "python3", "autoencoders", "representation-learning", "metric-learning"], "description": "\ud83e\uddf6 Modular VAE disentanglement framework for python built with PyTorch Lightning \u25b8 Including metrics and datasets \u25b8 With strongly supervised, weakly supervised and unsupervised methods \u25b8 Easily configured and run with Hydra config \u25b8 Inspired by disentanglement_lib"}
{"name": "nocoolsandwich/iamqa", "full_name": "nocoolsandwich/iamQA", "topics": ["question-answering", "nlp", "bert"], "description": "\u4e2d\u6587wiki\u767e\u79d1QA\u9605\u8bfb\u7406\u89e3\u95ee\u7b54\u7cfb\u7edf\uff0c\u4f7f\u7528\u4e86CCKS2016\u6570\u636e\u7684NER\u6a21\u578b\u548cCMRC2018\u7684\u9605\u8bfb\u7406\u89e3\u6a21\u578b\uff0c\u8fd8\u6709W2V\u8bcd\u5411\u91cf\u641c\u7d22,\u4f7f\u7528torchserve\u90e8\u7f72"}
{"name": "nod-ai/shark", "full_name": "nod-ai/SHARK", "topics": ["deep-learning", "machine-learning", "mlir", "pytorch", "amd", "apple-silicon", "nvidia"], "description": "SHARK - High Performance Machine Learning Distribution"}
{"name": "novemberchopin/rl_tutorial", "full_name": "NovemberChopin/RL_Tutorial", "topics": ["tensorflow", "reinforcement-learning-algorithms"], "description": "Tutorial for Reinforcement Learning"}
{"name": "ntt123/pax", "full_name": "NTT123/pax", "topics": ["pytree", "deep-learning", "jax", "opax"], "description": "A stateful pytree library for training neural networks."}
{"name": "nupurkmr9/vision-aided-gan", "full_name": "nupurkmr9/vision-aided-gan", "topics": ["computer-vision", "computer-graphics", "pytorch", "generative-adversarial-network", "gans", "pretrained-models", "image-generation"], "description": "Ensembling Off-the-shelf Models for GAN Training (CVPR 2022 Oral)"}
{"name": "nvidia-merlin/models", "full_name": "NVIDIA-Merlin/models", "topics": ["deep-learning", "machine-learning", "pytorch", "recommendation-system", "recommender-system", "tensorflow", "dask", "gpu", "rapidsai", "recsys"], "description": "Merlin Models is a collection of deep learning recommender system model reference implementations"}
{"name": "nvidia-merlin/nvtabular", "full_name": "NVIDIA-Merlin/NVTabular", "topics": ["deep-learning", "feature-engineering", "feature-selection", "gpu", "machine-learning", "nvidia", "preprocessing", "recommendation-system", "recommender-system"], "description": "NVTabular is a feature engineering and preprocessing library for tabular data designed to quickly and easily manipulate terabyte scale datasets used to train deep learning based recommender systems."}
{"name": "nvidia-merlin/systems", "full_name": "NVIDIA-Merlin/systems", "topics": ["deep-learning", "gpu", "recommender-system", "recommendation-system", "ensemble", "machine-learning", "python", "tensorflow"], "description": "Merlin Systems provides tools for combining recommendation models with other elements of production recommender systems (like feature stores, nearest neighbor search, and exploration strategies) into end-to-end recommendation pipelines that can be served with Triton Inference Server."}
{"name": "nvidia-merlin/transformers4rec", "full_name": "NVIDIA-Merlin/Transformers4Rec", "topics": ["transformer", "pytorch", "tabular-data", "huggingface", "bert", "gtp", "language-model", "xlnet", "nlp", "seq2seq", "recsys", "recommender-system", "session-based-recommendation"], "description": "Transformers4Rec is a flexible and efficient library for sequential and session-based recommendation and works with PyTorch."}
{"name": "nvidia/nvtabular", "full_name": "NVIDIA-Merlin/NVTabular", "topics": ["deep-learning", "feature-engineering", "feature-selection", "gpu", "machine-learning", "nvidia", "preprocessing", "recommendation-system", "recommender-system"], "description": "NVTabular is a feature engineering and preprocessing library for tabular data designed to quickly and easily manipulate terabyte scale datasets used to train deep learning based recommender systems."}
{"name": "nvidia/transformer-ls", "full_name": "NVIDIA/transformer-ls", "topics": ["efficient-transformers", "long-sequence", "transformer", "vision-transformer"], "description": "Official PyTorch Implementation of Long-Short Transformer (NeurIPS 2021)."}
{"name": "nvlabs/centerpose", "full_name": "NVlabs/CenterPose", "topics": ["deep-learning", "object-pose-estimation", "object-pose-tracking", "pytorch", "rgb"], "description": "Single-Stage Keypoint-based Category-level Object Pose Estimation from an RGB Image (ICRA 2022)"}
{"name": "nvlabs/fan", "full_name": "NVlabs/FAN", "topics": ["backbone", "deep-learning", "image-classification", "object-detection", "vision-transformers", "visual-recognition", "semantic-segmentation", "corruption", "imagenet", "out-of-distribution", "pre-train", "cityscapes", "coco", "information-bottleneck", "self-attention", "visual-grouping"], "description": "Official PyTorch implementation of Fully Attentional Networks"}
{"name": "oahunc/pyramidscalenetwork", "full_name": "daimuuc/PyramidScaleNetwork", "topics": ["crowd-counting", "pytorch", "pyramid-scale-network", "python"], "description": "To the best of our knowledge, this is the first work to explicitly address feature similarity issue in multi-column design. Extensive experiments on four challenging benchmarks (ShanghaiTech, UCF_CC_50, UCF-QNRF, and Mall) demonstrate the effectiveness of the proposed innovations as well as the superior performance over the state-of-the-art. More remarkably, our method can be easily applied to other existing multi-column models as a plug-in to significantly boost the performance to a large extent. "}
{"name": "oap-project/cloudtik", "full_name": "oap-project/cloudtik", "topics": ["aws", "azure", "cloud", "gcp", "ai", "analytics", "deep-learning", "machine-learning"], "description": "Cloud Scale Platform for Distributed Analytics and AI"}
{"name": "octoml/apple-m1-bert", "full_name": "octoml/Apple-M1-BERT", "topics": ["machine-learning", "m1-mac", "tensorflow"], "description": "3X speedup over Apple\u2019s TensorFlow plugin by using Apache TVM on M1"}
{"name": "oke-aditya/pytorch_paper_implementations", "full_name": "oke-aditya/pytorch_paper_implementations", "topics": ["pytorch", "implementation-of-research-paper", "deep-learning", "deep-learning-papers"], "description": "Deep Learning Paper Implementations in PyTorch"}
{"name": "omar-mohamed/gpt2-chest-x-ray-report-generation", "full_name": "omar-mohamed/GPT2-Chest-X-Ray-Report-Generation", "topics": ["deep-learning", "transformer", "gpt2", "transfer-learning", "medical-imaging", "chest-xrays", "report-generation", "radiology"], "description": "This is the implementation of the CDGPT2 model mentioned in our paper 'Automated Radiology Report Generation using Conditioned Transformers'"}
{"name": "omerferhatt/torch2tflite", "full_name": "omerferhatt/torch2tflite", "topics": ["pytorch", "tensorflow2", "onnx", "tflite", "tensorflowlite", "onnx-tf", "model-converter"], "description": "PyTorch to TensorFlow Lite converter"}
{"name": "oneflow-inc/libai", "full_name": "Oneflow-Inc/libai", "topics": ["oneflow", "nlp", "deep-learning", "large-scale", "data-parallelism", "model-parallelism", "distributed-training", "pipeline-parallelism", "transformer", "self-supervised-learning", "vision-transformer"], "description": "LiBai(\u674e\u767d): A Toolbox for Large-Scale Distributed Parallel Training"}
{"name": "oneflow-inc/one-yolov5", "full_name": "Oneflow-Inc/one-yolov5", "topics": ["deep-learning", "oneflow", "yolov5"], "description": "A more efficient yolov5 with oneflow backend \ud83c\udf89\ud83c\udf89\ud83c\udf89"}
{"name": "open-mmlab/mmclassification", "full_name": "open-mmlab/mmclassification", "topics": ["image-classification", "resnet", "resnext", "mobilenet", "shufflenet", "senet", "regnet", "imagenet", "pytorch", "deep-learning", "swin-transformer"], "description": "OpenMMLab Image Classification Toolbox and Benchmark"}
{"name": "open-mmlab/mmdetection3d", "full_name": "open-mmlab/mmdetection3d", "topics": ["pytorch", "3d-object-detection", "object-detection", "point-cloud"], "description": "OpenMMLab's next-generation platform for general 3D object detection."}
{"name": "open-mmlab/mmeval", "full_name": "open-mmlab/mmeval", "topics": ["machine-learning", "metrics", "python", "pytorch", "tensorflow"], "description": "A unified evaluation library for multiple machine learning libraries"}
{"name": "open-mmlab/openpcdet", "full_name": "open-mmlab/OpenPCDet", "topics": ["point-cloud", "3d-detection", "autonomous-driving", "pv-rcnn", "object-detection", "pytorch"], "description": "OpenPCDet Toolbox for LiDAR-based 3D Object Detection."}
{"name": "openai/jukebox", "full_name": "openai/jukebox", "topics": ["paper", "audio", "music", "pytorch", "generative-model", "vq-vae", "transformer"], "description": "Code for the paper \"Jukebox: A Generative Model for Music\""}
{"name": "opendilab/interfuser", "full_name": "opendilab/InterFuser", "topics": ["autonomous-driving", "bird-view-image", "transformer"], "description": "[CoRL 2022] InterFuser: Safety-Enhanced Autonomous Driving Using Interpretable Sensor Fusion Transformer"}
{"name": "opendr-eu/opendr", "full_name": "opendr-eu/opendr", "topics": ["deep-learning", "robotics"], "description": "A modular, open and non-proprietary toolkit for core robotic functionalities by harnessing deep learning"}
{"name": "openmined/threepio", "full_name": "OpenMined/Threepio", "topics": ["pytorch", "tensorflow", "tensorflowjs", "hacktoberfest"], "description": "A multi-language library for translating commands between PyTorch, TensorFlow, and TensorFlow.js"}
{"name": "openvinotoolkit/datumaro", "full_name": "openvinotoolkit/datumaro", "topics": ["deep-learning", "neural-networks", "openvino-toolkit", "computer-vision", "datasets", "format-converter", "dataset", "coco", "imagenet", "pascal-voc", "yolo"], "description": "Dataset Management Framework, a Python library and a CLI tool to build, analyze and manage Computer Vision datasets."}
{"name": "openvinotoolkit/nncf", "full_name": "openvinotoolkit/nncf", "topics": ["quantization", "pruning", "sparsity", "quantization-aware-training", "mixed-precision-training", "compression", "semantic-segmentation", "object-detection", "classification", "nlp", "bert", "mmdetection", "transformers", "hawq", "pytorch", "tensorflow", "onnx", "openvino", "deep-learning"], "description": "Neural Network Compression Framework for enhanced OpenVINO\u2122 inference"}
{"name": "operatorai/modelstore", "full_name": "operatorai/modelstore", "topics": ["python-library", "modelstore", "machine-learning", "data-science", "scikit-learn", "pytorch", "tensorflow", "mlops", "s3-storage", "transformer", "keras"], "description": "\ud83c\udfec modelstore is a Python library that allows you to version, export, and save a machine learning model to your filesystem or a cloud storage provider."}
{"name": "oss-pole-emploi/gabarit", "full_name": "OSS-Pole-Emploi/gabarit", "topics": ["data-science", "deep-learning", "machine-learning", "python"], "description": "Gabarit : kickstart your data science project from scratch "}
{"name": "owlting/ai_basketball_games_video_editor", "full_name": "OwlTing/AI_basketball_games_video_editor", "topics": ["basketball", "machine-learning", "ai", "computer-vision", "artificial-intelligence", "deep-learning", "yolov4", "pytorch", "pytorch-yolov4", "tensorrt", "objection-detection"], "description": "AI Basketball Games Video Editor is a program to get basketball highlight video by PyTorch YOLOv4 object detection"}
{"name": "p-ranav/merged_depth", "full_name": "p-ranav/merged_depth", "topics": ["depth-prediction", "neural-networks", "pytorch", "python3", "torch", "torchvision", "image-processing", "prediction", "average", "mit-license", "open-source", "academic", "depth-estimation", "camera", "youtube", "images", "average-calculator", "machine-learning", "deep-learning"], "description": "Monocular Depth Estimation - Weighted-average prediction from multiple pre-trained depth estimation models"}
{"name": "paddlepaddle/paddlenlp", "full_name": "PaddlePaddle/PaddleNLP", "topics": ["nlp", "seq2seq", "embedding", "bert", "ernie", "paddlenlp", "pretrained-models", "transformers", "information-extraction", "question-answering", "search-engine", "semantic-analysis", "sentiment-analysis", "neural-search", "uie", "image-generation", "document-intelligence", "stable-diffusion", "aigc", "compression"], "description": "\ud83d\udc51 Easy-to-use and powerful NLP library with \ud83e\udd17 Awesome model zoo, supporting wide-range of NLP tasks from research to industrial applications, including \ud83d\uddc2Text Classification,  \ud83d\udd0d Neural Search, \u2753 Question Answering, \u2139\ufe0f Information Extraction, \ud83d\udcc4 Document Intelligence, \ud83d\udc8c Sentiment Analysis and \ud83d\uddbc Diffusion AIGC system etc."}
{"name": "paddlepaddle/research", "full_name": "PaddlePaddle/Research", "topics": ["deep-learning", "computer-vision", "nlp", "knowledge-graph", "spatial-temporal", "data-mining"], "description": "novel deep learning research works with PaddlePaddle"}
{"name": "pair-code/lit", "full_name": "PAIR-code/lit", "topics": ["machine-learning", "natural-language-processing", "visualization"], "description": "The Learning Interpretability Tool: Interactively analyze ML models to understand their behavior in an extensible and framework agnostic interface."}
{"name": "panjinquan/pytorch-base-trainer", "full_name": "PanJinquan/Pytorch-Base-Trainer", "topics": ["distributed-training", "pytorch-prune", "pytorch-training", "deep-learning"], "description": "Pytorch\u5206\u5e03\u5f0f\u8bad\u7ec3\u6846\u67b6"}
{"name": "paritybit-ai/xfl", "full_name": "paritybit-ai/XFL", "topics": ["federated-learning", "machine-learning", "python", "federated-learning-framework", "paritybit", "paritybit-ai", "deep-learning"], "description": "An Efficient and Easy-to-use Federated Learning Framework."}
{"name": "pavankunchala/deep-learning", "full_name": "Pavankunchala/Deep-Learning", "topics": ["deep-learning", "tensorflow2", "recurrent-neural-networks", "lstm-neural-networks", "stockprediction", "pytorch", "opencv", "feature-extraction", "face-detection", "augementedreality", "color-quantization", "qrcode-scanner", "face-tracking", "tensorflow", "alex-net", "lstm-model", "localization", "robotics", "kalman-filter"], "description": "This repo provides projects on deep-learning mainly using Tensorflow 2.0"}
{"name": "pclubiitk/model-zoo", "full_name": "pclubiitk/model-zoo", "topics": ["model-zoo", "cnn-model", "cnn", "classification", "video", "3d-vision", "object-detection", "gans", "vae-gan", "pytorch", "tensorflow", "super-resolution", "nlp", "machine-learning", "deep-learning"], "description": "Implementations of various Deep Learning models in PyTorch and TensorFlow."}
{"name": "pedrolarben/timeseriesforecasting-deeplearning", "full_name": "pedrolarben/TimeSeriesForecasting-DeepLearning", "topics": ["series-forecasting", "deep-learning", "deep-neural-networks"], "description": "An experiemtal review on deep learning architectures for time series forecasting"}
{"name": "pelletierlab/noise2fast", "full_name": "pelletierlab/Noise2Fast", "topics": ["deep-learning", "image", "image-denoising", "image-processing", "self-supervised-learning"], "description": null}
{"name": "persiannlp/parsinlu", "full_name": "persiannlp/parsinlu", "topics": ["query-paraphrasing", "machine-translation", "sentiment-analysis", "persian-language", "persian", "natural-language-processing", "farsi", "reading-comprehension", "textual-entailment", "natural-language-inference", "sentiment-analysis-dataset", "mt5-models"], "description": "A comprehensive suite of high-level NLP tasks for Persian language"}
{"name": "peterouzh/omni-gan-pytorch", "full_name": "PeterouZh/Omni-GAN-PyTorch", "topics": ["pytorch", "deep-learning", "generative-adversarial-network"], "description": "ICCV2021 (poster)"}
{"name": "phoenix-shen/reinforcementlearning", "full_name": "Phoenix-Shen/ReinforcementLearning", "topics": ["pytorch", "reinforcement-learning", "algorithms", "qlearning-algorithm", "actor-critic-algorithm", "policy-gradient", "proximal-policy-optimization", "deep-qlearning-algorithm", "td3-pytorch", "dppo", "ddpg-pytorch", "prioritized-experience-replay", "deep-reinforcement-learning"], "description": "\u5f3a\u5316\u5b66\u4e60\u7b97\u6cd5\u5e93\uff0c\u5305\u542b\u4e86\u76ee\u524d\u4e3b\u6d41\u7684\u5f3a\u5316\u5b66\u4e60\u7b97\u6cd5(Value based and Policy basd)\u7684\u4ee3\u7801\uff0c\u4ee3\u7801\u90fd\u7ecf\u8fc7\u8c03\u8bd5\u5e76\u53ef\u4ee5\u8fd0\u884c"}
{"name": "pietrobarbiero/logic_explained_networks", "full_name": "pietrobarbiero/logic_explained_networks", "topics": ["xai", "explainable-ai", "deep-learning", "neural-networks", "machine-learning", "logic"], "description": "Logic Explained Networks is a python repository implementing explainable-by-design deep learning models."}
{"name": "plai-group/simple-cnaps", "full_name": "plai-group/simple-cnaps", "topics": ["deep-learning", "metric-learning", "meta-learning", "few-shot-learning", "few-shot-recognition", "mini-imagenet", "tiered-imagenet", "meta-dataset", "conditional-neural-process", "few-shot-classifcation"], "description": "Source codes for \"Improved Few-Shot Visual Classification\" (CVPR 2020), \"Enhancing Few-Shot Image Classification with Unlabelled Examples\" (WACV 2022), and \"Beyond Simple Meta-Learning: Multi-Purpose Models for Multi-Domain, Active and Continual Few-Shot Learning\" (Neural Networks 2022 - in submission)"}
{"name": "pliang279/sent_debias", "full_name": "pliang279/sent_debias", "topics": ["machine-learning", "natural-language-processing", "fairness-ai", "representation-learning"], "description": "[ACL 2020] Towards Debiasing Sentence Representations"}
{"name": "pmichel31415/p-dro", "full_name": "pmichel31415/P-DRO", "topics": ["machine-learning", "natural-language-processing", "dro"], "description": "Code for the papers \"Modeling the Second Player in Distributionally Robust Optimization\" and \"Distributionally Robust Models with Parametric Likelihood Ratios\""}
{"name": "poets-ai/elegy", "full_name": "poets-ai/elegy", "topics": ["deep-learning", "jax"], "description": "A High Level API for Deep Learning in JAX"}
{"name": "pokaxpoka/sunrise", "full_name": "pokaxpoka/sunrise", "topics": ["reinforcement-learning", "rl", "deep-learning", "mujoco", "dm-control", "codebase", "model-free", "off-policy", "deep-reinforcement-learning", "deep-neural-networks", "deep-q-learning", "deep-q-network", "soft-actor-critic", "sac", "rainbow"], "description": "SUNRISE: A Simple Unified Framework for Ensemble Learning in Deep Reinforcement Learning"}
{"name": "pooya-mohammadi/deep_utils", "full_name": "pooya-mohammadi/deep_utils", "topics": ["pytorch", "deep-learning", "face-detection", "object-detection", "utils", "tensorflow", "python", "machine-learning", "modelcheckpoint", "augmentation", "computer-vision", "nlp", "cutmix", "coco", "yolov5", "face-recognition", "vggface2", "senet"], "description": "An open-source toolkit which is full of handy functions, including the most used models and utilities for deep-learning practitioners!"}
{"name": "positive666/yolov5_research", "full_name": "positive666/yolo_research", "topics": ["yolov5", "deepstream", "pytorch", "object-detection", "attention-mechanism", "swintransformer", "custom-networ", "yolov7"], "description": "based on yolov5-high-level project (detect\\pose\\classify\\segment\\):include yolov7 core ,improvement research based on yolov5,SwintransformV2 and Attention Series. training skills, business customization, engineering deployment C"}
{"name": "postech-cvlab/pytorch-studiogan", "full_name": "POSTECH-CVLab/PyTorch-StudioGAN", "topics": ["pytorch", "deep-learning", "generative-adversarial-network", "biggan", "stylegan2", "machine-learning", "stylegan2-ada", "stylegan3", "data-efficient-gan-training", "clean-fid"], "description": "StudioGAN is a Pytorch library providing implementations of representative Generative Adversarial Networks (GANs) for conditional/unconditional image generation."}
{"name": "ppashakhanloo/codetrek", "full_name": "ppashakhanloo/CodeTrek", "topics": ["codeql", "deep-learning", "code-representation", "pytorch", "semantic-analysis", "relational-database"], "description": "A powerful relational representation of source code"}
{"name": "practical-ai/deep_utils", "full_name": "pooya-mohammadi/deep_utils", "topics": ["pytorch", "deep-learning", "face-detection", "object-detection", "utils", "tensorflow", "python", "machine-learning", "modelcheckpoint", "augmentation", "computer-vision", "nlp", "cutmix", "coco", "yolov5", "face-recognition", "vggface2", "senet"], "description": "An open-source toolkit which is full of handy functions, including the most used models and utilities for deep-learning practitioners!"}
{"name": "prbonn/lidar-mos", "full_name": "PRBonn/LiDAR-MOS", "topics": ["lidar", "point-cloud", "segmentation", "slam", "mapping", "deep-learning", "deep-neural-networks", "moving-object-segmentation", "lidar-slam", "dynamic-slam", "motion-detection"], "description": "(LMNet) Moving Object Segmentation in 3D LiDAR Data: A Learning-based Approach Exploiting Sequential Data (RAL/IROS 2021)"}
{"name": "princeton-nlp/calm-textgame", "full_name": "princeton-nlp/calm-textgame", "topics": ["text-based-game", "nlp", "rl", "gpt", "n-gram", "calm"], "description": "[EMNLP 2020] Keep CALM and Explore: Language Models for Action Generation in Text-based Games"}
{"name": "princeton-nlp/densephrases", "full_name": "princeton-nlp/DensePhrases", "topics": ["nlp", "open-domain-qa", "slot-filling", "knowledge-base", "information-retrieval", "passage-retrieval"], "description": "ACL'2021: Learning Dense Representations of Phrases at Scale; EMNLP'2021: Phrase Retrieval Learns Passage Retrieval, Too https://arxiv.org/abs/2012.12624"}
{"name": "princeton-nlp/rationale-robustness", "full_name": "princeton-nlp/rationale-robustness", "topics": ["interpretability", "nlp", "robustness"], "description": "NAACL 2022: Can Rationalization Improve Robustness? https://arxiv.org/abs/2204.11790"}
{"name": "princeton-nlp/simcse", "full_name": "princeton-nlp/SimCSE", "topics": ["nlp", "sentence-embeddings"], "description": "EMNLP'2021: SimCSE: Simple Contrastive Learning of Sentence Embeddings https://arxiv.org/abs/2104.08821"}
{"name": "princeton-nlp/webshop", "full_name": "princeton-nlp/WebShop", "topics": ["decision-making", "language", "language-grounding", "ml", "nlp", "rl", "rl-environment", "shopping", "sim-to-real", "web-based"], "description": "[NeurIPS 2022] \ud83d\uded2WebShop: Towards Scalable Real-World Web Interaction with Grounded Language Agents"}
{"name": "project-agml/agml", "full_name": "Project-AgML/AgML", "topics": ["deep-learning", "agriculture", "pytorch", "dataset", "image-classification", "object-detection", "semantic-segmentation", "computer-vision", "synthetic-data"], "description": "AgML is a centralized framework for agricultural machine learning. AgML provides access to public agricultural datasets for common agricultural deep learning tasks, with standard benchmarks and pretrained models, as well the ability to generate synthetic data and annotations."}
{"name": "pubkey/fashion-segmentation", "full_name": "pubkey/fashion-segmentation", "topics": ["computer-vision", "deep-learning", "segmentation", "pix2pix", "pix2pix-tensorflow", "fashionai", "fashion", "fashion-mnist", "clothes-retrieval", "fashion-ai", "image-segmentation", "vision-for-fashion"], "description": "A tensorflow model for segmentation of fashion items out of multiple product images"}
{"name": "pytorch-lumo/lumo", "full_name": "pytorch-lumo/lumo", "topics": ["pytorch", "deep-learning"], "description": "More light-weight pytorch experiment library!"}
{"name": "pytorchlightning/lightning-flash", "full_name": "Lightning-AI/lightning-flash", "topics": ["pytorch-lightning", "deep-learning", "machine-learning", "pytorch", "tasks-flash", "classification", "tabular-data", "object-detection", "icevision", "open3d", "fiftyone", "torch-geometric", "pytorch-video"], "description": "Your PyTorch AI Factory - Flash enables you to easily configure and run complex AI recipes for over 15 tasks across 7 data domains"}
{"name": "pytorchlightning/lightning-tutorials", "full_name": "Lightning-AI/tutorials", "topics": ["tutorials", "jupyter-notebook", "machine-learning", "deep-learning", "notebooks", "python-scripts", "lightning"], "description": "Collection of Pytorch lightning tutorial form as rich scripts automatically transformed to ipython notebooks."}
{"name": "qiqihaer/3dssd-pytorch", "full_name": "qiqihaer/3DSSD-pytorch", "topics": [], "description": "3DSSD's implementation with Pytorch"}
{"name": "qiqihaer/3dssd-pytorch-openpcdet", "full_name": "qiqihaer/3DSSD-pytorch-openPCDet", "topics": [], "description": "The successful implementation of 3DSSD in Pytorch"}
{"name": "qq44642754a/yolov5_ros", "full_name": "qq44642754a/Yolov5_ros", "topics": ["yolov5", "pytorch", "ros"], "description": "Real-time object detection with ROS, based on YOLOv5 and PyTorch (\u57fa\u4e8e YOLOv5\u7684ROS\u5b9e\u65f6\u5bf9\u8c61\u68c0\u6d4b)"}
{"name": "quic/aimet", "full_name": "quic/aimet", "topics": ["quantization", "deep-learning", "compression", "open-source", "machine-learning", "pruning", "auto-ml", "network-compression", "deep-neural-networks", "network-quantization", "opensource"], "description": "AIMET is a library that provides advanced quantization and compression techniques for trained neural network models."}
{"name": "radekd91/emoca", "full_name": "radekd91/emoca", "topics": ["computer-vision", "face-reconstruction", "emotion-recognition", "cvpr", "pytorch", "pytorch-lightning", "deep-learning", "3d-reconstruction", "3d-graphics", "3d-vision", "face-alignment", "morphable-model", "face-model", "flame-fitting", "face", "3d-face-alignment", "3d-face-reconstruction"], "description": "Official repository accompanying a CVPR 2022 paper EMOCA: Emotion Driven Monocular Face Capture And Animation. EMOCA takes a single image of a face as input and produces a 3D reconstruction. EMOCA sets the new standard on reconstructing highly emotional images in-the-wild"}
{"name": "rajammanabrolu/q-bert", "full_name": "rajammanabrolu/Q-BERT", "topics": ["interactive-fiction", "text-games", "reinforcement-learning", "knowledge-graphs", "natural-language-processing", "exploration"], "description": "Agents that build knowledge graphs and explore textual worlds by asking questions"}
{"name": "ramb0a/awesome-quantum-chemistry", "full_name": "twoXes/awesome-quantum-chemistry", "topics": ["neural-network", "electron-schroedinger-equation", "quantum", "ab-initio-solution"], "description": "Quantum Chemistry is awesome. Throw your textbook in the garbage, light the garbage can on fire, and blend the ashes into your cold brew almond milk latte and read this."}
{"name": "raminmh/cfc", "full_name": "raminmh/CfC", "topics": ["deep-learning", "neural-ode", "pytorch", "recurrent-neural-networks", "sequence-models", "tensorflow"], "description": "Closed-form Continuous-time Neural Networks"}
{"name": "ranking666/yolov5-processing", "full_name": "Ranking666/Yolov5-Processing", "topics": ["ghostnet-yolov5", "eagleeye", "pytorch", "pruning", "backbone", "efficientnetv2", "shufflenetv2"], "description": "Multi-backbone, Prune,  Quantization,  KD"}
{"name": "rayguan97/m3detr", "full_name": "rayguan97/M3DETR", "topics": ["point-cloud", "object-detection", "3d-object-detection", "transformer", "deep-learning", "waymo-open-dataset", "kitti-dataset"], "description": "Code base for M3DeTR: Multi-representation, Multi-scale, Mutual-relation 3D Object Detection with Transformers"}
{"name": "rayhane-mamah/efficient-vdvae", "full_name": "Rayhane-mamah/Efficient-VDVAE", "topics": ["python", "jax", "pytorch", "paper", "vae", "image-generation", "representation-learning", "unsupervised-learning"], "description": "Official Pytorch and JAX implementation of \"Efficient-VDVAE: Less is more\""}
{"name": "relevanceai/relevanceai", "full_name": "RelevanceAI/RelevanceAI", "topics": ["python", "vector-database", "nlp", "search-engine", "embeddings", "vector-search", "clustering", "search", "unstructured-data", "computer-vision", "natural-language-processing"], "description": "Platform for unstructured data analysis"}
{"name": "relevanceai/vectorhub", "full_name": "RelevanceAI/vectorhub", "topics": ["python", "vector", "embeddings", "encodings", "vector-similarity", "transformers", "tfhub", "machine-learning", "deeplearning", "artificial-intelligence", "neural-network", "deep-learning", "tensorflow", "pytorch", "word2vec", "image2vec", "audio-processing", "video-processing"], "description": "Vector Hub - Library for easy discovery, and consumption of State-of-the-art models to turn data into vectors. (text2vec, image2vec, video2vec, graph2vec, bert, inception, etc)"}
{"name": "retarfi/language-pretraining", "full_name": "retarfi/language-pretraining", "topics": ["nlp", "natural-language-processing", "pytorch", "transformer", "implementation", "language-models", "language-model", "bert", "electra"], "description": "Pre-training Language Models for Japanese"}
{"name": "richardobi/medigan", "full_name": "RichardObi/medigan", "topics": ["medical", "generation", "gans", "toolbox", "python", "deep-learning", "machine-learning", "model", "computer-vision", "dataset", "endoscopy", "generative-adversarial-network", "generative-ai", "generative-model", "medical-image-analysis", "medical-image-dataset", "medical-imaging", "radiology", "synthesis", "synthetic-data"], "description": "medigan - A Python Library of Pretrained Generative Models for Medical Image Synthesis"}
{"name": "rishabhmaheshwary/hard-label-attack", "full_name": "RishabhMaheshwary/hard-label-attack", "topics": ["adversarial-attacks", "bert", "nlp", "classification", "nli", "machine-learning", "deep-learning"], "description": "Natural Language Attacks in a Hard Label Black Box Setting."}
{"name": "rishit-dagli/cppe-dataset", "full_name": "Rishit-dagli/CPPE-Dataset", "topics": ["machine-learning", "dataset", "vision", "computer-vision", "artificial-intelligence", "object-detection", "deep-learning", "pytorch", "tensorflow", "pretrained-models", "models", "data", "cppe5"], "description": "Code for our paper CPPE - 5 (Medical Personal Protective Equipment), a new challenging object detection dataset"}
{"name": "rizavelioglu/challenge-aido_rl-il", "full_name": "rizavelioglu/challenge-aido_RL-IL", "topics": ["reinforcement-learning", "self-driving-cars", "imitation-learning", "pytorch", "keras", "tensorflow", "supervised-learning", "behavioral-cloning"], "description": "Reinforcement Learning + Imitation Learning based approach to AI Driving Olympics"}
{"name": "rlturkiye/flying-cavalry", "full_name": "rlturkiye/flying-cavalry", "topics": ["reinforcement", "learning", "reinforcement-learning", "deep-learning", "ai", "path-planning", "motion-planning", "yapay-zeka", "derin-ogrenme"], "description": "Flying Cavalry Project - Ucan Kavalye Projesi "}
{"name": "robvanvolt/dalle-datasets", "full_name": "robvanvolt/DALLE-datasets", "topics": [], "description": "This is a summary of easily available datasets for generalized DALLE-pytorch training."}
{"name": "rom1504/clip-retrieval", "full_name": "rom1504/clip-retrieval", "topics": ["semantic-search", "deep-learning", "multimodal", "ai", "clip", "knn"], "description": "Easily compute clip embeddings and build a clip retrieval system with them"}
{"name": "roman-vygon/triplet_loss_kws", "full_name": "roman-vygon/triplet_loss_kws", "topics": ["pytorch", "deep-learning", "keyword-spotting", "speech-recognition"], "description": "Learning Efficient Representations for Keyword Spotting with Triplet Loss"}
{"name": "rootlu/l2p-gnn", "full_name": "rootlu/L2P-GNN", "topics": ["pre-train", "gnn", "meta-learning", "aaai2021"], "description": "Codes and datasets for AAAI-2021 paper \"Learning to Pre-train Graph Neural Networks\""}
{"name": "rsanshierli/easybert", "full_name": "rsanshierli/EasyBert", "topics": [], "description": "\u57fa\u4e8ePytorch\u7684Bert\u5e94\u7528\uff0c\u5305\u62ec\u547d\u540d\u5b9e\u4f53\u8bc6\u522b\u3001\u60c5\u611f\u5206\u6790\u3001\u6587\u672c\u5206\u7c7b\u4ee5\u53ca\u6587\u672c\u76f8\u4f3c\u5ea6\u7b49"}
{"name": "ruckbreasoning/subgraphretrievalkbqa", "full_name": "RUCKBReasoning/SubgraphRetrievalKBQA", "topics": [], "description": "The pytorch implementation of Subgraph Retrieval Enhanced Model for Multi-hop Knowledge Base Question Answering "}
{"name": "ruhyadi/yolo3d", "full_name": "ruhyadi/YOLO3D", "topics": ["yolo", "self-driving-car", "3d-object-detection", "pytorch", "deep-learning"], "description": "YOLO 3D Object Detection for Autonomous Driving Vehicle"}
{"name": "ryanccc/yolo-series", "full_name": "RyanCCC/yolo-series", "topics": ["computer-vision", "deep-learning", "object-detection", "yolo", "object-tracking", "pytorch", "tensorflow"], "description": "YOLO\u7b97\u6cd5\u7684\u5b9e\u73b0"}
{"name": "ryanccc/yoloseries", "full_name": "RyanCCC/yolo-series", "topics": ["computer-vision", "deep-learning", "object-detection", "yolo", "object-tracking", "pytorch", "tensorflow"], "description": "YOLO\u7b97\u6cd5\u7684\u5b9e\u73b0"}
{"name": "ryoungj/optdom", "full_name": "ryoungj/optdom", "topics": ["python", "self-supervised-learning", "domain-generalization", "distribution-shift", "representation-learning", "pytorch", "machine-learning"], "description": "[ICLR'22] Self-supervised learning optimally robust representations for domain shift."}
{"name": "s-nlp/rudetoxifier", "full_name": "s-nlp/rudetoxifier", "topics": ["style-transfer", "nlp", "russian-language"], "description": "Code and data of \"Methods for Detoxification of Texts for the Russian Language\" paper"}
{"name": "saareliad/ftpipe", "full_name": "saareliad/FTPipe", "topics": ["pipeline-parallelism", "fine-tuning", "nlp", "t5", "deep-neural-networks", "distributed-training"], "description": "FTPipe and related pipeline model parallelism research."}
{"name": "saic-vul/imvoxelnet", "full_name": "SamsungLabs/imvoxelnet", "topics": ["pytorch", "object-detection", "3d-object-detection", "mmdetection", "imvoxelnet", "sun-rgbd", "nuscenes", "kitti", "scannet"], "description": "[WACV2022] ImVoxelNet: Image to Voxels Projection for Monocular and Multi-View General-Purpose 3D Object Detection"}
{"name": "sailist/lumo", "full_name": "pytorch-lumo/lumo", "topics": ["pytorch", "deep-learning"], "description": "More light-weight pytorch experiment library!"}
{"name": "sailist/thexp", "full_name": "pytorch-lumo/lumo", "topics": ["pytorch", "deep-learning"], "description": "More light-weight pytorch experiment library!"}
{"name": "salesforce/lavis", "full_name": "salesforce/LAVIS", "topics": ["deep-learning", "deep-learning-library", "image-captioning", "salesforce", "vision-and-language", "vision-framework", "vision-language-pretraining", "vision-language-transformer", "visual-question-anwsering", "multimodal-datasets", "multimodal-deep-learning"], "description": "LAVIS - A One-stop Library for Language-Vision Intelligence"}
{"name": "salesforce/pb-ovd", "full_name": "salesforce/PB-OVD", "topics": [], "description": "A pytorch Implementation of Open Vocabulary Object Detection with Pseudo Bounding-Box Labels"}
{"name": "sally20921/conssl", "full_name": "sally20921/ConSSL", "topics": ["pytorch-ignite", "pytorch-implmention", "latex", "docker", "imagenet-dataset", "cifar-dataset", "pytorch-lightning"], "description": "PyTorch Implementation of SOTA SSL methods "}
{"name": "saminens/medi-coqa", "full_name": "saminens/Medi-CoQA", "topics": ["conversational-ai", "pytorch", "question-answering", "dockerfile", "coqa", "squad", "albert", "clinicalbert", "bert"], "description": "Conversational Question Answering on Clinical Text"}
{"name": "samsunglabs/fcaf3d", "full_name": "SamsungLabs/fcaf3d", "topics": ["pytorch", "object-detection", "3d-object-detection", "scannet", "sun-rgbd", "s3dis", "mmdetection", "fcaf3d"], "description": "[ECCV2022] FCAF3D: Fully Convolutional Anchor-Free 3D Object Detection"}
{"name": "samuela/git-re-basin", "full_name": "samuela/git-re-basin", "topics": ["deep-learning", "deeplearning", "jax", "machine-learning", "neural-networks"], "description": "Code release for \"Git Re-Basin: Merging Models modulo Permutation Symmetries\""}
{"name": "sangwoomo/freezed", "full_name": "sangwoomo/FreezeD", "topics": ["generative-models", "generative-adversarial-network", "transfer-learning", "gan"], "description": "Freeze the Discriminator: a Simple Baseline for Fine-Tuning GANs (CVPRW 2020)"}
{"name": "sarsbug/smp", "full_name": "sarsbug/SMP", "topics": [], "description": "Pytorch implementation for Deep Self-Learning From Noisy Labels"}
{"name": "satya77/transformer_temporal_tagger", "full_name": "satya77/Transformer_Temporal_Tagger", "topics": ["bert-model", "temporal-tagger", "encoder-decoder", "token-classification", "seq2seq", "transformer", "pytorch", "huggingface"], "description": "Code and data form the paper BERT Got a Date: Introducing Transformers to Temporal Tagging"}
{"name": "sdpkjc/abcdrl", "full_name": "sdpkjc/abcdrl", "topics": ["python", "deep-reinforcement-learning", "pytorch", "reinfocement-learning", "deep-learning", "machine-learning"], "description": "Modular Single-file Reinfocement Learning Algorithms Library"}
{"name": "sea-snell/implicit-language-q-learning", "full_name": "Sea-Snell/Implicit-Language-Q-Learning", "topics": ["implicit-q-learning", "iql", "language-model", "nlp", "offline-rl", "python", "pytorch", "q-learning", "reinforcement-learning"], "description": "Official code from the paper \"Offline RL for Natural Language Generation with Implicit Language Q Learning\""}
{"name": "searchableai/kitanaqa", "full_name": "searchableai/KitanaQA", "topics": ["nlp", "natural-language-processing", "pytorch", "adversarial-attacks", "adversarial-training", "data-augmentation", "ml-automation", "question-answering", "bert", "transformer"], "description": "KitanaQA: Adversarial training and data augmentation for neural question-answering models"}
{"name": "separius/simclrv2-pytorch", "full_name": "Separius/SimCLRv2-Pytorch", "topics": ["simclr", "contrastive", "pretrained", "selfsupervised", "resnet", "pytorch"], "description": "Pretrained SimCLRv2 models in Pytorch"}
{"name": "servicenow/azimuth", "full_name": "ServiceNow/azimuth", "topics": ["data-analysis", "error-analysis", "explainability", "machine-learning", "nlp", "text-classification", "saliency-map", "similarity-analysis", "uncertainty-quantification", "explainable-ai", "xai"], "description": "Helping AI practitioners better understand their datasets and models in text classification. From ServiceNow."}
{"name": "shahules786/twitter-sentiment", "full_name": "shahules786/Twitter-Sentiment", "topics": ["sentiment-analyzer", "twitter-domain", "natural-language-processing", "pytorch", "embedding-vectors"], "description": "Sentiment analyzer for your tweets."}
{"name": "shaofengzeng/superpoint-pytorch", "full_name": "shaofengzeng/SuperPoint-Pytorch", "topics": ["image", "keypoint"], "description": "Pytorch Implementation of rpautrat/SuperPoint"}
{"name": "shaoshengsong/quarkdet", "full_name": "shaoshengsong/quarkdet", "topics": ["object-detection", "efficientdet", "ghostnet", "mobilenetv3", "shufflenetv2", "fpn", "pan", "bifpn", "quarkdet", "nanodet", "fcos", "mosaic", "pytorch"], "description": "QuarkDet  lightweight object detection in PyTorch .Real-Time Object Detection on Mobile Devices."}
{"name": "shathe/3d-mininet", "full_name": "Shathe/3D-MiniNet", "topics": [], "description": "Official Implementation in Pytorch and Tensorflow of 3D-MiniNet: Learning a 2D Representation from Point Clouds for Fast and Efficient 3D LIDAR Semantic Segmentation"}
{"name": "shgaurav1/dvg", "full_name": "shgaurav1/DVG", "topics": ["ffmpeg", "gaussian-processes", "video", "video-generation", "video-generator", "video-processing", "video-synthesis", "diverse-video-generation", "convolutional-neural-networks", "deep-learning", "deep-neural-networks", "lstm-neural-networks", "machine-learning"], "description": "Diverse Video Generation using a Gaussian Process Trigger"}
{"name": "shilrley6/faster-r-cnn-with-model-pretrained-on-visual-genome", "full_name": "shilrley6/Faster-R-CNN-with-model-pretrained-on-Visual-Genome", "topics": [], "description": "Faster RCNN model in Pytorch version, pretrained on the Visual Genome with ResNet 101"}
{"name": "shiming-chen/cde-gan", "full_name": "shiming-chen/CDE-GAN", "topics": ["generative-adversarial-network", "evolutionary-computation"], "description": "Official PyTorch Implementation of CDE-GAN (TEVC'21)"}
{"name": "shivangi-aneja/cosmos", "full_name": "sanonymous22/COSMOS", "topics": ["dataset", "misinformation", "cheapfakes", "fake-news", "deepfakes", "deepfake-detection", "computer-vision", "deep-learning", "pytorch", "machine-learning", "nlp"], "description": "COSMOS: Catching Out-of-Context Misinformation using Self Supervised Learning (AAAI 2023)"}
{"name": "sicara/gpumonitor", "full_name": "sicara/gpumonitor", "topics": ["tensorflow", "pytorch-lightning", "gpu-monitoring"], "description": "TF 2.x and PyTorch Lightning Callbacks for GPU monitoring"}
{"name": "simonrennotte/data-efficient-reinforcement-learning-with-probabilistic-model-predictive-control", "full_name": "SimonRennotte/Data-Efficient-Reinforcement-Learning-with-Probabilistic-Model-Predictive-Control", "topics": ["reinforcement-learning", "pytorch", "pytorch-implementation", "gpytorch", "gaussian-processes", "model-predictive-control", "model-based-reinforcement-learning", "paper", "control-animation", "uncertainty"], "description": "Unofficial Implementation of the paper \"Data-Efficient Reinforcement Learning with Probabilistic Model Predictive Control\", applied to gym environments"}
{"name": "sithu31296/pytorch-onnx-tflite", "full_name": "sithu31296/PyTorch-ONNX-TFLite", "topics": ["onnx-tf", "tflite", "pytorch", "tflite-conversion"], "description": "Conversion of PyTorch Models into TFLite"}
{"name": "siyuhuang/posestylizer", "full_name": "siyuhuang/PoseStylizer", "topics": ["person-image-generation", "pytorch"], "description": "PyTorch implementation of Generating Person Images with Appearance-aware Pose Stylizer (IJCAI 2020)"}
{"name": "sjtuytc/largescalenerfpytorch", "full_name": "sjtuytc/LargeScaleNeRFPytorch", "topics": ["nerf", "nerf-w", "pytorch-implementation", "block-nerf", "city-nerf", "custum-nerf", "mega-nerf", "view-synthesis", "weekly-nerf", "weekly", "classified", "pytorch-implementations", "pytorch", "pytorch-lightning", "chinese-translation", "deep-learning"], "description": "1. Non-official implementation of Block-NeRF and Mega-NeRF in Pytorch. 2. Train your large-scale NeRF in the wild. 3. Weekly classified NeRF literature."}
{"name": "skoltech-nlp/rudetoxifier", "full_name": "s-nlp/rudetoxifier", "topics": ["style-transfer", "nlp", "russian-language"], "description": "Code and data of \"Methods for Detoxification of Texts for the Russian Language\" paper"}
{"name": "skylark0924/machine-learning-is-all-you-need", "full_name": "Skylark0924/Machine-Learning-is-ALL-You-Need", "topics": ["deep-reinforcement-learning", "keras", "pytorch", "tensorflow", "convolutional-neural-networks", "lstm", "dqn", "ddpg", "actor-critic", "ppo", "trpo", "qlearning", "logistic-regression", "support-vector-machine", "k-nearest-neighbours", "naive-bayes-classifier", "decision-trees", "random-forest", "gan", "resnet"], "description": "\ud83d\udd25\ud83c\udf1f\u300aMachine Learning \u683c\u7269\u5fd7\u300b: ML + DL + RL basic codes and notes by sklearn, PyTorch, TensorFlow, Keras & the most important, from scratch!\ud83d\udcaa This repository is ALL You Need!"}
{"name": "skypilot-org/skypilot", "full_name": "skypilot-org/skypilot", "topics": ["cloud-computing", "data-science", "deep-learning", "gpu", "hyperparameter-tuning", "machine-learning", "tpu", "job-queue", "job-scheduler", "cloud-management", "distributed-training", "ml-infrastructure", "multicloud", "spot-instances", "ml-platform", "cost-management", "cost-optimization", "finops"], "description": "SkyPilot is a framework for easily running machine learning workloads on any cloud through a unified interface."}
{"name": "skywalker023/focused-empathy", "full_name": "skywalker023/focused-empathy", "topics": ["nlp", "conference-paper", "empathy", "dialogue-systems", "chatbot", "pragmatics", "perspective-taking", "dataset", "deep-learning", "pytorch", "emotion", "emotion-cause"], "description": "\ud83e\udd17 Code and Dataset for our EMNLP 2021 paper: \"Perspective-taking and Pragmatics for Generating Empathetic Responses Focused on Emotion Causes\""}
{"name": "slyautomation/osrs_yolov5", "full_name": "slyautomation/osrs_yolov5", "topics": ["cuda", "pytorch", "yolov5", "python", "pycharm", "osrs", "runescape", "botting", "machine-learning", "mlbot"], "description": "Yolov5 Object Detection In OSRS using Python code, Detecting Cows - Botting"}
{"name": "smoke-trees/voice-synthesis", "full_name": "smoke-trees/Voice-synthesis", "topics": ["voice-synthesis", "voice-cloning", "sv2tts", "pytorch-implementation", "tensorflow", "keras", "speech-to-text"], "description": "This repository is an implementation of Transfer Learning from Speaker Verification to Multispeaker Text-To-Speech Synthesis (SV2TTS) with a vocoder that works in real-time. SV2TTS is a three-stage deep learning framework that allows to create a numerical representation of a voice from a few seconds of audio, and to use it to condition a text-to-speech model trained to generalize to new voices."}
{"name": "snap-research/mmvid", "full_name": "snap-research/MMVID", "topics": ["deep-learning", "video-generation", "multimodal-learning", "text-to-video", "multimodal-video-generation", "transformer", "bert"], "description": "[CVPR 2022] Show Me What and Tell Me How: Video Synthesis via Multimodal Conditioning"}
{"name": "snunlp/kr-bert", "full_name": "snunlp/KR-BERT", "topics": ["nlp"], "description": "KoRean based BERT pre-trained models (KR-BERT) for Tensorflow and PyTorch"}
{"name": "soloist-v/autostrike", "full_name": "soloist-v/AutoStrike", "topics": ["cf", "crossfire", "yolo", "yolov5", "screenshot", "ai", "pytorch", "mouse", "game", "csgo", "cheat"], "description": null}
{"name": "songweige/tats", "full_name": "SongweiGe/TATS", "topics": ["pytorch", "text-to-video", "video-generation", "video-manipulation", "video-synthesizer", "audio-to-video", "long-video-generation"], "description": "Official PyTorch implementation of TATS: A Long Video Generation Framework with Time-Agnostic VQGAN and Time-Sensitive Transformer (ECCV 2022)"}
{"name": "sony/model_optimization", "full_name": "sony/model_optimization", "topics": ["deep-learning", "quantization", "network-compression", "network-quantization", "deep-neural-networks", "machine-learning", "edge-ai", "neural-network", "optimizer", "ptq", "pytorch", "qat", "tensorflow"], "description": "Model Compression Toolkit (MCT) is an open source project for neural network model optimization under efficient, constrained hardware. This project provides researchers, developers, and engineers advanced quantization and compression tools for deploying state-of-the-art neural networks."}
{"name": "spokestack/spokestack-python", "full_name": "spokestack/spokestack-python", "topics": ["text-to-speech", "nlu", "voice-recognition", "tts", "nlp", "natural-language-processing", "natural-language-understanding", "speech-recognition", "speech-to-text", "speech-synthesis", "raspberry-pi", "keyword-spotting", "bot", "tensorflow", "embedded", "deep-learning", "machine-learning", "smart-home"], "description": "Spokestack is a library that allows a user to easily incorporate a voice interface into any Python application with a focus on embedded systems."}
{"name": "spotify/realbook", "full_name": "spotify/realbook", "topics": ["audio", "cqt", "librosa", "machine-learning", "mel-spectrogram", "spectrograms", "stft", "tensorflow"], "description": "Easier audio-based machine learning with TensorFlow."}
{"name": "stan-hua/cytoimagenet", "full_name": "stan-hua/CytoImageNet", "topics": ["dataset", "transfer-learning", "cytoimagenet", "deep-learning"], "description": "A large-scale pretraining dataset for bioimage transfer learning"}
{"name": "stas00/toolbox", "full_name": "stas00/toolbox", "topics": ["make", "python", "bash", "pytorch", "slurm"], "description": "Essential programming tools in my toolbox"}
{"name": "stefanheng/symbolic-music-generation", "full_name": "StefanHeng/Symbolic-Music-Generation", "topics": ["nlp", "representation-learning", "music-generation", "music-xml", "midi", "melody-generation", "transformer", "transformer-decoder", "transformers-models", "melody-extraction", "autoregressive-models", "transformer-xl", "reformer"], "description": "Symbolic music generation taking inspiration from NLP and human composition process"}
{"name": "stephanakkerman/tensortrade", "full_name": "StephanAkkerman/TensorTrade", "topics": ["tensortrade", "benchmark", "heatmap", "reinforcement-learning", "python", "tensorflow", "automated-trading", "automated-trading-bot", "binance", "cryptocurrency", "crypto"], "description": "This repository hosts all my code related to TensorTrade. It consists of the main program, its old versions, and some extras for more insights."}
{"name": "stevewongv/instanceshadowdetection", "full_name": "stevewongv/InstanceShadowDetection", "topics": ["cvpr2020", "computer-vision", "deep-learning", "shadow-detection", "detectron2", "instance-shadow-detection", "instance-detection"], "description": "Instance Shadow Detection (CVPR 2020)"}
{"name": "stewy33/pong-with-policy-gradients", "full_name": "stewy33/pong-with-policy-gradients", "topics": ["reinforcement-learning", "policy-gradients", "pong", "pytorch", "rl-workshop", "tensorboard"], "description": "Code for an intro to RL workshop. You'll be training a simple agent to play pong using policy gradients. Adapted from http://karpathy.github.io/2016/05/31/rl/"}
{"name": "sulaimanvesal/pointcloududa", "full_name": "sulaimanvesal/PointCloudUDA", "topics": ["domain-adaptation", "segmentation", "cardiac-segmentation", "deep-learning", "point-cloud", "unsupervised-learning"], "description": "[IEEE-TMI 2021] This is our PyTorch implementation for Adapt Everywhere paper on unsupervised domain adaptation using entropy and point-cloud paper. "}
{"name": "svjan5/kg-reeval", "full_name": "svjan5/kg-reeval", "topics": ["acl2020", "knowledge-graph", "knowledge-graph-completion", "deep-learning"], "description": "ACL 2020: A Re-evaluation of Knowledge Graph Completion Methods"}
{"name": "symbioticlab/fedscale", "full_name": "SymbioticLab/FedScale", "topics": ["benchmark", "dataset", "machine-learning", "federated-learning", "icml", "deep-learning", "mlsys", "osdi", "deployment", "distributed", "pytorch", "tensorflow"], "description": "FedScale is a scalable and extensible open-source federated learning (FL) platform."}
{"name": "szzexpoi/air", "full_name": "szzexpoi/AiR", "topics": ["saliency-maps", "attention-supervision", "attention", "machine-attention"], "description": "Official Repository for ECCV 2020 paper \"AiR: Attention with Reasoning Capability\""}
{"name": "taesikgong/metasense_public", "full_name": "TaesikGong/MetaSense_public", "topics": ["dataset", "deep-learning", "human-activity-recognition", "machine-learning", "meta-learning"], "description": "The official PyTorch Implementation of MetaSense (MetaSense: Few-Shot Adaptation to Untrained Conditions in Deep Mobile Sensing, ACM SenSys '19)."}
{"name": "tatigabru/kaggle-rsna", "full_name": "tatigabru/kaggle-rsna", "topics": ["object-detection", "python", "machine-learning", "deep-learning", "detection", "image-processing", "image-augmentation", "pneumonia-detection", "retinanet", "neural-networks", "classification", "medical-imaging", "computer-assisted-diagnosis"], "description": "Deep Learning for Automatic Pneumonia Detection, RSNA challenge"}
{"name": "tatp22/multidim-positional-encoding", "full_name": "tatp22/multidim-positional-encoding", "topics": ["tensorflow", "pytorch", "deep-learning"], "description": "An implementation of 1D, 2D, and 3D positional encoding in Pytorch and TensorFlow"}
{"name": "taufikxu/triple-gan", "full_name": "taufikxu/Triple-GAN", "topics": [], "description": "Pytorch for Triple-GAN"}
{"name": "tech-srl/how_attentive_are_gats", "full_name": "tech-srl/how_attentive_are_gats", "topics": ["how", "attentive", "are", "graph", "attention", "networks", "graph-neural-networks", "pytorch", "graph-attention-networks", "gat", "gatv2"], "description": "Code for the paper \"How Attentive are Graph Attention Networks?\" (ICLR'2022)"}
{"name": "tencent-quantum-lab/tensorcircuit", "full_name": "tencent-quantum-lab/tensorcircuit", "topics": ["machine-learning", "quantum", "quantum-algorithms", "quantum-circuit", "quantum-computing", "quantum-simulation", "automatic-differentiation", "tensor-network", "neural-network", "tensorflow", "jax", "nisq", "pytorch", "quantum-noise", "matrix-product-states", "open-quantum-systems", "quantum-machine-learning", "variational-quantum-algorithms", "quantum-error-mitigation"], "description": "Tensor network based quantum software framework for the NISQ era"}
{"name": "tencent/tencentpretrain", "full_name": "Tencent/TencentPretrain", "topics": ["albert", "bart", "bert", "chinese", "classification", "clue", "elmo", "fine-tuning", "gpt", "gpt-2", "model-zoo", "natural-language-processing", "ner", "pegasus", "pre-training", "pytorch", "roberta", "t5", "unilm", "xlm-roberta"], "description": "Tencent Pre-training framework in PyTorch & Pre-trained Model Zoo "}
{"name": "tencentmusic/cube-studio", "full_name": "tencentmusic/cube-studio", "topics": ["kubernetes", "inference", "mlops", "workflow", "ai", "pytorch", "spark", "argo", "kubeflow", "automl"], "description": "\u4e91\u539f\u751f\u4e00\u7ad9\u5f0f\u673a\u5668\u5b66\u4e60\u5e73\u53f0\uff0c\u591a\u79df\u6237\uff0c\u6570\u636e\u8d44\u4ea7\uff0cnotebook\u5728\u7ebf\u5f00\u53d1\uff0c\u62d6\u62c9\u62fd\u4efb\u52a1\u6d41\u7f16\u6392\uff0c\u591a\u673a\u591a\u5361\u5206\u5e03\u5f0f\u8bad\u7ec3\uff0c\u8d85\u53c2\u641c\u7d22\uff0c\u63a8\u7406\u670d\u52a1\uff0c\u591a\u96c6\u7fa4\u8c03\u5ea6\uff0c\u591a\u9879\u76ee\u7ec4\u8d44\u6e90\u7ec4\uff0c\u8fb9\u7f18\u8ba1\u7b97\uff0c\u5927\u6a21\u578b\u5b9e\u65f6\u8bad\u7ec3, ai\u5e94\u7528\u5546\u5e97"}
{"name": "tencentyouturesearch/basearchitecture-eat", "full_name": "TencentYoutuResearch/BaseArchitecture-EAT", "topics": [], "description": "Official pytorch implementation of the paper \"Analogous to Evolutionary Algorithm: Designing a Unified Sequence Model, NeurIPS'21\"."}
{"name": "tensorlayer/tensorlayerx", "full_name": "tensorlayer/TensorLayerX", "topics": ["tensorlayerx", "tensorlayer", "tensorflow", "paddlepaddle", "mindspore", "pytorch", "jittor", "oneflow", "deep-learning", "machine-learning", "neural-network", "python"], "description": "TensorLayerX: A Unified Deep Learning and Reinforcement Learning Framework for All Hardwares, Backends and OS."}
{"name": "tensorlayer/tlxzoo", "full_name": "tensorlayer/TLXZoo", "topics": ["tensorflow", "paddlepaddle", "mindspore", "tensorlayerx", "tensorlayer", "jittor", "oneflow", "pytorch"], "description": "Pre-trained backbones for TensorLayerX"}
{"name": "terrytangyuan/public-talks", "full_name": "terrytangyuan/public-talks", "topics": ["machine-learning", "kubernetes", "deep-learning", "cloud-native", "gitops", "mlops", "public-speaking"], "description": "Slides, videos, and supporting files for my public talks"}
{"name": "tgisaturday/dalle-lightning", "full_name": "tgisaturday/dalle-lightning", "topics": [], "description": "Refactoring dalle-pytorch and taming-transformers for TPU VM"}
{"name": "thinklab-sjtu/pygmtools", "full_name": "Thinklab-SJTU/pygmtools", "topics": ["combinatorial-optimization", "deep-learning", "graph-matching", "python-library"], "description": "Python graph matching solvers & evaluating protocol."}
{"name": "thu-coai/sentilare", "full_name": "thu-coai/SentiLARE", "topics": ["sentiment-polarity", "sentiment-analysis", "sentiment-classification", "pretrained-models", "bert", "linguistic-features", "part-of-speech", "pytorch"], "description": "Codes for our paper \"SentiLARE: Sentiment-Aware Language Representation Learning with Linguistic Knowledge\" (EMNLP 2020)"}
{"name": "thu-keg/copen", "full_name": "THU-KEG/COPEN", "topics": ["knowledge-graph", "language-model", "nlp", "probing", "model-analysis"], "description": "The official code and dataset for EMNLP 2022 paper \"COPEN: Probing Conceptual Knowledge in Pre-trained Language Models\"."}
{"name": "thudm/graphmae", "full_name": "THUDM/GraphMAE", "topics": ["graph-neural-networks", "self-supervised-learning", "deep-learning", "pytorch"], "description": "GraphMAE: Self-Supervised Masked Graph Autoencoders in KDD'22"}
{"name": "thudm/multilingual-glm", "full_name": "THUDM/Multilingual-GLM", "topics": ["deep-learning", "language-model", "nlp", "pytorch"], "description": "The multilingual variant of GLM, a general language model trained with autoregressive blank infilling objective "}
{"name": "thudm/proteinlm", "full_name": "THUDM/ProteinLM", "topics": ["protein-language-model", "deep-learning", "transfer-learning", "pretrained-models"], "description": "Protein Language Model"}
{"name": "thuiar/textoir", "full_name": "thuiar/TEXTOIR", "topics": ["open-classification", "natural-language-processing", "dialogue-systems", "intent-recognition", "clustering", "deep-neural-networks", "bert", "intent-discovery", "artificial-intelligence", "acl2021"], "description": "TEXTOIR is a flexible toolkit for open intent detection and discovery. (ACL 2021) "}
{"name": "thuml/anomaly-transformer", "full_name": "thuml/Anomaly-Transformer", "topics": ["anomaly-detection", "deep-learning", "time-series"], "description": "About Code release for \"Anomaly Transformer: Time Series Anomaly Detection with Association Discrepancy\" (ICLR 2022 Spotlight), https://openreview.net/forum?id=LzQQ89U1qm_"}
{"name": "thuml/flowformer", "full_name": "thuml/Flowformer", "topics": ["deep-learning"], "description": "About Code release for \"Flowformer: Linearizing Transformers with Conservation Flows\" (ICML 2022), https://arxiv.org/pdf/2202.06258.pdf"}
{"name": "thunlp/cokebert", "full_name": "thunlp/CokeBERT", "topics": ["bert", "knowledge-graph", "nlp", "pretrained-language-model", "pytorch"], "description": "CokeBERT: Contextual Knowledge Selection and Embedding towards Enhanced Pre-Trained Language Models"}
{"name": "thunlp/hiddenkiller", "full_name": "thunlp/HiddenKiller", "topics": ["nlp", "backdoor-attacks", "nlproc"], "description": "Code and data of the ACL-IJCNLP 2021 paper \"Hidden Killer: Invisible Textual Backdoor Attacks with Syntactic Trigger\""}
{"name": "thunlp/openattack", "full_name": "thunlp/OpenAttack", "topics": ["adversarial-attacks", "nlp", "adversarial-example", "natural-language-processing", "pytorch"], "description": "An Open-Source Package for Textual Adversarial Attack."}
{"name": "thunlp/prompt-transferability", "full_name": "thunlp/Prompt-Transferability", "topics": ["nlp", "parameter-efficient-learning", "pretrained-language-model", "pretrained-language-models", "pretrained-models", "prompt", "prompt-tuning", "pytorch", "transfer-learning", "parameter-efficient-tuning"], "description": "On Transferability of Prompt Tuning for Natural Language Processing"}
{"name": "thunlp/re-context-or-names", "full_name": "thunlp/RE-Context-or-Names", "topics": ["relation-extraction", "pytorch", "bert", "contrastive-learning", "pretrain"], "description": "Bert-based models(BERT, MTB, CP) for relation extraction. "}
{"name": "thunlp/sememepso-attack", "full_name": "thunlp/SememePSO-Attack", "topics": ["nlp", "adversarial-examples", "adversarial-attacks", "sememe", "pso"], "description": "Code and data of the ACL 2020 paper \"Word-level Textual Adversarial Attacking as Combinatorial Optimization\""}
{"name": "tianxiaomo/pytorch-yolov4", "full_name": "Tianxiaomo/pytorch-YOLOv4", "topics": ["yolov4", "pytorch", "darknet2pytorch", "darknet2onnx", "tensorrt", "onnx", "pytorch-yolov4", "yolov4-tiny", "yolov3"], "description": "PyTorch ,ONNX and TensorRT implementation of YOLOv4"}
{"name": "tibhannover/cross-modal_entity_consistency", "full_name": "TIBHannover/cross-modal_entity_consistency", "topics": ["cross-modal-consistency", "cross-modal-entity-verification", "multimodal-retrieval", "image-repurposing-detection", "deep-learning"], "description": "This repository contains the dataset and source files to reproduce the results in the publication M\u00fcller-Budack et al. 2021: \"Multimodal news analytics using measures of cross-modal entity and context consistency\", In: International Journal on Multimedia Information Retrieval (IJMIR), Vol. 10, Art. no. 2, 2021."}
{"name": "titu1994/tf_neural_deconvolution", "full_name": "titu1994/tf_neural_deconvolution", "topics": ["tensorflow2", "tensorflow", "keras"], "description": "Neural Deconvolutions in Tensorflow"}
{"name": "tju-drl-lab/ai-optimizer", "full_name": "TJU-DRL-LAB/AI-Optimizer", "topics": ["reinforcement-learning", "transfer-learning", "deep-learning"], "description": "The next generation deep reinforcement learning tookit"}
{"name": "tk-rusch/lem", "full_name": "tk-rusch/LEM", "topics": ["recurrent-neural-networks", "time-series", "keyword-spotting", "google12", "dynamical-systems", "iclr2022", "iclr", "deep-learning", "lem"], "description": "Official code for Long Expressive Memory (ICLR 2022, Spotlight)"}
{"name": "tongjilibo/bert4torch", "full_name": "Tongjilibo/bert4torch", "topics": ["bert", "nlp", "pytorch", "bert4keras", "named-entity-recognition", "relation-extraction", "seq2seq", "text-classification", "transformers", "bert4torch"], "description": "pytorch implement of transformers refer to bert4keras"}
{"name": "toni-sm/skrl", "full_name": "Toni-SM/skrl", "topics": ["reinforcement-learning", "python", "openai-gym", "isaac-gym", "pytorch", "deep-learning", "deepmind", "gym", "isaac-sim", "nvidia-omniverse", "skrl", "rl", "gymnasium", "machine-learning", "robosuite", "robotics", "isaac-orbit"], "description": "Modular and flexible reinforcement learning library with support for Isaac Gym and Omniverse Isaac Gym environments"}
{"name": "tonyngjichun/solar", "full_name": "tonyngjichun/SOLAR", "topics": ["image-retrieval", "global-descriptors", "local-descriptors", "second-order", "non-local-block", "eccv-2020", "eccv2020", "eccv", "computer-vision", "deep-learning", "pytorch", "cnn"], "description": "PyTorch code for \"SOLAR: Second-Order Loss and Attention for Image Retrieval\". In ECCV 2020"}
{"name": "toriml/dnn-bench", "full_name": "Talmaj/DNN-bench", "topics": ["dnn-bench", "deep-learning", "pytorch", "tensorflow", "onnxruntime", "docker", "optimization", "speedup"], "description": "A library that lets you easily increase efficiency of your deep learning models with no loss of accuracy."}
{"name": "toshas/torch-fidelity", "full_name": "toshas/torch-fidelity", "topics": ["pytorch", "metrics", "gan", "generative-model", "evaluation", "inception-score", "frechet-inception-distance", "kernel-inception-distance", "perceptual-path-length", "precision", "reproducibility", "reproducible-research"], "description": "High-fidelity performance metrics for generative models in PyTorch"}
{"name": "tqch/ddpm-torch", "full_name": "tqch/ddpm-torch", "topics": ["ddpm", "deep-generative-models", "diffusion-models", "pytorch", "denoising-diffusion", "deep-learning"], "description": "Unofficial PyTorch Implementation of Denoising Diffusion Probabilistic Models (DDPM)"}
{"name": "transformer-man/yolo-deepsort-flask", "full_name": "Transformer-man/yolo-deepsort-flask", "topics": ["pytorch", "yolo", "yolov3", "deepsort", "flask", "sort", "deep-sort", "cnn-model", "web", "cnn"], "description": "Target detection and multi target tracking platform based on Yolo DeepSort and Flask."}
{"name": "triton-inference-server/model_navigator", "full_name": "triton-inference-server/model_navigator", "topics": ["deep-learning", "gpu", "inference"], "description": "The Triton Model Navigator is a tool that provides the ability to automate the process of model deployment on the Triton Inference Server."}
{"name": "troublemaker-r/chinese_coreference_resolution", "full_name": "troublemaker-r/Chinese_Coreference_Resolution", "topics": ["python", "pytorch", "chinese-coreference-resolution", "natural-language-processing", "spanbert"], "description": "\u57fa\u4e8eSpanBert\u7684\u4e2d\u6587\u6307\u4ee3\u6d88\u89e3\uff0cpytorch\u5b9e\u73b0"}
{"name": "tteepe/gaitgraph", "full_name": "tteepe/GaitGraph", "topics": ["gait-recognition", "gcn", "hrnet", "pose-estimation", "pytorch", "deep-learning"], "description": "Official repository for \"GaitGraph: Graph Convolutional Network for Skeleton-Based Gait Recognition\" (ICIP'21)"}
{"name": "tud-ccc/compy-learn", "full_name": "tud-ccc/compy-learn", "topics": ["ml4code", "clang", "llvm", "deep-learning", "graph-neural-networks", "recurrent-neural-networks", "llvm-ir", "abstract-syntax-tree"], "description": "ComPy-Learn is a framework for exploring program representations for ML4CODE tasks."}
{"name": "tui-nicr/esanet", "full_name": "TUI-NICR/ESANet", "topics": ["semantic-segmentation", "rgbd", "deep-learning", "deep-neural-networks", "machine-learning", "mobile-robotics", "real-time", "pytorch"], "description": "ESANet: Efficient RGB-D Semantic Segmentation for Indoor Scene Analysis"}
{"name": "tum-daml/gemnet_pytorch", "full_name": "TUM-DAML/gemnet_pytorch", "topics": ["paper", "gnn", "pytorch", "graph-neural-networks"], "description": "GemNet model in PyTorch, as proposed in \"GemNet: Universal Directional Graph Neural Networks for Molecules\" (NeurIPS 2021)"}
{"name": "tum-daml/synthetic_coordinates", "full_name": "TUM-DAML/synthetic_coordinates", "topics": ["paper", "pytorch", "gnn", "graph-neural-networks"], "description": "Synthetic coordinates for GNNs, as proposed in \"Directional Message Passing on Molecular Graphs via Synthetic Coordinates\" (NeurIPS 2021)"}
{"name": "tusen-ai/sst", "full_name": "tusen-ai/SST", "topics": ["pytorch", "3d-object-detection", "autonomous-driving"], "description": "Codes for \u201cFully Sparse 3D Object Detection\u201d & \u201cEmbracing Single Stride 3D Object Detector with Sparse Transformer\u201d"}
{"name": "tusimple/centerformer", "full_name": "TuSimple/centerformer", "topics": ["lidar-point-cloud", "transformer"], "description": "Implementation for CenterFormer: Center-based Transformer for 3D Object Detection (ECCV 2022)"}
{"name": "tusimple/sst", "full_name": "tusen-ai/SST", "topics": ["pytorch", "3d-object-detection", "autonomous-driving"], "description": "Codes for \u201cFully Sparse 3D Object Detection\u201d & \u201cEmbracing Single Stride 3D Object Detector with Sparse Transformer\u201d"}
{"name": "tuvuumass/task-transferability", "full_name": "tuvuumass/task-transferability", "topics": ["transfer-learning", "natural-language-processing", "bert", "task-transferability", "nlp-tasks", "emnlp2020"], "description": "Data and code for our paper \"Exploring and Predicting Transferability across NLP Tasks\", to appear at EMNLP 2020. "}
{"name": "tvs-ai/pytorch_rppgs", "full_name": "remotebiosensing/rppg", "topics": ["deepphys", "mtts", "physnet", "pytorch", "deep-learning", "rppg", "remote-ppg", "blood-pressure", "bp", "ppg2abp"], "description": "implement remote-ppg (rppg;fppg) & PPG 2 ABP model  using pytorch"}
{"name": "twentybn/sense", "full_name": "quic/sense", "topics": ["pytorch", "neural-networks", "deep-learning", "computer-vision", "activity-recognition", "gesture-recognition", "fitness-app", "calorie-estimation", "video"], "description": "Enhance your application with the ability to see and interact with humans using any RGB camera."}
{"name": "twni2016/f-irl", "full_name": "twni2016/f-IRL", "topics": ["imitation-learning", "deep-reinforcement-learning", "inverse-reinforcement-learning", "maxent", "pytorch", "mujoco"], "description": "Inverse Reinforcement Learning via State Marginal Matching - CoRL 2020"}
{"name": "twni2016/pomdp-baselines", "full_name": "twni2016/pomdp-baselines", "topics": ["pomdp", "recurrent-neural-networks", "meta-rl", "robust-rl", "generalization", "deep-reinforcement-learning", "pytorch", "td3", "sac", "discrete-sac", "credit-assignment"], "description": "Simple (but often Strong) Baselines for POMDPs in PyTorch - ICML 2022"}
{"name": "txsun1997/black-box-tuning", "full_name": "txsun1997/Black-Box-Tuning", "topics": ["black-box-optimization", "deep-learning", "few-shot-learning", "language-model", "natural-language-processing", "pytorch"], "description": "ICML'2022: Black-Box Tuning for Language-Model-as-a-Service & EMNLP'2022: BBTv2: Towards a Gradient-Free Future with Large Language Models"}
{"name": "uds-lsv/bert-stable-fine-tuning", "full_name": "uds-lsv/bert-stable-fine-tuning", "topics": ["nlp", "bert", "fine-tuning"], "description": "On the Stability of Fine-tuning BERT: Misconceptions, Explanations, and Strong Baselines"}
{"name": "ukplab/beir", "full_name": "beir-cellar/beir", "topics": ["nlp", "information-retrieval", "bert", "benchmark", "sentence-transformers", "question-generation", "retrieval", "passage-retrieval", "elasticsearch", "dpr", "sbert", "retrieval-models", "dataset", "ance", "colbert", "zero-shot-retrieval", "use-qa", "deep-learning", "pytorch"], "description": "A Heterogeneous Benchmark for Information Retrieval. Easy to use, evaluate your models across 15+ diverse IR datasets."}
{"name": "ultralytics/yolov5", "full_name": "ultralytics/yolov5", "topics": ["yolov3", "yolov4", "yolov5", "object-detection", "pytorch", "onnx", "coreml", "ios", "tflite", "yolo", "deep-learning", "machine-learning", "ml"], "description": "YOLOv5 \ud83d\ude80 in PyTorch > ONNX > CoreML > TFLite"}
{"name": "unifyai/ivy", "full_name": "unifyai/ivy", "topics": ["python", "machine-learning", "deep-learning", "neural-network", "gpu", "autograd", "ivy", "abstraction", "template", "tensorflow", "pytorch", "mxnet", "numpy", "jax"], "description": "The Unified Machine Learning Framework"}
{"name": "univiecube/deepnog", "full_name": "univieCUBE/deepnog", "topics": ["protein-sequences", "orthology-inference", "orthology-assignments", "deep-learning", "machine-learning"], "description": "Protein orthologous group assignment with deep learning"}
{"name": "uoft-ecosystem/hfta", "full_name": "UofT-EcoSystem/hfta", "topics": ["deep-learning", "machine-learning", "pytorch", "gpu", "tpu", "neural-network", "hardware-utilization"], "description": "Boost hardware utilization for ML training workloads via Inter-model Horizontal Fusion"}
{"name": "vanderschaarlab/mlforhealthlabpub", "full_name": "vanderschaarlab/mlforhealthlabpub", "topics": ["machine-learning", "healthcare", "deep-learning"], "description": "Machine Learning and Artificial Intelligence for Medicine. "}
{"name": "vcampsoldiers/swin-transformer-tensorflow", "full_name": "VcampSoldiers/Swin-Transformer-Tensorflow", "topics": ["swin-transformer", "tensorflow", "object-detection", "tf2", "transformer", "tf"], "description": "Unofficial implementation of \"Swin Transformer: Hierarchical Vision Transformer using Shifted Windows\" (https://arxiv.org/abs/2103.14030)"}
{"name": "vdutor/sphericalharmonics", "full_name": "vdutor/SphericalHarmonics", "topics": ["spherical-harmonics", "tensorflow", "pytorch", "jax"], "description": "Zonal Spherical Harmonics in d Dimensions in TensorFlow, PyTorch and Jax"}
{"name": "vector-ai/vectorhub", "full_name": "RelevanceAI/vectorhub", "topics": ["python", "vector", "embeddings", "encodings", "vector-similarity", "transformers", "tfhub", "machine-learning", "deeplearning", "artificial-intelligence", "neural-network", "deep-learning", "tensorflow", "pytorch", "word2vec", "image2vec", "audio-processing", "video-processing"], "description": "Vector Hub - Library for easy discovery, and consumption of State-of-the-art models to turn data into vectors. (text2vec, image2vec, video2vec, graph2vec, bert, inception, etc)"}
{"name": "vibashan/image-fusion-transformer", "full_name": "Vibashan/Image-Fusion-Transformer", "topics": [], "description": "Official Pytorch Code base for  Image-Fusion-Transformer"}
{"name": "vicco-group/thingsvision", "full_name": "ViCCo-Group/thingsvision", "topics": ["pytorch", "neural-networks", "computer-vision", "tensorflow", "deep-learning", "representations"], "description": "Python package for extracting and analyzing image representations from state-of-the-art neural networks for computer vision"}
{"name": "vita-group/gan-lth", "full_name": "VITA-Group/GAN-LTH", "topics": ["gan", "generative-adversarial-network", "lottery-ticket-hypothesis", "transfer", "pruning"], "description": "[ICLR 2021] \"GANs Can Play Lottery Too\" by Xuxi Chen, Zhenyu Zhang, Yongduo Sui, Tianlong Chen "}
{"name": "vita-group/sandwich-batch-normalization", "full_name": "VITA-Group/Sandwich-Batch-Normalization", "topics": ["neural-architecture-search", "gan", "style-transfer", "adversarial-training", "batch-normalization", "normalization", "sandwich-batch-normalization", "sabn", "nas", "pytorch"], "description": "[WACV 2022] \"Sandwich Batch Normalization: A Drop-In Replacement for Feature Distribution Heterogeneity\" by Xinyu Gong, Wuyang Chen, Tianlong Chen and Zhangyang Wang"}
{"name": "vita-group/transgan", "full_name": "VITA-Group/TransGAN", "topics": ["transformer", "transformer-encoder", "transformer-models", "gan", "pytorch"], "description": "[NeurIPS\u20182021] \"TransGAN: Two Pure Transformers Can Make One Strong GAN, and That Can Scale Up\", Yifan Jiang, Shiyu Chang, Zhangyang Wang"}
{"name": "vita-group/ultra-data-efficient-gan-training", "full_name": "VITA-Group/Ultra-Data-Efficient-GAN-Training", "topics": ["gan", "generative-adversarial-network", "lottery-ticket-hypothesis", "data-efficient", "augmentation", "data-efficient-gan-training"], "description": "[NeurIPS'21] \"Ultra-Data-Efficient GAN Training: Drawing A Lottery Ticket First, Then Training It Toughly\", Tianlong Chen, Yu Cheng, Zhe Gan, Jingjing Liu, Zhangyang Wang "}
{"name": "vita-group/weaknas", "full_name": "VITA-Group/WeakNAS", "topics": ["pytorch", "neural-architecture-search", "nasbench", "nas-bench-101", "nas-bench-201", "mobilenet-space", "deep-learning"], "description": "[NeurIPS 2021] \u201cStronger NAS with Weaker Predictors\u201c, Junru Wu, Xiyang Dai, Dongdong Chen, Yinpeng Chen, Mengchen Liu, Ye Yu, Zhangyang Wang, Zicheng Liu, Mei Chen and Lu Yuan"}
{"name": "voxel51/fiftyone", "full_name": "voxel51/fiftyone", "topics": ["machine-learning", "artificial-intelligence", "deep-learning", "computer-vision", "developer-tools", "data-science", "python", "hacktoberfest"], "description": "The open-source tool for building high-quality datasets and computer vision models"}
{"name": "vztu/maxim-pytorch", "full_name": "vztu/maxim-pytorch", "topics": ["architecture", "computer-vision", "deblurring", "dehazing", "denoising", "deraining", "enhancement", "image", "image-enhancement", "image-processing", "image-restoration", "low-level-vision", "mlp", "restoration", "retouching", "transformer"], "description": "[CVPR 2022 Oral] PyTorch re-implementation for \"MAXIM: Multi-Axis MLP for Image Processing\", with *training code*. Official Jax repo: https://github.com/google-research/maxim"}
{"name": "waking95/easy-bert", "full_name": "waking95/easy-bert", "topics": ["bert", "torch", "transformers", "nlp", "classification", "sequence-labelling", "knowledge-distillation", "chinese-nlp", "chinese", "deep-learning", "nlp-library"], "description": "easy-bert\u662f\u4e00\u4e2a\u4e2d\u6587NLP\u5de5\u5177\uff0c\u63d0\u4f9b\u8bf8\u591abert\u53d8\u4f53\u8c03\u7528\u548c\u8c03\u53c2\u65b9\u6cd5\uff0c\u6781\u901f\u4e0a\u624b\uff1b\u6e05\u6670\u7684\u8bbe\u8ba1\u548c\u4ee3\u7801\u6ce8\u91ca\uff0c\u4e5f\u5f88\u9002\u5408\u5b66\u4e60"}
{"name": "walsvid/generation3d", "full_name": "walsvid/Generation3D", "topics": ["3d-reconstruction", "deep-learning", "shape-generation", "3d-deep-learning", "disn", "pixel2mesh"], "description": " 3D Shape Generation Baselines in PyTorch."}
{"name": "wangcongcong123/ttt", "full_name": "wangcongcong123/ttt", "topics": ["transformers", "tpus", "tensorflow2", "nlp", "t5"], "description": "A package for fine-tuning Transformers with TPUs, written in Tensorflow2.0+"}
{"name": "we0091234/chinese_license_plate_detection_recognition", "full_name": "we0091234/Chinese_license_plate_detection_recognition", "topics": ["deep-learning", "pytorch", "plate-recognition", "yolov5"], "description": "yolov5 \u8f66\u724c\u68c0\u6d4b   \u8f66\u724c\u8bc6\u522b   \u4e2d\u6587\u8f66\u724c\u8bc6\u522b \u68c0\u6d4b \u652f\u630112\u79cd\u4e2d\u6587\u8f66\u724c \u652f\u6301\u53cc\u5c42\u8f66\u724c"}
{"name": "wellcometrust/wellcomeml", "full_name": "wellcometrust/WellcomeML", "topics": ["deep-learning", "scibert", "transformers", "nlp", "datascience"], "description": "Repository for Machine Learning utils at the Wellcome Trust"}
{"name": "wenzhu23333/differential-privacy-based-federated-learning", "full_name": "wenzhu23333/Differential-Privacy-Based-Federated-Learning", "topics": ["federated-learning", "differential-privacy", "privacy", "pytorch", "deep-learning", "laplace", "gaussian"], "description": "Everything you want about DP-Based Federated Learning, including Papers and Code. (Mechanism: Laplace or Gaussian, Dataset: femnist, shakespeare, mnist, cifar-10 and fashion-mnist. )"}
{"name": "wesleyhsieh0806/c3-sl", "full_name": "WesleyHsieh0806/C3-SL", "topics": ["communication-efficient", "computer-vision", "deep-learning", "machine-learning", "split-learning"], "description": "C3-SL: Circular Convolution-Based Batch-Wise Compression for Communication-Efficient Split Learning (IEEE MLSP 2022)"}
{"name": "westlake-ai/openmixup", "full_name": "Westlake-AI/openmixup", "topics": ["pytorch", "awesome-list", "awesome-mim", "awesome-mixup", "contrastive-learning", "data-augmentation", "image-classifcation", "imagenet", "masked-image-modeling", "mixup", "self-supervised-learning", "semi-supervised-learning", "vision-transformer", "deep-learning", "benchmark", "automix"], "description": "CAIRI Supervised, Semi- and Self-Supervised Visual Representation Learning Toolbox and Benchmark"}
{"name": "wiedersehne/paramixer", "full_name": "wiedersehne/Paramixer", "topics": ["attention", "deep-learning", "machine-learning", "parameterization", "transformer"], "description": "Parameterizing Mixing Links in Sparse Factors Works Better than Dot-Product Self-Attention (CVPR 2022)"}
{"name": "willi-menapace/playablevideogeneration", "full_name": "willi-menapace/PlayableVideoGeneration", "topics": [], "description": "Official Pytorch implementation of \"Playable Video Generation\", CVPR 2022 (Oral)"}
{"name": "wilmerwang/scramble4gpu", "full_name": "wilmerwang/GPUSnatcher", "topics": ["pytorch", "tensorflow"], "description": "\u62a2\u5360\u663e\u5361"}
{"name": "wisnunugroho21/reinforcement_learning_phasic_policy_gradient", "full_name": "wisnunugroho21/reinforcement_learning_phasic_policy_gradient", "topics": ["reinforcement-learning", "phasic-policy-gradient", "proximal-policy-optimization", "ppo", "pytorch", "tensorflow2", "deep-learning"], "description": "Deep Reinforcement Learning by using Phasic Policy Gradient in Pytorch & Tensorflow"}
{"name": "wnma3mz/flearn", "full_name": "wnma3mz/flearn", "topics": ["deep-learning", "federated-learning", "ensemble-learning", "privacy-protection", "framework", "pytorch"], "description": "Federated Learning Framework"}
{"name": "wqt2019/tacotron-2_melgan", "full_name": "wqt2019/tacotron-2_melgan", "topics": [], "description": "tacotron-2(tensorflow) + melgan(pytorch) chinese TTS"}
{"name": "wtjiang98/psgan", "full_name": "wtjiang98/PSGAN", "topics": ["psgan", "pytorch", "makeup-transfer", "makeup", "generative-adversarial-network", "gan"], "description": "PyTorch code for \"PSGAN: Pose and Expression Robust Spatial-Aware GAN for Customizable Makeup Transfer\" (CVPR 2020 Oral)"}
{"name": "wwmark/meshgraphnets", "full_name": "wwMark/meshgraphnets", "topics": [], "description": "Rewrite deepmind/meshgraphnets into pytorch"}
{"name": "xai-demonstrator/xai-demonstrator", "full_name": "XAI-Demonstrator/xai-demonstrator", "topics": ["xai", "ai", "explainable-ai", "mobile-first", "pytorch", "huggingface-transformers", "fastapi", "vuejs", "machine-learning", "keras", "tensorflow", "docker"], "description": "The XAI Demonstrator is a modular platform that lets users interact with production-grade Explainable AI (XAI) systems."}
{"name": "xcmyz/fastspeech2", "full_name": "xcmyz/FastSpeech2", "topics": ["fastspeech", "fastspeech2", "speech-synthesis", "pytorch", "tts"], "description": "The Implementation of FastSpeech2 Based on Pytorch."}
{"name": "xharlie/btcdet", "full_name": "Xharlie/BtcDet", "topics": ["pytorch", "deep-learning", "point-cloud", "object-detection", "3d", "3d-object-detection", "lidar-point-cloud", "lidar", "autonomous-vehicles", "autonomous-driving", "occlusion-handling", "occlusion", "generative-model", "aaai2022", "aaai-2022", "self-driving-car", "self-driving", "computer-vision"], "description": "Behind the Curtain: Learning Occluded Shapes for 3D Object Detection"}
{"name": "xiangking/ark-nlp", "full_name": "xiangking/ark-nlp", "topics": ["nlp", "transfomer", "bert"], "description": "A private nlp coding package, which quickly implements the SOTA solutions."}
{"name": "xiaoxiao-woo/udl", "full_name": "XiaoXiao-Woo/UDL", "topics": [], "description": "a practicable Pytorch framework used in Deep Learning. So far UDL only provide DCFNet implementation for the ICCV paper (Dynamic Cross Feature Fusion for Remote Sensing Pansharpening)"}
{"name": "xiayouran/visutvm", "full_name": "xiayouran/VisuTVM", "topics": ["cpp", "python3", "tvm", "visualization", "visualization-tools", "relay-ir", "tvm-relay-ir", "visu-relay-ir", "visu-tvm", "neural-network", "neural-network-visualization"], "description": "TVM Relay IR Visualization Tool (TVM \u53ef\u89c6\u5316\u5de5\u5177)"}
{"name": "xindongzhang/simpleir", "full_name": "xindongzhang/SimpleIR", "topics": ["pytorch", "super-resolution", "efficient", "mobile"], "description": "A Simple framework for image restoration, it includes ECBSR, ELAN and other SOTAs."}
{"name": "xingyu-lin/mbpo_pytorch", "full_name": "Xingyu-Lin/mbpo_pytorch", "topics": [], "description": "A pytorch reprelication of the model-based reinforcement learning algorithm MBPO"}
{"name": "xionghuichen/rlassistant", "full_name": "xionghuichen/RLAssistant", "topics": ["reinforcement-learning", "pytorch", "tensorflow", "experiment-tracker", "training-tracking"], "description": "RLA is a tool for managing your RL experiments automatically"}
{"name": "xrenaa/disco", "full_name": "xrenaa/DisCo", "topics": ["deep-learning", "generative-adversarial-network", "generative-model", "disentangled-representations", "gan", "pytorch", "unsupervised-learning", "gans", "pytorch-implementation"], "description": "[ICLR2022] Code for \"Learning Disentangled Representation by Exploiting Pretrained Generative Models: A Contrastive Learning View\""}
{"name": "xuarehere/yolovx_deepsort_pytorch", "full_name": "xuarehere/yolo_series_deepsort_pytorch", "topics": ["pytorch", "sort", "yolo", "yolov3", "yolov4", "yolov4-deepsort", "yolov5", "yolov5-deepsort", "yolov5-deepsort-pytorch", "yolov6", "yolov7", "yolov6-deepsort", "yolov7-deepsort", "deepsort", "deep-sort", "deep-sort-tracking", "mot-tracking", "object-tracking", "mot", "yolov8-deepsort"], "description": "Deepsort with yolo series. This project support the existing yolo detection model algorithm (YOLOV8,  YOLOV7,  YOLOV6,  YOLOV5,  YOLOV4Scaled,  YOLOV4, YOLOv3', PPYOLOE,  YOLOR,  YOLOX )."}
{"name": "xuchensjtu/sat-master-online", "full_name": "xuChenSJTU/SAT-master-online", "topics": [], "description": "This is a Pytorch implementation of our \"Learning on Attribute-Missing Graphs\"."}
{"name": "xue-pai/fuxictr", "full_name": "xue-pai/FuxiCTR", "topics": ["ctr-prediction", "recommender-systems", "ctr", "cvr", "pytorch"], "description": "A configurable, tunable, and reproducible library for CTR prediction https://fuxictr.github.io/tutorials"}
{"name": "xuhongzuo/outlier-interpretation", "full_name": "xuhongzuo/outlier-interpretation", "topics": ["anomaly-detection", "deep-learning", "explanability", "outlier-detection", "outlier-aspect-mining", "outlier-interpretation"], "description": "(WWW'21) ATON - an Outlier Interpreation / Outlier explanation method"}
{"name": "xuxy09/rawsr", "full_name": "xuxy09/RawSR", "topics": ["super-resolution", "deep-learning"], "description": "Exploiting raw images for real-scene super-resolution, TPAMI 2021"}
{"name": "xuyige/bert4doc-classification", "full_name": "xuyige/BERT4doc-Classification", "topics": ["natural-language-processing", "bert", "text-classification"], "description": "Code and source for paper ``How to Fine-Tune BERT for Text Classification?``"}
{"name": "xuyuan/waymo_2d_tracking", "full_name": "xuyuan/waymo_2d_tracking", "topics": ["autonomous-driving", "deep-learning", "object-detection", "tracking", "pytorch"], "description": "3rd place solution of Waymo open dataset challenge 2D tracking track"}
{"name": "xv44586/toolkit4nlp", "full_name": "xv44586/toolkit4nlp", "topics": ["keras", "bert", "nlp"], "description": "transformers implement (architecture, task example, serving and more)"}
{"name": "xwhan/proqa", "full_name": "xwhan/ProQA", "topics": ["natural-language-processing", "question-answering", "pytorch", "information-retrieval"], "description": "Progressively Pretrained Dense Corpus Index for Open-Domain QA and Information Retrieval"}
{"name": "xwinxu/bayesde", "full_name": "xwinxu/bayeSDE", "topics": ["sde-solvers", "stochastic-differential-equations", "pytorch", "bayesian-layers", "jax", "neural-sde", "neural-ode", "bayesian-neural-networks", "deep-learning", "deep-neural-networks"], "description": "Code for \"Infinitely Deep Bayesian Neural Networks with Stochastic Differential Equations\""}
{"name": "yale-lily/summertime", "full_name": "Yale-LILY/SummerTime", "topics": ["nlp", "python", "deep-learning", "neural-networks", "text-summarization", "pytorch"], "description": "An open-source text summarization toolkit for non-experts."}
{"name": "yamonc/new-pytorch-chinese", "full_name": "yamonc/New-Pytorch-Chinese", "topics": [], "description": "\u4e2d\u6587\u6587\u672c\u6458\u8981\uff0c\u57fa\u4e8epytorch\uff0c\u91c7\u7528LCSTS\u6570\u636e\u96c6"}
{"name": "yangnaruto/fq-gan", "full_name": "YangNaruto/FQ-GAN", "topics": ["biggan", "gans", "pytorch", "tensorflow", "image-translation", "image-generation", "stylegan"], "description": "Official implementation of FQ-GAN"}
{"name": "yangxue0827/rotationdetection", "full_name": "yangxue0827/RotationDetection", "topics": [], "description": "This is a tensorflow-based rotation detection benchmark, also called AlphaRotate."}
{"name": "yangyanli/do-conv", "full_name": "yangyanli/DO-Conv", "topics": ["deep-learning", "convolutional-neural-networks", "tensorflow", "pytorch", "gluoncv"], "description": "Depthwise Over-parameterized Convolutional Layer"}
{"name": "yanndubs/lossyless", "full_name": "YannDubs/lossyless", "topics": ["pytorch", "machine-learning", "python", "deep-learning", "compression", "self-supervised-learning"], "description": "Generic image compressor for machine learning. Pytorch code for our paper \"Lossy compression for lossless prediction\"."}
{"name": "yanx27/pointasnl", "full_name": "yanx27/PointASNL", "topics": ["point-cloud", "segmentation", "classification", "sample", "tensorflow", "self-driving", "modelnet-dataset", "semantickitti", "scannet-dataset"], "description": "PointASNL: Robust Point Clouds Processing using Nonlocal Neural Networks with Adaptive Sampling \uff08CVPR 2020\uff09"}
{"name": "yashsmehta/personality-prediction", "full_name": "yashsmehta/personality-prediction", "topics": ["language-model", "personality-predicting", "pytorch", "bert-fine-tuning", "personality-detection"], "description": "Experiments for automated personality detection using Language Models and psycholinguistic features on various famous personality datasets including the Essays dataset (Big-Five)"}
{"name": "yerfor/syntaspeech", "full_name": "yerfor/SyntaSpeech", "topics": ["gan", "pytorch", "speech-synthesis", "tts"], "description": "SyntaSpeech: Syntax-aware Generative Adversarial Text-to-Speech; IJCAI 2022; Official code"}
{"name": "yester31/tensorrt_ex", "full_name": "yester31/TensorRT_EX", "topics": ["cuda", "tensorrt", "quantization", "ptq", "pytorch", "vgg", "resnet", "unet", "detr", "yolov5", "yolov6"], "description": "Deep Learning Model Optimization Using by TensorRT API, window"}
{"name": "yfletberliac/adversarially-guided-actor-critic", "full_name": "yfletberliac/adversarially-guided-actor-critic", "topics": ["adversarially-guided-actor-critic", "tensorflow", "pytorch"], "description": "AGAC: Adversarially Guided Actor-Critic"}
{"name": "yiconghong/discrete-continuous-vln", "full_name": "YicongHong/Discrete-Continuous-VLN", "topics": ["cvpr2022", "vision-and-language-navigation", "vision-and-language", "embodied-ai", "computer-vision", "deep-learning", "visual-navigation"], "description": "Code and Data of the CVPR 2022 paper: Bridging the Gap Between Learning in Discrete and Continuous Environments for Vision-and-Language Navigation"}
{"name": "yifanzhang713/ia-ssd", "full_name": "yifanzhang713/IA-SSD", "topics": ["point-cloud", "pytorch", "object-detection", "autonomous-driving", "3d-object-detection", "ia-ssd"], "description": "Not All Points Are Equal: Learning Highly Efficient Point-based Detectors for 3D LiDAR Point Clouds (CVPR 2022, Oral)"}
{"name": "yihaosun1124/pytorch-mopo", "full_name": "yihaosun1124/pytorch-mopo", "topics": ["deep-reinforcement-learning", "pytorch", "offline", "deep-learning", "reinforcement-learning"], "description": "re-implementation of the offline model-based RL algorithm MOPO in pytorch"}
{"name": "yinboc/few-shot-meta-baseline", "full_name": "yinboc/few-shot-meta-baseline", "topics": ["machine-learning", "few-shot-learning", "pytorch"], "description": "Meta-Baseline: Exploring Simple Meta-Learning for Few-Shot Learning, in ICCV 2021"}
{"name": "yiqinyang/icq", "full_name": "YiqinYang/ICQ", "topics": ["deep-reinforcement-learning", "deep-rl", "multi-agent-reinforcement-learning", "mutli-agent", "offline", "pytorch", "reinforcement-learning"], "description": "Codes accompanying the paper \"Believe What You See: Implicit Constraint Approach for Offline Multi-Agent Reinforcement Learning\" (NeurIPS 2021 Spotlight https://arxiv.org/abs/2106.03400)"}
{"name": "yl305237731/flexible-yolov5", "full_name": "Bobo-y/flexible-yolov5", "topics": ["yolov5", "resnet", "moblienet", "backbone", "neck", "se", "cbam", "efficientnet", "pytorch", "shufflenet", "hrnet", "dcnv2", "tensorrt", "object-detection", "swin-transformer", "gcn", "yolov3"], "description": "More readable and flexible yolov5 with more backbone(gcn, resnet, shufflenet, moblienet, efficientnet, hrnet, swin-transformer, etc) and (cbam\uff0cdcn and so on), and tensorrt"}
{"name": "ylhz/tf_to_pytorch_model", "full_name": "ylhz/tf_to_pytorch_model", "topics": [], "description": "Convert tensorflow model to pytorch model via [MMdnn](https://github.com/microsoft/MMdnn) for adversarial attacks."}
{"name": "ylsung/vl_adapter", "full_name": "ylsung/VL_adapter", "topics": ["vision-and-language", "adapters", "transformers", "prompt-tuning", "pytorch", "vl-adapter"], "description": "PyTorch code for \"VL-Adapter: Parameter-Efficient Transfer Learning for Vision-and-Language Tasks\" (CVPR2022)"}
{"name": "youshaamurhij/fmfnet", "full_name": "YoushaaMurhij/FMFNet", "topics": ["deep-learning", "object-detection", "pytorch", "tracking", "computer-vision"], "description": "Official Pytorch implementation for the paper: \"FMFNet: Improve the 3D Object Detection and Tracking via Feature Map Flow\" [IJCNN-2022] "}
{"name": "yshen47/infinitenature-pytorch", "full_name": "yshen47/InfiniteNature-PyTorch", "topics": [], "description": "A pytorch version for infiniteNature"}
{"name": "ytongbai/vits-vs-cnns", "full_name": "ytongbai/ViTs-vs-CNNs", "topics": ["transformer", "robustness"], "description": "[NeurIPS 2021]: Are Transformers More Robust Than CNNs? (Pytorch implementation & checkpoints)"}
{"name": "yulv-git/awesome-ultrasound-standard-plane-detection", "full_name": "Yulv-git/Awesome-Ultrasound-Standard-Plane-Detection", "topics": ["standard-plane", "detection", "papers", "code", "ultrasound", "python3", "classification", "localization", "anatomical-structure", "public-datasets", "selection", "identification", "extraction", "localisation", "deep-learning", "machine-learning", "recognition"], "description": "A curated list of awesome ultrasound standard plane detection/localization/localisation/extraction/classification/selection/identification/recognition."}
{"name": "yumoxu/marge", "full_name": "yumoxu/marge", "topics": ["query-focused-summarization", "summarization", "nlp", "question-answering", "generation"], "description": "Code for ACL 21: Generating Query Focused Summaries from Query-Free Resources"}
{"name": "yupeiyu98/drc", "full_name": "yuPeiyu98/DRC", "topics": ["unsupervised-learning", "segmentation", "neurips-2021", "pytorch"], "description": "[NeurIPS 2021] Unsupervised Foreground Extraction via Deep Region Competition"}
{"name": "yurongyou/hindsight", "full_name": "YurongYou/Hindsight", "topics": ["point-cloud", "pytorch", "autonomous-driving", "object-detection", "3d-detection", "hindsight"], "description": "Code release for \"Hindsight is 20/20: Leveraging Past Traversals to Aid 3D Perception\" [ICLR 2022]"}
{"name": "yurongyou/modest", "full_name": "YurongYou/MODEST", "topics": ["point-cloud", "pytorch", "object-detection", "autonomous-driving", "3d-detection", "unlabeled-data"], "description": "Code release for \"Learning to Detect Mobile Objects from LiDAR Scans Without Labels\" [CVPR 2022]"}
{"name": "yuuho/stylegans-pytorch", "full_name": "yuuho/stylegans-pytorch", "topics": ["pytorch", "stylegan2", "stylegan"], "description": "PyTorch StyleGAN2, StyleGAN\u306e\u518d\u73fe\u5b9f\u88c5"}
{"name": "yzd-v/cls_kd", "full_name": "yzd-v/cls_KD", "topics": ["image-classification", "knowledge-distillation", "vision-transformer", "pytorch"], "description": "'Rethinking Knowledge Distillation via Cross-Entropy' and 'ViTKD: Practical Guidelines for ViT Feature Knowledge Distillation'"}
{"name": "zaccharieramzi/tfkbnufft", "full_name": "zaccharieramzi/tfkbnufft", "topics": ["tensorflow", "non-uniform-fourier", "mri", "nfft", "nufft"], "description": "A robust, easy-to-deploy non-uniform Fast Fourier Transform in TensorFlow."}
{"name": "zengxianyu/co-mod-gan-pytorch", "full_name": "zengxianyu/co-mod-gan-pytorch", "topics": ["pytorch", "deep-learning", "gan", "generative-adversarial-network", "inpainting", "image-inpainting", "iclr2021", "image-completion"], "description": "pytorch implementation of the paper ``Large Scale Image Completion via Co-Modulated Generative Adversarial Networks\""}
{"name": "zengxianyu/crfill", "full_name": "zengxianyu/crfill", "topics": ["inpainting", "image-inpainting", "gan", "generative-adversarial-network", "generative-adversarial-networks", "pytorch", "iccv2021", "image-completion"], "description": "CR-Fill: Generative Image Inpainting with Auxiliary Contextual Reconstruction. ICCV 2021"}
{"name": "zenml-io/zenml", "full_name": "zenml-io/zenml", "topics": ["mlops", "machine-learning", "data-science", "production-ready", "devops-tools", "zenml", "pipelines", "metadata-tracking", "deep-learning", "pytorch", "tensorflow", "ml", "ai", "automl", "hacktobe", "hacktoberfest", "workflow"], "description": "ZenML \ud83d\ude4f: Build portable, production-ready MLOps pipelines. https://zenml.io."}
{"name": "zensors/datatap-python", "full_name": "zensors/datatap-python", "topics": ["dataset", "machine-learning", "datastructures", "data-pipeline", "deep", "deeplearning", "python", "pytorch", "tensorflow", "training", "trainsets", "testset", "cross-validation", "resnet", "dataloader"], "description": "Focus on Algorithm Design, Not on Data Wrangling"}
{"name": "zerohd4869/slk-ner", "full_name": "zerohd4869/SLK-NER", "topics": ["natural-language-processing", "named-entity-recognition"], "description": "Source code for SEKE 2020 paper \"SLK-NER: Exploiting Second-order Lexicon Knowledge for Chinese NER\""}
{"name": "zhangyuanhan-ai/noah", "full_name": "ZhangYuanhan-AI/NOAH", "topics": ["prompt-tuning", "transfer-learning", "domain-generalization", "visual-prompting", "pre-trained-model", "pytorch", "deep-learning"], "description": "Searching prompt modules for parameter-efficient transfer learning."}
{"name": "zhangzhiqiangccm/nlp-project", "full_name": "zhangzhiqiangccm/NLP-project", "topics": [], "description": "\u81ea\u7136\u8bed\u8a00\u5904\u7406\u4e2d\u7684\u57fa\u7840\u4efb\u52a1\uff0c\u5305\u542b\u4f46\u4e0d\u9650\u4e8e\u6587\u672c\u8868\u793a\uff0c\u6587\u672c\u5206\u7c7b\uff0c\u547d\u540d\u5b9e\u4f53\u8bc6\u522b\uff0c\u5173\u7cfb\u62bd\u53d6\uff0c\u6587\u672c\u751f\u6210\uff0c\u6587\u672c\u6458\u8981\u7b49\uff0c\u57fa\u4e8etensorflow2\u6216Pytorch\uff0c\u6240\u6709\u4ee3\u7801\u5747\u7ecf\u8fc7\u6d4b\u8bd5\uff0c\u9879\u76ee\u4e2d\u4e5f\u5305\u542b\u76f8\u5173\u6570\u636e\u3002"}
{"name": "zhaofang0627/hpbtt", "full_name": "zhaofang0627/HPBTT", "topics": [], "description": "HPBTT-Pytorch"}
{"name": "zhugekongan/torch-template-for-deep-learning", "full_name": "ZhugeKongan/torch-template-for-deep-learning", "topics": [], "description": "Pytorch Implementations of large number  classical backbone CNNs, data enhancement, torch loss, attention, visualization and  some common algorithms."}
{"name": "ziniuwan/maed", "full_name": "ziniuwan/maed", "topics": ["pytorch", "deep-learning"], "description": "[ICCV 2021] Encoder-decoder with Multi-level Attention for 3D Human Shape and Pose Estimation"}
{"name": "ziweiwangthu/bidet", "full_name": "ZiweiWangTHU/BiDet", "topics": [], "description": "This is the official pytorch implementation for paper: BiDet: An Efficient Binarized Object Detector, which is accepted by CVPR2020. "}
{"name": "zj-zhang/amber", "full_name": "zj-zhang/AMBER", "topics": ["automl", "biomedicine", "deep-learning", "genomics", "keras", "pytorch"], "description": "Automated Modelling for Biological Evidence-based Research"}
{"name": "zjunlp/hvpnet", "full_name": "zjunlp/HVPNeT", "topics": ["entity-extraction", "relation-extraction", "multimodal", "kg", "prefix", "hvpnet", "ner", "re", "naacl", "dataset", "multimodal-knowledge-graph", "multimodal-learning", "pytorch", "bert", "information-extraction"], "description": "Code for the NAACL2022 paper \"Good Visual Guidance Makes A Better Extractor: Hierarchical Visual Prefix for Multimodal Entity and Relation Extraction\""}
{"name": "zjunlp/knowprompt", "full_name": "zjunlp/KnowPrompt", "topics": ["relation-extraction", "prompt-tuning", "few-shot-learning", "tacred", "dialogre", "semeval", "prompt", "knowprompt", "prompt-learning", "re", "knowledge-informed-prompt-learning", "pytorch", "dataset", "text-classification"], "description": "Code and datasets for the WWW2022 paper \"KnowPrompt: Knowledge-aware Prompt-tuning with Synergistic Optimization for Relation Extraction.\""}
{"name": "zjunlp/mkgformer", "full_name": "zjunlp/MKGformer", "topics": ["mkgformer", "kg", "knowledge-graph", "multimodal", "mkg", "relation-extraction", "kgc", "link-prediction", "ner", "transformer", "mnre", "sigir2022", "pytorch", "former", "dataset"], "description": "Code for the SIGIR 2022 paper \"Hybrid Transformer with Multi-level Fusion for Multimodal Knowledge Graph Completion.\""}
{"name": "zjunlp/promptkg", "full_name": "zjunlp/PromptKG", "topics": ["knowledge-graph", "genkgc", "prompt-tuning", "relation-extraction", "link-prediction", "retrievalre", "demo-tuning", "pytorch", "promptkg", "retroprompt", "knowledge-informed-prompt-learning", "question-answering", "dialogue", "awsome-list", "paper-list", "retrieval-augmented", "lambdakg", "natural-language-processing", "nlp", "paper"], "description": "PromptKG Family: a Gallery of Prompt Learning & KG-related research works, toolkits, and paper-list."}
{"name": "zjunlp/promptkgc", "full_name": "zjunlp/PromptKG", "topics": ["knowledge-graph", "genkgc", "prompt-tuning", "relation-extraction", "link-prediction", "retrievalre", "demo-tuning", "pytorch", "promptkg", "retroprompt", "knowledge-informed-prompt-learning", "question-answering", "dialogue", "awsome-list", "paper-list", "retrieval-augmented", "lambdakg", "natural-language-processing", "nlp", "paper"], "description": "PromptKG Family: a Gallery of Prompt Learning & KG-related research works, toolkits, and paper-list."}
{"name": "zjunlp/relphormer", "full_name": "zjunlp/Relphormer", "topics": ["kg", "transformer", "knowledge-graph", "knowledge-graph-completion", "question-answering", "recommendation-system", "knowledge-graph-representation", "fb15k-237", "link-prediction", "umls", "wn18rr", "relphormer"], "description": "Code for the paper \"Relational Graph Transformer for Knowledge Graph Representation\""}
{"name": "zlinao/mintl", "full_name": "zlinao/MinTL", "topics": ["task-oriented-dialogue", "transfer-learning", "language-model", "transformer"], "description": "MinTL: Minimalist Transfer Learning for Task-Oriented Dialogue Systems"}
{"name": "zqsong1997/avmfn-for-person-verification", "full_name": "ZQSong1997/AVMFN-For-Person-Verification", "topics": ["face-recognition", "feature-fusion", "pytorch", "voiceprint-recognition"], "description": "Bimodal Adaptive Feature Fusion Network for Person Verification"}
