{"name": "ultralytics/yolov5", "full_name": "ultralytics/yolov5", "topics": ["yolov3", "yolov4", "yolov5", "object-detection", "pytorch", "onnx", "coreml", "ios", "tflite", "yolo", "deep-learning", "machine-learning", "ml"], "description": "YOLOv5 \ud83d\ude80 in PyTorch > ONNX > CoreML > TFLite"}
{"name": "babysor/mockingbird", "full_name": "babysor/MockingBird", "topics": ["ai", "speech", "pytorch", "deep-learning"], "description": "\ud83d\ude80AI\u62df\u58f0: 5\u79d2\u5185\u514b\u9686\u60a8\u7684\u58f0\u97f3\u5e76\u751f\u6210\u4efb\u610f\u8bed\u97f3\u5185\u5bb9 Clone a voice in 5 seconds to generate arbitrary speech in real-time"}
{"name": "tencentarc/gfpgan", "full_name": "TencentARC/GFPGAN", "topics": ["pytorch", "gan", "deep-learning", "super-resolution", "face-restoration", "image-restoration", "gfpgan"], "description": "GFPGAN aims at developing Practical Algorithms for Real-world Face Restoration."}
{"name": "xinntao/real-esrgan", "full_name": "xinntao/Real-ESRGAN", "topics": ["esrgan", "pytorch", "real-esrgan", "super-resolution", "image-restoration", "denoise", "jpeg-compression", "amine"], "description": "Real-ESRGAN aims at developing Practical Algorithms for General Image/Video Restoration."}
{"name": "jaidedai/easyocr", "full_name": "JaidedAI/EasyOCR", "topics": ["ocr", "deep-learning", "crnn", "pytorch", "lstm", "machine-learning", "scene-text", "scene-text-recognition", "optical-character-recognition", "cnn", "data-mining", "image-processing", "python", "easyocr", "information-retrieval"], "description": "Ready-to-use OCR with 80+ supported languages and all popular writing scripts including Latin, Chinese, Arabic, Devanagari, Cyrillic and etc."}
{"name": "jina-ai/jina", "full_name": "jina-ai/jina", "topics": ["neural-search", "cloud-native", "deep-learning", "machine-learning", "framework", "vector-search-engine", "grpc", "kubernetes", "microservices", "semantic-search", "multimodal", "crossmodal", "creative-ai", "aiops", "mlops", "pipeline", "workflow", "airflow", "fastapi", "generative-ai"], "description": "\ud83d\udd2e Build multimodal AI services via cloud native technologies \u00b7 Neural Search \u00b7 Generative AI \u00b7 Cloud Native"}
{"name": "huggingface/datasets", "full_name": "huggingface/datasets", "topics": ["nlp", "datasets", "metrics", "evaluation", "pytorch", "tensorflow", "pandas", "numpy", "natural-language-processing", "computer-vision", "machine-learning", "deep-learning", "speech", "hacktoberfest"], "description": "\ud83e\udd17 The largest hub of ready-to-use datasets for ML models with fast, easy-to-use and efficient data manipulation tools"}
{"name": "lucidrains/vit-pytorch", "full_name": "lucidrains/vit-pytorch", "topics": ["artificial-intelligence", "attention-mechanism", "transformers", "computer-vision", "image-classification"], "description": "Implementation of Vision Transformer, a simple way to achieve SOTA in vision classification with only a single transformer encoder, in Pytorch"}
{"name": "microsoft/bringing-old-photos-back-to-life", "full_name": "microsoft/Bringing-Old-Photos-Back-to-Life", "topics": ["image-restoration", "old-photo-restoration", "generative-adversarial-network", "gans", "pytorch", "image-manipulation", "photo-restoration", "photos"], "description": "Bringing Old Photo Back to Life (CVPR 2020 oral)"}
{"name": "microsoft/qlib", "full_name": "microsoft/qlib", "topics": ["quantitative-finance", "machine-learning", "stock-data", "platform", "finance", "algorithmic-trading", "python", "investment", "quant", "quantitative-trading", "quant-dataset", "quant-models", "auto-quant", "fintech", "research-paper", "paper", "research", "deep-learning"], "description": "Qlib is an AI-oriented quantitative investment platform, which aims to realize the potential, empower the research, and create the value of AI technologies in quantitative investment. With Qlib, you can easily try your ideas to create better Quant investment strategies. An increasing number of  SOTA Quant research works/papers are released in Qlib."}
{"name": "lucidrains/dalle2-pytorch", "full_name": "lucidrains/DALLE2-pytorch", "topics": ["artificial-intelligence", "deep-learning", "text-to-image"], "description": "Implementation of DALL-E 2, OpenAI's updated text-to-image synthesis neural network,  in Pytorch"}
{"name": "megvii-basedetection/yolox", "full_name": "Megvii-BaseDetection/YOLOX", "topics": ["yolox", "yolov3", "onnx", "tensorrt", "ncnn", "openvino", "pytorch", "megengine", "object-detection", "yolo", "deep-learning"], "description": "YOLOX is a high-performance anchor-free YOLO, exceeding yolov3~v5 with MegEngine, ONNX, TensorRT, ncnn, and OpenVINO supported. Documentation: https://yolox.readthedocs.io/"}
{"name": "xmu-xiaoma666/external-attention-pytorch", "full_name": "xmu-xiaoma666/External-Attention-pytorch", "topics": ["attention", "pytorch", "paper", "cbam", "squeeze", "excitation-networks", "linear-layers", "visual-tasks"], "description": "\ud83c\udf40 Pytorch implementation of various Attention Mechanisms, MLP, Re-parameter, Convolution, which is helpful to further understand papers.\u2b50\u2b50\u2b50"}
{"name": "microsoft/deepspeed", "full_name": "microsoft/DeepSpeed", "topics": ["deep-learning", "pytorch", "gpu", "machine-learning", "billion-parameters", "data-parallelism", "model-parallelism", "inference", "pipeline-parallelism", "compression", "mixture-of-experts", "trillion-parameters", "zero"], "description": "DeepSpeed is a deep learning optimization library that makes distributed training and inference easy, efficient, and effective."}
{"name": "coqui-ai/tts", "full_name": "coqui-ai/TTS", "topics": ["python", "text-to-speech", "deep-learning", "speech", "pytorch", "tts", "vocoder", "tacotron", "glow-tts", "melgan", "speaker-encoder", "hifigan", "speaker-encodings", "multi-speaker-tts", "tts-model", "speech-synthesis", "voice-cloning", "voice-synthesis"], "description": "\ud83d\udc38\ud83d\udcac - a deep learning toolkit for Text-to-Speech, battle-tested in research and production"}
{"name": "xuebinqin/u-2-net", "full_name": "xuebinqin/U-2-Net", "topics": ["computer-vision", "deep-learning", "image-background-removal", "image-processing", "image-segmentation", "u-2-net", "u2net"], "description": "The code for our newly accepted paper in Pattern Recognition 2020: \"U^2-Net: Going Deeper with Nested U-Structure for Salient Object Detection.\""}
{"name": "peterl1n/robustvideomatting", "full_name": "PeterL1n/RobustVideoMatting", "topics": ["computer-vision", "machine-learning", "ai", "matting", "deep-learning"], "description": "Robust Video Matting in PyTorch, TensorFlow, TensorFlow.js, ONNX, CoreML!"}
{"name": "geohot/tinygrad", "full_name": "geohot/tinygrad", "topics": [], "description": "You like pytorch? You like micrograd? You love tinygrad! \u2764\ufe0f "}
{"name": "lucidrains/imagen-pytorch", "full_name": "lucidrains/imagen-pytorch", "topics": ["artificial-intelligence", "deep-learning", "text-to-image", "imagination-machine", "text-to-video"], "description": "Implementation of Imagen, Google's Text-to-Image Neural Network, in Pytorch"}
{"name": "sanster/lama-cleaner", "full_name": "Sanster/lama-cleaner", "topics": ["inpainting", "pytorch", "lama", "latent-diffusion", "mat", "zits", "stable-diffusion"], "description": "Image inpainting tool powered by SOTA AI Model. Remove any unwanted object, defect, people from your pictures or erase and replace(powered by stable diffusion) any thing on your pictures."}
{"name": "paddlepaddle/paddlenlp", "full_name": "PaddlePaddle/PaddleNLP", "topics": ["nlp", "seq2seq", "embedding", "bert", "ernie", "paddlenlp", "pretrained-models", "transformers", "information-extraction", "question-answering", "search-engine", "semantic-analysis", "sentiment-analysis", "neural-search", "uie", "image-generation", "document-intelligence", "stable-diffusion", "aigc", "compression"], "description": "\ud83d\udc51 Easy-to-use and powerful NLP library with \ud83e\udd17 Awesome model zoo, supporting wide-range of NLP tasks from research to industrial applications, including \ud83d\uddc2Text Classification,  \ud83d\udd0d Neural Search, \u2753 Question Answering, \u2139\ufe0f Information Extraction, \ud83d\udcc4 Document Intelligence, \ud83d\udc8c Sentiment Analysis and \ud83d\uddbc Diffusion AIGC system etc."}
{"name": "rangilyu/nanodet", "full_name": "RangiLyu/nanodet", "topics": ["deep-neural-networks", "deep-learning", "object-detection", "anchor-free", "ncnn", "shufflenet", "pytorch", "mnn", "repvgg", "openvino", "efficientnet", "android", "model-zoo", "nanodet-plus", "nanodet"], "description": "NanoDet-Plus\u26a1Super fast and lightweight anchor-free object detection model. \ud83d\udd25Only 980 KB(int8) / 1.8MB (fp16) and run 97FPS on cellphone\ud83d\udd25"}
{"name": "aladdinpersson/machine-learning-collection", "full_name": "aladdinpersson/Machine-Learning-Collection", "topics": ["pytorch", "pytorch-implementation", "pytorch-tutorial", "pytorch-gan", "pytorch-examples", "tensorflow2", "tensorflow-tutorials", "tensorflow-examples", "machine-learning", "machine-learning-algorithms", "pytorch-tutorials"], "description": "A resource for learning about Machine learning & Deep Learning"}
{"name": "anjok07/ultimatevocalremovergui", "full_name": "Anjok07/ultimatevocalremovergui", "topics": ["vocal-remover", "pytorch", "source", "separation", "kareokee", "karaoke", "spectrogram", "instrumental", "vocal", "vocals", "audio", "music"], "description": " GUI for a Vocal Remover that uses Deep Neural Networks."}
{"name": "lucidrains/dalle-pytorch", "full_name": "lucidrains/DALLE-pytorch", "topics": ["artificial-intelligence", "deep-learning", "attention-mechanism", "text-to-image", "transformers", "multi-modal"], "description": "Implementation / replication of DALL-E, OpenAI's Text to Image Transformer, in Pytorch"}
{"name": "openai/jukebox", "full_name": "openai/jukebox", "topics": ["paper", "audio", "music", "pytorch", "generative-model", "vq-vae", "transformer"], "description": "Code for the paper \"Jukebox: A Generative Model for Music\""}
{"name": "open-mmlab/mmsegmentation", "full_name": "open-mmlab/mmsegmentation", "topics": ["semantic-segmentation", "pytorch", "pspnet", "deeplabv3", "transformer", "swin-transformer", "realtime-segmentation", "vessel-segmentation", "retinal-vessel-segmentation", "image-segmentation", "medical-image-segmentation"], "description": "OpenMMLab Semantic Segmentation Toolbox and Benchmark."}
{"name": "speechbrain/speechbrain", "full_name": "speechbrain/speechbrain", "topics": ["speech-recognition", "speech-toolkit", "speaker-recognition", "speech-to-text", "speech-enhancement", "speech-separation", "audio", "audio-processing", "speech-processing", "speechrecognition", "asr", "voice-recognition", "spoken-language-understanding", "speaker-diarization", "speaker-verification", "pytorch", "huggingface", "transformers", "language-model", "deep-learning"], "description": "A PyTorch-based Speech Toolkit"}
{"name": "hpcaitech/colossalai", "full_name": "hpcaitech/ColossalAI", "topics": ["deep-learning", "hpc", "large-scale", "data-parallelism", "pipeline-parallelism", "model-parallelism", "ai", "big-model", "distributed-computing", "inference", "heterogeneous-training", "foundation-models"], "description": "Making large AI models cheaper, faster and more accessible"}
{"name": "tianxiaomo/pytorch-yolov4", "full_name": "Tianxiaomo/pytorch-YOLOv4", "topics": ["yolov4", "pytorch", "darknet2pytorch", "darknet2onnx", "tensorrt", "onnx", "pytorch-yolov4", "yolov4-tiny", "yolov3"], "description": "PyTorch ,ONNX and TensorRT implementation of YOLOv4"}
{"name": "dlr-rm/stable-baselines3", "full_name": "DLR-RM/stable-baselines3", "topics": ["reinforcement-learning", "reinforcement-learning-algorithms", "machine-learning", "gym", "openai", "baselines", "toolbox", "stable-baselines", "python", "pytorch", "robotics", "sde", "gsde", "sb3"], "description": "PyTorch version of Stable Baselines, reliable implementations of reinforcement learning algorithms. "}
{"name": "lucidrains/deep-daze", "full_name": "lucidrains/deep-daze", "topics": ["artificial-intelligence", "deep-learning", "transformers", "siren", "implicit-neural-representation", "text-to-image", "multi-modality"], "description": "Simple command line tool for text to image generation using OpenAI's CLIP and Siren (Implicit neural representation network). Technique was originally created by https://twitter.com/advadnoun"}
{"name": "nathanua/u-2-net", "full_name": "xuebinqin/U-2-Net", "topics": ["computer-vision", "deep-learning", "image-background-removal", "image-processing", "image-segmentation", "u-2-net", "u2net"], "description": "The code for our newly accepted paper in Pattern Recognition 2020: \"U^2-Net: Going Deeper with Nested U-Structure for Salient Object Detection.\""}
{"name": "ashawkey/stable-dreamfusion", "full_name": "ashawkey/stable-dreamfusion", "topics": ["text-to-3d", "gui", "nerf", "stable-diffusion", "dreamfusion"], "description": "A pytorch implementation of text-to-3D dreamfusion, powered by stable diffusion."}
{"name": "meituan/yolov6", "full_name": "meituan/YOLOv6", "topics": ["object-detection", "pytorch", "yolo"], "description": "YOLOv6: a single-stage object detection framework dedicated to industrial applications."}
{"name": "babysor/realtime-voice-clone-chinese", "full_name": "babysor/MockingBird", "topics": ["ai", "speech", "pytorch", "deep-learning"], "description": "\ud83d\ude80AI\u62df\u58f0: 5\u79d2\u5185\u514b\u9686\u60a8\u7684\u58f0\u97f3\u5e76\u751f\u6210\u4efb\u610f\u8bed\u97f3\u5185\u5bb9 Clone a voice in 5 seconds to generate arbitrary speech in real-time"}
{"name": "layout-parser/layout-parser", "full_name": "Layout-Parser/layout-parser", "topics": ["layout-analysis", "deep-learning", "object-detection", "ocr", "layout-parser", "detectron2", "document-layout-analysis", "computer-vision", "document-image-processing", "layout-detection"], "description": "A Unified Toolkit for Deep Learning Based Document Image Analysis"}
{"name": "mikel-brostrom/yolov5_strongsort_osnet", "full_name": "mikel-brostrom/yolov8_tracking", "topics": ["strongsort", "bytetrack", "ocsort", "osnet", "deep-learning", "segmentation", "tensorrt", "tracking-by-detection", "yolo", "botsort"], "description": "Real-time multi-object tracking and segmentation using YOLOv8"}
{"name": "open-mmlab/openpcdet", "full_name": "open-mmlab/OpenPCDet", "topics": ["point-cloud", "3d-detection", "autonomous-driving", "pv-rcnn", "object-detection", "pytorch"], "description": "OpenPCDet Toolbox for LiDAR-based 3D Object Detection."}
{"name": "kuprel/min-dalle", "full_name": "kuprel/min-dalle", "topics": ["artificial-intelligence", "deep-learning", "pytorch", "text-to-image"], "description": "min(DALL\u00b7E) is a fast, minimal port of DALL\u00b7E Mini to PyTorch"}
{"name": "lucidrains/stylegan2-pytorch", "full_name": "lucidrains/stylegan2-pytorch", "topics": ["generative-adversarial-network", "artificial-intelligence", "pytorch", "machine-learning", "generative-model"], "description": "Simplest working implementation of Stylegan2, state of the art generative adversarial network, in Pytorch. Enabling everyone to experience disentanglement"}
{"name": "microsoft/hummingbird", "full_name": "microsoft/hummingbird", "topics": ["machine-learning", "neural-networks", "scikit-learn", "pytorch", "tensor-computation"], "description": "Hummingbird compiles trained ML models into tensor computation for faster inference."}
{"name": "zhanghang1989/resnest", "full_name": "zhanghang1989/ResNeSt", "topics": ["deep-learning", "resnet", "resnest", "pytorch", "detectron-models", "split-attention-networks"], "description": "ResNeSt: Split-Attention Networks"}
{"name": "postech-cvlab/pytorch-studiogan", "full_name": "POSTECH-CVLab/PyTorch-StudioGAN", "topics": ["pytorch", "deep-learning", "generative-adversarial-network", "biggan", "stylegan2", "machine-learning", "stylegan2-ada", "stylegan3", "data-efficient-gan-training", "clean-fid"], "description": "StudioGAN is a Pytorch library providing implementations of representative Generative Adversarial Networks (GANs) for conditional/unconditional image generation."}
{"name": "antixk/pytorch-vae", "full_name": "AntixK/PyTorch-VAE", "topics": ["pytorch", "pytorch-implementation", "vae", "vae-implementation", "deep-learning", "reproducible-research", "paper-implementations", "pytorch-vae", "variational-autoencoders", "architecture", "beta-vae", "vqvae", "gumbel-softmax", "celeba-dataset", "iwae", "wae", "dfc-vae"], "description": "A Collection of Variational Autoencoders (VAE) in PyTorch."}
{"name": "pair-code/lit", "full_name": "PAIR-code/lit", "topics": ["machine-learning", "natural-language-processing", "visualization"], "description": "The Learning Interpretability Tool: Interactively analyze ML models to understand their behavior in an extensible and framework agnostic interface."}
{"name": "megvii-research/eccv2022-rife", "full_name": "megvii-research/ECCV2022-RIFE", "topics": ["video-interpolation", "computer-vision", "slomo-filter", "deep-learning"], "description": "ECCV2022-Real-Time Intermediate Flow Estimation for Video Frame Interpolation"}
{"name": "ifzhang/bytetrack", "full_name": "ifzhang/ByteTrack", "topics": ["multi-object-tracking", "real-time", "deployment", "pytorch"], "description": "[ECCV 2022] ByteTrack: Multi-Object Tracking by Associating Every Detection Box"}
{"name": "open-mmlab/mmdetection3d", "full_name": "open-mmlab/mmdetection3d", "topics": ["pytorch", "3d-object-detection", "object-detection", "point-cloud"], "description": "OpenMMLab's next-generation platform for general 3D object detection."}
{"name": "minivision-ai/photo2cartoon", "full_name": "minivision-ai/photo2cartoon", "topics": ["cartoon", "deep-learning", "computer-vision", "gan", "avatar-generator"], "description": "\u4eba\u50cf\u5361\u901a\u5316\u63a2\u7d22\u9879\u76ee (photo-to-cartoon translation project)"}
{"name": "open-mmlab/mmocr", "full_name": "open-mmlab/mmocr", "topics": ["pytorch", "ocr", "deep-learning", "text-detection", "text-recognition", "sar", "psenet", "panet", "maskrcnn", "key-information-extraction", "pan", "dbnet", "sdmg-r", "textsnake", "crnn", "robustscanner", "segmentation-based-text-recognition", "fcenet", "satrn", "abinet"], "description": "OpenMMLab Text Detection, Recognition and Understanding Toolbox"}
{"name": "lucidrains/denoising-diffusion-pytorch", "full_name": "lucidrains/denoising-diffusion-pytorch", "topics": ["artificial-intelligence", "deep-learning", "generative-model", "score-matching"], "description": "Implementation of Denoising Diffusion Probabilistic Model in Pytorch"}
{"name": "jittor/jittor", "full_name": "Jittor/jittor", "topics": ["deep-learning", "gpu", "python", "jittor", "cuda"], "description": "Jittor is a high-performance deep learning framework based on JIT compiling and meta-operators."}
{"name": "neuml/txtai", "full_name": "neuml/txtai", "topics": ["python", "search", "machine-learning", "nlp", "deep-learning", "document-search", "audio-search", "image-search", "video-search", "semantic-search", "similarity-search", "neural-search", "contextual-search", "vector-search", "machine-learning-workflows", "machine-learning-pipelines", "microservice", "api", "cloud-native", "txtai"], "description": "\ud83d\udca1 Build AI-powered semantic search applications "}
{"name": "microsoft/muzic", "full_name": "microsoft/muzic", "topics": ["music", "music-composition", "ai-music", "deep-learning"], "description": "Muzic: Music Understanding and Generation with Artificial Intelligence"}
{"name": "mikel-brostrom/yolov5_deepsort_osnet", "full_name": "mikel-brostrom/yolov8_tracking", "topics": ["strongsort", "bytetrack", "ocsort", "osnet", "deep-learning", "segmentation", "tensorrt", "tracking-by-detection", "yolo", "botsort"], "description": "Real-time multi-object tracking and segmentation using YOLOv8"}
{"name": "neuralchen/simswap", "full_name": "neuralchen/SimSwap", "topics": ["face", "deepfakes", "faceswap", "gan", "swap", "deepfacelab", "image-manipulation", "video", "pytorch"], "description": "An arbitrary face-swapping framework on images and videos with one single trained model!"}
{"name": "jettify/pytorch-optimizer", "full_name": "jettify/pytorch-optimizer", "topics": ["pytorch", "optimizer", "diffgrad", "adamod", "lamb", "yogi", "accsgd", "adabound", "novograd", "shampoo", "lookahead", "swats", "sgdp", "adabelief", "apollo", "hacktoberfest"], "description": "torch-optimizer -- collection of optimizers for Pytorch"}
{"name": "hzwer/eccv2022-rife", "full_name": "megvii-research/ECCV2022-RIFE", "topics": ["video-interpolation", "computer-vision", "slomo-filter", "deep-learning"], "description": "ECCV2022-Real-Time Intermediate Flow Estimation for Video Frame Interpolation"}
{"name": "hzwer/arxiv2021-rife", "full_name": "megvii-research/ECCV2022-RIFE", "topics": ["video-interpolation", "computer-vision", "slomo-filter", "deep-learning"], "description": "ECCV2022-Real-Time Intermediate Flow Estimation for Video Frame Interpolation"}
{"name": "ourownstory/neural_prophet", "full_name": "ourownstory/neural_prophet", "topics": ["forecasting", "time-series", "machine-learning", "fbprophet", "prophet", "forecast", "artificial-intelligence", "prediction", "trend", "seasonality", "autoregression", "pytorch", "timeseries", "forecasting-algorithm", "forecasting-model", "neuralprophet", "neural", "neural-network", "python", "deep-learning"], "description": "NeuralProphet: A simple forecasting package"}
{"name": "janspiry/image-super-resolution-via-iterative-refinement", "full_name": "Janspiry/Image-Super-Resolution-via-Iterative-Refinement", "topics": ["pytorch", "diffusion-probabilistic", "super-resolution", "ddpm", "image-generation"], "description": "Unofficial implementation of Image Super-Resolution via Iterative Refinement by Pytorch"}
{"name": "open-mmlab/mmpose", "full_name": "open-mmlab/mmpose", "topics": ["pose-estimation", "human-pose", "pytorch", "hrnet", "mpii", "benchmark", "cpm", "hourglass", "higher-hrnet", "crowdpose", "ochuman", "freihand", "mspn", "rsn", "udp", "deeppose", "animal-pose-estimation", "mmpose", "hand-pose-estimation", "face-keypoint"], "description": "OpenMMLab Pose Estimation Toolbox and Benchmark."}
{"name": "princeton-nlp/simcse", "full_name": "princeton-nlp/SimCSE", "topics": ["nlp", "sentence-embeddings"], "description": "EMNLP'2021: SimCSE: Simple Contrastive Learning of Sentence Embeddings https://arxiv.org/abs/2104.08821"}
{"name": "mikel-brostrom/yolov5_deepsort_pytorch", "full_name": "mikel-brostrom/yolov8_tracking", "topics": ["strongsort", "bytetrack", "ocsort", "osnet", "deep-learning", "segmentation", "tensorrt", "tracking-by-detection", "yolo", "botsort"], "description": "Real-time multi-object tracking and segmentation using YOLOv8"}
{"name": "jingyunliang/swinir", "full_name": "JingyunLiang/SwinIR", "topics": ["image-super-resolution", "image-denoising", "compression-artifact-reduction", "image-deblocking", "transformer", "real-world-image-super-resolution", "lightweight-image-super-resolution", "image-restoration", "low-level-vision", "vision-transformer", "image-sr", "restoration", "super-resolution", "denoising", "deblocking", "decompression"], "description": "SwinIR: Image Restoration Using Swin Transformer (official repository)"}
{"name": "cleardusk/3ddfa_v2", "full_name": "cleardusk/3DDFA_V2", "topics": ["eccv", "3d-face-alignment", "pytorch", "face-alignment", "3d-face", "3dmm", "alignment", "3d", "computer-vision", "onnx", "3d-landmarks", "single-image-reconstruction", "eccv-2020"], "description": "The official PyTorch implementation of Towards Fast, Accurate and Stable 3D Dense Face Alignment, ECCV 2020."}
{"name": "open-mmlab/mmaction2", "full_name": "open-mmlab/mmaction2", "topics": ["action-recognition", "temporal-action-localization", "pytorch", "video-understanding", "tsn", "i3d", "slowfast", "ava", "spatial-temporal-action-detection", "benchmark", "tsm", "x3d", "non-local", "deep-learning", "openmmlab", "posec3d", "video-classification"], "description": "OpenMMLab's Next Generation Video Understanding Toolbox and Benchmark"}
{"name": "rucaibox/recbole", "full_name": "RUCAIBox/RecBole", "topics": ["recommender-systems", "collaborative-filtering", "knowledge-graph", "ctr-prediction", "deep-learning", "pytorch", "graph-neural-networks", "sequential-recommendation", "recommendations", "recommendation-system", "recommender"], "description": "A unified, comprehensive and efficient recommendation library"}
{"name": "zenml-io/zenml", "full_name": "zenml-io/zenml", "topics": ["mlops", "machine-learning", "data-science", "production-ready", "devops-tools", "zenml", "pipelines", "metadata-tracking", "deep-learning", "pytorch", "tensorflow", "ml", "ai", "automl", "hacktobe", "hacktoberfest", "workflow"], "description": "ZenML \ud83d\ude4f: Build portable, production-ready MLOps pipelines. https://zenml.io."}
{"name": "libffcv/ffcv", "full_name": "libffcv/ffcv", "topics": ["machine-learning", "data-science", "pytorch"], "description": "FFCV: Fast Forward Computer Vision (and other ML workloads!)"}
{"name": "hzwer/arxiv2020-rife", "full_name": "megvii-research/ECCV2022-RIFE", "topics": ["video-interpolation", "computer-vision", "slomo-filter", "deep-learning"], "description": "ECCV2022-Real-Time Intermediate Flow Estimation for Video Frame Interpolation"}
{"name": "jdb78/pytorch-forecasting", "full_name": "jdb78/pytorch-forecasting", "topics": ["pytorch", "forecasting", "gpu", "uncertainty", "timeseries-forecasting", "pytorch-lightning", "deep-learning", "neural-networks", "timeseries", "machine-learning", "pandas", "python", "ai", "artifical-intelligense", "data-science", "temporal"], "description": "Time series forecasting with PyTorch"}
{"name": "zhouhaoyi/informer2020", "full_name": "zhouhaoyi/Informer2020", "topics": ["deep-learning", "self-attention", "time-series", "pytorch", "forecasting", "transformer"], "description": "The GitHub repository for the paper \"Informer\" accepted by AAAI 2021."}
{"name": "mosaicml/composer", "full_name": "mosaicml/composer", "topics": ["deep-learning", "pytorch", "neural-networks", "ml-systems", "ml-efficiency", "ml-training", "machine-learning", "neural-network"], "description": "Train neural networks up to 7x faster"}
{"name": "thuml/transfer-learning-library", "full_name": "thuml/Transfer-Learning-Library", "topics": ["domain-adaptation", "transfer-learning", "finetune", "unsupervised-domain-adaptation", "image-translation", "adversarial-learning", "deep-learning", "self-training", "semi-supervised-learning", "dann", "out-of-distribution-generalization"], "description": "Transfer Learning Library for Domain Adaptation, Task Adaptation, and Domain Generalization"}
{"name": "thunlp/openprompt", "full_name": "thunlp/OpenPrompt", "topics": ["nlp", "pre-trained-language-models", "ai", "nlp-machine-learning", "natural-language-processing", "natural-language-understanding", "deep-learning", "pre-trained-model", "nlp-library", "pytorch", "transformer", "prompt", "prompt-toolkit", "prompts", "prompt-based-tuning", "prompt-learning"], "description": "An Open-Source Framework for Prompt-Learning."}
{"name": "lukas-blecher/latex-ocr", "full_name": "lukas-blecher/LaTeX-OCR", "topics": ["machine-learning", "transformer", "im2latex", "deep-learning", "image2text", "latex", "dataset", "pytorch", "im2markup", "ocr", "latex-ocr", "vit", "math-ocr", "vision-transformer", "image-processing", "python", "im2text"], "description": "pix2tex: Using a ViT to convert images of equations into LaTeX code."}
{"name": "lucidrains/x-transformers", "full_name": "lucidrains/x-transformers", "topics": ["artificial-intelligence", "deep-learning", "attention-mechanism", "transformers"], "description": "A simple but complete full-attention transformer with a set of promising experimental features from various papers"}
{"name": "open-mmlab/mmselfsup", "full_name": "open-mmlab/mmselfsup", "topics": ["self-supervised-learning", "unsupervised-learning", "pytorch", "moco", "simclr", "simsiam", "mae", "masked-image-modeling", "beit"], "description": "OpenMMLab Self-Supervised Learning Toolbox and Benchmark"}
{"name": "magicleap/supergluepretrainednetwork", "full_name": "magicleap/SuperGluePretrainedNetwork", "topics": ["deep-learning", "feature-matching", "pose-estimation", "graph-neural-networks"], "description": "SuperGlue: Learning Feature Matching with Graph Neural Networks (CVPR 2020, Oral)"}
{"name": "mlfoundations/open_clip", "full_name": "mlfoundations/open_clip", "topics": ["deep-learning", "pytorch", "computer-vision", "language-model", "multi-modal-learning", "contrastive-loss", "zero-shot-classification", "pretrained-models"], "description": "An open source implementation of CLIP."}
{"name": "deepchecks/deepchecks", "full_name": "deepchecks/deepchecks", "topics": ["machine-learning", "ml", "model-validation", "data-validation", "mlops", "data-science", "python", "jupyter-notebook", "model-monitoring", "data-drift", "html-report", "deep-learning", "pytorch", "pandas-dataframe"], "description": "Deepchecks - Tests for Continuous Validation of ML Models & Data. Deepchecks is a Python package for comprehensively validating your machine learning models and data with minimal effort."}
{"name": "obss/sahi", "full_name": "obss/sahi", "topics": ["object-detection", "instance-segmentation", "computer-vision", "small-object-detection", "large-image", "mmdetection", "pytorch", "python", "yolov5", "coco", "detectron2", "deep-learning", "machine-learning", "remote-sensing", "huggingface", "fiftyone", "satellite", "tiling", "merge", "explainable-ai"], "description": "Framework agnostic sliced/tiled inference + interactive ui + error analysis plots"}
{"name": "wongkinyiu/scaledyolov4", "full_name": "WongKinYiu/ScaledYOLOv4", "topics": ["machine-learning", "deep-learning", "ml", "pytorch", "yolo", "object-detection", "yolov3", "yolov4", "scaled-yolov4", "yolov4-tiny", "yolov4-csp", "yolov4-large"], "description": "Scaled-YOLOv4: Scaling Cross Stage Partial Network"}
{"name": "ashleve/lightning-hydra-template", "full_name": "ashleve/lightning-hydra-template", "topics": ["pytorch-lightning", "wandb", "project-structure", "config", "deep-learning", "hydra", "template", "pytorch", "reproducibility", "best-practices", "neptune", "mlflow", "tensorboard", "comet", "mlops"], "description": "PyTorch Lightning + Hydra. A very user-friendly template for rapid and reproducible ML experimentation with best practices.  \u26a1\ud83d\udd25\u26a1"}
{"name": "cvg/hierarchical-localization", "full_name": "cvg/Hierarchical-Localization", "topics": ["deep-learning", "visual-localization", "feature-matching", "image-retrieval", "structure-from-motion", "pose-estimation", "superglue"], "description": "Visual localization made easy with hloc"}
{"name": "voxel51/fiftyone", "full_name": "voxel51/fiftyone", "topics": ["machine-learning", "artificial-intelligence", "deep-learning", "computer-vision", "developer-tools", "data-science", "python", "hacktoberfest"], "description": "The open-source tool for building high-quality datasets and computer vision models"}
{"name": "benedekrozemberczki/pytorch_geometric_temporal", "full_name": "benedekrozemberczki/pytorch_geometric_temporal", "topics": ["pytorch", "graph-neural-networks", "temporal-networks", "temporal-graphs", "gcn", "graph-convolutional-networks", "deep-learning", "network-science", "temporal-data", "node-embedding", "network-embedding", "graph-embedding", "spatial-data", "spatial-analysis", "spatio-temporal-data", "spatio-temporal-analysis", "gnn", "graph-convolution", "spatiotemporal"], "description": "PyTorch Geometric Temporal: Spatiotemporal Signal Processing with Neural Machine Learning Models (CIKM 2021)"}
{"name": "wongkinyiu/yolor", "full_name": "WongKinYiu/yolor", "topics": ["yolov4", "scaled-yolov4", "yolov4-csp", "darknet", "pytorch", "implicit", "explicit", "yolor", "yolo", "representation", "unified-network"], "description": "implementation of paper - You Only Learn One Representation: Unified Network for Multiple Tasks (https://arxiv.org/abs/2105.04206)"}
{"name": "lightly-ai/lightly", "full_name": "lightly-ai/lightly", "topics": ["deep-learning", "self-supervised-learning", "machine-learning", "computer-vision", "pytorch", "embeddings", "contrastive-learning", "active-learning"], "description": "A python library for self-supervised learning on images."}
{"name": "determined-ai/determined", "full_name": "determined-ai/determined", "topics": ["deep-learning", "machine-learning", "ml-platform", "ml-infrastructure", "hyperparameter-optimization", "hyperparameter-search", "distributed-training", "pytorch", "tensorflow", "hyperparameter-tuning", "kubernetes", "data-science", "mlops"], "description": "Determined: Deep Learning Training Platform"}
{"name": "bubbliiiing/yolov4-pytorch", "full_name": "bubbliiiing/yolov4-pytorch", "topics": [], "description": "\u8fd9\u662f\u4e00\u4e2aYoloV4-pytorch\u7684\u6e90\u7801\uff0c\u53ef\u4ee5\u7528\u4e8e\u8bad\u7ec3\u81ea\u5df1\u7684\u6a21\u578b\u3002"}
{"name": "aqlaboratory/openfold", "full_name": "aqlaboratory/openfold", "topics": ["pytorch", "protein-structure", "alphafold2"], "description": "Trainable, memory-efficient, and GPU-friendly PyTorch reproduction of AlphaFold 2"}
{"name": "lucidrains/reformer-pytorch", "full_name": "lucidrains/reformer-pytorch", "topics": ["artificial-intelligence", "transformers", "attention-mechanism", "machine-learning", "pytorch"], "description": "Reformer, the efficient Transformer, in Pytorch"}
{"name": "nadermx/backgroundremover", "full_name": "nadermx/backgroundremover", "topics": ["background-remover", "backgroundremover", "removebackground", "remove-background", "remove-background-image", "remove-background-video", "background-removal", "python", "video", "pytorch", "video-editing", "photo-editing"], "description": "Background Remover lets you Remove Background from images and video with a simple command line interface that is free and open source."}
{"name": "jaywalnut310/vits", "full_name": "jaywalnut310/vits", "topics": ["tts", "text-to-speech", "pytorch", "deep-learning", "speech-synthesis"], "description": "VITS: Conditional Variational Autoencoder with Adversarial Learning for End-to-End Text-to-Speech"}
{"name": "taesungp/contrastive-unpaired-translation", "full_name": "taesungp/contrastive-unpaired-translation", "topics": ["pytorch", "computervision", "deeplearning", "cyclegan", "image-generation", "computer-vision", "computer-graphics", "image-manipulation", "gans", "generative-adversarial-network"], "description": "Contrastive unpaired image-to-image translation, faster and lighter training than cyclegan (ECCV 2020, in PyTorch)"}
{"name": "microsoft/flaml", "full_name": "microsoft/FLAML", "topics": ["automl", "hyperparam", "automated-machine-learning", "machine-learning", "data-science", "python", "jupyter-notebook", "hyperparameter-optimization", "random-forest", "scikit-learn", "deep-learning", "natural-language-processing", "natural-language-generation", "timeseries-forecasting", "classification", "regression", "tuning", "finetuning", "tabular-data"], "description": "A fast library for AutoML and tuning. Join our Discord: https://discord.gg/Cppx2vSPVP."}
{"name": "lucidrains/big-sleep", "full_name": "lucidrains/big-sleep", "topics": ["artificial-intelligence", "deep-learning", "text-to-image", "generative-adversarial-networks", "multimodality"], "description": "A simple command line tool for text to image generation, using OpenAI's CLIP and a BigGAN. Technique was originally created by https://twitter.com/advadnoun"}
{"name": "rentruewang/koila", "full_name": "rentruewang/koila", "topics": ["pytorch", "lazy-evaluation", "out-of-memory", "python", "machine-learning", "deep-learning", "memory-management", "gradient-accumulation", "neural-network"], "description": "Prevent PyTorch's `CUDA error: out of memory` in just 1 line of code."}
{"name": "adap/flower", "full_name": "adap/flower", "topics": ["flower", "federated-learning", "federated-learning-framework", "pytorch-federated-learning", "tensorflow-federated-learning", "keras-federated-learning", "federated-analytics", "fleet-learning", "fleet-intelligence", "deep-learning", "machine-learning", "pytorch", "scikit-learn", "tensorflow"], "description": "Flower: A Friendly Federated Learning Framework"}
{"name": "argusswift/yolov4-pytorch", "full_name": "argusswift/YOLOv4-pytorch", "topics": ["yolov4", "object-detection", "pytorch", "senet", "cbam", "mobilenetv2", "mobilenetv3", "attention"], "description": "This is a pytorch repository of YOLOv4, attentive YOLOv4 and mobilenet YOLOv4 with PASCAL VOC and COCO"}
{"name": "sczhou/codeformer", "full_name": "sczhou/CodeFormer", "topics": ["codebook", "codeformer", "face-enhancement", "face-restoration", "pytorch", "super-resolution", "vqgan", "restoration"], "description": "[NeurIPS 2022] Towards Robust Blind Face Restoration with Codebook Lookup Transformer"}
{"name": "bubbliiiing/yolo3-pytorch", "full_name": "bubbliiiing/yolo3-pytorch", "topics": [], "description": " \u8fd9\u662f\u4e00\u4e2ayolo3-pytorch\u7684\u6e90\u7801\uff0c\u53ef\u4ee5\u7528\u4e8e\u8bad\u7ec3\u81ea\u5df1\u7684\u6a21\u578b\u3002"}
{"name": "fedml-ai/fedml", "full_name": "FedML-AI/FedML", "topics": ["federated-learning", "deep-learning", "distributed-training", "blockchain", "edge-ai", "machine-learning", "on-device-training", "inference-engine", "marketplace", "mlops", "privacy", "security"], "description": "FedML - The federated learning and analytics library enabling secure and collaborative machine learning on decentralized data anywhere at any scale. Supporting large-scale cross-silo federated learning, cross-device federated learning on smartphones/IoTs, and research simulation. MLOps and App Marketplace are also enabled (https://open.fedml.ai)."}
{"name": "tju-drl-lab/ai-optimizer", "full_name": "TJU-DRL-LAB/AI-Optimizer", "topics": ["reinforcement-learning", "transfer-learning", "deep-learning"], "description": "The next generation deep reinforcement learning tookit"}
{"name": "uber/orbit", "full_name": "uber/orbit", "topics": ["python", "forecasting", "bayesian", "exponential-smoothing", "pyro", "stan", "pystan", "probabilistic-programming", "probabilistic", "forecast", "orbit", "time-series", "regression", "arima", "changepoint", "bayesian-methods", "bayesian-statistics", "machine-learning", "regression-models", "pytorch"], "description": "A Python package for Bayesian forecasting with object-oriented design and probabilistic models under the hood."}
{"name": "jiupinjia/skyar", "full_name": "jiupinjia/SkyAR", "topics": ["dynamic-sky-replacement", "sky-matting", "harmonization", "skyar"], "description": "Official Pytorch implementation of the preprint paper \"Castle in the Sky: Dynamic Sky Replacement and Harmonization in Videos\", in arXiv:2010.11800."}
{"name": "lightning-ai/lightning-flash", "full_name": "Lightning-AI/lightning-flash", "topics": ["pytorch-lightning", "deep-learning", "machine-learning", "pytorch", "tasks-flash", "classification", "tabular-data", "object-detection", "icevision", "open3d", "fiftyone", "torch-geometric", "pytorch-video"], "description": "Your PyTorch AI Factory - Flash enables you to easily configure and run complex AI recipes for over 15 tasks across 7 data domains"}
{"name": "ai-forever/ru-gpts", "full_name": "ai-forever/ru-gpts", "topics": ["deep-learning", "gpt3", "language-model", "russian", "russian-language", "transformers"], "description": "Russian GPT3 models."}
{"name": "open-mmlab/mmclassification", "full_name": "open-mmlab/mmclassification", "topics": ["image-classification", "resnet", "resnext", "mobilenet", "shufflenet", "senet", "regnet", "imagenet", "pytorch", "deep-learning", "swin-transformer"], "description": "OpenMMLab Image Classification Toolbox and Benchmark"}
{"name": "peterh0323/smart_construction", "full_name": "PeterH0323/Smart_Construction", "topics": ["yolov5", "helmet", "pytorch", "python", "detection", "object-detection"], "description": "Head Person Helmet Detection on Construction Sites\uff0c\u57fa\u4e8e\u76ee\u6807\u68c0\u6d4b\u5de5\u5730\u5b89\u5168\u5e3d\u548c\u7981\u5165\u5371\u9669\u533a\u57df\u8bc6\u522b\u7cfb\u7edf\uff0c\ud83d\ude80\ud83d\ude06\u9644 YOLOv5 \u8bad\u7ec3\u81ea\u5df1\u7684\u6570\u636e\u96c6\u8d85\u8be6\u7ec6\u6559\u7a0b\ud83d\ude80\ud83d\ude062021.3\u65b0\u589e\u53ef\u89c6\u5316\u754c\u9762\u2757\u2757"}
{"name": "towhee-io/towhee", "full_name": "towhee-io/towhee", "topics": ["machine-learning", "convolutional-networks", "embedding-vectors", "embeddings", "computer-vision", "image-processing", "video-processing", "feature-extraction", "image-retrieval", "unstructured-data", "feature-vector", "transformer", "milvus", "towhee", "vision-transformer", "vit", "pipeline"], "description": "Towhee is a framework that is dedicated to making neural data processing pipelines simple and fast."}
{"name": "graph4ai/graph4nlp", "full_name": "graph4ai/graph4nlp", "topics": ["nlp", "pytorch", "natural-language-processing", "deep-learning", "machine-learning", "graph-neural-networks"], "description": "Graph4nlp is the library for the easy use of Graph Neural Networks for NLP. Welcome to visit our DLG4NLP website (https://dlg4nlp.github.io/index.html) for various learning resources! "}
{"name": "paddlepaddle/research", "full_name": "PaddlePaddle/Research", "topics": ["deep-learning", "computer-vision", "nlp", "knowledge-graph", "spatial-temporal", "data-mining"], "description": "novel deep learning research works with PaddlePaddle"}
{"name": "mindee/doctr", "full_name": "mindee/doctr", "topics": ["ocr", "deep-learning", "document-recognition", "tensorflow2", "text-detection-recognition", "text-detection", "text-recognition", "optical-character-recognition", "pytorch"], "description": "docTR (Document Text Recognition) - a seamless, high-performing & accessible library for OCR-related tasks powered by Deep Learning."}
{"name": "tyleryep/torchinfo", "full_name": "TylerYep/torchinfo", "topics": ["pytorch", "torchsummary", "torch", "keras", "visualization", "torchvision", "torch-summary", "torchinfo", "python"], "description": "View model summaries in PyTorch!"}
{"name": "pytorchlightning/lightning-flash", "full_name": "Lightning-AI/lightning-flash", "topics": ["pytorch-lightning", "deep-learning", "machine-learning", "pytorch", "tasks-flash", "classification", "tabular-data", "object-detection", "icevision", "open3d", "fiftyone", "torch-geometric", "pytorch-video"], "description": "Your PyTorch AI Factory - Flash enables you to easily configure and run complex AI recipes for over 15 tasks across 7 data domains"}
{"name": "nebuly-ai/nebullvm", "full_name": "nebuly-ai/nebullvm", "topics": ["deep-learning", "pytorch", "onnx", "machine-learning", "tensorflow", "tvm", "openvino", "tensorrt", "huggingface", "compiler", "computing", "inference", "neural-network", "pypi", "quantization", "edge-computing", "gpu", "optimization", "transformers"], "description": "Plug and play modules to optimize the performances of your AI systems \ud83d\ude80"}
{"name": "wxinlong/solo", "full_name": "WXinlong/SOLO", "topics": ["solo", "instance-segmentation", "object-detection", "pytorch", "solov2"], "description": "SOLO and SOLOv2 for instance segmentation, ECCV 2020 & NeurIPS 2020."}
{"name": "ppogg/yolov5-lite", "full_name": "ppogg/YOLOv5-Lite", "topics": ["ncnn", "yolov5", "android-app", "mnn", "shufflenetv2", "repvgg", "transformer", "tensorrt", "pplcnet", "openvivo", "mobilenet", "tflite", "pytorch", "picodet", "onnxruntime"], "description": "\ud83c\udf45\ud83c\udf45\ud83c\udf45YOLOv5-Lite: lighter, faster and easier to deploy. Evolved from yolov5 and the size of model is only 930+kb (int8) and 1.7M (fp16). It can reach 10+ FPS on the Raspberry Pi 4B when the input size is 320\u00d7320~"}
{"name": "mukosame/anime2sketch", "full_name": "Mukosame/Anime2Sketch", "topics": ["pytorch", "deep-learning", "gan", "anime", "sketch", "wacv", "gradio", "comic", "manga", "computer-vision", "generative-adversarial-network", "image-generation", "gans"], "description": "A sketch extractor for anime/illustration."}
{"name": "vita-group/transgan", "full_name": "VITA-Group/TransGAN", "topics": ["transformer", "transformer-encoder", "transformer-models", "gan", "pytorch"], "description": "[NeurIPS\u20182021] \"TransGAN: Two Pure Transformers Can Make One Strong GAN, and That Can Scale Up\", Yifan Jiang, Shiyu Chang, Zhangyang Wang"}
{"name": "deepcam-cn/yolov5-face", "full_name": "deepcam-cn/yolov5-face", "topics": ["yolov5", "tensorrt", "retinaface", "scrfd", "tinaface", "yolo", "pytorch", "arcface", "shufflenet", "blazeface", "yolov7"], "description": "YOLO5Face: Why Reinventing a Face Detector (https://arxiv.org/abs/2105.12931)       ECCV Workshops 2022)"}
{"name": "open-mmlab/openselfsup", "full_name": "open-mmlab/mmselfsup", "topics": ["self-supervised-learning", "unsupervised-learning", "pytorch", "moco", "simclr", "simsiam", "mae", "masked-image-modeling", "beit"], "description": "OpenMMLab Self-Supervised Learning Toolbox and Benchmark"}
{"name": "tingfree/nlper-arsenal", "full_name": "TingFree/NLPer-Arsenal", "topics": ["nlp-competition", "gpu", "nlp-conference", "nlp-media", "pytorch", "nlp", "baselines"], "description": "\u6536\u5f55NLP\u7ade\u8d5b\u7b56\u7565\u5b9e\u73b0\u3001\u5404\u4efb\u52a1baseline\u3001\u76f8\u5173\u7ade\u8d5b\u7ecf\u9a8c\u8d34\uff08\u5f53\u524d\u8d5b\u4e8b\u3001\u5f80\u671f\u8d5b\u4e8b\u3001\u8bad\u7ec3\u8d5b\uff09\u3001NLP\u4f1a\u8bae\u65f6\u95f4\u3001\u5e38\u7528\u81ea\u5a92\u4f53\u3001GPU\u63a8\u8350\u7b49\uff0c\u6301\u7eed\u66f4\u65b0\u4e2d"}
{"name": "fundamentalvision/bevformer", "full_name": "fundamentalvision/BEVFormer", "topics": ["deep-learning", "autonomous-driving", "computer-vision", "object-detection"], "description": "[ECCV 2022] This is the official implementation of BEVFormer, a camera-only framework for autonomous driving perception, e.g., 3D object detection and semantic map segmentation."}
{"name": "cfzd/ultra-fast-lane-detection", "full_name": "cfzd/Ultra-Fast-Lane-Detection", "topics": ["lane-detection", "autonomous-driving", "lane-detector", "lane-finding", "road-detection", "autonomous-vehicles", "cnn", "pytorch"], "description": "Ultra Fast Structure-aware Deep Lane Detection (ECCV 2020)"}
{"name": "lightning-ai/lightning-bolts", "full_name": "Lightning-AI/lightning-bolts", "topics": ["pytorch", "ai", "machine-learning", "image-processing", "natural-language-processing", "supervised-learning", "gan"], "description": "Toolbox of models, callbacks, and datasets for AI/ML researchers."}
{"name": "iscyy/yoloair", "full_name": "iscyy/yoloair", "topics": ["yolov5", "attention", "backbone", "pytorch", "transformer", "yolor", "yolov3", "yolov4", "yolov7", "yolox", "deep-learning", "yoloair", "scaledyolov4", "yolov6", "ppyolo", "ppyoloe", "tood", "anchor-based", "anchor-free", "yolo"], "description": "\ud83d\udd25\ud83d\udd25\ud83d\udd25YOLOv5, YOLOv6, YOLOv7, YOLOv8, PPYOLOE, YOLOX, YOLOR, YOLOv4, YOLOv3, Transformer, Attention, TOOD and Improved-YOLOv5-YOLOv7... Support to improve backbone, neck, head, loss, IoU, NMS and other modules\ud83d\ude80"}
{"name": "google-research/big_transfer", "full_name": "google-research/big_transfer", "topics": ["deep-learning", "convolutional-neural-networks", "imagenet", "tensorflow2", "jax", "pytorch", "transfer-learning"], "description": "Official repository for the \"Big Transfer (BiT): General Visual Representation Learning\" paper."}
{"name": "google-research/scenic", "full_name": "google-research/scenic", "topics": ["jax", "computer-vision", "deep-learning", "research", "attention", "transformers", "vision-transformer"], "description": "Scenic: A Jax Library for Computer Vision Research and Beyond"}
{"name": "lucidrains/lightweight-gan", "full_name": "lucidrains/lightweight-gan", "topics": ["artificial-intelligence", "deep-learning", "generative-adversarial-network"], "description": "Implementation of 'lightweight' GAN, proposed in ICLR 2021, in Pytorch. High resolution image generations that can be trained within a day or two"}
{"name": "rwightman/efficientdet-pytorch", "full_name": "rwightman/efficientdet-pytorch", "topics": ["efficientdet", "efficientnet", "object-detection", "semantic-segmentation", "pytorch"], "description": "A PyTorch impl of EfficientDet faithful to the original Google impl w/ ported weights"}
{"name": "divelab/dig", "full_name": "divelab/DIG", "topics": ["deep-learning", "graph-neural-network", "graph-generation", "explainable-ml", "self-supervised-learning", "3d-graph"], "description": "A library for graph deep learning research"}
{"name": "alibaba/alicemind", "full_name": "alibaba/AliceMind", "topics": ["nlp", "bert", "natural-language-processing", "deep-learning"], "description": "ALIbaba's Collection of Encoder-decoders from MinD (Machine IntelligeNce of Damo) Lab"}
{"name": "opendilab/di-star", "full_name": "opendilab/DI-star", "topics": ["reinforcment-learning", "starcraft2", "self-play", "artificial-intelligence", "deep-learning", "league", "deep-reinforcement-learning"], "description": "An artificial intelligence platform for the StarCraft II with large-scale distributed training and grand-master agents."}
{"name": "neuralmagic/sparseml", "full_name": "neuralmagic/sparseml", "topics": ["pytorch", "keras", "model-sparsification", "sparsification-recipes", "tensorflow", "smaller-models", "deep-learning-library", "deep-learning-algorithms", "deep-learning-models", "automl", "pruning-algorithms", "sparsity", "sparsification", "recipe-driven-approaches", "pruning", "computer-vision-algorithms", "object-detection", "image-classification", "nlp", "onnx"], "description": "Libraries for applying sparsification recipes to neural networks with a few lines of code, enabling faster and smaller models"}
{"name": "pytorchlightning/lightning-bolts", "full_name": "Lightning-AI/lightning-bolts", "topics": ["pytorch", "ai", "machine-learning", "image-processing", "natural-language-processing", "supervised-learning", "gan"], "description": "Toolbox of models, callbacks, and datasets for AI/ML researchers."}
{"name": "nvlabs/segformer", "full_name": "NVlabs/SegFormer", "topics": ["semantic-segmentation", "transformer", "ade20k", "cityscapes"], "description": "Official PyTorch implementation of SegFormer"}
{"name": "learning-at-home/hivemind", "full_name": "learning-at-home/hivemind", "topics": ["deep-learning", "pytorch", "volunteer-computing", "mixture-of-experts", "distributed-training", "distributed-systems", "asynchronous-programming", "asyncio", "dht", "hivemind", "neural-networks", "machine-learning"], "description": "Decentralized deep learning in PyTorch. Built to train models on thousands of volunteers across the world."}
{"name": "whai362/pvt", "full_name": "whai362/PVT", "topics": ["transformer", "backbone", "pvt", "detection", "segmentation", "pvtv2"], "description": null}
{"name": "sberbank-ai/ru-gpts", "full_name": "ai-forever/ru-gpts", "topics": ["deep-learning", "gpt3", "language-model", "russian", "russian-language", "transformers"], "description": "Russian GPT3 models."}
{"name": "huggingface/diffusers", "full_name": "huggingface/diffusers", "topics": ["deep-learning", "diffusion", "image-generation", "pytorch", "score-based-generative-modeling", "image2image", "text2image", "stable-diffusion", "hacktoberfest"], "description": "\ud83e\udd17 Diffusers: State-of-the-art diffusion models for image and audio generation in PyTorch"}
{"name": "nvlabs/nvdiffrec", "full_name": "NVlabs/nvdiffrec", "topics": ["pytorch", "deep-learning"], "description": "Official code for the CVPR 2022 (oral) paper \"Extracting Triangular 3D Models, Materials, and Lighting From Images\"."}
{"name": "open-mmlab/mmgeneration", "full_name": "open-mmlab/mmgeneration", "topics": ["generative", "gan", "pytorch", "mmcv", "openmmlab", "generative-adversarial-network", "diffusion-models"], "description": "MMGeneration is a powerful toolkit for generative models, based on PyTorch and MMCV. "}
{"name": "timoschick/pet", "full_name": "timoschick/pet", "topics": ["nlp", "python", "machine-learning"], "description": "This repository contains the code for \"Exploiting Cloze Questions for Few-Shot Text Classification and Natural Language Inference\""}
{"name": "recognai/rubrix", "full_name": "argilla-io/argilla", "topics": ["python", "data-science", "human-in-the-loop", "natural-language-processing", "mlops", "artificial-intelligence", "knowledge-graph", "developer-tools", "text-labeling", "annotation-tool", "nlp", "machine-learning", "active-learning", "weak-supervision", "weakly-supervised-learning", "spacy", "text-classification", "dataops", "text-annotation", "hacktoberfest"], "description": "\u2728 Open-source tool for data-centric NLP. Argilla helps domain experts and data teams to build better NLP datasets in less time."}
{"name": "airaria/textbrewer", "full_name": "airaria/TextBrewer", "topics": ["bert", "pytorch", "nlp", "knowledge", "distillation"], "description": "A PyTorch-based knowledge distillation toolkit for natural language processing"}
{"name": "lucidrains/lambda-networks", "full_name": "lucidrains/lambda-networks", "topics": ["artificial-intelligence", "deep-learning", "computer-vision", "attention-mechanism", "attention"], "description": "Implementation of LambdaNetworks, a new approach to image recognition that reaches SOTA with less compute"}
{"name": "lucidrains/byol-pytorch", "full_name": "lucidrains/byol-pytorch", "topics": ["artificial-intelligence", "deep-learning", "self-supervised-learning"], "description": "Usable Implementation of \"Bootstrap Your Own Latent\" self-supervised learning, from Deepmind, in Pytorch"}
{"name": "maiot-io/zenml", "full_name": "zenml-io/zenml", "topics": ["mlops", "machine-learning", "data-science", "production-ready", "devops-tools", "zenml", "pipelines", "metadata-tracking", "deep-learning", "pytorch", "tensorflow", "ml", "ai", "automl", "hacktobe", "hacktoberfest", "workflow"], "description": "ZenML \ud83d\ude4f: Build portable, production-ready MLOps pipelines. https://zenml.io."}
{"name": "deepmotionediting/deep-motion-editing", "full_name": "DeepMotionEditing/deep-motion-editing", "topics": ["character-animation", "computer-graphics", "deep-learning", "motion-retargeting", "style-transfer", "computer-animation"], "description": "An end-to-end library for editing and rendering motion of 3D characters with deep learning [SIGGRAPH 2020]"}
{"name": "mlech26l/ncps", "full_name": "mlech26l/ncps", "topics": ["ncp", "recurrent-neural-network", "nature-machine-intelligence", "tensorflow", "keras", "cfc"], "description": "PyTorch and TensorFlow implementation of NCP, LTC, and CfC wired neural models"}
{"name": "open-mmlab/mmdeploy", "full_name": "open-mmlab/mmdeploy", "topics": ["model-converter", "sdk", "deployment", "tensorrt", "ncnn", "pplnn", "openvino", "onnxruntime", "onnx", "mmdetection", "mmsegmentation", "computer-vision", "deep-learning", "pytorch"], "description": "OpenMMLab Model Deployment Framework"}
{"name": "els-rd/transformer-deploy", "full_name": "ELS-RD/transformer-deploy", "topics": ["inference", "deep-learning", "natural-language-processing", "deployment", "machine-learning", "server"], "description": "Efficient, scalable and enterprise-grade CPU/GPU inference server for \ud83e\udd17 Hugging Face transformer models \ud83d\ude80"}
{"name": "dorarad/gansformer", "full_name": "dorarad/gansformer", "topics": ["transformers", "gans", "generative-adversarial-networks", "image-generation", "scene-generation", "compositionality", "attention"], "description": "Generative Adversarial Transformers"}
{"name": "kingyiusuen/image-to-latex", "full_name": "kingyiusuen/image-to-latex", "topics": ["pytorch", "deep-learning", "transformer", "encoder-decoder", "streamlit-webapp", "latex", "end-to-end-machine-learning", "computer-vision"], "description": "Convert images of LaTex math equations into LaTex code."}
{"name": "continualai/avalanche", "full_name": "ContinualAI/avalanche", "topics": ["continual-learning", "deep-learning", "pytorch", "lifelong-learning", "framework", "benchmarks", "strategies", "metrics", "continualai", "evaluation", "library", "training"], "description": "Avalanche: an End-to-End Library for Continual Learning based on PyTorch."}
{"name": "kritiksoman/gimp-ml", "full_name": "kritiksoman/GIMP-ML", "topics": ["gimp-plugin", "image-manipulation", "computer-vision", "gimp", "photo-editing", "computervision", "deep-learning", "machine-learning", "machine-learning-algorithms", "macos", "ubuntu", "linux", "coloring-image", "dehazing", "deblurring", "enlightenment", "python3", "gimp-plugins"], "description": "AI for GNU Image Manipulation Program"}
{"name": "adapter-hub/adapter-transformers", "full_name": "adapter-hub/adapter-transformers", "topics": ["nlp", "natural-language-processing", "adapters", "transformers", "bert", "pytorch"], "description": "Huggingface Transformers + Adapters = \u2764\ufe0f"}
{"name": "clementchadebec/benchmark_vae", "full_name": "clementchadebec/benchmark_VAE", "topics": ["vae", "benchmarking", "beta-vae", "comparison", "normalizing-flows", "pixel-cnn", "pytorch", "reproducibility", "reproducible-research", "vae-gan", "vae-implementation", "vae-pytorch", "variational-autoencoder", "vq-vae", "wasserstein-autoencoder"], "description": "Unifying Variational Autoencoder (VAE) implementations in Pytorch (NeurIPS 2022)"}
{"name": "yuliangxiu/icon", "full_name": "YuliangXiu/ICON", "topics": ["implicit-functions", "virtual-humans", "computer-vision", "computer-graphics", "animation", "3d-reconstruction", "human-pose-estimation", "smplx", "smpl-model", "normal-maps", "mesh-deformation", "pytorch", "metaverse", "pifu", "pifuhd", "cloth-simulation", "pose-estimation", "avatar-generator", "smpl-body", "smpl"], "description": "ICON: Implicit Clothed humans Obtained from Normals (CVPR 2022)"}
{"name": "isl-org/open3d-ml", "full_name": "isl-org/Open3D-ML", "topics": ["3d-perception", "datasets", "pretrained-models", "lidar", "rgbd", "tensorflow", "pytorch", "visualization", "semantic-segmentation", "object-detection", "3d-object-detection"], "description": "An extension of Open3D to address 3D Machine Learning tasks"}
{"name": "haotian-liu/yolact_edge", "full_name": "haotian-liu/yolact_edge", "topics": ["realtime", "real-time", "instance-segmentation", "yolactedge", "pytorch", "edge-devices"], "description": "The first competitive instance segmentation approach that runs on small edge devices at real-time speeds."}
{"name": "nixtla/neuralforecast", "full_name": "Nixtla/neuralforecast", "topics": ["deep-learning", "forecasting", "esrnn", "nbeats", "nbeatsx", "time-series", "pytorch", "transformer", "nhits", "neural-network", "machine-learning", "deep-neural-networks", "deepar", "tft"], "description": "Scalable and user friendly neural :brain: forecasting algorithms."}
{"name": "apple/ml-cvnets", "full_name": "apple/ml-cvnets", "topics": ["ade20k", "classification", "computer-vision", "deep-learning", "detection", "imagenet", "machine-learning", "mscoco", "pascal-voc", "pytorch", "segmentation"], "description": "CVNets: A library for training computer vision networks"}
{"name": "patrick-kidger/torchtyping", "full_name": "patrick-kidger/torchtyping", "topics": ["tensors", "named-tensors", "shape", "pytorch", "typing", "python-typing"], "description": "Type annotations and dynamic checking for a tensor's shape, dtype, names, etc."}
{"name": "alibaba/easycv", "full_name": "alibaba/EasyCV", "topics": ["self-supervised-learning", "transformers", "classification", "computer-vision", "object-detection", "pytorch", "vision-transformer"], "description": "An all-in-one toolkit for computer vision"}
{"name": "facebookresearch/theseus", "full_name": "facebookresearch/theseus", "topics": ["differentiable-optimization", "robotics", "embodied-ai", "nonlinear-least-squares", "pytorch", "deep-learning", "computer-vision", "gauss-newton", "levenberg-marquardt", "implicit-differentiation", "bilevel-optimization"], "description": "A library for differentiable nonlinear optimization"}
{"name": "quic/aimet", "full_name": "quic/aimet", "topics": ["quantization", "deep-learning", "compression", "open-source", "machine-learning", "pruning", "auto-ml", "network-compression", "deep-neural-networks", "network-quantization", "opensource"], "description": "AIMET is a library that provides advanced quantization and compression techniques for trained neural network models."}
{"name": "thudm/cogview", "full_name": "THUDM/CogView", "topics": ["text-to-image", "transformers", "pretrained-models", "pytorch"], "description": "Text-to-Image generation. The repo for NeurIPS 2021 paper \"CogView: Mastering Text-to-Image Generation via Transformers\"."}
{"name": "snakers4/silero-vad", "full_name": "snakers4/silero-vad", "topics": ["voice-detection", "voice-recognition", "voice-commands", "language-classifier", "pytorch", "onnx", "voice-activity-detection", "voice-control"], "description": "Silero VAD: pre-trained enterprise-grade Voice Activity Detector, Language Classifier and Spoken Number Detector"}
{"name": "d-li14/involution", "full_name": "d-li14/involution", "topics": ["involution", "operator", "pytorch", "image-classification", "object-detection", "instance-segmentation", "semantic-segmentation", "cvpr2021", "pre-trained-model"], "description": "[CVPR 2021] Involution: Inverting the Inherence of Convolution for Visual Recognition, a brand new neural operator"}
{"name": "pytorch/torchrec", "full_name": "pytorch/torchrec", "topics": ["pytorch", "gpu", "deep-learning", "cuda", "recommender-system", "recommendation-system", "sharding"], "description": "Pytorch domain library for recommendation systems"}
{"name": "abhishekkrthakur/tez", "full_name": "abhishekkrthakur/tez", "topics": ["tez", "pytorch", "deep-learning", "deep-neural-networks", "neural-networks"], "description": "Tez is a super-simple and lightweight Trainer for PyTorch. It also comes with many utils that you can use to tackle over 90% of deep learning projects in PyTorch."}
{"name": "microsoft/graphormer", "full_name": "microsoft/Graphormer", "topics": ["graph", "transformer", "deep-learning", "ai4science", "molecule-simulation"], "description": "Graphormer is a deep learning package that allows researchers and developers to train custom models for molecule modeling tasks. It aims to accelerate the research and application in AI for molecule science, such as material design, drug discovery, etc."}
{"name": "vturrisi/solo-learn", "full_name": "vturrisi/solo-learn", "topics": ["simclr", "nvidia-dali", "contrastive-learning", "pytorch", "pytorch-lightning", "barlow-twins", "self-supervised-learning", "swav", "byol", "moco", "simsiam", "vicreg", "nnclr", "dino", "deepcluster", "ressl", "vibcreg", "transformer-models", "mae", "masked-input-prediction"], "description": "solo-learn: a library of self-supervised methods for visual representation learning powered by Pytorch Lightning"}
{"name": "pykeen/pykeen", "full_name": "pykeen/pykeen", "topics": ["knowledge-graph-embeddings", "knowledge-graphs", "machine-learning", "link-prediction", "knowledge-base-completion", "pykeen", "deep-learning", "cuda", "python", "torch"], "description": "\ud83e\udd16 A Python library for learning and evaluating knowledge graph embeddings "}
{"name": "lucidrains/alphafold2", "full_name": "lucidrains/alphafold2", "topics": ["artificial-intelligence", "deep-learning", "protein-folding", "attention-mechanism"], "description": "To eventually become an unofficial Pytorch implementation / replication of Alphafold2, as details of the architecture get released"}
{"name": "lightning-ai/metrics", "full_name": "Lightning-AI/metrics", "topics": ["python", "data-science", "machine-learning", "pytorch", "deep-learning", "metrics", "analyses"], "description": "Machine learning metrics for distributed, scalable PyTorch applications."}
{"name": "minitorch/minitorch", "full_name": "minitorch/minitorch", "topics": [], "description": "The full minitorch student suite. "}
{"name": "kakaobrain/pororo", "full_name": "kakaobrain/pororo", "topics": ["deep-learning", "natural-language-processing", "automatic-speech-recognition", "speech-synthesis", "neural-models"], "description": "PORORO: Platform Of neuRal mOdels for natuRal language prOcessing"}
{"name": "neural-operator/fourier_neural_operator", "full_name": "neuraloperator/neuraloperator", "topics": ["neural-operator", "pde", "neural-operators", "partial-differential-equations", "pytorch", "tensor-methods", "fourier-neural-operator", "fno", "tensorization", "tensorly", "uno"], "description": "Learning in infinite dimension with neural operators."}
{"name": "alibaba/easynlp", "full_name": "alibaba/EasyNLP", "topics": ["transformers", "bert", "nlp", "pretrained-models", "deep-learning", "pytorch", "fewshot-learning", "knowledge-distillation", "knowledge-pretraining", "text-image-retrieval", "text-to-image-synthesis", "machine-learning", "text-classification", "transfer-learning"], "description": "EasyNLP: A Comprehensive and Easy-to-use NLP Toolkit"}
{"name": "idea-research/dino", "full_name": "IDEA-Research/DINO", "topics": ["object-detection", "computer-vision", "deep-learning"], "description": "[ICLR 2023] Official implementation of the paper \"DINO: DETR with Improved DeNoising Anchor Boxes for End-to-End Object Detection\""}
{"name": "google/uncertainty-baselines", "full_name": "google/uncertainty-baselines", "topics": ["bayesian-methods", "deep-learning", "machine-learning", "data-science", "tensorflow", "neural-networks", "statistics", "probabilistic-programming"], "description": "High-quality implementations of standard and SOTA methods on a variety of tasks."}
{"name": "jiupinjia/stylized-neural-painting", "full_name": "jiupinjia/stylized-neural-painting", "topics": ["style-transfer", "painting-translation", "stroke-parameters", "neural-rendering"], "description": "Official Pytorch implementation of the preprint paper \"Stylized Neural Painting\", in CVPR 2021."}
{"name": "deepgraphlearning/torchdrug", "full_name": "DeepGraphLearning/torchdrug", "topics": ["pytorch", "deep-learning", "graph-neural-networks", "drug-discovery"], "description": "A powerful and flexible machine learning platform for drug discovery"}
{"name": "davda54/sam", "full_name": "davda54/sam", "topics": ["optimizer", "pytorch", "sam", "sharpness-aware"], "description": "SAM: Sharpness-Aware Minimization (PyTorch)"}
{"name": "miraclelucy/dive_into_deep_learning", "full_name": "Miraclelucy/dive_into_deep_learning", "topics": [], "description": "\u2714\ufe0f\u674e\u6c90 \u3010\u52a8\u624b\u5b66\u6df1\u5ea6\u5b66\u4e60\u3011\u8bfe\u7a0b\u5b66\u4e60\u7b14\u8bb0\uff1a\u4f7f\u7528pycharm\u7f16\u7a0b\uff0c\u57fa\u4e8epytorch\u6846\u67b6\u5b9e\u73b0\u3002"}
{"name": "frgfm/torch-cam", "full_name": "frgfm/torch-cam", "topics": ["pytorch", "python", "deep-learning", "cnn", "activation-maps", "gradcam-plus-plus", "gradcam", "saliency-map", "interpretability", "interpretable-deep-learning", "smoothgrad", "score-cam", "class-activation-map", "grad-cam"], "description": "Class activation maps for your PyTorch models (CAM, Grad-CAM, Grad-CAM++, Smooth Grad-CAM++, Score-CAM, SS-CAM, IS-CAM, XGrad-CAM, Layer-CAM)"}
{"name": "bubbliiiing/faster-rcnn-pytorch", "full_name": "bubbliiiing/faster-rcnn-pytorch", "topics": [], "description": "\u8fd9\u662f\u4e00\u4e2afaster-rcnn\u7684pytorch\u5b9e\u73b0\u7684\u5e93\uff0c\u53ef\u4ee5\u5229\u7528voc\u6570\u636e\u96c6\u683c\u5f0f\u7684\u6570\u636e\u8fdb\u884c\u8bad\u7ec3\u3002"}
{"name": "microsoft/torchgeo", "full_name": "microsoft/torchgeo", "topics": ["pytorch", "torchvision", "datasets", "models", "transforms", "remote-sensing", "deep-learning", "earth-observation"], "description": "TorchGeo: datasets, samplers, transforms, and pre-trained models for geospatial data"}
{"name": "ashawkey/torch-ngp", "full_name": "ashawkey/torch-ngp", "topics": ["pytorch", "instant-ngp", "nerf", "real-time", "gui", "sdf", "tensorf", "d-nerf"], "description": "A pytorch CUDA extension implementation of instant-ngp (sdf and nerf), with a GUI."}
{"name": "mit-han-lab/gan-compression", "full_name": "mit-han-lab/gan-compression", "topics": ["compression", "gans", "conditional-gans", "pix2pix", "cyclegan", "gaugan", "pytorch", "image-to-image-translation"], "description": "[CVPR 2020] GAN Compression: Efficient Architectures for Interactive Conditional GANs"}
{"name": "nvidiagameworks/kaolin-wisp", "full_name": "NVIDIAGameWorks/kaolin-wisp", "topics": ["3d-deep-learning", "nerf", "pytorch", "sdf", "neuralfields"], "description": "NVIDIA Kaolin Wisp is a PyTorch library powered by NVIDIA Kaolin Core to work with neural fields (including NeRFs, NGLOD, instant-ngp and VQAD)."}
{"name": "clovaai/donut", "full_name": "clovaai/donut", "topics": ["document-ai", "eccv-2022", "multimodal-pre-trained-model", "ocr", "nlp", "computer-vision"], "description": "Official Implementation of OCR-free Document Understanding Transformer (Donut) and Synthetic Document Generator (SynthDoG), ECCV 2022"}
{"name": "torchssl/torchssl", "full_name": "TorchSSL/TorchSSL", "topics": ["semi-supervised-learning", "toolkit", "codebase", "pytorch", "machine-learning", "computer-vision", "deep-learning", "self-supervised-learning"], "description": "A PyTorch-based library for semi-supervised learning (NeurIPS'21)"}
{"name": "deepwisdom/autodl", "full_name": "DeepWisdom/AutoDL", "topics": ["autodl", "automl", "nas", "feature-engineering", "model-selection", "full-automl", "artificial-intelligence", "lightgbm", "resnet", "pytorch", "tensorflow", "python", "autodl-challenge", "ai", "deeplearning", "data-science", "machine-learning", "big-data", "multi-label", "automated-machine-learning"], "description": "Automated Deep Learning without ANY human intervention. 1'st Solution for AutoDL challenge@NeurIPS. "}
{"name": "neuralmagic/deepsparse", "full_name": "neuralmagic/deepsparse", "topics": ["ml", "machinelearning", "pytorch", "tensorflow", "onnx", "deepsparse-engine", "sparsified-models", "sparsification-recipe", "inference", "computer-vision", "object-detection", "pruning", "quantization", "pretrained-models", "nlp", "auto-ml", "cpus", "yolov3", "sparsification", "cpu-inference-api"], "description": "Inference runtime offering GPU-class performance on CPUs and APIs to integrate ML into your application"}
{"name": "lucidrains/make-a-video-pytorch", "full_name": "lucidrains/make-a-video-pytorch", "topics": ["artificial-intelligence", "attention-mechanisms", "deep-learning", "text-to-video", "axial-convolutions"], "description": "Implementation of Make-A-Video, new SOTA text to video generator from Meta AI, in Pytorch"}
{"name": "milanlproc/contextualized-topic-models", "full_name": "MilaNLProc/contextualized-topic-models", "topics": ["topic-modeling", "bert", "transformer", "embeddings", "text-as-data", "topic-coherence", "multilingual-topic-models", "multilingual-models", "neural-topic-models", "nlp", "nlp-library", "nlp-machine-learning"], "description": "A python package to run contextualized topic modeling. CTMs combine contextualized embeddings (e.g., BERT) with topic models to get coherent topics. Published at EACL and ACL 2021."}
{"name": "gradslam/gradslam", "full_name": "gradslam/gradslam", "topics": ["slam", "deep-learning", "machine-learning", "robotics", "3d-reconstruction"], "description": "gradslam is an open source differentiable dense SLAM library for PyTorch"}
{"name": "adobe-research/custom-diffusion", "full_name": "adobe-research/custom-diffusion", "topics": ["customization", "fine-tuning", "text-to-image-generation", "computer-vision", "diffusion-models", "few-shot", "pytorch"], "description": "Custom Diffusion: Multi-Concept Customization of Text-to-Image Diffusion"}
{"name": "elliottwu/unsup3d", "full_name": "elliottwu/unsup3d", "topics": ["3d-objects", "3d", "3d-reconstuction", "unsupervised", "unsupervised-learning", "cvpr", "cvpr-2020", "cvpr2020", "pytorch"], "description": "(CVPR'20 Oral) Unsupervised Learning of Probably Symmetric Deformable 3D Objects from Images in the Wild"}
{"name": "yangxue0827/rotationdetection", "full_name": "yangxue0827/RotationDetection", "topics": [], "description": "This is a tensorflow-based rotation detection benchmark, also called AlphaRotate."}
{"name": "mit-han-lab/bevfusion", "full_name": "mit-han-lab/bevfusion", "topics": ["3d-perception", "camera", "lidar", "object-detection", "pytorch", "semantic-segmentation", "sensor-fusion"], "description": "BEVFusion: Multi-Task Multi-Sensor Fusion with Unified Bird's-Eye View Representation"}
{"name": "br-idl/paddlevit", "full_name": "BR-IDL/PaddleViT", "topics": ["cv", "computer-vision", "paddlepaddle", "vit", "mlp", "transformer", "encoder-decoder", "classification", "detection", "segmentation", "gan", "deep-learning", "semantic-segmentation", "object-detection"], "description": ":robot: PaddleViT: State-of-the-art Visual Transformer and MLP Models for PaddlePaddle 2.0+"}
{"name": "nianticlabs/simplerecon", "full_name": "nianticlabs/simplerecon", "topics": ["computer-vision", "cost-volume", "depth", "depth-estimation", "eccv2022", "multi-view-stereo", "mvs", "pytorch", "scannet", "visualization"], "description": "[ECCV 2022] SimpleRecon: 3D Reconstruction Without 3D Convolutions"}
{"name": "thu-coai/cdial-gpt", "full_name": "thu-coai/CDial-GPT", "topics": ["dialogue", "pytorch", "gpt", "gpt-2", "lccc", "text-generation"], "description": " A Large-scale Chinese Short-Text Conversation Dataset and Chinese pre-training dialog models "}
{"name": "idea-research/detrex", "full_name": "IDEA-Research/detrex", "topics": ["detr", "object-detection", "pytorch", "dino", "state-of-the-art", "dab-detr", "deformable-detr", "conditional-detr", "dn-detr", "group-detr", "h-detr", "mask-dino"], "description": "detrex is a research platform for Transformer-based Instance Recognition algorithms including DETR (ECCV 2020), Deformable-DETR (ICLR 2021), Conditional-DETR (ICCV 2021), DAB-DETR (ICLR 2022), DN-DETR (CVPR 2022), DINO (ICLR 2023), H-DETR (arXiv 2022), MaskDINO (arXiv 2022), etc."}
{"name": "arthur151/romp", "full_name": "Arthur151/ROMP", "topics": ["3d-mesh-recovery", "bottom-up", "multi-person-3d-mesh-recovery", "smpl", "multi-person", "pytorch", "pose-estimation"], "description": "Monocular, One-stage, Regression of Multiple 3D People, ROMP[ICCV21], BEV[CVPR22]"}
{"name": "emilianavt/openseeface", "full_name": "emilianavt/OpenSeeFace", "topics": ["face-tracking", "face-landmarks", "depth-estimation", "unity", "unity3d", "python", "csharp", "udp", "onnx", "onnxruntime", "virtual-youtuber", "vtuber", "mobilenetv3", "pytorch", "openseeface", "face-detection", "detection-model", "landmark-model", "tracker", "cpu"], "description": "Robust realtime face and facial landmark tracking on CPU with Unity integration"}
{"name": "idiap/fast-transformers", "full_name": "idiap/fast-transformers", "topics": [], "description": "Pytorch library for fast transformer implementations"}
{"name": "minivision-ai/silent-face-anti-spoofing", "full_name": "minivision-ai/Silent-Face-Anti-Spoofing", "topics": ["computer-vision", "deep-learning", "face-anti-spoofing", "android-app", "sdk"], "description": "\u9759\u9ed8\u6d3b\u4f53\u68c0\u6d4b\uff08Silent-Face-Anti-Spoofing\uff09"}
{"name": "rinongal/stylegan-nada", "full_name": "rinongal/StyleGAN-nada", "topics": ["domain-adaptation", "stylegan", "generative-adversarial-network"], "description": null}
{"name": "autonomousvision/giraffe", "full_name": "autonomousvision/giraffe", "topics": ["cvpr2021", "generative-model", "generative-modelling", "generative-adversarial-network", "nerf", "implicit-surfaces", "neural-scene-representations"], "description": "This repository contains the code for the CVPR 2021 paper \"GIRAFFE: Representing Scenes as Compositional Generative Neural Feature Fields\""}
{"name": "wpeebles/gangealing", "full_name": "wpeebles/gangealing", "topics": ["cvpr", "cvpr2022", "gan", "image-manipulation", "deep-learning", "pytorch", "computer-vision", "alignment", "stylegan", "stylegan2", "tracking", "correspondence", "generative"], "description": "Official PyTorch Implementation of \"GAN-Supervised Dense Visual Alignment\" (CVPR 2022 Oral, Best Paper Finalist)"}
{"name": "turtlesoupy/this-word-does-not-exist", "full_name": "turtlesoupy/this-word-does-not-exist", "topics": ["machine-learning", "gpt-2", "transformers", "natural-language-processing", "natural-language-understanding", "natural-language-generation"], "description": "This Word Does Not Exist"}
{"name": "open-mmlab/mmrotate", "full_name": "open-mmlab/mmrotate", "topics": ["rotated-object", "pytorch", "openmmlab", "detection"], "description": "OpenMMLab Rotated Object Detection Toolbox and Benchmark"}
{"name": "zongyi-li/fourier_neural_operator", "full_name": "neuraloperator/neuraloperator", "topics": ["neural-operator", "pde", "neural-operators", "partial-differential-equations", "pytorch", "tensor-methods", "fourier-neural-operator", "fno", "tensorization", "tensorly", "uno"], "description": "Learning in infinite dimension with neural operators."}
{"name": "920232796/bert_seq2seq", "full_name": "920232796/bert_seq2seq", "topics": ["bert", "seq2seq", "ner", "crf", "text-classification", "unilm", "pytorch", "roberta", "autotitle", "gpt2", "t5-model"], "description": "pytorch\u5b9e\u73b0 Bert \u505aseq2seq\u4efb\u52a1\uff0c\u4f7f\u7528unilm\u65b9\u6848,\u73b0\u5728\u4e5f\u53ef\u4ee5\u505a\u81ea\u52a8\u6458\u8981\uff0c\u6587\u672c\u5206\u7c7b\uff0c\u60c5\u611f\u5206\u6790\uff0cNER\uff0c\u8bcd\u6027\u6807\u6ce8\u7b49\u4efb\u52a1,\u652f\u6301t5\u6a21\u578b\uff0c\u652f\u6301GPT2\u8fdb\u884c\u6587\u7ae0\u7eed\u5199\u3002"}
{"name": "zalandoresearch/pytorch-ts", "full_name": "zalandoresearch/pytorch-ts", "topics": ["pytorch", "time-series", "probabilistic", "deepar", "lstnet", "n-beats"], "description": "PyTorch based Probabilistic Time Series forecasting framework based on GluonTS backend"}
{"name": "lucidrains/perceiver-pytorch", "full_name": "lucidrains/perceiver-pytorch", "topics": ["artificial-intelligence", "deep-learning", "attention-mechanism"], "description": "Implementation of Perceiver, General Perception with Iterative Attention, in Pytorch"}
{"name": "pytorchlightning/metrics", "full_name": "Lightning-AI/metrics", "topics": ["python", "data-science", "machine-learning", "pytorch", "deep-learning", "metrics", "analyses"], "description": "Machine learning metrics for distributed, scalable PyTorch applications."}
{"name": "thumnlab/autogl", "full_name": "THUMNLab/AutoGL", "topics": ["graph-neural-networks", "automl", "pytorch", "pytorch-geometric", "hyper-parameter-optimization", "machine-learning", "deep-learning", "neural-architecture-search"], "description": "An autoML framework & toolkit for machine learning on graphs."}
{"name": "honglinchu/siamtrackers", "full_name": "HonglinChu/SiamTrackers", "topics": ["tracking", "deep-learning", "visual-tracking"], "description": "(2020-2022)The PyTorch version  of SiamFC\uff0cSiamRPN\uff0cDaSiamRPN, UpdateNet , SiamDW, SiamRPN++, SiamMask, SiamFC++,  SiamCAR,  SiamBAN, Ocean, LightTrack , TrTr, NanoTrack;  Visual object tracking based on deep learning"}
{"name": "rucaibox/textbox", "full_name": "RUCAIBox/TextBox", "topics": ["text-generation", "natural-language-processing", "deep-learning", "pretrained-models", "python", "pytorch", "seq2seq", "natural-language-generation"], "description": "TextBox 2.0 is a text generation library with pre-trained language models"}
{"name": "huawei-noah/addernet", "full_name": "huawei-noah/AdderNet", "topics": ["pytorch", "imagenet", "convolutional-neural-networks", "cvpr2020", "efficient-inference"], "description": "Code for paper \" AdderNet: Do We Really Need Multiplications in Deep Learning?\""}
{"name": "blinkdl/rwkv-lm", "full_name": "BlinkDL/RWKV-LM", "topics": ["attention-mechanism", "deep-learning", "gpt", "gpt-2", "gpt-3", "language-model", "linear-attention", "lstm", "pytorch", "rnn", "transformer", "transformers", "rwkv", "chatgpt"], "description": "RWKV is a RNN with transformer-level LLM performance. It can be directly trained like a GPT (parallelizable). So it's combining the best of RNN and transformer - great performance, fast inference, saves VRAM, fast training, \"infinite\" ctx_len, and free sentence embedding."}
{"name": "ideacvr/dino", "full_name": "IDEA-Research/DINO", "topics": ["object-detection", "computer-vision", "deep-learning"], "description": "[ICLR 2023] Official implementation of the paper \"DINO: DETR with Improved DeNoising Anchor Boxes for End-to-End Object Detection\""}
{"name": "yuval-alaluf/hyperstyle", "full_name": "yuval-alaluf/hyperstyle", "topics": ["generative-adversarial-network", "stylegan", "stylegan-encoder", "hypernetworks", "cvpr2022"], "description": "Official Implementation for \"HyperStyle: StyleGAN Inversion with HyperNetworks for Real Image Editing\" (CVPR 2022) https://arxiv.org/abs/2111.15666"}
{"name": "norskregnesentral/skweak", "full_name": "NorskRegnesentral/skweak", "topics": ["weak-supervision", "nlp-machine-learning", "distant-supervision", "nlp-library", "spacy", "python", "data-science", "training-data", "natural-language-processing"], "description": "skweak: A software toolkit for weak supervision applied to NLP tasks"}
{"name": "mit-han-lab/data-efficient-gans", "full_name": "mit-han-lab/data-efficient-gans", "topics": ["gans", "pytorch", "tensorflow", "data-efficient", "generative-adversarial-network", "image-generation", "neurips-2020"], "description": "[NeurIPS 2020] Differentiable Augmentation for Data-Efficient GAN Training"}
{"name": "jina-ai/docarray", "full_name": "docarray/docarray", "topics": ["docarray", "data-structures", "multimodal", "cross-modal", "neural-search", "unstructured-data", "deep-learning", "nested-data", "qdrant", "weaviate", "sqlite", "nearest-neighbor-search", "protobuf", "graphql", "elasticsearch", "dataclass", "multi-modal", "semantic-search", "vector-search"], "description": "\ud83e\uddec The data structure for multimodal data \u00b7 Neural Search \u00b7 Vector Search \u00b7 Document Store"}
{"name": "hkchengrex/xmem", "full_name": "hkchengrex/XMem", "topics": ["computer-vision", "deep-learning", "eccv-2022", "eccv2022", "pytorch", "segmentation", "video-object-segmentation", "video-segmentation"], "description": "[ECCV 2022] XMem: Long-Term Video Object Segmentation with an Atkinson-Shiffrin Memory Model"}
{"name": "ayoolaolafenwa/pixellib", "full_name": "ayoolaolafenwa/PixelLib", "topics": ["computer-vision", "machine-learning", "artificial-intelligence", "image-segmentation", "semantic-segmentation", "instance-segmentation", "video-segmentation", "deeplab", "deeplearning", "maskr-cnn", "tensorflow", "deep-learning", "pointrend", "pytorch", "convolutional-neural-networks", "segmentation", "object-detection"], "description": "Visit PixelLib's official documentation  https://pixellib.readthedocs.io/en/latest/"}
{"name": "dengbocong/nlp-paper", "full_name": "DengBoCong/nlp-paper", "topics": ["dialogue", "speech", "nlp-machine-learning", "paper", "tensorflow2", "pytorch", "nlp", "bert"], "description": "\u81ea\u7136\u8bed\u8a00\u5904\u7406\u9886\u57df\u4e0b\u7684\u76f8\u5173\u8bba\u6587\uff08\u9644\u9605\u8bfb\u7b14\u8bb0\uff09\uff0c\u590d\u73b0\u6a21\u578b\u4ee5\u53ca\u6570\u636e\u5904\u7406\u7b49\uff08\u4ee3\u7801\u542bTensorFlow\u548cPyTorch\u4e24\u7248\u672c\uff09"}
{"name": "takuseno/d3rlpy", "full_name": "takuseno/d3rlpy", "topics": ["deep-reinforcement-learning", "deep-learning", "pytorch", "offline-rl"], "description": "An offline deep reinforcement learning library"}
{"name": "kakaobrain/kogpt", "full_name": "kakaobrain/kogpt", "topics": ["deeplearning", "gpt", "nlp", "transformers", "huggingface", "kogpt", "kakaobrain", "korean", "generative-model", "gpt3"], "description": "KakaoBrain KoGPT (Korean Generative Pre-trained Transformer)"}
{"name": "cvg/nice-slam", "full_name": "cvg/nice-slam", "topics": ["slam", "neural-fields", "neural-implicit-representations", "scalable", "implicit-functions", "localization", "deep-learning", "3d-reconstruction"], "description": "[CVPR'22] NICE-SLAM: Neural Implicit Scalable Encoding for SLAM"}
{"name": "pkhungurn/talking-head-anime-2-demo", "full_name": "pkhungurn/talking-head-anime-2-demo", "topics": ["ai", "anime", "computer-graphics", "computer-vision", "deep-learning", "machine-learning", "python", "pytorch", "vtuber"], "description": "Demo programs for the Talking Head Anime from a Single Image 2: More Expressive project."}
{"name": "baguasys/bagua", "full_name": "BaguaSys/bagua", "topics": ["distributed", "pytorch", "rust-lang", "deep-learning", "distributed-systems", "distributed-computing", "machine-learning", "bagua"], "description": "Bagua Speeds up PyTorch"}
{"name": "airctic/icevision", "full_name": "airctic/icevision", "topics": ["object-detection", "deep-learning", "pytorch", "pytorch-lightning", "python", "fastai", "ai", "computer-vision", "effecientdet", "faster-rcnn", "mask-rcnn", "annotation-parsers", "tutorials", "coco-parser", "voc-parser", "pycocotools", "coco-dataset", "voc-dataset"], "description": "An Agnostic Computer Vision Framework - Pluggable to any Training Library: Fastai, Pytorch-Lightning with more to come"}
{"name": "vhellendoorn/code-lms", "full_name": "VHellendoorn/Code-LMs", "topics": ["gpt-2", "deep-learning", "source-code"], "description": "Guide to using pre-trained large language models of source code"}
{"name": "pytorchlightning/pytorch-lightning-bolts", "full_name": "Lightning-AI/lightning-bolts", "topics": ["pytorch", "ai", "machine-learning", "image-processing", "natural-language-processing", "supervised-learning", "gan"], "description": "Toolbox of models, callbacks, and datasets for AI/ML researchers."}
{"name": "google-research/torchsde", "full_name": "google-research/torchsde", "topics": ["deep-learning", "deep-neural-networks", "pytorch", "dynamical-systems", "differential-equations", "stochastic-processes", "stochastic-differential-equations", "stochastic-volatility-models", "neural-differential-equations"], "description": "Differentiable SDE solvers with GPU support and efficient sensitivity analysis. "}
{"name": "lucidrains/performer-pytorch", "full_name": "lucidrains/performer-pytorch", "topics": ["artificial-intelligence", "deep-learning", "attention-mechanism", "attention", "transformers"], "description": "An implementation of Performer, a linear attention-based transformer, in Pytorch"}
{"name": "salesforce/lavis", "full_name": "salesforce/LAVIS", "topics": ["deep-learning", "deep-learning-library", "image-captioning", "salesforce", "vision-and-language", "vision-framework", "vision-language-pretraining", "vision-language-transformer", "visual-question-anwsering", "multimodal-datasets", "multimodal-deep-learning"], "description": "LAVIS - A One-stop Library for Language-Vision Intelligence"}
{"name": "manujosephv/pytorch_tabular", "full_name": "manujosephv/pytorch_tabular", "topics": ["tabular-data", "deep-learning", "pytorch", "pytorch-lightning", "hacktoberfest", "machine-learning"], "description": "A standard framework for modelling Deep Learning Models for tabular data"}
{"name": "enpeizhao/cvprojects", "full_name": "enpeizhao/CVprojects", "topics": ["computer-vision", "machine-learning", "deep-learning", "python"], "description": "computer vision projects |  \u8ba1\u7b97\u673a\u89c6\u89c9\u76f8\u5173\u597d\u73a9\u7684AI\u9879\u76ee"}
{"name": "obsei/obsei", "full_name": "obsei/obsei", "topics": ["artificial-intelligence", "natural-language-processing", "sentiment-analysis", "workflow", "social-network-analysis", "customer-engagement", "text-analysis", "text-analytics", "python", "nlp", "issue-tracking-system", "customer-support", "lowcode", "text-classification", "anonymization", "low-code", "business-process-automation", "workflow-automation", "process-automation", "social-listening"], "description": "Obsei is a low code AI powered automation tool. It can be used in various business flows like social listening, AI based alerting, brand image analysis, comparative study and more ."}
{"name": "median-research-group/libmtl", "full_name": "median-research-group/LibMTL", "topics": ["multitask-learning", "multi-task-learning", "pytorch", "python", "multi-domain-learning", "deep-learning", "mtl", "mmoe", "ple", "multiobjective-optimization", "multi-objective-optimization"], "description": "A PyTorch Library for Multi-Task Learning"}
{"name": "pygod-team/pygod", "full_name": "pygod-team/pygod", "topics": ["outlier-detection", "anomaly-detection", "graph-anomaly-detection", "machine-learning", "security-tools", "opensource", "deeplearning", "python", "graphmining", "pytorch", "graph-neural-networks", "fraud-detection", "toolkit"], "description": "A Python Library for Graph Outlier Detection (Anomaly Detection)"}
{"name": "nvidia-merlin/nvtabular", "full_name": "NVIDIA-Merlin/NVTabular", "topics": ["deep-learning", "feature-engineering", "feature-selection", "gpu", "machine-learning", "nvidia", "preprocessing", "recommendation-system", "recommender-system"], "description": "NVTabular is a feature engineering and preprocessing library for tabular data designed to quickly and easily manipulate terabyte scale datasets used to train deep learning based recommender systems."}
{"name": "swz30/restormer", "full_name": "swz30/Restormer", "topics": ["image-restoration", "image-deraining", "image-deblurring", "defocus-deblurring", "motion-deblurring", "transformer", "pytorch", "low-level-vision", "cvpr2022", "high-resolution", "efficient-transformers"], "description": "[CVPR 2022--Oral] Restormer: Efficient Transformer for High-Resolution Image Restoration. SOTA  for motion deblurring, image deraining, denoising (Gaussian/real data), and defocus deblurring. "}
{"name": "djdefrag/qualityscaler", "full_name": "Djdefrag/QualityScaler", "topics": ["python", "amd", "intel", "nvidia", "directx-12", "windows", "compression-artifact-reduction", "deep-learning", "gui-application", "noise-reduction", "opencv", "python3", "pytorch", "super-resolution", "pytorch-directml", "anime", "manga", "video"], "description": "QualityScaler - image/video AI upscaler app (BSRGAN)"}
{"name": "open-mmlab/mmrazor", "full_name": "open-mmlab/mmrazor", "topics": ["nas", "pruning", "knowledge-distillation", "spos", "darts", "autoslim", "detection", "segmentation", "classification", "pytorch"], "description": "OpenMMLab Model Compression Toolbox and Benchmark."}
{"name": "kair-bair/nerfacc", "full_name": "KAIR-BAIR/nerfacc", "topics": ["instant-ngp", "nerf", "pytorch", "rendering"], "description": "A General NeRF Acceleration Toolbox in PyTorch."}
{"name": "tjiiv-cprg/epro-pnp", "full_name": "tjiiv-cprg/EPro-PnP", "topics": ["pose-estimation", "6dof", "3d-object-detection", "perspective-n-point", "pytorch", "cvpr", "monocular", "levenberg-marquardt", "gauss-newton"], "description": "[CVPR 2022 Oral, Best Student Paper] EPro-PnP: Generalized End-to-End Probabilistic Perspective-n-Points for Monocular Object Pose Estimation"}
{"name": "benaandrew/voice-cloning-app", "full_name": "BenAAndrew/Voice-Cloning-App", "topics": ["python", "tts", "text-to-speech", "pytorch", "deep-learning", "voice-cloning", "tacotron2"], "description": "A Python/Pytorch app for easily synthesising human voices"}
{"name": "pyretri/pyretri", "full_name": "PyRetri/PyRetri", "topics": ["deep-learning", "image-retrieval", "pytorch", "toolbox"], "description": "Open source deep learning based unsupervised image retrieval toolbox built on PyTorch\ud83d\udd25"}
{"name": "n00mkrad/flowframes", "full_name": "n00mkrad/flowframes", "topics": ["video-interpolation", "pytorch", "ncnn", "dain", "rife", "gui"], "description": "Flowframes Windows GUI for video interpolation using DAIN (NCNN) or RIFE (CUDA/NCNN)"}
{"name": "jingyunliang/vrt", "full_name": "JingyunLiang/VRT", "topics": ["transformer", "video-restoration", "low-level-vision", "vision-transformer", "video-super-resolution", "video-deblurring", "video-denoising", "video-sr", "super-resolution", "sr", "deblurring", "denoising", "video", "restoration"], "description": "VRT: A Video Restoration Transformer (official repository)"}
{"name": "beir-cellar/beir", "full_name": "beir-cellar/beir", "topics": ["nlp", "information-retrieval", "bert", "benchmark", "sentence-transformers", "question-generation", "retrieval", "passage-retrieval", "elasticsearch", "dpr", "sbert", "retrieval-models", "dataset", "ance", "colbert", "zero-shot-retrieval", "use-qa", "deep-learning", "pytorch"], "description": "A Heterogeneous Benchmark for Information Retrieval. Easy to use, evaluate your models across 15+ diverse IR datasets."}
{"name": "pharmapsychotic/clip-interrogator", "full_name": "pharmapsychotic/clip-interrogator", "topics": ["clip", "pytorch"], "description": "Image to prompt with BLIP and CLIP"}
{"name": "sjtuytc/largescalenerfpytorch", "full_name": "sjtuytc/LargeScaleNeRFPytorch", "topics": ["nerf", "nerf-w", "pytorch-implementation", "block-nerf", "city-nerf", "custum-nerf", "mega-nerf", "view-synthesis", "weekly-nerf", "weekly", "classified", "pytorch-implementations", "pytorch", "pytorch-lightning", "chinese-translation", "deep-learning"], "description": "1. Non-official implementation of Block-NeRF and Mega-NeRF in Pytorch. 2. Train your large-scale NeRF in the wild. 3. Weekly classified NeRF literature."}
{"name": "patrick-kidger/diffrax", "full_name": "patrick-kidger/diffrax", "topics": ["differential-equations", "jax", "deep-learning", "neural-differential-equations", "machine-learning", "dynamical-systems", "neural-networks"], "description": "Numerical differential equation solvers in JAX. Autodifferentiable and GPU-capable. https://docs.kidger.site/diffrax/"}
{"name": "alibaba/federatedscope", "full_name": "alibaba/FederatedScope", "topics": ["federated-learning", "machine-learning", "pytorch"], "description": "An easy-to-use federated learning platform"}
{"name": "shi-labs/neighborhood-attention-transformer", "full_name": "SHI-Labs/Neighborhood-Attention-Transformer", "topics": ["neighborhood-attention", "pytorch"], "description": "Official NAT (Neighborhood Attention Transformer) and DiNAT (Dilated Neighborhood Attention Transformer) repository."}
{"name": "thuml/autoformer", "full_name": "thuml/Autoformer", "topics": ["deep-learning", "time-series"], "description": "About Code release for \"Autoformer: Decomposition Transformers with Auto-Correlation for Long-Term Series Forecasting\" (NeurIPS 2021), https://arxiv.org/abs/2106.13008"}
{"name": "grammarly/gector", "full_name": "grammarly/gector", "topics": ["grammatical-error-correction", "natural-language-processing", "sequence-labeling", "transformers", "roberta", "bert", "xlnet", "nlp", "text-simplification"], "description": "Official implementation of the papers \"GECToR \u2013 Grammatical Error Correction: Tag, Not Rewrite\" (BEA-20) and \"Text Simplification by Tagging\" (BEA-21)"}
{"name": "natspeech/natspeech", "full_name": "NATSpeech/NATSpeech", "topics": ["speech-synthesis", "pytorch", "tts", "speech", "huggingface", "portaspeech", "diffsinger", "diffspeech"], "description": "A Non-Autoregressive Text-to-Speech (NAR-TTS) framework, including official PyTorch implementation of PortaSpeech (NeurIPS 2021) and DiffSpeech (AAAI 2022)"}
{"name": "yinboc/liif", "full_name": "yinboc/liif", "topics": ["machine-learning", "super-resolution", "pytorch", "implicit-neural-representation"], "description": "Learning Continuous Image Representation with Local Implicit Image Function, in CVPR 2021 (Oral)"}
{"name": "facebookresearch/timesformer", "full_name": "facebookresearch/TimeSformer", "topics": [], "description": "The official pytorch implementation of our paper \"Is Space-Time Attention All You Need for Video Understanding?\""}
{"name": "mit-han-lab/anycost-gan", "full_name": "mit-han-lab/anycost-gan", "topics": ["computer-vision", "deep-learning", "computer-graphics", "generative-adversarial-network", "gan", "image-generation", "image-manipulation", "image-editing", "gans", "pytorch", "stylegan2"], "description": "[CVPR 2021] Anycost GANs for Interactive Image Synthesis and Editing"}
{"name": "open-mmlab/mmflow", "full_name": "open-mmlab/mmflow", "topics": ["optical-flow", "openmmlab", "pytorch"], "description": "OpenMMLab optical flow toolbox and benchmark"}
{"name": "swz30/mprnet", "full_name": "swz30/MPRNet", "topics": ["image-deblurring", "image-denoising", "image-deraining", "low-level-vision", "computer-vision", "image-restoration", "multistage-network", "progressive-restoration", "pytorch", "cvpr2021", "cvpr21", "cvpr-2021"], "description": "[CVPR 2021] Multi-Stage Progressive Image Restoration. SOTA results for Image deblurring, deraining, and denoising."}
{"name": "dvlab-research/largescalenerfpytorch", "full_name": "sjtuytc/LargeScaleNeRFPytorch", "topics": ["nerf", "nerf-w", "pytorch-implementation", "block-nerf", "city-nerf", "custum-nerf", "mega-nerf", "view-synthesis", "weekly-nerf", "weekly", "classified", "pytorch-implementations", "pytorch", "pytorch-lightning", "chinese-translation", "deep-learning"], "description": "1. Non-official implementation of Block-NeRF and Mega-NeRF in Pytorch. 2. Train your large-scale NeRF in the wild. 3. Weekly classified NeRF literature."}
{"name": "ikergarcia1996/self-driving-car-in-video-games", "full_name": "ikergarcia1996/Self-Driving-Car-in-Video-Games", "topics": ["python", "pytorch", "self-driving-car", "videogame", "videogame-bot", "neural-network", "deep-learning", "supervised-learning", "machine-learning", "autonomous-driving", "deep-neural-network", "video-games", "pretrained-models"], "description": "A deep neural network that learns to drive in video games"}
{"name": "kaiyangzhou/dassl.pytorch", "full_name": "KaiyangZhou/Dassl.pytorch", "topics": ["pytorch", "benchmark-datasets", "semi-supervised-learning", "domain-adaptation", "domain-generalization", "deep-learning", "machine-learning", "computer-vision", "artificial-intelligence", "deep-neural-networks"], "description": "A PyTorch toolbox for domain generalization, domain adaptation and semi-supervised learning."}
{"name": "mukosame/zooming-slow-mo-cvpr-2020", "full_name": "Mukosame/Zooming-Slow-Mo-CVPR-2020", "topics": ["pytorch", "video", "super-resolution", "video-frame-interpolation", "video-super-resolution", "spatio-temporal", "cvpr2020", "cvpr"], "description": "Fast and Accurate One-Stage Space-Time Video Super-Resolution (accepted in CVPR 2020)"}
{"name": "csslab/maia-chess", "full_name": "CSSLab/maia-chess", "topics": ["chess", "chess-engine", "deep-learning", "machine-learning", "computational-social-science"], "description": "Maia is a human-like neural network chess engine trained on millions of human games."}
{"name": "interdigitalinc/compressai", "full_name": "InterDigitalInc/CompressAI", "topics": ["compression", "deep-learning", "python", "pytorch", "machine-learning", "deep-neural-networks", "neural-network"], "description": "A PyTorch library and evaluation platform for end-to-end compression research"}
{"name": "thudm/cogview2", "full_name": "THUDM/CogView2", "topics": ["transformer", "pytorch", "pretrained-models", "text-to-image"], "description": "official code repo for paper \"CogView2: Faster and Better Text-to-Image Generation via Hierarchical Transformers\""}
{"name": "nnaisense/evotorch", "full_name": "nnaisense/evotorch", "topics": ["artificial-intelligence", "evolutionary-computation", "neural-networks", "optimization-algorithms", "distributed", "gpu", "python", "pytorch", "optimization", "reinforcement-learning", "evolutionary-algorithms"], "description": "Advanced evolutionary computation library built directly on top of PyTorch, created at NNAISENSE."}
{"name": "youngwanlee/centermask2", "full_name": "youngwanLEE/centermask2", "topics": ["centermask", "detectron2", "object-detection", "instance-segmentation", "anchor-free", "vovnet", "vovnetv2", "real-time", "pytorch", "cvpr2020"], "description": "CenterMask : Real-time Anchor-Free Instance Segmentation, in CVPR 2020"}
{"name": "huggingface/optimum", "full_name": "huggingface/optimum", "topics": ["onnx", "pytorch", "inference", "training", "intel", "graphcore", "onnxruntime", "transformers", "quantization", "habana", "optimization"], "description": "\ud83c\udfce\ufe0f Accelerate training and inference of \ud83e\udd17 Transformers with easy to use hardware optimization tools"}
{"name": "mcg-nju/videomae", "full_name": "MCG-NJU/VideoMAE", "topics": ["self-supervised-learning", "action-recognition", "video-understanding", "masked-autoencoder", "transformer", "vision-transformer", "video-transformer", "mae", "pytorch", "video-representation-learning", "video-analysis", "neurips-2022"], "description": "[NeurIPS 2022 Spotlight] VideoMAE: Masked Autoencoders are Data-Efficient Learners for Self-Supervised Video Pre-Training"}
{"name": "hazyresearch/state-spaces", "full_name": "HazyResearch/state-spaces", "topics": ["state-space-models", "sequence-models", "pytorch", "time-series"], "description": "Sequence Modeling with Structured State Spaces"}
{"name": "lucidrains/vector-quantize-pytorch", "full_name": "lucidrains/vector-quantize-pytorch", "topics": ["artificial-intelligence", "deep-learning", "pytorch", "vector-quantization"], "description": "Vector Quantization, in Pytorch"}
{"name": "bayesiains/nflows", "full_name": "bayesiains/nflows", "topics": ["density-estimation", "normalizing-flows", "generative-model", "pytorch"], "description": "Normalizing flows in PyTorch"}
{"name": "iceychris/libreasr", "full_name": "iceychris/LibreASR", "topics": ["asr", "speech-recognition", "pytorch", "fastai", "rnn-transducer", "deep-learning", "esp32-lyrat", "python"], "description": ":speech_balloon: An On-Premises, Streaming Speech Recognition System "}
{"name": "wmcnally/kapao", "full_name": "wmcnally/kapao", "topics": ["pytorch", "deep-learning", "human-pose-estimation", "yolo", "pose-estimation"], "description": "KAPAO is an efficient single-stage human pose estimation model that detects keypoints and poses as objects and fuses the detections to predict human poses."}
{"name": "openppl-public/ppq", "full_name": "openppl-public/ppq", "topics": ["neural-network", "deep-learning", "quantization", "pytorch", "caffe", "onnx", "cuda", "open-source"], "description": "PPL Quantization Tool (PPQ) is a powerful offline neural network quantization tool."}
{"name": "nvidia-merlin/transformers4rec", "full_name": "NVIDIA-Merlin/Transformers4Rec", "topics": ["transformer", "pytorch", "tabular-data", "huggingface", "bert", "gtp", "language-model", "xlnet", "nlp", "seq2seq", "recsys", "recommender-system", "session-based-recommendation"], "description": "Transformers4Rec is a flexible and efficient library for sequential and session-based recommendation and works with PyTorch."}
{"name": "tencent/patrickstar", "full_name": "Tencent/PatrickStar", "topics": ["nlp", "pretrained-models", "gpt", "bert", "pytorch"], "description": "PatrickStar enables Larger, Faster, Greener Pretrained Models for NLP and democratizes AI for everyone."}
{"name": "piesposito/blitz-bayesian-deep-learning", "full_name": "piEsposito/blitz-bayesian-deep-learning", "topics": ["pytorch", "pytorch-implementation", "pytorch-tutorial", "bayesian-layers", "bayesian-deep-learning", "bayesian-neural-networks"], "description": "A simple and extensible library to create Bayesian Neural Network layers on PyTorch."}
{"name": "megvii-research/nafnet", "full_name": "megvii-research/NAFNet", "topics": ["deblur", "denoise", "stereo-super-resolution", "eccv2022", "image-deblurring", "image-denoising", "image-restoration", "low-level-vision", "pytorch"], "description": "The state-of-the-art image restoration model without nonlinear activation functions."}
{"name": "allenai/rl4lms", "full_name": "allenai/RL4LMs", "topics": ["language-modeling", "nlp", "reinforcement-learning", "dialogue-generation", "machine-translation", "natural-language-processing", "summarization", "table-to-text", "text-generation"], "description": "A modular RL library to fine-tune language models to human preferences"}
{"name": "lucidrains/mlp-mixer-pytorch", "full_name": "lucidrains/mlp-mixer-pytorch", "topics": ["deep-learning", "vision"], "description": "An All-MLP solution for Vision, from Google AI"}
{"name": "yashbhalgat/hashnerf-pytorch", "full_name": "yashbhalgat/HashNeRF-pytorch", "topics": ["nerf", "real-time-rendering", "computer-graphics", "computer-vision", "neural-network", "signed-distance-functions", "artificial-intelligence", "machine-learning", "3d-reconstruction", "efficient-training", "hashing"], "description": "Pure PyTorch Implementation of NVIDIA paper on Instant Training of Neural Graphics primitives: https://nvlabs.github.io/instant-ngp/"}
{"name": "zhiqwang/yolov5-rt-stack", "full_name": "zhiqwang/yolov5-rt-stack", "topics": ["libtorch", "yolov5", "inference", "torchscript", "onnx", "onnxruntime", "tvm", "pytorch", "detection", "jit", "visualization", "yolo", "lightning", "yolort", "deployment", "ncnn", "tensorrt", "graghsurgeon", "trt", "nms"], "description": "yolort is a runtime stack for yolov5 on specialized accelerators such as tensorrt, libtorch, onnxruntime, tvm and ncnn."}
{"name": "tinkoff-ai/etna", "full_name": "tinkoff-ai/etna", "topics": ["python", "machine-learning", "time-series", "forecasting", "timeseries", "deep-learning"], "description": "ETNA \u2013 Time-Series Library"}
{"name": "hkchengrex/cascadepsp", "full_name": "hkchengrex/CascadePSP", "topics": ["segmentation", "deep-learning", "pytorch", "cvpr2020", "computer-vision", "segmentation-refinement", "refinement-network", "high-resolution"], "description": "[CVPR 2020] CascadePSP: Toward Class-Agnostic and Very High-Resolution Segmentation via Global and Local Refinement"}
{"name": "nlp-uoregon/trankit", "full_name": "nlp-uoregon/trankit", "topics": ["nlp", "natural-language-processing", "pytorch", "language-model", "xlm-roberta", "machine-learning", "deeplearning", "artificial-intelligence", "universal-dependencies", "multilingual", "adapters", "sentence-segmentation", "tokenization", "part-of-speech-tagging", "morphological-tagging", "dependency-parsing", "lemmatization"], "description": "Trankit is a Light-Weight Transformer-based Python Toolkit for Multilingual Natural Language Processing"}
{"name": "snap-research/efficientformer", "full_name": "snap-research/EfficientFormer", "topics": ["deep-learning", "detection", "efficient-inference", "efficient-neural-networks", "pytorch", "semantic-segmentation", "transformer", "imagenet", "transformers"], "description": "EfficientFormerV2 & EfficientFormer(NeurIPs 2022)"}
{"name": "teddykoker/torchsort", "full_name": "teddykoker/torchsort", "topics": ["pytorch", "sort", "ranking", "cuda-kernel"], "description": "Fast, differentiable sorting and ranking in PyTorch"}
{"name": "gaparmar/clean-fid", "full_name": "GaParmar/clean-fid", "topics": ["computer-vision", "deep-learning", "computer-graphics", "pytorch", "generative-adversarial-network", "gan", "image-manipulation", "image-generation", "fid-score", "fid-calculation", "fid", "frechet-inception-distance", "frechet-distance"], "description": "PyTorch - FID calculation with proper image resizing and quantization steps [CVPR 2022]"}
{"name": "szq0214/meal-v2", "full_name": "szq0214/MEAL-V2", "topics": ["distillation", "imagenet", "compression-algorithm", "mobilenetv3", "efficientnet", "pre-trained", "resnet50", "imagenet-dataset", "meal", "model-architecture", "pytorch", "distillation-model"], "description": "MEAL V2: Boosting Vanilla ResNet-50 to 80%+ Top-1 Accuracy on ImageNet without Tricks"}
{"name": "intel/neural-compressor", "full_name": "intel/neural-compressor", "topics": ["low-precision", "pruning", "sparsity", "auto-tuning", "knowledge-distillation", "quantization", "quantization-aware-training", "post-training-quantization", "deep-learning"], "description": "Intel\u00ae Neural Compressor (formerly known as Intel\u00ae Low Precision Optimization Tool), targeting to provide unified APIs for network compression technologies, such as low precision quantization, sparsity, pruning, knowledge distillation, across different deep learning frameworks to pursue optimal inference performance."}
{"name": "abhi1thakur/tez", "full_name": "abhishekkrthakur/tez", "topics": ["tez", "pytorch", "deep-learning", "deep-neural-networks", "neural-networks"], "description": "Tez is a super-simple and lightweight Trainer for PyTorch. It also comes with many utils that you can use to tackle over 90% of deep learning projects in PyTorch."}
{"name": "astrazeneca/chemicalx", "full_name": "AstraZeneca/chemicalx", "topics": ["deep-learning", "pytorch", "deep-chemistry", "graph-neural-network", "drug", "drug-pair", "polypharmacy", "drug-discovery", "pharma", "drug-interaction", "chemistry", "biology", "machine-learning", "torch", "geometric-deep-learning", "geometry", "smiles", "smiles-strings", "torchdrug"], "description": "A PyTorch and TorchDrug based deep learning library for drug pair scoring. (KDD 2022)"}
{"name": "rl-vig/libfewshot", "full_name": "RL-VIG/LibFewShot", "topics": ["few-shot-learning", "meta-learning", "fine-tuning", "image-classification", "pytorch"], "description": "LibFewShot: A Comprehensive Library for Few-shot Learning."}
{"name": "cdpierse/transformers-interpret", "full_name": "cdpierse/transformers-interpret", "topics": ["nlp", "machine-learning", "natural-language-processing", "explainable-ai", "transformers", "model-explainability", "transformers-model", "captum", "deep-learning", "neural-network", "interpretability", "computer-vision"], "description": "Model explainability that works seamlessly with \ud83e\udd17 transformers. Explain your transformers model in just 2 lines of code. "}
{"name": "bubbliiiing/yolov4-tiny-pytorch", "full_name": "bubbliiiing/yolov4-tiny-pytorch", "topics": [], "description": " \u8fd9\u662f\u4e00\u4e2aYoloV4-tiny-pytorch\u7684\u6e90\u7801\uff0c\u53ef\u4ee5\u7528\u4e8e\u8bad\u7ec3\u81ea\u5df1\u7684\u6a21\u578b\u3002"}
{"name": "asteroid-team/torch-audiomentations", "full_name": "asteroid-team/torch-audiomentations", "topics": ["data-augmentation", "pytorch", "audio-data-augmentation", "audio", "waveform", "dsp", "audio-effects", "machine-learning", "deep-learning", "music", "sound", "sound-processing", "augmentation", "python", "differentiable-data-augmentation"], "description": "Fast audio data augmentation in PyTorch. Inspired by audiomentations. Useful for deep learning."}
{"name": "twentybn/sense", "full_name": "quic/sense", "topics": ["pytorch", "neural-networks", "deep-learning", "computer-vision", "activity-recognition", "gesture-recognition", "fitness-app", "calorie-estimation", "video"], "description": "Enhance your application with the ability to see and interact with humans using any RGB camera."}
{"name": "neuralmind-ai/portuguese-bert", "full_name": "neuralmind-ai/portuguese-bert", "topics": ["nlp-resources", "bert-model", "portuguese", "deep-learning", "bert", "natural-language-processing"], "description": "Portuguese pre-trained BERT models"}
{"name": "kekmodel/fixmatch-pytorch", "full_name": "kekmodel/FixMatch-pytorch", "topics": ["semi-supervised-learning", "deeplearning", "pytorch", "fixmatch", "randaugment"], "description": "Unofficial PyTorch implementation of \"FixMatch: Simplifying Semi-Supervised Learning with Consistency and Confidence\""}
{"name": "alibaba-miil/asl", "full_name": "Alibaba-MIIL/ASL", "topics": ["multi-label-classification", "loss", "detection", "classification"], "description": "Official Pytorch Implementation of: \"Asymmetric Loss For Multi-Label Classification\"(ICCV, 2021) paper"}
{"name": "alibaba-miil/imagenet21k", "full_name": "Alibaba-MIIL/ImageNet21K", "topics": ["imagenet21k", "pretraining", "downstream", "semantic-softmax", "single-label", "multi-label-classification", "vision-transformer", "mixer"], "description": "Official Pytorch Implementation of: \"ImageNet-21K Pretraining for the Masses\"(NeurIPS, 2021) paper"}
{"name": "rstrudel/segmenter", "full_name": "rstrudel/segmenter", "topics": ["transformer", "segmentation"], "description": "[ICCV2021] Official PyTorch implementation of Segmenter: Transformer for Semantic Segmentation"}
{"name": "wtjiang98/psgan", "full_name": "wtjiang98/PSGAN", "topics": ["psgan", "pytorch", "makeup-transfer", "makeup", "generative-adversarial-network", "gan"], "description": "PyTorch code for \"PSGAN: Pose and Expression Robust Spatial-Aware GAN for Customizable Makeup Transfer\" (CVPR 2020 Oral)"}
{"name": "bubbliiiing/yolox-pytorch", "full_name": "bubbliiiing/yolox-pytorch", "topics": [], "description": "\u8fd9\u662f\u4e00\u4e2ayolox-pytorch\u7684\u6e90\u7801\uff0c\u53ef\u4ee5\u7528\u4e8e\u8bad\u7ec3\u81ea\u5df1\u7684\u6a21\u578b\u3002"}
{"name": "xxxnell/how-do-vits-work", "full_name": "xxxnell/how-do-vits-work", "topics": ["vision-transformer", "transformer", "self-attention", "loss-landscape", "pytorch"], "description": "(ICLR 2022 Spotlight) Official PyTorch implementation of \"How Do Vision Transformers Work?\""}
{"name": "ofa-sys/chinese-clip", "full_name": "OFA-Sys/Chinese-CLIP", "topics": ["chinese", "computer-vision", "multi-modal-learning", "nlp", "pytorch", "vision-and-language-pre-training", "image-text-retrieval", "clip", "pretrained-models", "vision-language", "deep-learning", "multi-modal", "contrastive-loss", "transformers"], "description": "Chinese version of CLIP which achieves Chinese cross-modal retrieval and representation generation."}
{"name": "fafa-dl/awesome-backbones", "full_name": "Fafa-DL/Awesome-Backbones", "topics": ["pytorch", "image-classification", "transformer", "cnn", "pytorch-classification", "deep-learning", "resnet", "swin-transformer"], "description": "Integrate deep learning models for image classification | Backbone learning/comparison/magic modification project"}
{"name": "helblazer811/manimml", "full_name": "helblazer811/ManimML", "topics": ["machine-learning", "neural-network", "visualization", "manim", "3blue1brown"], "description": "ManimML is a project focused on providing animations and visualizations of common machine learning concepts with the Manim Community Library."}
{"name": "lightning-ai/lightning-transformers", "full_name": "Lightning-AI/lightning-transformers", "topics": ["pytorch", "pytorch-lightning", "transformers", "hydra"], "description": "Flexible components pairing \ud83e\udd17 Transformers with :zap: Pytorch Lightning"}
{"name": "jankrepl/deepdow", "full_name": "jankrepl/deepdow", "topics": ["deep-learning", "portfolio-optimization", "finance", "machine-learning", "pytorch", "timeseries", "markowitz", "convex-optimization", "stock-price-prediction", "wealth-management", "trading", "allocation"], "description": "Portfolio optimization with deep learning."}
{"name": "lucidrains/flamingo-pytorch", "full_name": "lucidrains/flamingo-pytorch", "topics": ["artificial-intelligence", "attention-mechanism", "deep-learning", "transformers", "visual-question-answering"], "description": "Implementation of \ud83e\udda9 Flamingo, state-of-the-art few-shot visual question answering attention net out of Deepmind, in Pytorch"}
{"name": "mit-han-lab/torchsparse", "full_name": "mit-han-lab/torchsparse", "topics": ["pytorch", "point-cloud", "acceleration"], "description": "[MLSys'22] TorchSparse: Efficient Point Cloud Inference Engine"}
{"name": "sooftware/conformer", "full_name": "sooftware/conformer", "topics": ["conformer", "transformer", "cnn", "transformer-xl", "asr", "speech-recognition", "pytorch", "conv", "convolution", "augmented", "speech", "recognition"], "description": "PyTorch implementation of \"Conformer: Convolution-augmented Transformer for Speech Recognition\" (INTERSPEECH 2020)"}
{"name": "kwotsin/mimicry", "full_name": "kwotsin/mimicry", "topics": ["generative-adversarial-networks", "gans", "reproducibility", "pytorch", "generative-models", "machine-learning", "gan", "sngan", "sngan-projection", "wgan-gp", "ssgan", "dcgan", "infomax-gan", "cgan", "cvpr", "python", "cvpr2020", "cvpr20"], "description": "[CVPR 2020 Workshop] A PyTorch GAN library that reproduces research results for popular GANs."}
{"name": "huggingface/huggingface_hub", "full_name": "huggingface/huggingface_hub", "topics": ["model-hub", "machine-learning", "models", "natural-language-processing", "deep-learning", "pytorch", "pretrained-models", "hacktoberfest"], "description": "All the open source things related to the Hugging Face Hub."}
{"name": "visual-attention-network/segnext", "full_name": "Visual-Attention-Network/SegNeXt", "topics": [], "description": "Official Pytorch implementations for \"SegNeXt: Rethinking Convolutional Attention Design for Semantic Segmentation\" (NeurIPS 2022)"}
{"name": "lucidrains/coca-pytorch", "full_name": "lucidrains/CoCa-pytorch", "topics": ["artificial-intelligence", "attention-mechanism", "contrastive-learning", "deep-learning", "multimodal", "transformers", "image-to-text"], "description": "Implementation of CoCa, Contrastive Captioners are Image-Text Foundation Models, in Pytorch"}
{"name": "the-ai-summer/self-attention-cv", "full_name": "The-AI-Summer/self-attention-cv", "topics": ["deep-learning", "transformer", "transformers", "self-attention", "attention-mechanism", "attention", "machine-learning", "machine-learning-algorithms", "artificial-intelligence"], "description": "Implementation of various self-attention mechanisms focused on computer vision. Ongoing repository. "}
{"name": "jayleicn/clipbert", "full_name": "jayleicn/ClipBERT", "topics": ["pytorch", "video-retrieval", "video-question-answering", "vqa", "vision-and-language", "cvpr2021"], "description": "[CVPR 2021 Best Student Paper Honorable Mention, Oral] Official PyTorch code for ClipBERT, an efficient framework for end-to-end learning on image-text and video-text tasks. "}
{"name": "arpitbansal297/cold-diffusion-models", "full_name": "arpitbansal297/Cold-Diffusion-Models", "topics": [], "description": "Official implementation of Cold-Diffusion for different transformations in pytorch."}
{"name": "jeff-sjtu/hybrik", "full_name": "Jeff-sjtu/HybrIK", "topics": ["3d-pose-estimation", "smpl", "inverse-kinematics", "pose-estimation", "pytorch", "cvpr", "cvpr21"], "description": "Official code of \"HybrIK: A Hybrid Analytical-Neural Inverse Kinematics Solution for 3D Human Pose and Shape Estimation\", CVPR 2021"}
{"name": "sail-sg/adan", "full_name": "sail-sg/Adan", "topics": ["adan", "bert-model", "convnext", "deep-learning", "fairseq", "mae", "optimizer", "resnet", "timm", "vit", "transformer-xl", "artificial-intelligence", "diffusion", "dreamfusion", "gpt2", "pytorch", "cuda-programming"], "description": "Adan: Adaptive Nesterov Momentum Algorithm for Faster Optimizing Deep Models"}
{"name": "lab-ml/nn", "full_name": "labmlai/annotated_deep_learning_paper_implementations", "topics": ["deep-learning", "deep-learning-tutorial", "pytorch", "gan", "transformers", "reinforcement-learning", "optimizers", "neural-networks", "transformer", "machine-learning", "attention"], "description": "\ud83e\uddd1\u200d\ud83c\udfeb 59 Implementations/tutorials of deep learning papers with side-by-side notes \ud83d\udcdd; including transformers (original, xl, switch, feedback, vit, ...), optimizers (adam, adabelief, ...), gans(cyclegan, stylegan2, ...), \ud83c\udfae reinforcement learning (ppo, dqn), capsnet, distillation, ... \ud83e\udde0"}
{"name": "shank2358/gghl", "full_name": "Shank2358/GGHL", "topics": ["pytorch", "oriented-object-detection", "object-detection", "deep-learning", "anchor-free", "nvidia-jetson-xavier", "nvidia-jetson-tx2", "fcos-r", "remote-sensing", "centernet"], "description": "This is the implementation of GGHL (A General Gaussian Heatmap Label Assignment for Arbitrary-Oriented Object Detection)"}
{"name": "unitaryai/detoxify", "full_name": "unitaryai/detoxify", "topics": ["bert", "bert-model", "huggingface-transformers", "huggingface", "nlp", "toxic-comment-classification", "toxicity", "toxic-comments", "sentence-classification", "kaggle-competition", "pytorch-lightning", "hatespeech", "hate-speech-detection", "toxicity-classification", "hate-speech"], "description": "Trained models & code to predict toxic comments on all 3 Jigsaw Toxic Comment Challenges. Built using \u26a1 Pytorch Lightning and \ud83e\udd17 Transformers. For access to our API, please email us at contact@unitary.ai."}
{"name": "montaellis/pytorch-medical-segmentation", "full_name": "MontaEllis/Pytorch-Medical-Segmentation", "topics": ["pytorch", "torchio", "segmentation", "medical-image-processing"], "description": "This repository is an unoffical PyTorch implementation of Medical segmentation in 2D and 3D."}
{"name": "tencentmusic/cube-studio", "full_name": "tencentmusic/cube-studio", "topics": ["kubernetes", "inference", "mlops", "workflow", "ai", "pytorch", "spark", "argo", "kubeflow", "automl"], "description": "\u4e91\u539f\u751f\u4e00\u7ad9\u5f0f\u673a\u5668\u5b66\u4e60\u5e73\u53f0\uff0c\u591a\u79df\u6237\uff0c\u6570\u636e\u8d44\u4ea7\uff0cnotebook\u5728\u7ebf\u5f00\u53d1\uff0c\u62d6\u62c9\u62fd\u4efb\u52a1\u6d41\u7f16\u6392\uff0c\u591a\u673a\u591a\u5361\u5206\u5e03\u5f0f\u8bad\u7ec3\uff0c\u8d85\u53c2\u641c\u7d22\uff0c\u63a8\u7406\u670d\u52a1\uff0c\u591a\u96c6\u7fa4\u8c03\u5ea6\uff0c\u591a\u9879\u76ee\u7ec4\u8d44\u6e90\u7ec4\uff0c\u8fb9\u7f18\u8ba1\u7b97\uff0c\u5927\u6a21\u578b\u5b9e\u65f6\u8bad\u7ec3, ai\u5e94\u7528\u5546\u5e97"}
{"name": "idea-ccnl/fengshenbang-lm", "full_name": "IDEA-CCNL/Fengshenbang-LM", "topics": ["chinese-nlp", "pretrained-models", "pytorch", "distributed-training", "transformers", "aigc", "multimodal"], "description": "Fengshenbang-LM(\u5c01\u795e\u699c\u5927\u6a21\u578b)\u662fIDEA\u7814\u7a76\u9662\u8ba4\u77e5\u8ba1\u7b97\u4e0e\u81ea\u7136\u8bed\u8a00\u7814\u7a76\u4e2d\u5fc3\u4e3b\u5bfc\u7684\u5927\u6a21\u578b\u5f00\u6e90\u4f53\u7cfb\uff0c\u6210\u4e3a\u4e2d\u6587AIGC\u548c\u8ba4\u77e5\u667a\u80fd\u7684\u57fa\u7840\u8bbe\u65bd\u3002"}
{"name": "awslabs/dgl-lifesci", "full_name": "awslabs/dgl-lifesci", "topics": ["deep-learning", "graph-neural-networks", "dgl", "cheminformatics", "bioinformatics", "geometric-deep-learning", "drug-discovery", "molecule"], "description": "Python package for graph neural networks in chemistry and biology"}
{"name": "thudm/p-tuning", "full_name": "THUDM/P-tuning", "topics": ["natural-language-processing", "pre-trained-language-models", "prompt-tuning", "p-tuning", "parameter-efficient-learning", "few-shot-learning"], "description": "A novel method to tune language models. Codes and datasets for paper ``GPT understands, too''."}
{"name": "nnsvs/nnsvs", "full_name": "nnsvs/nnsvs", "topics": ["singing-voice-synthesis", "dnn", "pytorch", "kiritan", "singing-voice", "python", "deep-learning", "singing-synthesis"], "description": "Neural network-based singing voice synthesis library for research"}
{"name": "liucongg/gpt2-newstitle", "full_name": "liucongg/GPT2-NewsTitle", "topics": ["gpt2", "torch", "text-generation", "chinese", "transformer", "news-summarization", "nlp"], "description": "Chinese NewsTitle Generation Project by GPT2.\u5e26\u6709\u8d85\u7ea7\u8be6\u7ec6\u6ce8\u91ca\u7684\u4e2d\u6587GPT2\u65b0\u95fb\u6807\u9898\u751f\u6210\u9879\u76ee\u3002"}
{"name": "lucidrains/bottleneck-transformer-pytorch", "full_name": "lucidrains/bottleneck-transformer-pytorch", "topics": ["artificial-intelligence", "deep-learning", "transformers", "attention-mechanism", "image-classification", "vision"], "description": "Implementation of Bottleneck Transformer in Pytorch"}
{"name": "toshas/torch-fidelity", "full_name": "toshas/torch-fidelity", "topics": ["pytorch", "metrics", "gan", "generative-model", "evaluation", "inception-score", "frechet-inception-distance", "kernel-inception-distance", "perceptual-path-length", "precision", "reproducibility", "reproducible-research"], "description": "High-fidelity performance metrics for generative models in PyTorch"}
{"name": "njustkmg/omml", "full_name": "njustkmg/OMML", "topics": ["multimodal", "multimodal-learning", "python", "paddlepaddle", "pytorch", "crossmodal-retrieval", "imagecaptioning", "classification"], "description": "Multi-Modal learning toolkit based on PaddlePaddle and PyTorch, supporting multiple applications such as multi-modal classification, cross-modal retrieval and image caption."}
{"name": "grok-ai/nn-template", "full_name": "grok-ai/nn-template", "topics": ["pytorch", "template", "pytorch-lightning", "wandb", "dvc", "hydra", "research", "deep-learning", "best-practices", "reproducibility", "project-structure", "weights-and-biases", "streamlit", "mkdocs", "github-actions", "best-practises", "pre-commit", "cookiecutter"], "description": "Generic template to bootstrap your PyTorch project."}
{"name": "monologg/koelectra", "full_name": "monologg/KoELECTRA", "topics": ["electra", "korean-nlp", "pytorch", "transformers", "tensorflow2", "tensorflow", "nlp", "language-model"], "description": "Pretrained ELECTRA Model for Korean"}
{"name": "openvinotoolkit/nncf", "full_name": "openvinotoolkit/nncf", "topics": ["quantization", "pruning", "sparsity", "quantization-aware-training", "mixed-precision-training", "compression", "semantic-segmentation", "object-detection", "classification", "nlp", "bert", "mmdetection", "transformers", "hawq", "pytorch", "tensorflow", "onnx", "openvino", "deep-learning"], "description": "Neural Network Compression Framework for enhanced OpenVINO\u2122 inference"}
{"name": "thudm/p-tuning-v2", "full_name": "THUDM/P-tuning-v2", "topics": ["natural-language-processing", "prompt-tuning", "pretrained-language-model", "p-tuning", "parameter-efficient-learning"], "description": "An optimized deep prompt tuning strategy comparable to fine-tuning across scales and tasks"}
{"name": "lucidrains/x-clip", "full_name": "lucidrains/x-clip", "topics": ["artificial-intelligence", "deep-learning", "contrastive-learning", "zero-shot-learning", "multi-modal-learning"], "description": "A concise but complete implementation of CLIP with various experimental improvements from recent papers"}
{"name": "bupt-gamma/openhgnn", "full_name": "BUPT-GAMMA/OpenHGNN", "topics": ["heterogeneous", "dgl", "graph-neural-networks", "pytorch"], "description": "This is an open-source toolkit for Heterogeneous Graph Neural Network(OpenHGNN) based on DGL."}
{"name": "peterwang512/gansketching", "full_name": "PeterWang512/GANSketching", "topics": ["computer-vision", "computer-graphics", "deep-learning", "gans", "hci"], "description": "Sketch Your Own GAN: Customizing a GAN model with hand-drawn sketches."}
{"name": "salesforce/codet5", "full_name": "salesforce/CodeT5", "topics": ["language-model", "code-intelligence", "programming-language", "representation-learning", "nlp"], "description": "Code for CodeT5: a new code-aware pre-trained encoder-decoder model."}
{"name": "yuval-alaluf/stylegan3-editing", "full_name": "yuval-alaluf/stylegan3-editing", "topics": ["generative-adversarial-network", "stylegan", "stylegan3", "stylegan-encoder", "image-editing"], "description": "Official Implementation of \"Third Time's the Charm? Image and Video Editing with StyleGAN3\" (AIM ECCVW 2022) https://arxiv.org/abs/2201.13433 "}
{"name": "thunlp/openattack", "full_name": "thunlp/OpenAttack", "topics": ["adversarial-attacks", "nlp", "adversarial-example", "natural-language-processing", "pytorch"], "description": "An Open-Source Package for Textual Adversarial Attack."}
{"name": "datawhalechina/dive-into-cv-pytorch", "full_name": "datawhalechina/dive-into-cv-pytorch", "topics": [], "description": "\u52a8\u624b\u5b66CV-Pytorch\u7248"}
{"name": "relevanceai/vectorhub", "full_name": "RelevanceAI/vectorhub", "topics": ["python", "vector", "embeddings", "encodings", "vector-similarity", "transformers", "tfhub", "machine-learning", "deeplearning", "artificial-intelligence", "neural-network", "deep-learning", "tensorflow", "pytorch", "word2vec", "image2vec", "audio-processing", "video-processing"], "description": "Vector Hub - Library for easy discovery, and consumption of State-of-the-art models to turn data into vectors. (text2vec, image2vec, video2vec, graph2vec, bert, inception, etc)"}
{"name": "zzachw/pyhealth", "full_name": "sunlabuiuc/PyHealth", "topics": ["healthcare", "data-mining", "deep-learning", "preprocessing", "clinical-data", "clinical-research", "electronic-medical-record", "medical-code", "electronic-health-record"], "description": "A Python Library for Healthcare Predictive Tasks"}
{"name": "aws/deep-learning-containers", "full_name": "aws/deep-learning-containers", "topics": ["aws", "sagemaker", "docker", "tensorflow", "tensorflow2", "mxnet", "pytorch"], "description": "AWS Deep Learning Containers (DLCs) are a set of Docker images for training and serving models in TensorFlow, TensorFlow 2, PyTorch, and MXNet."}
{"name": "megvii-basedetection/cvpods", "full_name": "Megvii-BaseDetection/cvpods", "topics": ["pytorch", "detection", "3d", "classification", "keypoints", "self-supervised-learning", "segmentation", "research", "cvpods", "computer-vision"], "description": "All-in-one Toolbox for Computer Vision Research."}
{"name": "opendilab/di-drive", "full_name": "opendilab/DI-drive", "topics": ["reinforcement-learning", "imitation-learning", "autodrive", "carla", "pytorch", "autonomous-driving", "metadrive"], "description": "Decision Intelligence Platform for Autonomous Driving simulation."}
{"name": "acbull/pyhgt", "full_name": "UCLA-DM/pyHGT", "topics": ["graph-neural-networks", "heterogeneous-network", "transformer", "network-embedding", "graph-representation-learning"], "description": "Code for \"Heterogeneous Graph Transformer\" (WWW'20), which is based on pytorch_geometric"}
{"name": "bobo-y/flexible-yolov5", "full_name": "Bobo-y/flexible-yolov5", "topics": ["yolov5", "resnet", "moblienet", "backbone", "neck", "se", "cbam", "efficientnet", "pytorch", "shufflenet", "hrnet", "dcnv2", "tensorrt", "object-detection", "swin-transformer", "gcn", "yolov3"], "description": "More readable and flexible yolov5 with more backbone(gcn, resnet, shufflenet, moblienet, efficientnet, hrnet, swin-transformer, etc) and (cbam\uff0cdcn and so on), and tensorrt"}
{"name": "mit-han-lab/lite-transformer", "full_name": "mit-han-lab/lite-transformer", "topics": ["nlp", "pytorch", "transformer"], "description": "[ICLR 2020] Lite Transformer with Long-Short Range Attention"}
{"name": "yura52/rtdl", "full_name": "Yura52/rtdl", "topics": ["python", "machine-learning", "deep-learning", "pytorch", "research", "ai", "artificial-intelligence", "tabular", "neural-network", "papers", "tabular-data"], "description": "Research on Tabular Deep Learning (Python package & papers)"}
{"name": "positive666/yolov5_research", "full_name": "positive666/yolo_research", "topics": ["yolov5", "deepstream", "pytorch", "object-detection", "attention-mechanism", "swintransformer", "custom-networ", "yolov7"], "description": "based on yolov5-high-level project (detect\\pose\\classify\\segment\\):include yolov7 core ,improvement research based on yolov5,SwintransformV2 and Attention Series. training skills, business customization, engineering deployment C"}
{"name": "acids-ircam/rave", "full_name": "acids-ircam/RAVE", "topics": ["deep-learning", "neural-network", "audio", "generative-model", "ai"], "description": "Official implementation of the RAVE model: a Realtime Audio Variational autoEncoder"}
{"name": "lhotse-speech/lhotse", "full_name": "lhotse-speech/lhotse", "topics": ["speech", "audio", "kaldi", "machine-learning", "ai", "deep-learning", "pytorch", "data", "python", "speech-recognition"], "description": "Tools for handling speech data in machine learning projects."}
{"name": "peterouzh/cips-3d", "full_name": "PeterouZh/CIPS-3D", "topics": ["generative-adversarial-network", "nerf", "pytorch"], "description": "3D-aware GANs based on NeRF (arXiv). "}
{"name": "pytorchlightning/lightning-transformers", "full_name": "Lightning-AI/lightning-transformers", "topics": ["pytorch", "pytorch-lightning", "transformers", "hydra"], "description": "Flexible components pairing \ud83e\udd17 Transformers with :zap: Pytorch Lightning"}
{"name": "lucastabelini/laneatt", "full_name": "lucastabelini/LaneATT", "topics": ["lane-detection", "deep-learning", "computer-vision", "pytorch"], "description": "Code for the paper entitled \"Keep your Eyes on the Lane: Real-time Attention-guided Lane Detection\" (CVPR 2021)"}
{"name": "jeya-maria-jose/medical-transformer", "full_name": "jeya-maria-jose/Medical-Transformer", "topics": ["pytorch", "segmentation", "medical-imaging", "medical-image-analysis", "deep-learning", "transformers", "attention", "transformer"], "description": "Official Pytorch Code for \"Medical Transformer: Gated Axial-Attention for Medical Image Segmentation\" - MICCAI 2021"}
{"name": "mind-lab/octis", "full_name": "MIND-Lab/OCTIS", "topics": ["topic-modeling", "latent-dirichlet-allocation", "latent-semantic-analysis", "evaluation-metrics", "natural-language-processing", "non-negative-matrix-factorization", "neural-topic-models", "bayesian-optimization", "hyperparameter-optimization", "hyperparameter-tuning", "hyperparameter-search", "topic-models", "nlp", "nlproc", "nlp-library"], "description": "OCTIS: Comparing Topic Models is Simple! A python package to optimize and evaluate topic models (accepted at EACL2021 demo track)"}
{"name": "davidbau/rewriting", "full_name": "davidbau/rewriting", "topics": ["vision", "machine-learning", "graphics", "hci", "gans", "deep-learning", "research"], "description": "Rewriting a Deep Generative Model, ECCV 2020 (oral).  Interactive tool to directly edit the rules of a GAN to synthesize scenes with objects added, removed, or altered.  Change StyleGANv2 to make extravagant eyebrows, or horses wearing hats."}
{"name": "yuangongnd/ast", "full_name": "YuanGongND/ast", "topics": ["pytorch", "audio-classification", "deep-learning", "audio", "representation-learning", "keyword-spotting", "speech-commands", "speech-classification"], "description": "Code for the Interspeech 2021 paper \"AST: Audio Spectrogram Transformer\"."}
{"name": "neuspell/neuspell", "full_name": "neuspell/neuspell", "topics": ["spelling-correction", "spell-checkers", "spellcheck", "neural-models", "neural-spell-check", "spell-checker", "nlp", "spell-correction", "dataset", "spell-correction-datasets", "ngrams"], "description": "NeuSpell: A Neural Spelling Correction Toolkit"}
{"name": "bubbliiiing/ssd-pytorch", "full_name": "bubbliiiing/ssd-pytorch", "topics": [], "description": "\u8fd9\u662f\u4e00\u4e2assd-pytorch\u7684\u6e90\u7801\uff0c\u53ef\u4ee5\u7528\u4e8e\u8bad\u7ec3\u81ea\u5df1\u7684\u6a21\u578b\u3002"}
{"name": "nvidia/nvtabular", "full_name": "NVIDIA-Merlin/NVTabular", "topics": ["deep-learning", "feature-engineering", "feature-selection", "gpu", "machine-learning", "nvidia", "preprocessing", "recommendation-system", "recommender-system"], "description": "NVTabular is a feature engineering and preprocessing library for tabular data designed to quickly and easily manipulate terabyte scale datasets used to train deep learning based recommender systems."}
{"name": "lucidrains/timesformer-pytorch", "full_name": "lucidrains/TimeSformer-pytorch", "topics": ["artificial-intelligence", "deep-learning", "attention-mechanism", "transformers", "video-classification"], "description": "Implementation of TimeSformer from Facebook AI, a pure attention-based solution for video classification"}
{"name": "xingangpan/gan2shape", "full_name": "XingangPan/GAN2Shape", "topics": ["generative-adversarial-network", "deep-learning", "3d-reconstruction", "gan", "inverse-graphics"], "description": "Code for GAN2Shape (ICLR2021 oral)"}
{"name": "microsoft/innereye-deeplearning", "full_name": "microsoft/InnerEye-DeepLearning", "topics": ["azure", "medical-imaging", "healthcare", "deep-learning"], "description": "Medical Imaging Deep Learning library to train and deploy 3D segmentation models on Azure Machine Learning"}
{"name": "frotms/paddleocr2pytorch", "full_name": "frotms/PaddleOCR2Pytorch", "topics": ["paddleocr", "pytorch", "ocr", "paddlepaddle", "multilingual-models", "db", "crnn", "pytorchocr"], "description": "PaddleOCR inference in PyTorch. Converted from [PaddleOCR](https://github.com/PaddlePaddle/PaddleOCR)"}
{"name": "patrick-kidger/neuralcde", "full_name": "patrick-kidger/NeuralCDE", "topics": ["machine-learning", "rough-paths", "neural-differential-equations", "time-series", "controlled-differential-equations", "deep-learning", "deep-neural-networks", "pytorch", "dynamical-systems", "differential-equations", "neural-networks"], "description": "Code for \"Neural Controlled Differential Equations for Irregular Time Series\" (Neurips 2020 Spotlight)"}
{"name": "raminmh/cfc", "full_name": "raminmh/CfC", "topics": ["deep-learning", "neural-ode", "pytorch", "recurrent-neural-networks", "sequence-models", "tensorflow"], "description": "Closed-form Continuous-time Neural Networks"}
{"name": "pytorch/torcharrow", "full_name": "pytorch/torcharrow", "topics": ["python", "preprocessing", "pytorch"], "description": "High performance model preprocessing library on PyTorch"}
{"name": "patrickhua/simsiam", "full_name": "PatrickHua/SimSiam", "topics": [], "description": "A pytorch implementation for paper 'Exploring Simple Siamese Representation Learning'"}
{"name": "chaofengc/iqa-pytorch", "full_name": "chaofengc/IQA-PyTorch", "topics": ["iqa", "image-quality-assessment", "blind-image-quality-assessment", "pytorch", "python3", "pytorch-implementation"], "description": "PyTorch Toolbox for Image Quality Assessment, including LPIPS, FID, NIQE, NRQM(Ma), MUSIQ, NIMA, DBCNN, WaDIQaM, BRISQUE, PI and more..."}
{"name": "microsoft/semi-supervised-learning", "full_name": "microsoft/Semi-supervised-learning", "topics": ["classification", "semi-supervised-learning", "transformer", "computer-vision", "deep-learning", "machine-learning", "natural-language-processing", "pytorch", "audio-classification", "low-resource", "semisupervised-learning"], "description": "A Unified Semi-Supervised Learning Codebase (NeurIPS'22)"}
{"name": "wjf5203/vnext", "full_name": "wjf5203/VNext", "topics": ["instance-segmentation", "object-detection", "transformer", "video-instance-segmentation", "tracking"], "description": "Next-generation Video instance recognition framework on top of Detectron2 which supports SeqFormer(ECCV Oral) and IDOL(ECCV Oral))"}
{"name": "swz30/mirnet", "full_name": "swz30/MIRNet", "topics": ["image-denoising", "super-resolution", "image-enhancement", "image-restoration", "low-level-vision", "computer-vision", "multi-resolution-streams", "attention-mechanism", "pytorch", "eccv2020"], "description": "[ECCV 2020] Learning Enriched Features for Real Image Restoration and Enhancement. SOTA results for image denoising, super-resolution, and image enhancement."}
{"name": "zyddnys/manga-image-translator", "full_name": "zyddnys/manga-image-translator", "topics": ["manga", "anime", "ocr", "deep-learning", "image-processing", "auto-translation", "machine-translation", "pytorch-implementation", "text-detection", "text-detection-recognition", "chinese-translation", "japanese-translations", "neural-network", "inpainting", "transformer"], "description": "Translate manga/image \u4e00\u952e\u7ffb\u8bd1\u5404\u7c7b\u56fe\u7247\u5185\u6587\u5b57 https://touhou.ai/imgtrans/"}
{"name": "alpa-projects/alpa", "full_name": "alpa-projects/alpa", "topics": ["deep-learning", "machine-learning", "compiler", "distributed-training", "high-performance-computing", "alpa", "jax", "distributed-computing", "llm", "auto-parallelization"], "description": "Training and serving large-scale neural networks"}
{"name": "ranahanocka/point2mesh", "full_name": "ranahanocka/point2mesh", "topics": ["3d-graphics", "deep-learning", "mesh-processing", "pointcloud", "pytorch", "reconstruction"], "description": "Reconstruct Watertight Meshes from Point Clouds [SIGGRAPH 2020]"}
{"name": "rinnakk/japanese-pretrained-models", "full_name": "rinnakk/japanese-pretrained-models", "topics": ["nlp", "japanese", "gpt2", "roberta"], "description": "Code for producing Japanese pretrained models provided by rinna Co., Ltd."}
{"name": "princeton-nlp/densephrases", "full_name": "princeton-nlp/DensePhrases", "topics": ["nlp", "open-domain-qa", "slot-filling", "knowledge-base", "information-retrieval", "passage-retrieval"], "description": "ACL'2021: Learning Dense Representations of Phrases at Scale; EMNLP'2021: Phrase Retrieval Learns Passage Retrieval, Too https://arxiv.org/abs/2012.12624"}
{"name": "cure-lab/ltsf-linear", "full_name": "cure-lab/LTSF-Linear", "topics": ["deep-learning", "forecasting", "forecasting-model", "linear-models", "pytorch", "time-series", "time-series-forecasting", "time-series-prediction", "aaai", "aaai2023"], "description": "This is the official implementation for AAAI-23 Oral paper \"Are Transformers Effective for Time Series Forecasting?\""}
{"name": "sforaidl/kd_lib", "full_name": "SforAiDl/KD_Lib", "topics": ["knowledge-distillation", "model-compression", "pruning", "quantization", "pytorch", "deep-learning-library", "machine-learning", "data-science", "benchmarking", "algorithm-implementations"], "description": "A Pytorch Knowledge Distillation library for benchmarking and extending works in the domains of Knowledge Distillation, Pruning, and Quantization."}
{"name": "mahmoodlab/clam", "full_name": "mahmoodlab/CLAM", "topics": ["histopathology", "pathology", "weakly-supervised-learning", "whole-slide-imaging", "data-efficient", "computational-pathology", "mahmoodlab", "bioimage-informatics", "deep-learning", "tcga-data", "camelyon16", "camelyon17", "clam"], "description": "Data-efficient and weakly supervised computational pathology on whole slide images - Nature Biomedical Engineering"}
{"name": "allenai/allennlp-models", "full_name": "allenai/allennlp-models", "topics": ["nlp", "allennlp", "pytorch"], "description": "Officially supported AllenNLP models"}
{"name": "open-mmlab/mmfewshot", "full_name": "open-mmlab/mmfewshot", "topics": ["pytorch", "openmmlab", "few-shot-learning"], "description": "OpenMMLab FewShot Learning Toolbox and Benchmark"}
{"name": "eloialonso/iris", "full_name": "eloialonso/iris", "topics": ["deep-learning", "machine-learning", "reinforcement-learning", "artificial-intelligence", "atari", "world-models", "research", "transformers"], "description": "Transformers are Sample Efficient World Models"}
{"name": "mims-harvard/tdc", "full_name": "mims-harvard/TDC", "topics": ["machine-learning", "therapeutics", "drug-discovery", "datasets", "biology", "chemistry", "biomedicine", "bioinformatics", "cheminformatics", "deep-learning", "benchmarks", "artificial-intelligence", "precision-medicine"], "description": "Therapeutics Data Commons: Artificial Intelligence Foundation for Therapeutic Science"}
{"name": "jeshraghian/snntorch", "full_name": "jeshraghian/snntorch", "topics": ["pytorch", "spiking-neural-networks", "neuron-models", "python", "neural-networks", "machine-learning", "neuroscience", "snn", "spiking", "spike"], "description": "Deep and online learning with spiking neural networks in Python"}
{"name": "cvxgrp/pymde", "full_name": "cvxgrp/pymde", "topics": ["embedding", "visualization", "feature-vectors", "machine-learning", "dimensionality-reduction", "graph-embedding", "pytorch", "cuda", "gpu"], "description": "Minimum-distortion embedding with PyTorch"}
{"name": "lucidrains/palm-pytorch", "full_name": "lucidrains/PaLM-pytorch", "topics": ["deep-learning", "transformers", "attention-mechanism", "artificial-general-intelligence"], "description": "Implementation of the specific Transformer architecture from PaLM - Scaling Language Modeling with Pathways"}
{"name": "alvinwan/neural-backed-decision-trees", "full_name": "alvinwan/neural-backed-decision-trees", "topics": ["decision-trees", "neural-networks", "image-classification", "explainability", "tiny-imagenet", "cifar10", "cifar100", "interpretability", "imagenet", "neural-backed-decision-trees", "pretrained-weights", "pretrained-models", "pytorch"], "description": "Making decision trees competitive with neural networks on CIFAR10, CIFAR100, TinyImagenet200, Imagenet"}
{"name": "project-splinter/monoport", "full_name": "Project-Splinter/MonoPort", "topics": ["deep-learning", "machine-learning", "volumetric", "3d-reconstruction", "3d-vision", "siggraph", "monocular", "performance-capture", "eccv2020", "virtual-reality", "pifu", "clothed-humans", "reconstruction", "pytorch", "pifuhd", "real-time", "teleportation", "virtual-conference", "teleportvr", "sdf"], "description": "Volumetric Human Teleportation (SIGGRAPH 2020 Real-Time Live) Monocular Real-Time Volumetric Performance Capture(ECCV 2020)"}
{"name": "ukplab/beir", "full_name": "beir-cellar/beir", "topics": ["nlp", "information-retrieval", "bert", "benchmark", "sentence-transformers", "question-generation", "retrieval", "passage-retrieval", "elasticsearch", "dpr", "sbert", "retrieval-models", "dataset", "ance", "colbert", "zero-shot-retrieval", "use-qa", "deep-learning", "pytorch"], "description": "A Heterogeneous Benchmark for Information Retrieval. Easy to use, evaluate your models across 15+ diverse IR datasets."}
{"name": "brummi/monorec", "full_name": "Brummi/MonoRec", "topics": ["depth-estimation", "deep-learning", "unsupervised-learning", "cvpr2021"], "description": "Official implementation of the paper: MonoRec: Semi-Supervised Dense Reconstruction in Dynamic Environments from a Single Moving Camera (CVPR 2021)"}
{"name": "lucidrains/audiolm-pytorch", "full_name": "lucidrains/audiolm-pytorch", "topics": ["artificial-intelligence", "attention-mechanisms", "audio-synthesis", "deep-learning", "transformers"], "description": "Implementation of AudioLM, a SOTA Language Modeling Approach to Audio Generation out of Google Research, in Pytorch"}
{"name": "nianticlabs/manydepth", "full_name": "nianticlabs/manydepth", "topics": ["kitti", "cityscapes", "depths", "monodepth", "depth-estimation", "pytorch", "cvpr2021", "cvpr", "self-supervised-learning", "self-supervised", "cost-volumes", "estimating-depths"], "description": "[CVPR 2021] Self-supervised depth estimation from short sequences"}
{"name": "spijkervet/simclr", "full_name": "Spijkervet/SimCLR", "topics": ["simclr", "pytorch", "contrastive-learning", "unsupervised-learning", "representation-learning"], "description": "PyTorch implementation of SimCLR: A Simple Framework for Contrastive Learning of Visual Representations by T. Chen et al."}
{"name": "yzhao062/pyhealth", "full_name": "sunlabuiuc/PyHealth", "topics": ["healthcare", "data-mining", "deep-learning", "preprocessing", "clinical-data", "clinical-research", "electronic-medical-record", "medical-code", "electronic-health-record"], "description": "A Python Library for Healthcare Predictive Tasks"}
{"name": "libcity/bigscity-libcity", "full_name": "LibCity/Bigscity-LibCity", "topics": ["traffic", "traffic-prediction", "traffic-flow-prediction", "traffic-speed-prediction", "on-demand-service", "trajectory-prediction", "toolkit", "deep-learning", "spatio-temporal-prediction", "spatio-temporal", "pytorch-implementation", "traffic-forecasting", "map-matching", "representation-learning", "estimated-time-of-arrival", "traffic-accident-prediction", "od-matrix", "time-series-prediction", "eta", "libcity"], "description": "LibCity: An Open Library for Urban Spatio-temporal Data Mining"}
{"name": "maudzung/ttnet-real-time-analysis-system-for-table-tennis-pytorch", "full_name": "maudzung/TTNet-Real-time-Analysis-System-for-Table-Tennis-Pytorch", "topics": ["ttnet", "pytorch", "tabletennis", "sport-analytics", "multi-task-learning", "dice-loss", "distributed-data-parallel", "table-tennis", "segmentation", "spatial-video-analysis", "event-spotting", "event-detection"], "description": "Unofficial implementation of \"TTNet: Real-time temporal and spatial video analysis of table tennis\" (CVPR 2020)"}
{"name": "intel-isl/open3d-ml", "full_name": "isl-org/Open3D-ML", "topics": ["3d-perception", "datasets", "pretrained-models", "lidar", "rgbd", "tensorflow", "pytorch", "visualization", "semantic-segmentation", "object-detection", "3d-object-detection"], "description": "An extension of Open3D to address 3D Machine Learning tasks"}
{"name": "poets-ai/elegy", "full_name": "poets-ai/elegy", "topics": ["deep-learning", "jax"], "description": "A High Level API for Deep Learning in JAX"}
{"name": "prithivirajdamodaran/styleformer", "full_name": "PrithivirajDamodaran/Styleformer", "topics": ["style-transfer", "slang", "informal-sentences", "formal-languages", "nlp", "active", "passive", "text-style-transfer", "text-style", "text-style-transfer-benchmark"], "description": "A Neural Language Style Transfer framework to transfer natural language text smoothly between fine-grained language styles like formal/casual, active/passive, and many more. Created by Prithiviraj Damodaran. Open to pull requests and other forms of collaboration."}
{"name": "underneathall/pinferencia", "full_name": "underneathall/pinferencia", "topics": ["ai", "inference-server", "predict", "inference", "deep-learning", "modelserver", "machine-learning", "python", "serving", "model-deployment", "huggingface", "pytorch", "tensorflow", "transformers", "artificial-intelligence", "data-science", "model-serving", "computer-vision", "nlp", "paddlepaddle"], "description": "Python + Inference - Model Deployment library in Python. Simplest model inference server ever."}
{"name": "alibaba-miil/tresnet", "full_name": "Alibaba-MIIL/TResNet", "topics": ["tresnet", "multi-label-classification", "accuracy", "architecture", "imagenet"], "description": "Official Pytorch Implementation of \"TResNet: High-Performance GPU-Dedicated Architecture\" (WACV 2021)"}
{"name": "hkchengrex/stcn", "full_name": "hkchengrex/STCN", "topics": ["computer-vision", "deep-learning", "pytorch", "segmentation", "video-segmentation", "video-object-segmentation", "neurips-2021"], "description": "[NeurIPS 2021] Rethinking Space-Time Networks with Improved Memory Coverage for Efficient Video Object Segmentation"}
{"name": "lmnt-com/diffwave", "full_name": "lmnt-com/diffwave", "topics": ["machine-learning", "text-to-speech", "neural-network", "paper", "pytorch", "speech-synthesis", "diffwave", "vocoder", "speech", "pretrained-models", "tts", "deep-learning"], "description": "DiffWave is a fast, high-quality neural vocoder and waveform synthesizer."}
{"name": "bubbliiiing/yolov5-pytorch", "full_name": "bubbliiiing/yolov5-pytorch", "topics": [], "description": "\u8fd9\u662f\u4e00\u4e2aYoloV5-pytorch\u7684\u6e90\u7801\uff0c\u53ef\u4ee5\u7528\u4e8e\u8bad\u7ec3\u81ea\u5df1\u7684\u6a21\u578b\u3002"}
{"name": "kennymckormick/pyskl", "full_name": "kennymckormick/pyskl", "topics": ["action-recognition", "deep-learning", "skeleton-based-action-recognition", "stgcn", "posec3d", "gesture-recognition", "pytorch"], "description": "A toolbox for skeleton-based action recognition."}
{"name": "chenrocks/uniter", "full_name": "ChenRocks/UNITER", "topics": ["transformers", "pre-training", "vision-and-language", "pytorch"], "description": "Research code for ECCV 2020 paper \"UNITER: UNiversal Image-TExt Representation Learning\""}
{"name": "clovaai/rexnet", "full_name": "clovaai/rexnet", "topics": ["rexnet", "deep-learning", "image-classification", "object-detection", "transfer-learning", "pytorch", "imagenet", "pretrained-model"], "description": "Official Pytorch implementation of ReXNet (Rank eXpansion Network) with pretrained models"}
{"name": "lucidrains/nuwa-pytorch", "full_name": "lucidrains/nuwa-pytorch", "topics": ["artificial-intelligence", "deep-learning", "transformers", "attention-mechanism", "text-to-video", "text-to-audio"], "description": "Implementation of N\u00dcWA, state of the art attention network for text to video synthesis, in Pytorch"}
{"name": "ermongroup/sdedit", "full_name": "ermongroup/SDEdit", "topics": ["pytorch", "score-matching", "image-editing", "image-generation", "controllable-generation", "image-manipulation"], "description": "PyTorch implementation for SDEdit: Image Synthesis and Editing with Stochastic Differential Equations"}
{"name": "njustkmg/paddlemm", "full_name": "njustkmg/OMML", "topics": ["multimodal", "multimodal-learning", "python", "paddlepaddle", "pytorch", "crossmodal-retrieval", "imagecaptioning", "classification"], "description": "Multi-Modal learning toolkit based on PaddlePaddle and PyTorch, supporting multiple applications such as multi-modal classification, cross-modal retrieval and image caption."}
{"name": "lucidrains/retro-pytorch", "full_name": "lucidrains/RETRO-pytorch", "topics": ["artificial-intelligence", "deep-learning", "transformers", "attention-mechanism", "retrieval"], "description": "Implementation of RETRO, Deepmind's Retrieval based Attention net, in Pytorch"}
{"name": "qdrant/quaterion", "full_name": "qdrant/quaterion", "topics": ["contrastive-learning", "cosine-similarity", "deep-learning", "knn", "machine-learning", "metric-learning", "nearest-neighbor-search", "python", "pytorch", "pytorch-lightning", "similarity-learning", "similarity-search"], "description": "Blazing fast framework for fine-tuning similarity learning models"}
{"name": "mit-han-lab/spvnas", "full_name": "mit-han-lab/spvnas", "topics": ["computer-vision", "deep-learning", "pytorch", "point-cloud", "lidar", "architecture-search", "efficiency", "3d-deep-learning", "semantickitti"], "description": "[ECCV 2020] Searching Efficient 3D Architectures with Sparse Point-Voxel Convolution"}
{"name": "lucidrains/point-transformer-pytorch", "full_name": "lucidrains/point-transformer-pytorch", "topics": ["artificial-intelligence", "deep-learning", "attention-mechanism", "point-cloud"], "description": "Implementation of the Point Transformer layer, in Pytorch"}
{"name": "r9y9/nnsvs", "full_name": "nnsvs/nnsvs", "topics": ["singing-voice-synthesis", "dnn", "pytorch", "kiritan", "singing-voice", "python", "deep-learning", "singing-synthesis"], "description": "Neural network-based singing voice synthesis library for research"}
{"name": "endlesssora/focal-frequency-loss", "full_name": "EndlessSora/focal-frequency-loss", "topics": ["generative-models", "loss-function", "frequency-domain", "frequency-analysis", "complementary", "autoencoder", "variational-autoencoder", "gan", "pix2pix", "spade", "loss", "image-reconstruction", "image-synthesis", "stylegan2", "iccv2021", "generative-adversarial-network", "generic", "image-generation"], "description": "[ICCV 2021] Focal Frequency Loss for Image Reconstruction and Synthesis"}
{"name": "fatescript/centernet-better", "full_name": "FateScript/CenterNet-better", "topics": ["deep-learning", "computer-vision", "object-detection"], "description": "An easy to understand and better performance version of CenterNet"}
{"name": "dvlab-research/entity", "full_name": "dvlab-research/Entity", "topics": ["image-segmentation", "segmentation", "pytorch", "instance-segmentation", "panoptic-segmentation", "semantic-segmentation", "object-detection", "fcos", "condinst", "detectron2", "pretrained-weights", "pretrained-models", "computer-vision", "deep-learning", "cnn", "pretraining"], "description": " EntitySeg Toolbox: Towards Open-World and High-Quality Image Segmentation"}
{"name": "megvii-research/mdistiller", "full_name": "megvii-research/mdistiller", "topics": ["pytorch", "knowledge-distillation", "computer-vision", "deep-learning", "cifar", "coco", "cvpr2022", "imagenet"], "description": "The official implementation of [CVPR2022] Decoupled Knowledge Distillation https://arxiv.org/abs/2203.08679"}
{"name": "lezcano/geotorch", "full_name": "lezcano/geotorch", "topics": ["pytorch", "constrained-optimization", "manifold-optimization", "orthogonality", "invertible-neural-networks", "positive-definite-matrices", "positive-semi-definite", "low-rank"], "description": "Constrained optimization toolkit for PyTorch"}
{"name": "booknlp/booknlp", "full_name": "booknlp/booknlp", "topics": ["natural-language-processing", "cultural-analytics", "digital-humanities", "computational-social-science"], "description": "BookNLP, a natural language processing pipeline for books"}
{"name": "tusen-ai/sst", "full_name": "tusen-ai/SST", "topics": ["pytorch", "3d-object-detection", "autonomous-driving"], "description": "Codes for \u201cFully Sparse 3D Object Detection\u201d & \u201cEmbracing Single Stride 3D Object Detector with Sparse Transformer\u201d"}
{"name": "jina-ai/examples", "full_name": "jina-ai/examples", "topics": ["jina", "examples", "tutorials", "onboarding", "neural-search", "python", "deep-learning", "semantic-search", "nlp"], "description": "Jina examples and demos to help you get started"}
{"name": "hpcaitech/fastfold", "full_name": "hpcaitech/FastFold", "topics": ["alphafold2", "protein-structure", "pytorch", "gpu", "evoformer", "parallelism", "protein-folding", "cuda", "habana-gaudi"], "description": "Optimizing AlphaFold Training and Inference on GPU Clusters"}
{"name": "fantasy-studio/paint-by-example", "full_name": "Fantasy-Studio/Paint-by-Example", "topics": ["computer-vision", "deep-learning", "diffusion-models", "image-editing", "image-generation", "image-manipulation", "pytorch", "stable-diffusion", "paint-by-example"], "description": "Paint by Example: Exemplar-based Image Editing with Diffusion Models"}
{"name": "georgian-io/multimodal-toolkit", "full_name": "georgian-io/Multimodal-Toolkit", "topics": ["huggingface-transformers", "transformer", "natural-language-processing", "tabular-data", "multimodal-learning"], "description": "Multimodal model for text and tabular data with HuggingFace transformers as building block for text data"}
{"name": "braindecode/braindecode", "full_name": "braindecode/braindecode", "topics": ["deep-learning", "eeg", "electroencephalogram", "electroencephalography", "neuroimaging", "neuroscience", "python", "pytorch", "meg", "magnetoencephalography", "electrocorticography", "ecog"], "description": "Deep learning software to decode EEG, ECG or MEG signals"}
{"name": "archinetai/audio-diffusion-pytorch", "full_name": "archinetai/audio-diffusion-pytorch", "topics": ["artificial-intelligence", "audio-generation", "deep-learning", "denoising-diffusion"], "description": "Audio generation using diffusion models, in PyTorch."}
{"name": "menyifang/adgan", "full_name": "menyifang/ADGAN", "topics": ["pose-transfer", "generative-adversarial-network", "gan", "pytorch", "virtual-try-on", "image-synthesis"], "description": "The Implementation of paper \"Controllable Person Image Synthesis with Attribute-Decomposed GAN\" CVPR 2020 (Oral); Pose and Appearance Attributes Transfer;"}
{"name": "alibaba/tinyneuralnetwork", "full_name": "alibaba/TinyNeuralNetwork", "topics": ["pytorch", "deep-learning", "model-compression", "pruning", "model-converter", "quantization-aware-training", "deep-neural-networks", "post-training-quantization"], "description": "TinyNeuralNetwork is an efficient and easy-to-use deep learning model compression framework."}
{"name": "syscv/transfiner", "full_name": "SysCV/transfiner", "topics": ["cvpr", "cvpr2022", "efficient-transformers", "high-quality", "instance-segmentation", "transformer"], "description": "Mask Transfiner for High-Quality Instance Segmentation, CVPR 2022"}
{"name": "prbonn/lidar-mos", "full_name": "PRBonn/LiDAR-MOS", "topics": ["lidar", "point-cloud", "segmentation", "slam", "mapping", "deep-learning", "deep-neural-networks", "moving-object-segmentation", "lidar-slam", "dynamic-slam", "motion-detection"], "description": "(LMNet) Moving Object Segmentation in 3D LiDAR Data: A Learning-based Approach Exploiting Sequential Data (RAL/IROS 2021)"}
{"name": "hrnet/hrformer", "full_name": "HRNet/HRFormer", "topics": ["vision", "transformer", "segmentation", "pose-estimation", "classification", "hrnet"], "description": "This is an official implementation of our NeurIPS 2021 paper \"HRFormer: High-Resolution Transformer for Dense Prediction\"."}
{"name": "zhendongwang6/uformer", "full_name": "ZhendongWang6/Uformer", "topics": ["deep-learning", "pytorch", "image-restoration", "image-denoising", "image-deblurring", "image-deraining", "image-demoireing"], "description": "[CVPR 2022] Official repository for the paper \"Uformer: A General U-Shaped Transformer for Image Restoration\"."}
{"name": "minqi824/adbench", "full_name": "Minqi824/ADBench", "topics": ["anomaly-detection", "benchmark", "data-mining", "deep-learning", "machine-learning", "outlier-detection", "semi-supervised-learning", "supervised-learning", "unsupervised-learning", "data-sicence", "ensemble-learning", "neural-networks", "python"], "description": "Official Implement of \"ADBench: Anomaly Detection Benchmark\"."}
{"name": "nvlabs/fan", "full_name": "NVlabs/FAN", "topics": ["backbone", "deep-learning", "image-classification", "object-detection", "vision-transformers", "visual-recognition", "semantic-segmentation", "corruption", "imagenet", "out-of-distribution", "pre-train", "cityscapes", "coco", "information-bottleneck", "self-attention", "visual-grouping"], "description": "Official PyTorch implementation of Fully Attentional Networks"}
{"name": "xwying/torchshow", "full_name": "xwying/torchshow", "topics": ["visualization", "tensor", "image-tensor", "notebook", "pytorch"], "description": "Visualize PyTorch tensors with a single line of code."}
{"name": "edisonleeeee/graphgallery", "full_name": "EdisonLeeeee/GraphGallery", "topics": ["graph-neural-networks", "models", "graph", "geometric-deep-learning", "pytorch", "graphgallery", "adversarial-machine-learning", "dgl", "pyg"], "description": "GraphGallery is a gallery for benchmarking Graph Neural Networks."}
{"name": "modelscope/modelscope", "full_name": "modelscope/modelscope", "topics": ["nlp", "cv", "speech", "multi-modal", "science", "deep-learning", "machine-learning", "python"], "description": "ModelScope: bring the notion of Model-as-a-Service to life."}
{"name": "xue-pai/fuxictr", "full_name": "xue-pai/FuxiCTR", "topics": ["ctr-prediction", "recommender-systems", "ctr", "cvr", "pytorch"], "description": "A configurable, tunable, and reproducible library for CTR prediction https://fuxictr.github.io/tutorials"}
{"name": "media-smart/vedastr", "full_name": "Media-Smart/vedastr", "topics": ["pytorch", "scene-text-recognition", "ocr", "ocr-recognition", "text-recognition", "transformer"], "description": "A scene text recognition toolbox based on PyTorch"}
{"name": "swz30/cycleisp", "full_name": "swz30/CycleISP", "topics": ["image-denoising", "data-synthesis", "camera-imaging-pipeline", "low-level-vision", "cycleisp", "computer-vision", "image-restoration", "pytorch", "rgb2raw", "raw2rgb", "cvpr2020"], "description": "[CVPR 2020--Oral] CycleISP: Real Image Restoration via Improved Data Synthesis"}
{"name": "jik876/hifi-gan", "full_name": "jik876/hifi-gan", "topics": ["speech-synthesis", "gan", "text-to-speech", "tts", "deep-learning", "hifi-gan", "pytorch", "vocoder"], "description": "HiFi-GAN: Generative Adversarial Networks for Efficient and High Fidelity Speech Synthesis"}
{"name": "opendilab/interfuser", "full_name": "opendilab/InterFuser", "topics": ["autonomous-driving", "bird-view-image", "transformer"], "description": "[CoRL 2022] InterFuser: Safety-Enhanced Autonomous Driving Using Interpretable Sensor Fusion Transformer"}
{"name": "crowsonkb/style-transfer-pytorch", "full_name": "crowsonkb/style-transfer-pytorch", "topics": ["pytorch", "style-transfer", "neural-art"], "description": "Neural style transfer in PyTorch."}
{"name": "webis-de/small-text", "full_name": "webis-de/small-text", "topics": ["active-learning", "text-classification", "pytorch", "transformers", "natural-language-processing", "python", "machine-learning", "deep-learning", "nlp"], "description": "Active Learning for Text Classification in Python"}
{"name": "mindslab-ai/faceshifter", "full_name": "mindslab-ai/faceshifter", "topics": ["pytorch", "pytorch-lightning", "face-swapping"], "description": "Unofficial PyTorch Implementation for FaceShifter (https://arxiv.org/abs/1912.13457)"}
{"name": "shariqfarooq123/adabins", "full_name": "shariqfarooq123/AdaBins", "topics": ["adaptive-bins", "deep-learning", "depth-estimation", "metric-depth-estimation", "monocular-depth-estimation", "neural-networks", "pretrained-models", "single-image-depth-prediction", "transformers"], "description": "Official implementation of Adabins: Depth Estimation using adaptive bins"}
{"name": "murufeng/awesome_lightweight_networks", "full_name": "murufeng/awesome_lightweight_networks", "topics": ["mobile-networks", "awesome-list", "deep-learning", "mobilenet"], "description": "The implementation of various lightweight networks by using PyTorch. such as\uff1aMobileNetV2\uff0cMobileNeXt\uff0cGhostNet\uff0cParNet\uff0cMobileViT\u3001AdderNet\uff0cShuffleNetV1-V2\uff0cLCNet\uff0cConvNeXt\uff0cetc. \u2b50\u2b50\u2b50\u2b50\u2b50"}
{"name": "microsoft/deepspeed-mii", "full_name": "microsoft/DeepSpeed-MII", "topics": ["deep-learning", "inference", "pytorch"], "description": "MII makes low-latency and high-throughput inference possible, powered by DeepSpeed."}
{"name": "sb-ai-lab/lightautoml", "full_name": "sb-ai-lab/LightAutoML", "topics": ["automl", "data-science", "machine-learning", "python", "automated-machine-learning", "automatic-machine-learning", "automl-algorithms", "binary-classification", "kaggle", "lama", "multiclass-classification", "nlp", "regression"], "description": "Fast and customizable framework for automatic ML model creation (AutoML)"}
{"name": "carefree0910/carefree-learn", "full_name": "carefree0910/carefree-learn", "topics": ["pytorch", "automl", "algorithm", "ensemble", "numpy", "machine-learning", "tabular-data", "python", "deep-learning", "data-science", "tabular-datasets", "computer-vision"], "description": "Deep Learning \u2764\ufe0f PyTorch"}
{"name": "researchmm/stark", "full_name": "researchmm/Stark", "topics": ["transformer"], "description": "[ICCV'21] Learning Spatio-Temporal Transformer for Visual Tracking"}
{"name": "vector-ai/vectorhub", "full_name": "RelevanceAI/vectorhub", "topics": ["python", "vector", "embeddings", "encodings", "vector-similarity", "transformers", "tfhub", "machine-learning", "deeplearning", "artificial-intelligence", "neural-network", "deep-learning", "tensorflow", "pytorch", "word2vec", "image2vec", "audio-processing", "video-processing"], "description": "Vector Hub - Library for easy discovery, and consumption of State-of-the-art models to turn data into vectors. (text2vec, image2vec, video2vec, graph2vec, bert, inception, etc)"}
{"name": "intel/openfl", "full_name": "intel/openfl", "topics": ["federated-learning", "secure-computation", "openfl", "distributed-computing", "deep-learning", "collaborative-learning", "privacy-preserving-machine-learning", "machine-learning", "fedprox", "fedavg", "federated-analytics", "python", "federated-learning-framework", "federated-deep-learning", "pytorch-federated-learning", "tensorflow-federated-learning", "keras-federated-learning", "distributed-learning", "fedcurv", "fedopt"], "description": "An open framework for Federated Learning."}
{"name": "simonvandenhende/multi-task-learning-pytorch", "full_name": "SimonVandenhende/Multi-Task-Learning-PyTorch", "topics": ["multi-task-learning", "computer-vision", "pytorch", "nyud", "pascal", "segmentation", "scene-understanding", "eccv2020"], "description": "PyTorch implementation of multi-task learning architectures, incl. MTI-Net (ECCV2020). "}
{"name": "lucidrains/parti-pytorch", "full_name": "lucidrains/parti-pytorch", "topics": ["artificial-intelligence", "attention-mechanism", "deep-learning", "text-to-image", "transformers"], "description": "Implementation of Parti, Google's pure attention-based text-to-image neural network, in Pytorch"}
{"name": "bubbliiiing/unet-pytorch", "full_name": "bubbliiiing/unet-pytorch", "topics": [], "description": "\u8fd9\u662f\u4e00\u4e2aunet-pytorch\u7684\u6e90\u7801\uff0c\u53ef\u4ee5\u8bad\u7ec3\u81ea\u5df1\u7684\u6a21\u578b"}
{"name": "scalsol/mega.pytorch", "full_name": "Scalsol/mega.pytorch", "topics": ["video-object-detection", "pytorch"], "description": "Memory Enhanced Global-Local Aggregation for Video Object Detection, CVPR2020"}
{"name": "sforaidl/genrl", "full_name": "SforAiDl/genrl", "topics": ["reinforcement-learning-algorithms", "reinforcement-learning", "machine-learning", "gym", "openai", "python", "data-science", "pytorch", "algorithm-implementations", "benchmarking", "deep-learning", "neural-network", "hacktoberfest"], "description": "A PyTorch reinforcement learning library for generalizable and reproducible algorithm implementations with an aim to improve accessibility in RL"}
{"name": "microsoft/lora", "full_name": "microsoft/LoRA", "topics": ["gpt-2", "adaptation", "language-model", "gpt-3", "low-rank", "pytorch", "deep-learning", "roberta", "deberta"], "description": "Code for loralib, an implementation of \"LoRA: Low-Rank Adaptation of Large Language Models\""}
{"name": "thuwangcy/rechorus", "full_name": "THUwangcy/ReChorus", "topics": ["recommendation", "framework", "pytorch", "ranking"], "description": "\u201cChorus\u201d of recommendation models: a light and flexible PyTorch framework for Top-K recommendation."}
{"name": "yyzharry/imbalanced-regression", "full_name": "YyzHarry/imbalanced-regression", "topics": ["imbalanced-data", "imbalanced-learning", "imbalanced-classification", "imbalance", "regression", "long-tail", "imbalanced-regression", "icml", "icml-2021", "computer-vision", "natural-language-processing", "healthcare"], "description": "[ICML 2021, Long Talk] Delving into Deep Imbalanced Regression"}
{"name": "pykale/pykale", "full_name": "pykale/pykale", "topics": ["machine-learning", "knowledge-aware-learning", "computer-vision", "graph-analysis", "pytorch", "medical-image-analysis", "multimodal-learning", "transfer-learning", "domain-adaptation", "data-science", "deep-learning", "meta-learning", "python", "multimodal"], "description": "Knowledge-Aware machine LEarning (KALE): accessible machine learning from multiple sources for interdisciplinary research, part of the \ud83d\udd25PyTorch ecosystem"}
{"name": "jdai-cv/centerx", "full_name": "JDAI-CV/centerX", "topics": ["centernet", "detectron2", "deep-learning", "object-detection", "fast-reid", "caffe", "onnx", "tensorrt", "centerx"], "description": "This repo is implemented based on detectron2 and centernet"}
{"name": "vinits5/learning3d", "full_name": "vinits5/learning3d", "topics": [], "description": "This is a complete package of recent deep learning methods for 3D point clouds in pytorch (with pretrained models)."}
{"name": "rucaibox/crslab", "full_name": "RUCAIBox/CRSLab", "topics": ["conversational-recommendation", "pytorch", "graph-neural-network", "pretrained-models", "human-machine-interaction", "deep-learning", "dialog-system", "recommender-system", "conversation-system", "recommendation", "text-generation", "knowledge-graph"], "description": "CRSLab is an open-source toolkit for building Conversational Recommender System (CRS)."}
{"name": "tsingz0/pfl-non-iid", "full_name": "TsingZ0/PFL-Non-IID", "topics": ["non-iid", "federated-learning", "personalization", "pytorch", "python", "distributed-computing", "nlp", "cv", "cnn", "rnn", "heterogeneity", "differential-privacy", "privacy", "amazon-reviews", "imagenet", "transformer", "domainnet", "iot"], "description": "Personalized federated learning simulation platform with non-IID and unbalanced dataset"}
{"name": "diyago/gan-for-tabular-data", "full_name": "Diyago/GAN-for-tabular-data", "topics": ["tabular-data", "gans", "train-dataframe", "adversarial-filtering", "deep-learning", "feature-engineering", "gan", "machine-learning", "python"], "description": "We well know GANs for success in the realistic image generation. However, they can be applied in tabular data generation. We will review and examine some recent papers about tabular GANs in action."}
{"name": "xingangpan/deep-generative-prior", "full_name": "XingangPan/deep-generative-prior", "topics": ["generative-adversarial-network", "gan", "deep-learning", "image-restoration", "image-manipulation", "image-prior"], "description": "Code for deep generative prior (ECCV2020 oral)"}
{"name": "untitled-ai/self_supervised", "full_name": "untitled-ai/self_supervised", "topics": [], "description": "A Pytorch-Lightning implementation of self-supervised algorithms"}
{"name": "imlixinyang/hisd", "full_name": "imlixinyang/HiSD", "topics": ["image-to-image-translation", "gan", "disentangled-representations"], "description": "Official pytorch implementation of paper \"Image-to-image Translation via Hierarchical Style Disentanglement\" (CVPR2021 Oral)."}
{"name": "kenziyuliu/ms-g3d", "full_name": "kenziyuliu/MS-G3D", "topics": ["action-recognition", "pretrained-models", "deep-learning", "computer-vision", "skeleton", "pytorch"], "description": "[CVPR 2020 Oral] PyTorch implementation of \"Disentangling and Unifying Graph Convolutions for Skeleton-Based Action Recognition\""}
{"name": "mackelab/sbi", "full_name": "mackelab/sbi", "topics": ["simulation-based-inference", "likelihood-free-inference", "bayesian-inference", "parameter-estimation", "pytorch", "machine-learning"], "description": "Simulation-based inference toolkit"}
{"name": "hongsukchoi/pose2mesh_release", "full_name": "hongsukchoi/Pose2Mesh_RELEASE", "topics": ["single-view", "graph-convolutional-network", "3d-mesh", "2d-human-pose", "3d-human-pose", "3d-human-mesh", "rgb-image", "eccv2020", "eccv"], "description": "Official Pytorch implementation of \"Pose2Mesh: Graph Convolutional Network for 3D Human Pose and Mesh Recovery from a 2D Human Pose\", ECCV 2020"}
{"name": "alex04072000/fusta", "full_name": "alex04072000/FuSta", "topics": ["video-stabilization", "iccv2021", "pytorch", "view-synthesis"], "description": "Hybrid Neural Fusion for Full-frame Video Stabilization"}
{"name": "hkunlp/unifiedskg", "full_name": "HKUNLP/UnifiedSKG", "topics": ["natural-language-processing", "pytorch", "huggingface-transformers", "huggingface-datasets", "structured-knowledge-grounding", "semantic-parsing", "question-answering", "data-to-text", "text-generation", "fact-verification", "multi-task-learning", "prompt-learning"], "description": "[EMNLP 2022] A Unified Framework and Analysis for Structured Knowledge Grounding with Text-to-Text Language Models"}
{"name": "haoxiangsnr/fullsubnet", "full_name": "Audio-WestlakeU/FullSubNet", "topics": ["speech-enhancement", "speech-processing", "speech-separation", "pytorch", "pretrained-model", "paper", "full-band", "sub-band", "single-channel", "noise-reduction", "denoising", "audio", "band", "narrow-band", "reproducible-research", "speech"], "description": "PyTorch implementation of \"FullSubNet: A Full-Band and Sub-Band Fusion Model for Real-Time Single-Channel Speech Enhancement.\""}
{"name": "cavalleria/cavaface", "full_name": "cavalleria/cavaface", "topics": ["face-recognition", "pytorch", "network", "loss", "arcnegface", "arcface", "resnest", "attention-irse", "apex", "randaugment", "mixup", "dataparallel", "model-parallel", "resnet-irse", "curricularface", "cosface", "amsoftmax", "circleloss", "ghostnet", "efficientnet"], "description": "face recognition training project(pytorch)"}
{"name": "maghoumi/pytorch-softdtw-cuda", "full_name": "Maghoumi/pytorch-softdtw-cuda", "topics": ["dynamic-time-warping", "pytorch", "cuda", "deep-learning", "soft-dtw"], "description": "Fast CUDA implementation of (differentiable) soft dynamic time warping for PyTorch using Numba"}
{"name": "tri-ml/dd3d", "full_name": "TRI-ML/dd3d", "topics": ["deep-learning", "pytorch", "computer-vision"], "description": "Official PyTorch implementation of DD3D: Is Pseudo-Lidar needed for Monocular 3D Object detection? (ICCV 2021), Dennis Park*, Rares Ambrus*, Vitor Guizilini, Jie Li, and Adrien Gaidon."}
{"name": "sicara/easy-few-shot-learning", "full_name": "sicara/easy-few-shot-learning", "topics": ["few-shot-learning", "few-shot-recognition", "few-shot-classifcation", "meta-learning", "machine-learning", "pytorch", "image-classification", "deep-learning"], "description": "Ready-to-use code and tutorial notebooks to boost your way into few-shot learning for image classification. "}
{"name": "cardwing/codes-for-pvkd", "full_name": "cardwing/Codes-for-PVKD", "topics": ["cvpr2022", "lidar-segmentation", "nuscenes", "point-cloud-segmentation", "pytorch", "range-image", "semantickitti", "waymo-dataset"], "description": "Point-to-Voxel Knowledge Distillation for LiDAR Semantic Segmentation (CVPR 2022)"}
{"name": "mmasana/facil", "full_name": "mmasana/FACIL", "topics": ["framework", "deep-learning", "machine-learning", "reproducible-research", "incremental-learning", "continual-learning", "lifelong-learning", "survey"], "description": "Framework for Analysis of Class-Incremental Learning with 12 state-of-the-art methods and 3 baselines."}
{"name": "lucidrains/memorizing-transformers-pytorch", "full_name": "lucidrains/memorizing-transformers-pytorch", "topics": ["artificial-intelligence", "deep-learning", "attention-mechanism", "transformers", "memory", "retrieval", "approximate-nearest-neighbors"], "description": "Implementation of Memorizing Transformers (ICLR 2022), attention net augmented with indexing and retrieval of memories using approximate nearest neighbors, in Pytorch"}
{"name": "samuela/git-re-basin", "full_name": "samuela/git-re-basin", "topics": ["deep-learning", "deeplearning", "jax", "machine-learning", "neural-networks"], "description": "Code release for \"Git Re-Basin: Merging Models modulo Permutation Symmetries\""}
{"name": "andrew-qibin/coordattention", "full_name": "houqb/CoordAttention", "topics": ["attention", "mobilenetv2", "mobilenext"], "description": "Code for our CVPR2021 paper coordinate attention"}
{"name": "microsoft/archai", "full_name": "microsoft/archai", "topics": ["python", "pytorch", "machine-learning", "deep-learning", "neural-architecture-search", "nas", "automated-machine-learning", "model-compression", "darts", "petridish", "hyperparameter-optimization", "automl"], "description": "Accelerate your Neural Architecture Search (NAS) through fast, reproducible and modular research."}
{"name": "lucmos/nn-template", "full_name": "grok-ai/nn-template", "topics": ["pytorch", "template", "pytorch-lightning", "wandb", "dvc", "hydra", "research", "deep-learning", "best-practices", "reproducibility", "project-structure", "weights-and-biases", "streamlit", "mkdocs", "github-actions", "best-practises", "pre-commit", "cookiecutter"], "description": "Generic template to bootstrap your PyTorch project."}
{"name": "lucidrains/video-diffusion-pytorch", "full_name": "lucidrains/video-diffusion-pytorch", "topics": ["artificial-intelligence", "deep-learning", "ddpm", "video-generation", "text-to-video"], "description": "Implementation of Video Diffusion Models, Jonathan Ho's new paper extending DDPMs to Video Generation - in Pytorch"}
{"name": "yinboc/few-shot-meta-baseline", "full_name": "yinboc/few-shot-meta-baseline", "topics": ["machine-learning", "few-shot-learning", "pytorch"], "description": "Meta-Baseline: Exploring Simple Meta-Learning for Few-Shot Learning, in ICCV 2021"}
{"name": "xuyige/bert4doc-classification", "full_name": "xuyige/BERT4doc-Classification", "topics": ["natural-language-processing", "bert", "text-classification"], "description": "Code and source for paper ``How to Fine-Tune BERT for Text Classification?``"}
{"name": "kaijieshi7/dynamic-convolution-pytorch", "full_name": "kaijieshi7/Dynamic-convolution-Pytorch", "topics": ["dynamic-convolution"], "description": "Pytorch!!!Pytorch!!!Pytorch!!!  Dynamic Convolution: Attention over Convolution Kernels (CVPR-2020)"}
{"name": "project-monai/monailabel", "full_name": "Project-MONAI/MONAILabel", "topics": ["3d-slicer-extension", "active-learning", "pytorch", "deep-learning", "monai", "segmentation", "medical-imaging", "machine-learning", "3d"], "description": "MONAI Label is an intelligent open source image labeling and learning tool."}
{"name": "kevinzakka/torchnca", "full_name": "kevinzakka/torchnca", "topics": ["pytorch", "nca-python", "neighbourhood-components-analysis", "python", "python3"], "description": "A PyTorch implementation of Neighbourhood Components Analysis."}
{"name": "microsoft/tutel", "full_name": "microsoft/tutel", "topics": ["pytorch", "moe", "mixture-of-experts", "nlp", "transformer"], "description": "Tutel MoE: An Optimized Mixture-of-Experts Implementation"}
{"name": "zikangzhou/hivt", "full_name": "ZikangZhou/HiVT", "topics": ["autonomous-driving", "motion-prediction", "transformer", "cvpr2022"], "description": "[CVPR 2022] HiVT: Hierarchical Vector Transformer for Multi-Agent Motion Prediction"}
{"name": "media-smart/vedadet", "full_name": "Media-Smart/vedadet", "topics": ["object-detection", "single-stage", "toolbox", "pytorch"], "description": "A single stage object detection toolbox based on PyTorch"}
{"name": "shinya7y/universenet", "full_name": "shinya7y/UniverseNet", "topics": ["object-detection", "pytorch", "mmdetection", "waymo-open-dataset"], "description": "USB: Universal-Scale Object Detection Benchmark (BMVC\u20092022)"}
{"name": "tongjilibo/bert4torch", "full_name": "Tongjilibo/bert4torch", "topics": ["bert", "nlp", "pytorch", "bert4keras", "named-entity-recognition", "relation-extraction", "seq2seq", "text-classification", "transformers", "bert4torch"], "description": "pytorch implement of transformers refer to bert4keras"}
{"name": "layumi/seg-uncertainty", "full_name": "layumi/Seg-Uncertainty", "topics": ["ijcai", "domain-adaptation", "semantic-segmentation", "pytorch", "ijcai2020", "pytorch-implementation", "gta5", "cityscapes", "synthia", "robotcar", "self-driving-car", "domainadaptation", "transfer-learning", "mrnet", "ijcv"], "description": "IJCAI2020 & IJCV2021 :city_sunrise: Unsupervised Scene Adaptation with Memory Regularization in vivo "}
{"name": "mpolaris/onnx2tflite", "full_name": "MPolaris/onnx2tflite", "topics": ["onnx2keras", "onnx2tflite", "onnx2tensorflow", "yolov5", "yolov6", "yolov7", "deployment", "onnx", "pytorch2tensorflow", "quantization"], "description": "Tool for onnx->keras or onnx->tflite. If tool is useful for you, please star it."}
{"name": "parthaeth/gif", "full_name": "ParthaEth/GIF", "topics": ["generative-interpretable-faces", "photorealistic-faces", "gan", "photorealism", "gans", "conditonal-gan", "latent-variable-models", "generative-adversarial-network", "generative-models"], "description": "GIF is a photorealistic generative face model with explicit 3D geometric and photometric control."}
{"name": "lturing/tacotronv2_wavernn_chinese", "full_name": "lturing/tacotronv2_wavernn_chinese", "topics": [], "description": "tacotronV2 + wavernn \u5b9e\u73b0\u4e2d\u6587\u8bed\u97f3\u5408\u6210(Tensorflow + pytorch) "}
{"name": "microsoft/cocosnet", "full_name": "microsoft/CoCosNet", "topics": ["image-synthesis", "image-translation", "generative-adversarial-network", "image-manipulation", "gans", "cocosnet", "pytorch", "computer-vision", "deep-learning"], "description": "Cross-domain Correspondence Learning for Exemplar-based Image Translation. (CVPR 2020 Oral)"}
{"name": "microsoft/godel", "full_name": "microsoft/GODEL", "topics": ["data-processing", "dialogue", "dialogue-systems", "machine-learning", "text-data", "text-generation", "transformers", "conversational-ai", "language-grounding", "grounded-generation", "dialogpt", "language-model", "pretrained-model", "pytorch", "transformer"], "description": "Large-scale pretrained models for goal-directed dialog"}
{"name": "rbbrdckybk/ai-art-generator", "full_name": "rbbrdckybk/ai-art-generator", "topics": ["machine-learning", "vqgan-clip", "deep-learning", "image-generation", "clip-guided-diffusion", "generative-art", "stable-diffusion"], "description": "For automating the creation of large batches of AI-generated artwork locally."}
{"name": "bowenc0221/panoptic-deeplab", "full_name": "bowenc0221/panoptic-deeplab", "topics": ["bottom-up", "instance-segmentation", "semantic-segmentation", "deeplab", "panoptic-segmentation", "sementation", "cvpr2020", "cityscapes", "pytorch", "detectron2"], "description": "This is Pytorch re-implementation of our CVPR 2020 paper \"Panoptic-DeepLab: A Simple, Strong, and Fast Baseline for Bottom-Up Panoptic Segmentation\" (https://arxiv.org/abs/1911.10194)"}
{"name": "petuum/adaptdl", "full_name": "petuum/adaptdl", "topics": ["deep-learning", "kubernetes", "pytorch", "distributed-systems", "aws", "distributed-training", "machine-learning", "cloud"], "description": "Resource-adaptive cluster scheduler for deep learning training."}
{"name": "facebookresearch/torcharrow", "full_name": "pytorch/torcharrow", "topics": ["python", "preprocessing", "pytorch"], "description": "High performance model preprocessing library on PyTorch"}
{"name": "yinyunie/total3dunderstanding", "full_name": "yinyunie/Total3DUnderstanding", "topics": ["scene-understanding", "scene-reconstruction", "cvpr2020", "pytorch"], "description": "Implementation of CVPR'20 Oral: Total3DUnderstanding: Joint Layout, Object Pose and Mesh Reconstruction for Indoor Scenes from a Single Image"}
{"name": "hkchengrex/mivos", "full_name": "hkchengrex/MiVOS", "topics": ["computer-vision", "segmentation", "deep-learning", "pytorch", "cvpr2021", "interactive-segmentation", "video-object-segmentation", "video-segmentation"], "description": "[CVPR 2021] Modular Interactive Video Object Segmentation: Interaction-to-Mask, Propagation and Difference-Aware Fusion. Semi-supervised VOS as well!"}
{"name": "postech-cvlab/scnerf", "full_name": "POSTECH-CVLab/SCNeRF", "topics": ["nerf", "implicit-representions", "calibration", "computer-vision", "deep-learning", "self-calibration", "pytorch"], "description": "[ICCV21] Self-Calibrating Neural Radiance Fields"}
{"name": "nightsnack/yolobile", "full_name": "nightsnack/YOLObile", "topics": ["deep-learning", "object-detection", "yolov4"], "description": "This is the implementation of YOLObile: Real-Time Object Detection on Mobile Devices via Compression-Compilation Co-Design"}
{"name": "layumi/aicity-reid-2020", "full_name": "layumi/AICIty-reID-2020", "topics": ["vehicle", "pytorch", "paddlepaddle", "vehicle-reid", "veri-776", "aicity", "cityflow", "cvpr2020"], "description": ":red_car:  The 1st Place Submission to AICity Challenge 2020 re-id track (Baidu-UTS submission)"}
{"name": "breezedeus/cnstd", "full_name": "breezedeus/CnSTD", "topics": ["object-detection", "pytorch", "text-detection", "deep-learning", "math-formula-detection"], "description": "CnSTD: \u57fa\u4e8e PyTorch/MXNet \u7684 \u4e2d\u6587/\u82f1\u6587 \u573a\u666f\u6587\u5b57\u68c0\u6d4b\uff08Scene Text Detection\uff09Python3 \u5305"}
{"name": "maclory/spsr", "full_name": "Maclory/SPSR", "topics": ["structure-preserving", "super-resolution", "image-restoration", "computer-vision", "deep-learning"], "description": "Pytorch implementation of Structure-Preserving Super Resolution with Gradient Guidance (CVPR 2020 & TPAMI 2021) "}
{"name": "assafshocher/resizeright", "full_name": "assafshocher/ResizeRight", "topics": [], "description": "The correct way to resize images or tensors. For Numpy or Pytorch (differentiable)."}
{"name": "peizhuoli/neural-blend-shapes", "full_name": "PeizhuoLi/neural-blend-shapes", "topics": ["computer-graphics", "computer-animation", "deep-learning", "character-animation", "rigging-framework"], "description": "An end-to-end library for automatic character rigging, skinning, and blend shapes generation, as well as a visualization tool [SIGGRAPH 2021]"}
{"name": "yxuansu/simctg", "full_name": "yxuansu/SimCTG", "topics": ["textgeneration", "contrastive-learning", "nlp", "languagemodel", "decode", "language-modeling", "deeplearning"], "description": "[NeurIPS'22 Spotlight] A Contrastive Framework for Neural Text Generation"}
{"name": "snap-stanford/deepsnap", "full_name": "snap-stanford/deepsnap", "topics": ["pytorch", "deep-learning", "graph-neural-networks"], "description": "Python library assists deep learning on graphs"}
{"name": "sniklaus/softmax-splatting", "full_name": "sniklaus/softmax-splatting", "topics": ["pytorch", "python", "cuda", "deep-learning", "cupy"], "description": "an implementation of softmax splatting for differentiable forward warping using PyTorch"}
{"name": "salesforce/warp-drive", "full_name": "salesforce/warp-drive", "topics": ["reinforcement-learning", "gpu", "cuda", "multiagent-reinforcement-learning", "deep-learning", "high-throughput", "pytorch", "numba"], "description": "Extremely Fast End-to-End Deep Multi-Agent Reinforcement Learning Framework on a GPU (JMLR 2022)"}
{"name": "xinjli/allosaurus", "full_name": "xinjli/allosaurus", "topics": ["speech", "speech-recognition", "pytorch", "phonetics"], "description": "Allosaurus is a pretrained universal phone recognizer for more than 2000 languages"}
{"name": "hhousen/transformersum", "full_name": "HHousen/TransformerSum", "topics": ["automatic-summarization", "machine-learning", "extractive-summarization", "bert", "roberta", "distilbert", "albert", "summarization", "transformer-models", "pytorch-lightning", "summarization-dataset", "text-summarization"], "description": "Models to perform neural summarization (extractive and abstractive) using machine learning transformers and a tool to convert abstractive summarization datasets to the extractive task."}
{"name": "jtl1207/comic-translation", "full_name": "jtl1207/comic-translation", "topics": ["ocr", "deep-learning", "manga", "paddleocr", "chinese-translation", "text-detection"], "description": "\u57fa\u4e8e\u6df1\u5ea6\u5b66\u4e60\u7684\u6f2b\u753b\u7ffb\u8bd1\u8f85\u52a9\u5de5\u5177\uff0c\u5305\u542b\u7ffb\u8bd1\u3001\u6717\u8bfb\u3001\u56fe\u50cf\u53bb\u5b57\u3001\u81ea\u52a8\u5d4c\u5b57\u529f\u80fd\u3002  \u76ee\u7684\u662f\u5e2e\u52a9\u975e\u4e13\u4e1a\u6c49\u5316\u4eba\u5458\u5b8c\u6210\u66f4\u7b80\u5355\uff0c\u5feb\u901f\u7684\u7ffb\u8bd1\u4efb\u52a1\u3002"}
{"name": "yl305237731/flexible-yolov5", "full_name": "Bobo-y/flexible-yolov5", "topics": ["yolov5", "resnet", "moblienet", "backbone", "neck", "se", "cbam", "efficientnet", "pytorch", "shufflenet", "hrnet", "dcnv2", "tensorrt", "object-detection", "swin-transformer", "gcn", "yolov3"], "description": "More readable and flexible yolov5 with more backbone(gcn, resnet, shufflenet, moblienet, efficientnet, hrnet, swin-transformer, etc) and (cbam\uff0cdcn and so on), and tensorrt"}
{"name": "ai-forever/ghost", "full_name": "ai-forever/ghost", "topics": ["computer-vision", "deep-learning", "deepfake", "faceswap", "pytorch", "deep-face-swap", "face-swap", "ghost", "ghost-faceswap", "ghost-swap"], "description": "A new one shot face swap approach for image and video domains"}
{"name": "miemie2013/keras-yolov4", "full_name": "miemie2013/Keras-YOLOv4", "topics": ["yolov4", "yolo", "keras", "diou", "ciou", "ppyolo"], "description": "yolov4 42.0% mAP.ppyolo 45.1% mAP."}
{"name": "microsoft/cvt", "full_name": "microsoft/CvT", "topics": ["cvt", "deep-learning", "classification", "imagenet", "computer-vision"], "description": "This is an official implementation of CvT: Introducing Convolutions to Vision Transformers."}
{"name": "phamquiluan/residualmaskingnetwork", "full_name": "phamquiluan/ResidualMaskingNetwork", "topics": ["fer2013", "facial-expression-recognition", "residual-masking-network", "pytorch", "image-classification"], "description": "ICPR 2020: Facial Expression Recognition using Residual Masking Network"}
{"name": "jankrepl/mltype", "full_name": "jankrepl/mltype", "topics": ["typing-practice", "typing", "typingspeedtest", "typing-trainer", "machine-learning", "deep-learning", "touch-typing"], "description": "Command line tool for improving typing skills (programmers friendly)"}
{"name": "archinetai/surgeon-pytorch", "full_name": "archinetai/surgeon-pytorch", "topics": ["artificial-intelligence", "deep-learning", "pytorch"], "description": "A library to inspect and extract intermediate layers of PyTorch models."}
{"name": "da-southampton/read_bert_code", "full_name": "DA-southampton/Read_Bert_Code", "topics": [], "description": "Bert\u6e90\u7801\u9605\u8bfb\u4e0e\u8bb2\u89e3(Pytorch\u7248\u672c)-\u4ee5BERT\u6587\u672c\u5206\u7c7b\u4ee3\u7801\u4e3a\u4f8b\u5b50"}
{"name": "mit-han-lab/torchquantum", "full_name": "mit-han-lab/torchquantum", "topics": ["pytorch-quantum", "quantum", "quantum-machine-learning", "neural-network", "machine-learning", "quantum-computing", "pytorch", "deep-learning", "system", "ml-for-systems", "quantum-simulation", "quantum-neural-network", "parameterized-quantum-circuit"], "description": "A PyTorch-based framework for Quantum Simulation, Quantum Machine Learning, Quantum Neural Networks, Parameterized Quantum Circuits with support for easy deployments on real quantum computers."}
{"name": "allenai/dont-stop-pretraining", "full_name": "allenai/dont-stop-pretraining", "topics": ["natural-language-processing", "pretrained-language-model"], "description": "Code associated with the Don't Stop Pretraining ACL 2020 paper"}
{"name": "continvvm/continuum", "full_name": "Continvvm/continuum", "topics": ["continual-learning", "lifelong-learning", "incremental-learning", "online-learning", "pytorch", "dataloader", "dataset"], "description": "A clean and simple data loading library for Continual Learning"}
{"name": "majumderb/rezero", "full_name": "majumderb/rezero", "topics": ["pytroch", "transformer", "resnet", "language-modeling", "deep-neural-networks"], "description": "Official PyTorch Repo for \"ReZero is All You Need: Fast Convergence at Large Depth\""}
{"name": "gretelai/gretel-synthetics", "full_name": "gretelai/gretel-synthetics", "topics": ["differential-privacy", "artificial-intelligence", "tensorflow", "privacy", "synthetic-data"], "description": "Synthetic data generators for structured and unstructured text, featuring differentially private learning."}
{"name": "yandex-research/ddpm-segmentation", "full_name": "yandex-research/ddpm-segmentation", "topics": ["deep-learning", "semantic-segmentation"], "description": "Label-Efficient Semantic Segmentation with Diffusion Models (ICLR'2022)"}
{"name": "iampara0x/yuno", "full_name": "IAmPara0x/Yuno", "topics": ["search-engine", "anime", "deep-learning", "python", "transformers"], "description": "Yuno is context based search engine for anime."}
{"name": "microsoft/styleswin", "full_name": "microsoft/StyleSwin", "topics": ["computer-vision", "deep-learning", "deep-neural-networks", "pytorch", "generative-adversarial-network", "gans", "image-generation", "image-synthesis", "styleswin", "transformer"], "description": "[CVPR 2022] StyleSwin: Transformer-based GAN for High-resolution Image Generation"}
{"name": "kakaoenterprise/jorldy", "full_name": "kakaoenterprise/JORLDY", "topics": ["framework", "reinforcement-learning", "gym", "mlagents", "pytorch"], "description": "Repository for Open Source Reinforcement Learning Framework JORLDY"}
{"name": "tatp22/linformer-pytorch", "full_name": "tatp22/linformer-pytorch", "topics": ["artificial-intelligence", "deep-learning", "attention-mechanism", "pytorch", "machine-learning", "linformer", "paper"], "description": "My take on a practical implementation of Linformer for Pytorch."}
{"name": "julesbelveze/time-series-autoencoder", "full_name": "JulesBelveze/time-series-autoencoder", "topics": ["autoencoder", "lstm-autoencoder", "attention-mechanisms", "time-series", "multivariate-timeseries", "pytorch", "forecasting"], "description": ":chart_with_upwards_trend: PyTorch Dual-Attention LSTM-Autoencoder For Multivariate Time Series :chart_with_upwards_trend:"}
{"name": "fangjinhuawang/patchmatchnet", "full_name": "FangjinhuaWang/PatchmatchNet", "topics": ["multi-view-stereo", "deep-learning", "3d-reconstruction"], "description": "Official code of PatchmatchNet (CVPR 2021 Oral)"}
{"name": "nupurkmr9/vision-aided-gan", "full_name": "nupurkmr9/vision-aided-gan", "topics": ["computer-vision", "computer-graphics", "pytorch", "generative-adversarial-network", "gans", "pretrained-models", "image-generation"], "description": "Ensembling Off-the-shelf Models for GAN Training (CVPR 2022 Oral)"}
{"name": "yuxumin/pointr", "full_name": "yuxumin/PoinTr", "topics": ["deep-learning", "computer-vision", "pointcloud-completion", "vision-transformers", "3dvision", "iccv2021"], "description": "[ICCV 2021 Oral] PoinTr: Diverse Point Cloud Completion with Geometry-Aware Transformers"}
{"name": "leondgarse/keras_cv_attention_models", "full_name": "leondgarse/keras_cv_attention_models", "topics": ["tensorflow", "visualizing", "keras", "attention", "model", "imagenet", "coco", "recognition", "detection", "anchor-free", "tf", "tf2"], "description": "Keras beit,botnet,CMT,CoaT,CoAtNet,convnext,cotnet,davit,efficientdet,edgenext,efficientformer,efficientnet,fbnet,flexivit,gcvit,ghostnet,gmlp,gpvit,halonet,hornet,iformer,lcnet,levit,maxvit,mlp-mixer,mobilevit,nat,nfnets,pvt,regnet,resmlp,resnest,resnext,resnetd,swin,tinynet,uniformer,volo,wavemlp,yolor,yolov7,yolox"}
{"name": "csteinmetz1/auraloss", "full_name": "csteinmetz1/auraloss", "topics": ["loss-functions", "pytorch", "audio"], "description": "Collection of audio-focused loss functions in PyTorch"}
{"name": "ternaus/retinaface", "full_name": "ternaus/retinaface", "topics": ["pytorch", "deeplearning", "face-detection", "retinaface", "object-detection"], "description": "The remake of the https://github.com/biubug6/Pytorch_Retinaface"}
{"name": "derrickxunu/opencood", "full_name": "DerrickXuNu/OpenCOOD", "topics": ["autonomous-driving", "multi-agent-perception", "multi-agent-systems", "simulations", "collaborative-perception", "computer-vision", "deep-learning", "pytorch"], "description": "[ICRA 2022&2023] An opensource framework for cooperative detection. Official implementation for OPV2V."}
{"name": "vballoli/nfnets-pytorch", "full_name": "vballoli/nfnets-pytorch", "topics": ["pytorch", "image-classification", "deepmind", "adaptive-gradient-clipping", "nfnets", "sota", "paper", "sgd"], "description": "NFNets and Adaptive Gradient Clipping for SGD implemented in PyTorch. Find explanation at tourdeml.github.io/blog/"}
{"name": "cavalleria/cavaface.pytorch", "full_name": "cavalleria/cavaface", "topics": ["face-recognition", "pytorch", "network", "loss", "arcnegface", "arcface", "resnest", "attention-irse", "apex", "randaugment", "mixup", "dataparallel", "model-parallel", "resnet-irse", "curricularface", "cosface", "amsoftmax", "circleloss", "ghostnet", "efficientnet"], "description": "face recognition training project(pytorch)"}
{"name": "noahcao/oc_sort", "full_name": "noahcao/OC_SORT", "topics": ["tracking", "computer-vision", "deep-learning", "object-detection", "object-tracking"], "description": "The official repo for OC-SORT: Observation-Centric SORT on video Multi-Object Tracking. OC-SORT is simple, online and robust to occlusion/non-linear motion."}
{"name": "thunlp/opendelta", "full_name": "thunlp/OpenDelta", "topics": ["nlp", "nlp-library", "pretrained-language-model", "parameter-efficient-learning", "deep-learning"], "description": "A plug-and-play library for parameter-efficient-tuning (Delta Tuning)"}
{"name": "onion-liu/blendgan", "full_name": "onion-liu/BlendGAN", "topics": ["generative-adversarial-network", "gan", "image-generation", "style-transfer"], "description": "Official PyTorch implementation of \"BlendGAN: Implicitly GAN Blending for Arbitrary Stylized Face Generation\" (NeurIPS 2021)"}
{"name": "mvig-sjtu/alphaction", "full_name": "MVIG-SJTU/AlphAction", "topics": ["action-detection", "spatio-temporal-action-localization", "alphaction", "alpha-action", "action-recognition", "state-of-the-art", "pytorch", "torch", "gpu", "ava", "demo-video", "ava-dataset", "model-zoo"], "description": "Spatio-Temporal Action Localization System"}
{"name": "dvlab-research/blocknerfpytorch", "full_name": "sjtuytc/LargeScaleNeRFPytorch", "topics": ["nerf", "nerf-w", "pytorch-implementation", "block-nerf", "city-nerf", "custum-nerf", "mega-nerf", "view-synthesis", "weekly-nerf", "weekly", "classified", "pytorch-implementations", "pytorch", "pytorch-lightning", "chinese-translation", "deep-learning"], "description": "1. Non-official implementation of Block-NeRF and Mega-NeRF in Pytorch. 2. Train your large-scale NeRF in the wild. 3. Weekly classified NeRF literature."}
{"name": "justin-tan/high-fidelity-generative-compression", "full_name": "Justin-Tan/high-fidelity-generative-compression", "topics": ["image-compression", "generative-adversarial-networks", "entropy-coding", "pytorch", "computer-vision", "machine-learning"], "description": "Pytorch implementation of High-Fidelity Generative Image Compression + Routines for neural image compression"}
{"name": "westlake-ai/openmixup", "full_name": "Westlake-AI/openmixup", "topics": ["pytorch", "awesome-list", "awesome-mim", "awesome-mixup", "contrastive-learning", "data-augmentation", "image-classifcation", "imagenet", "masked-image-modeling", "mixup", "self-supervised-learning", "semi-supervised-learning", "vision-transformer", "deep-learning", "benchmark", "automix"], "description": "CAIRI Supervised, Semi- and Self-Supervised Visual Representation Learning Toolbox and Benchmark"}
{"name": "haofanwang/score-cam", "full_name": "haofanwang/Score-CAM", "topics": ["score-cam", "cam", "cnn-visualization-technique", "saliency", "cnn-visualization", "pytorch", "visual-explanations", "explainability", "class-activation-maps", "gradient-free", "heatmap", "scorecam", "grad-cam", "gradcam"], "description": "Official implementation of Score-CAM in PyTorch"}
{"name": "uvipen/tetris-deep-q-learning-pytorch", "full_name": "uvipen/Tetris-deep-Q-learning-pytorch", "topics": ["reinforcement-learning", "deep-q-network", "deep-q-learning", "pytorch", "cv2"], "description": "Deep Q-learning for playing tetris game"}
{"name": "mishalaskin/curl", "full_name": "MishaLaskin/curl", "topics": ["deep-learning", "contrastive-loss", "contrastive-learning", "contrastive-predictive-coding", "deep-reinforcement-learning", "deep-rl", "reinforcement-learning", "reinforcement-learning-algorithms", "curl", "sac", "gpu", "off-policy", "model-free-rl", "deep-neural-networks", "deeplearning", "deep-q-network", "deep-q-learning", "deep-learning-algorithms", "deeplearning-ai", "reinforcement-agents"], "description": "CURL: Contrastive Unsupervised Representation Learning for Sample-Efficient Reinforcement Learning"}
{"name": "wiki2020/facepose_pytorch", "full_name": "WIKI2020/FacePose_pytorch", "topics": ["pytorch", "facepose-pytorch", "headpose", "emotion-detection", "emotion-recognition"], "description": "\ud83d\udd25\ud83d\udd25The pytorch implement of the head pose estimation(yaw,roll,pitch) and emotion detection with SOTA performance in real time.Easy to deploy, easy to use, and high accuracy.Solve all problems of face detection at one time.(\u6781\u7b80\uff0c\u6781\u5feb\uff0c\u9ad8\u6548\u662f\u6211\u4eec\u7684\u5b97\u65e8)"}
{"name": "microsoft/cocosnet-v2", "full_name": "microsoft/CoCosNet-v2", "topics": ["pytorch", "generative-adversarial-network", "image-synthesis", "image-translation", "gans", "image-manipulation", "cocosnet", "computer-vision", "deep-learning", "image-generation"], "description": "CoCosNet v2: Full-Resolution Correspondence Learning for Image Translation"}
{"name": "thunlp/few-nerd", "full_name": "thunlp/Few-NERD", "topics": ["nlp", "named-entity-recognition", "entity-typing", "deep-learning", "few-shot-learning"], "description": "Code and data of ACL 2021 paper \"Few-NERD: A Few-shot Named Entity Recognition Dataset\""}
{"name": "mcg-nju/tdn", "full_name": "MCG-NJU/TDN", "topics": ["action-recognition", "video-understanding", "video-classification", "cvpr2021", "pytorch", "temporal-modeling"], "description": "[CVPR 2021] TDN: Temporal Difference Networks for Efficient Action Recognition "}
{"name": "pdebench/pdebench", "full_name": "pdebench/PDEBench", "topics": ["ai", "benchmark", "jax", "machine-learning", "pytorch", "scientific", "scientific-computing", "sciml", "simulation"], "description": "PDEBench: An Extensive Benchmark for Scientific Machine Learning"}
{"name": "zwwwayne/k-net", "full_name": "ZwwWayne/K-Net", "topics": ["panoptic-segmentation", "image-segmentation", "pytorch", "mmsegmentation", "mmdetection", "semantic-segmentation"], "description": "[NeurIPS2021] Code Release of K-Net: Towards Unified Image Segmentation"}
{"name": "microsoft/ptgnn", "full_name": "microsoft/ptgnn", "topics": ["graph-neural-networks", "deep-learning", "pytorch", "geometric-deep-learning", "gnn"], "description": "A PyTorch Graph Neural Network Library"}
{"name": "princeton-nlp/pure", "full_name": "princeton-nlp/PURE", "topics": ["nlp", "relation-extraction"], "description": "NAACL'2021: A Frustratingly Easy Approach for Entity and Relation Extraction https://arxiv.org/abs/2010.12812"}
{"name": "rikorose/deepfilternet", "full_name": "Rikorose/DeepFilterNet", "topics": ["pytorch", "audio", "deep-learning", "speech-enhancement", "noise-suppression", "speech", "rust"], "description": "Noise supression using deep filtering"}
{"name": "dmmaze/ballonstranslator", "full_name": "dmMaze/BallonsTranslator", "topics": ["comics", "computer-aided-translation", "deep-learning", "manga", "ocr", "pyqt5", "qt5", "scene-text-detection", "inpainting", "pytorch", "computer-vision", "anime", "auto-translation", "chinese-translation", "qt", "qt6", "pyqt"], "description": "\u6df1\u5ea6\u5b66\u4e60\u8f85\u52a9\u6f2b\u753b\u7ffb\u8bd1\u5de5\u5177, \u652f\u6301\u4e00\u952e\u673a\u7ffb\u548c\u7b80\u5355\u7684\u56fe\u50cf/\u6587\u672c\u7f16\u8f91 | Yet another computer-aided comic/manga translation tool powered by deeplearning"}
{"name": "indonlp/indonlu", "full_name": "IndoNLP/indonlu", "topics": ["indonesian", "bahasa", "bert", "benchmark", "datasets", "nlp", "nlu", "aacl", "indobert", "indobert-models", "indonlu", "indo4b", "indobert-lite", "indonlp"], "description": "The first-ever vast natural language processing benchmark for Indonesian Language. We provide multiple downstream tasks, pre-trained IndoBERT models, and a starter code! (AACL-IJCNLP 2020)"}
{"name": "smilelab-fl/fedlab", "full_name": "SMILELab-FL/FedLab", "topics": ["fedlab", "federated-learning", "pytorch", "machine-learning", "federated-learning-framework", "pytorch-federated-learning", "deep-learning"], "description": "A flexible Federated Learning Framework based on PyTorch, simplifying your Federated Learning research."}
{"name": "vanderschaarlab/mlforhealthlabpub", "full_name": "vanderschaarlab/mlforhealthlabpub", "topics": ["machine-learning", "healthcare", "deep-learning"], "description": "Machine Learning and Artificial Intelligence for Medicine. "}
{"name": "zgcr/simpleaicv_pytorch_training_examples_on_imagenet_coco_ade20k", "full_name": "zgcr/SimpleAICV_pytorch_training_examples_on_ImageNet_COCO_ADE20K", "topics": ["pytorch", "coco", "imagenet", "cifar100", "darknet", "fcos", "resnet", "retinanet", "centernet", "ttfnet", "repvgg", "mae", "dino", "vit", "voc", "ade20k", "regnet"], "description": "SimpleAICV:pytorch training and testing examples on ImageNet(ILSVRC2012)/COCO2017/VOC2007+2012/CIFAR100/AED20K datasets.Include classification/object detection/distillation/contrastive learning/masked image modeling."}
{"name": "youngwanlee/vovnet-detectron2", "full_name": "youngwanLEE/vovnet-detectron2", "topics": ["vovnet", "detectron2", "object-detection", "instance-segmentation", "pytorch", "panoptic-segmentation", "cvpr2020"], "description": "VoVNet backbone networks for detectron2, in CVPR 2020"}
{"name": "yueliu1999/awesome-deep-graph-clustering", "full_name": "yueliu1999/Awesome-Deep-Graph-Clustering", "topics": ["deep-clustering", "graph-neural-networks", "self-supervised-learning", "representation-learning", "surveys", "data-mining", "deep-learning", "graph-convolutional-networks", "graph-embedding", "network-embedding", "gcn", "machine-learning", "clustering", "data-mining-algorithms", "graphclustering"], "description": "Awesome Deep Graph Clustering is a collection of SOTA, novel deep graph clustering methods (papers, codes, and datasets)."}
{"name": "lilanxiao/rotated_iou", "full_name": "lilanxiao/Rotated_IoU", "topics": ["pytorch", "rotated-boxes-iou", "object-detection", "iou-loss", "differentiable-iou"], "description": "Differentiable IoU of rotated bounding boxes using Pytorch"}
{"name": "autonomousvision/unimatch", "full_name": "autonomousvision/unimatch", "topics": ["cross-attention", "depth", "stereo", "transformer", "matching", "unified-model", "optical-flow", "correspondence"], "description": "Unifying Flow, Stereo and Depth Estimation"}
{"name": "fuy34/superpixel_fcn", "full_name": "fuy34/superpixel_fcn", "topics": ["superpixel", "deep-learning", "pytorch"], "description": "[CVPR\u201820] SpixelFCN: Superpixel Segmentation with Fully Convolutional Network"}
{"name": "dog-qiuqiu/fastestdet", "full_name": "dog-qiuqiu/FastestDet", "topics": ["computer-vision", "deep-learning", "object-detection"], "description": ":zap: A newly designed ultra lightweight anchor free target detection algorithm\uff0c weight only 250K parameters\uff0c reduces the time consumption by 10% compared with yolo-fastest, and the post-processing is simpler"}
{"name": "torchmd/torchmd", "full_name": "torchmd/torchmd", "topics": ["molecular-dynamics", "coarse-grained-molecular-dynamics", "machine-learning", "neural-networks", "pytorch", "pytorch-lightning"], "description": "End-To-End Molecular Dynamics (MD) Engine using PyTorch"}
{"name": "facebookresearch/neuralcompression", "full_name": "facebookresearch/NeuralCompression", "topics": ["python", "machine-learning", "deep-learning", "compression", "neural-compression", "pytorch", "jax"], "description": "A collection of tools for neural compression enthusiasts."}
{"name": "mir-group/nequip", "full_name": "mir-group/nequip", "topics": ["machine-learning", "atomistic-simulations", "molecular-dynamics", "computational-chemistry", "deep-learning", "interatomic-potentials", "force-fields", "pytorch", "drug-discovery", "materials-science"], "description": "NequIP is a code for building E(3)-equivariant interatomic potentials"}
{"name": "dvl-tum/mot_neural_solver", "full_name": "dvl-tum/mot_neural_solver", "topics": ["multi-object-tracking", "graph-neural-networks", "pytorch"], "description": "Official PyTorch implementation of \"Learning a Neural Solver for Multiple Object Tracking\" (CVPR 2020 Oral)."}
{"name": "angeloucn/dc-unet", "full_name": "AngeLouCN/DC-UNet", "topics": ["dc-unet", "medical-image-segmentation", "keras-tensorflow", "python3", "dcunet", "pytorch", "segmentation"], "description": "We proposed a novel U-Net-based model -- DC-UNet to do medical image segmentation."}
{"name": "ai-forever/sber-swap", "full_name": "ai-forever/ghost", "topics": ["computer-vision", "deep-learning", "deepfake", "faceswap", "pytorch", "deep-face-swap", "face-swap", "ghost", "ghost-faceswap", "ghost-swap"], "description": "A new one shot face swap approach for image and video domains"}
{"name": "gradsflow/gradsflow", "full_name": "gradsflow/gradsflow", "topics": ["automl", "pytorch", "autoai", "deeplearning", "artificial-intelligence", "python", "machine-learning"], "description": "An open-source AutoML Library based on PyTorch"}
{"name": "jerryji1993/dnabert", "full_name": "jerryji1993/DNABERT", "topics": ["kmer", "dnabert-model", "kmer-format", "gpu", "sequence", "genome", "machine-learning", "deep-learning", "natural-language-processing", "nlp"], "description": "DNABERT: pre-trained Bidirectional Encoder Representations from Transformers model for DNA-language in genome"}
{"name": "tinyzeamays/circleloss", "full_name": "TinyZeaMays/CircleLoss", "topics": [], "description": "Pytorch implementation of the paper \"Circle Loss: A Unified Perspective of Pair Similarity Optimization\""}
{"name": "astra-vision/monoscene", "full_name": "astra-vision/MonoScene", "topics": ["nyu-depth-v2", "semantic-scene-completion", "semantic-scene-understanding", "single-image-reconstruction", "monocular", "2d-to-3d", "semantic-kitti", "kitti-360", "mayavi", "pytorch", "deep-learning", "computer-vision", "cvpr22", "cvpr2022"], "description": "MonoScene: Monocular 3D Semantic Scene Completion. CVPR 2022"}
{"name": "r1j1t/contextualspellcheck", "full_name": "R1j1t/contextualSpellCheck", "topics": ["spacy", "spacy-extension", "nlp", "spellcheck", "preprocessing", "bert", "help-wanted", "chatbot", "spellchecker", "python-spelling-corrector", "oov", "spelling-correction", "spelling-corrections", "natural-language-processing", "python"], "description": "\u2714\ufe0fContextual word checker for better suggestions"}
{"name": "adefossez/julius", "full_name": "adefossez/julius", "topics": ["dsp", "pytorch"], "description": "Fast PyTorch based DSP for audio and 1D signals"}
{"name": "datasystemslab/geotorchai", "full_name": "DataSystemsLab/GeoTorchAI", "topics": ["classification-model", "convlstm-pytorch", "deep-learning", "deep-neural-networks", "deepsat", "prediction-model", "raster-data", "satellite-images", "segmentation-models", "sequence-models", "spatial-data-analysis", "spatio-temporal-analysis", "spatio-temporal-models", "spatio-temporal-prediction", "st-resnet", "satellite-classification"], "description": "GeoTorchAI: A Spatiotemporal Deep Learning Framework (https://dl.acm.org/doi/abs/10.1145/3557915.3561036)"}
{"name": "lucidrains/g-mlp-pytorch", "full_name": "lucidrains/g-mlp-pytorch", "topics": ["artificial-intelligence", "deep-learning", "multilayer-perceptron"], "description": "Implementation of gMLP, an all-MLP replacement for Transformers, in Pytorch"}
{"name": "nvlabs/gcvit", "full_name": "NVlabs/GCVit", "topics": ["vision-transformer", "ade20k", "coco", "deep-learning", "imagenet", "imagenet-classification", "object-detection", "pre-train", "pre-trained-model", "self-attention", "semantic-segmentation", "backbone", "visual-recognition"], "description": "Official PyTorch implementation of Global Context Vision Transformers"}
{"name": "microsoft/lmops", "full_name": "microsoft/LMOps", "topics": ["nlp", "agi", "gpt", "llm", "lm", "pretraining", "prompt", "lmops", "promptist", "x-prompt", "language-model"], "description": "General technology for enabling AI capabilities w/ LLMs and MLLMs"}
{"name": "eliahuhorwitz/deepsim", "full_name": "eliahuhorwitz/DeepSIM", "topics": ["single-image", "image-editing", "deep-neural-networks", "generative-adversarial-network", "computer-vision", "computer-graphics", "edge-to-image", "segmantation-to-image", "pytorch", "image-to-image-translation", "deep-learning", "iccv2021"], "description": "Official PyTorch implementation of the paper: \"DeepSIM: Image Shape Manipulation from a Single Augmented Training Sample\" (ICCV 2021 Oral)"}
{"name": "openbmb/bminf", "full_name": "OpenBMB/BMInf", "topics": ["deep-learning", "gpu", "pretrained-language-models"], "description": "Efficient Inference for Big Models"}
{"name": "davidefiocco/streamlit-fastapi-model-serving", "full_name": "davidefiocco/streamlit-fastapi-model-serving", "topics": ["fastapi", "streamlit", "docker-compose", "pytorch", "pycones"], "description": "Simple web app example serving a PyTorch model using streamlit and FastAPI"}
{"name": "wutong16/distributionbalancedloss", "full_name": "wutong16/DistributionBalancedLoss", "topics": [], "description": "Pytorch implementation for \"Distribution-Balanced Loss for Multi-Label Classification in Long-Tailed Datasets\" (ECCV 2020 Spotlight)"}
{"name": "tarun005/flavr", "full_name": "tarun005/FLAVR", "topics": ["slomo-filter", "video", "8x-interpolation", "artificial-intelligence", "deep-learning", "machine-learning"], "description": "Code for FLAVR: A fast and efficient frame interpolation technique."}
{"name": "jackaduma/cyclegan-vc2", "full_name": "jackaduma/CycleGAN-VC2", "topics": ["voice-conversion", "cyclegan-vc2", "cyclegan", "gan", "deeplearning", "voice-cloning", "pytorch-implementation", "cyclegan-vc", "speech-synthesis", "deep-learning", "pix2pix", "aigc"], "description": "Voice Conversion by CycleGAN (\u8bed\u97f3\u514b\u9686/\u8bed\u97f3\u8f6c\u6362): CycleGAN-VC2"}
{"name": "lava-nc/lava", "full_name": "lava-nc/lava", "topics": ["neuromorphic-computing", "neuromorphic", "deep-learning", "neural-networks", "neuroscience", "python"], "description": "A Software Framework for Neuromorphic Computing"}
{"name": "graphdeeplearning/graphtransformer", "full_name": "graphdeeplearning/graphtransformer", "topics": ["graph-transformer", "transformers", "transformer", "attention", "graph-neural-networks", "graph-deep-learning", "aaai", "transformer-networks"], "description": "Graph Transformer Architecture. Source code for \"A Generalization of Transformer Networks to Graphs\", DLG-AAAI'21."}
{"name": "aimagelab/mammoth", "full_name": "aimagelab/mammoth", "topics": ["pytorch", "continual-learning", "neurips2020", "knowledge-distillation", "deep-learning", "der", "experience-replay", "dark-experience-replay"], "description": "An Extendible (General) Continual Learning Framework based on Pytorch - official codebase of Dark Experience for General Continual Learning"}
{"name": "thohemp/6drepnet", "full_name": "thohemp/6DRepNet", "topics": ["head", "pose", "estimation", "facial", "analysis", "biwi", "aflw2000", "orientation", "6d", "head-pose-estimation", "head-pose", "pytorch", "pytorch-implementation"], "description": "Official Pytorch implementation of  6DRepNet: 6D Rotation representation for unconstrained head pose estimation."}
{"name": "ki6an/fastt5", "full_name": "Ki6an/fastT5", "topics": ["python", "t5", "onnx", "onnxruntime", "quantization", "fastt5", "nlp", "fast", "quantized-onnx-models", "translation", "question-answering", "inference-speed", "pytorch", "inference", "deep-learning", "transformer"], "description": "\u26a1 boost inference speed of T5 models by 5x & reduce the model size by 3x."}
{"name": "dengpingfan/pranet", "full_name": "DengPingFan/PraNet", "topics": ["medical-image-segmentation", "polyp-segmentation", "reverse-attention", "deep-learning"], "description": "PraNet: Parallel Reverse Attention Network for Polyp Segmentation, MICCAI 2020 (Oral). Code using Jittor Framework is available."}
{"name": "jasoncao11/nlp-notebook", "full_name": "jasoncao11/nlp-notebook", "topics": ["textcnn", "textrcnn", "bilstm-crf-model", "bilstm-attention", "fasttext-embeddings", "transformer-pytorch", "bert-chinese", "textrcnn-bert", "distill-bert", "seq2seq", "gpt2", "text-classification", "glove", "skip-gram", "nlp", "pytorch", "bert", "natural-language-processing", "bert-ner", "electra"], "description": "NLP \u9886\u57df\u5e38\u89c1\u4efb\u52a1\u7684\u5b9e\u73b0\uff0c\u5305\u62ec\u65b0\u8bcd\u53d1\u73b0\u3001\u4ee5\u53ca\u57fa\u4e8epytorch\u7684\u8bcd\u5411\u91cf\u3001\u4e2d\u6587\u6587\u672c\u5206\u7c7b\u3001\u5b9e\u4f53\u8bc6\u522b\u3001\u6458\u8981\u6587\u672c\u751f\u6210\u3001\u53e5\u5b50\u76f8\u4f3c\u5ea6\u5224\u65ad\u3001\u4e09\u5143\u7ec4\u62bd\u53d6\u3001\u9884\u8bad\u7ec3\u6a21\u578b\u7b49\u3002"}
{"name": "keras-team/keras-nlp", "full_name": "keras-team/keras-nlp", "topics": ["deep-learning", "keras", "machine-learning", "nlp", "tensorflow"], "description": "Modular Natural Language Processing workflows with Keras"}
{"name": "ma-xu/pointmlp-pytorch", "full_name": "ma-xu/pointMLP-pytorch", "topics": ["pointcloud", "modelnet40", "scanobjectnn", "pytorch"], "description": "[ICLR 2022 poster] Official PyTorch implementation of \"Rethinking Network Design and Local Geometry in Point Cloud: A Simple Residual MLP Framework\""}
{"name": "amirbar/detreg", "full_name": "amirbar/DETReg", "topics": ["object-detection", "pytorch", "deep-learning", "unsupervised-learning"], "description": "Official implementation of the CVPR 2022 paper \"DETReg: Unsupervised Pretraining with Region Priors for Object Detection\"."}
{"name": "zgcr/simpleaicv-pytorch-imagenet-coco-training", "full_name": "zgcr/SimpleAICV_pytorch_training_examples_on_ImageNet_COCO_ADE20K", "topics": ["pytorch", "coco", "imagenet", "cifar100", "darknet", "fcos", "resnet", "retinanet", "centernet", "ttfnet", "repvgg", "mae", "dino", "vit", "voc", "ade20k", "regnet"], "description": "SimpleAICV:pytorch training and testing examples on ImageNet(ILSVRC2012)/COCO2017/VOC2007+2012/CIFAR100/AED20K datasets.Include classification/object detection/distillation/contrastive learning/masked image modeling."}
{"name": "godweiyang/nn-cuda-example", "full_name": "godweiyang/NN-CUDA-Example", "topics": ["pytorch", "tensorflow", "cuda", "cpp", "python", "neural-network"], "description": "Several simple examples for popular neural network toolkits calling custom CUDA operators."}
{"name": "opendr-eu/opendr", "full_name": "opendr-eu/opendr", "topics": ["deep-learning", "robotics"], "description": "A modular, open and non-proprietary toolkit for core robotic functionalities by harnessing deep learning"}
{"name": "indobenchmark/indonlu", "full_name": "IndoNLP/indonlu", "topics": ["indonesian", "bahasa", "bert", "benchmark", "datasets", "nlp", "nlu", "aacl", "indobert", "indobert-models", "indonlu", "indo4b", "indobert-lite", "indonlp"], "description": "The first-ever vast natural language processing benchmark for Indonesian Language. We provide multiple downstream tasks, pre-trained IndoBERT models, and a starter code! (AACL-IJCNLP 2020)"}
{"name": "microsoft/unispeech", "full_name": "microsoft/UniSpeech", "topics": ["pytorch", "speech-recognition", "speech-processing", "speech", "diarization", "speech-separation", "speech-diarization", "speaker-verification"], "description": "UniSpeech  - Large Scale Self-Supervised Learning for Speech"}
{"name": "menyifang/dct-net", "full_name": "menyifang/DCT-Net", "topics": ["cartoonization", "gan", "generative-adversarial-network", "portrait", "siggraph2022", "style-transfer"], "description": "Official implementation of \"DCT-Net: Domain-Calibrated Translation for Portrait Stylization\", SIGGRAPH 2022 (TOG); Multi-style cartoonization"}
{"name": "afiaka87/clip-guided-diffusion", "full_name": "afiaka87/clip-guided-diffusion", "topics": ["multimodal", "image-generation", "text-to-image-synthesis", "text-to-image", "openai", "openai-clip", "deep-learning", "artificial-intelligence", "diffusion", "multimodality"], "description": "A CLI tool/python module for generating images from text using guided diffusion and CLIP from OpenAI."}
{"name": "haofeixu/gmflow", "full_name": "haofeixu/gmflow", "topics": ["optical-flow", "global-matching", "transformer", "cvpr2022"], "description": "[CVPR 2022 Oral] GMFlow: Learning Optical Flow via Global Matching"}
{"name": "hrnet/lite-hrnet", "full_name": "HRNet/Lite-HRNet", "topics": ["lite-hrnet", "human-pose-estimation", "high-resolution-net"], "description": "This is an official pytorch implementation of Lite-HRNet: A Lightweight High-Resolution Network. "}
{"name": "xiangking/ark-nlp", "full_name": "xiangking/ark-nlp", "topics": ["nlp", "transfomer", "bert"], "description": "A private nlp coding package, which quickly implements the SOTA solutions."}
{"name": "openvinotoolkit/datumaro", "full_name": "openvinotoolkit/datumaro", "topics": ["deep-learning", "neural-networks", "openvino-toolkit", "computer-vision", "datasets", "format-converter", "dataset", "coco", "imagenet", "pascal-voc", "yolo"], "description": "Dataset Management Framework, a Python library and a CLI tool to build, analyze and manage Computer Vision datasets."}
{"name": "lucidrains/linear-attention-transformer", "full_name": "lucidrains/linear-attention-transformer", "topics": ["artificial-intelligence", "deep-learning", "attention-mechanism", "transformer", "pytorch"], "description": "Transformer based on a variant of attention that is linear complexity in respect to sequence length"}
{"name": "vitae-transformer/vitae-transformer-remote-sensing", "full_name": "ViTAE-Transformer/ViTAE-Transformer-Remote-Sensing", "topics": ["remote-sensing", "deep-learning"], "description": "The official repo for [TGRS'22] \"An Empirical Study of Remote Sensing Pretraining\""}
{"name": "tusimple/sst", "full_name": "tusen-ai/SST", "topics": ["pytorch", "3d-object-detection", "autonomous-driving"], "description": "Codes for \u201cFully Sparse 3D Object Detection\u201d & \u201cEmbracing Single Stride 3D Object Detector with Sparse Transformer\u201d"}
{"name": "xinntao/facexlib", "full_name": "xinntao/facexlib", "topics": ["pytorch", "deep-learning", "face", "detection", "alignment", "recognition", "parsing", "matting", "headpose", "tracking", "assessment"], "description": "FaceXlib aims at providing ready-to-use face-related functions based on current STOA open-source methods."}
{"name": "rizwanmunawar/yolov7-object-tracking", "full_name": "RizwanMunawar/yolov7-object-tracking", "topics": ["deep-learning", "object-detection", "opencv-python", "tracking-algorithm", "yolov7"], "description": "YOLOv7 Object Tracking Using PyTorch, OpenCV and Sort Tracking"}
{"name": "zhanglonghao1992/one-shot_free-view_neural_talking_head_synthesis", "full_name": "zhanglonghao1992/One-Shot_Free-View_Neural_Talking_Head_Synthesis", "topics": [], "description": "Unofficial pytorch implementation of paper \"One-Shot Free-View Neural Talking-Head Synthesis for Video Conferencing\""}
{"name": "bradyz/cross_view_transformers", "full_name": "bradyz/cross_view_transformers", "topics": ["deep-learning", "pytorch", "transformer", "cvpr2022"], "description": "Cross-view Transformers for real-time Map-view Semantic Segmentation (CVPR 2022 Oral)"}
{"name": "threedle/geocode", "full_name": "threedle/GeoCode", "topics": ["3d", "computer-graphics", "deep-learning", "mesh-generation", "point-cloud", "pytorch", "sketch"], "description": "GeoCode maps 3D shapes to a human-interpretable parameter space, allowing to intuitively edit the recovered 3D shapes from a point cloud or sketch input."}
{"name": "francois-rozet/piqa", "full_name": "francois-rozet/piqa", "topics": ["pytorch", "image", "image-quality", "quality", "image-quality-assessment", "pytorch-image-quality", "psnr", "ssim", "lpips", "metrics"], "description": "PyTorch Image Quality Assessement package"}
{"name": "awslabs/mlm-scoring", "full_name": "awslabs/mlm-scoring", "topics": ["language-model", "nlp", "speech-recognition", "pytorch", "mxnet", "bert", "xlm"], "description": "Python library & examples for Masked Language Model Scoring (ACL 2020)"}
{"name": "xuebinqin/dis", "full_name": "xuebinqin/DIS", "topics": ["background-removal", "deep-learning", "dichotomous-image-segmentation", "computer-vision", "u-2-net"], "description": "This is the repo for our new project Highly Accurate Dichotomous Image Segmentation"}
{"name": "hikaritju/ld", "full_name": "HikariTJU/LD", "topics": ["detection", "knowledge-distillation", "ld", "object-detection", "pytorch", "deep-learning"], "description": "Localization Distillation for Dense Object Detection (CVPR 2022)"}
{"name": "deci-ai/super-gradients", "full_name": "Deci-AI/super-gradients", "topics": ["deep-learning", "neural-network", "pretrained-weights", "pretrained-models", "pytorch", "object-detection", "image-classification", "computer-vision", "semantic-segmentation", "imagenet", "transfer-learning"], "description": "Easily train or fine-tune SOTA computer vision models with one open source training library"}
{"name": "turoad/lanedet", "full_name": "Turoad/lanedet", "topics": ["lane-detection", "scnn", "resa", "ufld", "laneatt", "culane", "lane-line-detection", "deep-learning", "lane-detection-toolbox", "tusimple", "conditional-lane-detection"], "description": "An open source lane detection toolbox based on PyTorch, including SCNN, RESA, UFLD, LaneATT, CondLane, etc."}
{"name": "nasirkhalid24/clip-mesh", "full_name": "NasirKhalid24/CLIP-Mesh", "topics": ["3d", "pytorch"], "description": "Official implementation of CLIP-Mesh: Generating textured meshes from text using pretrained image-text models"}
{"name": "hellohaptik/multi-task-nlp", "full_name": "hellohaptik/multi-task-NLP", "topics": ["pytorch", "multitask-learning", "sentence-classification", "sequence-labeling", "entailment", "ranking", "intent-classification", "named-entity-recognition", "machine-comprehension", "context-awareness", "transformers", "nlp", "nlp-library", "nli-tasks", "nlp-datasets", "nlp-apis"], "description": "multi_task_NLP is a utility toolkit enabling NLP developers to easily train and infer a single model for multiple tasks."}
{"name": "lukecavabarrett/pna", "full_name": "lukecavabarrett/pna", "topics": ["graph-machine-learning", "graph-neural-networks", "pytorch", "dgl", "pytorch-geometric"], "description": "Implementation of Principal Neighbourhood Aggregation for Graph Neural Networks in PyTorch, DGL and PyTorch Geometric"}
{"name": "henry1iu/tnt-trajectory-prediction", "full_name": "Henry1iu/TNT-Trajectory-Prediction", "topics": [], "description": "A Pytorch Implementation of TNT: Target-driveN Trajectory Prediction"}
{"name": "datasystemslab/geotorch", "full_name": "DataSystemsLab/GeoTorchAI", "topics": ["classification-model", "convlstm-pytorch", "deep-learning", "deep-neural-networks", "deepsat", "prediction-model", "raster-data", "satellite-images", "segmentation-models", "sequence-models", "spatial-data-analysis", "spatio-temporal-analysis", "spatio-temporal-models", "spatio-temporal-prediction", "st-resnet", "satellite-classification"], "description": "GeoTorchAI: A Spatiotemporal Deep Learning Framework (https://dl.acm.org/doi/abs/10.1145/3557915.3561036)"}
{"name": "symbioticlab/fedscale", "full_name": "SymbioticLab/FedScale", "topics": ["benchmark", "dataset", "machine-learning", "federated-learning", "icml", "deep-learning", "mlsys", "osdi", "deployment", "distributed", "pytorch", "tensorflow"], "description": "FedScale is a scalable and extensible open-source federated learning (FL) platform."}
{"name": "clovaai/adamp", "full_name": "clovaai/AdamP", "topics": ["deep-learning", "optimizer", "optimizer-algorithms", "machine-learning", "pytorch", "iclr2021"], "description": "AdamP: Slowing Down the Slowdown for Momentum Optimizers on Scale-invariant Weights (ICLR 2021)"}
{"name": "ucinlp/autoprompt", "full_name": "ucinlp/autoprompt", "topics": ["nlp", "language-model", "evaluation"], "description": "AutoPrompt: Automatic Prompt Construction for Masked Language Models."}
{"name": "boschresearch/unetgan", "full_name": "boschresearch/unetgan", "topics": ["gan", "image-generation", "cvpr2020", "computer-vision", "machine-learning", "ffhq", "unet-gan", "biggan", "bcai", "u-net", "generative-adversarial-network"], "description": "Official Implementation of the paper \"A U-Net Based Discriminator for Generative Adversarial Networks\" (CVPR 2020)"}
{"name": "lucidrains/tab-transformer-pytorch", "full_name": "lucidrains/tab-transformer-pytorch", "topics": ["artificial-intelligence", "deep-learning", "transformer", "attention-mechanism", "tabular-data"], "description": "Implementation of TabTransformer, attention network for tabular data, in Pytorch"}
{"name": "kaleidophon/deep-significance", "full_name": "Kaleidophon/deep-significance", "topics": ["significance-testing", "deep-learning", "dl", "hypothesis-testing", "hypothesis-tests", "statistical-significance", "statistical-significance-test", "machine-learning", "ml", "deeplearning", "machinelearning", "compare-scores", "deep-neural-networks"], "description": "Enabling easy statistical significance testing for deep neural networks. "}
{"name": "malllabiisc/compgcn", "full_name": "malllabiisc/CompGCN", "topics": ["link-prediction", "relation-embeddings", "iclr2020", "graph-convolutional-networks", "deep-learning", "pytorch", "graph-representation-learning"], "description": "ICLR 2020: Composition-Based Multi-Relational Graph Convolutional Networks"}
{"name": "janspiry/palette-image-to-image-diffusion-models", "full_name": "Janspiry/Palette-Image-to-Image-Diffusion-Models", "topics": ["ddpm", "image-restoration", "ddp", "implementation", "pytorch", "diffusion-model"], "description": "Unofficial implementation of Palette: Image-to-Image Diffusion Models by Pytorch"}
{"name": "bubbliiiing/centernet-pytorch", "full_name": "bubbliiiing/centernet-pytorch", "topics": [], "description": "\u8fd9\u662f\u4e00\u4e2acenternet-pytorch\u7684\u6e90\u7801\uff0c\u53ef\u4ee5\u7528\u4e8e\u8bad\u7ec3\u81ea\u5df1\u7684\u6a21\u578b\u3002"}
{"name": "lornatang/srgan-pytorch", "full_name": "Lornatang/SRGAN-PyTorch", "topics": ["srgan-pytorch", "resolution", "aritificial-intelligence", "pytorch", "gan"], "description": "A simple and complete implementation of super-resolution paper."}
{"name": "owen-liuyuxuan/visualdet3d", "full_name": "Owen-Liuyuxuan/visualDet3D", "topics": ["computer-vision", "object-detection", "stereo-3d-detection", "icra", "monocular-3d-detection", "pytorch"], "description": "Official Repo for Ground-aware Monocular 3D Object Detection for Autonomous Driving / YOLOStereo3D: A Step Back to 2D for Efficient Stereo 3D Detection"}
{"name": "extreme-bert/extreme-bert", "full_name": "extreme-bert/extreme-bert", "topics": ["machine-learning", "natural-language-processing", "nlp", "python", "deep-learning", "bert", "language-model", "language-models", "pytorch", "transformer"], "description": "ExtremeBERT is a toolkit that accelerates the pretraining of customized language models on customized datasets, described in the paper \u201cExtremeBERT: A Toolkit for Accelerating Pretraining of Customized BERT\u201d."}
{"name": "wonjongg/stylecarigan", "full_name": "wonjongg/StyleCariGAN", "topics": ["deep-learning", "pytorch"], "description": "[SIGGRAPH 2021] Official implementation of \"StyleCariGAN: Caricature Generation via StyleGAN Feature Map Modulation\""}
{"name": "saic-vul/ritm_interactive_segmentation", "full_name": "SamsungLabs/ritm_interactive_segmentation", "topics": ["interactive-segmentation", "segmentation", "pytorch", "pretrained-models", "hrnets"], "description": "Reviving Iterative Training with Mask Guidance for Interactive Segmentation"}
{"name": "zielon/mica", "full_name": "Zielon/MICA", "topics": ["3dmm", "computer-vision", "machine-learning", "neural-network", "flame", "fitting-algorithm", "optimization"], "description": "MICA - Towards Metrical Reconstruction of Human Faces [ECCV2022]"}
{"name": "boschresearch/oasis", "full_name": "boschresearch/OASIS", "topics": ["semantic-image-synthesis", "gan", "image-to-image-translation", "computer-vision", "multi-modal", "generative-adversarial-networks", "deep-learning", "pytorch", "image-generation", "label-to-image-translation", "oasis", "iclr2021", "machine-learning", "bcai"], "description": "Official implementation of the paper \"You Only Need Adversarial Supervision for Semantic Image Synthesis\" (ICLR 2021)"}
{"name": "enot-autodl/onnx2torch", "full_name": "ENOT-AutoDL/onnx2torch", "topics": ["onnx", "pytorch", "convert", "export"], "description": "Convert ONNX models to PyTorch."}
{"name": "gordicaleksa/pytorch-gans", "full_name": "gordicaleksa/pytorch-GANs", "topics": ["gans", "generative-adversarial-nets", "generative-adversarial-networks", "vanilla-gan", "conditional-gan", "dc-gan", "pytorch", "python", "machine-learning", "deep-learning", "deep-learning-tutorial", "gan-tutorial"], "description": "My implementation of various GAN (generative adversarial networks) architectures like vanilla GAN (Goodfellow et al.), cGAN (Mirza et al.), DCGAN (Radford et al.), etc."}
{"name": "fabro66/gast-net-3dposeestimation", "full_name": "fabro66/GAST-Net-3DPoseEstimation", "topics": ["pytorch", "gast-net", "3d-pose-estimation-video"], "description": "A Graph Attention Spatio-temporal Convolutional Networks for 3D Human Pose Estimation in Video (GAST-Net)"}
{"name": "liyuanlucasliu/transformer-clinic", "full_name": "LiyuanLucasLiu/Transformer-Clinic", "topics": ["transformer", "nmt", "initialization", "wmt"], "description": "Understanding the Difficulty of Training Transformers"}
{"name": "fudan-zvg/soft", "full_name": "fudan-zvg/SOFT", "topics": ["transformer", "linear-transformer", "self-attention", "linear-complexity", "softmax-free"], "description": "[NeurIPS 2021 Spotlight] SOFT: Softmax-free Transformer with Linear Complexity"}
{"name": "jaywalnut310/glow-tts", "full_name": "jaywalnut310/glow-tts", "topics": ["pytorch", "speech-synthesis", "tts", "deep-learning", "text-to-speech"], "description": "A Generative Flow for Text-to-Speech via Monotonic Alignment Search"}
{"name": "omerbt/text2live", "full_name": "omerbt/Text2LIVE", "topics": ["eccv2022", "image-editing", "text2live", "clip", "generative-model", "image-manipulation", "video-editing", "text-driven-editing", "single-image", "single-video"], "description": "Official Pytorch Implementation for \"Text2LIVE: Text-Driven Layered Image and Video Editing\" (ECCV 2022 Oral)"}
{"name": "krasserm/perceiver-io", "full_name": "krasserm/perceiver-io", "topics": ["perceiver", "deep-learning", "machine-learning", "pytorch", "pytorch-lightning", "perceiver-io", "perceiver-ar"], "description": "A PyTorch implementation of Perceiver, Perceiver IO and Perceiver AR with PyTorch Lightning scripts for distributed training"}
{"name": "zhen-dong/hawq", "full_name": "Zhen-Dong/HAWQ", "topics": ["quantization", "tvm", "model-compression", "distillation", "quantized-neural-networks", "pytorch", "hardware-aware", "mixed-precision", "efficient-neural-networks", "8-bit", "4-bit", "tensorcore", "hessian"], "description": "Quantization library for PyTorch. Support low-precision and mixed-precision quantization, with hardware implementation through TVM."}
{"name": "i-hope-peace/changedetectionrepository", "full_name": "ChenHongruixuan/ChangeDetectionRepository", "topics": ["remote-sensing", "change-detection", "image-processing", "multi-temporal", "deep-learning", "python"], "description": "This repository contains some python code of some traditional change detection methods or provides their original websites, such as SFA, MAD, and some deep learning-based change detection methods, such as SiamCRNN, DSFA, and some FCN-based methods. "}
{"name": "abhimishra91/insight", "full_name": "abhimishra91/insight", "topics": ["fastapi", "streamlit", "streamlit-webapp", "natural-language-processing", "nlp", "machine-learning", "transformer", "huggingface-transformer", "huggingface", "docker", "microservice", "transformers-models"], "description": "Repository for Project Insight: NLP as a Service"}
{"name": "soubhiksanyal/flame_pytorch", "full_name": "soubhiksanyal/FLAME_PyTorch", "topics": ["3d-models", "morphable-model", "face-model", "computer-vision", "computer-graphics", "python3", "pytorch", "flame", "3d", "3d-graphics", "3d-reconstruction", "fitting", "face", "3d-landmarks", "dynamic-conture", "pose-dependent-conture", "statistical-models", "3d-mesh", "face-reconstruction", "flame-model"], "description": "This is a implementation of the 3D FLAME model in PyTorch"}
{"name": "tjddus9597/proxy-anchor-cvpr2020", "full_name": "tjddus9597/Proxy-Anchor-CVPR2020", "topics": ["proxy-anchor-loss", "cvpr2020", "deep-metric-learning", "image-retrieval", "pytorch"], "description": "Official PyTorch Implementation of Proxy Anchor Loss for Deep Metric Learning, CVPR 2020"}
{"name": "dena/handyrl", "full_name": "DeNA/HandyRL", "topics": ["reinforcement-learning", "pytorch", "games", "policy-gradient", "deep-learning", "machine-learning", "distributed-training"], "description": "HandyRL is a handy and simple framework based on Python and PyTorch for distributed reinforcement learning that is applicable to your own environments."}
{"name": "atten4vis/conditionaldetr", "full_name": "Atten4Vis/ConditionalDETR", "topics": ["transformer", "detr", "object-detection", "iccv2021"], "description": "This repository is an official implementation of the ICCV 2021 paper \"Conditional DETR for Fast Training Convergence\". (https://arxiv.org/abs/2108.06152)"}
{"name": "g-u-n/pycil", "full_name": "G-U-N/PyCIL", "topics": ["incremental-learning", "lifelong-learning", "continual-learning", "machine-learning", "reproducible-research", "deep-learning", "pytorch"], "description": "PyCIL: A Python Toolbox for Class-Incremental Learning"}
{"name": "1033020837/basic4ai", "full_name": "1033020837/Basic4AI", "topics": ["ai", "nlp", "machine-learning", "python"], "description": "\u673a\u5668\u5b66\u4e60\u3001\u6df1\u5ea6\u5b66\u4e60\u3001\u81ea\u7136\u8bed\u8a00\u5904\u7406\u7b49\u4eba\u5de5\u667a\u80fd\u57fa\u7840\u77e5\u8bc6\u603b\u7ed3\u3002"}
{"name": "datamllab/autovideo", "full_name": "datamllab/autovideo", "topics": ["automl", "video", "deep-learning", "video-recognition", "automated"], "description": "AutoVideo: An Automated Video Action Recognition System"}
{"name": "lucidrains/siren-pytorch", "full_name": "lucidrains/siren-pytorch", "topics": ["artificial-intelligence", "deep-learning", "activation-functions"], "description": "Pytorch implementation of SIREN -  Implicit Neural Representations with Periodic Activation Function"}
{"name": "jacobgil/vit-explain", "full_name": "jacobgil/vit-explain", "topics": ["vision-transformer", "pytorch", "explainable-ai", "deep-learning", "transformer"], "description": "Explainability for Vision Transformers"}
{"name": "jusperlee/dual-path-rnn-pytorch", "full_name": "JusperLee/Dual-Path-RNN-Pytorch", "topics": ["pytorch", "speech-separation-algorithm", "deep-learning", "rnn-model", "speech-separation"], "description": "Dual-path RNN: efficient long sequence modeling for time-domain single-channel speech separation implemented by Pytorch"}
{"name": "crishy1995/headnerf", "full_name": "CrisHY1995/headnerf", "topics": [], "description": "This repository contains a pytorch implementation of \"HeadNeRF: A Real-time NeRF-based Parametric Head Model (CVPR 2022)\"."}
{"name": "open-mmlab/mmengine", "full_name": "open-mmlab/mmengine", "topics": ["computer-vision", "deep-learning", "pytorch"], "description": "OpenMMLab Foundational Library for Training Deep Learning Models"}
{"name": "lucidrains/transformer-in-transformer", "full_name": "lucidrains/transformer-in-transformer", "topics": ["artificial-intelligence", "deep-learning", "transformers", "image-classification"], "description": "Implementation of Transformer in Transformer, pixel level attention paired with patch level attention for image classification, in Pytorch"}
{"name": "skylark0924/machine-learning-is-all-you-need", "full_name": "Skylark0924/Machine-Learning-is-ALL-You-Need", "topics": ["deep-reinforcement-learning", "keras", "pytorch", "tensorflow", "convolutional-neural-networks", "lstm", "dqn", "ddpg", "actor-critic", "ppo", "trpo", "qlearning", "logistic-regression", "support-vector-machine", "k-nearest-neighbours", "naive-bayes-classifier", "decision-trees", "random-forest", "gan", "resnet"], "description": "\ud83d\udd25\ud83c\udf1f\u300aMachine Learning \u683c\u7269\u5fd7\u300b: ML + DL + RL basic codes and notes by sklearn, PyTorch, TensorFlow, Keras & the most important, from scratch!\ud83d\udcaa This repository is ALL You Need!"}
{"name": "apple/ml-gmpi", "full_name": "apple/ml-gmpi", "topics": ["3d", "eccv2022", "generative-adversarial-network", "neural-rendering", "pytorch", "generative-model", "multiplane-images"], "description": "Official PyTorch implementation of GMPI (ECCV 2022, Oral Presentation)"}
{"name": "wangt-cn/vc-r-cnn", "full_name": "Wangt-CN/VC-R-CNN", "topics": [], "description": "[CVPR 2020] The official pytorch implementation of ``Visual Commonsense R-CNN''"}
{"name": "natooz/miditok", "full_name": "Natooz/MidiTok", "topics": ["midi", "music", "deep-learning", "generative-model", "music-generation", "music-information-retrieval", "machine-learning"], "description": "Convenient MIDI / symbolic music tokenizers for Deep Learning networks \ud83c\udfb6"}
{"name": "feipan664/intrada", "full_name": "feipan664/IntraDA", "topics": ["pytorch", "domain-adaptation", "semantic-segmentation"], "description": "Unsupervised Intra-domain Adaptation for Semantic Segmentation through Self-Supervision (CVPR 2020 Oral)"}
{"name": "zjunlp/openue", "full_name": "zjunlp/OpenUE", "topics": ["triple-extraction", "relation-extraction", "named-entity-recognition", "event-extraction", "intent-classification", "slot-filling", "nlp-extraction-tasks", "openue", "nlp", "pytorch", "bert", "natural-language-processing"], "description": "OpenUE\u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u77e5\u8bc6\u56fe\u8c31\u62bd\u53d6\u5de5\u5177 (An Open Toolkit for Universal  Extraction from Text published at EMNLP2020: https://aclanthology.org/2020.emnlp-demos.1.pdf)"}
{"name": "yeyupiaoling/masr", "full_name": "yeyupiaoling/MASR", "topics": ["deepspeech", "pytorch", "asr", "deep-learning", "speech-recognition", "speech-to-text", "speech", "conformer", "squeezeformer"], "description": "Pytorch\u5b9e\u73b0\u7684\u6d41\u5f0f\u4e0e\u975e\u6d41\u5f0f\u7684\u81ea\u52a8\u8bed\u97f3\u8bc6\u522b\u6846\u67b6\uff0c\u540c\u65f6\u517c\u5bb9\u5728\u7ebf\u548c\u79bb\u7ebf\u8bc6\u522b\uff0c\u76ee\u524d\u652f\u6301Conformer\u3001Squeezeformer\u3001DeepSpeech2\u6a21\u578b\uff0c\u652f\u6301\u591a\u79cd\u6570\u636e\u589e\u5f3a\u65b9\u6cd5\u3002"}
{"name": "hancyran/repsurf", "full_name": "hancyran/RepSurf", "topics": ["cvpr2022", "modelnet40", "point-cloud", "pytorch", "s3dis", "scannet", "scanobjectnn", "sunrgbd"], "description": "[CVPR 2022 Oral] Official implementation for \"Surface Representation for Point Clouds\""}
{"name": "mhamilton723/stego", "full_name": "mhamilton723/STEGO", "topics": ["computer-vision", "deep-learning", "iclr2022", "pytorch", "semantic-segmentation", "unsupervised-learning"], "description": "Unsupervised Semantic Segmentation by Distilling Feature Correspondences"}
{"name": "hustvl/maptr", "full_name": "hustvl/MapTR", "topics": ["bev", "end-to-end", "real-time", "transformer", "online-hdmap-construction", "shape-representation", "vectorized-hdmap", "autonomous-driving", "iclr2023"], "description": "[ICLR'23 Spotlight] MapTR: Structured Modeling and Learning for Online Vectorized HD Map Construction"}
{"name": "wwzzz/easyfl", "full_name": "WwZzz/easyFL", "topics": ["pytorch", "federated-learning", "distributed-computing", "deep-learning", "fairness", "machine-learning"], "description": "An experimental platform to quickly realize and compare with popular centralized federated learning algorithms. A realization of federated learning algorithm on fairness (FedFV, Federated Learning with Fair Averaging,  https://fanxlxmu.github.io/publication/ijcai2021/)  was accepted by IJCAI-21 (https://www.ijcai.org/proceedings/2021/223)."}
{"name": "merantix-momentum/squirrel-core", "full_name": "merantix-momentum/squirrel-core", "topics": ["python", "ml", "machine-learning", "data-science", "computer-vision", "cv", "nlp", "natural-language-processing", "ai", "pytorch", "tensorflow", "jax", "datasets", "distributed", "dataops", "collaboration", "deep-learning", "data-mesh", "data-ingestion", "cloud-computing"], "description": "A Python library that enables ML teams to share, load, and transform data in a collaborative, flexible, and efficient way :chestnut:"}
{"name": "digitalphonetics/ims-toucan", "full_name": "DigitalPhonetics/IMS-Toucan", "topics": ["text-to-speech", "toolkit", "speech-synthesis", "deep-learning", "speech-processing", "tts", "pytorch", "speech"], "description": "Text-to-Speech Toolkit of the Speech and Language Technologies Group at the University of Stuttgart. Objectives of the development are simplicity, modularity, controllability and multilinguality."}
{"name": "richarddwang/electra_pytorch", "full_name": "richarddwang/electra_pytorch", "topics": ["electra", "pytorch", "fastai", "huggingface", "glue", "language-model", "deeplearning", "nlp"], "description": "Pretrain and finetune ELECTRA with fastai and huggingface. (Results of the paper replicated !)"}
{"name": "moon-hotel/bertwithpretrained", "full_name": "moon-hotel/BertWithPretrained", "topics": ["bert", "pytorch", "nlp", "swag", "deep-learning", "pretrained-models", "question-answering", "squad", "text-classification"], "description": "An implementation of the BERT model and its related downstream tasks based on the PyTorch framework"}
{"name": "cfzd/ultra-fast-lane-detection-v2", "full_name": "cfzd/Ultra-Fast-Lane-Detection-v2", "topics": ["deep-learning", "lane-detection", "pytorch"], "description": "Ultra Fast Deep Lane Detection With Hybrid Anchor Driven Ordinal Classification (TPAMI 2022)"}
{"name": "asahi417/tner", "full_name": "asahi417/tner", "topics": ["nlp", "transformers", "named-entity-recognition", "language-model"], "description": "Language model fine-tuning on NER with an easy interface and cross-domain evaluation. \"T-NER: An All-Round Python Library for Transformer-based Named Entity Recognition, EACL 2021\""}
{"name": "thudm/swissarmytransformer", "full_name": "THUDM/SwissArmyTransformer", "topics": ["pytorch", "transformer", "pretrained-models"], "description": "SwissArmyTransformer is a flexible and powerful library to develop your own Transformer variants."}
{"name": "microsoft/nn-meter", "full_name": "microsoft/nn-Meter", "topics": ["python", "deep-neural-networks", "latency", "inference", "edge-computing", "edge-ai", "tensorflow-models", "onnx-models", "pytorch", "machine-learning", "deep-learning", "neural-architecture-search", "efficient-model"], "description": "A DNN inference latency prediction toolkit for accurately modeling and predicting the latency on diverse edge devices. "}
{"name": "muqiujun-ai/bert4pytorch", "full_name": "MuQiuJun-AI/bert4pytorch", "topics": ["pytorch", "bert", "nlp", "transformer"], "description": "\u8d85\u8f7b\u91cf\u7ea7bert\u7684pytorch\u7248\u672c\uff0c\u5927\u91cf\u4e2d\u6587\u6ce8\u91ca\uff0c\u5bb9\u6613\u4fee\u6539\u7ed3\u6784\uff0c\u6301\u7eed\u66f4\u65b0"}
{"name": "dalmia/siren", "full_name": "dalmia/siren", "topics": ["machine-learning", "deep-learning", "pytorch", "activation-functions"], "description": "PyTorch implementation of Sinusodial Representation networks (SIREN)"}
{"name": "peizhuoli/ganimator", "full_name": "PeizhuoLi/ganimator", "topics": ["character-animation", "computer-animation", "computer-graphics", "deep-learning"], "description": "A motion generation model learned from a single example [SIGGRAPH 2022]"}
{"name": "jeya-maria-jose/kiu-net-pytorch", "full_name": "jeya-maria-jose/KiU-Net-pytorch", "topics": ["segmentation", "medical-imaging", "semantic-segmentation", "deep-neural-networks", "pytorch", "deep-learning", "medical-image-segmentation", "kiunet", "brats", "lits-challenge"], "description": "Official Pytorch Code of KiU-Net for Image/3D Segmentation - MICCAI 2020 (Oral), IEEE TMI"}
{"name": "lucidrains/enformer-pytorch", "full_name": "lucidrains/enformer-pytorch", "topics": ["artificial-intelligence", "deep-learning", "gene-expression", "attention-mechanism", "transformer", "dna-sequences", "genomics"], "description": "Implementation of Enformer, Deepmind's attention network for predicting gene expression, in Pytorch"}
{"name": "megvii-research/motr", "full_name": "megvii-research/MOTR", "topics": ["end-to-end", "multi-object-tracking", "pytorch", "transformer"], "description": "[ECCV2022] MOTR: End-to-End Multiple-Object Tracking with TRansformer"}
{"name": "rinnakk/japanese-gpt2", "full_name": "rinnakk/japanese-pretrained-models", "topics": ["nlp", "japanese", "gpt2", "roberta"], "description": "Code for producing Japanese pretrained models provided by rinna Co., Ltd."}
{"name": "lhoyer/daformer", "full_name": "lhoyer/DAFormer", "topics": ["semantic-segmentation", "unsupervised-domain-adaptation", "transformer", "cvpr2022"], "description": "[CVPR22] Official Implementation of DAFormer: Improving Network Architectures and Training Strategies for Domain-Adaptive Semantic Segmentation"}
{"name": "nianticlabs/stereo-from-mono", "full_name": "nianticlabs/stereo-from-mono", "topics": ["deep-learning", "deeplearning", "stereo-matching", "stereo", "stereo-algorithms", "monodepth", "megadepth", "monocular-depth-estimation", "single-image-depth-prediction", "depth-estimation"], "description": "[ECCV 2020] Learning stereo from single images using monocular depth estimation networks"}
{"name": "gajuuzz/human-falling-detect-tracks", "full_name": "GajuuzZ/Human-Falling-Detect-Tracks", "topics": ["pytorch", "pose-estimation", "sort", "st-gcn", "fall-detection"], "description": "AlphaPose + ST-GCN + SORT."}
{"name": "jasonwu0731/tod-bert", "full_name": "jasonwu0731/ToD-BERT", "topics": ["task-oriented-dialogues", "dialogue", "pretrained-models", "natural-language-processing", "natural-language-understanding", "bert"], "description": "Pre-Trained Models for ToD-BERT"}
{"name": "layumi/person-reid-3d", "full_name": "layumi/person-reid-3d", "topics": ["person-reidentification", "person-reid", "3d", "market-1501", "dukemtmc-reid", "msmt17", "graph-neural-networks", "re-id", "reid", "re-identification", "pytorch", "ognet"], "description": "TNNLS'22 :statue_of_liberty: Parameter-Efficient Person Re-identification in the 3D Space :statue_of_liberty:"}
{"name": "overlappredator/overlappredator", "full_name": "prs-eth/OverlapPredator", "topics": ["point-cloud", "registration", "3dvision", "transformer", "attention-mechanism"], "description": "[CVPR 2021, Oral] PREDATOR: Registration of 3D Point Clouds with Low Overlap. "}
{"name": "we0091234/chinese_license_plate_detection_recognition", "full_name": "we0091234/Chinese_license_plate_detection_recognition", "topics": ["deep-learning", "pytorch", "plate-recognition", "yolov5"], "description": "yolov5 \u8f66\u724c\u68c0\u6d4b   \u8f66\u724c\u8bc6\u522b   \u4e2d\u6587\u8f66\u724c\u8bc6\u522b \u68c0\u6d4b \u652f\u630112\u79cd\u4e2d\u6587\u8f66\u724c \u652f\u6301\u53cc\u5c42\u8f66\u724c"}
{"name": "hanqer/deep-hough-transform", "full_name": "Hanqer/deep-hough-transform", "topics": ["jittor", "hough-transform", "deep-learning"], "description": "Jittor and Pytorch code for paper \"Deep Hough Transform for Semantic Line Detection\" (ECCV 2020, PAMI 2021)"}
{"name": "antao97/dgcnn.pytorch", "full_name": "antao97/dgcnn.pytorch", "topics": ["point-cloud", "classification", "segmentation", "pytorch"], "description": "A PyTorch implementation of Dynamic Graph CNN for Learning on Point Clouds (DGCNN)"}
{"name": "shadow2496/viton-hd", "full_name": "shadow2496/VITON-HD", "topics": ["pytorch", "deep-learning"], "description": "Official PyTorch implementation of \"VITON-HD: High-Resolution Virtual Try-On via Misalignment-Aware Normalization\" (CVPR 2021)"}
{"name": "dome272/diffusion-models-pytorch", "full_name": "dome272/Diffusion-Models-pytorch", "topics": [], "description": "Pytorch implementation of Diffusion Models (https://arxiv.org/pdf/2006.11239.pdf)"}
{"name": "jermmy/pytorch-quantization-demo", "full_name": "Jermmy/pytorch-quantization-demo", "topics": [], "description": "A simple network quantization demo using pytorch from scratch."}
{"name": "weiyithu/nerfingmvs", "full_name": "weiyithu/NerfingMVS", "topics": ["computer-vision", "deep-learning", "3d-reconstruction", "3dvision", "neural-radiance-fields", "multi-view-stereo"], "description": "[ICCV 2021 Oral] NerfingMVS: Guided Optimization of Neural Radiance Fields for Indoor Multi-view Stereo"}
{"name": "operatorai/modelstore", "full_name": "operatorai/modelstore", "topics": ["python-library", "modelstore", "machine-learning", "data-science", "scikit-learn", "pytorch", "tensorflow", "mlops", "s3-storage", "transformer", "keras"], "description": "\ud83c\udfec modelstore is a Python library that allows you to version, export, and save a machine learning model to your filesystem or a cloud storage provider."}
{"name": "gangweix/acvnet", "full_name": "gangweiX/ACVNet", "topics": ["pytorch", "stereo-matching", "stereo-vision", "cost-volume"], "description": "ACVNet: Attention Concatenation Volume for Accurate and Efficient Stereo Matching (CVPR 2022)"}
{"name": "ai4bharat/indic-bert", "full_name": "AI4Bharat/indic-bert", "topics": ["indian-languages", "bert", "multilingual-models", "language-model", "nlp"], "description": "BERT-based Multilingual Model for Indian Languages"}
{"name": "caillonantoine/rave", "full_name": "acids-ircam/RAVE", "topics": ["deep-learning", "neural-network", "audio", "generative-model", "ai"], "description": "Official implementation of the RAVE model: a Realtime Audio Variational autoEncoder"}
{"name": "miemie2013/miemiedetection", "full_name": "miemie2013/miemiedetection", "topics": ["yolox", "yolo", "yolov3", "ppyolo", "fcos", "ppyolov2", "ppyoloe", "ncnn", "solo", "solov2"], "description": "Pytorch and ncnn implementation of PPYOLOE\u3001YOLOX\u3001PPYOLO\u3001PPYOLOv2\u3001SOLOv2 an so on."}
{"name": "vincentstimper/normalizing-flows", "full_name": "VincentStimper/normalizing-flows", "topics": ["normalizing-flow", "variational-autoencoder", "variational-inference", "real-nvp", "residual-flow", "glow", "pytorch", "neural-spline-flow", "density-estimation", "invertible-neural-networks"], "description": "PyTorch implementation of normalizing flow models"}
{"name": "graykode/commit-autosuggestions", "full_name": "graykode/commit-autosuggestions", "topics": ["commit-autosuggestions", "natural-language", "bert", "text-generation", "nlp"], "description": "A tool that AI automatically recommends commit messages."}
{"name": "haochen-wang409/u2pl", "full_name": "Haochen-Wang409/U2PL", "topics": ["mechine-learning", "computer-vision", "semantic-segmentation", "semi-supervised-learning", "contrastive-learning", "cvpr2022", "pytorch", "cityscapes", "pascal-voc", "deep-learning"], "description": "[CVPR'22] Semi-Supervised Semantic Segmentation Using Unreliable Pseudo-Labels"}
{"name": "sithu31296/semantic-segmentation", "full_name": "sithu31296/semantic-segmentation", "topics": ["semantic-segmentation", "pytorch", "transformer", "vision-transformer", "cityscapes", "ade20k", "camvid", "coco-stuff", "pascal-context", "deep-learning", "dataset"], "description": "SOTA Semantic Segmentation Models in PyTorch"}
{"name": "sangwoomo/freezed", "full_name": "sangwoomo/FreezeD", "topics": ["generative-models", "generative-adversarial-network", "transfer-learning", "gan"], "description": "Freeze the Discriminator: a Simple Baseline for Fine-Tuning GANs (CVPRW 2020)"}
{"name": "deepvac/deepvac", "full_name": "DeepVAC/deepvac", "topics": ["pytorch", "deepvac", "python", "tensorboard", "quantization", "amp", "torchscript", "onnx", "ncnn", "coreml", "ddp", "tensorrt"], "description": "PyTorch Project Specification."}
{"name": "sjtmusicteam/muskits", "full_name": "SJTMusicTeam/Muskits", "topics": ["music-synthesis", "pytorch", "singing-synthesis", "singing-voice-synthesis"], "description": "An opensource music processing toolkit"}
{"name": "maclory/deep-iterative-collaboration", "full_name": "Maclory/Deep-Iterative-Collaboration", "topics": ["image-restoration", "super-resolution", "face-hallucination", "deep-learning", "computer-vision", "iterative-reconstruction"], "description": "Pytorch implementation of Deep Face Super-Resolution with Iterative Collaboration between Attentive Recovery and Landmark Estimation (CVPR 2020)"}
{"name": "ranchlai/mandarin-tts", "full_name": "ranchlai/mandarin-tts", "topics": ["tts", "tts-chinese", "tts-hanzi", "tacotron", "pytorch", "fastspeech2", "aishell3", "multi-speaker"], "description": "Chinese Mandarin tts text-to-speech  \u4e2d\u6587 (\u666e\u901a\u8bdd) \u8bed\u97f3 \u5408\u6210 , by fastspeech 2 , implemented in pytorch, using waveglow as vocoder,  with biaobei and aishell3 datasets"}
{"name": "microsoft/rat-sql", "full_name": "microsoft/rat-sql", "topics": ["program-synthesis", "semantic-parsing", "nlp", "question-answering", "dbqa", "nl2sql", "transformers"], "description": "A relation-aware semantic parsing model from English to SQL"}
{"name": "torchsynth/torchsynth", "full_name": "torchsynth/torchsynth", "topics": ["audio", "synthesizers", "gpu", "torch", "machine-learning", "pytorch"], "description": "A GPU-optional modular synthesizer in pytorch, 16200x faster than realtime, for audio ML researchers."}
{"name": "yzd-v/fgd", "full_name": "yzd-v/FGD", "topics": ["object-detection", "knowledge-distillation", "deep-learning", "pytorch"], "description": "Focal and Global Knowledge Distillation for Detectors (CVPR 2022)"}
{"name": "zhanggongjie/meta-detr", "full_name": "ZhangGongjie/Meta-DETR", "topics": ["object-detection", "few-shot-object-detection", "meta-learning", "computer-vision", "pytorch"], "description": "[T-PAMI  2022]  Meta-DETR for Few-Shot Object Detection: Official PyTorch Implementation"}
{"name": "tobran/df-gan", "full_name": "tobran/DF-GAN", "topics": ["generative-adversarial-network", "text-to-image"], "description": " A Simple and Effective Baseline for Text-to-Image Synthesis (CVPR2022 oral)"}
{"name": "tzysjtu/sketch-generation-with-drawing-process-guided-by-vector-flow-and-grayscale", "full_name": "TZYSJTU/Sketch-Generation-with-Drawing-Process-Guided-by-Vector-Flow-and-Grayscale", "topics": ["computer-vision", "pencil-drawing", "python3", "pytorch", "numpy"], "description": "This is the official implementation of the AAAI 2021 accepted paper \"Sketch Generation with Drawing Process Guided by Vector Flow and Grayscale\""}
{"name": "gsunshine/enjoy-hamburger", "full_name": "Gsunshine/Enjoy-Hamburger", "topics": ["attention", "differentiable-programming", "implicit", "deq", "matrix-factorization", "optimization"], "description": "[ICLR 2021 top 3%] Is Attention Better Than Matrix Decomposition?"}
{"name": "alexa/dialoglue", "full_name": "alexa/dialoglue", "topics": ["deep-learning", "natural-language-processing", "natural-language-understanding", "machinelearning"], "description": "DialoGLUE: A Natural Language Understanding Benchmark for Task-Oriented Dialogue"}
{"name": "jonathanking/sidechainnet", "full_name": "jonathanking/sidechainnet", "topics": ["machine-learning", "structural-biology", "protein-structure", "deep-learning", "dataset"], "description": "An all-atom protein structure dataset for machine learning."}
{"name": "minar09/cp-vton-plus", "full_name": "minar09/cp-vton-plus", "topics": ["cp-vton-plus", "pytorch", "pytorch-implementation", "official-implementation", "emcom", "emcom-lab", "seoultech", "virtual-try-on", "image-based", "2d-virtual-try-on", "virtual-tryon", "vton"], "description": "Official implementation for \"CP-VTON+: Clothing Shape and Texture Preserving Image-Based Virtual Try-On\", CVPRW 2020"}
{"name": "megvii-model/motr", "full_name": "megvii-research/MOTR", "topics": ["end-to-end", "multi-object-tracking", "pytorch", "transformer"], "description": "[ECCV2022] MOTR: End-to-End Multiple-Object Tracking with TRansformer"}
{"name": "hustvl/mimdet", "full_name": "hustvl/MIMDet", "topics": ["computer-vision", "object-detection", "vision-transformer", "masked-image-modeling", "mae", "transformer", "instance-segmentation"], "description": "MIMDet: Unleashing Vanilla Vision Transformer with Masked Image Modeling for Object Detection"}
{"name": "zzh-tech/estrnn", "full_name": "zzh-tech/ESTRNN", "topics": ["video-deblurring", "dataset", "real-world-data", "deep-learning", "deblurring", "motion-blur", "eccv2020"], "description": "[ECCV2020 Spotlight] Efficient Spatio-Temporal Recurrent Neural Network for Video Deblurring"}
{"name": "shengliu66/elr", "full_name": "shengliu66/ELR", "topics": ["noisy-labels", "robust-learning", "deep-learning", "statistical-learning"], "description": "Official Implementation of Early-Learning Regularization Prevents Memorization of Noisy Labels"}
{"name": "artitw/text2text", "full_name": "artitw/text2text", "topics": ["bert", "nlp", "question-generation", "natural-language-processing", "natural-language-generation", "data-augmentation", "translator", "cross-lingual", "multi-lingual", "question-answering", "transformers", "levenshtein-distance", "embeddings", "backtranslation", "search", "tf-idf", "tokenizer", "information-retrieval", "summarization"], "description": "Text2Text: Crosslingual NLP/G toolkit"}
{"name": "pkhungurn/talking-head-anime-3-demo", "full_name": "pkhungurn/talking-head-anime-3-demo", "topics": ["ai", "computer-graphics", "computer-vision", "machine-learning", "pytorch", "vtuber", "anime", "python"], "description": "Demo Programs for the \"Talking Head(?) Anime from a Single Image 3: Now the Body Too\" Project"}
{"name": "yzhq97/transmomo.pytorch", "full_name": "yzhq97/transmomo.pytorch", "topics": ["motion-retargeting", "cvpr", "dance", "unsupervised-learning", "generative-adversarial-network"], "description": "This is the official PyTorch implementation of the CVPR 2020 paper \"TransMoMo: Invariance-Driven Unsupervised Video Motion Retargeting\"."}
{"name": "kaixhin/imitation-learning", "full_name": "Kaixhin/imitation-learning", "topics": ["deep-learning", "deep-reinforcement-learning", "imitation-learning"], "description": "Imitation learning algorithms"}
{"name": "raphaelsty/cherche", "full_name": "raphaelsty/cherche", "topics": ["neural-search", "search", "searching", "neural-networks", "bm25", "flashtext", "retrieval", "reader", "question-answering", "nlp", "information-retrieval", "natural-language-processing", "semantic-search", "vector-search", "machine-learning"], "description": "\ud83d\udcd1 Neural Search"}
{"name": "martinsbruveris/tensorflow-image-models", "full_name": "martinsbruveris/tensorflow-image-models", "topics": ["tensorflow", "imagenet", "vision-transformer"], "description": "TensorFlow port of PyTorch Image Models (timm) - image models with pretrained weights."}
{"name": "ericlee2021-72324/handpose_x", "full_name": "EricLee2021-72324/handpose_x", "topics": [], "description": "\u624b\u90e821\u4e2a\u5173\u952e\u70b9\u68c0\u6d4b\uff0c\u4e8c\u7ef4\u624b\u52bf\u59ff\u6001\uff0c\u624b\u52bf\u8bc6\u522b\uff0cpytorch,handpose"}
{"name": "csuhan/s2anet", "full_name": "csuhan/s2anet", "topics": ["object-detection", "feature-alignment", "mmdetection", "pytorch", "aerial-image-detection"], "description": "Official code of the paper \"Align Deep Features for Oriented Object Detection\""}
{"name": "fcakyon/yolov5-pip", "full_name": "fcakyon/yolov5-pip", "topics": ["yolo", "yolov5", "object-detection", "pytorch", "python", "pip", "ultralytics", "yolov3", "yolov4", "machine-learning", "deep-learning", "computer-vision", "aws", "coco", "neptune", "neptune-ai", "s3", "pypi", "cli"], "description": "Packaged version of ultralytics/yolov5 + many extra features"}
{"name": "keyu-tian/spark", "full_name": "keyu-tian/SparK", "topics": ["bert", "convnet", "convolutional-neural-networks", "masked-image-modeling", "pre-trained-model", "self-supervised-learning", "sparse-convolution", "ssl", "cnn", "iclr", "iclr2023"], "description": "[ICLR'23 Spotlight] A BERT-style pretraining on any *convolutional network*; Pytorch impl. of \"Designing BERT for Convolutional Networks: Sparse and Hierarchical Masked Modeling\""}
{"name": "mindslab-ai/hififace", "full_name": "mindslab-ai/hififace", "topics": ["pytorch", "face-swapping", "pytorch-lightning", "wandb"], "description": "Unofficial PyTorch Implementation for HifiFace (https://arxiv.org/abs/2106.09965)"}
{"name": "turoad/clrnet", "full_name": "Turoad/CLRNet", "topics": [], "description": "Pytorch implementation of our paper \"CLRNet: Cross Layer Refinement Network for Lane Detection\" (CVPR2022 Acceptance)."}
{"name": "srush/annotated-s4", "full_name": "srush/annotated-s4", "topics": ["deep-learning", "jax"], "description": "Implementation of https://srush.github.io/annotated-s4"}
{"name": "yanx27/2dpass", "full_name": "yanx27/2DPASS", "topics": ["nuscenes", "semantic-segmentation", "semantickitti", "lidar-point-cloud", "deep-learning", "knowledge-distillation", "pytorch"], "description": "2DPASS: 2D Priors Assisted Semantic Segmentation on LiDAR Point Clouds (ECCV 2022) :fire:"}
{"name": "castorini/daam", "full_name": "castorini/daam", "topics": ["explainable-ai", "huggingface", "pytorch", "stable-diffusion", "generative-ai", "diffusion"], "description": "Diffusion attentive attribution maps for interpreting Stable Diffusion."}
{"name": "alphajia/pytorch-faster-rcnn", "full_name": "AlphaJia/pytorch-faster-rcnn", "topics": ["faster-rcnn", "pytorch", "detection"], "description": "pytorch based implementation faster rcnn"}
{"name": "iduta/pyconv", "full_name": "iduta/pyconv", "topics": ["image-recognition", "imagenet", "pytorch", "deep-learning", "convolutional-neural-networks", "residual-networks", "residual-learning", "cnn", "computer-vision", "deep-neural-networks", "neural-network", "artificial-intelligence", "pattern-recognition", "pyconv", "machine-learning"], "description": "Pyramidal Convolution: Rethinking Convolutional Neural Networks for Visual Recognition (https://arxiv.org/pdf/2006.11538.pdf)"}
{"name": "raivokoot/video-dataset-loading-pytorch", "full_name": "RaivoKoot/Video-Dataset-Loading-Pytorch", "topics": ["pytorch", "machine-learning", "dataloader", "deep-learning", "video-dataset", "action-recognition", "videos"], "description": "Generic PyTorch dataset implementation to load and augment VIDEOS for deep learning training loops."}
{"name": "kevinmusgrave/pytorch-adapt", "full_name": "KevinMusgrave/pytorch-adapt", "topics": ["pytorch", "domain-adaptation", "machine-learning", "deep-learning", "transfer-learning", "computer-vision"], "description": "Domain adaptation made easy. Fully featured, modular, and customizable."}
{"name": "wuzhihao7788/yolodet-pytorch", "full_name": "wuzhihao7788/yolodet-pytorch", "topics": ["yolov5", "yolov4", "ppyolo", "yolov3", "pytorch", "object-detection", "yolov5-yolov3", "yolo"], "description": "reproduce the YOLO series of papers in pytorch, including YOLOv4, PP-YOLO, YOLOv5\uff0cYOLOv3, etc."}
{"name": "bubbliiiing/efficientdet-pytorch", "full_name": "bubbliiiing/efficientdet-pytorch", "topics": [], "description": "\u8fd9\u662f\u4e00\u4e2aefficientdet-pytorch\u7684\u6e90\u7801\uff0c\u53ef\u4ee5\u7528\u4e8e\u8bad\u7ec3\u81ea\u5df1\u7684\u6a21\u578b\u3002"}
{"name": "patrick-kidger/torchcde", "full_name": "patrick-kidger/torchcde", "topics": ["time-series", "machine-learning", "neural-differential-equations", "controlled-differential-equations", "deep-learning", "deep-neural-networks", "pytorch", "dynamical-systems", "differential-equations", "neural-networks"], "description": "Differentiable controlled differential equation solvers for PyTorch with GPU support and memory-efficient adjoint backpropagation."}
{"name": "cheerss/crossformer", "full_name": "cheerss/CrossFormer", "topics": ["pytorch", "object-detection", "deep-learning", "semantic-segmentation", "vision-transformer", "classification", "instance-segmentation"], "description": "The official code for the paper: https://openreview.net/forum?id=_PHymLIxuI"}
{"name": "ppogg/shufflev2-yolov5", "full_name": "ppogg/YOLOv5-Lite", "topics": ["ncnn", "yolov5", "android-app", "mnn", "shufflenetv2", "repvgg", "transformer", "tensorrt", "pplcnet", "openvivo", "mobilenet", "tflite", "pytorch", "picodet", "onnxruntime"], "description": "\ud83c\udf45\ud83c\udf45\ud83c\udf45YOLOv5-Lite: lighter, faster and easier to deploy. Evolved from yolov5 and the size of model is only 930+kb (int8) and 1.7M (fp16). It can reach 10+ FPS on the Raspberry Pi 4B when the input size is 320\u00d7320~"}
{"name": "ha0tang/xinggan", "full_name": "Ha0Tang/XingGAN", "topics": ["image-generation", "generation", "eccv-2020", "appearance-features", "shape-features", "feature-fusion", "non-local", "crossing", "eccv2020", "pytorch", "deepfashion", "selectiongan"], "description": "[ECCV 2020] XingGAN for Person Image Generation"}
{"name": "iigroup/tedigan", "full_name": "IIGROUP/TediGAN", "topics": ["image-synthesis", "gan-inversion", "cvpr2021"], "description": "[CVPR 2021] Pytorch implementation for TediGAN: Text-Guided Diverse Face Image Generation and Manipulation"}
{"name": "yeyupiaoling/voiceprintrecognition-pytorch", "full_name": "yeyupiaoling/VoiceprintRecognition-Pytorch", "topics": ["pytorch", "voice-recognition", "arcface", "speaker-recognition", "ecapa-tdnn"], "description": "\u672c\u9879\u76ee\u4f7f\u7528\u4e86EcapaTdnn\u6a21\u578b\u5b9e\u73b0\u7684\u58f0\u7eb9\u8bc6\u522b"}
{"name": "confusezius/revisiting_deep_metric_learning_pytorch", "full_name": "Confusezius/Revisiting_Deep_Metric_Learning_PyTorch", "topics": ["deep-learning", "metric-learning", "deep-metric-learning", "image-retrieval", "cub200-2011", "cars196", "stanford-online-products", "wandb", "icml2020"], "description": "(ICML 2020) This repo contains code for our paper \"Revisiting Training Strategies and Generalization Performance in Deep Metric Learning\" (https://arxiv.org/abs/2002.08473) to facilitate consistent research in the field of Deep Metric Learning."}
{"name": "kumapowerliu/rethinking-inpainting-medfe", "full_name": "KumapowerLIU/Rethinking-Inpainting-MEDFE", "topics": ["inpainting", "activation-functions", "generative-adversarial-network", "eccv-2020"], "description": "Rethinking Image Inpainting via a Mutual Encoder Decoder with Feature Equalizations. ECCV 2020 Oral"}
{"name": "google-research/fast-soft-sort", "full_name": "google-research/fast-soft-sort", "topics": ["differentiable", "sorting", "ranking", "pytorch", "tensorflow", "jax"], "description": "Fast Differentiable Sorting and Ranking"}
{"name": "enlite-ai/maze", "full_name": "enlite-ai/maze", "topics": ["reinforcement-learning", "python", "machine-learning", "simulation", "deep-learning", "monitoring", "distributed", "documentation", "data-science", "framework", "applied-machine-learning", "optimization", "decision-making", "automation"], "description": "Maze Applied Reinforcement Learning Framework"}
{"name": "jankrepl/mildlyoverfitted", "full_name": "jankrepl/mildlyoverfitted", "topics": ["pytorch", "tutorial", "deep-learning", "youtube"], "description": "Paper implementations from scratch and machine learning tutorials"}
{"name": "qinzheng93/geotransformer", "full_name": "qinzheng93/GeoTransformer", "topics": ["point-cloud-registration", "transformer", "computer-vision", "deep-learning", "neural-network", "point-cloud", "pytorch", "attention-mechanism", "registration"], "description": "[CVPR2022] Geometric Transformer for Fast and Robust Point Cloud Registration"}
{"name": "tatp22/multidim-positional-encoding", "full_name": "tatp22/multidim-positional-encoding", "topics": ["tensorflow", "pytorch", "deep-learning"], "description": "An implementation of 1D, 2D, and 3D positional encoding in Pytorch and TensorFlow"}
{"name": "jeff-sjtu/res-loglikelihood-regression", "full_name": "Jeff-sjtu/res-loglikelihood-regression", "topics": ["pytorch", "human-pose-estimation", "iccv", "iccv2021", "regression", "2d-human-pose", "3d-human-pose"], "description": "Code for \"Human Pose Regression with Residual Log-likelihood Estimation\", ICCV 2021 Oral"}
{"name": "cwlroda/falldetection_openpifpaf", "full_name": "cwlroda/falldetection_openpifpaf", "topics": ["openpifpaf", "detection", "human-pose-estimation", "computer-vision", "deep-learning", "composite-fields", "video-analytics", "object-tracking", "gpu", "cpu", "fall-detection"], "description": "Fall Detection using OpenPifPaf's Human Pose Estimation model"}
{"name": "jiawangbian/sc_depth_pl", "full_name": "JiawangBian/sc_depth_pl", "topics": ["depth-estimation", "deep-learning", "self-supervised-learning", "pose-estimation", "computer-vision"], "description": "SC-Depth (V1, V2, and V3) for Unsupervised Monocular Depth Estimation  Webpage:https://jiawangbian.github.io/sc_depth_pl/"}
{"name": "tianyu0207/rtfm", "full_name": "tianyu0207/RTFM", "topics": ["pytorch", "deep-learning", "anomaly-detection", "video-anomaly-detection"], "description": "Official code for 'Weakly-supervised Video Anomaly Detection with Robust Temporal Feature Magnitude Learning' [ICCV 2021]"}
{"name": "shoufachen/cyclemlp", "full_name": "ShoufaChen/CycleMLP", "topics": ["pytorch", "mlp", "backbone-models"], "description": "[ICLR'22 Oral] Implementation of \"CycleMLP: A MLP-like Architecture for Dense Prediction\""}
{"name": "zhanggongjie/sam-detr", "full_name": "ZhangGongjie/SAM-DETR", "topics": ["pytorch", "object-detection", "detr", "computer-vision", "transformer", "detection", "vision-transformer", "deep-learning", "vision", "machine-learning", "cvpr", "cvpr2022"], "description": "[CVPR'2022] SAM-DETR & SAM-DETR++: Official PyTorch Implementation"}
{"name": "mmaaz60/edgenext", "full_name": "mmaaz60/EdgeNeXt", "topics": ["classification", "cnn", "edge-computing", "hybrid-model", "mobile-application", "transformers"], "description": "[CADL'22, ECCVW] Official repository of paper titled \"EdgeNeXt: Efficiently Amalgamated CNN-Transformer Architecture for Mobile Vision Applications\"."}
{"name": "ekzhang/fastseg", "full_name": "ekzhang/fastseg", "topics": ["computer-vision", "semantic-segmentation", "mobilenetv3", "efficientnet", "deep-learning", "cityscapes", "kitti-dataset", "mapillary-vistas-dataset", "edge-computing", "pytorch", "aspp", "deeplabv3"], "description": "\ud83d\udcf8 PyTorch implementation of MobileNetV3 for real-time semantic segmentation, with pretrained weights & state-of-the-art performance"}
{"name": "endlesssora/tsit", "full_name": "EndlessSora/TSIT", "topics": ["generative-adversarial-network", "gan", "image-to-image-translation", "image-generation", "image-manipulation", "two-stream-networks", "versatile", "feature-transformation", "multi-scale", "style-transfer", "multi-modal", "semantic-image-synthesis", "eccv2020"], "description": "[ECCV 2020 Spotlight] A Simple and Versatile Framework for Image-to-Image Translation"}
{"name": "keonlee9420/portaspeech", "full_name": "keonlee9420/PortaSpeech", "topics": ["text-to-speech", "normalizing-flows", "generative-model", "deep-neural-networks", "pytorch", "tts", "speech-synthesis", "neural-tts", "non-autoregressive", "portable-tts", "vae", "fastspeech", "hifi-gan", "non-ar", "mel-gan", "high-quality"], "description": "PyTorch Implementation of PortaSpeech: Portable and High-Quality Generative Text-to-Speech"}
{"name": "yuanmingqi/rl-exploration-baselines", "full_name": "yuanmingqi/rl-exploration-baselines", "topics": ["reinforcement-learning", "efficient-algorithm", "exploration-strategy", "baselines", "gym", "machine-learning", "pybullet", "pytorch", "robotics", "toolbox"], "description": "RLeXplore provides stable baselines of exploration methods in reinforcement learning, such as intrinsic curiosity module (ICM), random network distillation (RND) and rewarding impact-driven exploration (RIDE)."}
{"name": "zumolabs/zpy", "full_name": "ZumoLabs/zpy", "topics": ["ml", "ai", "data", "synthetic", "blender", "python", "synthetic-data", "blender-addon", "deep-learning", "computer-vision"], "description": "Synthetic data for computer vision. An open source toolkit using Blender and Python."}
{"name": "liuruoze/mini-alphastar", "full_name": "liuruoze/mini-AlphaStar", "topics": ["mini-alphastar", "supervised-learning", "reinforcement-learning", "starcraft2", "deep-learning", "pytorch", "self-playing-bot", "multi-agent-systems", "gaming", "imitation-learning", "starcraft2-ai", "starcraft-ii-bot", "sc2replay", "deep-reinforcement-learning", "deep-neural-networks"], "description": "A mini-scale reproduction code of the AlphaStar program. Note: the original AlphaStar is the AI proposed by DeepMind to play StarCraft II."}
{"name": "wenwenyu/master-pytorch", "full_name": "wenwenyu/MASTER-pytorch", "topics": ["scene-text-recognition", "transformer", "self-attention", "non-local-network", "ocr"], "description": "Code for the paper \"MASTER: Multi-Aspect Non-local Network for Scene Text Recognition\" (Pattern Recognition 2021)"}
{"name": "abelriboulot/onnxt5", "full_name": "abelriboulot/onnxt5", "topics": ["nlp", "nlp-machine-learning", "onnx", "onnxruntime", "transformer", "transformers", "inference", "summarization", "translation", "text-generation", "text-classification", "sentiment-analysis"], "description": "Summarization, translation, sentiment-analysis, text-generation and more at blazing speed using a T5 version implemented in ONNX."}
{"name": "cgarciae/treex", "full_name": "cgarciae/treex", "topics": ["jax", "deep-learning"], "description": "A Pytree Module system for Deep Learning in JAX"}
{"name": "mindslab-ai/nuwave", "full_name": "mindslab-ai/nuwave", "topics": ["upsampling", "super-resolution", "deep-learning", "deep-generative-model", "pytorch", "neural-audio-upsampling"], "description": "NU-Wave: A Diffusion Probabilistic Model for Neural Audio Upsampling @ INTERSPEECH 2021"}
{"name": "sberbank-ai/sber-swap", "full_name": "ai-forever/ghost", "topics": ["computer-vision", "deep-learning", "deepfake", "faceswap", "pytorch", "deep-face-swap", "face-swap", "ghost", "ghost-faceswap", "ghost-swap"], "description": "A new one shot face swap approach for image and video domains"}
{"name": "angeloucn/cfpnet-medicine", "full_name": "AngeLouCN/CFPNet-Medicine", "topics": ["medical-image-segmentation", "real-time-semantic-segmentation", "keras", "python3", "pytorch", "segmentation"], "description": "CFPNet-M: A Light-Weight Encoder-Decoder Based Network for Multimodal Biomedical Image Real-Time Segmentation"}
{"name": "arthur151/centerhmr", "full_name": "Arthur151/ROMP", "topics": ["3d-mesh-recovery", "bottom-up", "multi-person-3d-mesh-recovery", "smpl", "multi-person", "pytorch", "pose-estimation"], "description": "Monocular, One-stage, Regression of Multiple 3D People, ROMP[ICCV21], BEV[CVPR22]"}
{"name": "jiaxi-jiang/fbcnn", "full_name": "jiaxi-jiang/FBCNN", "topics": ["image-restoration", "jpeg-artifacts-removal", "deep-learning", "iccv2021", "pytorch", "computer-vision", "image-processing", "image-denoising", "fbcnn", "jpeg-compression", "jpeg-deblocking", "image-forensics", "image-compression"], "description": "Official Code for ICCV 2021 paper \"Towards Flexible Blind JPEG Artifacts Removal (FBCNN)\""}
{"name": "haochen-rye/nerv", "full_name": "haochen-rye/NeRV", "topics": [], "description": "Official Pytorch implementation for video neural representation (NeRV)"}
{"name": "babelscape/rebel", "full_name": "Babelscape/rebel", "topics": ["nlp", "natural-language-processing", "natural-language-generation", "relation-extraction", "entity-linking"], "description": "REBEL is a seq2seq model that simplifies Relation Extraction (EMNLP 2021)."}
{"name": "wenxuan-1119/transbts", "full_name": "Wenxuan-1119/TransBTS", "topics": ["pytorch", "medical-image-segmentation", "transformer"], "description": "This repo provides the official code for : 1) TransBTS: Multimodal Brain Tumor Segmentation Using Transformer (https://arxiv.org/abs/2103.04430) , accepted by MICCAI2021.  2) TransBTSV2: Towards Better and More Efficient Volumetric Segmentation of Medical Images(https://arxiv.org/abs/2201.12785)."}
{"name": "mcahny/vps", "full_name": "mcahny/vps", "topics": [], "description": "Official pytorch implementation for \"Video Panoptic Segmentation\" (CVPR 2020 Oral)"}
{"name": "intellabs/bayesian-torch", "full_name": "IntelLabs/bayesian-torch", "topics": ["bayesian-deep-learning", "bayesian-neural-networks", "stochastic-variational-inference", "uncertainty-estimation", "pytorch", "bayesian-layers", "deep-learning", "bayesian-inference", "uncertainty-quantification", "uncertainty-neural-networks", "deep-neural-networks"], "description": "A library for Bayesian neural network layers and uncertainty estimation in Deep Learning extending the core of PyTorch"}
{"name": "nvlabs/wetectron", "full_name": "NVlabs/wetectron", "topics": ["object-detection", "weakly-supervised-learning", "computer-vision", "deep-learning"], "description": "Weakly-supervised object detection."}
{"name": "casualganpapers/make-a-scene", "full_name": "CasualGANPapers/Make-A-Scene", "topics": ["gans", "generative-adversarial-network", "vqgan"], "description": "Pytorch implementation of Make-A-Scene: Scene-Based Text-to-Image Generation with Human Priors"}
{"name": "ayaka14732/tpu-starter", "full_name": "ayaka14732/tpu-starter", "topics": ["tpu", "deep-learning", "cloud-tpu", "google-cloud-platform", "gcp", "machine-learning", "jax"], "description": "Everything you want to know about Google Cloud TPU"}
{"name": "lucidrains/segformer-pytorch", "full_name": "lucidrains/segformer-pytorch", "topics": ["artificial-intelligence", "deep-learning", "attention-mechanism", "multilayer-perceptron", "segmentation", "image-segmentation"], "description": "Implementation of Segformer, Attention + MLP neural network for segmentation, in Pytorch"}
{"name": "materialsvirtuallab/maml", "full_name": "materialsvirtuallab/maml", "topics": ["materials-science", "machine-learning", "deep-learning", "machine-learning-force-field", "spectroscopy", "materials-discovery"], "description": "Python for Materials Machine Learning, Materials Descriptors, Machine Learning Force Fields, Deep Learning, etc."}
{"name": "lucidrains/egnn-pytorch", "full_name": "lucidrains/egnn-pytorch", "topics": ["artificial-intelligence", "deep-learning", "equivariance", "graph-neural-network"], "description": "Implementation of E(n)-Equivariant Graph Neural Networks, in Pytorch"}
{"name": "lucidrains/se3-transformer-pytorch", "full_name": "lucidrains/se3-transformer-pytorch", "topics": ["artificial-intelligence", "deep-learning", "attention-mechanism", "transformer", "equivariance", "se3"], "description": "Implementation of SE3-Transformers for Equivariant Self-Attention, in Pytorch. This specific repository is geared towards integration with eventual Alphafold2 replication."}
{"name": "iffix/machin", "full_name": "iffiX/machin", "topics": ["reinforcement-learning", "deep-learning", "pytorch", "pytorch-reinforcement-learning", "dqn", "ddpg", "sac", "ppo", "td3", "prioritized-experience-replay", "distributed", "a3c-pytorch", "python", "pytorch-lightning"], "description": "Reinforcement learning library(framework) designed for PyTorch, implements DQN, DDPG, A2C, PPO, SAC, MADDPG, A3C, APEX, IMPALA ..."}
{"name": "as-ideas/deepphonemizer", "full_name": "as-ideas/DeepPhonemizer", "topics": ["pytorch", "deep-learning", "transformer", "grapheme-to-phoneme", "g2p", "ipa", "phonemization", "phonemes"], "description": "Grapheme to phoneme conversion with deep learning."}
{"name": "j-marple-dev/model_compression", "full_name": "j-marple-dev/model_compression", "topics": ["pruning", "quantization", "lottey-ticket-hypothesis", "pytorch"], "description": "PyTorch Model Compression"}
{"name": "lmnt-com/wavegrad", "full_name": "lmnt-com/wavegrad", "topics": ["machine-learning", "neural-network", "speech-synthesis", "text-to-speech", "wavegrad", "paper", "pytorch", "vocoder", "speech", "pretrained-models", "tts", "deep-learning"], "description": "A fast, high-quality neural vocoder."}
{"name": "nmwsharp/diffusion-net", "full_name": "nmwsharp/diffusion-net", "topics": [], "description": "Pytorch implementation of DiffusionNet for fast and robust learning on 3D surfaces like meshes or point clouds."}
{"name": "leopard-ai/betty", "full_name": "leopard-ai/betty", "topics": ["autodiff", "automatic-differentiation", "bilevel-optimization", "meta-learning", "multilevel-optimization", "hyperparameter-optimization", "neural-architecture-search", "reinforcement-learning", "artificial-intelligence", "machine-learning", "deep-learning", "implicit-differentiation", "pytorch"], "description": "Betty: an automatic differentiation library for generalized meta-learning and multilevel optimization"}
{"name": "oneflow-inc/libai", "full_name": "Oneflow-Inc/libai", "topics": ["oneflow", "nlp", "deep-learning", "large-scale", "data-parallelism", "model-parallelism", "distributed-training", "pipeline-parallelism", "transformer", "self-supervised-learning", "vision-transformer"], "description": "LiBai(\u674e\u767d): A Toolbox for Large-Scale Distributed Parallel Training"}
{"name": "allenai/allenact", "full_name": "allenai/allenact", "topics": ["reinforcement-learning", "embodied-agent", "ai", "research", "python", "deep-learning", "ai2", "computer-vision"], "description": "An open source framework for research in Embodied-AI from AI2."}
{"name": "zjjconan/simam", "full_name": "ZjjConan/SimAM", "topics": [], "description": "The official pytorch implemention of our ICML paper \"SimAM: A Simple, Parameter-Free Attention Module for Convolutional Neural Networks\"."}
{"name": "xyupeng/contrastivecrop", "full_name": "xyupeng/ContrastiveCrop", "topics": ["pytorch", "self-supervised-learning", "contrastive-learning"], "description": "[CVPR 2022 Oral] Crafting Better Contrastive Views for Siamese Representation Learning"}
{"name": "decile-team/cords", "full_name": "decile-team/cords", "topics": ["energy", "machine-learning", "deep-learning", "energy-requirements", "compute-efficient-ml", "speedups-training"], "description": "Reduce end to end training time from days to hours (or hours to minutes), and energy requirements/costs by an order of magnitude using coresets and data selection."}
{"name": "superinsight/superinsight-db", "full_name": "superinsight/superinsight-db", "topics": ["approximate-nearest-neighbor-search", "database", "faiss", "image-search", "machine-learning", "nearest-neighbor-search", "postgres", "postgresql", "relational-database", "similarity-search", "sql", "vector-database", "vector-search", "superinsight", "transformer", "embeddings", "transformers"], "description": "Relational Database for Unstructured Data"}
{"name": "lucidrains/routing-transformer", "full_name": "lucidrains/routing-transformer", "topics": ["artificial-intelligence", "deep-learning", "attention-mechanism", "transformer", "pytorch"], "description": "Fully featured implementation of Routing Transformer"}
{"name": "replicable-marl/marllib", "full_name": "Replicable-MARL/MARLlib", "topics": ["multi-agent-reinforcement-learning", "ray", "reinforcement-learning", "rllib", "pytorch"], "description": "The MARL extension for RLlib. A benchmark for research and industry."}
{"name": "wenet-e2e/wespeaker", "full_name": "wenet-e2e/wespeaker", "topics": ["asv", "ecapa-tdnn", "production-ready", "pytorch", "resnet", "speaker-recognition", "speaker-verification", "tdnn", "xvector", "speaker-diarization", "cn-celeb", "voxceleb", "repvgg"], "description": "Research and Production Oriented Speaker Recognition Toolkit"}
{"name": "dvlab-research/stratified-transformer", "full_name": "dvlab-research/Stratified-Transformer", "topics": ["cvpr2022", "point-cloud", "semantic-segmentation", "transformer"], "description": "Stratified Transformer for 3D Point Cloud Segmentation (CVPR 2022)"}
{"name": "carla-recourse/carla", "full_name": "carla-recourse/CARLA", "topics": ["python", "machine-learning", "artificial-intelligence", "explainable-ai", "explainable-ml", "explainability", "counterfactual-explanations", "counterfactuals", "counterfactual", "recourse", "benchmark", "benchmarking", "tensorflow", "tensorflow2", "pytorch"], "description": "CARLA: A Python Library to Benchmark Algorithmic Recourse and Counterfactual Explanation Algorithms"}
{"name": "stable-baselines-team/stable-baselines3-contrib", "full_name": "Stable-Baselines-Team/stable-baselines3-contrib", "topics": ["reinforcement-learning", "stable-baselines", "pytorch", "rl", "gym", "research", "experimental", "robotics", "openai", "machine-learning", "reinforcement-learning-algorithms", "gsde", "sde"], "description": "Contrib package for Stable-Baselines3 -  Experimental reinforcement learning (RL) code"}
{"name": "pinatafarms/dad-3dheads", "full_name": "PinataFarms/DAD-3DHeads", "topics": ["3d-computer-vision", "3d-face-alignment", "3d-face-modelling", "3d-face-reconstruction", "3d-head", "3d-reconstruction", "computer-vision", "cvpr", "cvpr2022", "machine-learning", "papers-with-code", "pytorch", "3dmm", "dataset", "face-alignment", "face-reenactment", "first-order-motion-model", "flame", "head-pose-estimation"], "description": "Official repo for DAD-3DHeads: A Large-scale Dense, Accurate and Diverse Dataset for 3D Head Alignment from a Single Image (CVPR 2022)."}
{"name": "sczhou/ignn", "full_name": "sczhou/IGNN", "topics": ["deep-learning", "super-resolution", "image-preprocessing", "image-restoration"], "description": "[NeurIPS 2020] Cross-Scale Internal Graph Neural Network for Image Super-Resolution"}
{"name": "henry1iu/tnt-trajectory-predition", "full_name": "Henry1iu/TNT-Trajectory-Prediction", "topics": [], "description": "A Pytorch Implementation of TNT: Target-driveN Trajectory Prediction"}
{"name": "graspnet/graspnet-baseline", "full_name": "graspnet/graspnet-baseline", "topics": ["point-cloud", "grasping", "3d", "deep-learning", "robotics", "graspnet-1billion"], "description": "Baseline model for \"GraspNet-1Billion: A Large-Scale Benchmark for General Object Grasping\" (CVPR 2020)"}
{"name": "nicholasli1995/evoskeleton", "full_name": "Nicholasli1995/EvoSkeleton", "topics": ["human-pose-estimation", "3d-pose-estimation", "data-augmentation", "2d-to-3d", "deep-learning", "evolutionary-algorithms", "bias-correction", "dataset", "annotaton-tool", "3d-computer-vision", "cvpr2020", "geometric-deep-learning", "generalization-on-diverse-scenes", "feed-forward-neural-networks", "synthetic-data", "kinematic-trees", "3d-human-pose", "smpl", "cvpr"], "description": "Official project website for the CVPR 2020 paper (Oral Presentation) \"Cascaded deep monocular 3D human pose estimation wth evolutionary training data\""}
{"name": "unbabel/comet", "full_name": "Unbabel/COMET", "topics": ["machine-translation", "evaluation-metrics", "natural-language-processing", "machine-learning", "artificial-intelligence", "nlp"], "description": " A Neural Framework for MT Evaluation"}
{"name": "edilgin/deepforspeed", "full_name": "edilgin/DeepForSpeed", "topics": ["neural-network", "deep-learning", "self-driving-car", "convolutional-neural-networks"], "description": "ConvNet learns to play Need For Speed"}
{"name": "yl4579/starganv2-vc", "full_name": "yl4579/StarGANv2-VC", "topics": ["voice-conversion", "speech-synthesis", "gan", "deep-learning", "speech", "stargan-v2", "interspeech2021"], "description": "StarGANv2-VC: A Diverse, Unsupervised, Non-parallel Framework for Natural-Sounding Voice Conversion"}
{"name": "zihangjiang/tokenlabeling", "full_name": "zihangJiang/TokenLabeling", "topics": ["imagenet", "vision", "transformer", "lv-vit", "pytorch", "segmentation"], "description": "Pytorch implementation of \"All Tokens Matter: Token Labeling for Training Better Vision Transformers\""}
{"name": "huggingface/exporters", "full_name": "huggingface/exporters", "topics": ["coreml", "deep-learning", "machine-learning", "model-converter", "pytorch", "tensorflow", "tflite", "transformer", "coremltools"], "description": "Export Hugging Face models to Core ML and TensorFlow Lite"}
{"name": "wpeebles/g.pt", "full_name": "wpeebles/G.pt", "topics": ["deep-learning", "diffusion-models", "pytorch", "transformers"], "description": "Official PyTorch Implementation of \"Learning to Learn with Generative Models of Neural Network Checkpoints\""}
{"name": "ain-soph/trojanzoo", "full_name": "ain-soph/trojanzoo", "topics": ["pytorch", "backdoor-attacks", "image-classification", "adversarial-attacks", "deep-learning"], "description": "TrojanZoo provides a universal pytorch platform to conduct security researches (especially backdoor attacks/defenses) of image classification in deep learning."}
{"name": "bubbliiiing/deeplabv3-plus-pytorch", "full_name": "bubbliiiing/deeplabv3-plus-pytorch", "topics": [], "description": "\u8fd9\u662f\u4e00\u4e2adeeplabv3-plus-pytorch\u7684\u6e90\u7801\uff0c\u53ef\u4ee5\u7528\u4e8e\u8bad\u7ec3\u81ea\u5df1\u7684\u6a21\u578b\u3002"}
{"name": "nvlabs/ssv", "full_name": "NVlabs/SSV", "topics": [], "description": "Pytorch implementation of SSV: Self-Supervised Viewpoint Learning from Image Collections (CVPR 2020)"}
{"name": "thudm/graphmae", "full_name": "THUDM/GraphMAE", "topics": ["graph-neural-networks", "self-supervised-learning", "deep-learning", "pytorch"], "description": "GraphMAE: Self-Supervised Masked Graph Autoencoders in KDD'22"}
{"name": "v-iashin/video_features", "full_name": "v-iashin/video_features", "topics": ["pytorch", "multi-gpu", "feature-extraction", "parallel", "video-features", "visual-features", "audio-features", "i3d", "pwc-net", "vggish", "r2plus1d", "resnet", "raft", "optical-flow", "ig65m", "windows", "clip", "s3d"], "description": "Extract video features from raw videos using multiple GPUs. We support RAFT and PWC flow frames as well as S3D, I3D, R(2+1)D, VGGish, CLIP, ResNet features."}
{"name": "bethgelab/model-vs-human", "full_name": "bethgelab/model-vs-human", "topics": ["pytorch", "tensorflow", "robustness", "benchmark", "toolbox"], "description": "Benchmark your model on out-of-distribution datasets with carefully collected human comparison data (NeurIPS 2021 Oral)"}
{"name": "ibm/zshot", "full_name": "IBM/zshot", "topics": ["few-shot", "few-shot-learning", "ned", "ner", "relation-extraction", "zero-shot", "zero-shot-learning", "spacy", "nlp", "ai", "deep-learning", "machine-learning", "named-entity-recognition", "natural-language-processing", "natural-language-understanding", "nlp-library", "pytorch", "relationship-extraction", "transformer"], "description": "Zero and Few shot named entity & relationships recognition"}
{"name": "dpressel/mint", "full_name": "dpressel/mint", "topics": ["transformer-models", "transformer", "transformers", "pytorch", "bert", "gpt2", "gpt", "bart", "t5", "roberta", "sentence-transformers", "tutorials", "opt"], "description": "MinT: Minimal Transformer Library and Tutorials"}
{"name": "junnyu/roformer_pytorch", "full_name": "JunnYu/RoFormer_pytorch", "topics": ["pytorch", "roformer-v1", "roformer-v2", "language-model"], "description": "RoFormer V1 & V2 pytorch"}
{"name": "golsun/dialogrpt", "full_name": "golsun/DialogRPT", "topics": ["dialog", "pretrained-models", "transformers", "pytorch", "conversational-ai", "dialogpt", "gpt-2", "human-feedback-data", "dataset", "dialog-datasets"], "description": "EMNLP 2020: \"Dialogue Response Ranking Training with Large-Scale Human Feedback Data\""}
{"name": "quiver-team/torch-quiver", "full_name": "quiver-team/torch-quiver", "topics": ["pytorch", "geometric-deep-learning", "graph-learning", "gpu-acceleration", "graph-neural-networks", "distributed-computing"], "description": "PyTorch Library for Fast and Easy Distributed Graph Learning"}
{"name": "ericyangyu/ppo-for-beginners", "full_name": "ericyangyu/PPO-for-Beginners", "topics": ["ppo", "reinforcement-learning", "reinforcement-learning-algorithms", "machine-learning", "pytorch"], "description": "A simple and well styled PPO implementation. Based on my Medium series: https://medium.com/@eyyu/coding-ppo-from-scratch-with-pytorch-part-1-4-613dfc1b14c8."}
{"name": "pytorch/torchx", "full_name": "pytorch/torchx", "topics": ["pytorch", "machine-learning", "kubernetes", "slurm", "distributed-training", "pipelines", "components", "deep-learning", "python", "aws-batch", "ray", "airflow"], "description": "TorchX is a universal job launcher for PyTorch applications. TorchX is designed to have fast iteration time for training/research and support for E2E production ML pipelines when you're ready."}
{"name": "gradsflow/chitra", "full_name": "gradsflow/chitra", "topics": ["tensorflow", "image-processing", "object-detection", "deep-learning", "image-dataset", "visualization", "gradcam", "model-interpretation", "model-visualization", "image-classification", "bounding-boxes", "model-deployment", "mlops", "model-serving", "python", "machine-learning", "fastapi", "hacktoberfest", "pytorch"], "description": "A multi-functional library for full-stack Deep Learning. Simplifies Model Building, API development, and Model Deployment."}
{"name": "zhaogaofeng611/textmatch", "full_name": "zhaogaofeng611/TextMatch", "topics": [], "description": "\u57fa\u4e8ePytorch\u7684\uff0c\u4e2d\u6587\u8bed\u4e49\u76f8\u4f3c\u5ea6\u5339\u914d\u6a21\u578b\uff08ABCNN\u3001Albert\u3001Bert\u3001BIMPM\u3001DecomposableAttention\u3001DistilBert\u3001ESIM\u3001RE2\u3001Roberta\u3001SiaGRU\u3001XlNet\uff09"}
{"name": "nianticlabs/footprints", "full_name": "nianticlabs/footprints", "topics": ["computer-vision", "deep-learning", "depth-estimation", "monodepth", "pytorch"], "description": "[CVPR 2020] Estimation of the visible and hidden traversable space from a single color image"}
{"name": "dptech-corp/uni-mol", "full_name": "dptech-corp/Uni-Mol", "topics": ["molecular-modeling", "pre-trained-model", "pretraining", "deep-learning"], "description": "A Universal 3D Molecular Representation Learning Framework"}
{"name": "shivanandroy/simplet5", "full_name": "Shivanandroy/simpleT5", "topics": ["t5", "transformers", "summarization", "translation", "classification", "pytorch", "simplet5", "finetune", "fine-tuning", "t5-model", "training"], "description": "simpleT5 is built on top of PyTorch-lightning\u26a1\ufe0f and Transformers\ud83e\udd17 that lets you quickly train your T5 models."}
{"name": "lucidrains/adan-pytorch", "full_name": "lucidrains/Adan-pytorch", "topics": ["artificial-intelligence", "deep-learning", "optimizer"], "description": "Implementation of the Adan (ADAptive Nesterov momentum algorithm) Optimizer in Pytorch"}
{"name": "nikolazubic/2dimageto3dmodel", "full_name": "NikolaZubic/2dimageto3dmodel", "topics": ["3d-computer-graphics", "3d-reconstruction", "pose-prediction", "single-view-reconstruction", "computer-vision", "computer-graphics", "kaolin", "pytorch", "deep-learning", "neural-networks", "loss-functions", "rendering", "gan", "shapenet", "shapenet-dataset", "cub-dataset", "pascal3d", "mesh", "voxel", "point-cloud"], "description": "We evaluate our method on different datasets (including ShapeNet, CUB-200-2011, and Pascal3D+) and achieve state-of-the-art results, outperforming all the other supervised and unsupervised methods and 3D representations, all in terms of performance, accuracy, and training time."}
{"name": "sleepychord/cogltx", "full_name": "Sleepychord/CogLTX", "topics": ["bert", "pytorch"], "description": "The source code of NeurIPS 2020 paper \"CogLTX: Applying BERT to Long Texts\""}
{"name": "mit-han-lab/hardware-aware-transformers", "full_name": "mit-han-lab/hardware-aware-transformers", "topics": ["hardware-aware", "transformer", "specialization", "efficient-model", "natural-language-processing", "machine-translation"], "description": "[ACL'20] HAT: Hardware-Aware Transformers for Efficient Natural Language Processing"}
{"name": "jetrunner/bert-of-theseus", "full_name": "JetRunner/BERT-of-Theseus", "topics": ["bert", "transformers", "nlp", "glue", "model-compression"], "description": "\u26f5\ufe0fThe official PyTorch implementation for \"BERT-of-Theseus: Compressing BERT by Progressive Module Replacing\" (EMNLP 2020)."}
{"name": "luping-liu/pndm", "full_name": "luping-liu/PNDM", "topics": ["diffusion-models", "numerical-methods", "generative-models", "pytorch"], "description": "The official implementation for Pseudo Numerical Methods for Diffusion Models on Manifolds (PNDM, PLMS | ICLR2022)"}
{"name": "junyuchen245/vit-v-net_for_3d_image_registration_pytorch", "full_name": "junyuchen245/ViT-V-Net_for_3D_Image_Registration_Pytorch", "topics": ["vision-transformer", "image-registration", "pytorch-implementation", "convolutional-neural-networks"], "description": "Vision Transformer for 3D medical image registration (Pytorch)."}
{"name": "vita-group/autospeech", "full_name": "VITA-Group/AutoSpeech", "topics": ["automl", "autospeech", "neural-architecture-search", "speaker-recognition", "pytorch"], "description": "[InterSpeech 2020] \"AutoSpeech: Neural Architecture Search for Speaker Recognition\" by Shaojin Ding*, Tianlong Chen*, Xinyu Gong, Weiwei Zha, Zhangyang Wang "}
{"name": "dome272/maskgit-pytorch", "full_name": "dome272/MaskGIT-pytorch", "topics": [], "description": "Pytorch implementation of MaskGIT: Masked Generative Image Transformer (https://arxiv.org/pdf/2202.04200.pdf)"}
{"name": "nooneust/is-mvsnet", "full_name": "NoOneUST/IS-MVSNet", "topics": ["3d-reconstruction", "artificial-intelligence", "deep-learning", "meachine-learning", "neural-networks", "depth-estimation"], "description": "[ECCV 2022] IS-MVSNet: Importance-sampling-based MVSNet"}
{"name": "dptech-corp/uni-fold", "full_name": "dptech-corp/Uni-Fold", "topics": ["alphafold", "alphafold-multimer", "protein-structure", "deep-learning", "pytorch"], "description": "An open-source platform for developing protein models beyond AlphaFold."}
{"name": "somepago/saint", "full_name": "somepago/saint", "topics": ["deep-learning", "tabular-data", "transformer"], "description": "The official PyTorch implementation of recent paper - SAINT: Improved Neural Networks for Tabular Data via Row Attention and Contrastive Pre-Training"}
{"name": "wenjiedu/pypots", "full_name": "WenjieDu/PyPOTS", "topics": ["time-series", "missing-data", "missing-values", "partially-observed", "neural-network", "machine-learning", "data-mining", "partially-observed-time-series", "time-series-classification", "time-series-forecasting", "time-series-analysis", "time-series-imputation", "time-series-anomaly-detection", "incomplete-data", "irregular-time-series", "imputation", "classification", "forecasting", "clustering"], "description": "A python toolbox/library for data mining on partially-observed time series, supporting tasks of forecasting/imputation/classification/clustering on incomplete (irregularly-sampled) multivariate time series with missing values."}
{"name": "texttron/tevatron", "full_name": "texttron/tevatron", "topics": ["pytorch", "transformer", "dense-retrieval", "dpr", "information-retrieval", "question-answering", "jax", "flax"], "description": "Tevatron - A flexible toolkit for dense retrieval research and development."}
{"name": "maudzung/rtm3d", "full_name": "maudzung/RTM3D", "topics": ["rtm3d", "real-time", "monocular-images", "centernet", "pytorch-implementation", "3d-object-detection", "autonomous-vehicles", "self-driving-car", "autonomous-driving", "pytorch", "kitti-dataset"], "description": "Unofficial PyTorch implementation of \"RTM3D: Real-time Monocular 3D Detection from Object Keypoints for Autonomous Driving\" (ECCV 2020)"}
{"name": "mit-han-lab/mcunet", "full_name": "mit-han-lab/mcunet", "topics": ["deep-learning", "neural-architecture-search", "pytorch", "tinyml", "microncontroller"], "description": "[NeurIPS 2020] MCUNet: Tiny Deep Learning on IoT Devices; [NeurIPS 2021] MCUNetV2: Memory-Efficient Patch-based Inference for Tiny Deep Learning"}
{"name": "lucastabelini/polylanenet", "full_name": "lucastabelini/PolyLaneNet", "topics": ["lane-detection", "deep-learning", "pytorch"], "description": "Code for the paper entitled \"PolyLaneNet: Lane Estimation via Deep Polynomial Regression\" (ICPR 2020)"}
{"name": "jihyongoh/xvfi", "full_name": "JihyongOh/XVFI", "topics": ["video-frame-interpolation", "frame-interpolation", "convolutional-neural-networks", "pytorch", "deep-learning", "extreme-video-frame-interpolatioin", "dataset", "4k-frame", "iccv", "iccv2021"], "description": "Official repository of XVFI (ICCV 2021, Oral)"}
{"name": "yale-lily/summertime", "full_name": "Yale-LILY/SummerTime", "topics": ["nlp", "python", "deep-learning", "neural-networks", "text-summarization", "pytorch"], "description": "An open-source text summarization toolkit for non-experts."}
{"name": "lucidrains/x-unet", "full_name": "lucidrains/x-unet", "topics": ["artificial-intelligence", "deep-learning", "u-net", "segmentation", "image-generation"], "description": "Implementation of a U-net complete with efficient attention as well as the latest research findings"}
{"name": "kaiyuyue/torchshard", "full_name": "KaiyuYue/torchshard", "topics": ["model-parallel", "shard-training", "pytorch"], "description": "TorchShard: Slicing a PyTorch Tensor Into Parallel Shards."}
{"name": "tusimple/centerformer", "full_name": "TuSimple/centerformer", "topics": ["lidar-point-cloud", "transformer"], "description": "Implementation for CenterFormer: Center-based Transformer for 3D Object Detection (ECCV 2022)"}
{"name": "media-smart/volksdep", "full_name": "Media-Smart/volksdep", "topics": ["pytorch", "onnx", "tensorrt", "deploy", "tensorflow", "jetson-nano", "jetson-tx2", "jetson-xavier", "inference", "python", "keras", "acceleration"], "description": "volksdep is an open-source toolbox for deploying and accelerating PyTorch, ONNX and TensorFlow models with TensorRT."}
{"name": "liznerski/fcdd", "full_name": "liznerski/fcdd", "topics": ["anomaly-detection", "deep-learning", "one-class-learning", "xai", "explanations", "explainable-deepneuralnetwork", "machine-learning", "deep-anomaly-detection", "pytorch", "python", "mvtec-ad"], "description": "Repository for the Explainable Deep One-Class Classification paper"}
{"name": "lightning-ai/tutorials", "full_name": "Lightning-AI/tutorials", "topics": ["tutorials", "jupyter-notebook", "machine-learning", "deep-learning", "notebooks", "python-scripts", "lightning"], "description": "Collection of Pytorch lightning tutorial form as rich scripts automatically transformed to ipython notebooks."}
{"name": "hongsukchoi/tcmr_release", "full_name": "hongsukchoi/TCMR_RELEASE", "topics": ["video", "temporal", "3d-human-mesh", "3d-human-shape-and-pose-estimation", "3d-human-motion", "cvpr2021"], "description": "Official Pytorch implementation of \"Beyond Static Features for Temporally Consistent 3D Human Pose and Shape from a Video\", CVPR 2021"}
{"name": "hazdzz/stgcn", "full_name": "hazdzz/STGCN", "topics": ["pytorch", "gcn", "tcn", "road-traffic-prediction", "gnn"], "description": "The PyTorch version of STGCN."}
{"name": "pypose/pypose", "full_name": "pypose/pypose", "topics": ["robotics", "pytorch", "python", "learning", "lie-group"], "description": "To connect classic robotics with modern learning methods seamlessly."}
{"name": "yanx27/pointasnl", "full_name": "yanx27/PointASNL", "topics": ["point-cloud", "segmentation", "classification", "sample", "tensorflow", "self-driving", "modelnet-dataset", "semantickitti", "scannet-dataset"], "description": "PointASNL: Robust Point Clouds Processing using Nonlocal Neural Networks with Adaptive Sampling \uff08CVPR 2020\uff09"}
{"name": "lucidrains/memory-efficient-attention-pytorch", "full_name": "lucidrains/memory-efficient-attention-pytorch", "topics": ["artificial-intelligence", "deep-learning", "attention-mechanism", "memory-efficient"], "description": "Implementation of a memory efficient multi-head attention as proposed in the paper, \"Self-attention Does Not Need O(n\u00b2) Memory\""}
{"name": "suyukun666/ufo", "full_name": "suyukun666/UFO", "topics": ["video-salient-object-detection", "matching", "co-saliency-detection", "co-segmentation", "deep-learning", "pytorch", "inpainting", "video"], "description": "Official PyTorch implementation of the \u201cA Unified Transformer Framework for Co-Segmentation, Co-Saliency Detection and Video Salient Object Detection\u201d."}
{"name": "artlabss/tennis-tracking", "full_name": "ArtLabss/tennis-tracking", "topics": ["deep-learning", "python", "video", "yolo", "tennis", "line-detection", "ball-tracking", "machine-learning", "tennis-tracking"], "description": "Open-source Monocular Python HawkEye for Tennis"}
{"name": "mxin262/swintextspotter", "full_name": "mxin262/SwinTextSpotter", "topics": [], "description": "Pytorch re-implementation of Paper: SwinTextSpotter: Scene Text Spotting via Better Synergy between Text Detection and Text Recognition (CVPR 2022)"}
{"name": "shahules786/mayavoz", "full_name": "shahules786/mayavoz", "topics": ["deep-learning", "pretrained-models", "python", "pytorch", "speech-enhancement", "audio-enhancement", "denoiser"], "description": "Pytorch based speech enhancement toolkit."}
{"name": "jhultman/vision3d", "full_name": "jhultman/vision3d", "topics": ["3d-deep-learning", "object-detection", "lidar", "point-cloud", "pytorch", "voxel", "detection", "codebase", "perception", "autonomous-vehicles", "real-time"], "description": "Research platform for 3D object detection in PyTorch."}
{"name": "thinklab-sjtu/pygmtools", "full_name": "Thinklab-SJTU/pygmtools", "topics": ["combinatorial-optimization", "deep-learning", "graph-matching", "python-library"], "description": "Python graph matching solvers & evaluating protocol."}
{"name": "lucidrains/bit-diffusion", "full_name": "lucidrains/bit-diffusion", "topics": ["artificial-intelligence", "deep-learning", "denoising-diffusion", "discrete"], "description": "Implementation of Bit Diffusion, Hinton's group's attempt at discrete denoising diffusion, in Pytorch"}
{"name": "jeremiemelo/pytorch-onn", "full_name": "JeremieMelo/pytorch-onn", "topics": ["machine-learning", "neural-network", "optics", "pytorch", "optical-computing", "optical-neural-network", "pytorch-onn"], "description": "A PyTorch Library for Photonic Integrated Circuit Simulation and Photonic AI Computing"}
{"name": "augmentedstartups/as-one", "full_name": "augmentedstartups/AS-One", "topics": ["computer-vision", "opencv", "yolor", "yolov5", "yolov7", "yolox", "deep-learning", "object-detection", "pytorch", "tracking", "ultralytics", "yolov8"], "description": "Easy & Modular Computer Vision Detectors and Trackers - Run YOLOv8,v7,v6,v5,R,X in under 20 lines of code."}
{"name": "kjsman/stable-diffusion-pytorch", "full_name": "kjsman/stable-diffusion-pytorch", "topics": ["diffusion", "image-generation", "pytorch", "stable-diffusion"], "description": "Yet another PyTorch implementation of Stable Diffusion (probably easy to read)"}
{"name": "label-sleuth/label-sleuth", "full_name": "label-sleuth/label-sleuth", "topics": ["active-learning", "annotation-tool", "labeling-tool", "nlp", "no-code", "python", "pytorch", "react", "text-annotation", "text-classification", "transformers"], "description": "Open source no-code system for text annotation and building of text classifiers"}
{"name": "triton-inference-server/model_analyzer", "full_name": "triton-inference-server/model_analyzer", "topics": ["deep-learning", "inference", "gpu", "performance-analysis"], "description": "Triton Model Analyzer is a CLI tool to help with better understanding of the compute and memory requirements of the Triton Inference Server models."}
{"name": "mmaaz60/mvits_for_class_agnostic_od", "full_name": "mmaaz60/mvits_for_class_agnostic_od", "topics": ["class-agnostic-detection", "multimodal-learning", "open-world-detection", "object-detection", "pytorch", "psuedo-labels"], "description": "[ECCV'22] Official repository of paper titled \"Class-agnostic Object Detection with Multi-modal Transformer\"."}
{"name": "hustvl/tineuvox", "full_name": "hustvl/TiNeuVox", "topics": ["view-synthesis", "3d", "computer-graphics", "computer-vision", "nerf", "neural-network", "deep-learning", "machine-learning", "dynamic-scenes", "tineuvox"], "description": "TiNeuVox: Fast Dynamic Radiance Fields with Time-Aware Neural Voxels (SIGGRAPH Asia 2022)"}
{"name": "allenai/tango", "full_name": "allenai/tango", "topics": ["python", "python3", "machine-learning", "nlp", "ai", "pytorch"], "description": "Organize your experiments into discrete steps that can be cached and reused throughout the lifetime of your research project."}
{"name": "lucidrains/sinkhorn-transformer", "full_name": "lucidrains/sinkhorn-transformer", "topics": ["artificial-intelligence", "deep-learning", "attention-mechanism", "transformers", "pytorch"], "description": "Sinkhorn Transformer - Practical implementation of Sparse Sinkhorn Attention"}
{"name": "ai4finance-foundation/finrl_podracer", "full_name": "AI4Finance-Foundation/FinRL_Podracer", "topics": ["deep-reinforcement-learning", "machine-learning-algorithms", "quantitative-finance", "quant", "algorithmic-trading", "pytorch", "openai-gym"], "description": "Cloud-native Financial Reinforcement Learning"}
{"name": "ashutosh1919/explainable-cnn", "full_name": "ashutosh1919/explainable-cnn", "topics": ["explainable-ai", "explainable-ml", "cnn", "cnn-pytorch", "cnn-classification", "grad-cam", "grad-cam-visualization", "saliency-map", "saliency-detection", "visualization", "cnn-visualization", "cnn-visualization-technique", "guided-backpropagation", "guided-grad-cam", "pytorch", "pytorch-implementation"], "description": "\ud83d\udce6 PyTorch based visualization package for generating layer-wise explanations for CNNs."}
{"name": "raywzy/ict", "full_name": "raywzy/ICT", "topics": ["image-inpainting", "image-completion", "transformer", "iccv2021", "pytorch"], "description": "High-Fidelity Pluralistic Image Completion with Transformers (ICCV 2021)"}
{"name": "hellloxiaotian/lesrcnn", "full_name": "hellloxiaotian/LESRCNN", "topics": ["image-super-resolution", "cnn", "cnn-pytorch", "lightweight-enhanced-network", "enhancement-and-compression", "information-refinement", "image-processing", "deep-learning", "low-level-vision", "python27"], "description": "Lightweight Image Super-Resolution with Enhanced CNN (Knowledge-Based Systems,2020)"}
{"name": "juanmc2005/streamingspeakerdiarization", "full_name": "juanmc2005/StreamingSpeakerDiarization", "topics": ["speaker-diarization", "streaming-audio", "real-time", "pytorch", "speaker-embedding", "rxpy"], "description": "Lightweight python library for speaker diarization in real time implemented in pytorch"}
{"name": "conceptofmind/lamda-pytorch", "full_name": "conceptofmind/LaMDA-rlhf-pytorch", "topics": ["attention-mechanism", "deep-learning", "machine-learning", "artificial-intelligence", "human-feedback", "reinforcement-learning", "transformers"], "description": "Open-source pre-training implementation of Google's LaMDA in PyTorch. Adding RLHF similar to ChatGPT."}
{"name": "taishan1994/pytorch_bert_bilstm_crf_ner", "full_name": "taishan1994/pytorch_bert_bilstm_crf_ner", "topics": ["bert", "crf", "named-entity-recognition", "ner", "pytorch"], "description": "\u57fa\u4e8epytorch\u7684bert_bilstm_crf\u4e2d\u6587\u547d\u540d\u5b9e\u4f53\u8bc6\u522b"}
{"name": "lucidrains/conformer", "full_name": "lucidrains/conformer", "topics": ["artificial-intelligence", "deep-learning", "transformer"], "description": "Implementation of the convolutional module from the Conformer paper, for use in Transformers"}
{"name": "sajjjadayobi/facelib", "full_name": "sajjjadayobi/FaceLib", "topics": ["face", "face-detection", "face-recognition", "retinaface", "pytorch", "age-gender", "facial-expression-recognition", "gender-estimation", "recognition", "deep-learning"], "description": "Face Analysis: Detection, Age Gender Estimation & Recognition"}
{"name": "zixuanke/pycontinual", "full_name": "ZixuanKe/PyContinual", "topics": ["continual-learning", "natural-language-processing", "catastrophic-forgetting", "knowledge-transfer", "capsule-network", "attention-mechanism", "text-classification", "transfer-learning", "transformer-architecture"], "description": "PyContinual (An Easy and Extendible Framework for Continual Learning)"}
{"name": "naver/splade", "full_name": "naver/splade", "topics": ["bert", "information-retrieval", "nlp", "passage-retrieval", "splade", "sparse"], "description": "SPLADE: sparse neural search (SIGIR21, SIGIR22)"}
{"name": "lucidrains/electra-pytorch", "full_name": "lucidrains/electra-pytorch", "topics": ["artificial-intelligence", "deep-learning", "pre-training", "transformer"], "description": "A simple and working implementation of Electra, the fastest way to pretrain language models from scratch, in Pytorch"}
{"name": "sjmoran/deeplpf", "full_name": "sjmoran/DeepLPF", "topics": ["cvpr2020", "raw2rgb", "deep-learning", "computational-photography", "computer-vision", "adobe-upe", "paper", "rgb", "cvpr"], "description": "Code for CVPR 2020 paper \"Deep Local Parametric Filters for Image Enhancement\""}
{"name": "voidful/textrl", "full_name": "voidful/TextRL", "topics": ["nlp", "reinforcement-learning", "language-model", "nlg", "controlled-nlg", "gpt-3", "gpt-2", "pytorch", "rlhf", "chatgpt"], "description": "Implementation of ChatGPT RLHF (Reinforcement Learning with Human Feedback) on any generation model in huggingface's transformer (blommz-176B/bloom/gpt/bart/T5/MetaICL)"}
{"name": "trackmania-rl/tmrl", "full_name": "trackmania-rl/tmrl", "topics": ["reinforcement-learning", "pytorch", "trackmania", "self-driving-car", "soft-actor-critic"], "description": "Reinforcement Learning for real-time applications - host of the TrackMania Roborace League"}
{"name": "jieyuz2/wrench", "full_name": "JieyuZ2/wrench", "topics": ["weak-supervision", "weakly-supervised-learning", "data-programming", "data-centric-ai", "benchmark-framework", "machine-learning", "dataset", "nlp", "sequence-labeling", "deep-learning", "robust-learning"], "description": "WRENCH: Weak supeRvision bENCHmark"}
{"name": "rentainhe/pytorch-distributed-training", "full_name": "rentainhe/pytorch-distributed-training", "topics": ["pytorch", "apex", "ddp-training", "deep-learning", "cuda"], "description": "Simple tutorials on Pytorch DDP training"}
{"name": "misads/easy_detection", "full_name": "misads/easy_detection", "topics": ["yolo", "voc", "coco", "pytorch", "detection"], "description": "\u4e00\u4e2a\u7b80\u5355\u65b9\u4fbf\u7684\u76ee\u6807\u68c0\u6d4b\u6846\u67b6(PyTorch\u73af\u5883\u53ef\u76f4\u63a5\u8fd0\u884c\uff0c\u4e0d\u9700\u8981cuda\u7f16\u8bd1)\uff0c\u652f\u6301Faster_RCNN\u3001Cascade_RCNN\u3001Yolo\u7cfb\u5217\u3001SSD\u7b49\u7ecf\u5178\u7f51\u7edc\u3002"}
{"name": "xuchen-ethz/snarf", "full_name": "xuchen-ethz/snarf", "topics": ["3d", "3d-vision", "computer-vision", "computer-graphics", "neural-network", "animation", "skinning", "implicit-functions", "iccv2021", "iccv"], "description": "Official code release for ICCV 2021 paper SNARF: Differentiable Forward Skinning for Animating Non-rigid Neural Implicit Shapes."}
{"name": "wanglibo1995/geoseg", "full_name": "WangLibo1995/GeoSeg", "topics": ["pytorch-lightning", "remote-sensing-image", "vision-transformer", "deep-learning", "pytorch", "timm", "cnn", "segmentation", "semantic-segmentation"], "description": "UNetFormer: A UNet-like transformer for efficient semantic segmentation of remote sensing urban scene imagery, ISPRS. Also, including other vision transformers and CNNs for satellite, aerial image and UAV image segmentation."}
{"name": "valeoai/lost", "full_name": "valeoai/LOST", "topics": [], "description": "Pytorch implementation of LOST unsupervised object discovery method  "}
{"name": "cap-ntu/ml-model-ci", "full_name": "cap-ntu/ML-Model-CI", "topics": ["serving", "deep-learning", "continuous-integration", "inference", "convert-models", "dispatcher", "profiler", "tensorflow-serving", "onnx", "pytorch", "tensorrt", "tensorrt-inference-server", "mlops"], "description": "MLModelCI is a complete MLOps platform for managing, converting, profiling, and deploying MLaaS (Machine Learning-as-a-Service), bridging the gap between current ML training and serving systems."}
{"name": "codeslake/ifan", "full_name": "codeslake/IFAN", "topics": ["defocus-deblurring", "defocus-blur", "pytorch", "deep-learning", "cvpr2021"], "description": "[CVPR 2021] Official PyTorch Implementation for \"Iterative Filter Adaptive Network for Single Image Defocus Deblurring\""}
{"name": "airaria/textpruner", "full_name": "airaria/TextPruner", "topics": ["pruning", "pre-trained-language-models", "model-pruning", "transformer"], "description": "A PyTorch-based model pruning toolkit for pre-trained language models"}
{"name": "likyoo/siam-nestedunet", "full_name": "likyoo/Siam-NestedUNet", "topics": ["pytorch", "change-detection"], "description": "The pytorch implementation for \"SNUNet-CD: A Densely Connected Siamese Network for Change Detection of VHR Images\""}
{"name": "unifyai/ivy", "full_name": "unifyai/ivy", "topics": ["python", "machine-learning", "deep-learning", "neural-network", "gpu", "autograd", "ivy", "abstraction", "template", "tensorflow", "pytorch", "mxnet", "numpy", "jax"], "description": "The Unified Machine Learning Framework"}
{"name": "ydwen/opensphere", "full_name": "ydwen/opensphere", "topics": ["deep-learning", "face-recognition", "pytorch", "sphereface", "sphereface2"], "description": "A hyperspherical face recognition library based on PyTorch"}
{"name": "clovaai/clovacall", "full_name": "clovaai/ClovaCall", "topics": ["speech-recognition", "speech-corpus", "korean-speech", "call-based-speech-corpus", "goal-oriented-dialog", "interspeech2020"], "description": "ClovaCall dataset and Pytorch LAS baseline code (Interspeech 2020)"}
{"name": "junjue-wang/loveda", "full_name": "Junjue-Wang/LoveDA", "topics": ["semantic-segmentation", "domain-adaptation", "remote-sensing", "pytorch"], "description": "[NeurIPS 2021] LoveDA: A Remote Sensing Land-Cover Dataset for Domain Adaptive Semantic Segmentation"}
{"name": "maxrmorrison/torchcrepe", "full_name": "maxrmorrison/torchcrepe", "topics": ["pitch", "crepe", "pitch-tracker", "pytorch"], "description": "Pytorch implementation of the CREPE pitch tracker"}
{"name": "grumpyzhou/patch2pix", "full_name": "GrumpyZhou/patch2pix", "topics": ["image-matching", "feature-matching", "deep-learning"], "description": "Patch2Pix: Epipolar-Guided Pixel-Level Correspondences [CVPR2021]"}
{"name": "frank-xwang/ride-longtailrecognition", "full_name": "frank-xwang/RIDE-LongTailRecognition", "topics": [], "description": "[ICLR 2021 Spotlight] Pytorch implementation for \"Long-tailed Recognition by Routing Diverse Distribution-Aware Experts.\""}
{"name": "backprop-ai/backprop", "full_name": "backprop-ai/backprop", "topics": ["natural-language-processing", "nlp", "question-answering", "bert", "language-model", "text-classification", "multilingual-models", "image-classification", "fine-tuning", "transfer-learning", "transformers"], "description": "Backprop makes it simple to use, finetune, and deploy state-of-the-art ML models."}
{"name": "ukplab/gpl", "full_name": "UKPLab/gpl", "topics": ["information-retrieval", "domain-adaptation", "nlp", "transformers", "vector-search", "bert"], "description": "Powerful unsupervised domain adaptation method for dense retrieval. Requires only unlabeled corpus and yields massive improvement: \"GPL: Generative Pseudo Labeling for Unsupervised Domain Adaptation of Dense Retrieval\" https://arxiv.org/abs/2112.07577"}
{"name": "lucidrains/flash-pytorch", "full_name": "lucidrains/FLASH-pytorch", "topics": ["artificial-intelligence", "deep-learning", "attention-mechanism", "transformers", "efficient-transformers"], "description": "Implementation of the Transformer variant proposed in \"Transformer Quality in Linear Time\""}
{"name": "threedle/text2mesh", "full_name": "threedle/text2mesh", "topics": ["3d", "meshes", "mesh-generation", "pytorch", "computer-graphics", "neural-style", "neural-fields", "differentiable-rendering", "geometry-processing"], "description": "3D mesh stylization driven by a text input in PyTorch"}
{"name": "jia-zhuang/pytorch-multi-gpu-training", "full_name": "jia-zhuang/pytorch-multi-gpu-training", "topics": ["pytorch", "multi-gpu-training"], "description": "\u6574\u7406 pytorch \u5355\u673a\u591a GPU \u8bad\u7ec3\u65b9\u6cd5\u4e0e\u539f\u7406"}
{"name": "datawhalechina/torch-rechub", "full_name": "datawhalechina/torch-rechub", "topics": ["ctr-prediction", "pytorch", "recommendation-system", "recsys"], "description": "A Lighting Pytorch Framework for Recommendation Models, Easy-to-use and Easy-to-extend."}
{"name": "jby1993/selfreconcode", "full_name": "jby1993/SelfReconCode", "topics": [], "description": "This repository contains a pytorch implementation of \"SelfRecon: Self Reconstruction Your Digital Avatar from Monocular Video (CVPR 2022, Oral)\"."}
{"name": "lalitpagaria/obsei", "full_name": "obsei/obsei", "topics": ["artificial-intelligence", "natural-language-processing", "sentiment-analysis", "workflow", "social-network-analysis", "customer-engagement", "text-analysis", "text-analytics", "python", "nlp", "issue-tracking-system", "customer-support", "lowcode", "text-classification", "anonymization", "low-code", "business-process-automation", "workflow-automation", "process-automation", "social-listening"], "description": "Obsei is a low code AI powered automation tool. It can be used in various business flows like social listening, AI based alerting, brand image analysis, comparative study and more ."}
{"name": "assemblyai-examples/minimagen", "full_name": "AssemblyAI-Examples/MinImagen", "topics": ["deep-learning", "diffusion-models", "imagen", "pytorch", "super-resolution", "text-to-image"], "description": "MinImagen: A minimal implementation of the Imagen text-to-image model"}
{"name": "nvidia/transformer-ls", "full_name": "NVIDIA/transformer-ls", "topics": ["efficient-transformers", "long-sequence", "transformer", "vision-transformer"], "description": "Official PyTorch Implementation of Long-Short Transformer (NeurIPS 2021)."}
{"name": "opendilab/di-treetensor", "full_name": "opendilab/DI-treetensor", "topics": ["tensor", "tree-structure", "numpy", "pytorch", "python", "deep-learning", "reinforcement-learning"], "description": "Let DI-treetensor help you simplify the structure processing!\uff08\u6811\u5f62\u8fd0\u7b97\u4e00\u4e0d\u5c0f\u5fc3\u5c31\u903b\u8f91\u6df7\u4e71\uff1fDI-treetensor\u5feb\u901f\u5e2e\u4f60\u641e\u5b9a\uff09"}
{"name": "gmvandeven/brain-inspired-replay", "full_name": "GMvandeVen/brain-inspired-replay", "topics": ["continual-learning", "lifelong-learning", "incremental-learning", "generative-replay", "brain-inspired", "deep-learning", "artificial-neural-networks", "split-mnist", "permuted-mnist", "split-cifar100", "internal-replay", "replay-through-feedback", "replay", "synaptic-intelligence", "elastic-weight-consolidation", "variational-autoencoder", "distillation"], "description": "A brain-inspired version of generative replay for continual learning with deep neural networks (e.g., class-incremental learning on CIFAR-100; PyTorch code)."}
{"name": "mlsysops/active-learning-as-a-service", "full_name": "MLSysOps/Active-Learning-as-a-Service", "topics": ["active-learning", "mlsys", "mlops", "deep-learning", "machine-learning", "automl", "pytorch"], "description": "A scalable & efficient active learning/data selection system for everyone."}
{"name": "ray-project/ray_lightning", "full_name": "ray-project/ray_lightning", "topics": [], "description": "Pytorch Lightning Distributed Accelerators using Ray"}
{"name": "edenbd/multimodalstory-demo", "full_name": "EdenBD/MultiModalStory-demo", "topics": ["nlp", "multimodal", "interactive-storytelling", "fastapi", "vuejs2"], "description": "FairyTailor: Multimodal Generative Framework for Storytelling"}
{"name": "fire717/movenet.pytorch", "full_name": "fire717/movenet.pytorch", "topics": ["deep-learning", "pytorch", "pose-estimation", "light-weight-network"], "description": " A Pytorch implementation of MoveNet from Google. Include training code and pre-trained model."}
{"name": "rxn4chemistry/rxnmapper", "full_name": "rxn4chemistry/rxnmapper", "topics": ["chemistry", "reactions", "rxn", "atom-mapping", "smiles", "transformer"], "description": "RXNMapper: Unsupervised attention-guided atom-mapping. Code complementing our Science Advances publication on \"Extraction of organic chemistry grammar from unsupervised learning of chemical reactions\" (https://advances.sciencemag.org/content/7/15/eabe4166). "}
{"name": "lucidrains/ema-pytorch", "full_name": "lucidrains/ema-pytorch", "topics": ["artificial-intelligence", "deep-learning", "exponential-moving-average"], "description": "A simple way to keep track of an Exponential Moving Average (EMA) version of your pytorch model"}
{"name": "tfzhou/protoseg", "full_name": "tfzhou/ProtoSeg", "topics": ["semantic-segmentation", "prototype", "nonparametric", "fcn", "transformer", "softmax", "nearest-neighbours-classifier"], "description": "CVPR2022 (Oral) - Rethinking Semantic Segmentation: A Prototype View"}
{"name": "lukaszahradnik/pyneuralogic", "full_name": "LukasZahradnik/PyNeuraLogic", "topics": ["machine-learning", "deep-learning", "graph-neural-networks", "relational-learning", "python", "geometric-deep-learning", "pytorch", "logic-programming", "differentiable-programming"], "description": "PyNeuraLogic lets you use Python to create Differentiable Logic Programs"}
{"name": "wgcban/changeformer", "full_name": "wgcban/ChangeFormer", "topics": ["change-detection", "remote-sensing", "siamese-network", "transformer-encoder", "transformer-architecture", "attention-mechanism", "pytorch", "deep-learning", "satellite-imagery", "multi-temporal", "climate-change"], "description": "[IGARSS'22]: A Transformer-Based Siamese Network for Change Detection"}
{"name": "monologg/kobigbird", "full_name": "monologg/KoBigBird", "topics": ["nlp", "transformers", "pytorch", "bert", "korean-nlp", "bigbird"], "description": "\ud83e\udd85 Pretrained BigBird Model for Korean (up to 4096 tokens)"}
{"name": "epiphqny/solov2", "full_name": "Epiphqny/SOLOv2", "topics": ["instance-segmentation", "mmdetection", "pytorch"], "description": "SOLOv2: Dynamic, Faster and Stronger, achives 39.5mAP on coco test-dev (36 epochs result)"}
{"name": "thu-vis/jittorvis", "full_name": "thu-vis/JittorVis", "topics": ["deep-learning", "visualization", "neural-network", "visual-analytics", "explainable-artiticial-intelligence"], "description": "JittorVis - Visual understanding of deep learning models"}
{"name": "rsanshierli/easybert", "full_name": "rsanshierli/EasyBert", "topics": [], "description": "\u57fa\u4e8ePytorch\u7684Bert\u5e94\u7528\uff0c\u5305\u62ec\u547d\u540d\u5b9e\u4f53\u8bc6\u522b\u3001\u60c5\u611f\u5206\u6790\u3001\u6587\u672c\u5206\u7c7b\u4ee5\u53ca\u6587\u672c\u76f8\u4f3c\u5ea6\u7b49"}
{"name": "kkoutini/passt", "full_name": "kkoutini/PaSST", "topics": ["pytorch", "audio-classification", "audio-tagging", "transformer", "machine-learning", "pattern-recognition"], "description": "Efficient Training of Audio Transformers with Patchout"}
{"name": "nvlabs/centerpose", "full_name": "NVlabs/CenterPose", "topics": ["deep-learning", "object-pose-estimation", "object-pose-tracking", "pytorch", "rgb"], "description": "Single-Stage Keypoint-based Category-level Object Pose Estimation from an RGB Image (ICRA 2022)"}
{"name": "islanna/dynamicrelu", "full_name": "Islanna/DynamicReLU", "topics": ["pytorch", "relu", "dynamic"], "description": "Implementation of Dynamic ReLU on Pytorch"}
{"name": "tensorlayer/tensorlayerx", "full_name": "tensorlayer/TensorLayerX", "topics": ["tensorlayerx", "tensorlayer", "tensorflow", "paddlepaddle", "mindspore", "pytorch", "jittor", "oneflow", "deep-learning", "machine-learning", "neural-network", "python"], "description": "TensorLayerX: A Unified Deep Learning and Reinforcement Learning Framework for All Hardwares, Backends and OS."}
{"name": "amazon-research/sccl", "full_name": "amazon-science/sccl", "topics": [], "description": "Pytorch implementation of Supporting Clustering with Contrastive Learning, NAACL 2021"}
{"name": "thuml/flowformer", "full_name": "thuml/Flowformer", "topics": ["deep-learning"], "description": "About Code release for \"Flowformer: Linearizing Transformers with Conservation Flows\" (ICML 2022), https://arxiv.org/pdf/2202.06258.pdf"}
{"name": "mosecorg/mosec", "full_name": "mosecorg/mosec", "topics": ["model-serving", "deep-learning", "machine-learning", "nerual-network", "mlops", "machine-learning-platform", "hacktoberfest", "gpu", "python", "pytorch", "tensorflow", "llm", "jax", "llm-serving"], "description": "A high-performance serving framework for ML models, offers dynamic batching and multi-stage pipeline to fully exploit your compute machine"}
{"name": "lucidrains/robotic-transformer-pytorch", "full_name": "lucidrains/robotic-transformer-pytorch", "topics": ["artificial-intelligence", "attention-mechanisms", "deep-learning", "robotics", "transformers"], "description": "Implementation of RT1 (Robotic Transformer) in Pytorch"}
{"name": "github-luffy/pfld_68points_pytorch", "full_name": "github-luffy/PFLD_68points_Pytorch", "topics": ["facial-landmarks"], "description": "Implementation of PFLD For 68 Facial Landmarks By Pytorch"}
{"name": "grimoire/torch2trt_dynamic", "full_name": "grimoire/torch2trt_dynamic", "topics": [], "description": "A pytorch to tensorrt convert with dynamic shape support"}
{"name": "deepdoctection/deepdoctection", "full_name": "deepdoctection/deepdoctection", "topics": ["document-parser", "document-image-analysis", "table-recognition", "ocr", "document-ai", "document-understanding", "python", "document-layout-analysis", "table-detection", "pytorch", "tensorflow", "publaynet", "pubtabnet", "layoutlm", "nlp"], "description": "A Repo For Document AI"}
{"name": "mindslab-ai/cotatron", "full_name": "mindslab-ai/cotatron", "topics": ["voice-conversion", "pytorch", "speech-synthesis"], "description": "Official code for Cotatron @ INTERSPEECH 2020"}
{"name": "vita-group/sinnerf", "full_name": "VITA-Group/SinNeRF", "topics": ["nerf", "pytorch", "pytorch-lightning", "gan", "neural-radiance-fields"], "description": "[ECCV 2022] \"SinNeRF: Training Neural Radiance Fields on Complex Scenes from a Single Image\", Dejia Xu, Yifan Jiang, Peihao Wang, Zhiwen Fan, Humphrey Shi, Zhangyang Wang"}
{"name": "derrickxunu/v2x-vit", "full_name": "DerrickXuNu/v2x-vit", "topics": ["autonomous-driving", "computer-vision", "machine-learning", "3d-object-detection", "collaborative-perception", "deep-learning", "multi-agent-system", "pytorch", "simulation", "v2x", "vehicle-to-everything", "vision-transformer"], "description": "[ECCV2022] Official Implementation of  paper \"V2X-ViT: Vehicle-to-Everything Cooperative Perception with Vision Transformer\""}
{"name": "bubbliiiing/pspnet-pytorch", "full_name": "bubbliiiing/pspnet-pytorch", "topics": [], "description": "\u8fd9\u662f\u4e00\u4e2apspnet-pytorch\u7684\u6e90\u7801\uff0c\u53ef\u4ee5\u7528\u4e8e\u8bad\u7ec3\u81ea\u5df1\u7684\u6a21\u578b\u3002"}
{"name": "guolinke/tupe", "full_name": "guolinke/TUPE", "topics": ["bert", "pretraining", "language-model", "transformer"], "description": "Transformer with Untied Positional Encoding (TUPE). Code of paper \"Rethinking Positional Encoding in Language Pre-training\". Improve existing models like BERT."}
{"name": "lucidrains/medical-chatgpt", "full_name": "lucidrains/medical-chatgpt", "topics": ["artificial-intelligence", "attention-mechanisms", "deep-learning", "transformers", "medicine"], "description": "Implementation of ChatGPT, but tailored towards primary care medicine, with the reward being able to collect patient histories in a thorough and efficient manner and come up with a reasonable differential diagnosis"}
{"name": "tusharsarkar3/xbnet", "full_name": "tusharsarkar3/XBNet", "topics": ["pytorch", "deep-learning", "machine-learning", "hacktoberfest"], "description": "Boosted neural network for tabular data"}
{"name": "csebuetnlp/xl-sum", "full_name": "csebuetnlp/xl-sum", "topics": ["abstractive-text-summarization", "text-summarization", "text-summarisation", "abstractive-summarization", "multilingual", "multilinguality", "multilingual-text-summarization", "low-resource-languages", "dataset", "summarization-dataset", "summarization-corpora", "text-summarization-dataset", "text-summarization-model", "low-resource-summarization", "low-resource-text-summarizarion", "multilingual-summarization", "machine-learning", "deep-learning"], "description": "This repository contains the code, data, and models of the paper titled \"XL-Sum: Large-Scale Multilingual Abstractive Summarization for 44 Languages\" published in Findings of the Association for Computational Linguistics: ACL-IJCNLP 2021."}
{"name": "vb000/waveformer", "full_name": "vb000/Waveformer", "topics": ["audio", "deep-learning"], "description": "An efficient architecture for real-time target sound extraction."}
{"name": "bjascob/amrlib", "full_name": "bjascob/amrlib", "topics": ["python", "text-generation", "spacy", "neural-network", "transformer", "pytorch", "amr-parser", "amr-parsing", "amr", "spacy-extension", "amr-graphs", "abstract-meaning-representation"], "description": "A python library that makes AMR parsing, generation and visualization simple."}
{"name": "yangyanli/do-conv", "full_name": "yangyanli/DO-Conv", "topics": ["deep-learning", "convolutional-neural-networks", "tensorflow", "pytorch", "gluoncv"], "description": "Depthwise Over-parameterized Convolutional Layer"}
{"name": "krishnap25/mauve", "full_name": "krishnap25/mauve", "topics": ["pytorch", "deep-learning", "text-generation", "huggingface-transformers", "nlp"], "description": "Package to compute Mauve, a similarity score between neural text and human text. Install with `pip install mauve-text`."}
{"name": "megvii-research/sparsebit", "full_name": "megvii-research/Sparsebit", "topics": ["deep-learning", "post-training-quantization", "pruning", "quantization", "quantization-aware-training", "sparse", "tensorrt"], "description": "A model compression and acceleration toolbox based on pytorch."}
{"name": "erlemar/pytorch_tempest", "full_name": "Erlemar/pytorch_tempest", "topics": ["pytorch-lightning", "hydra", "deep-learning", "training-pipeline", "hacktoberfest"], "description": "My repo for training neural nets using pytorch-lightning and hydra"}
{"name": "yinyunie/rfdnet", "full_name": "yinyunie/RfDNet", "topics": ["cvpr2021", "scene-understanding", "shape-reconstruction", "3d-reconstruction", "pytorch", "scene-reconstruction"], "description": "Implementation of CVPR'21: RfD-Net: Point Scene Understanding by Semantic Instance Reconstruction"}
{"name": "saic-vul/imvoxelnet", "full_name": "SamsungLabs/imvoxelnet", "topics": ["pytorch", "object-detection", "3d-object-detection", "mmdetection", "imvoxelnet", "sun-rgbd", "nuscenes", "kitti", "scannet"], "description": "[WACV2022] ImVoxelNet: Image to Voxels Projection for Monocular and Multi-View General-Purpose 3D Object Detection"}
{"name": "cgcl-codes/naturalcc", "full_name": "CGCL-codes/naturalcc", "topics": ["natural-language-processing", "programming-language", "deep-learning", "toolkit"], "description": "NaturalCC: An Open-Source Toolkit for Code Intelligence"}
{"name": "fxmeng/pruning-filter-in-filter", "full_name": "fxmeng/Pruning-Filter-in-Filter", "topics": ["modelcompression", "pruning", "filters", "stripe", "skeleton", "pytorch", "cuda"], "description": "Pruning Filter in Filter(NeurIPS2020)"}
{"name": "peterwang512/ganwarping", "full_name": "PeterWang512/GANWarping", "topics": ["computer-vision", "graphics", "deep-learning", "gan", "hci"], "description": "Rewriting Geometric Rules of a GAN: Warp a GAN model to customized, out-of-domain shapes."}
{"name": "yixinl7/brio", "full_name": "yixinL7/BRIO", "topics": ["nlp", "text-summarization"], "description": "ACL 2022: BRIO: Bringing Order to Abstractive Summarization"}
{"name": "imhuay/studies", "full_name": "imhuay/studies", "topics": ["nlp", "python", "pytorch", "leetcode", "deep-learning", "algorithms", "algorithm"], "description": "Notes of Develop/NLP/DeepLearning/Algorithms/LeetCodes"}
{"name": "jiachens/modelnet40-c", "full_name": "jiachens/ModelNet40-C", "topics": ["deep-learning", "point-cloud-processing", "robustness", "computer-vision", "benchmark", "data-augmentation", "regularization", "corruption-robustness", "ml-safety", "pytorch"], "description": "Repo for \"Benchmarking Robustness of 3D Point Cloud Recognition against Common Corruptions\"  https://arxiv.org/abs/2201.12296"}
{"name": "cuiziteng/illumination-adaptive-transformer", "full_name": "cuiziteng/Illumination-Adaptive-Transformer", "topics": ["exposure-correction", "low-light-enhance", "transformer-architecture", "transformer-models", "low-level-vision", "bmvc", "image-enhancement", "image-reconstruction", "image-restoration", "pytorch", "semantic-segmentation"], "description": "[BMVC 2022] You Only Need 90K Parameters to Adapt Light: A Light Weight Transformer for Image Enhancement and Exposure Correction. SOTA for low light enhancement, 0.004 seconds try this for pre-processing."}
{"name": "jackwoo0831/yolov7-tracker", "full_name": "JackWoo0831/Yolov7-tracker", "topics": ["pytorch"], "description": "Yolo v5, v7, v8 and several Multi-Object Tracker(SORT, DeepSORT, ByteTrack, BoT-SORT, etc.) in MOT17 and VisDrone2019 Dataset. It uses a unified style and integrated tracker for easy embedding in your own projects."}
{"name": "lucidrains/slot-attention", "full_name": "lucidrains/slot-attention", "topics": ["artificial-intelligence", "deep-learning", "attention-mechanism", "clustering"], "description": "Implementation of Slot Attention from GoogleAI"}
{"name": "ryanchankh/mcr2", "full_name": "ryanchankh/mcr2", "topics": ["representation-learning", "information-theory", "deep-learning", "clustering"], "description": "Official Implementation of Learning Diverse and Discriminative Representations via the Principle of Maximal Coding Rate Reduction (2020)"}
{"name": "aiff22/pynet-pytorch", "full_name": "aiff22/PyNET-PyTorch", "topics": ["pynet", "pytorch-implementation", "image-enhancement", "image-processing", "image-reconstruction", "deep-learning", "raw-to-rgb", "computer-vision", "mobile", "photography", "isp", "camera", "image-to-image-translation", "raw", "photos"], "description": "Generating RGB photos from RAW image files with PyNET (PyTorch)"}
{"name": "antixk/pytorch-model-compare", "full_name": "AntixK/PyTorch-Model-Compare", "topics": ["pytorch", "deep-learning", "neural-networks", "cka", "transformers", "imagenet", "feature-extraction", "pip", "torch-cka"], "description": "Compare neural networks by their feature similarity"}
{"name": "syguan96/dynaboa", "full_name": "syguan96/DynaBOA", "topics": ["pose-estimation", "human-pose-estimation", "smpl", "pytorch", "deep-learning"], "description": "[T-PAMI 2022] Out-of-Domain Human Mesh Reconstruction via Dynamic Bilevel Online Adaptation"}
{"name": "iduta/iresnet", "full_name": "iduta/iresnet", "topics": ["image-recognition", "imagenet", "pytorch", "image-classification", "deep-learning", "convolutional-neural-networks", "residual-networks", "cnn", "visual-recognition", "computer-vision", "machine-learning", "artificial-intelligence", "pattern-recognition", "residual-learning", "resnet", "iresnet", "neural-networks", "optimization-problem", "deep-neural-networks", "deep-residual-learning"], "description": "Improved Residual Networks (https://arxiv.org/pdf/2004.04989.pdf)"}
{"name": "jw9730/tokengt", "full_name": "jw9730/tokengt", "topics": ["equivariance", "gnn", "graph", "hypergraph", "pytorch", "self-attention", "transformer"], "description": "[NeurIPS'22] Tokenized Graph Transformer (TokenGT), in PyTorch"}
{"name": "tongchangd/bert_for_corrector", "full_name": "tongchangD/bert_for_corrector", "topics": ["bert", "corrector", "nlp"], "description": "\u57fa\u4e8ebert\u8fdb\u884c\u4e2d\u6587\u6587\u672c\u7ea0\u9519"}
{"name": "amosgropp/igr", "full_name": "amosgropp/IGR", "topics": ["deep-learning", "3d-reconstruction", "computer-vision"], "description": "Implicit Geometric Regularization for Learning Shapes"}
{"name": "dccuchile/wefe", "full_name": "dccuchile/wefe", "topics": ["word-embeddings", "word-embedding-evaluation", "word-embedding-fairness", "fairness-ml", "fairness-ai", "nlp", "nlp-library", "library", "python3", "bias-detection", "bias-reduction"], "description": "WEFE: The Word Embeddings Fairness Evaluation Framework. WEFE is a framework that standardizes the bias measurement and mitigation in Word Embeddings models. Please feel welcome to open an issue in case you have any questions or a pull request if you want to contribute to the project!"}
{"name": "spico197/docee", "full_name": "Spico197/DocEE", "topics": ["event-extraction", "information-extraction", "natural-language-understanding", "pytorch"], "description": "\ud83d\udd79\ufe0f A toolkit for document-level event extraction, containing some SOTA model implementations."}
{"name": "lemonatsu/a-nerf", "full_name": "LemonATsu/A-NeRF", "topics": [], "description": "Pytorch implementation for A-NeRF: Articulated Neural Radiance Fields for Learning Human Shape, Appearance, and Pose"}
{"name": "drprojects/deepviewagg", "full_name": "drprojects/DeepViewAgg", "topics": ["cvpr", "deep-learning", "image", "multimodal", "multimodal-deep-learning", "point-cloud", "pytorch", "semantic-segmentation", "cvpr2022", "multi-view", "kitti-360", "pytorch-geometric", "s3dis", "torch-points3d", "attention"], "description": "[CVPR'22 Best Paper Finalist] Official PyTorch implementation of the method presented in \"Learning Multi-View Aggregation In the Wild for Large-Scale 3D Semantic Segmentation\""}
{"name": "nerminsamet/houghnet", "full_name": "nerminsamet/houghnet", "topics": ["object-detection", "deep-learning", "pytorch", "voting", "voting-classifier", "bottom-up-model", "hough-transform", "hough", "hough-transformation", "instance-segmentation", "video-object-detection", "video-object-tracking", "3d-object-detection", "human-pose-estimation", "2d-pose-estimation", "pose-estimation", "kitti-dataset", "coco-dataset", "eccv", "eccv-2020"], "description": "[ECCV-20] Official PyTorch implementation of HoughNet, a voting-based object detector."}
{"name": "daveredrum/scanrefer", "full_name": "daveredrum/ScanRefer", "topics": ["eccv", "computer-vision", "natural-language-processing", "3d", "pytorch", "dataset", "deep-learning", "point-cloud", "visual-grounding"], "description": "[ECCV 2020] ScanRefer: 3D Object Localization in RGB-D Scans using Natural Language"}
{"name": "ar-ray-code/yolox-ros", "full_name": "Ar-Ray-code/YOLOX-ROS", "topics": ["yolox", "object-detection", "opencv", "deep-learning", "pytorch", "ros2", "openvino", "ros", "tensorrt", "onnxruntime", "tflite"], "description": "YOLOX + ROS2 object detection package"}
{"name": "samsunglabs/fcaf3d", "full_name": "SamsungLabs/fcaf3d", "topics": ["pytorch", "object-detection", "3d-object-detection", "scannet", "sun-rgbd", "s3dis", "mmdetection", "fcaf3d"], "description": "[ECCV2022] FCAF3D: Fully Convolutional Anchor-Free 3D Object Detection"}
{"name": "debeshjha/2020-cbms-doubleu-net", "full_name": "DebeshJha/2020-CBMS-DoubleU-Net", "topics": ["semantic-segmentation", "cnn-keras", "u-net", "doubleunet", "unet-image-segmentation", "tensoflow", "doubleu-net", "segmentation-models", "pytorch-implementation", "convolutional-neural-networks", "deep-learning", "image-segmentation", "medical-imaging", "unet"], "description": "DoubleU-Net for Semantic Image Segmentation in TensorFlow & Pytorch (Nominated for Best Paper Award (IEEE CBMS))"}
{"name": "guytevet/motionclip", "full_name": "GuyTevet/MotionCLIP", "topics": [], "description": "Official Pytorch implementation of the paper \"MotionCLIP: Exposing Human Motion Generation to CLIP Space\""}
{"name": "aws-samples/amazon-sagemaker-local-mode", "full_name": "aws-samples/amazon-sagemaker-local-mode", "topics": ["sagemaker", "amazon-sagemaker", "pytorch", "catboost", "lightgbm", "pycharm", "tensorflow-training", "pytorch-training", "sagemaker-processing", "prophet", "scikit-learn", "prophet-model", "hdbscan-clustering-algorithm", "huggingface", "huggingface-transformers", "machine-learning", "delta-lake", "gensim-word2vec", "dask", "tensorflow"], "description": "Amazon SageMaker Local Mode Examples"}
{"name": "amontgomerie/question_generator", "full_name": "AMontgomerie/question_generator", "topics": ["nlp", "natural-language-processing", "natural-language-generation", "nlg", "transformers", "t5", "bert", "question-generation"], "description": "An NLP system for generating reading comprehension questions"}
{"name": "endlesssora/deceived", "full_name": "EndlessSora/DeceiveD", "topics": ["generative-adversarial-network", "gan", "image-generation", "image-synthesis", "limited-data", "few-shot", "stylegan2", "neurips-2021", "generative-model"], "description": "[NeurIPS 2021] Deceive D: Adaptive Pseudo Augmentation for GAN Training with Limited Data"}
{"name": "shathe/3d-mininet", "full_name": "Shathe/3D-MiniNet", "topics": [], "description": "Official Implementation in Pytorch and Tensorflow of 3D-MiniNet: Learning a 2D Representation from Point Clouds for Fast and Efficient 3D LIDAR Semantic Segmentation"}
{"name": "alibaba/easyrobust", "full_name": "alibaba/easyrobust", "topics": ["deep-learning", "image-classification", "imagenet", "adversarial-robustness", "robustness", "pretrained-models"], "description": "EasyRobust: an Easy-to-use library for state-of-the-art Robust Computer Vision Research with PyTorch."}
{"name": "fcakyon/craft-text-detector", "full_name": "fcakyon/craft-text-detector", "topics": ["text", "ocr", "text-detection", "computer-vision", "deep-learning", "neural-network", "pytorch", "python", "pypi", "anaconda", "windows", "macos", "linux", "document", "vision", "actions", "workflow", "craft", "hacktoberfest"], "description": "Packaged, Pytorch-based, easy to use, cross-platform version of the CRAFT text detector"}
{"name": "jinyeying/night-enhancement", "full_name": "jinyeying/night-enhancement", "topics": ["deep-learning", "light-effects", "low-level-vision", "low-light", "low-light-image-enhancement", "night", "nighttime", "nighttime-lights", "flare", "glare", "restoration", "image-enhancement", "low-light-enhance", "night-images"], "description": "[ECCV2022] \"Unsupervised Night Image Enhancement: When Layer Decomposition Meets Light-Effects Suppression\",  https://arxiv.org/abs/2207.10564"}
{"name": "ltkong218/fastflownet", "full_name": "ltkong218/FastFlowNet", "topics": ["optical-flow", "flow-architectures", "pytorch", "paper", "sintel", "kitti", "fastflownet", "robotics", "video", "embedded-devices", "slam", "deep-learning", "real-time", "tensorrt-inference", "docker"], "description": "FastFlowNet: A Lightweight Network for Fast Optical Flow Estimation (ICRA 2021)"}
{"name": "wamawama/wama_modules", "full_name": "WAMAWAMA/wama_modules", "topics": ["image", "medical-image-analysis", "pretrained-models", "pytorch", "video", "3d-cnn-model", "3d-densenet", "3d-models", "3d-resnet", "attention-mechanism", "transformer", "3d-vgg"], "description": "A PyTorch Computer Vision (CV) module library for building n-D networks flexibly ~"}
{"name": "sapphire497/style-transformer", "full_name": "sapphire497/style-transformer", "topics": ["generative-adversarial-network", "stylegan2", "transformer", "attention-mechanism"], "description": "Official implementation for \"Style Transformer for Image Inversion and Editing\" (CVPR 2022)"}
{"name": "oke-aditya/image_similarity", "full_name": "oke-aditya/image_similarity", "topics": ["image-similarity", "pytorch", "image-retrieval", "autoencoder", "unsupervised-learning", "auto-encoders"], "description": "PyTorch Blog Post On Image Similarity Search"}
{"name": "nki-ai/direct", "full_name": "NKI-AI/direct", "topics": ["pytorch", "deep-learning", "mri-reconstruction", "inverse-problems", "medical-imaging", "fastmri-challenge"], "description": "Deep learning framework for MRI reconstruction"}
{"name": "microsoft/xpretrain", "full_name": "microsoft/XPretrain", "topics": ["multimodal-learning", "pre-training", "multimedia", "computer-vision", "nlp"], "description": "Multi-modality pre-training"}
{"name": "neulab/knn-transformers", "full_name": "neulab/knn-transformers", "topics": ["huggingface", "knn-lm", "language", "language-models", "models", "nearest", "nearest-neighbor", "neighbor", "neuro-symbolic", "pytorch", "retomaton", "transformers", "knnlm", "machine", "translation", "knn-mt", "knnmt", "knn", "knn-transformers"], "description": "PyTorch + HuggingFace code for RetoMaton: \"Neuro-Symbolic Language Modeling with Automaton-augmented Retrieval\" (ICML 2022), including an implementation of kNN-LM and kNN-MT"}
{"name": "jacopotagliabue/recs-at-resonable-scale", "full_name": "jacopotagliabue/recs-at-resonable-scale", "topics": ["dbt", "deep-learning", "metaflow", "recommender-system", "recsys", "serverless", "reasonable-scale", "reclist"], "description": "Recommendations at \"Reasonable Scale\": joining dataOps with recSys through dbt, Merlin and Metaflow"}
{"name": "binli123/dsmil-wsi", "full_name": "binli123/dsmil-wsi", "topics": ["deep-learning", "multiple-instance-learning", "whole-slide-imaging", "whole-slide-image", "tumor-detection", "self-attention", "weakly-supervised-learning", "histopathology", "deep-neural-networks", "semi-supervised-learning", "self-supervised-learning", "pytorch", "transformer"], "description": "DSMIL: Dual-stream multiple instance learning networks for tumor detection in Whole Slide Image"}
{"name": "wufan-tb/yolo_slowfast", "full_name": "wufan-tb/yolo_slowfast", "topics": ["yolov5", "slowfast"], "description": "Yolov5+SlowFast:  Realtime Action Detection Based on PytorchVideo"}
{"name": "skypilot-org/skypilot", "full_name": "skypilot-org/skypilot", "topics": ["cloud-computing", "data-science", "deep-learning", "gpu", "hyperparameter-tuning", "machine-learning", "tpu", "job-queue", "job-scheduler", "cloud-management", "distributed-training", "ml-infrastructure", "multicloud", "spot-instances", "ml-platform", "cost-management", "cost-optimization", "finops"], "description": "SkyPilot is a framework for easily running machine learning workloads on any cloud through a unified interface."}
{"name": "zjukg/neuralkg", "full_name": "zjukg/NeuralKG", "topics": ["python", "pytorch-lightning", "deep-learning", "machine-learning", "knowledge-graph", "knowledge-graph-embeddings", "link-prediction", "knowledge-graph-completion", "neuralkg"], "description": "An Open Source Library for Diverse Representation Learning of Knowledge Graphs"}
{"name": "gao-lab/glue", "full_name": "gao-lab/GLUE", "topics": ["bioinformatics", "deep-learning", "single-cell", "single-cell-multiomics"], "description": "Graph-linked unified embedding for single-cell multi-omics data integration"}
{"name": "shibing624/similarities", "full_name": "shibing624/similarities", "topics": ["nlp", "deep-learning", "pytorch", "matching", "text-matching", "bm25", "similarity", "similarity-search", "image-search", "image-similarity"], "description": "Similarities: a toolkit for similarity calculation and semantic search. \u8bed\u4e49\u76f8\u4f3c\u5ea6\u8ba1\u7b97\u3001\u5339\u914d\u641c\u7d22\u5de5\u5177\u5305\uff0c\u652f\u6301\u6587\u672c\u548c\u56fe\u50cf\uff0c\u5f00\u7bb1\u5373\u7528\u3002"}
{"name": "sxhxliang/detectron2_backbone", "full_name": "sxhxliang/detectron2_backbone", "topics": ["detectron2", "backbone", "resnet18", "efficientnet", "hrnet", "pytorch"], "description": "detectron2 backbone: resnet18, efficientnet, hrnet, mobilenet v2, resnest, bifpn"}
{"name": "tissueimageanalytics/tiatoolbox", "full_name": "TissueImageAnalytics/tiatoolbox", "topics": ["python", "computational-pathology", "whole-slide-imaging", "deep-learning", "digital-pathology", "histopathology", "image-analysis", "machine-learning", "tissue-analysis", "tissue-segmentation", "cell-classification", "cell-segmentation", "medical-image-analysis", "stain-normalization"], "description": "Computational Pathology Toolbox developed by TIA Centre, University of Warwick."}
{"name": "zhangmozhe/deep-exemplar-based-video-colorization", "full_name": "zhangmozhe/Deep-Exemplar-based-Video-Colorization", "topics": ["deep-learning", "colorization", "image-processing", "generative-adversarial-network", "pytorch", "computer-vision", "image-generation", "gan", "old-photo"], "description": "The source code of CVPR 2019 paper \"Deep Exemplar-based Video Colorization\"."}
{"name": "saic-vul/iterdet", "full_name": "SamsungLabs/iterdet", "topics": ["iterdet", "object-detection", "mmdetection", "pytorch", "faster-rcnn", "retinanet", "crowdhuman", "widerperson"], "description": "[S+SSPR2020] IterDet: Iterative Scheme for Object Detection in Crowded Environments"}
{"name": "matthias-wright/flaxmodels", "full_name": "matthias-wright/flaxmodels", "topics": ["stylegan2", "gpt2", "resnet", "vgg", "jax", "flax", "pretrained-models", "deep-learning"], "description": "Pretrained deep learning models for Jax/Flax: StyleGAN2, GPT2, VGG, ResNet, etc."}
{"name": "pmj110119/yolox_deepsort_tracker", "full_name": "pmj110119/YOLOX_deepsort_tracker", "topics": ["yolox", "pytorch", "deepsort", "object-detection", "object-tracker", "deep-sort", "yolo", "yolov5", "yolov3", "yolo-x", "tracker"], "description": "using yolox+deepsort for object-tracking"}
{"name": "cv-rits/monoscene", "full_name": "astra-vision/MonoScene", "topics": ["nyu-depth-v2", "semantic-scene-completion", "semantic-scene-understanding", "single-image-reconstruction", "monocular", "2d-to-3d", "semantic-kitti", "kitti-360", "mayavi", "pytorch", "deep-learning", "computer-vision", "cvpr22", "cvpr2022"], "description": "MonoScene: Monocular 3D Semantic Scene Completion. CVPR 2022"}
{"name": "lucidrains/mega-pytorch", "full_name": "lucidrains/Mega-pytorch", "topics": ["artificial-intelligence", "attention-mechanisms", "deep-learning", "exponential-moving-average", "long-range-arena"], "description": "Implementation of Mega, the Single-head Attention with Multi-headed EMA architecture that currently holds SOTA on Long Range Arena"}
{"name": "aniketmaurya/chitra", "full_name": "gradsflow/chitra", "topics": ["tensorflow", "image-processing", "object-detection", "deep-learning", "image-dataset", "visualization", "gradcam", "model-interpretation", "model-visualization", "image-classification", "bounding-boxes", "model-deployment", "mlops", "model-serving", "python", "machine-learning", "fastapi", "hacktoberfest", "pytorch"], "description": "A multi-functional library for full-stack Deep Learning. Simplifies Model Building, API development, and Model Deployment."}
{"name": "emadeldeen24/ts-tcc", "full_name": "emadeldeen24/TS-TCC", "topics": ["unsupervised-learning", "deep-learning", "contrastive-learning", "temporal", "contextual", "time-series", "eeg", "fault-diagnosis", "epilepsy", "epileptic-seizures", "sleep-stage-classification", "transfer-learning", "human-activity-recognition", "machine-learning", "representation-learning"], "description": "[IJCAI-21] \"Time-Series Representation Learning via Temporal and Contextual Contrasting\""}
{"name": "megengine/replknet", "full_name": "MegEngine/RepLKNet", "topics": ["megengine", "deep-learning", "image-classification"], "description": "Official MegEngine implementation of RepLKNet"}
{"name": "cure-lab/dlinear", "full_name": "cure-lab/LTSF-Linear", "topics": ["deep-learning", "forecasting", "forecasting-model", "linear-models", "pytorch", "time-series", "time-series-forecasting", "time-series-prediction", "aaai", "aaai2023"], "description": "This is the official implementation for AAAI-23 Oral paper \"Are Transformers Effective for Time Series Forecasting?\""}
{"name": "junyuchen245/transmorph_transformer_for_medical_image_registration", "full_name": "junyuchen245/TransMorph_Transformer_for_Medical_Image_Registration", "topics": ["transformer", "vision-transformer", "image-registration", "bayesian-deep-learning", "image-alignment", "deep-learning", "diffeomorphism", "swin-transformer"], "description": "TransMorph: Transformer for Unsupervised Medical Image Registration (PyTorch)"}
{"name": "david-knigge/ccnn", "full_name": "david-knigge/ccnn", "topics": ["convolutional-neural-networks", "deep-learning", "pytorch"], "description": "Code repository of the paper \"Towards a General Purpose CNN for Long Range Dependencies in N-D\" https://arxiv.org/abs/2206.03398."}
{"name": "ivy-dl/ivy", "full_name": "unifyai/ivy", "topics": ["python", "machine-learning", "deep-learning", "neural-network", "gpu", "autograd", "ivy", "abstraction", "template", "tensorflow", "pytorch", "mxnet", "numpy", "jax"], "description": "The Unified Machine Learning Framework"}
{"name": "hoytta0/knowledgedistillation", "full_name": "HoyTta0/KnowledgeDistillation", "topics": ["knowledge-distillation", "bert", "pytorch", "model-compression", "distillation"], "description": "Knowledge distillation in text classification with pytorch. \u77e5\u8bc6\u84b8\u998f\uff0c\u4e2d\u6587\u6587\u672c\u5206\u7c7b\uff0c\u6559\u5e08\u6a21\u578bBERT\u3001XLNET\uff0c\u5b66\u751f\u6a21\u578bbiLSTM\u3002"}
{"name": "open-mmlab/mmeval", "full_name": "open-mmlab/mmeval", "topics": ["machine-learning", "metrics", "python", "pytorch", "tensorflow"], "description": "A unified evaluation library for multiple machine learning libraries"}
{"name": "frgfm/torch-scan", "full_name": "frgfm/torch-scan", "topics": ["python", "pytorch", "flops-counter", "benchmark", "deep-learning", "pytorch-utils", "deep-neural-networks", "keras", "summary", "flops", "receptive-field"], "description": "Seamless analysis of your PyTorch models (RAM usage, FLOPs, MACs, receptive field, etc.)"}
{"name": "huanglizi/lvit", "full_name": "HUANGLIZI/LViT", "topics": ["medical-image-analysis", "pytorch", "segmentation", "vision-language"], "description": "This repo is the official implementation of \"LViT: Language meets Vision Transformer in Medical Image Segmentation\" (Under Major Revision)"}
{"name": "j-marple-dev/ayolov2", "full_name": "j-marple-dev/AYolov2", "topics": ["object-detection", "objectdetection", "yolo", "deeplearning", "pytorch", "tensordecomposition", "modelcompression", "lightweight"], "description": null}
{"name": "facebookresearch/covidprognosis", "full_name": "facebookresearch/CovidPrognosis", "topics": ["medical-imaging", "deep-learning", "radiography", "x-ray", "pytorch", "covid-19", "medical-image-analysis"], "description": "COVID deterioration prediction based on chest X-ray radiographs via MoCo-trained image representations"}
{"name": "raoyongming/hornet", "full_name": "raoyongming/HorNet", "topics": ["computer-vision", "vision-transformer", "pytorch"], "description": "[NeurIPS 2022] HorNet: Efficient High-Order Spatial Interactions with Recursive Gated Convolutions"}
{"name": "songquanpeng/pytorch-template", "full_name": "songquanpeng/pytorch-template", "topics": ["pytorch-template", "boilerplates", "gan", "pytorch", "gans"], "description": "To be the world's best PyTorch project template."}
{"name": "ppogg/retinaface_ghost", "full_name": "ppogg/Retinaface_Ghost", "topics": ["pytorch", "retinaface", "ghostnet", "mobilenetv3"], "description": "This is a project based on retinaface face detection, including ghostnet and mobilenetv3"}
{"name": "czczup/urst", "full_name": "czczup/URST", "topics": ["neural-style-transfer", "pytorch"], "description": "[AAAI 2022] Towards Ultra-Resolution Neural Style Transfer via Thumbnail Instance Normalization"}
{"name": "metaopt/torchopt", "full_name": "metaopt/torchopt", "topics": ["functional-programming", "optimizer", "pytorch", "meta-reinforcement-learning", "deep-learning", "meta-learning", "meta-rl", "bilevel-optimization", "differentiable-optimization", "implicit-differentiation", "optimization", "differentiable-programming", "automatic-differentiation"], "description": "TorchOpt is an efficient library for differentiable optimization built upon PyTorch."}
{"name": "ericguo5513/humanml3d", "full_name": "EricGuo5513/HumanML3D", "topics": ["dataset", "deep-learning", "motion-generation", "text-annotation"], "description": "HumanML3D: A large and diverse 3d human motion-language dataset."}
{"name": "trailofbits/privacyraven", "full_name": "trailofbits/PrivacyRaven", "topics": ["machine-learning", "deep-learning", "python", "privacy", "privacy-preserving-machine-learning", "privacy-enhancing-technologies", "membership-inference", "model-extraction", "model-inversion"], "description": "Privacy Testing for Deep Learning"}
{"name": "sooftware/attentions", "full_name": "sooftware/attentions", "topics": ["pytorch", "attention", "location-sensitive-attension", "location-aware-attention", "additive-attention", "dot-product-attention", "multi-head-attention", "relative-positional-encoding", "relative-multi-head-attention"], "description": "PyTorch implementation of some attentions for Deep Learning Researchers. "}
{"name": "cyclomon/clipstyler", "full_name": "cyclomon/CLIPstyler", "topics": ["style-transfer", "clip"], "description": "Official Pytorch implementation of \"CLIPstyler:Image Style Transfer with a Single Text Condition\" (CVPR 2022)"}
{"name": "zengxianyu/crfill", "full_name": "zengxianyu/crfill", "topics": ["inpainting", "image-inpainting", "gan", "generative-adversarial-network", "generative-adversarial-networks", "pytorch", "iccv2021", "image-completion"], "description": "CR-Fill: Generative Image Inpainting with Auxiliary Contextual Reconstruction. ICCV 2021"}
{"name": "xplip/pixel", "full_name": "xplip/pixel", "topics": ["language-model", "machine-learning", "nlp", "deep-learning", "deep-neural-networks", "pytorch"], "description": "Research code for pixel-based encoders of language (PIXEL)"}
{"name": "wujunde/checkoutfree", "full_name": "WuJunde/checkoutfree", "topics": ["clustering", "computer-vision", "dataset", "deep-learning", "detection", "machine-learning"], "description": "[ECCV 2022] A python implementation of the person clustering algorithm in the check-out free grocery visual system."}
{"name": "akashsengupta1997/hierarchicalprobabilistic3dhuman", "full_name": "akashsengupta1997/HierarchicalProbabilistic3DHuman", "topics": ["computer-vision", "machine-learning", "deep-learning", "human-pose", "human-shape-recover", "probabilistic-machine-learning"], "description": "Code repository for the paper: Hierarchical Kinematic Probability Distributions for 3D Human Shape and Pose Estimation from Images in the Wild (ICCV 2021)"}
{"name": "gofinge/pointtransformerv2", "full_name": "Gofinge/PointTransformerV2", "topics": ["pytorch", "3d-vision", "point-cloud"], "description": "[NeurIPS 2022] A official PyTorch implementation of PTv2,  also a codebase for point cloud recognition research."}
{"name": "pkumivision/ffc", "full_name": "pkumivision/FFC", "topics": ["ffc", "imagenet", "image-classification", "non-local", "deep-neural-networks", "fast-fourier-transform", "spectral-analysis"], "description": "This is an official pytorch implementation of Fast Fourier Convolution."}
{"name": "minyoungg/pix2latent", "full_name": "minyoungg/pix2latent", "topics": ["pytorch", "cma-es", "inverting-images", "nevergrad", "biggan", "stylegan2", "gan"], "description": "Code for: Transforming and Projecting Images into Class-conditional Generative Networks"}
{"name": "omarsayed7/deep-emotion", "full_name": "omarsayed7/Deep-Emotion", "topics": [], "description": "Facial Expression Recognition Using Attentional Convolutional Network, Pytorch implementation"}
{"name": "salesforce/deeptime", "full_name": "salesforce/DeepTime", "topics": ["deep-learning", "forecasting", "meta-learning", "time-series", "time-series-forecasting", "time-series-regression", "implicit-neural-representation"], "description": "PyTorch code for DeepTime: Deep Time-Index Meta-Learning for Non-Stationary Time-Series Forecasting"}
{"name": "luyug/gradcache", "full_name": "luyug/GradCache", "topics": ["jax", "flax", "contrastive-learning", "pytorch", "deep-learning"], "description": "Run Effective Large Batch Contrastive Learning Beyond GPU/TPU Memory Constraint"}
{"name": "intel/lpot", "full_name": "intel/neural-compressor", "topics": ["low-precision", "pruning", "sparsity", "auto-tuning", "knowledge-distillation", "quantization", "quantization-aware-training", "post-training-quantization", "deep-learning"], "description": "Intel\u00ae Neural Compressor (formerly known as Intel\u00ae Low Precision Optimization Tool), targeting to provide unified APIs for network compression technologies, such as low precision quantization, sparsity, pruning, knowledge distillation, across different deep learning frameworks to pursue optimal inference performance."}
{"name": "digiteinfotech/kairon", "full_name": "digiteinfotech/kairon", "topics": ["nlp", "machine-learning", "machine-learning-library", "bot", "bots", "bot-framework", "botkit", "rasa", "rasa-nlu", "rasa-chatbot", "nlu", "conversational-bots", "conversational-agents", "conversational-ai", "spacy", "chatbot", "chatbots", "chatbot-framework", "natural-language-processing", "natural-language-understanding"], "description": "Tool suite built on RASA to train and deploy your chatbots using advanced NLP "}
{"name": "khrylx/agentformer", "full_name": "Khrylx/AgentFormer", "topics": ["trajectory-prediction", "trajectory-forecasting", "multi-agent-forecasting", "transformer", "iccv2021", "pytorch", "deep-learning", "autonomous-driving"], "description": "[ICCV 2021] Official PyTorch Implementation of \"AgentFormer: Agent-Aware Transformers for Socio-Temporal Multi-Agent Forecasting\"."}
{"name": "jeromerony/dml_cross_entropy", "full_name": "jeromerony/dml_cross_entropy", "topics": ["metric-learning", "deep-learning", "cross-entropy"], "description": "Code for the paper \"A unifying mutual information view of metric learning: cross-entropy vs. pairwise losses\" (ECCV 2020 - Spotlight)"}
{"name": "dvlab-research/parametric-contrastive-learning", "full_name": "dvlab-research/Parametric-Contrastive-Learning", "topics": ["contrastive-learning", "long-tailed-recognition", "supervised-learning", "image-classification", "imagenet", "supervised-contrastive-learning", "parametric-contrastive-learning", "iccv2021", "class-imbalance", "imbalanced-data", "imbalanced-learning", "pytorch"], "description": "Parametric Contrastive Learning (ICCV2021)"}
{"name": "denisyarats/pytorch_sac", "full_name": "denisyarats/pytorch_sac", "topics": ["reinforcement-learning", "dm-control", "soft-actor-critic", "pytorch", "deep-reinforcement-learning", "actor-critic", "mujoco", "gym", "deep-learning", "sac", "continuous-control", "d4pg"], "description": "PyTorch implementation of Soft Actor-Critic (SAC)"}
{"name": "ziniuwan/maed", "full_name": "ziniuwan/maed", "topics": ["pytorch", "deep-learning"], "description": "[ICCV 2021] Encoder-decoder with Multi-level Attention for 3D Human Shape and Pose Estimation"}
{"name": "tky823/dnn-based_source_separation", "full_name": "tky823/DNN-based_source_separation", "topics": ["source-separation", "speech-separation", "pytorch", "tasnet", "audio-separation", "conv-tasnet"], "description": "A PyTorch implementation of DNN-based source separation."}
{"name": "shengyuh/overlappredator", "full_name": "prs-eth/OverlapPredator", "topics": ["point-cloud", "registration", "3dvision", "transformer", "attention-mechanism"], "description": "[CVPR 2021, Oral] PREDATOR: Registration of 3D Point Clouds with Low Overlap. "}
{"name": "thudm/grand", "full_name": "THUDM/GRAND", "topics": ["graphs", "gnn", "semi-supervised-learning", "neurips-2020", "data-augmentation", "graph-neural-networks"], "description": "Source code and dataset of the NeurIPS 2020 paper \"Graph Random Neural Network for Semi-Supervised Learning on Graphs\""}
{"name": "keonlee9420/comprehensive-transformer-tts", "full_name": "keonlee9420/Comprehensive-Transformer-TTS", "topics": ["text-to-speech", "supervised", "unsupervised", "non-autoregressive", "non-ar", "multi-speaker", "ultimate-tts", "tts", "pytorch", "comprehensive", "single-speaker", "fastspeech", "transformer", "neural-tts", "fastspeech2", "hifi-gan", "mel-gan", "sota", "speech-synthesis", "deep-learning"], "description": "A Non-Autoregressive Transformer based Text-to-Speech, supporting a family of SOTA transformers with supervised and unsupervised duration modelings. This project grows with the research community, aiming to achieve the ultimate TTS"}
{"name": "oneflow-inc/one-yolov5", "full_name": "Oneflow-Inc/one-yolov5", "topics": ["deep-learning", "oneflow", "yolov5"], "description": "A more efficient yolov5 with oneflow backend \ud83c\udf89\ud83c\udf89\ud83c\udf89"}
{"name": "hysts/pytorch_mpiigaze_demo", "full_name": "hysts/pytorch_mpiigaze_demo", "topics": ["computer-vision", "gaze-estimation", "gaze", "pytorch"], "description": "Gaze estimation using MPIIGaze and MPIIFaceGaze"}
{"name": "leeyoonhyung/bvae-tts", "full_name": "LEEYOONHYUNG/BVAE-TTS", "topics": ["text-to-speech", "deep-learning", "pytorch"], "description": "Official implementation of BVAE-TTS"}
{"name": "ikomia-dev/ikomiaapi", "full_name": "Ikomia-dev/IkomiaApi", "topics": ["computer-vision", "deep-learning", "image-processing", "detectron2", "opencv", "openmmlab", "python", "pytorch", "tensorflow", "computervision", "computer-vision-tools", "computer-vision-ai", "computer-vision-algorithms", "computer-vision-opencv", "human-pose-estimation", "machine-learning", "object-detection", "pose-estimation", "yolo"], "description": "State-of-the-art Computer Vision with a few lines of code."}
{"name": "picsart-ai-research/semask-segmentation", "full_name": "Picsart-AI-Research/SeMask-Segmentation", "topics": ["pytorch", "semantic-segmentation", "ade20k", "cityscapes", "coco-stuff-10k", "semask", "vision-transformers"], "description": "[Preprint] SeMask: Semantically Masked Transformers for Semantic Segmentation, 2021"}
{"name": "mcgregorwwww/uctransnet", "full_name": "McGregorWwww/UCTransNet", "topics": ["pytorch", "deep-learning", "segmentation"], "description": "Implementation of our AAAI'22 work: 'UCTransNet: Rethinking the Skip Connections in U-Net from a Channel-wise Perspective with Transformer'."}
{"name": "invokerer/deeprft", "full_name": "INVOKERer/DeepRFT", "topics": ["pytorch", "deep-learning"], "description": "The code for  'Intriguing Findings of Frequency Selection for Image Deblurring' and 'Deep Residual Fourier Transformation for Single Image Deblurring'"}
{"name": "thu-keg/omnievent", "full_name": "THU-KEG/OmniEvent", "topics": ["event-detection", "event-extraction", "big-models", "bmtrain", "deep-learning", "huggingface-transformers", "information-extration", "natural-language-generation", "natural-language-processing", "pytorch"], "description": "A comprehensive, unified and modular event extraction toolkit."}
{"name": "tohinz/charactergan", "full_name": "tohinz/CharacterGAN", "topics": ["gan", "few-shot", "animation", "reposing", "generative-adversarial-network"], "description": "CharacterGAN: Few-Shot Keypoint Character Animation and Reposing (Best Paper WACV 2022)"}
{"name": "ibm/tabformer", "full_name": "IBM/TabFormer", "topics": ["machine-learning", "artificial-intelligence", "credit-card-dataset", "fraud-detection", "gpt", "bert", "tabular-data", "prsa-dataset", "huggingface", "credit-card-transaction", "transformer", "pytorch", "icassp", "icassp2021"], "description": "Code & Data for \"Tabular Transformers for Modeling Multivariate Time Series\" (ICASSP, 2021)"}
{"name": "dvlab-research/uvtr", "full_name": "dvlab-research/UVTR", "topics": ["3d-detection", "multi-modality", "pytorch"], "description": "Unifying Voxel-based Representation with Transformer for 3D Object Detection (NeurIPS 2022)"}
{"name": "wuhurestaurant/xf_event_extraction2020top1", "full_name": "WuHuRestaurant/xf_event_extraction2020Top1", "topics": ["pytorch", "events-extraction", "competition"], "description": "\u79d1\u5927\u8baf\u98de2020\u4e8b\u4ef6\u62bd\u53d6\u6311\u6218\u8d5b\u7b2c\u4e00\u540d\u89e3\u51b3\u65b9\u6848&\u5b8c\u6574\u4e8b\u4ef6\u62bd\u53d6\u7cfb\u7edf"}
{"name": "ahangchen/torch_base", "full_name": "ahangchen/torch_base", "topics": ["pytorch", "computer-vision", "deep-learning", "machine-learning"], "description": "Quickly bring up your PyTorch project(a skeleton)"}
{"name": "fastaudio/fastaudio", "full_name": "fastaudio/fastaudio", "topics": ["audio", "fastai", "pytorch", "python", "deep-learning", "gpu"], "description": "\ud83d\udd0a Audio and fastai v2"}
{"name": "graphsignal/graphsignal", "full_name": "graphsignal/graphsignal-python", "topics": ["machine-learning", "data-science", "deep-learning", "huggingface", "inference", "jax", "keras", "onnxruntime", "pytorch", "tensorflow", "inference-optimization", "debugging", "monitoring", "python"], "description": "Graphsignal Python agent"}
{"name": "blackhc/toma", "full_name": "BlackHC/toma", "topics": ["pytorch", "python", "machine-learning", "data-science", "gpu"], "description": "Helps you write algorithms in PyTorch that adapt to the available (CUDA) memory"}
{"name": "jh-jeong/contrad", "full_name": "jh-jeong/ContraD", "topics": ["deep-learning", "generative-adversarial-network", "gan", "contrastive-learning", "unsupervised-learning", "data-augmentation", "iclr2021", "pytorch"], "description": "Code for the paper \"Training GANs with Stronger Augmentations via Contrastive Discriminator\" (ICLR 2021)"}
{"name": "toni-sm/skrl", "full_name": "Toni-SM/skrl", "topics": ["reinforcement-learning", "python", "openai-gym", "isaac-gym", "pytorch", "deep-learning", "deepmind", "gym", "isaac-sim", "nvidia-omniverse", "skrl", "rl", "gymnasium", "machine-learning", "robosuite", "robotics", "isaac-orbit"], "description": "Modular and flexible reinforcement learning library with support for Isaac Gym and Omniverse Isaac Gym environments"}
{"name": "princeton-nlp/optiprompt", "full_name": "princeton-nlp/OptiPrompt", "topics": ["nlp", "probing", "prompt"], "description": "NAACL'2021: Factual Probing Is [MASK]: Learning vs. Learning to Recall https://arxiv.org/abs/2104.05240"}
{"name": "yatingmusic/musemorphose", "full_name": "YatingMusic/MuseMorphose", "topics": ["pytorch", "music-generation", "music-style-transfer", "variational-autoencoder", "transformer"], "description": "PyTorch implementation of MuseMorphose (published at IEEE/ACM TASLP), a Transformer-based model for music style transfer."}
{"name": "lucidrains/en-transformer", "full_name": "lucidrains/En-transformer", "topics": ["artificial-intelligence", "deep-learning", "equivariance", "transformer", "attention-mechanism"], "description": "Implementation of E(n)-Transformer, which extends the ideas of Welling's E(n)-Equivariant Graph Neural Network to attention"}
{"name": "lucidrains/mixture-of-experts", "full_name": "lucidrains/mixture-of-experts", "topics": ["artificial-intelligence", "deep-learning", "transformer", "mixture-of-experts"], "description": "A Pytorch implementation of Sparsely-Gated Mixture of Experts, for massively increasing the parameter count of language models"}
{"name": "pytorchlightning/lightning-tutorials", "full_name": "Lightning-AI/tutorials", "topics": ["tutorials", "jupyter-notebook", "machine-learning", "deep-learning", "notebooks", "python-scripts", "lightning"], "description": "Collection of Pytorch lightning tutorial form as rich scripts automatically transformed to ipython notebooks."}
{"name": "chibohe/text_recognition_toolbox", "full_name": "chibohe/text_recognition_toolbox", "topics": ["deep-learning", "text-recognition", "ocr", "pytorch-implementation", "scene-text-recognition", "attention-mechanism", "ctc", "ocr-recognition"], "description": "text_recognition_toolbox: The reimplementation of a series of classical scene text recognition papers with Pytorch in a uniform way."}
{"name": "pliang279/multibench", "full_name": "pliang279/MultiBench", "topics": ["machine-learning", "multimodal-learning", "robotics", "natural-language-processing", "computer-vision", "deep-learning", "healthcare", "representation-learning", "speech-processing"], "description": "[NeurIPS 2021] Multiscale Benchmarks for Multimodal Representation Learning"}
{"name": "hlwang1124/sne-roadseg", "full_name": "hlwang1124/SNE-RoadSeg", "topics": ["pytorch", "eccv-2020", "freespace", "road-segmentation", "road-detection", "surface-normals-estimation", "surface-normals"], "description": "SNE-RoadSeg for Freespace Detection in PyTorch, ECCV 2020"}
{"name": "hustvl/yolos", "full_name": "hustvl/YOLOS", "topics": ["vision-transformer", "transformer", "object-detection", "computer-vision"], "description": "You Only Look at One Sequence (NeurIPS 2021)"}
{"name": "safe-graph/gnn-fakenews", "full_name": "safe-graph/GNN-FakeNews", "topics": ["fakenewsdetection", "misinformation", "graphneuralnetwork", "machine-learning", "benchmarking", "social-media", "social-network-analysis", "deep-learning"], "description": "A collection of GNN-based fake news detection models."}
{"name": "likyoo/change_detection.pytorch", "full_name": "likyoo/change_detection.pytorch", "topics": ["pytorch", "changedetection", "models"], "description": "Deep learning models for change detection of remote sensing images"}
{"name": "thefoxofsky/ddfnet", "full_name": "theFoxofSky/ddfnet", "topics": ["cvpr2021", "deep-learning"], "description": "The official implementation of the CVPR2021 paper: Decoupled Dynamic Filter Networks"}
{"name": "lucidrains/axial-attention", "full_name": "lucidrains/axial-attention", "topics": ["artificial-intelligence", "deep-learning", "attention-mechanism", "pytorch"], "description": "Implementation of Axial attention - attending to multi-dimensional data efficiently"}
{"name": "jgraving/selfsne", "full_name": "jgraving/selfsne", "topics": ["clustering", "machine-learning", "embedding-models", "contrastive-learning", "self-supervised-learning", "dimensionality-reduction", "deep-learning"], "description": "Self-Supervised Noise Embeddings (Self-SNE) for dimensionality reduction and clustering"}
{"name": "jpwang/lilt", "full_name": "jpWang/LiLT", "topics": ["nlp", "document-ai", "document-analysis", "document-understanding", "information-extraction", "multimodal-pre-trained-model", "multilingual-models"], "description": "Official PyTorch implementation of LiLT: A Simple yet Effective Language-Independent Layout Transformer for Structured Document Understanding (ACL 2022)"}
{"name": "siriusdemon/build-your-own-face-model", "full_name": "siriusdemon/Build-Your-Own-Face-Model", "topics": ["arcface", "face-model", "pytorch", "tutorial", "centerface"], "description": "Build your own ArcFace, CenterFace/Centernet"}
{"name": "mabaorui/neuralpull", "full_name": "mabaorui/NeuralPull", "topics": ["3d-reconstruction", "deep-learning", "icml", "point-cloud", "tensorflow"], "description": "Implementation of ICML'2021:Neural-Pull: Learning Signed Distance Functions from Point Clouds by Learning to Pull Space onto Surfaces"}
{"name": "numaproj/numalogic", "full_name": "numaproj/numalogic", "topics": ["machine-learning", "time-series", "python", "deep-learning", "outlier-detection", "aiops"], "description": "Collection of operational time series ML models and tools"}
{"name": "gaohongkui/globalpointer_pytorch", "full_name": "gaohongkui/GlobalPointer_pytorch", "topics": ["ner", "chinese-ner"], "description": "\u5168\u5c40\u6307\u9488\u7edf\u4e00\u5904\u7406\u5d4c\u5957\u4e0e\u975e\u5d4c\u5957NER\u7684Pytorch\u5b9e\u73b0"}
{"name": "sforaidl/vformer", "full_name": "SforAiDl/vformer", "topics": ["pytorch", "vision-transformer"], "description": "A modular PyTorch library for vision transformer models"}
{"name": "cientgu/giqa", "full_name": "cientgu/GIQA", "topics": ["generative-model", "image-quality-assessment", "generative-adversarial-networks"], "description": "Pytorch implementation of Generated Image Quality Assessment"}
{"name": "fboulnois/stable-diffusion-docker", "full_name": "fboulnois/stable-diffusion-docker", "topics": ["huggingface", "pytorch", "stable-diffusion", "tensorflow", "diffusion", "generative-art", "image-generation", "dall-e", "dalle", "docker", "text-to-image", "inpainting", "midjourney"], "description": "Run the official Stable Diffusion releases in a Docker container with txt2img, img2img, depth2img, pix2pix, upscale4x, and inpaint."}
{"name": "megvii-research/replknet", "full_name": "MegEngine/RepLKNet", "topics": ["megengine", "deep-learning", "image-classification"], "description": "Official MegEngine implementation of RepLKNet"}
{"name": "laion-ai/phenaki", "full_name": "LAION-AI/phenaki", "topics": [], "description": "A phenaki reproduction using pytorch."}
{"name": "google/dynamic-video-depth", "full_name": "google/dynamic-video-depth", "topics": ["deep-learning"], "description": "Code for the SIGGRAPH 2021 paper \"Consistent Depth of Moving Objects in Video\"."}
{"name": "st-tech/zozo-shift15m", "full_name": "st-tech/zozo-shift15m", "topics": ["machine-learning", "dataset-shifts", "covariate-shift", "target-shift", "fashion", "research", "datasets", "deep-learning", "dataset", "distributional-shift", "fill-in-the-blank", "set-matching", "fill-in-the-n-blank"], "description": "SHIFT15M: multiobjective large-scale fashion dataset with distributional shifts"}
{"name": "tui-nicr/esanet", "full_name": "TUI-NICR/ESANet", "topics": ["semantic-segmentation", "rgbd", "deep-learning", "deep-neural-networks", "machine-learning", "mobile-robotics", "real-time", "pytorch"], "description": "ESANet: Efficient RGB-D Semantic Segmentation for Indoor Scene Analysis"}
{"name": "prbonn/4dmos", "full_name": "PRBonn/4DMOS", "topics": ["mos", "4d", "deep-learning", "lidar", "minkowski", "minkowskiengine", "moving", "object", "point-cloud", "segmentation", "point-cloud-processing"], "description": "Receding Moving Object Segmentation in 3D LiDAR Data Using Sparse 4D Convolutions (RAL 2022)"}
{"name": "ricardokevins/kevinpro-nlp-demo", "full_name": "Ricardokevins/Kevinpro-NLP-demo", "topics": ["bert", "nlp", "transformer", "baseline", "pytorch", "natural-language-processing", "textclassification", "vae-gan", "text-classification"], "description": "All NLP you Need Here.  \u4e00\u4e9b\u597d\u73a9\u7684NLP demo\uff0c\u76ee\u524d\u5305\u542b13\u4e2aNLP\u5e94\u7528\u7684pytorch\u5b9e\u73b0"}
{"name": "guoshnbjtu/astgcn-r-pytorch", "full_name": "guoshnBJTU/ASTGCN-r-pytorch", "topics": [], "description": "Attention Based Spatial-Temporal Graph Convolutional Networks for Traffic Flow Forecasting, AAAI 2019, pytorch version"}
{"name": "vita-group/gnt", "full_name": "VITA-Group/GNT", "topics": ["neural-radiance-fields", "neural-rendering", "transformer"], "description": "[ICLR 2023] \"Is Attention All NeRF Needs?\" by Mukund Varma T*, Peihao Wang* , Xuxi Chen, Tianlong Chen, Subhashini Venugopalan, Zhangyang Wang"}
{"name": "sgrvinod/a-pytorch-tutorial-to-super-resolution", "full_name": "sgrvinod/a-PyTorch-Tutorial-to-Super-Resolution", "topics": ["pytorch-tutorial", "pytorch", "super-resolution", "srgan", "generative-adversarial-network", "gan", "gans"], "description": "Photo-Realistic Single Image Super-Resolution Using a Generative Adversarial Network | a PyTorch Tutorial to Super-Resolution"}
{"name": "chenmingxiang110/growing-neural-cellular-automata", "full_name": "chenmingxiang110/Growing-Neural-Cellular-Automata", "topics": ["cellular-automata", "neural-cellular-automata", "neural-networks", "deep-learning", "conway-s-game-of-life"], "description": "A reproduction of growing neural cellular automata using PyTorch."}
{"name": "bm-k/kosentencebert-etri", "full_name": "BM-K/KoSentenceBERT-ETRI", "topics": ["sentence-bert", "sentence-similarity", "natural-language-processing", "korean-sentence-bert"], "description": "Sentence Embeddings using Siamese ETRI KoBERT-Networks"}
{"name": "deeachain/segmentation-pytorch", "full_name": "Deeachain/Segmentation-Pytorch", "topics": [], "description": "Semantic Segmentation in Pytorch. Network include: FCN\u3001FCN_ResNet\u3001SegNet\u3001UNet\u3001BiSeNet\u3001BiSeNetV2\u3001PSPNet\u3001DeepLabv3_plus\u3001 HRNet\u3001DDRNet"}
{"name": "chineseocr/trocr-chinese", "full_name": "chineseocr/trocr-chinese", "topics": ["pytorch", "chinese-ocr", "seq2seq"], "description": "transformers ocr for chinese"}
{"name": "mczhuge/icon", "full_name": "mczhuge/ICON", "topics": ["sod", "codebase", "saliency", "transformer", "deep-learning", "mlp-mixer"], "description": "(TPAMI2022) Salient Object Detection via Integrity Learning."}
{"name": "txsun1997/black-box-tuning", "full_name": "txsun1997/Black-Box-Tuning", "topics": ["black-box-optimization", "deep-learning", "few-shot-learning", "language-model", "natural-language-processing", "pytorch"], "description": "ICML'2022: Black-Box Tuning for Language-Model-as-a-Service & EMNLP'2022: BBTv2: Towards a Gradient-Free Future with Large Language Models"}
{"name": "zjunlp/knowprompt", "full_name": "zjunlp/KnowPrompt", "topics": ["relation-extraction", "prompt-tuning", "few-shot-learning", "tacred", "dialogre", "semeval", "prompt", "knowprompt", "prompt-learning", "re", "knowledge-informed-prompt-learning", "pytorch", "dataset", "text-classification"], "description": "Code and datasets for the WWW2022 paper \"KnowPrompt: Knowledge-aware Prompt-tuning with Synergistic Optimization for Relation Extraction.\""}
{"name": "mobiletelesystems/rectools", "full_name": "MobileTeleSystems/RecTools", "topics": ["deep-learning", "machine-learning", "personalization", "recomendations", "recommendation-system", "recsys", "recommendation-algorithms", "recommendation-engine", "recommender-system"], "description": "RecTools - library to build Recommendation Systems easier and faster than ever before"}
{"name": "lonepatient/nezha_chinese_pytorch", "full_name": "lonePatient/NeZha_Chinese_PyTorch", "topics": ["chinese", "pytorch", "language-model", "nezha"], "description": "NEZHA: Neural Contextualized Representation for Chinese Language Understanding"}
{"name": "nvidia-merlin/models", "full_name": "NVIDIA-Merlin/models", "topics": ["deep-learning", "machine-learning", "pytorch", "recommendation-system", "recommender-system", "tensorflow", "dask", "gpu", "rapidsai", "recsys"], "description": "Merlin Models is a collection of deep learning recommender system model reference implementations"}
{"name": "adeelh/pytorch-multi-class-focal-loss", "full_name": "AdeelH/pytorch-multi-class-focal-loss", "topics": ["pytorch", "deep-learning", "loss-functions", "classification", "neural-network", "retinanet", "multiclass-classification", "imbalanced-classes", "pytorch-implementation", "implementation-of-research-paper", "machine-learning"], "description": "An (unofficial) implementation of Focal Loss, as described in the RetinaNet paper, generalized to the multi-class case."}
{"name": "chenzhaowei13/light-condition-style-transfer", "full_name": "Chenzhaowei13/Light-Condition-Style-Transfer", "topics": ["lane-detection", "instance-segmentation", "culane", "light-conditions", "deep-learning", "self-driving-car", "lane-lines-detection", "data-enhancement"], "description": "Lane Detection in Low-light Conditions Using an Efficient Data Enhancement : Light Conditions Style Transfer (IV 2020)"}
{"name": "natanielruiz/disrupting-deepfakes", "full_name": "natanielruiz/disrupting-deepfakes", "topics": ["adversarial-attacks", "disrupting-deepfakes", "deepfakes", "deep-learning", "machine-learning", "computer-vision", "deepfake-detection", "face-swap", "faceswap", "fake-news", "defending", "defending-deepfakes"], "description": "\ud83d\udd25\ud83d\udd25Defending Against Deepfakes Using Adversarial Attacks on Conditional Image Translation Networks"}
{"name": "hysts/anime-face-detector", "full_name": "hysts/anime-face-detector", "topics": ["computer-vision", "pytorch", "anime", "face-detection", "face-landmark-detection"], "description": "Anime Face Detector using mmdet and mmpose"}
{"name": "curiousily/deploy-bert-for-sentiment-analysis-with-fastapi", "full_name": "curiousily/Deploy-BERT-for-Sentiment-Analysis-with-FastAPI", "topics": ["transformers", "bert", "huggingface-transformer", "huggingface", "pytorch", "deployment", "fastapi", "python", "machine-learning", "deep-learning", "deploy-machine-learning", "sentiment-analysis", "rest", "rest-api", "uvicorn"], "description": "Deploy BERT for Sentiment Analysis as REST API using FastAPI, Transformers by Hugging Face and PyTorch"}
{"name": "spijkervet/torchaudio-augmentations", "full_name": "Spijkervet/torchaudio-augmentations", "topics": ["machine-learning", "pytorch", "audio"], "description": "Audio transformations library for PyTorch"}
{"name": "ziweiwangthu/bidet", "full_name": "ZiweiWangTHU/BiDet", "topics": [], "description": "This is the official pytorch implementation for paper: BiDet: An Efficient Binarized Object Detector, which is accepted by CVPR2020. "}
{"name": "microsoft/msrflute", "full_name": "microsoft/msrflute", "topics": ["federated-learning", "distributed-learning", "gloo", "machine-learning", "nccl", "personalization", "privacy-tools", "pytorch", "simulation", "transformers-models"], "description": "Federated Learning Utilities and Tools for Experimentation"}
{"name": "twni2016/pomdp-baselines", "full_name": "twni2016/pomdp-baselines", "topics": ["pomdp", "recurrent-neural-networks", "meta-rl", "robust-rl", "generalization", "deep-reinforcement-learning", "pytorch", "td3", "sac", "discrete-sac", "credit-assignment"], "description": "Simple (but often Strong) Baselines for POMDPs in PyTorch - ICML 2022"}
{"name": "avbuffer/unet3plus_pth", "full_name": "avBuffer/UNet3plus_pth", "topics": ["pytorch", "unet", "unet-plusplus", "unet3plus", "portrait-matting"], "description": "UNet3+/ UNet++/UNet, used in Deep Automatic Portrait Matting in Pytorth"}
{"name": "taishan1994/pytorch_triple_extraction", "full_name": "taishan1994/pytorch_triple_extraction", "topics": ["bert", "named-entity-recognition", "pytorch", "relation-extraction", "triple-extraction"], "description": "\u57fa\u4e8epytorch\u7684\u4e2d\u6587\u4e09\u5143\u7ec4\u63d0\u53d6\uff08\u547d\u540d\u5b9e\u4f53\u8bc6\u522b+\u5173\u7cfb\u62bd\u53d6\uff09"}
{"name": "suvojit-0x55aa/a2s2k-resnet", "full_name": "suvojit-0x55aa/A2S2K-ResNet", "topics": ["hyperspectral-image-classification", "remote-sensing", "hyperspectral-imaging", "3d-cnn", "residual-networks", "hyperspectral", "image-classification", "cnn", "colab-notebook", "colab", "colaboratory"], "description": "A2S2K-ResNet: Attention-Based Adaptive Spectral-Spatial Kernel ResNet for Hyperspectral Image Classification"}
{"name": "salesforce/etsformer", "full_name": "salesforce/ETSformer", "topics": ["deep-learning", "interpretable-machine-learning", "time-series", "time-series-decomposition", "time-series-forecasting", "transformers", "exponential-smoothing", "forecasting", "pytorch"], "description": "PyTorch code for ETSformer: Exponential Smoothing Transformers for Time-series Forecasting"}
{"name": "showlab/all-in-one", "full_name": "showlab/all-in-one", "topics": ["codebase", "pre-training", "video-language", "pytorch"], "description": "[Arxiv2022] All in One: Exploring Unified Video-Language Pre-training"}
{"name": "stefanopini/simple-higherhrnet", "full_name": "stefanopini/simple-HigherHRNet", "topics": ["pytorch", "hrnet", "higher-hrnet", "human-pose-estimation", "keypoint-detection", "coco-dataset", "mscoco-keypoint", "deep-learning"], "description": "Multi-person Human Pose Estimation with HigherHRNet in Pytorch, with TensorRT support"}
{"name": "raptormai/online-continual-learning", "full_name": "RaptorMai/online-continual-learning", "topics": ["continual-learning", "computer-vision", "deep-learning", "convolutional-neural-networks", "lifelong-learning", "incremental-learning", "catastrophic-forgetting", "online-continual-learning", "incremental-continual-learning", "class-incremental-learning"], "description": "A collection of online continual learning paper implementations and tricks for computer vision in PyTorch, including our ASER(AAAI-21), SCR(CVPR21-W) and an online continual learning survey (Neurocomputing). "}
{"name": "michael-ovo/yolov7-flask", "full_name": "Michael-OvO/Yolov7-Flask", "topics": ["yolov7", "flask", "flask-web", "model-deployment", "inference-api", "object-detection", "pytorch", "torchhub", "pretrained-weights", "python"], "description": "A Beautiful Flask Web API for Yolov7 (and custom) models"}
{"name": "easyfl-ai/easyfl", "full_name": "EasyFL-AI/EasyFL", "topics": ["federated-learning", "computer-vision", "data-privacy", "deep-learning", "machine-learning"], "description": "An easy-to-use federated learning platform"}
{"name": "tumaer/jaxfluids", "full_name": "tumaer/JAXFLUIDS", "topics": ["automatic-differentiation", "cfd", "compressible-flows", "fluid-dynamics", "gpu", "gpu-computing", "high-performance", "hpc", "jax", "machine-learning", "tpu", "turbulence", "jaxfluids", "deep-learning", "multi-phase-flows", "cuda", "computational-fluid-dynamics"], "description": "Differentiable Fluid Dynamics Package"}
{"name": "autovision-cloud/sa-det3d", "full_name": "AutoVision-cloud/SA-Det3D", "topics": ["3d-detection", "point-cloud", "autonomous-driving", "object-detection", "3d-deep-learning", "pytorch"], "description": "SA-Det3D: Self-attention based Context-Aware 3D Object Detection [ICCV-AvVision-2021]"}
{"name": "lingtengqiu/open-pifuhd", "full_name": "lingtengqiu/Open-PIFuhd", "topics": [], "description": "This is an implementation of PIFuhd based on Pytorch"}
{"name": "banditml/banditml", "full_name": "banditml/banditml", "topics": ["contextual-bandits", "pytorch", "personalization", "neural-networks", "bandits", "reinforcement-learning"], "description": "A lightweight contextual bandit & reinforcement learning library designed to be used in production Python services."}
{"name": "utsaslab/monet", "full_name": "utsaslab/MONeT", "topics": ["machine-learning", "dnn", "ml-training", "memory-consumption", "deep-neural-networks", "dnn-training", "pytorch"], "description": "MONeT framework for reducing memory consumption of DNN training"}
{"name": "weiyithu/surrounddepth", "full_name": "weiyithu/SurroundDepth", "topics": ["depth-estimation", "multi-camera", "self-supervised-learning", "transformer"], "description": "[CoRL 2022] SurroundDepth: Entangling Surrounding Views for Self-Supervised Multi-Camera Depth Estimation"}
{"name": "megvii-research/solq", "full_name": "megvii-research/SOLQ", "topics": ["instance-segmentation", "transformer", "end-to-end", "dct"], "description": "\"SOLQ: Segmenting Objects by Learning Queries\", SOLQ is an end-to-end instance segmentation framework with Transformer."}
{"name": "szq0214/fkd", "full_name": "szq0214/FKD", "topics": ["knowledge-distillation", "efficient-training", "efficient-algorithm", "pytorch", "self-supervised-learning", "deep-learning", "efficientnet-pytorch", "distillation"], "description": "Official code for our ECCV'22 paper \"A Fast Knowledge Distillation Framework for Visual Recognition\""}
{"name": "z814081807/deepner", "full_name": "z814081807/DeepNER", "topics": [], "description": "\u5929\u6c60\u4e2d\u836f\u8bf4\u660e\u4e66\u5b9e\u4f53\u8bc6\u522b\u6311\u6218\u51a0\u519b\u65b9\u6848\uff1b\u4e2d\u6587\u547d\u540d\u5b9e\u4f53\u8bc6\u522b\uff1bNER; BERT-CRF & BERT-SPAN & BERT-MRC\uff1bPytorch"}
{"name": "aminrezaei0x443/pytorch-lit", "full_name": "AminRezaei0x443/PyTorch-LIT", "topics": ["pytorch"], "description": "Lite Inference Toolkit (LIT) for PyTorch"}
{"name": "jacobkrantz/vln-ce", "full_name": "jacobkrantz/VLN-CE", "topics": ["ai", "computer-vision", "robotics", "deep-learning", "research", "python"], "description": "Vision-and-Language Navigation in Continuous Environments using Habitat"}
{"name": "grigorisg9gr/polynomial_nets", "full_name": "grigorisg9gr/polynomial_nets", "topics": ["polynomial-neural-networks", "pi-nets", "image-generation", "mesh-representation-learning", "face-verification", "image-classification", "deep-learning", "deep-neural-networks"], "description": "Official Implementation of the CVPR'20 paper '\u03a0-nets: Deep Polynomial Neural Networks' and its T-PAMI-21 extension."}
{"name": "nimbleedge/envisedge", "full_name": "NimbleEdge/EnvisEdge", "topics": ["recommender-system", "privacy", "machine-learning", "edge-computing", "pytorch", "deep-learning", "python"], "description": "Deploy recommendation engines with Edge Computing"}
{"name": "yangnaruto/fq-gan", "full_name": "YangNaruto/FQ-GAN", "topics": ["biggan", "gans", "pytorch", "tensorflow", "image-translation", "image-generation", "stylegan"], "description": "Official implementation of FQ-GAN"}
{"name": "sungfeng-huang/meta-tts", "full_name": "SungFeng-Huang/Meta-TTS", "topics": ["few-shot-learning", "deep-learning", "speech-synthesis", "meta-learning", "pytorch"], "description": "Official repository of https://doi.org/10.1109/TASLP.2022.3167258"}
{"name": "thuml/logme", "full_name": "thuml/LogME", "topics": ["deep-learning"], "description": "Code release for \"LogME: Practical Assessment of Pre-trained Models for Transfer Learning\" (ICML 2021) and Ranking and Tuning Pre-trained Models: A New Paradigm for Exploiting Model Hubs (JMLR 2022)"}
{"name": "ylsung/vl_adapter", "full_name": "ylsung/VL_adapter", "topics": ["vision-and-language", "adapters", "transformers", "prompt-tuning", "pytorch", "vl-adapter"], "description": "PyTorch code for \"VL-Adapter: Parameter-Efficient Transfer Learning for Vision-and-Language Tasks\" (CVPR2022)"}
{"name": "saic-vul/image_harmonization", "full_name": "SamsungLabs/image_harmonization", "topics": ["image-harmonization", "harmonization", "pytorch", "hrnets"], "description": "[WACV2021] Foreground-aware Semantic Representations for Image Harmonization https://arxiv.org/abs/2006.00809"}
{"name": "princeton-nlp/cofipruning", "full_name": "princeton-nlp/CoFiPruning", "topics": ["model-compression", "pruning", "bert", "nlp"], "description": "ACL 2022: Structured Pruning Learns Compact and Accurate Models https://arxiv.org/abs/2204.00408"}
{"name": "kevinzakka/torchkit", "full_name": "kevinzakka/torchkit", "topics": ["pytorch", "deep-learning"], "description": "Research boilerplate for PyTorch."}
{"name": "jayleicn/moment_detr", "full_name": "jayleicn/moment_detr", "topics": ["pytorch", "video-retrieval"], "description": "[NeurIPS 2021] Moment-DETR code and QVHighlights dataset"}
{"name": "taufeeque9/humanfalldetection", "full_name": "taufeeque9/HumanFallDetection", "topics": ["video-processing", "multiple-cameras", "fall-detection", "human-pose-estimation", "long-short-term-memory", "lstm", "neural-networks", "deep-learning", "python3-fall-detector"], "description": "Real-time, Multi-person & Multi-camera Fall Detector in Python"}
{"name": "ltkong218/ifrnet", "full_name": "ltkong218/IFRNet", "topics": ["real-time", "slow-motion", "frame-interpolation", "deep-networks", "pytorch", "deep-learning", "video", "optical-flow", "knowledge-distillation", "view-synthesis"], "description": "IFRNet: Intermediate Feature Refine Network for Efficient Frame Interpolation (CVPR 2022)"}
{"name": "alpc91/nice-gan-pytorch", "full_name": "alpc91/NICE-GAN-pytorch", "topics": ["gan", "pytorch", "reusing-discriminators", "deep-learning", "image-to-image-translation", "computer-vision", "deep-neural-networks", "generative-adversarial-network"], "description": "Official PyTorch implementation of NICE-GAN:  Reusing Discriminators for Encoding: Towards Unsupervised Image-to-Image Translation"}
{"name": "lucidrains/res-mlp-pytorch", "full_name": "lucidrains/res-mlp-pytorch", "topics": ["artificial-intelligence", "deep-learning", "vision"], "description": "Implementation of ResMLP, an all MLP solution to image classification, in Pytorch"}
{"name": "compvis/net2net", "full_name": "CompVis/net2net", "topics": ["inn", "pytorch", "lightning", "autoencoders", "gans", "normalizing-flows", "generative-model", "streamlit", "pytorch-lightning"], "description": "Network-to-Network Translation with Conditional Invertible Neural Networks"}
{"name": "yingtongdou/care-gnn", "full_name": "YingtongDou/CARE-GNN", "topics": ["fraud-detection", "fraud-prevention", "security", "machine-learning", "graphneuralnetwork", "deep-learning", "datamining", "reinforcement-learning"], "description": "Code for CIKM 2020 paper Enhancing Graph Neural Network-based Fraud Detectors against Camouflaged Fraudsters"}
{"name": "d-li14/psconv", "full_name": "d-li14/PSConv", "topics": ["convolution", "multi-scale", "feature-pyramids", "object-detection", "instance-segmentation", "mmdetection", "pytorch", "eccv2020"], "description": "[ECCV 2020] PSConv: Squeezing Feature Pyramid into One Compact Poly-Scale Convolutional Layer"}
{"name": "zhugekongan/torch-template-for-deep-learning", "full_name": "ZhugeKongan/torch-template-for-deep-learning", "topics": [], "description": "Pytorch Implementations of large number  classical backbone CNNs, data enhancement, torch loss, attention, visualization and  some common algorithms."}
{"name": "thu-mig/torch-model-compression", "full_name": "THU-MIG/torch-model-compression", "topics": ["pruning", "quantization-aware-training", "tensorrt-conversion", "tensorrt", "model-compression", "acnet", "reparameterization", "pytorch", "onnx", "quantization", "qat"], "description": "\u9488\u5bf9pytorch\u6a21\u578b\u7684\u81ea\u52a8\u5316\u6a21\u578b\u7ed3\u6784\u5206\u6790\u548c\u4fee\u6539\u5de5\u5177\u96c6\uff0c\u5305\u542b\u81ea\u52a8\u5206\u6790\u6a21\u578b\u7ed3\u6784\u7684\u6a21\u578b\u538b\u7f29\u7b97\u6cd5\u5e93"}
{"name": "raoyongming/gfnet", "full_name": "raoyongming/GFNet", "topics": ["vision-transformer", "image-classification", "computer-vision", "deep-learning", "image-recognition"], "description": "[NeurIPS 2021] Global Filter Networks for Image Classification"}
{"name": "yzd-v/mgd", "full_name": "yzd-v/MGD", "topics": ["image-classification", "instance-segmentation", "knowledge-distillation", "object-detection", "pytorch", "semantic-segmentation"], "description": "Masked Generative Distillation (ECCV 2022)"}
{"name": "kevinnan-teen/intelligent-traffic-based-on-cv", "full_name": "Kevinnan-teen/Intelligent-Traffic-Based-On-CV", "topics": ["yolov3", "pytorch", "srs", "python"], "description": "\u672c\u9879\u76ee\u662f\u57fa\u4e8e\u8ba1\u7b97\u673a\u89c6\u89c9\u7684\u7aef\u5230\u7aef\u4ea4\u901a\u8def\u53e3\u667a\u80fd\u76d1\u63a7\u7cfb\u7edf\uff0e\u91c7\u7528\u7684\u8bbe\u8ba1\u67b6\u6784\u7531SRS\u6d41\u5a92\u4f53\u670d\u52a1\u5668\u3001GPU\u670d\u52a1\u5668\u3001Local\u5ba2\u6237\u7aef\u4e09\u90e8\u5206\u7ec4\u6210\uff0e\u53ef\u5c06\u8fdc\u7aef\u89c6\u9891\u6d41\u901a\u8fc7rtmp\u534f\u8bae\u4f20\u8f93\u5230\u6d41\u5a92\u4f53\u670d\u52a1\u5668\uff0c\u7136\u540e\u7ecf\u8fc7\u76ee\u6807\u68c0\u6d4b\u7b49\u4e00\u4e9b\u5217\u7b97\u6cd5\u5bf9\u89c6\u9891\u8fdb\u884c\u5206\u6790\uff0c\u6700\u540e\u5728\u672c\u5730\u5ba2\u6237\u7aef\u67e5\u770b\u5206\u6790\u7ed3\u679c\uff0e\u9879\u76ee\u4e3b\u8981\u7528Python\u5b9e\u73b0\uff0c\u6d41\u5a92\u4f53\u670d\u52a1\u5668\u91c7\u7528\u5f00\u6e90\u7684SRS\u5b9e\u65f6\u89c6\u9891\u670d\u52a1\u5668\u642d\u5efa\uff0cGPU\u670d\u52a1\u5668\u4f7f\u7528YOLO\u6a21\u578b\u5b9e\u73b0\u9053\u8def\u76ee\u6807\u5982\u4eba\u3001\u8f66\u3001\u4ea4\u901a\u706f\u7b49\u7269\u4f53\u7684\u8bc6\u522b\uff0c\u540c\u65f6\u8fd8\u652f\u6301\u5e76\u53d1\u8fde\u63a5\uff0e\u5ba2\u6237\u7aef\u57fa\u4e8ePyQt5\u8fdb\u884c\u5f00\u53d1\uff0e"}
{"name": "ai-forever/real-esrgan", "full_name": "ai-forever/Real-ESRGAN", "topics": ["python", "pytorch", "super-resolution", "esrgan", "real-world-super-resolution", "real-esrgan"], "description": "PyTorch implementation of Real-ESRGAN model"}
{"name": "isl-org/deeplagrangianfluids", "full_name": "isl-org/DeepLagrangianFluids", "topics": ["deeplearning", "fluids", "simulation", "convolutional-neural-networks", "convnet", "cnn"], "description": "Code repository for \"Lagrangian Fluid Simulation with Continuous Convolutions\", ICLR 2020."}
{"name": "biasvariancelabs/aitlas", "full_name": "biasvariancelabs/aitlas", "topics": ["artificial-intelligence", "classification", "deep-learning", "earth-observation", "machine-learning", "remote-sensing", "dataset", "deep-neural-networks", "image-classification", "object-detection", "pytorch", "satellite-data", "satellite-images", "segmentation", "sentinel"], "description": "AiTLAS implements state-of-the-art AI methods for exploratory and predictive analysis of satellite images."}
{"name": "rfeinman/pytorch-minimize", "full_name": "rfeinman/pytorch-minimize", "topics": ["minimization", "optimization", "quasi-newton-method", "newton-method", "pytorch"], "description": "Newton and Quasi-Newton optimization with PyTorch"}
{"name": "yizhou-wang/rodnet", "full_name": "yizhou-wang/RODNet", "topics": ["radar", "object-detection", "rodnet", "autonomous-driving", "paper", "detection", "pytorch"], "description": "RODNet: Radar object detection network"}
{"name": "mxl1990/tsne-pytorch", "full_name": "mxl1990/tsne-pytorch", "topics": ["tsne", "tsne-algorithm", "tsne-cuda", "tsne-visualization", "pytorch", "torch"], "description": "Pytorch implementation for t-SNE with cuda to accelerate"}
{"name": "rusty1s/pyg_autoscale", "full_name": "rusty1s/pyg_autoscale", "topics": ["graph-neural-networks", "scalability", "pytorch", "pytorch-geometric"], "description": "Implementation of \"GNNAutoScale: Scalable and Expressive Graph Neural Networks via Historical Embeddings\" in PyTorch"}
{"name": "falkonml/falkon", "full_name": "FalkonML/falkon", "topics": ["kernel-methods", "machine-learning", "large-scale-learning", "kernel", "pytorch", "ai", "python"], "description": "Large-scale, multi-GPU capable, kernel solver"}
{"name": "lucidrains/triton-transformer", "full_name": "lucidrains/triton-transformer", "topics": ["artificial-intelligence", "deep-learning", "attention-mechanism", "transformers", "gpu-programming"], "description": "Implementation of a Transformer, but completely in Triton"}
{"name": "leedoyup/fixmatch-pytorch", "full_name": "LeeDoYup/FixMatch-pytorch", "topics": [], "description": "Unofficial Pytorch code for  \"FixMatch: Simplifying Semi-Supervised Learning with Consistency and Confidence\" in NeurIPS'20. This repo contains reproduced checkpoints."}
{"name": "mjhydri/beatnet", "full_name": "mjhydri/BeatNet", "topics": ["beatnet", "real-time", "real-time-beat-tracker", "real-time-downbeat-tracker", "real-time-tempo", "dnn-beat-tracking", "particle-filtering", "pytorch", "meter-detection", "crnn-network", "joint-model", "online-time-signature-detection", "beat-tracking", "downbeat-tracking", "state-of-the-art"], "description": "BeatNet is state-of-the-art (Real-Time) and Offline joint music beat, downbeat, tempo, and meter tracking system using CRNN and particle filtering.  (ISMIR 2021's paper implementation)."}
{"name": "duyongan/sunstreaker", "full_name": "duyongan/sunstreaker", "topics": ["deep-learning", "machine-learning", "nlp", "data-science", "neural-network", "python", "jax", "keras", "pytorch", "tensorflow", "beginner-friendly", "deep-learning-algorithms", "deep-learning-framework", "deep-learning-library", "deep-learning-tutorial", "deep-neural-networks", "ml", "numpy", "scikit-learn"], "description": "\u4ee5jax\u4e3a\u540e\u7aef\u7684\u7c7b\u4f3ckeras\u7684\u6846\u67b6"}
{"name": "eladrich/pix2vertex.pytorch", "full_name": "eladrich/pix2vertex.pytorch", "topics": ["pytorch", "iccv", "reconstruction", "deep-learning"], "description": "An official pyTorch port of the pix2vertex paper from ICCV2017"}
{"name": "skycrapers/tecogan-pytorch", "full_name": "skycrapers/TecoGAN-PyTorch", "topics": ["pytorch", "super-resolution", "tecogan", "frvsr", "computer-vision", "video-processing"], "description": "A PyTorch Reimplementation of TecoGAN: Temporally Coherent GAN for Video Super-Resolution"}
{"name": "opentensor/bittensor", "full_name": "opentensor/bittensor", "topics": ["neural-networks", "machine-learning", "p2p-network", "substrate", "polkadot", "blockchain", "cryptocurrency", "ai", "deep-learning", "p2p", "torch", "pytorch"], "description": "Internet-scale Neural Networks"}
{"name": "rotot0/tab-ddpm", "full_name": "rotot0/tab-ddpm", "topics": ["deep-learning", "diffusion-models", "pytorch", "tabular"], "description": null}
{"name": "mit-han-lab/pytorch-quantum", "full_name": "mit-han-lab/torchquantum", "topics": ["pytorch-quantum", "quantum", "quantum-machine-learning", "neural-network", "machine-learning", "quantum-computing", "pytorch", "deep-learning", "system", "ml-for-systems", "quantum-simulation", "quantum-neural-network", "parameterized-quantum-circuit"], "description": "A PyTorch-based framework for Quantum Simulation, Quantum Machine Learning, Quantum Neural Networks, Parameterized Quantum Circuits with support for easy deployments on real quantum computers."}
{"name": "icaros-usc/pyribs", "full_name": "icaros-usc/pyribs", "topics": ["quality-diversity", "artificial-intelligence", "python", "optimization", "openai-gym", "evolutionary-computation", "deep-learning", "evolutionary-algorithms", "cma-es", "map-elites"], "description": "A bare-bones Python library for quality diversity optimization."}
{"name": "ssisyphustao/object-detection-knowledge-distillation", "full_name": "SsisyphusTao/Object-Detection-Knowledge-Distillation", "topics": ["pytorch", "knowledge-distillation", "ssd", "object-detection", "deep-learning", "yolov5"], "description": "An Object Detection Knowledge Distillation framework powered by pytorch, now having SSD and yolov5."}
{"name": "svip-lab/indoor-sfmlearner", "full_name": "svip-lab/Indoor-SfMLearner", "topics": ["pytorch", "eccv2020", "unsupervised-learning", "indoor", "depth-estimation", "nyuv2", "extract-superpixel", "scannet", "pose-estimation", "self-supervised"], "description": "[ECCV'20] Patch-match and Plane-regularization for Unsupervised Indoor Depth Estimation"}
{"name": "fxmeng/rmnet", "full_name": "fxmeng/RMNet", "topics": ["resnet", "vgg", "repvgg", "pruning", "mobilenetv2", "pytorch"], "description": "RM Operation can equivalently convert ResNet to VGG, which is better for pruning; and can help RepVGG perform better when the depth is large."}
{"name": "zhmiao/opencompounddomainadaptation-ocda", "full_name": "zhmiao/OpenCompoundDomainAdaptation-OCDA", "topics": ["open-compound-domain-adaptation", "pytorch-implementation", "computer-vision", "domain-adaptation", "ocda", "cvpr2020", "deep-learning"], "description": "Pytorch implementation for \"Open Compound Domain Adaptation\" (CVPR 2020 ORAL)"}
{"name": "hjxwhy/mipnerf_pl", "full_name": "hjxwhy/mipnerf_pl", "topics": [], "description": "Unofficial pytorch-lightning implement of Mip-NeRF"}
{"name": "linjieli222/hero", "full_name": "linjieli222/HERO", "topics": ["pytorch", "transformers", "vision-and-language", "pretraining", "tvr"], "description": "Research code for EMNLP 2020 paper \"HERO: Hierarchical Encoder for Video+Language Omni-representation Pre-training\""}
{"name": "v-iashin/bmt", "full_name": "v-iashin/BMT", "topics": ["pytorch", "bi-modal-transformer", "dense-video-captioning", "audio", "video", "i3d", "activitynet-captions", "multimodal-fusion", "temporal-action-proposals", "bmvc", "bmvc20", "bmt", "proposal-generator", "video-features", "bi-modal-encoder", "transformer"], "description": "Source code for \"Bi-modal Transformer for Dense Video Captioning\" (BMVC 2020)"}
{"name": "jeeseung-park/styleformer", "full_name": "Jeeseung-Park/Styleformer", "topics": [], "description": "[CVPR 2022] Styleformer - Official Pytorch Implementation"}
{"name": "botaoye/ostrack", "full_name": "botaoye/OSTrack", "topics": ["tracking", "transformer"], "description": "[ECCV 2022] Joint Feature Learning and Relation Modeling for Tracking: A One-Stream Framework"}
{"name": "adobe-research/sam_inversion", "full_name": "adobe-research/sam_inversion", "topics": ["computer-graphics", "computer-vision", "deep-learning", "gan", "generative-adversarial-network", "image-manipulation", "machine-learning", "pytorch"], "description": "[CVPR 2022] GAN inversion and editing with spatially-adaptive multiple latent layers "}
{"name": "heshuting555/aicity2020_dmt_vehiclereid", "full_name": "heshuting555/AICITY2020_DMT_VehicleReID", "topics": ["aicity", "pytorch", "veri-776", "vehicle-reidentification"], "description": "The 3rd Place Submission to AICity Challenge 2020 Track2"}
{"name": "dvlab-research/eccv22-p3aformer-tracking-objects-as-pixel-wise-distributions", "full_name": "dvlab-research/ECCV22-P3AFormer-Tracking-Objects-as-Pixel-wise-Distributions", "topics": ["mot", "multiple-object-tracking", "tracking", "transformer", "p3aformer"], "description": "The official code for our ECCV22 oral paper: tracking objects as pixel-wise distributions."}
{"name": "willbrennan/semanticsegmentation", "full_name": "WillBrennan/SemanticSegmentation", "topics": ["pytorch", "torchvision", "computer-vision", "semantic-segmentation", "segmentation", "skin-segmentation", "skin-detection", "pizza-toppings", "pizza", "cats", "birds", "coco", "labelme-annotations", "labelme", "bisenet", "bisenetv2"], "description": "A framework for training segmentation models in pytorch on labelme annotations with pretrained examples of skin, cat, and pizza topping segmentation"}
{"name": "qianyiwu/objsdf", "full_name": "QianyiWu/objsdf", "topics": ["eccv2022", "neural-implicit-representations", "sdf", "semantic"], "description": ":t-rex:[ECCV\u201822] Pytorch implementation of 'Object-Compositional Neural Implicit Surfaces'"}
{"name": "jeya-maria-jose/unext-pytorch", "full_name": "jeya-maria-jose/UNeXt-pytorch", "topics": ["segmentation", "medical-image-segmentation", "medical-imaging", "deep-learning", "unet", "unet-image-segmentation", "mlp"], "description": "Official Pytorch Code base for \"UNeXt: MLP-based Rapid Medical Image Segmentation Network\", MICCAI 2022"}
{"name": "hasai666/rec_pangu", "full_name": "HaSai666/rec_pangu", "topics": ["ctr-prediction", "deep-learning", "multi-task-learning", "ranking-algorithm", "recommendation-system"], "description": "Some Rank/Multi-task model implemented by Pytorch"}
{"name": "spokestack/spokestack-python", "full_name": "spokestack/spokestack-python", "topics": ["text-to-speech", "nlu", "voice-recognition", "tts", "nlp", "natural-language-processing", "natural-language-understanding", "speech-recognition", "speech-to-text", "speech-synthesis", "raspberry-pi", "keyword-spotting", "bot", "tensorflow", "embedded", "deep-learning", "machine-learning", "smart-home"], "description": "Spokestack is a library that allows a user to easily incorporate a voice interface into any Python application with a focus on embedded systems."}
{"name": "xiaoyubie1994/dvae", "full_name": "XiaoyuBIE1994/DVAE", "topics": ["deep-learning", "generative-model", "variational-autoencoders"], "description": "Official implementation of Dynamical VAEs"}
{"name": "s-aiueo32/lpips-pytorch", "full_name": "S-aiueo32/lpips-pytorch", "topics": ["perceptual-similarity", "perceptual-metric", "lpips", "deep-learning", "deep-neural-networks"], "description": "A simple and useful implementation of LPIPS."}
{"name": "ucuapps/openglue", "full_name": "ucuapps/OpenGlue", "topics": ["graph-neural-networks", "image-matching", "local-features", "kornia", "pytorch", "pytorch-lightning"], "description": "Open Source Graph Neural Net Based Pipeline for Image Matching"}
{"name": "akshitac8/ow-detr", "full_name": "akshitac8/OW-DETR", "topics": ["open-world-detection", "deformable-detr", "transformers", "ms-coco"], "description": "[CVPR 2022] Official Pytorch code for OW-DETR: Open-world Detection Transformer"}
{"name": "lyqun/fpconv", "full_name": "lyqun/FPConv", "topics": ["cvpr2020", "point-cloud", "point-convolution", "scannet", "s3dis", "scene-understanding", "3d-vision", "3d-convolutions", "semantic-segmentation", "pytorch"], "description": "FPConv: Learning Local Flattening for Point Convolution, CVPR 2020"}
{"name": "alibabaresearch/damo-convai", "full_name": "AlibabaResearch/DAMO-ConvAI", "topics": ["conversational-ai", "deep-learning", "natural-language-processing", "dialog"], "description": "DAMO-ConvAI: The official repository which contains the codebase for Alibaba DAMO Conversational AI."}
{"name": "stevewongv/instanceshadowdetection", "full_name": "stevewongv/InstanceShadowDetection", "topics": ["cvpr2020", "computer-vision", "deep-learning", "shadow-detection", "detectron2", "instance-shadow-detection", "instance-detection"], "description": "Instance Shadow Detection (CVPR 2020)"}
{"name": "danbider/lightning-pose", "full_name": "danbider/lightning-pose", "topics": ["pose-estimation", "pytorch-lightning", "cnn"], "description": "Accelerated pose estimation and tracking using semi-supervised convolutional networks."}
{"name": "allanyiin/yolov4", "full_name": "AllanYiin/YoloV4", "topics": ["yolo", "pytorch"], "description": "Yolo v4 in pytorch, tensorflow and onnx"}
{"name": "tinkoff-ai/etna-ts", "full_name": "tinkoff-ai/etna", "topics": ["python", "machine-learning", "time-series", "forecasting", "timeseries", "deep-learning"], "description": "ETNA \u2013 Time-Series Library"}
{"name": "megvii-research/transmvsnet", "full_name": "megvii-research/TransMVSNet", "topics": ["multi-view-stereo", "transformer"], "description": "(CVPR 2022) TransMVSNet: Global Context-aware Multi-view Stereo Network with Transformers."}
{"name": "idea-opensource/dab-detr", "full_name": "IDEA-Research/DAB-DETR", "topics": ["detr", "dab-detr", "detection", "transformer"], "description": "[ICLR 2022] DAB-DETR: Dynamic Anchor Boxes are Better Queries for DETR"}
{"name": "gewelsji/sinet-v2", "full_name": "GewelsJI/SINet-V2", "topics": ["camoufalge", "conceal", "camouflaged-object-detection", "deep-learning", "pytorch", "defect-detection", "jittor"], "description": "Concealed Object Detection (SINet-V2, IEEE TPAMI 2022). Code using Jittor Framework is available."}
{"name": "idsia/modern-srwm", "full_name": "IDSIA/modern-srwm", "topics": ["reinforcement-learning", "self-referential-weight-matrix", "transformers", "pytorch", "torchbeast", "fast-weight-programmers", "fast-weights", "rnn-based-few-shot-learning", "self-referential-learning"], "description": "Official repository for the paper \"A Modern Self-Referential Weight Matrix That Learns to Modify Itself\" (ICML 2022 & NeurIPS 2021 Deep RL Workshop)"}
{"name": "cmhungsteve/sstda", "full_name": "cmhungsteve/SSTDA", "topics": ["cvpr2020", "pytorch", "domain-adaptation", "domain-discrepancy", "temporal-dynamics", "video", "action-segmentation", "self-supervised-learning", "video-understanding"], "description": "[CVPR 2020] Action Segmentation with Joint Self-Supervised Temporal Domain Adaptation (PyTorch)"}
{"name": "bigscience-workshop/petals", "full_name": "bigscience-workshop/petals", "topics": ["bloom", "deep-learning", "distributed-systems", "language-models", "large-language-models", "machine-learning", "neural-networks", "pytorch", "volunteer-computing", "pipeline-parallelism", "tensor-parallelism"], "description": "\ud83c\udf38 Run 100B+ language models at home, BitTorrent-style. Fine-tuning and inference up to 10x faster than offloading"}
{"name": "signatrix/regnet", "full_name": "signatrix/regnet", "topics": ["designing-network-design-spaces", "image-classification", "pytorch", "deep-learning", "regnet", "anynet", "fair", "paradigm", "squeeze-and-excitation", "imagenet", "classification"], "description": "Pytorch implementation of network design paradigm described in the paper \"Designing Network Design Spaces\""}
{"name": "szq0214/un-mix", "full_name": "szq0214/Un-Mix", "topics": ["unsupervised-learning", "image-mixture", "smooth-decision-boundaries", "self-supervised-learning", "pytorch"], "description": "Un-Mix: Rethinking Image Mixtures for Unsupervised Visual Representation Learning."}
{"name": "hhj1897/face_parsing", "full_name": "hhj1897/face_parsing", "topics": ["pytorch", "face-parsing"], "description": "Official Pytorch implementation of 'RoI Tanh-polar Transformer Network for Face Parsing in the Wild.'"}
{"name": "alibaba-mmai-research/tadaconv", "full_name": "alibaba-mmai-research/TAdaConv", "topics": ["action-recognition", "pytorch", "action-localization", "video-understanding", "video-classification", "self-supervised-learning", "tadaconv"], "description": "[ICLR 2022] TAda! Temporally-Adaptive Convolutions for Video Understanding. This codebase provides solutions for video classification, video representation learning and temporal detection. "}
{"name": "universome/epigraf", "full_name": "universome/epigraf", "topics": ["3d", "gans", "generation", "generative-adversarial-network"], "description": "[NeurIPS 2022] Official pytorch implementation of EpiGRAF"}
{"name": "ha0tang/bigraphgan", "full_name": "Ha0Tang/BiGraphGAN", "topics": ["bmvc", "image-generation", "graph", "bipartite-graphs", "person", "person-image-generation", "selectiongan", "pytorch", "deepfashion", "bmvc20"], "description": "[BMVC 2020 Oral] Bipartite Graph Reasoning GANs for Person Image Generation"}
{"name": "aisingapore/peekingduck", "full_name": "aisingapore/PeekingDuck", "topics": ["computer-vision", "deep-learning", "pose-estimation", "object-detection", "object-tracking", "python", "pipeline", "nodes"], "description": "A modular framework built to simplify Computer Vision inference workloads."}
{"name": "zgcr/pytorch-imagenet-cifar-coco-voc-training", "full_name": "zgcr/SimpleAICV_pytorch_training_examples_on_ImageNet_COCO_ADE20K", "topics": ["pytorch", "coco", "imagenet", "cifar100", "darknet", "fcos", "resnet", "retinanet", "centernet", "ttfnet", "repvgg", "mae", "dino", "vit", "voc", "ade20k", "regnet"], "description": "SimpleAICV:pytorch training and testing examples on ImageNet(ILSVRC2012)/COCO2017/VOC2007+2012/CIFAR100/AED20K datasets.Include classification/object detection/distillation/contrastive learning/masked image modeling."}
{"name": "servicenow/azimuth", "full_name": "ServiceNow/azimuth", "topics": ["data-analysis", "error-analysis", "explainability", "machine-learning", "nlp", "text-classification", "saliency-map", "similarity-analysis", "uncertainty-quantification", "explainable-ai", "xai"], "description": "Helping AI practitioners better understand their datasets and models in text classification. From ServiceNow."}
{"name": "alibaba-nlp/kb-ner", "full_name": "Alibaba-NLP/KB-NER", "topics": ["named-entity-recognition", "ner", "semeval-2022", "multimodal", "nlp", "semeval", "naacl2022"], "description": "Winner system (DAMO-NLP) of SemEval 2022 MultiCoNER shared task over 10 out of 13 tracks."}
{"name": "mv-lab/swin2sr", "full_name": "mv-lab/swin2sr", "topics": ["compression", "compression-artifact-reduction", "computer-vision", "deblocking", "denoising", "eccv2022", "image-denoising", "image-processing", "image-restoration", "image-sr", "image-super-resolution", "jpeg", "low-level-vision", "ntire", "super-resolution", "transformer", "deep-learning", "vision-transformer"], "description": "Swin2SR: SwinV2 Transformer for Compressed Image Super-Resolution and Restoration at the Advances in Image Manipulation (AIM) workshop ECCV 2022, Tel Aviv"}
{"name": "pku-marl/omnisafe", "full_name": "PKU-MARL/omnisafe", "topics": ["benchmark", "benchmark-suite", "mujoco", "pytorch", "safe-reinforcement-learning"], "description": "OmniSafe is a comprehensive and reliable benchmark for safe reinforcement learning."}
{"name": "mhaut/angulargrad", "full_name": "mhaut/AngularGrad", "topics": [], "description": "Pytorch implementation of AngularGrad: A New Optimization Technique for Angular Convergence of Convolutional Neural Networks"}
{"name": "vijaydwivedi75/gnn-lspe", "full_name": "vijaydwivedi75/gnn-lspe", "topics": ["graph-neural-networks", "transformers", "graph-transformer", "positional-encoding", "graph-deep-learning", "transformer-networks", "attention", "graphs", "molecules", "gnn-lspe", "lspe", "graph-representation-learning", "geometric-deep-learning", "representation-learning", "gnn", "message-passing"], "description": "Source code for GNN-LSPE (Graph Neural Networks with Learnable Structural and Positional Representations), ICLR 2022"}
{"name": "zeiss-microscopy/bsconv", "full_name": "zeiss-microscopy/BSConv", "topics": ["cvpr2020", "pytorch", "depthwise-separable-convolutions", "resnet", "mobilenet", "image-classification", "deep-learning", "efficient-neural-networks", "zeiss", "cifar10", "cifar100", "blueprint-separable-convolutions"], "description": "Reference implementation for Blueprint Separable Convolutions (CVPR 2020)"}
{"name": "tsujuifu/pytorch_violet", "full_name": "tsujuifu/pytorch_violet", "topics": ["pytorch", "vision-and-language", "pre-training", "video-retrieval", "video-question-answering"], "description": "A PyTorch implementation of VIOLET"}
{"name": "jgraving/cne", "full_name": "jgraving/selfsne", "topics": ["clustering", "machine-learning", "embedding-models", "contrastive-learning", "self-supervised-learning", "dimensionality-reduction", "deep-learning"], "description": "Self-Supervised Noise Embeddings (Self-SNE) for dimensionality reduction and clustering"}
{"name": "karel911/tracer", "full_name": "Karel911/TRACER", "topics": ["pytorch", "aaai2022", "aaai-2022", "pytorch-implementation", "image-segmentation", "salient-object-detection", "attention", "attention-mechanism", "background-removal"], "description": "TRACER: Extreme Attention Guided Salient Object Tracing Network (AAAI 2022) implementation in PyTorch"}
{"name": "aimagelab/dress-code", "full_name": "aimagelab/dress-code", "topics": ["dress-code", "virtual-try-on", "computer-vision", "deep-learning", "artificial-intelligence", "eccv2022"], "description": "Dress Code: High-Resolution Multi-Category Virtual Try-On. ECCV 2022"}
{"name": "zhangbaijin/spa-former-shadow-removal", "full_name": "zhangbaijin/SpA-Former-shadow-removal", "topics": ["gan", "shadow-removal", "image-restoration", "pytorch", "clodu-removal"], "description": "Code for paper: SpA-Former:An Effective and Lightweight Transformer for Image Shadow Removal"}
{"name": "showlab/egovlp", "full_name": "showlab/EgoVLP", "topics": ["egocentric-vision", "pretraining", "pytorch", "video-language"], "description": "[NeurIPS2022] Egocentric Video-Language Pretraining"}
{"name": "digantamisra98/evonorm", "full_name": "digantamisra98/EvoNorm", "topics": ["deep-learning", "neural-networks", "computer-vision", "normalization", "neural-architecture-search", "nas"], "description": "Unofficial PyTorch Implementation of EvoNorm"}
{"name": "jonasschult/mask3d", "full_name": "JonasSchult/Mask3D", "topics": ["3d-computer-vision", "computer-vision", "deep-learning", "deep-neural-networks", "pytorch"], "description": "Mask3D predicts accurate 3D semantic instances achieving state-of-the-art on ScanNet, ScanNet200, S3DIS and STPLS3D."}
{"name": "ziplab/litv2", "full_name": "ziplab/LITv2", "topics": ["classification", "detection", "pytorch", "segmentation", "vision-transformer"], "description": "[NeurIPS 2022 Spotlight] This is the official PyTorch implementation of \"Fast Vision Transformers with HiLo Attention\""}
{"name": "rozumden/defmo", "full_name": "rozumden/DeFMO", "topics": ["fast-moving-objects", "temporal-super-resolution", "deblurring", "deep-learning", "semi-supervised-learning", "synthetic-dataset-generation", "motion-blur", "disentangled-representations", "cvpr2021", "dataset"], "description": "[CVPR 2021] DeFMO: Deblurring and Shape Recovery of Fast Moving Objects"}
{"name": "tum-daml/gemnet_pytorch", "full_name": "TUM-DAML/gemnet_pytorch", "topics": ["paper", "gnn", "pytorch", "graph-neural-networks"], "description": "GemNet model in PyTorch, as proposed in \"GemNet: Universal Directional Graph Neural Networks for Molecules\" (NeurIPS 2021)"}
{"name": "jytime/deep-sfm-revisited", "full_name": "jytime/Deep-SfM-Revisited", "topics": ["computer-vision", "deep-learning", "structure-from-motion"], "description": null}
{"name": "ink-usc/commongen", "full_name": "INK-USC/CommonGen", "topics": ["natural-language-processing", "commonsense-reasoning", "nlg-dataset", "natural-language-generation", "language-generation-dataset", "machine-reasoning", "deep-learning", "text-generation", "nlp-datasets"], "description": "A Constrained Text Generation Challenge Towards Generative Commonsense Reasoning"}
{"name": "rayhane-mamah/efficient-vdvae", "full_name": "Rayhane-mamah/Efficient-VDVAE", "topics": ["python", "jax", "pytorch", "paper", "vae", "image-generation", "representation-learning", "unsupervised-learning"], "description": "Official Pytorch and JAX implementation of \"Efficient-VDVAE: Less is more\""}
{"name": "hrnet/hrnet-bottom-up-pose-estimation", "full_name": "HRNet/HRNet-Bottom-Up-Pose-Estimation", "topics": [], "description": "This is an official pytorch implementation of \u201cBottom-Up Human Pose Estimation by Ranking Heatmap-Guided Adaptive Keypoint Estimates\u201d (https://arxiv.org/abs/2006.15480). "}
{"name": "cluebenchmark/dataclue", "full_name": "CLUEbenchmark/DataCLUE", "topics": ["data-centric", "nlp", "chinese", "classification-algorithm", "ai", "human-in-the-loop"], "description": "DataCLUE: \u6570\u636e\u4e3a\u4e2d\u5fc3\u7684NLP\u57fa\u51c6\u548c\u5de5\u5177\u5305"}
{"name": "yifanzhang713/ia-ssd", "full_name": "yifanzhang713/IA-SSD", "topics": ["point-cloud", "pytorch", "object-detection", "autonomous-driving", "3d-object-detection", "ia-ssd"], "description": "Not All Points Are Equal: Learning Highly Efficient Point-based Detectors for 3D LiDAR Point Clouds (CVPR 2022, Oral)"}
{"name": "sunghwanhong/cost-aggregation-transformers", "full_name": "SunghwanHong/Cost-Aggregation-transformers", "topics": ["pytorch", "deep-learning", "neurips-2021", "computer-vision", "neurips", "semantic-correspondence"], "description": "Official implementation of CATs"}
{"name": "jameschapman19/cca_zoo", "full_name": "jameschapman19/cca_zoo", "topics": ["dcca", "deep", "cca", "canonical-correlation-analysis", "kernel", "multiview", "pytorch", "cca-zoo", "multiset-cca", "tensor-cca", "pls"], "description": "Canonical Correlation Analysis Zoo: A collection of Regularized, Deep Learning based, Kernel, and Probabilistic methods in a scikit-learn style framework"}
{"name": "libtraffic/bigscity-libtraffic", "full_name": "LibCity/Bigscity-LibCity", "topics": ["traffic", "traffic-prediction", "traffic-flow-prediction", "traffic-speed-prediction", "on-demand-service", "trajectory-prediction", "toolkit", "deep-learning", "spatio-temporal-prediction", "spatio-temporal", "pytorch-implementation", "traffic-forecasting", "map-matching", "representation-learning", "estimated-time-of-arrival", "traffic-accident-prediction", "od-matrix", "time-series-prediction", "eta", "libcity"], "description": "LibCity: An Open Library for Urban Spatio-temporal Data Mining"}
{"name": "pdrm83/sent2vec", "full_name": "pdrm83/sent2vec", "topics": ["nlp", "nlp-machine-learning", "encode-sentences", "sent2vec", "sentence-embeddings", "word2vec", "natural-language-processing", "machine-learning", "artificial-intelligence", "ai"], "description": "How to encode sentences in a high-dimensional vector space, a.k.a., sentence embedding."}
{"name": "megviirobot/transmvsnet", "full_name": "megvii-research/TransMVSNet", "topics": ["multi-view-stereo", "transformer"], "description": "(CVPR 2022) TransMVSNet: Global Context-aware Multi-view Stereo Network with Transformers."}
{"name": "iflytek/cino", "full_name": "iflytek/cino", "topics": ["nlp", "pytorch", "xlmr", "xlm-roberta", "chinese-nlp", "transformers", "cino"], "description": "CINO: Pre-trained Language Models for Chinese Minority (\u5c11\u6570\u6c11\u65cf\u8bed\u8a00\u9884\u8bad\u7ec3\u6a21\u578b)"}
{"name": "unity-technologies/robotics-object-pose-estimation", "full_name": "Unity-Technologies/Robotics-Object-Pose-Estimation", "topics": ["unity", "pose-estimation", "ros", "urdf", "robotics", "autonomy", "manipulation", "computer-vision", "model-training", "synthetic-data", "machine-learning", "simulation", "robotics-simulation", "perception", "deep-learning", "tutorial", "motion-planning", "ur3-robot-arm", "trajectory-generation", "physics-simulation"], "description": "A complete end-to-end demonstration in which we collect training data in Unity and use that data to train a deep neural network to predict the pose of a cube. This model is then deployed in a simulated robotic pick-and-place task."}
{"name": "yl4579/styletts", "full_name": "yl4579/StyleTTS", "topics": ["speech-synthesis", "text-to-speech", "tts", "pytorch", "deep-learning"], "description": "Official Implementation of StyleTTS"}
{"name": "akashsengupta1997/straps-3dhumanshapepose", "full_name": "akashsengupta1997/STRAPS-3DHumanShapePose", "topics": ["3d-reconstruction", "human-pose-estimation", "human-shape-recover", "smpl", "deep-learning"], "description": "Code repository for the paper: Synthetic Training for Accurate 3D Human Pose and Shape Estimation in the Wild (BMVC 2020)"}
{"name": "bubbliiiing/efficientnet-yolo3-pytorch", "full_name": "bubbliiiing/efficientnet-yolo3-pytorch", "topics": [], "description": "\u8fd9\u662f\u4e00\u4e2aefficientnet-yolo3-pytorch\u7684\u6e90\u7801\uff0c\u5c06yolov3\u7684\u4e3b\u5e72\u7279\u5f81\u63d0\u53d6\u7f51\u7edc\u4fee\u6539\u6210\u4e86efficientnet"}
{"name": "thuml/nonstationary_transformers", "full_name": "thuml/Nonstationary_Transformers", "topics": ["deep-learning", "time-series", "forecasting", "non-stationary"], "description": "Code release for \"Non-stationary Transformers: Exploring the Stationarity in Time Series Forecasting\" (NeurIPS 2022), https://arxiv.org/abs/2205.14415"}
{"name": "mohamedafham/crosspoint", "full_name": "MohamedAfham/CrossPoint", "topics": ["self-supervised-learning", "3d-point-clouds", "cross-modal-learning", "transfer-learning", "unsupervised-learning", "point-cloud", "few-shot-learning", "deep-learning", "object-classification"], "description": "Official implementation of \"CrossPoint: Self-Supervised Cross-Modal Contrastive Learning for 3D Point Cloud Understanding\" (CVPR, 2022)"}
{"name": "zjunlp/promptkg", "full_name": "zjunlp/PromptKG", "topics": ["knowledge-graph", "genkgc", "prompt-tuning", "relation-extraction", "link-prediction", "retrievalre", "demo-tuning", "pytorch", "promptkg", "retroprompt", "knowledge-informed-prompt-learning", "question-answering", "dialogue", "awsome-list", "paper-list", "retrieval-augmented", "lambdakg", "natural-language-processing", "nlp", "paper"], "description": "PromptKG Family: a Gallery of Prompt Learning & KG-related research works, toolkits, and paper-list."}
{"name": "yongzhuo/pytorch-nlu", "full_name": "yongzhuo/Pytorch-NLU", "topics": ["python3", "pytorch", "text-classification", "sequence-labeling", "named-entity-recognition", "word-segmentation", "pos-tagging", "chinese-text-segmentation", "chinese-text-classification", "transformers", "bert", "pretrained-models"], "description": "Pytorch-NLU\uff0c\u4e00\u4e2a\u4e2d\u6587\u6587\u672c\u5206\u7c7b\u3001\u5e8f\u5217\u6807\u6ce8\u5de5\u5177\u5305\uff0c\u652f\u6301\u4e2d\u6587\u957f\u6587\u672c\u3001\u77ed\u6587\u672c\u7684\u591a\u7c7b\u3001\u591a\u6807\u7b7e\u5206\u7c7b\u4efb\u52a1\uff0c\u652f\u6301\u4e2d\u6587\u547d\u540d\u5b9e\u4f53\u8bc6\u522b\u3001\u8bcd\u6027\u6807\u6ce8\u3001\u5206\u8bcd\u7b49\u5e8f\u5217\u6807\u6ce8\u4efb\u52a1\u3002 Ptorch NLU, a Chinese text classification and sequence annotation toolkit, supports multi class and multi label classification tasks of Chinese long text and short text, and supports sequence annotation tasks such as Chinese named entity recognition, part of speech tagging and word segmentation."}
{"name": "monniert/unicorn", "full_name": "monniert/unicorn", "topics": ["3d-reconstruction", "deep-learning", "single-view-reconstruction", "unsupervised-learning", "analysis-by-synthesis", "unsupervised", "computer-vision", "pytorch", "mesh-generation", "differentiable-rendering", "eccv-2022", "eccv2022"], "description": "(ECCV 2022) Official code of Share With Thy Neighbors: Single-View Reconstruction by Cross-Instance Consistency"}
{"name": "demoriarty/fast_pytorch_kmeans", "full_name": "DeMoriarty/fast_pytorch_kmeans", "topics": [], "description": "This is a pytorch implementation of k-means clustering algorithm"}
{"name": "na-z/attmpti", "full_name": "Na-Z/attMPTI", "topics": ["pytorch", "point-cloud", "few-shot-learning", "3d-segmentation", "3d"], "description": "[CVPR 2021] Few-shot 3D Point Cloud Semantic Segmentation"}
{"name": "mikel-brostrom/yolov3_deepsort_pytorch", "full_name": "mikel-brostrom/Yolov3_DeepSort_Pytorch", "topics": ["deep-sort", "yolo-v3", "pytorch", "real-time", "multple-object-tracking", "pedestrian-tracking", "computer-camera", "yolov3", "deep-association-metric", "pytorch-yolov3", "video", "web-camera", "rtsp-stream", "http-stream", "simple-online-and-realtime-tracking", "you-only-look-once"], "description": "Real-time multi-person tracker using YOLO v3 and deep sort"}
{"name": "els-rd/triton_transformers", "full_name": "ELS-RD/transformer-deploy", "topics": ["inference", "deep-learning", "natural-language-processing", "deployment", "machine-learning", "server"], "description": "Efficient, scalable and enterprise-grade CPU/GPU inference server for \ud83e\udd17 Hugging Face transformer models \ud83d\ude80"}
{"name": "heatherjiazg/superglue-pytorch", "full_name": "HeatherJiaZG/SuperGlue-pytorch", "topics": ["pytorch", "superglue"], "description": "[SuperGlue: Learning Feature Matching with Graph Neural Networks] This repo includes PyTorch code for training the SuperGlue matching network on top of SIFT keypoints and descriptors. "}
{"name": "cliang1453/bond", "full_name": "cliang1453/BOND", "topics": ["ner", "named-entity-recognition", "distant-supervision", "roberta", "open-domain", "self-training", "weakly-supervised-learning", "weak-supervision", "weakly-supervised", "bert", "pre-trained", "fine-tuning", "natural-language-processing", "nlp", "dataset"], "description": "BOND: BERT-Assisted Open-Domain Name Entity Recognition with Distant Supervision"}
{"name": "idkiro/starenhancer", "full_name": "IDKiro/StarEnhancer", "topics": ["pytorch", "deep-learning", "image-enhancement", "image-processing"], "description": "[ICCV 2021 Oral] StarEnhancer: Learning Real-Time and Style-Aware Image Enhancement"}
{"name": "fei-long121/deepbdc", "full_name": "Fei-Long121/DeepBDC", "topics": [], "description": "The Pytorch code of \"Joint Distribution Matters: Deep Brownian Distance Covariance for Few-Shot Classification\", CVPR 2022 (Oral)."}
{"name": "tencent-quantum-lab/tensorcircuit", "full_name": "tencent-quantum-lab/tensorcircuit", "topics": ["machine-learning", "quantum", "quantum-algorithms", "quantum-circuit", "quantum-computing", "quantum-simulation", "automatic-differentiation", "tensor-network", "neural-network", "tensorflow", "jax", "nisq", "pytorch", "quantum-noise", "matrix-product-states", "open-quantum-systems", "quantum-machine-learning", "variational-quantum-algorithms", "quantum-error-mitigation"], "description": "Tensor network based quantum software framework for the NISQ era"}
{"name": "xheon/panoptic-reconstruction", "full_name": "xheon/panoptic-reconstruction", "topics": ["neurips-2021", "computer-vision", "deep-learning", "python", "pytorch", "3d-reconstruction", "reconstruction", "3d-scene-reconstruction"], "description": "Official implementation of the NeurIPS 2021 paper \"Panoptic 3D Scene Reconstruction from a Single RGB Image\""}
{"name": "mit-ll-responsible-ai/hydra-zen", "full_name": "mit-ll-responsible-ai/hydra-zen", "topics": ["configuration", "machine-learning", "dataclasses", "dynamic-configuration", "yaml-configuration", "pytorch", "pytorch-lightning", "reproducibility", "reproducible-science", "scalable", "configurable", "machinelearning", "deep-learning"], "description": "Pythonic functions for creating and enhancing Hydra applications"}
{"name": "christophreich1996/maxvit", "full_name": "ChristophReich1996/MaxViT", "topics": ["deep-learning", "computer-vision", "transformer", "vision-transformer", "attention", "image-classification", "pytorch"], "description": "PyTorch reimplementation of the paper \"MaxViT: Multi-Axis Vision Transformer\" [arXiv 2022]."}
{"name": "fdbtrs/elasticface", "full_name": "fdbtrs/ElasticFace", "topics": ["face-recognition", "pytorch-implementation", "softmax-classification", "marginal-softmax", "elastic-loss", "deep-learning"], "description": "Official repository for ElasticFace: Elastic Margin Loss for Deep Face Recognition"}
{"name": "seokju-cho/volumetric-aggregation-transformer", "full_name": "Seokju-Cho/Volumetric-Aggregation-Transformer", "topics": ["few-shot-segmentation", "computer-vision", "semantic-correspondence", "cost-aggregation", "deep-learning"], "description": "Official Implementation of VAT"}
{"name": "makgyver/rectorch", "full_name": "makgyver/rectorch", "topics": ["recommender-system", "collaborative-filtering", "autoencoder", "variational-autoencoder", "generative-adversarial-network", "pypi", "pytorch", "matrix-factorization", "top-n-recommendations"], "description": "rectorch is a pytorch-based framework for state-of-the-art top-N recommendation"}
{"name": "swz30/mirnetv2", "full_name": "swz30/MIRNetv2", "topics": ["contrast-enhancement", "defocus-deblurring", "denoising", "high-resolution", "image-denoising", "image-enhancement", "image-processing", "image-restoration", "low-level-vision", "low-light-image-enhancement", "pytorch", "tpami"], "description": "[TPAMI 2022] Learning Enriched Features for Fast Image Restoration and Enhancement. Results on Defocus Deblurring, Denoising, Super-resolution, and image enhancement"}
{"name": "maximevandegar/papers-in-100-lines-of-code", "full_name": "MaximeVandegar/Papers-in-100-Lines-of-Code", "topics": ["python", "research", "deep-learning", "machine-learning", "implementation-of-research-paper", "educational", "pytorch", "papers", "generative-model", "inverse-rendering", "nerf", "artificial-intelligence", "gans", "aes", "3d", "meta-learning"], "description": "Implementation of papers in 100 lines of code."}
{"name": "neu-vi/ezflow", "full_name": "neu-vi/ezflow", "topics": ["pytorch", "optical-flow", "modular"], "description": "A modular PyTorch library for optical flow estimation using neural networks"}
{"name": "zjcv/zcls", "full_name": "ZJCV/ZCls", "topics": ["pytorch", "groupnorm", "non-local", "resnet3d", "gcnet", "mnasnet", "mobilenetv1-v2-v3", "shufflenetv1-v2", "repvgg", "zcls", "ghostnet", "senet-sknet-resnest", "acnet", "resnet-resnext", "prefetcher", "lmdb", "diverse-branch-block", "gradient-clipping", "cutmix-mixup", "mpdataset"], "description": "Object Classification Training Framework"}
{"name": "huggingface/transformers-bloom-inference", "full_name": "huggingface/transformers-bloom-inference", "topics": ["bloom", "huggingface-transformers", "nlp", "pytorch"], "description": "Fast Inference Solutions for BLOOM"}
{"name": "chris-hughes10/pytorch-accelerated", "full_name": "Chris-hughes10/pytorch-accelerated", "topics": ["pytorch", "deep-learning", "training", "timm-examples", "pytorch-tutorial", "huggingface-examples", "huggingface-accelerate"], "description": "A lightweight library designed to accelerate the process of training PyTorch models by providing a minimal, but extensible training loop which is flexible enough to handle the majority of use cases, and capable of utilizing different hardware options with no code changes required. Docs: https://pytorch-accelerated.readthedocs.io/en/latest/ "}
{"name": "jayleicn/tvretrieval", "full_name": "jayleicn/TVRetrieval", "topics": ["video-retrieval", "dataset", "pytorch", "tvr", "tvc"], "description": "[ECCV 2020] PyTorch code for XML on TVRetrieval dataset - TVR: A Large-Scale Dataset for Video-Subtitle Moment Retrieval"}
{"name": "vcasecnikovs/yet-another-yolov4-pytorch", "full_name": "VCasecnikovs/Yet-Another-YOLOv4-Pytorch", "topics": ["yolov4-pytorch", "eca", "loss", "mosaic"], "description": "YOLOv4 Pytorch implementation with all freebies and specials and 15+ more exclusive improvements. Easy to use!"}
{"name": "gitycc/crnn-pytorch", "full_name": "GitYCC/crnn-pytorch", "topics": ["pytorch", "ocr-recognition", "crnn-ctc"], "description": "Convolutional Recurrent Neural Network (CRNN) for image-based sequence recognition using Pytorch"}
{"name": "chandlerbang/pro-gnn", "full_name": "ChandlerBang/Pro-GNN", "topics": ["graph-neural-networks", "adversarial-attacks", "defense", "deep-learning", "machine-learning", "graph-structure-recovery", "graph-mining", "attack-defense", "semi-supervised-learning", "pytorch"], "description": "Implementation of the KDD 2020 paper \"Graph Structure Learning for Robust Graph Neural Networks\""}
{"name": "vipl-audio-visual-speech-understanding/learn-an-effective-lip-reading-model-without-pains", "full_name": "VIPL-Audio-Visual-Speech-Understanding/learn-an-effective-lip-reading-model-without-pains", "topics": ["lipreading", "pytorch", "deep-learning"], "description": "The PyTorch Code and Model In \"Learn an Effective Lip Reading Model without Pains\", (https://arxiv.org/abs/2011.07557), which reaches the state-of-art performance in LRW-1000 dataset."}
{"name": "jzou44/photo2pixel", "full_name": "Jzou44/photo2pixel", "topics": ["image-processing", "pixel", "pixel-art", "pixelart", "pytorch"], "description": "Algorithm used in photo2pixel.co to convert photo to pixel style(8-bit) art."}
{"name": "lucidrains/invariant-point-attention", "full_name": "lucidrains/invariant-point-attention", "topics": ["artificial-intelligence", "deep-learning", "protein-folding"], "description": "Implementation of Invariant Point Attention, used for coordinate refinement in the structure module of Alphafold2, as a standalone Pytorch module"}
{"name": "ustcml/recstudio", "full_name": "ustcml/RecStudio", "topics": ["collaborative-filtering", "ctr-prediction", "deep-learning", "factorization-machines", "knowledge-graph", "matrix-factorization", "pytorch", "recommender-system", "sequential-recommendation", "graph-neural-networks"], "description": "A highly-modularized and recommendation-efficient recommendation library based on PyTorch."}
{"name": "openclimatefix/skillful_nowcasting", "full_name": "openclimatefix/skillful_nowcasting", "topics": ["nowcasting", "nowcasting-models", "nowcasting-precipitation", "gan", "pytorch-implementation", "pytorch", "pytorch-lightning"], "description": "Implementation of DeepMind's Deep Generative Model of Radar (DGMR)  https://arxiv.org/abs/2104.00954"}
{"name": "patrick-kidger/torchcubicspline", "full_name": "patrick-kidger/torchcubicspline", "topics": ["pytorch", "interpolation", "spline"], "description": "Interpolating natural cubic splines. Includes batching, GPU support, support for missing values, evaluating derivatives of the spline, and backpropagation."}
{"name": "uyzhang/pct_pytorch", "full_name": "Strawberry-Eat-Mango/PCT_Pytorch", "topics": [], "description": "Pytorch implementation of PCT: Point Cloud Transformer"}
{"name": "notai-tech/fastpunct", "full_name": "notAI-tech/fastPunct", "topics": ["deep-learning", "punctuation", "punctuation-correction", "text", "nlp", "text-correction", "attention", "auto-punctuation", "punctuation-restoration", "punctuation-marks", "spelling-correction", "spellchecker"], "description": "Punctuation restoration and spell correction experiments."}
{"name": "opendilab/di-hpc", "full_name": "opendilab/DI-hpc", "topics": ["reinforcement-learning", "cuda", "hpc", "lstm", "pytorch"], "description": "OpenDILab RL HPC OP Lib"}
{"name": "tsafavi/codex", "full_name": "tsafavi/codex", "topics": ["knowledge-graph", "link-prediction", "knowledge-graph-embeddings", "triple-classification", "wikidata", "wikipedia", "nlp", "knowledge-representation", "knowledge-representation-learning", "knowledge-representation-reasoning", "knowledge-base"], "description": "CoDEx: A set of knowledge graph Completion Datasets Extracted from Wikidata and Wikipedia"}
{"name": "lliuz/arflow", "full_name": "lliuz/ARFlow", "topics": ["optical-flow", "unsupervised-learning", "self-supervised-learning", "pytorch", "cvpr2020"], "description": "The official PyTorch implementation of the paper \"Learning by Analogy: Reliable Supervision from Transformations for Unsupervised Optical Flow Estimation\"."}
{"name": "mdv3101/cdecnet", "full_name": "mdv3101/CDeCNet", "topics": ["table-detection", "sota", "table", "pytorch", "cdec-net", "benchmark-datasets", "table-detection-using-deep-learning", "object-detection"], "description": "CDeC-Net: Composite Deformable Cascade Network for Table Detection in Document Images"}
{"name": "autoliuweijie/bert-whitening-pytorch", "full_name": "autoliuweijie/BERT-whitening-pytorch", "topics": [], "description": "Pytorch version of BERT-whitening"}
{"name": "nicholasli1995/egonet", "full_name": "Nicholasli1995/EgoNet", "topics": ["3d-pose-estimation", "autonomous-driving", "orientation-estimation", "kitti-3d", "3d-object-detection", "cvpr2021", "pose-estimation", "vehicles", "robot-perception", "representation-learning", "self-supervised-learning", "deep-learning", "projective-geometry", "kitti", "3d-vision"], "description": "Official project website for the CVPR 2021 paper \"Exploring intermediate representation for monocular vehicle pose estimation\""}
{"name": "gabeur/mmt", "full_name": "gabeur/mmt", "topics": ["multimodal", "video", "language", "vision", "fusion", "nlp"], "description": "Multi-Modal Transformer for Video Retrieval"}
{"name": "postech-cvlab/fastpointtransformer", "full_name": "POSTECH-CVLab/FastPointTransformer", "topics": ["computer-vision", "3d-vision", "transformer", "point-cloud", "cvpr2022"], "description": "Official source code of Fast Point Transformer, CVPR 2022"}
{"name": "siyu-c/acar-net", "full_name": "Siyu-C/ACAR-Net", "topics": ["action-detection", "acar-net", "ava", "ava-kinetics", "ava-dataset", "spatio-temporal-action-localization", "pytorch", "torch", "arxiv", "activitynet", "activitynet-challenge", "model-zoo"], "description": "[CVPR 2021] Actor-Context-Actor Relation Network for Spatio-temporal Action Localization"}
{"name": "binzhouchn/masr", "full_name": "binzhouchn/masr", "topics": ["pytorch", "pretrained-models", "speech-recognition", "deep-learning"], "description": "\u4e2d\u6587\u8bed\u97f3\u8bc6\u522b\u7cfb\u5217\uff0c\u8bfb\u8005\u53ef\u4ee5\u501f\u52a9\u5b83\u5feb\u901f\u8bad\u7ec3\u5c5e\u4e8e\u81ea\u5df1\u7684\u4e2d\u6587\u8bed\u97f3\u8bc6\u522b\u6a21\u578b\uff0c\u6216\u76f4\u63a5\u4f7f\u7528\u9884\u8bad\u7ec3\u6a21\u578b\u6d4b\u8bd5\u6548\u679c\u3002"}
{"name": "autonomousvision/plant", "full_name": "autonomousvision/plant", "topics": ["autonomous-driving", "carla-simulator", "corl22", "planning", "self-driving", "transformer"], "description": "[CoRL'22] PlanT: Explainable Planning Transformers via Object-Level Representations"}
{"name": "misads/detection_template", "full_name": "misads/easy_detection", "topics": ["yolo", "voc", "coco", "pytorch", "detection"], "description": "\u4e00\u4e2a\u7b80\u5355\u65b9\u4fbf\u7684\u76ee\u6807\u68c0\u6d4b\u6846\u67b6(PyTorch\u73af\u5883\u53ef\u76f4\u63a5\u8fd0\u884c\uff0c\u4e0d\u9700\u8981cuda\u7f16\u8bd1)\uff0c\u652f\u6301Faster_RCNN\u3001Cascade_RCNN\u3001Yolo\u7cfb\u5217\u3001SSD\u7b49\u7ecf\u5178\u7f51\u7edc\u3002"}
{"name": "yerfor/syntaspeech", "full_name": "yerfor/SyntaSpeech", "topics": ["gan", "pytorch", "speech-synthesis", "tts"], "description": "SyntaSpeech: Syntax-aware Generative Adversarial Text-to-Speech; IJCAI 2022; Official code"}
{"name": "jonasgeiping/breaching", "full_name": "JonasGeiping/breaching", "topics": ["security", "machine-learning", "pytorch", "federated-learning", "decentralized-learning", "privacy-audit"], "description": "Breaching privacy in federated learning scenarios for vision and text"}
{"name": "chavinlo/distributed-diffusion", "full_name": "chavinlo/distributed-diffusion", "topics": ["deep-learning", "distributed-computing", "distributed-training", "stable-diffusion"], "description": "Train a Stable Diffusion model over the internet with Hivemind"}
{"name": "esceptico/perceiver-io", "full_name": "esceptico/perceiver-io", "topics": ["nlp", "python", "pytorch", "perceiver", "perceiverio", "self-attention", "machine-learning", "deep-learning", "transformer", "encoder", "decoder"], "description": "Unofficial implementation of Perceiver IO"}
{"name": "mees/calvin", "full_name": "mees/calvin", "topics": ["natural-language-processing", "robotics", "deep-learning", "grounding", "vision-language", "manipulation", "computer-vision", "pytorch", "vision", "vision-and-language"], "description": "CALVIN - A benchmark for Language-Conditioned Policy Learning for Long-Horizon Robot Manipulation Tasks"}
{"name": "bubbliiiing/facenet-pytorch", "full_name": "bubbliiiing/facenet-pytorch", "topics": [], "description": "\u8fd9\u662f\u4e00\u4e2afacenet-pytorch\u7684\u5e93\uff0c\u53ef\u4ee5\u7528\u4e8e\u8bad\u7ec3\u81ea\u5df1\u7684\u4eba\u8138\u8bc6\u522b\u6a21\u578b\u3002"}
{"name": "lucidrains/rotary-embedding-torch", "full_name": "lucidrains/rotary-embedding-torch", "topics": ["artificial-intelligence", "deep-learning", "positional-encoding"], "description": "Implementation of Rotary Embeddings, from the Roformer paper, in Pytorch"}
{"name": "huangjunheng/recommendation_model", "full_name": "huangjunheng/recommendation_model", "topics": ["pytorch", "mf", "fm", "deepconn", "mmoe", "ple", "deepfm", "nfm", "dcn", "afm", "autoint", "onn", "fibinet", "widedeep", "dcnv2", "afn", "dcap"], "description": "\u7ec3\u4e60\u4e0b\u7528pytorch\u6765\u590d\u73b0\u4e0b\u7ecf\u5178\u7684\u63a8\u8350\u7cfb\u7edf\u6a21\u578b, \u5982MF, FM, DeepConn, MMOE, PLE, DeepFM, NFM, DCN, AFM, AutoInt, ONN, FiBiNET, DCN-v2, AFN, DCAP\u7b49"}
{"name": "choyingw/synergynet", "full_name": "choyingw/SynergyNet", "topics": ["3d", "pytorch", "facial-landmarks", "head-pose-estimation", "3d-face-reconstruction", "facial-keypoints", "3d-face-alignment", "3dv2021", "3dvision", "computer-vision", "computer-graphics", "2d-3d", "deep-neural-networks"], "description": "3DV 2021: Synergy between 3DMM and 3D Landmarks for Accurate 3D Facial Geometry"}
{"name": "bubbliiiing/retinanet-pytorch", "full_name": "bubbliiiing/retinanet-pytorch", "topics": [], "description": "\u8fd9\u662f\u4e00\u4e2aretinanet-pytorch\u7684\u6e90\u7801\uff0c\u53ef\u4ee5\u7528\u4e8e\u8bad\u7ec3\u81ea\u5df1\u7684\u6a21\u578b\u3002"}
{"name": "osainz59/ask2transformers", "full_name": "osainz59/Ask2Transformers", "topics": ["topic-modeling", "topic-classification", "deep-learning", "transformers", "zero-shot", "mnli", "nlp", "nlp-tools", "nlp-tool", "relation-extraction", "natural-language-processing", "pytorch", "text-classification"], "description": "A Framework for Textual Entailment based Zero Shot text classification"}
{"name": "mindslab-ai/nuwave2", "full_name": "mindslab-ai/nuwave2", "topics": ["deep-learning", "neural-audio-upsampling", "super-resolution", "upsampling", "pytorch"], "description": "NU-Wave 2: A General Neural Audio Upsampling Model for Various Sampling Rates @ INTERSPEECH 2022"}
{"name": "tonyngjichun/solar", "full_name": "tonyngjichun/SOLAR", "topics": ["image-retrieval", "global-descriptors", "local-descriptors", "second-order", "non-local-block", "eccv-2020", "eccv2020", "eccv", "computer-vision", "deep-learning", "pytorch", "cnn"], "description": "PyTorch code for \"SOLAR: Second-Order Loss and Attention for Image Retrieval\". In ECCV 2020"}
{"name": "thuanz123/enhancing-transformers", "full_name": "thuanz123/enhancing-transformers", "topics": ["pytorch", "rq-vae", "vit-vqgan"], "description": "An unofficial implementation of both ViT-VQGAN and RQ-VAE in Pytorch"}
{"name": "rishikksh20/convolution-vision-transformers", "full_name": "rishikksh20/convolution-vision-transformers", "topics": ["transformers", "computer-vision", "image-classification", "classification", "pytorch", "cnn", "convolution"], "description": "PyTorch Implementation of CvT: Introducing Convolutions to Vision Transformers"}
{"name": "yueliu1999/dcrn", "full_name": "yueliu1999/DCRN", "topics": ["self-supervised-learning", "graph-neural-networks", "deep-clustering", "representation-learning", "deep-learning", "graph-convolutional-networks", "network-embedding", "pytorch", "unsupervised-learning", "data-mining", "gcn", "graph-convolutional-network"], "description": "[AAAI 2022] An official source code for paper Deep Graph Clustering via Dual Correlation Reduction."}
{"name": "lhoyer/hrda", "full_name": "lhoyer/HRDA", "topics": ["attention", "high-resolution", "multi-resolution", "semantic-segmentation", "transformer", "unsupervised-domain-adaptation"], "description": "[ECCV22] Official Implementation of HRDA: Context-Aware High-Resolution Domain-Adaptive Semantic Segmentation"}
{"name": "qiulin-w/safa", "full_name": "Qiulin-W/SAFA", "topics": ["face-animation", "3dmm", "differentiable-rendering", "gan", "3d-graphics", "3d-reconstruction", "reenactment", "pytorch3d", "flame-model", "video-editing", "image-manipulation"], "description": "Official Pytorch Implementation of 3DV2021 paper: SAFA: Structure Aware Face Animation."}
{"name": "aovoc/nnieqat-pytorch", "full_name": "aovoc/nnieqat-pytorch", "topics": ["pytorch", "quantized-training", "nnie", "nnieqat-pytorch"], "description": "A nnie quantization aware training tool on pytorch."}
{"name": "gyunggyung/kogpt2-finetuning", "full_name": "gyunggyung/KoGPT2-FineTuning", "topics": ["nlp", "gpt2", "kogpt2", "finetuning", "korean-nlp", "fine-tuning", "korean", "text-generation", "lyrics-generator", "language-model"], "description": "\ud83d\udd25 Korean GPT-2, KoGPT2 FineTuning cased. \ud55c\uad6d\uc5b4 \uac00\uc0ac \ub370\uc774\ud130 \ud559\uc2b5 \ud83d\udd25"}
{"name": "lin-yijie/graph-matching-networks", "full_name": "Lin-Yijie/Graph-Matching-Networks", "topics": ["gnn", "deep-learning", "graph-neural-networks", "pytorch"], "description": "PyTorch implementation of Graph Matching Networks for Learning the Similarity of Graph Structured Objects (ICML 2019)."}
{"name": "anguelos/tormentor", "full_name": "anguelos/tormentor", "topics": [], "description": "Pytorch augmentation"}
{"name": "princeton-nlp/trime", "full_name": "princeton-nlp/TRIME", "topics": ["language-model", "nlp"], "description": "EMNLP 2022: Training Language Models with Memory Augmentation https://arxiv.org/abs/2205.12674"}
{"name": "hobogalaxy/lightning-hydra-template", "full_name": "ashleve/lightning-hydra-template", "topics": ["pytorch-lightning", "wandb", "project-structure", "config", "deep-learning", "hydra", "template", "pytorch", "reproducibility", "best-practices", "neptune", "mlflow", "tensorboard", "comet", "mlops"], "description": "PyTorch Lightning + Hydra. A very user-friendly template for rapid and reproducible ML experimentation with best practices.  \u26a1\ud83d\udd25\u26a1"}
{"name": "v0lta/pytorch-wavelet-toolbox", "full_name": "v0lta/PyTorch-Wavelet-Toolbox", "topics": ["wavelet-transform", "pytorch", "wavelet-packets", "wavelet", "wavelet-analysis"], "description": "Differentiable fast wavelet transforms in PyTorch with GPU support."}
{"name": "torchmd/mdgrad", "full_name": "torchmd/mdgrad", "topics": ["quantum-dynamics", "molecular-dynamics", "statistical-mechanics", "physics-simulation", "chemistry", "graph-neural-networks", "polymer", "force-field-optimization", "differentiable-simulations", "quantum-isomerization"], "description": "Pytorch differentiable molecular dynamics "}
{"name": "snap-research/cat", "full_name": "snap-research/CAT", "topics": ["deep-learning", "compression", "image-to-image", "cyclegan", "pix2pix", "gaugan", "pytorch", "gan"], "description": "[CVPR 2021] Teachers Do More Than Teach: Compressing Image-to-Image Models (CAT)"}
{"name": "megvii-research/dcls-sr", "full_name": "megvii-research/DCLS-SR", "topics": ["blind-super-resolution", "deblurring", "pytorch", "deep-learning", "super-resolution"], "description": "Official PyTorch implementation of the paper \"Deep Constrained Least Squares for Blind Image Super-Resolution\", CVPR 2022."}
{"name": "leijue222/portrait-matting-unet-flask", "full_name": "leijue222/portrait-matting-unet-flask", "topics": ["pytorch", "matting", "segmentation", "flask", "portrait"], "description": "Portrait Mating  implementation in UNet with PyTorch."}
{"name": "homebrewnlp/revlib", "full_name": "HomebrewNLP/revlib", "topics": ["pytorch", "deep-learning", "revnet", "deepspeed", "xla", "tpu", "momentumnet"], "description": "Simple and efficient RevNet-Library for PyTorch with XLA and DeepSpeed support and parameter offload"}
{"name": "clovaai/lffont", "full_name": "clovaai/lffont", "topics": ["machine-learning", "deep-learning", "generative-models", "font", "font-generation", "pytorch", "lf-font", "aaai2021"], "description": "Official PyTorch implementation of LF-Font (Few-shot Font Generation with Localized Style Representations and Factorization) AAAI 2021"}
{"name": "sanweiliti/lemo", "full_name": "sanweiliti/LEMO", "topics": ["motion-prior", "pose-estimation", "lemo", "motion-capture", "human-scene-interaction", "3d-scene", "deep-learning", "3d-vision", "computer-vision"], "description": "Official Pytorch implementation for 2021 ICCV paper \"Learning Motion Priors for 4D Human Body Capture in 3D Scenes\" and trained models / data"}
{"name": "arxyzan/data2vec-pytorch", "full_name": "arxyzan/data2vec-pytorch", "topics": ["pytorch", "self-supervised-learning", "data2vec", "fairseq", "roberta", "wav2vec", "huggingface", "beit"], "description": "PyTorch implementation of \"data2vec: A General Framework for Self-supervised Learning in Speech, Vision and Language\" from Meta AI"}
{"name": "keonlee9420/cross-speaker-emotion-transfer", "full_name": "keonlee9420/Cross-Speaker-Emotion-Transfer", "topics": ["emotion-transfer", "cross-speaker", "global-style-tokens", "conditional-layer-normalization", "text-to-speech", "deep-neural-networks", "pytorch", "tts", "speech-synthesis", "generative-model", "parallel-tacotron", "neural-tts", "non-ar", "non-autoregressive", "semi-supervised-learning"], "description": "PyTorch Implementation of ByteDance's Cross-speaker Emotion Transfer Based on Speaker Condition Layer Normalization and Semi-Supervised Training in Text-To-Speech"}
{"name": "thuml/anomaly-transformer", "full_name": "thuml/Anomaly-Transformer", "topics": ["anomaly-detection", "deep-learning", "time-series"], "description": "About Code release for \"Anomaly Transformer: Time Series Anomaly Detection with Association Discrepancy\" (ICLR 2022 Spotlight), https://openreview.net/forum?id=LzQQ89U1qm_"}
{"name": "docf/multispectral-object-detection", "full_name": "DocF/multispectral-object-detection", "topics": ["deep-learning", "object-detection", "pytorch", "transformer", "yolov5"], "description": "Multispectral Object Detection with Yolov5  and Transformer"}
{"name": "bl0/moco", "full_name": "bl0/moco", "topics": ["unsupervised-learning", "self-supervised-learning", "pytorch", "imagenet", "resnet-50", "moco", "contrast-learning", "momentum-contrast"], "description": "Unofficial implementation with pytorch DistributedDataParallel for \"MoCo: Momentum Contrast for Unsupervised Visual Representation Learning\""}
{"name": "mayurji/mlwithpytorch", "full_name": "Mayurji/MLWithPytorch", "topics": ["pytorch-implementation", "pytorch", "machine-learning-algorithms", "python3", "kmeans-clustering", "linear-regression", "logistic-regression", "decision-trees", "naive-bayes-classifier", "svm-classifier", "pca-analysis", "tfidf-vectorizer", "naive-bayes-algorithm", "knn-classification", "gaussian-mixture-models", "lasso-regression", "ridge-regression", "machine-learning", "adaboost-algorithm"], "description": "Objective of the repository is to learn and build machine learning models using Pytorch. 30DaysofML Using Pytorch"}
{"name": "hellloxiaotian/cfsrcnn", "full_name": "hellloxiaotian/CFSRCNN", "topics": ["super-resolution", "deep-learning", "low-level-vision", "cnn", "deep-neural-networks", "deep-networks", "pytorch", "cnn-pytorch", "image-processing", "pytorch-cnn", "python2", "python27", "cascaded-refinement-networks", "low-resolution", "high-resolution"], "description": "Coarse-to-Fine CNN for Image Super-Resolution (IEEE Transactions on Multimedia,2021)"}
{"name": "christophreich1996/swin-transformer-v2", "full_name": "ChristophReich1996/Swin-Transformer-V2", "topics": ["computer-vision", "transformer", "attention", "swin-transformer", "deep-learning", "pytorch", "vision-transformer"], "description": "PyTorch reimplementation of the paper \"Swin Transformer V2: Scaling Up Capacity and Resolution\" [CVPR 2022]."}
{"name": "lhwcv/mlsd_pytorch", "full_name": "lhwcv/mlsd_pytorch", "topics": [], "description": "Pytorch implementation of \"M-LSD: Towards Light-weight and Real-time Line Segment Detection\""}
{"name": "dingkeyan93/iqa-optimization", "full_name": "dingkeyan93/IQA-optimization", "topics": ["pytorch", "optimization", "loss-functions", "image-quality-assessment", "steerable-filters", "vif", "fsim", "lpips", "dists", "ssim", "iqa"], "description": "Comparison of IQA models in Perceptual Optimization"}
{"name": "nvlabs/dream", "full_name": "NVlabs/DREAM", "topics": ["pose-estimation", "camera-calibration", "deep-learning", "pytorch", "ros"], "description": "DREAM: Deep Robot-to-Camera Extrinsics for Articulated Manipulators (ICRA 2020)"}
{"name": "neuralet/smart-social-distancing", "full_name": "galliot-us/smart-social-distancing", "topics": ["edge-ai", "edge-tpu", "deep-learning", "deep-neural-networks", "edge-computing", "coral-dev-board", "coral-tpu", "jetson-nano", "jetson-tx2", "jetson", "nvidia-jetson-tx2", "nvidia-jetson-nano", "nvidia-jetson", "social-distancing", "social-distancing-detection", "social-distance-monitoring"], "description": "Social Distancing Detector using deep learning and capable to run on edge AI devices such as NVIDIA Jetson, Google Coral, and more."}
{"name": "voldemortx/dst-cbc", "full_name": "voldemortX/DST-CBC", "topics": ["semi-supervised-learning", "semantic-segmentation", "pytorch", "mixed-precision-training", "tensorboard", "pascal-voc", "cityscapes", "cifar"], "description": "Implementation of our Pattern Recognition paper \"DMT: Dynamic Mutual Training for Semi-Supervised Learning\""}
{"name": "pengtougu/retinaface_ghost", "full_name": "ppogg/Retinaface_Ghost", "topics": ["pytorch", "retinaface", "ghostnet", "mobilenetv3"], "description": "This is a project based on retinaface face detection, including ghostnet and mobilenetv3"}
{"name": "lee-zq/3dunet-pytorch", "full_name": "lee-zq/3DUNet-Pytorch", "topics": ["pytorch", "3dunet", "segmentation"], "description": "3DUNet implemented with pytorch"}
{"name": "hideunderbush/ui2i_via_stylegan2", "full_name": "HideUnderBush/UI2I_via_StyleGAN2", "topics": ["stylegan2", "image-translation", "pytorch"], "description": "Unsupervised image-to-image translation method via pre-trained StyleGAN2 network"}
{"name": "wimlds-trojmiasto/detect-waste", "full_name": "wimlds-trojmiasto/detect-waste", "topics": ["pytorch", "deep-learning", "object-detection", "python", "cnn", "neural-networks", "efficientdet", "detr", "maskrcnn", "fastrcnn", "litter", "waste-detection", "trash"], "description": " AI to Combat Environmental Pollution - detecting plastic waste in the environment to combat environmental pollution and promote circular economy (Deep Learning, PyTorch)"}
{"name": "woodfrog/vse_infty", "full_name": "woodfrog/vse_infty", "topics": ["vse", "image-text-matching", "cross-modal-retrieval", "vision-language", "visual-semantic", "pytorch"], "description": "Code for \"Learning the Best Pooling Strategy for Visual Semantic Embedding\", CVPR 2021"}
{"name": "gitabtion/bertbasedcorrectionmodels", "full_name": "gitabtion/BertBasedCorrectionModels", "topics": ["transformers", "pytorch", "csc"], "description": "PyTorch impelementations of BERT-based Spelling Error Correction Models.  \u57fa\u4e8eBERT\u7684\u6587\u672c\u7ea0\u9519\u6a21\u578b\uff0c\u4f7f\u7528PyTorch\u5b9e\u73b0\u3002"}
{"name": "gmberton/cosplace", "full_name": "gmberton/CosPlace", "topics": ["computer-vision", "dataset", "deep-learning", "geolocalization", "localization", "place-recognition", "state-of-the-art", "pytorch", "descriptors", "image-retrieval", "visual-place-recognition"], "description": "Official code for CVPR 2022 paper \"Rethinking Visual Geo-localization for Large-Scale Applications\""}
{"name": "clovaai/dmfont", "full_name": "clovaai/dmfont", "topics": ["font-generation", "pytorch", "eccv2020", "dmfont", "few-shot"], "description": "Official PyTorch implementation of DM-Font (ECCV 2020)"}
{"name": "nkolkin13/neuralneighborstyletransfer", "full_name": "nkolkin13/NeuralNeighborStyleTransfer", "topics": ["pytorch", "style-transfer"], "description": "Optimization based style transfer"}
{"name": "vztu/maxim-pytorch", "full_name": "vztu/maxim-pytorch", "topics": ["architecture", "computer-vision", "deblurring", "dehazing", "denoising", "deraining", "enhancement", "image", "image-enhancement", "image-processing", "image-restoration", "low-level-vision", "mlp", "restoration", "retouching", "transformer"], "description": "[CVPR 2022 Oral] PyTorch re-implementation for \"MAXIM: Multi-Axis MLP for Image Processing\", with *training code*. Official Jax repo: https://github.com/google-research/maxim"}
{"name": "naver-ai/c3-gan", "full_name": "naver-ai/c3-gan", "topics": [], "description": "Official Pytorch implementation of C3-GAN (Spotlight at ICLR 2022)"}
{"name": "matajoh/fourier_feature_nets", "full_name": "matajoh/fourier_feature_nets", "topics": ["computer-vision", "computer-graphics", "deep-learning", "pytorch"], "description": "Supplemental learning materials for \"Fourier Feature Networks and Neural Volume Rendering\""}
{"name": "hhguo/msmc-tts", "full_name": "hhguo/MSMC-TTS", "topics": ["deep-learning", "speech-synthesis", "tts", "vocoder", "gan", "text-to-speech", "vq-vae", "vqgan"], "description": "Official Implement of Multi-Stage Multi-Codebook (MSMC) TTS"}
{"name": "torchmd/torchmd-net", "full_name": "torchmd/torchmd-net", "topics": ["molecular-dynamics", "energy-functions", "neural-networks", "equivariant-representations", "transformer"], "description": "Neural network potentials based on graph neural networks and equivariant transformers"}
{"name": "fxmeng/filter-grafting", "full_name": "fxmeng/filter-grafting", "topics": ["filter", "grafting", "pruning", "distillation", "multi-network", "pytorch"], "description": "Filter Grafting for Deep Neural Networks(CVPR 2020)"}
{"name": "keonlee9420/stylespeech", "full_name": "keonlee9420/StyleSpeech", "topics": ["text-to-speech", "pytorch", "tts", "speech-synthesis", "english", "style", "speech-style", "prosody", "neural-tts", "non-autoregressive", "fastspeech", "stylespeech", "meta-learning", "speaker", "speaker-adaptation", "meta-stylespeech", "unseen-speaker", "one-shot"], "description": "PyTorch Implementation of Meta-StyleSpeech : Multi-Speaker Adaptive Text-to-Speech Generation"}
{"name": "hawkeye-finegrained/hawkeye", "full_name": "Hawkeye-FineGrained/Hawkeye", "topics": ["deep-learning", "pytorch", "toolbox", "fine-grained"], "description": "Open source deep learning based fine-grained image recognition toolbox built on PyTorch\ud83d\udd25"}
{"name": "amirassov/kaggle-global-wheat-detection", "full_name": "amirassov/kaggle-global-wheat-detection", "topics": ["kaggle", "deep-learning", "computer-vision", "object-detection", "mmdetection"], "description": "9th Place Solution of Kaggle Global Wheat Detection"}
{"name": "changlin31/bossnas", "full_name": "changlin31/BossNAS", "topics": ["nas", "neural-architecture-search", "transformer", "automl", "hybrid-neural-network", "self-supervised-learning"], "description": "(ICCV 2021) BossNAS: Exploring Hybrid CNN-transformers with Block-wisely Self-supervised Neural Architecture Search"}
{"name": "jarrentwu1031/ccpl", "full_name": "JarrentWu1031/CCPL", "topics": ["arbitrary-style-transfer", "artistic-style-transfer", "contrastive-learning", "contrastive-loss", "eccv", "eccv-2022", "eccv2022", "image-to-image-translation", "video-style-transfer", "photo-realistic-style-transfer", "versatile-style-transfer", "deep-learning", "pytorch", "style-transfer"], "description": "Official Pytorch implementation of CCPL and SCTNet (ECCV2022, Oral)"}
{"name": "um-arm-lab/pytorch_kinematics", "full_name": "UM-ARM-Lab/pytorch_kinematics", "topics": ["differentiable-programming", "jacobian", "kinematics", "pytorch", "robotics"], "description": "Robot kinematics implemented in pytorch"}
{"name": "lyh-yf/mwptoolkit", "full_name": "LYH-YF/MWPToolkit", "topics": ["deep-learning", "pytorch", "pretrained-language-model", "sequence-to-sequence", "sequence-to-tree", "graph-to-tree", "math-word-problem"], "description": "MWPToolkit is an open-source framework for math word problem(MWP) solvers."}
{"name": "hyeongminlee/adacof-pytorch", "full_name": "HyeongminLEE/AdaCoF-pytorch", "topics": ["video-frame-interpolation", "deep-learning", "pytorch", "cuda", "cupy", "python"], "description": "Official source code for our paper \"AdaCoF: Adaptive Collaboration of Flows for Video Frame Interpolation\" (CVPR 2020)"}
{"name": "xwinxu/bayesde", "full_name": "xwinxu/bayeSDE", "topics": ["sde-solvers", "stochastic-differential-equations", "pytorch", "bayesian-layers", "jax", "neural-sde", "neural-ode", "bayesian-neural-networks", "deep-learning", "deep-neural-networks"], "description": "Code for \"Infinitely Deep Bayesian Neural Networks with Stochastic Differential Equations\""}
{"name": "k2-fsa/sherpa", "full_name": "k2-fsa/sherpa", "topics": ["asr", "cpp", "python", "ctc", "pytorch", "transducer", "websocket", "end-to-end-asr", "speech-recognition"], "description": "Speech-to-text server framework with next-gen Kaldi"}
{"name": "zengqunzhao/efficientface", "full_name": "zengqunzhao/EfficientFace", "topics": ["computer-vision", "facial-expression-recognition", "pytorch", "aaai2021", "lightweight"], "description": "\u201cRobust Lightweight Facial Expression Recognition Network with Label Distribution Training\u201d, AAAI, 2021."}
{"name": "shilrley6/faster-r-cnn-with-model-pretrained-on-visual-genome", "full_name": "shilrley6/Faster-R-CNN-with-model-pretrained-on-Visual-Genome", "topics": [], "description": "Faster RCNN model in Pytorch version, pretrained on the Visual Genome with ResNet 101"}
{"name": "niraharon/bot-sort", "full_name": "NirAharon/BoT-SORT", "topics": ["multi-object-tracking", "pytorch", "yolov7", "yolox", "multi-object-tracker", "multi-pedestrian-tracking", "tracking-by-detection"], "description": "BoT-SORT: Robust Associations Multi-Pedestrian Tracking"}
{"name": "zhanghengdev/mutualguide", "full_name": "zhanghengdev/MutualGuide", "topics": ["knowledge-distillation", "object-detection", "pytorch", "deep-learning", "tensorrt"], "description": "Localize to Classify and Classify to Localize: Mutual Guidance in Object Detection"}
{"name": "pengboxiangshang/torchsketch", "full_name": "PengBoXiangShang/torchsketch", "topics": ["sketch", "deep-learning", "pytorch", "cnn", "rnn", "gnn", "tcn"], "description": "TPAMI 2022"}
{"name": "chr5tphr/zennit", "full_name": "chr5tphr/zennit", "topics": ["lrp", "pytorch", "xai", "machine-learning", "attribution", "explainability", "python", "interpretability", "explainable-ai", "interpretable-ai", "feature-attribution", "interpretable-ml", "deep-learning"], "description": "Zennit is a high-level framework in Python using PyTorch for explaining/exploring neural networks using attribution methods like LRP."}
{"name": "milleniums/high-resolution-remote-sensing-semantic-segmentation-pytorch", "full_name": "milleniums/High-Resolution-Remote-Sensing-Semantic-Segmentation-PyTorch", "topics": ["remote-sensing", "dataset", "land-cover-classification", "semantic-segmentation", "deeplabv3", "pytorch"], "description": "PyTorch\u5b9e\u73b0\u9ad8\u5206\u9065\u611f\u8bed\u4e49\u5206\u5272\uff08\u5730\u7269\u5206\u7c7b\uff09"}
{"name": "adamdad/dery", "full_name": "Adamdad/DeRy", "topics": ["neural-networks", "neurips-2022", "transfer-learning", "deep-learning", "deep-neural-networks", "ai", "machine-learning"], "description": "[NeurIPS2022] Deep Model Reassembly"}
{"name": "yura52/tabular-dl-num-embeddings", "full_name": "Yura52/tabular-dl-num-embeddings", "topics": ["python", "machine-learning", "deep-learning", "research", "pytorch", "paper", "neural-networks", "artificial-intelligence", "ai"], "description": "The official implementation of the paper \"On Embeddings for Numerical Features in Tabular Deep Learning\""}
{"name": "tianyu0207/pebal", "full_name": "tianyu0207/PEBAL", "topics": ["deep-learning", "pytorch", "anomaly-detection", "semantic-segmentation", "ood-detection", "cityscapes"], "description": "[ECCV'22 Oral] Pixel-wise Energy-biased Abstention Learning for Anomaly Segmentation on Complex Urban Driving Scenes"}
{"name": "yhygao/cbim-medical-image-segmentation", "full_name": "yhygao/CBIM-Medical-Image-Segmentation", "topics": ["medical-imaging", "pytorch", "segmentation", "deep-learning", "medical-image-segmentation"], "description": "A PyTorch framework for medical image segmentation"}
{"name": "eugeneyan/recsys-nlp-graph", "full_name": "eugeneyan/recsys-nlp-graph", "topics": ["recommender-system", "pytorch", "nlp", "graph", "matrix-factorization"], "description": "\ud83d\uded2 Simple recommender with matrix factorization, graph, and NLP. Beating the regular collaborative filtering baseline."}
{"name": "megvii-research/fq-vit", "full_name": "megvii-research/FQ-ViT", "topics": ["vision-transformer", "quantization", "post-training-quantization", "pytorch", "imagenet"], "description": "[IJCAI 2022] FQ-ViT: Post-Training Quantization for Fully Quantized Vision Transformer"}
{"name": "rvorias/ind_knn_ad", "full_name": "rvorias/ind_knn_ad", "topics": ["deep-learning", "anomaly-detection", "mvtec-ad"], "description": "Industrial knn-based anomaly detection for images. Visit streamlit link to check out the demo."}
{"name": "jadhaddad92/covid-mask-detector", "full_name": "JadHADDAD92/covid-mask-detector", "topics": ["mask", "covid19", "deep-learning", "detection", "pytorch", "coronavirus", "pytorch-lightning", "classification"], "description": "Detect whether a person is wearing a mask or not"}
{"name": "deepsphere/deepsphere-pytorch", "full_name": "deepsphere/deepsphere-pytorch", "topics": ["graph-neural-networks", "spherical-geometry", "sphere", "climate-science", "pytorch", "deepsphere"], "description": "DeepSphere: a graph-based spherical CNN (PyTorch)"}
{"name": "charliedinh/pfedme", "full_name": "CharlieDinh/pFedMe", "topics": ["federated-learning", "personalized-federated-learning", "federated-meta-learning", "pytorch", "neurips-2020", "pfedme", "paper", "per-fedavg"], "description": "Personalized Federated Learning with Moreau Envelopes (pFedMe) using Pytorch  (NeurIPS 2020)"}
{"name": "tgisaturday/l-verse", "full_name": "tgisaturday/L-Verse", "topics": ["deep-learning", "pytorch", "pytorch-lightning", "l-verse", "vq-vae", "transformer", "image-to-text", "text-to-image", "image-captioning"], "description": "L-Verse: Bidirectional Generation Between Image and Text"}
{"name": "clashluke/revlib", "full_name": "HomebrewNLP/revlib", "topics": ["pytorch", "deep-learning", "revnet", "deepspeed", "xla", "tpu", "momentumnet"], "description": "Simple and efficient RevNet-Library for PyTorch with XLA and DeepSpeed support and parameter offload"}
{"name": "xitorch/xitorch", "full_name": "xitorch/xitorch", "topics": ["pytorch", "linear-algebra", "numerical-calculations", "scientific-computing", "machine-learning"], "description": "Differentiable scientific computing library"}
{"name": "danpovey/fast_rnnt", "full_name": "danpovey/fast_rnnt", "topics": [], "description": "A torch implementation of a recursion which turns out to be useful for RNN-T."}
{"name": "tech-srl/how_attentive_are_gats", "full_name": "tech-srl/how_attentive_are_gats", "topics": ["how", "attentive", "are", "graph", "attention", "networks", "graph-neural-networks", "pytorch", "graph-attention-networks", "gat", "gatv2"], "description": "Code for the paper \"How Attentive are Graph Attention Networks?\" (ICLR'2022)"}
{"name": "snap-research/mocogan-hd", "full_name": "snap-research/MoCoGAN-HD", "topics": ["gan", "video-generation", "deep-learning", "image-generation"], "description": "[ICLR 2021 Spotlight] A Good Image Generator Is What You Need for High-Resolution Video Synthesis"}
{"name": "cceyda/torchserve-dashboard", "full_name": "cceyda/torchserve-dashboard", "topics": ["torchserve", "streamlit", "ml-deployment", "pytorch"], "description": "Management Dashboard for Torchserve"}
{"name": "lucidrains/h-transformer-1d", "full_name": "lucidrains/h-transformer-1d", "topics": ["artificial-intelligence", "deep-learning", "attention", "attention-mechanism", "transformer"], "description": "Implementation of H-Transformer-1D, Hierarchical Attention for Sequence Learning"}
{"name": "maua-maua-maua/maua", "full_name": "maua-maua-maua/maua", "topics": ["pytorch", "machine-learning", "python", "creativity", "generative", "generative-art", "deep-learning", "synthesis"], "description": "Deep learning toolkit for image, video, and audio synthesis"}
{"name": "pku-dair/sgl", "full_name": "PKU-DAIR/SGL", "topics": ["deep-learning", "geometric-deep-learning", "graph-neural-networks", "scalable-graph-learning", "network-embedding", "neural-architecture-search", "pytorch"], "description": "A scalable graph learning toolkit for extremely large graph datasets. (WWW'22,  \ud83c\udfc6 Best Student Paper Award) "}
{"name": "ibaigorordo/crestereo-pytorch", "full_name": "ibaiGorordo/CREStereo-Pytorch", "topics": ["python", "computer-vision", "opencv", "depth-estimation", "deep-learning", "stereo-matching", "stereo-vision", "stereo-depth-estimation", "pytorch", "crestereo"], "description": "Non-official Pytorch implementation of the CREStereo(CVPR 2022 Oral)."}
{"name": "rajghugare19/dreamerv2", "full_name": "RajGhugare19/dreamerv2", "topics": [], "description": "Pytorch implementation of Dreamer-v2: Visual Model Based RL Algorithm."}
{"name": "naver/gdc", "full_name": "naver/gdc", "topics": ["language-model", "machine-learning", "ai", "nlp", "nlg", "gpt-2", "gpt3", "fairness-ml", "controlled-nlg", "exponential-family", "information-geometry", "reinforcement-learning"], "description": "Code accompanying our papers on the \"Generative Distributional Control\" framework"}
{"name": "bm-k/kosentencebert_etri", "full_name": "BM-K/KoSentenceBERT-ETRI", "topics": ["sentence-bert", "sentence-similarity", "natural-language-processing", "korean-sentence-bert"], "description": "Sentence Embeddings using Siamese ETRI KoBERT-Networks"}
{"name": "rlleshi/phar", "full_name": "rlleshi/phar", "topics": ["action-recognition", "deep-learning", "porn-filter", "pornhub", "pytorch", "video-classification", "video-understanding", "human-action-recognition", "sex", "sex-classifier"], "description": "deep learning sex position classifier"}
{"name": "vishal3477/reverse_engineering_gms", "full_name": "vishal3477/Reverse_Engineering_GMs", "topics": [], "description": "Official Pytorch implementation of paper \"Reverse Engineering of Generative Models: Inferring Model Hyperparameters from Generated Images\""}
{"name": "tencent-ailab/grover", "full_name": "tencent-ailab/grover", "topics": [], "description": "This is a Pytorch implementation of the paper: Self-Supervised Graph Transformer on Large-Scale Molecular Data"}
{"name": "leaplabthu/pseudo-q", "full_name": "LeapLabTHU/Pseudo-Q", "topics": ["computer-vision", "visual-grounding", "cvpr2022", "deep-learning", "pytorch", "multimodal-deep-learning", "vision-and-language"], "description": "[CVPR 2022] Pseudo-Q: Generating Pseudo Language Queries for Visual Grounding"}
{"name": "otaheri/mano", "full_name": "otaheri/MANO", "topics": ["hand", "hand-modeling", "human-hand-model", "mano", "3d-viewer", "pytorch"], "description": "A PyTorch Implementation of MANO hand model."}
{"name": "vlar-group/dm-nerf", "full_name": "vLAR-group/DM-NeRF", "topics": ["3d", "3d-computer-vision", "3d-editor", "3d-reconstruction", "3d-segmentation", "deep-learning", "nerfs", "iclr2023"], "description": "\ud83d\udd25DM-NeRF in PyTorch (ICLR 2023)"}
{"name": "chriswu1997/pq-net", "full_name": "ChrisWu1997/PQ-NET", "topics": ["paper", "3d-shapes", "deep-learning", "cvpr2020"], "description": "code for our CVPR 2020 paper \"PQ-NET: A Generative Part Seq2Seq Network for 3D Shapes\""}
{"name": "paul007pl/vrcnet", "full_name": "paul007pl/VRCNet", "topics": ["point-cloud-completion", "partial-point-clouds", "mvp-dataset", "pytorch"], "description": "[CVPR 2021 Oral] Variational Relational Point Completion Network"}
{"name": "svip-lab/fastmvsnet", "full_name": "svip-lab/FastMVSNet", "topics": ["pytorch", "cvpr2020", "multi-view-stereo"], "description": "[CVPR'20] Fast-MVSNet: Sparse-to-Dense Multi-View Stereo With Learned Propagation and Gauss-Newton Refinement"}
{"name": "astra-vision/scenerf", "full_name": "astra-vision/SceneRF", "topics": ["deep-learning", "nerf", "neural-radiance-fields", "pytorch", "pytorch-lightning", "scene-reconstruction", "single-image-reconstruction", "depth-estimation", "self-supervised-learning", "3d-reconstruction", "self-supervised"], "description": "SceneRF: Self-Supervised Monocular 3D Scene Reconstruction with Radiance Fields"}
{"name": "xming521/ctai", "full_name": "xming521/CTAI", "topics": ["pytorch", "flask", "vue"], "description": "\u57fa\u4e8e\u6df1\u5ea6\u5b66\u4e60\u7684\u80bf\u7624\u8f85\u52a9\u8bca\u65ad\u7cfb\u7edf\uff0c\u4ee5\u56fe\u50cf\u5206\u5272\u4e3a\u6838\u5fc3\uff0c\u5229\u7528\u4eba\u5de5\u667a\u80fd\u5b8c\u6210\u80bf\u7624\u533a\u57df\u7684\u8bc6\u522b\u52fe\u753b\u5e76\u63d0\u4f9b\u80bf\u7624\u533a\u57df\u7684\u7279\u5f81\u6765\u8f85\u52a9\u533b\u751f\u8fdb\u884c\u8bca\u65ad\u3002\u6709\u5b8c\u6574\u7684\u6a21\u578b\u6784\u5efa\u3001\u540e\u7aef\u67b6\u8bbe\u548c\u524d\u7aef\u8bbf\u95ee\u529f\u80fd\u3002"}
{"name": "neosapience/editts", "full_name": "neosapience/editts", "topics": ["tts", "speech-synthesis", "text-to-speech", "speech-edit", "pytorch", "speech"], "description": "Official implementation of EdiTTS: Score-based Editing for Controllable Text-to-Speech (INTERSPEECH 2022)"}
{"name": "fracdiff/fracdiff", "full_name": "fracdiff/fracdiff", "topics": ["python", "time-series", "finance", "pytorch"], "description": "Compute fractional differentiation super-fast. Processes time-series to be stationary while preserving memory. cf. \"Advances in Financial Machine Learning\" by M. Prado."}
{"name": "lizhi-sjtu/drl-code-pytorch", "full_name": "Lizhi-sjtu/DRL-code-pytorch", "topics": ["ddpg-pytorch", "dqn-pytorch", "ppo-pytorch", "pytorch", "rainbow-dqn", "reinforcement-learning", "sac-pytorch", "td3-pytorch", "ppo-gru", "ppo-lstm"], "description": "Concise pytorch implements of DRL algorithms, including REINFORCE, A2C, DQN, PPO(discrete and continuous), DDPG, TD3, SAC."}
{"name": "himashi92/vt-unet", "full_name": "himashi92/VT-UNet", "topics": ["transformer", "3d-medical-imaging-segmentation", "tumor-segmentation", "volumetric-transformer", "deep-learning", "pytorch-implementation", "pure-transformer", "pytorch", "segmentation", "mri", "vision-transformer", "vtunet", "semantic-segmentation", "brats-dataset"], "description": "[MICCAI2022] This is an official PyTorch implementation for A Robust Volumetric Transformer for Accurate 3D Tumor Segmentation"}
{"name": "liusongxiang/efficient_tts", "full_name": "liusongxiang/efficient_tts", "topics": [], "description": "Pytorch implementation of \"Efficienttts: an efficient and high-quality text-to-speech architecture\""}
{"name": "linwhitehat/et-bert", "full_name": "linwhitehat/ET-BERT", "topics": ["pre-training", "transformer-architecture", "burst-analysis", "mask-burst-modeling", "same-origin-burst-prediction", "pytorch", "encrypted-traffic-analysis"], "description": "The repository of ET-BERT, a network traffic classification model on encrypted traffic. The work has been accepted as The Web Conference (WWW) 2022 accepted paper."}
{"name": "liuruiyang98/jittor-mlp", "full_name": "liuruiyang98/Jittor-MLP", "topics": ["deep-learning", "pytorch", "jittor", "papers"], "description": "Unofficial Implementation of MLP-Mixer, gMLP, resMLP, Vision Permutator, S2MLP, S2MLPv2, RaftMLP, HireMLP, ConvMLP, AS-MLP, SparseMLP, ConvMixer, SwinMLP, RepMLPNet, WaveMLP, MorphMLP, DynaMixer, MS-MLP, Sequencer2D in Jittor and PyTorch! Now, Rearrange and Reduce in einops.layers.jittor are support!! trunc_normal_ is supported for Jittor!! MLP Paper is uploaded!"}
{"name": "lucidrains/fast-transformer-pytorch", "full_name": "lucidrains/fast-transformer-pytorch", "topics": ["artificial-intelligence", "deep-learning", "transformers", "attention-mechanism"], "description": "Implementation of Fast Transformer in Pytorch"}
{"name": "zyx423/graph-embeddding", "full_name": "zyx423/Graph-Embeddding", "topics": ["gae", "graphembedding", "graph-neural-networks"], "description": "Reimplementation of Graph Embedding methods by Pytorch. "}
{"name": "qinbinli/moon", "full_name": "QinbinLi/MOON", "topics": ["federated-learning", "contrastive-learning", "pytorch", "cvpr2021"], "description": "Model-Contrastive Federated Learning (CVPR 2021)"}
{"name": "sea-snell/jaxseq", "full_name": "Sea-Snell/JAXSeq", "topics": ["gpt2", "gpt3", "huggingface", "language-models", "opt", "deep-learning", "flax", "jax"], "description": "Train very large language models in Jax."}
{"name": "lyndonzheng/tfill", "full_name": "lyndonzheng/TFill", "topics": ["image-completion", "transformer", "generative-adversarial-network"], "description": "CVPR2022:\"Bridging Global Context Interactions for High-Fidelity Image Completion\""}
{"name": "willi-menapace/playablevideogeneration", "full_name": "willi-menapace/PlayableVideoGeneration", "topics": [], "description": "Official Pytorch implementation of \"Playable Video Generation\", CVPR 2022 (Oral)"}
{"name": "chou141253/fgvc-pim", "full_name": "chou141253/FGVC-PIM", "topics": ["fine-grained-visual-categorization", "fgvc", "swin-transformer", "efficientnet", "resnet", "vision-transformer"], "description": "Pytorch implementation for \"A Novel Plug-in Module for Fine-Grained Visual Classification\". fine-grained visual classification task."}
{"name": "jianf-wang/rsg", "full_name": "Jianf-Wang/RSG", "topics": [], "description": "A Pytorch implementation of CVPR 2021 paper \"RSG: A Simple but Effective Module for Learning Imbalanced Datasets\""}
{"name": "tengfei-wang/external-internal-inpainting", "full_name": "Tengfei-Wang/external-internal-inpainting", "topics": ["pytorch", "image-inpainting", "inpainting", "colorization", "internal-learning", "image-processing", "computer-vision", "image-synthesis"], "description": "[CVPR 2021] EII: Image Inpainting with External-Internal Learning and Monochromic Bottleneck"}
{"name": "bubbliiiing/retinaface-pytorch", "full_name": "bubbliiiing/retinaface-pytorch", "topics": [], "description": "\u8fd9\u662f\u4e00\u4e2aretinaface-pytorch\u7684\u6e90\u7801\uff0c\u53ef\u4ee5\u7528\u4e8e\u8bad\u7ec3\u81ea\u5df1\u7684\u6a21\u578b\u3002"}
{"name": "mims-harvard/g-meta", "full_name": "mims-harvard/G-Meta", "topics": ["massive-interactomics", "graph-neural-networks", "meta-learning", "deep-learning", "few-shot-learning", "transfer-learning", "machine-learning"], "description": "Graph meta learning via local subgraphs (NeurIPS 2020)"}
{"name": "omarfoq/fedem", "full_name": "omarfoq/FedEM", "topics": ["machine-learning", "federated-learning", "pytorch", "deep-learning", "personalized-federated-learning"], "description": "Official code for \"Federated Multi-Task Learning under a Mixture of Distributions\" (NeurIPS'21)"}
{"name": "sp-nitech/diffsptk", "full_name": "sp-nitech/diffsptk", "topics": ["dsp", "sptk", "speech-processing", "pytorch", "python", "cepstrum", "digital-signal-processing", "lpc", "mfcc", "deep-learning", "vector-quantization"], "description": "A differential version of SPTK"}
{"name": "bigpon/vcc20_baseline_cyclevae", "full_name": "bigpon/vcc20_baseline_cyclevae", "topics": ["voice-conversion", "vcc2020", "baseline", "pytorch", "cyclevae-vc", "parallel-wavenet-vocoder"], "description": "Voice Conversion Challenge 2020 CycleVAE baseline system "}
{"name": "quva-lab/escnn", "full_name": "QUVA-Lab/escnn", "topics": ["deep-learning", "equivariance", "isometries", "pytorch", "symmetries", "rotations", "geometric-deep-learning", "geometry"], "description": "Equivariant Steerable CNNs Library for Pytorch https://quva-lab.github.io/escnn/"}
{"name": "jimmychame/sadnet", "full_name": "JimmyChame/SADNet", "topics": [], "description": "Pytorch code for \"Spatial-Adaptive Network for Single Image Denoising\""}
{"name": "kwea123/pytorch-cppcuda-tutorial", "full_name": "kwea123/pytorch-cppcuda-tutorial", "topics": [], "description": "tutorial for writing custom pytorch cpp+cuda kernel, applied on volume rendering (NeRF)"}
{"name": "khrylx/rfc", "full_name": "Khrylx/RFC", "topics": ["residual-force-control", "humanoid-control", "deepmimic", "reinforcement-learning", "imitation-learning", "character-animation", "motion-synthesis", "pytorch", "imitation", "neurips-2020"], "description": "[NeurIPS 2020] Official PyTorch Implementation of \"Residual Force Control for Agile Human Behavior Imitation and Extended Motion Synthesis\". NeurIPS 2020."}
{"name": "shoprunner/collie", "full_name": "ShopRunner/collie", "topics": ["recommendation-system", "recommender-system", "learning-to-rank", "pytorch", "deep-learning", "python", "implicit", "hybrid", "datascience"], "description": "A library for preparing, training, and evaluating scalable deep learning hybrid recommender systems using PyTorch. "}
{"name": "microsoft/astra", "full_name": "microsoft/ASTRA", "topics": ["weak-supervision", "nlp", "machine-learning", "weakly-supervised-learning"], "description": "Self-training with Weak Supervision (NAACL 2021)"}
{"name": "yiconghong/recurrent-vln-bert", "full_name": "YicongHong/Recurrent-VLN-BERT", "topics": ["vision-and-language-navigation", "cvpr2021", "cvpr-oral", "transformer", "bert", "pre-trained-model", "vision-and-language"], "description": "Code of the CVPR 2021 Oral paper: A Recurrent Vision-and-Language BERT for Navigation"}
{"name": "lednik7/clip-onnx", "full_name": "Lednik7/CLIP-ONNX", "topics": ["clip", "onnx", "onnxruntime", "onnxruntime-gpu", "python", "torch", "pytorch", "nlp", "computer-vision"], "description": "It is a simple library to speed up CLIP inference up to 3x (K80 GPU)"}
{"name": "galgreshler/catch-a-waveform", "full_name": "galgreshler/Catch-A-Waveform", "topics": ["audio-generation", "single-example", "raw-waveforms", "gan", "bandwidth-extension", "audio-super-resolution", "audio-inpainting", "audio-denoising", "music-generation", "speech-synthesis"], "description": "Official pytorch implementation of the paper: \"Catch-A-Waveform: Learning to Generate Audio from a Single Short Example\" (NeurIPS 2021)"}
{"name": "owkin/flamby", "full_name": "owkin/FLamby", "topics": ["dataset", "deep-learning", "differential-privacy", "federated-learning", "healthcare", "machine-learning", "python"], "description": "Cross-silo Federated Learning playground in Python. Discover 7 real-world federated datasets to test your new FL strategies and try to beat the leaderboard.  "}
{"name": "awslabs/speech-representations", "full_name": "awslabs/speech-representations", "topics": ["deep-learning", "speech-recognition", "nlp"], "description": "Code for DeCoAR (ICASSP 2020) and BERTphone (Odyssey 2020)"}
{"name": "sinicagroup/class-agnostic-few-shot-object-counting", "full_name": "SinicaGroup/Class-agnostic-Few-shot-Object-Counting", "topics": ["class-agnostic-counting", "cocodataset", "pytorch", "computer-vision", "deep-learning"], "description": "pytorch implementation of a WACV 2021 Paper \"Class-agnostic Few-shot-Object-Counting\""}
{"name": "autonlab/weasel", "full_name": "autonlab/weasel", "topics": ["machine-learning", "deep-learning", "weak-supervision", "end-to-end-learning", "pytorch-lightning", "multi-source-weak-supervision", "weakly-supervised-learning"], "description": "Weakly Supervised End-to-End Learning (NeurIPS 2021)"}
{"name": "z-zheng/changestar", "full_name": "Z-Zheng/ChangeStar", "topics": ["change-detection", "remote-sensing", "computer-vision", "deep-learning", "segmentation"], "description": "Change is Everywhere: Single-Temporal Supervised Object Change Detection in Remote Sensing Imagery (ICCV 2021) https://arxiv.org/abs/2108.07002"}
{"name": "johngettings/lihq", "full_name": "johnGettings/LIHQ", "topics": ["artificial-intelligence", "avatar", "avatar-generator", "deep-learning", "text-to-speech", "video"], "description": "Long-Inference, High Quality Synthetic Speaker"}
{"name": "w86763777/pytorch-ddpm", "full_name": "w86763777/pytorch-ddpm", "topics": ["pytorch", "ddpm", "reproducible"], "description": "Unofficial PyTorch implementation of Denoising Diffusion Probabilistic Models"}
{"name": "manimml/manimml", "full_name": "helblazer811/ManimML", "topics": ["machine-learning", "neural-network", "visualization", "manim", "3blue1brown"], "description": "ManimML is a project focused on providing animations and visualizations of common machine learning concepts with the Manim Community Library."}
{"name": "hongsukchoi/3dcrowdnet_release", "full_name": "hongsukchoi/3DCrowdNet_RELEASE", "topics": ["crowded-scenes", "pose-estimation", "3d-human-mesh", "3d-human-shape-and-pose-estimation", "cvpr2022", "monocular-images"], "description": "Official Pytorch implementation of \"Learning to Estimate Robust 3D Human Mesh from In-the-Wild Crowded Scenes\", CVPR 2022"}
{"name": "codeslake/color_transfer_histogram_analogy", "full_name": "codeslake/Color_Transfer_Histogram_Analogy", "topics": ["color-transfer", "histogram-analogy", "deep-learning", "pytorch"], "description": "[CGI 2020] Official PyTorch Implementation for \"Deep Color Transfer using Histogram Analogy\""}
{"name": "lucidrains/pixel-level-contrastive-learning", "full_name": "lucidrains/pixel-level-contrastive-learning", "topics": ["artificial-intelligence", "deep-learning", "self-supervised-learning", "contrastive-learning"], "description": "Implementation of Pixel-level Contrastive Learning, proposed in the paper \"Propagate Yourself\", in Pytorch"}
{"name": "jeffwang987/mvster", "full_name": "JeffWang987/MVSTER", "topics": ["depth-estimation", "multi-view-stereo", "transformer", "eccv2022"], "description": "[ECCV 2022] MVSTER: Epipolar Transformer for Efficient Multi-View Stereo"}
{"name": "zwx8981/unique", "full_name": "zwx8981/UNIQUE", "topics": ["image-quality-assessment", "deep-neural-networks", "blind-image-quality-assessment", "learning-to-rank", "pytorch", "matlab"], "description": "The repository for 'Uncertainty-aware blind image quality assessment in the laboratory and wild' and 'Learning to blindly assess image quality in the laboratory and wild'"}
{"name": "zhangxuying1004/rstnet", "full_name": "zhangxuying1004/RSTNet", "topics": ["transformer", "image-captioning", "multimodal", "python", "pytorch", "cvpr2021"], "description": "Official Code for 'RSTNet: Captioning with Adaptive Attention on Visual and Non-Visual Words' (CVPR 2021)"}
{"name": "luyug/condenser", "full_name": "luyug/Condenser", "topics": ["dense-retrieval", "bert", "transformer", "pytorch"], "description": "EMNLP 2021 - Pre-training architectures for dense retrieval "}
{"name": "danielzuegner/code-transformer", "full_name": "danielzuegner/code-transformer", "topics": ["deep-learning", "machine-learning", "ml4code", "transformers", "iclr2021"], "description": "Implementation of the paper \"Language-agnostic representation learning of source code from structure and context\". "}
{"name": "kunheek/style-aware-discriminator", "full_name": "kunheek/style-aware-discriminator", "topics": ["cvpr2022", "deep-learning", "pytorch", "unsupervised-learning", "image-to-image-translation", "image-translation"], "description": "CVPR 2022 - Official PyTorch implementation of \"A Style-Aware Discriminator for Controllable Image Translation\""}
{"name": "danan0755/bert_classifier", "full_name": "danan0755/Bert_Classifier", "topics": [], "description": "bert\u6587\u672c\u5206\u7c7b\uff0cner, albert\uff0ckeras_bert\uff0cbert4keras\uff0ckashgari\uff0cfastbert\uff0cflask + uwsgi + keras\u90e8\u7f72\u6a21\u578b\uff0c\u65f6\u95f4\u5b9e\u4f53\u8bc6\u522b\uff0ctfidf\u5173\u952e\u8bcd\u62bd\u53d6\uff0ctfidf\u6587\u672c\u76f8\u4f3c\u5ea6\uff0c\u7528\u6237\u60c5\u611f\u5206\u6790"}
{"name": "mcg-nju/adamixer", "full_name": "MCG-NJU/AdaMixer", "topics": ["object-detection", "detr", "cvpr", "cvpr2022", "transformer", "mlp-mixer"], "description": "[CVPR 2022 Oral] AdaMixer: A Fast-Converging Query-Based Object Detector"}
{"name": "kunnnnethan/r-yolov4", "full_name": "kunnnnethan/R-YOLOv4", "topics": ["yolov4", "pytorch", "oriented-object-detection"], "description": "This is a PyTorch-based R-YOLOv4 implementation which combines YOLOv4 model and loss function from R3Det for arbitrary oriented object detection."}
{"name": "prakhar21/textaugmentation-gpt2", "full_name": "prakhar21/TextAugmentation-GPT2", "topics": ["gpt-2", "nlp-machine-learning", "transformer-architecture", "text-augmentation", "natural-language-processing", "natural-language-generation", "textclassification"], "description": "Fine-tuned pre-trained GPT2 for custom topic specific text generation. Such system can be used for Text Augmentation."}
{"name": "donglee-afar/logdeep", "full_name": "donglee-afar/logdeep", "topics": ["log-analysis", "anomaly-detection", "aiops", "deeplog", "log-anomaly", "pytorch", "sequence-prediction", "failure-detection"], "description": "log anomaly detection toolkit including DeepLog"}
{"name": "cliport/cliport", "full_name": "cliport/cliport", "topics": ["clip", "robotics", "vision", "deep-learning", "natural-language-processing", "grounding", "vision-language", "manipulation", "pytorch", "rearrangement", "computer-vision"], "description": "CLIPort: What and Where Pathways for Robotic Manipulation"}
{"name": "mahmoodlab/toad", "full_name": "mahmoodlab/TOAD", "topics": ["histology", "pathology", "wsi-images", "histopathology", "cancer-imaging-research", "cancer-research", "cancer-detection", "mahmoodlab", "deep", "deep-learning", "bioimage-analysis", "bioimage-informatics", "toad", "unknown-primary", "cup"], "description": "AI-based pathology predicts origins for cancers of unknown primary - Nature"}
{"name": "zhangbaijin/cb-memorynet", "full_name": "zhangbaijin/CB-MemoryNet", "topics": ["shadow-removal", "cloud-removal", "image-restoration", "pytorch"], "description": "Code for paper: CB-MemoryNet:Contrastive balance learning memory net for image restoration(cloud,rain,shadow removal)) "}
{"name": "yistlin/dvector", "full_name": "yistLin/dvector", "topics": ["speaker-embedding", "ge2e", "pytorch", "dvector", "speaker-verification", "speaker-encoder", "torchscript"], "description": "Speaker embedding (d-vector) trained with GE2E loss"}
{"name": "hoya012/carrier-of-tricks-for-classification-pytorch", "full_name": "hoya012/carrier-of-tricks-for-classification-pytorch", "topics": ["deep-learning", "deep-neural-networks", "classification-pytorch", "classification", "pytorch", "pytorch-tutorial", "pytorch-cnn"], "description": "carrier of tricks for image classification tutorials using pytorch."}
{"name": "szymonmaszke/torchlambda", "full_name": "szymonmaszke/torchlambda", "topics": ["pytorch", "aws", "aws-lambda", "cpp", "python", "minimalistic", "lightweight", "cmake", "docker", "deep-learning", "machine-learning", "deployment", "production", "yaml", "cli", "aws-cli", "lambda", "torchscript", "libtorch", "performance"], "description": "Lightweight tool to deploy PyTorch models to AWS Lambda"}
{"name": "ssisyphustao/ssd-knowledge-distillation", "full_name": "SsisyphusTao/Object-Detection-Knowledge-Distillation", "topics": ["pytorch", "knowledge-distillation", "ssd", "object-detection", "deep-learning", "yolov5"], "description": "An Object Detection Knowledge Distillation framework powered by pytorch, now having SSD and yolov5."}
{"name": "hkchengrex/mask-propagation", "full_name": "hkchengrex/Mask-Propagation", "topics": ["computer-vision", "deep-learning", "pytorch", "segmentation", "video-segmentation", "video-object-segmentation", "cvpr2021"], "description": "[CVPR 2021] MiVOS - Mask Propagation module. Reproduced STM (and better) with training code :star2:. Semi-supervised video object segmentation evaluation."}
{"name": "hasnainraz/fast-aginggan", "full_name": "HasnainRaz/Fast-AgingGAN", "topics": ["gan", "generative-adversarial-network", "face-aging", "cycle-gan", "pytorch", "pytorch-lightning", "neural-network", "tensorboard", "cnn", "realtime-face-aging", "faceapp"], "description": "A deep learning model to age faces in the wild, currently runs at 60+ fps on GPUs"}
{"name": "cardiffnlp/tweetnlp", "full_name": "cardiffnlp/tweetnlp", "topics": ["computational-social-science", "language-model", "natural-language-processing", "python", "sentiment-analysis", "sns", "twitter"], "description": "TweetNLP for all the NLP enthusiasts working on Twitter! The Python library tweetnlp provides a collection of useful tools to analyze/understand tweets such as sentiment analysis, emoji prediction, and named entity recognition, powered by state-of-the-art language models specialised on Twitter."}
{"name": "samuelbroughton/stargan-voice-conversion-2", "full_name": "SamuelBroughton/StarGAN-Voice-Conversion-2", "topics": ["pytorch", "voice-conversion", "stargan-vc2", "stagan-vc", "speech", "speech-synthesis"], "description": "A pytorch implementation of StarGAN-VC2"}
{"name": "tjqansthd/lapdepth-release", "full_name": "tjqansthd/LapDepth-release", "topics": ["deep-learning", "computer-vision", "image-processing"], "description": "Monocular Depth Estimation Using Laplacian Pyramid-Based Depth Residuals"}
{"name": "chosj95/mimo-unet", "full_name": "chosj95/MIMO-UNet", "topics": ["pytorch", "deep-learning"], "description": "MIMO-UNet - Official Pytorch Implementation"}
{"name": "microsoft/hi-ml", "full_name": "microsoft/hi-ml", "topics": ["healthcare", "health", "ai", "machine-learning", "ml", "mlops", "azure", "azureml", "deep-learning", "python"], "description": "HI-ML toolbox for deep learning for medical imaging and Azure integration"}
{"name": "bm-k/kosentencebert-skt", "full_name": "BM-K/KoSentenceBERT-SKT", "topics": ["sentence-bert", "sentence-similarity", "natural-language-processing", "korean-sentence-bert"], "description": "Sentence Embeddings using Siamese SKT KoBERT-Networks"}
{"name": "christophreich1996/involution", "full_name": "ChristophReich1996/Involution", "topics": ["involution", "deep-learning", "computer-vision", "machine-learning", "2d-involution", "visual-recognition", "pytorch", "3d-involution", "cvpr2021"], "description": "PyTorch reimplementation of the paper \"Involution: Inverting the Inherence of Convolution for Visual Recognition\" (2D and 3D Involution) [CVPR 2021]."}
{"name": "phamquiluan/publaynet", "full_name": "phamquiluan/PubLayNet", "topics": ["publaynet", "pytorch", "mask-rcnn", "pretrained-models", "object-detection", "document-layout-analysis", "paragraph-detection", "table-detection", "figure-detection"], "description": "ICDAR 2019: MaskRCNN on PubLayNet datasets. Paragraph detection, table detection, figure detection,..."}
{"name": "tencent/tencentpretrain", "full_name": "Tencent/TencentPretrain", "topics": ["albert", "bart", "bert", "chinese", "classification", "clue", "elmo", "fine-tuning", "gpt", "gpt-2", "model-zoo", "natural-language-processing", "ner", "pegasus", "pre-training", "pytorch", "roberta", "t5", "unilm", "xlm-roberta"], "description": "Tencent Pre-training framework in PyTorch & Pre-trained Model Zoo "}
{"name": "xashru/punctuation-restoration", "full_name": "xashru/punctuation-restoration", "topics": ["punctuation-restoration", "transformer-models", "pytorch", "deep-learning", "bangla", "bert", "punctuation-marks"], "description": "Punctuation Restoration using Transformer Models for High-and Low-Resource Languages"}
{"name": "miaoshuyu/object-detection-usages", "full_name": "miaoshuyu/object-detection-usages", "topics": [], "description": "The brief implementation and using examples of object detection usages like, IoU, NMS, soft-NMS, SmoothL1\u3001IoU loss\u3001GIoU loss\u3001 DIoU loss\u3001CIoU loss, cross-entropy\u3001focal-loss\u3001GHM, AP/MAP and so on by Pytorch."}
{"name": "gordicaleksa/pytorch-neural-style-transfer", "full_name": "gordicaleksa/pytorch-neural-style-transfer", "topics": ["neural-style-transfer", "machine-learning", "deep-learning", "python", "pytorch", "non-photorealistic-rendering", "neural-style-transfer-pytorch", "neural-style-transfer-tutorial", "deep-learning-tutorial", "style-transfer"], "description": "Reconstruction of the original paper on neural style transfer (Gatys et al.). I've additionally included reconstruction scripts which allow you to reconstruct only the content or the style of the image - for better understanding of how NST works. "}
{"name": "cosmoquester/2021-dialogue-summary-competition", "full_name": "cosmoquester/2021-dialogue-summary-competition", "topics": ["nlp", "summarization", "pytorch-lightning", "huggingface-transformers", "dialogue"], "description": "[2021 \ud6c8\ubbfc\uc815\uc74c \ud55c\uad6d\uc5b4 \uc74c\uc131\u2022\uc790\uc5f0\uc5b4 \uc778\uacf5\uc9c0\ub2a5 \uacbd\uc9c4\ub300\ud68c] \ub300\ud654\uc694\uc57d \ubd80\ubb38 \uc54c\ub77c\uafcd\ub2ec\ub77c\uafcd \ud300\uc758 \ub300\ud654\uc694\uc57d \ud559\uc2b5 \ubc0f \ucd94\ub860 \ucf54\ub4dc\ub97c \uacf5\uc720\ud558\uae30 \uc704\ud55c \ub808\ud3ec\uc785\ub2c8\ub2e4."}
{"name": "pilhyeon/wtal-uncertainty-modeling", "full_name": "Pilhyeon/WTAL-Uncertainty-Modeling", "topics": ["temporal-action-localization", "weakly-supervised-learning", "background-modeling", "deep-learning", "pytorch", "uncertainty"], "description": "Official Pytorch Implementation of 'Weakly-supervised Temporal Action Localization by Uncertainty Modeling' (AAAI-21)"}
{"name": "xlliu7/tadtr", "full_name": "xlliu7/TadTR", "topics": ["transformer", "temporal-action-localization", "temporal-action-detection", "action-recognition", "pytorch"], "description": "[TIP 2022] End-to-end Temporal Action Detection with Transformer"}
{"name": "xv44586/toolkit4nlp", "full_name": "xv44586/toolkit4nlp", "topics": ["keras", "bert", "nlp"], "description": "transformers implement (architecture, task example, serving and more)"}
{"name": "tnwei/vqgan-clip-app", "full_name": "tnwei/vqgan-clip-app", "topics": ["vqgan-clip", "streamlit", "image-generation", "generative-art", "clip", "guided-diffusion", "deep-learning", "text2image"], "description": "Local image generation using VQGAN-CLIP or CLIP guided diffusion"}
{"name": "reiniscimurs/drl-robot-navigation", "full_name": "reiniscimurs/DRL-robot-navigation", "topics": ["deep-reinforcement-learning", "deep-learning", "robot-navigation", "td3", "ros", "gazebo", "obstacle-avoidance", "obstacle-avoidance-robot", "reinforcement-learning"], "description": "Deep Reinforcement Learning for mobile robot navigation in ROS Gazebo simulator. Using Twin Delayed Deep Deterministic Policy Gradient (TD3) neural network, a robot learns to navigate to a random goal point in a simulated environment while avoiding obstacles."}
{"name": "kb-bank-ai/kb-albert-ko", "full_name": "KB-AI-Research/KB-ALBERT", "topics": ["albert", "korean-nlp", "pytorch", "transformers", "nlp", "language-model", "financial-nlp"], "description": "KB\uad6d\ubbfc\uc740\ud589\uc5d0\uc11c \uc81c\uacf5\ud558\ub294 \uacbd\uc81c/\uae08\uc735 \ub3c4\uba54\uc778\uc5d0 \ud2b9\ud654\ub41c \ud55c\uad6d\uc5b4 ALBERT \ubaa8\ub378 "}
{"name": "ericguo5513/action-to-motion", "full_name": "EricGuo5513/action-to-motion", "topics": ["deep-learning", "human-motion-analysis", "motion-generation", "motion-synthesis"], "description": "Official implementations for \"Action2Motion: Conditioned Generation of 3D Human Motions (ACM MultiMedia 2020)\""}
{"name": "tetratrio/stylegan2_pytorch", "full_name": "adriansahlman/stylegan2_pytorch", "topics": [], "description": "A Pytorch implementation of StyleGAN2"}
{"name": "hemingkx/wordseg", "full_name": "hemingkx/WordSeg", "topics": ["bert", "pytorch", "roberta", "chinese-word-segmentation", "bilstm-crf", "bert-crf"], "description": "A PyTorch implementation of a BiLSTM \\ BERT \\ Roberta (+ BiLSTM + CRF) model for Chinese Word Segmentation (\u4e2d\u6587\u5206\u8bcd) ."}
{"name": "heiheiyoyo/uie_pytorch", "full_name": "heiheiyoyo/uie_pytorch", "topics": ["information-extraction", "pytorch", "transformers", "uie"], "description": "PaddleNLP UIE\u6a21\u578b\u7684PyTorch\u7248\u5b9e\u73b0"}
{"name": "borchero/pycave", "full_name": "borchero/pycave", "topics": ["machine-learning", "gaussian-mixture-models", "markov-model", "pytorch", "kmeans", "pytorch-lightning"], "description": "Traditional Machine Learning Models for Large-Scale Datasets in PyTorch."}
{"name": "taishi-i/toiro", "full_name": "taishi-i/toiro", "topics": ["nlp", "natural-language-processing", "japanese", "bert", "word-segmentation", "nlp-library"], "description": "A comparison tool of Japanese tokenizers"}
{"name": "thuiar/textoir", "full_name": "thuiar/TEXTOIR", "topics": ["open-classification", "natural-language-processing", "dialogue-systems", "intent-recognition", "clustering", "deep-neural-networks", "bert", "intent-discovery", "artificial-intelligence", "acl2021"], "description": "TEXTOIR is a flexible toolkit for open intent detection and discovery. (ACL 2021) "}
{"name": "cloneofsimo/mindiffusion", "full_name": "cloneofsimo/minDiffusion", "topics": ["diffusion", "pytorch"], "description": "Self-contained, minimalistic implementation of diffusion models with Pytorch."}
{"name": "photon-ai-research/neuralsolvers", "full_name": "Photon-AI-Research/NeuralSolvers", "topics": ["pinn", "horovod", "partial-differential-equations", "neural-network", "computational-physics", "pytorch"], "description": "Neural network based solvers for partial differential equations and inverse problems :milky_way:. Implementation of physics-informed neural networks in pytorch. "}
{"name": "jgkwak95/surf-gan", "full_name": "jgkwak95/SURF-GAN", "topics": ["3d-aware-image-synthesis", "stylegan2", "3d", "generative-adversarial-network", "neural-rendering", "eccv2022", "toonify", "image-to-image-translation"], "description": "Official Pytorch implementation of \"Injecting 3D Perception of Controllable NeRF-GAN into StyleGAN for Editable Portrait Image Synthesis\", ECCV 2022"}
{"name": "pmixer/sasrec.pytorch", "full_name": "pmixer/SASRec.pytorch", "topics": ["pytorch", "recommender-system", "sasrec", "sequential-models"], "description": "PyTorch(1.6+) implementation of https://github.com/kang205/SASRec"}
{"name": "mx-mark/videotransformer-pytorch", "full_name": "mx-mark/VideoTransformer-pytorch", "topics": ["pytorch-implmention", "pytorch-lightning", "deeplearning", "action-recognition", "transformer", "pretrained-model", "timesformer", "vivit", "maskfeat"], "description": "PyTorch implementation of a collections of scalable Video Transformer Benchmarks."}
{"name": "lucidrains/long-short-transformer", "full_name": "lucidrains/long-short-transformer", "topics": ["artificial-intelligence", "deep-learning", "transformers", "attention-mechanism"], "description": "Implementation of Long-Short Transformer, combining local and global inductive biases for attention over long sequences, in Pytorch"}
{"name": "lucidrains/transganformer", "full_name": "lucidrains/transganformer", "topics": ["artificial-intelligence", "deep-learning", "attention-mechanism", "transformers", "generative-adversarial-networks"], "description": "Implementation of TransGanFormer, an all-attention GAN that combines the finding from the recent GanFormer and TransGan paper"}
{"name": "dongkwonjin/eigenlanes", "full_name": "dongkwonjin/Eigenlanes", "topics": ["lane", "lane-detection", "svd", "pca", "roadlane", "deep-learning", "pytorch", "descroptor"], "description": "Official code for \"Eigenlanes: Data-Driven Lane Descriptors for Structurally Diverse Lanes\", CVPR2022"}
{"name": "dingkeyan93/dists", "full_name": "dingkeyan93/DISTS", "topics": ["dists", "iqa", "texture", "structure", "similarity", "optimization", "loss-functions", "pytorch", "quality-metrics", "image-quality-assessment"], "description": "IQA: Deep Image Structure and Texture Similarity Metric"}
{"name": "saic-mdal/deep-landscape", "full_name": "advimman/deep-landscape", "topics": ["deep-learning", "gan", "generative-adversarial-network", "video-generation", "reenactment"], "description": "Official repository for the paper \"DeepLandscape: Adversarial Modeling of Landscape Videos\" (ECCV2020)"}
{"name": "alanli1997/slim-neck-by-gsconv", "full_name": "AlanLi1997/slim-neck-by-gsconv", "topics": ["lightweight-framework", "objectdetection", "pytorch", "yolo", "yolov4", "yolov5", "gsconv"], "description": "Pytorch implementation of the 'Slim-neck by GSConv: A better design paradigm of detector architectures for autonomous vehicles'"}
{"name": "haofeixu/flow1d", "full_name": "haofeixu/flow1d", "topics": ["attention", "correlation", "high-resolution", "iccv2021", "optical-flow"], "description": "[ICCV 2021 Oral] High-Resolution Optical Flow from 1D Attention and Correlation"}
{"name": "globalmaksimum/sadedegel", "full_name": "GlobalMaksimum/sadedegel", "topics": ["natural-language-processing", "data-science", "machine-learning", "python", "nlp", "artificial-intelligence", "ai", "bert", "deep-learning", "neural-network", "neural-networks", "acikhack2", "news-summarizer", "binder", "heroku", "corpus", "embeddings"], "description": "A General Purpose NLP library for Turkish"}
{"name": "uvipen/ssd-pytorch", "full_name": "uvipen/SSD-pytorch", "topics": ["ssd", "ssdlite", "deep-learning", "deep-neural-networks", "neural-networks", "pytorch", "computer-vision", "object-detection", "deeplearning", "detection", "detector"], "description": "SSD: Single Shot MultiBox Detector pytorch implementation focusing on simplicity"}
{"name": "progamergov/neural-dream", "full_name": "ProGamerGov/neural-dream", "topics": ["deepdream", "pytorch", "visualization", "computer-vision", "resnet", "googlenet", "inception", "vgg", "nin", "pytorch-deepdream", "deep-dream", "neural-dream", "tiling"], "description": "PyTorch implementation of DeepDream algorithm"}
{"name": "chenrocks/distill-bert-textgen", "full_name": "ChenRocks/Distill-BERT-Textgen", "topics": ["natural-language-processing", "machine-translation", "knowledge-distillation", "bert-model"], "description": "Research code for ACL 2020 paper: \"Distilling Knowledge Learned in BERT for Text Generation\"."}
{"name": "snunlp/kr-bert", "full_name": "snunlp/KR-BERT", "topics": ["nlp"], "description": "KoRean based BERT pre-trained models (KR-BERT) for Tensorflow and PyTorch"}
{"name": "miemie2013/pytorch-ppyolo", "full_name": "miemie2013/Pytorch-PPYOLO", "topics": ["yolo", "ppyolo", "object-detection", "yolov3", "yolov4"], "description": "ppyolo in pytorch. 44.8% box mAP."}
{"name": "lucidrains/glom-pytorch", "full_name": "lucidrains/glom-pytorch", "topics": ["artificial-intelligence", "deep-learning", "geoffrey-hinton"], "description": "An attempt at the implementation of Glom, Geoffrey Hinton's new idea that integrates concepts from neural fields, top-down-bottom-up processing, and attention (consensus between columns), for emergent part-whole heirarchies from data"}
{"name": "clovaai/rebias", "full_name": "clovaai/rebias", "topics": ["machine-learning", "deep-learning", "rebias", "bias-generalisation", "bias-generalization", "pytorch", "icml2020", "icml-2020", "icml"], "description": "Official Pytorch implementation of ReBias (Learning De-biased Representations with Biased Representations), ICML 2020"}
{"name": "mindslab-ai/univnet", "full_name": "mindslab-ai/univnet", "topics": ["text-to-speech", "vocoder", "gan", "deep-learning", "pytorch", "tts", "speech-synthesis"], "description": "Unofficial PyTorch Implementation of UnivNet Vocoder (https://arxiv.org/abs/2106.07889)"}
{"name": "mohitlamba94/restoring-extremely-dark-images-in-real-time", "full_name": "MohitLamba94/Restoring-Extremely-Dark-Images-In-Real-Time", "topics": ["deep-learning", "pytorch", "computer-vision", "image-processing", "low-light", "low-light-image-enhancement", "cvpr2021", "denoising", "low-latency", "fast", "real-time", "low-light-enhance", "cvpr", "paper", "pytorch-implementation", "python", "ieee", "machine-learning", "artificial-intelligence", "neural-network"], "description": "The project is the official implementation of our CVPR 2021 paper, \"Restoring Extremely Dark Images in Real Time\""}
{"name": "ardaduz/deep-video-mvs", "full_name": "ardaduz/deep-video-mvs", "topics": ["computer-vision", "deep-learning", "depth-prediction", "multi-view-stereo", "cost-volume", "depth-estimation", "plane-sweep"], "description": "Code for \"DeepVideoMVS: Multi-View Stereo on Video with Recurrent Spatio-Temporal Fusion\" (CVPR 2021)"}
{"name": "lucidrains/equiformer-pytorch", "full_name": "lucidrains/equiformer-pytorch", "topics": ["artificial-intelligence", "deep-learning", "equivariance", "transformers", "attention-mechanisms", "protein-folding", "molecules"], "description": "Implementation of the Equiformer, SE3/E3 equivariant attention network that reaches new SOTA, and adopted for use by EquiFold for protein folding"}
{"name": "lyhue1991/torchkeras", "full_name": "lyhue1991/torchkeras", "topics": [], "description": "Pytorch\u2764\ufe0f  Keras \ud83d\ude0b\ud83d\ude0b"}
{"name": "knodle/knodle", "full_name": "knodle/knodle", "topics": ["relation-extraction", "classification", "python", "machine-learning", "knodle", "weak-supervision", "natural-language-procressing", "ai", "pytorch", "snorkel", "denoising-methods", "weakly-supervised-learning"], "description": "A PyTorch-based open-source framework that provides methods for improving the weakly annotated data and allows researchers to efficiently develop and compare their own methods. "}
{"name": "foreverps/oppo_6g_data_generation", "full_name": "ForeverPs/OPPO_6G_Data_Generation", "topics": ["deep-learning", "generative-model"], "description": "Rank 3 : Source code for OPPO 6G Data Generation Challenge"}
{"name": "divelab/good", "full_name": "divelab/GOOD", "topics": ["deep-learning", "graph-neural-networks", "out-of-distribution-generalization", "pytorch", "graph-ood", "distribution-shift", "invariant-learning", "pytorch-geometric"], "description": "GOOD: A Graph Out-of-Distribution Benchmark [NeurIPS 2022 Datasets and Benchmarks]"}
{"name": "ecnuycxie/dg-font", "full_name": "ecnuycxie/DG-Font", "topics": [], "description": "The pytorch implementation of  DG-Font: Deformable Generative Networks for Unsupervised Font Generation"}
{"name": "ygzwqzd/lamda-ssl", "full_name": "YGZWQZD/LAMDA-SSL", "topics": ["machine-learning", "semi-supervised-learning", "deep-learning", "pytorch", "scikit-learn", "toolkit", "python", "computer-vision", "natural-language-processing", "generative-model", "automl", "gnn", "graph", "svm", "self-supervised-learning", "support-vector-machine", "tabular-data", "inductive-learning", "transductive-learning", "neural-network"], "description": "30 Semi-Supervised Learning Algorithms"}
{"name": "richermans/gpv", "full_name": "RicherMans/GPV", "topics": ["voice-activity-detection", "speech-activity-detection", "sound-activity", "noise-robust-asr", "machine-learning", "pytorch"], "description": "Repository for our Interspeech2020 general-purpose voice activity detection (GPVAD) paper"}
{"name": "albumentations-team/autoalbument", "full_name": "albumentations-team/autoalbument", "topics": ["automl", "augmentation", "image-augmentation", "deep-learning", "pytorch", "automated-machine-learning", "machine-learning", "computer-vision"], "description": "AutoML for image augmentation. AutoAlbument uses the Faster AutoAugment algorithm to find optimal augmentation policies. Documentation - https://albumentations.ai/docs/autoalbument/"}
{"name": "kmeng01/rome", "full_name": "kmeng01/rome", "topics": ["transformers", "gpt", "interpretability", "pytorch"], "description": "Locating and editing factual associations in GPT (NeurIPS 2022)"}
{"name": "zhangyuanhan-ai/noah", "full_name": "ZhangYuanhan-AI/NOAH", "topics": ["prompt-tuning", "transfer-learning", "domain-generalization", "visual-prompting", "pre-trained-model", "pytorch", "deep-learning"], "description": "Searching prompt modules for parameter-efficient transfer learning."}
{"name": "layerai/sdk", "full_name": "layerai-archive/sdk", "topics": ["machine-learning", "collaboration", "data-science", "data-versioning", "deep-learning", "experiment-tracking", "hyperparameter-optimization", "hyperparameter-tuning", "keras", "mlops", "model-versioning", "python", "pytorch", "reinforcement-learning", "sklearn", "tensorflow"], "description": "Metadata store for Production ML"}
{"name": "pycroscopy/atomai", "full_name": "pycroscopy/atomai", "topics": ["microscopy", "materials", "machine-learning", "materials-science", "deep-learning", "multivariate-analysis", "fully-convolutional-networks", "variational-autoencoders", "ensemble-learning", "google-colaboratory", "jupyter-notebook", "pytorch", "semantic-segmentation", "electron-microscopy", "scanning-probe-microscopy", "deep-kernel-learning"], "description": "Deep and Machine Learning for Microscopy"}
{"name": "arthur-qiu/stylefacev", "full_name": "arthur-qiu/StyleFaceV", "topics": ["gan", "generative-adversarial-network"], "description": "Code for StyleFaceV"}
{"name": "ncarraz/esrganplus", "full_name": "ncarraz/ESRGANplus", "topics": ["super-resolution", "deep-learning", "generative-adversarial-network", "convolutional-neural-network"], "description": "ICASSP 2020 - ESRGAN+ : Further Improving Enhanced Super-Resolution Generative Adversarial Network - ICPR 2020 - Tarsier: Evolving Noise Injection in Super-Resolution GANs"}
{"name": "wasiahmad/plbart", "full_name": "wasiahmad/PLBART", "topics": ["code-intelligence", "language-model", "nlp", "programming-language", "representation-learning"], "description": "Official code of our work, Unified Pre-training for Program Understanding and Generation [NAACL 2021]."}
{"name": "whu-wxy/non-local-u-nets-2d-block", "full_name": "Whu-wxy/Non-local-U-Nets-2D-block", "topics": [], "description": "Inplement 2D global aggregation block of Non-local-U-Nets. Written in pytorch."}
{"name": "thunlp/re-context-or-names", "full_name": "thunlp/RE-Context-or-Names", "topics": ["relation-extraction", "pytorch", "bert", "contrastive-learning", "pretrain"], "description": "Bert-based models(BERT, MTB, CP) for relation extraction. "}
{"name": "tjiiv-cprg/monorun", "full_name": "tjiiv-cprg/MonoRUn", "topics": ["pytorch", "3d-object-detection", "cvpr", "monocular", "uncertainty", "detection", "reconstruction"], "description": "[CVPR'21] MonoRUn: Monocular 3D Object Detection by Reconstruction and Uncertainty Propagation"}
{"name": "jina-ai/jina-hub", "full_name": "jina-ai/jina-hub", "topics": ["jina", "neural-search", "jina-hub", "containerization", "marketplace", "neural-network", "deep-learning", "machine-learning", "cloud-native", "microservice"], "description": "An open-registry for hosting Jina executors via container images"}
{"name": "pnnl/neuromancer", "full_name": "pnnl/neuromancer", "topics": ["constrained-optimization", "control-systems", "deep-learning", "differentiable-programming", "dynamical-systems", "pytorch", "differentiable-optimization", "nonlinear-dynamics", "nonlinear-optimization", "differentiable-control", "physics-informed-ml"], "description": "Pytorch-based framework for solving parametric constrained optimization problems, physics-informed system identification, and parametric model predictive control. "}
{"name": "choyingw/cross-modal-perceptionist", "full_name": "choyingw/Cross-Modal-Perceptionist", "topics": ["3d", "speech-to-face", "3d-models", "pytorch", "3dmm", "biometrics", "cognitive-science", "deep-learning", "machine-learning", "cross-modal-learning", "computer-vision", "speech-synthesis", "speech", "cvpr", "cvpr2022"], "description": "CVPR 2022: Cross-Modal Perceptionist: Can Face Geometry be Gleaned from Voices?"}
{"name": "coloquinte/torchsr", "full_name": "Coloquinte/torchSR", "topics": ["torchvision", "pytorch", "datasets", "superresolution", "edsr", "rdn", "rcan", "vdsr"], "description": "Super Resolution datasets and models in Pytorch"}
{"name": "fmahoudeau/shelfnet-human-pose-estimation", "full_name": "fmahoudeau/ShelfNet-Human-Pose-Estimation", "topics": ["human-pose-estimation", "deep-learning", "ms-coco", "shelfnet", "real-time", "pytorch", "keypoint-detection", "keypoint-localization", "ms-coco-keypoints", "hrnet", "human-pose-tracking"], "description": "Fast and accurate Human Pose Estimation using ShelfNet with PyTorch"}
{"name": "by571/soft-actor-critic-and-extensions", "full_name": "BY571/Soft-Actor-Critic-and-Extensions", "topics": ["reinforcement-learning", "reinforcement-learning-algorithms", "soft-actor-critic", "prioritized-experience-replay", "emphasizing-recent-experience", "sac", "pytorch", "continuous", "actor-critic-algorithm", "munchausen-reinforcement-learning", "munchausen", "parallel-computing", "multi-environment", "d2rl"], "description": "PyTorch implementation of Soft-Actor-Critic and Prioritized Experience Replay (PER) + Emphasizing Recent Experience (ERE) + Munchausen RL + D2RL and parallel Environments. "}
{"name": "w86763777/pytorch-gan-metrics", "full_name": "w86763777/pytorch-gan-metrics", "topics": ["inception-score", "frechet-inception-distance", "pytorch", "fid"], "description": "Pytorch implementation of common GAN metrics"}
{"name": "osai-ai/dokai", "full_name": "osai-ai/dokai", "topics": ["docker", "deep-learning", "python", "pytorch", "ffmpeg", "docker-image", "cuda", "opencv", "video-processing", "tensorrt"], "description": "Collection of Docker images for ML/DL and video processing projects"}
{"name": "megvii-basedetection/autoassign", "full_name": "Megvii-BaseDetection/AutoAssign", "topics": ["object-detection", "coco-dataset", "computer-vision"], "description": "Pytorch implementation of \"AutoAssign: Differentiable Label Assignment for Dense Object Detection\""}
{"name": "cs-gangxu/tmnet", "full_name": "CS-GangXu/TMNet", "topics": ["pytorch", "paper", "super-resolution", "cvpr"], "description": "The official pytorch implemention of the CVPR paper \"Temporal Modulation Network for Controllable Space-Time Video Super-Resolution\"."}
{"name": "bhpfelix/mtlnas", "full_name": "bhpfelix/MTLNAS", "topics": ["neural-architecture-search", "automl", "pytorch", "multitask-learning", "semantic-segmentation", "surface-normals-estimation", "convolutional-neural-networks"], "description": "[CVPR 2020] MTL-NAS: Task-Agnostic Neural Architecture Search towards General-Purpose Multi-Task Learning"}
{"name": "shmsw25/ambigqa", "full_name": "shmsw25/AmbigQA", "topics": ["question-answering", "nlp", "dataset"], "description": "An original implementation of EMNLP 2020, \"AmbigQA: Answering Ambiguous Open-domain Questions\""}
{"name": "nachiket92/pgp", "full_name": "nachiket92/PGP", "topics": ["trajectory-prediction", "pytorch", "autonomous-vehicles", "nuscenes"], "description": "Code for \"Multimodal Trajectory Prediction Conditioned on Lane-Graph Traversals,\" CoRL 2021."}
{"name": "dhruvramani/transformers-rl", "full_name": "dhruvramani/Transformers-RL", "topics": ["stabilizing-transformers-for-rl", "transformers-in-rl", "transformer", "rl", "attention-mechanism"], "description": "An easy PyTorch implementation of \"Stabilizing Transformers for Reinforcement Learning\""}
{"name": "stanleylsx/entity_extractor_by_pointer", "full_name": "StanleyLsx/entity_extractor_by_pointer", "topics": ["pytorch", "bert", "entity-extraction", "binary-tagging", "ner", "globalpointer"], "description": "\u4f7f\u7528torch\u6574\u5408\u4e24\u79cd\u7ecf\u5178\u7684\u6307\u9488NER\u62bd\u53d6\u8303\u5f0f\uff0c\u5206\u522b\u662fSpanBert\u548c\u82cf\u795e\u7684GlobalPointer\uff0c\u7b80\u5355\u52a0\u4e86\u4e9btricks\uff0c\u914d\u7f6e\u540e\u4e00\u952e\u8fd0\u884c"}
{"name": "lucidrains/compressive-transformer-pytorch", "full_name": "lucidrains/compressive-transformer-pytorch", "topics": ["artificial-intelligence", "deep-learning", "transformer", "attention-mechanism"], "description": "Pytorch implementation of Compressive Transformers, from Deepmind"}
{"name": "hou-yz/mvdet", "full_name": "hou-yz/MVDet", "topics": ["pytorch", "multiview", "pedestrian-detection", "dataset", "detection", "detector"], "description": "[ECCV 2020] Codes and MultiviewX dataset for \"Multiview Detection with Feature Perspective Transformation\". "}
{"name": "xuhongzuo/outlier-interpretation", "full_name": "xuhongzuo/outlier-interpretation", "topics": ["anomaly-detection", "deep-learning", "explanability", "outlier-detection", "outlier-aspect-mining", "outlier-interpretation"], "description": "(WWW'21) ATON - an Outlier Interpreation / Outlier explanation method"}
{"name": "eth-siplab/avatarposer", "full_name": "eth-siplab/AvatarPoser", "topics": ["3d-vision", "avatar", "computer-vision", "deep-learning", "human-pose-estimation", "motion-capture", "virtual-reality", "transformer", "full-body-tracking", "augmented-reality", "mixed-reality"], "description": "Official Code for ECCV 2022 paper \"AvatarPoser: Articulated Full-Body Pose Tracking from Sparse Motion Sensing\""}
{"name": "junlinhan/dclgan", "full_name": "JunlinHan/DCLGAN", "topics": ["computer-vision", "pytorch", "generative-adversarial-network", "gans", "image-generation", "computer-graphics", "cyclegan", "image-manipulation"], "description": "Code for Dual Contrastive Learning for Unsupervised Image-to-Image Translation, NTIRE, CVPRW 2021, oral. "}
{"name": "receiling/unire", "full_name": "Receiling/UniRE", "topics": ["natural-language-processing", "information-extraction", "relation-extraction"], "description": "Source code for \"UniRE: A Unified Label Space for Entity Relation Extraction.\", ACL2021. It is based on our NERE toolkit (https://github.com/Receiling/NERE).   "}
{"name": "zjunlp/docunet", "full_name": "zjunlp/DocuNet", "topics": ["document-level-relation-extraction", "semantic-segmentation", "document-level", "pytorch", "pytorch-implementation", "re", "relation-extraction", "docunet", "document", "docred", "information-extraction", "segmentation"], "description": "Code and dataset for the IJCAI 2021 paper \"Document-level Relation Extraction as Semantic Segmentation\"."}
{"name": "stevenygd/nfgp", "full_name": "stevenygd/NFGP", "topics": ["geometry-processing", "machine-learning", "neural-network", "neural-fields"], "description": "Pytorch implementation of NeurIPS 2021 paper: Geometry Processing with Neural Fields."}
{"name": "atosystem/themetransformer", "full_name": "atosystem/ThemeTransformer", "topics": ["music", "music-generation", "music-theme", "deep-learning", "python"], "description": "The official implementation of Theme Transformer. A Theme-based music generation. IEEE TMM"}
{"name": "patrick-kidger/sympytorch", "full_name": "patrick-kidger/sympytorch", "topics": ["pytorch", "sympy"], "description": "Turning SymPy expressions into PyTorch modules."}
{"name": "vicco-group/thingsvision", "full_name": "ViCCo-Group/thingsvision", "topics": ["pytorch", "neural-networks", "computer-vision", "tensorflow", "deep-learning", "representations"], "description": "Python package for extracting and analyzing image representations from state-of-the-art neural networks for computer vision"}
{"name": "atharva-phatak/torchflare", "full_name": "Atharva-Phatak/torchflare", "topics": ["deep-learning", "pytorch", "python", "deep-neural-networks", "image-classification", "infrastructure", "natural-language-processing", "text-classification", "image-processing", "image-segmentation", "kaggle", "pytorch-model", "gans", "generative-adversarial-network", "machine-learning", "self-supervised-learning", "image-classfication"], "description": "TorchFlare is a simple, beginner-friendly, and easy-to-use PyTorch Framework train your models effortlessly."}
{"name": "lonepatient/torchblocks", "full_name": "lonePatient/TorchBlocks", "topics": ["pytorch", "nlp", "text-classification", "triplet-loss", "siamese-network", "text-similarity", "multilabel-classification", "advertising", "bert", "transformers", "relation-classification", "named-entity-recognition"], "description": "A PyTorch-based toolkit for natural language processing"}
{"name": "svjan5/medtype", "full_name": "svjan5/medtype", "topics": ["entity-linking", "bert-as-service", "pytorch", "biomedical", "medical", "state-of-the-art", "deep-learning"], "description": "MedType: Improving Medical Entity Linking with Semantic Type Prediction"}
{"name": "amirhosseinh77/jetsonyolo", "full_name": "amirhosseinh77/JetsonYolo", "topics": ["jetson-nano", "csi-camera", "yolo", "yolov5", "object-detection", "pytorch", "opencv", "opencv-python", "arducam"], "description": "Simple process for camera installation, software and hardware setup, and object detection using Yolov5 and openCV on NVIDIA Jetson Nano."}
{"name": "filby89/spectre", "full_name": "filby89/spectre", "topics": ["3d-face", "3d-face-reconstruction", "3dmm", "face", "face-reconstruction", "flame-model", "python", "pytorch"], "description": "Official Pytorch Implementation of SPECTRE: Visual Speech-Aware Perceptual 3D Facial Expression Reconstruction from Videos"}
{"name": "ofa-sys/ofasys", "full_name": "OFA-Sys/OFASys", "topics": ["audio", "computer-vision", "deep-learning", "motion", "multimodal-learning", "multitask-learning", "nlp", "pretrained-models", "pytorch", "transformers", "vision-and-language"], "description": "OFASys: A Multi-Modal Multi-Task Learning System for Building Generalist Models"}
{"name": "davidzhangyuanhan/noah", "full_name": "ZhangYuanhan-AI/NOAH", "topics": ["prompt-tuning", "transfer-learning", "domain-generalization", "visual-prompting", "pre-trained-model", "pytorch", "deep-learning"], "description": "Searching prompt modules for parameter-efficient transfer learning."}
{"name": "eliahuhorwitz/conffusion", "full_name": "eliahuhorwitz/Conffusion", "topics": ["computer-vision", "conformal-prediction", "image-generation", "image-to-image", "inpainting", "quantile-regression", "super-resolution", "diffusion-models", "generative-model", "deep-learning", "prediction-intervals", "pytorch", "uncertainty-estimation", "uncertainty-quantification", "diffusion"], "description": "Official Implementation for the \"Conffusion: Confidence Intervals for Diffusion Models\" paper."}
{"name": "clovaai/frostnet", "full_name": "clovaai/frostnet", "topics": ["deep-learning", "pytorch", "quantization", "quantization-aware-training", "classification", "object-detection", "semantic-segmentation", "style-transfer", "optimizers", "computer-vision", "post-quantization", "quantization-efficient-network", "network-architecture", "int8-quantization"], "description": "FrostNet: Towards Quantization-Aware Network Architecture Search"}
{"name": "sicara/gpumonitor", "full_name": "sicara/gpumonitor", "topics": ["tensorflow", "pytorch-lightning", "gpu-monitoring"], "description": "TF 2.x and PyTorch Lightning Callbacks for GPU monitoring"}
{"name": "liyingwei/shapetexturedebiasedtraining", "full_name": "LiYingwei/ShapeTextureDebiasedTraining", "topics": ["imagenet", "texture", "shape", "pytorch", "paper"], "description": "Code and models for the paper Shape-Texture Debiased Neural Network Training (ICLR 2021)"}
{"name": "universome/stylegan-v", "full_name": "universome/stylegan-v", "topics": ["video-generation", "stylegan", "generative-adversarial-networks", "gans", "pytorch"], "description": "[CVPR 2022] StyleGAN-V: A Continuous Video Generator with the Price, Image Quality and Perks of StyleGAN2"}
{"name": "wenzhu23333/differential-privacy-based-federated-learning", "full_name": "wenzhu23333/Differential-Privacy-Based-Federated-Learning", "topics": ["federated-learning", "differential-privacy", "privacy", "pytorch", "deep-learning", "laplace", "gaussian"], "description": "Everything you want about DP-Based Federated Learning, including Papers and Code. (Mechanism: Laplace or Gaussian, Dataset: femnist, shakespeare, mnist, cifar-10 and fashion-mnist. )"}
{"name": "google/etils", "full_name": "google/etils", "topics": ["python", "numpy", "tensorflow", "jax", "utils"], "description": "Collection of eclectic utils for python."}
{"name": "yashsmehta/personality-prediction", "full_name": "yashsmehta/personality-prediction", "topics": ["language-model", "personality-predicting", "pytorch", "bert-fine-tuning", "personality-detection"], "description": "Experiments for automated personality detection using Language Models and psycholinguistic features on various famous personality datasets including the Essays dataset (Big-Five)"}
{"name": "object-detection-algorithm/r-cnn", "full_name": "object-detection-algorithm/R-CNN", "topics": ["r-cnn", "alexnet", "svm", "selectivesearch", "numpy", "pytorch", "pascal-voc", "non-maximum-suppression", "bounding-box-regression", "object-detection"], "description": "\u76ee\u6807\u68c0\u6d4b - R-CNN\u7b97\u6cd5\u5b9e\u73b0"}
{"name": "ytongbai/vits-vs-cnns", "full_name": "ytongbai/ViTs-vs-CNNs", "topics": ["transformer", "robustness"], "description": "[NeurIPS 2021]: Are Transformers More Robust Than CNNs? (Pytorch implementation & checkpoints)"}
{"name": "qitianwu/nodeformer", "full_name": "qitianwu/NodeFormer", "topics": ["graph-neural-networks", "graph-structure-learning", "graph-transformer", "node-classification", "pytorch", "image-classification", "large-graph", "neurips-2022", "pytorch-geometric", "relational-learning", "text-classification"], "description": "The official implementation of NeurIPS22 spotlight paper \"NodeFormer: A Scalable Graph Structure Learning Transformer for Node Classification\""}
{"name": "j3soon/tbparse", "full_name": "j3soon/tbparse", "topics": ["tensorboard", "tensorflow", "pytorch", "tensorboardx", "parser", "plot", "python", "reader", "machine-learning"], "description": "Load tensorboard event logs as pandas DataFrames for scientific plotting; Supports both PyTorch and TensorFlow"}
{"name": "ainrichman/peppa-facial-landmark-pytorch", "full_name": "ainrichman/Peppa-Facial-Landmark-PyTorch", "topics": ["face", "landmark", "landmarks", "alignment", "onnx", "mnn", "facial", "pytorch"], "description": "Facial Landmark Detection based on PyTorch"}
{"name": "junlinhan/yoco", "full_name": "JunlinHan/YOCO", "topics": ["computer-vision", "classification", "contrastive-learning", "data-augmentation", "data-augmentation-strategies", "data-augmentations", "rain-removal", "super-resolution", "imagenet", "cifar10", "cifar100", "imagenet-classifier", "object-detection", "instance-segmentation", "icml", "pytorch"], "description": "Code for You Only Cut Once: Boosting Data Augmentation with a Single Cut, ICML 2022."}
{"name": "antocad/focusondepth", "full_name": "antocad/FocusOnDepth", "topics": ["depth-estimation", "pytorch", "semantic-segmentation", "deep-learning", "dense-prediction", "vision-transformers"], "description": "A Monocular depth-estimation for in-the-wild AutoFocus application."}
{"name": "fredzzhang/upt", "full_name": "fredzzhang/upt", "topics": ["human-object-interaction", "transformers", "two-stage-detector", "pytorch"], "description": "Official PyTorch implementation for CVPR2022 paper \"Efficient Two-Stage Detection of Human\u2013Object Interactions with a Novel Unary\u2013Pairwise Transformer\""}
{"name": "ifsheldon/stannum", "full_name": "ifsheldon/stannum", "topics": ["pytorch", "taichi"], "description": "Fusing Taichi into PyTorch"}
{"name": "aimakerspace/peekingduck", "full_name": "aisingapore/PeekingDuck", "topics": ["computer-vision", "deep-learning", "pose-estimation", "object-detection", "object-tracking", "python", "pipeline", "nodes"], "description": "A modular framework built to simplify Computer Vision inference workloads."}
{"name": "declare-lab/dialogue-understanding", "full_name": "declare-lab/dialogue-understanding", "topics": ["dialogue-systems", "dialogue-understanding", "emotion-recognition-in-conversation", "dialogue-act", "conversational-ai", "conversational-agents", "bert-embeddings", "bert", "pretrained-models", "emotion-recognition", "emotion-analysis", "natural-language-processing", "natural-language-understanding", "lstm", "pytorch", "sentiment-analysis", "adversarial-attacks", "explainable-ai", "utterance-level-dialogue", "dialogue"], "description": "This repository contains PyTorch implementation for the baseline models from the paper Utterance-level Dialogue Understanding: An Empirical Study"}
{"name": "maryamboneh/vehicle-detection", "full_name": "MaryamBoneh/Vehicle-Detection", "topics": ["deep-learning", "yolov5", "image-processing", "fine-tuning", "object-detection", "python", "dataset", "car-counting", "vehicle-counting", "yolo"], "description": "Vehicle Detection Using Deep Learning and YOLO Algorithm"}
{"name": "mlrichter/receptive_field_analysis_toolbox", "full_name": "MLRichter/receptive_field_analysis_toolbox", "topics": ["pytorch", "visualization", "deep-learning", "neural-networks", "machine-learning", "neural-architecture-optimization", "neural-architecture-search", "tensorflow", "receptive-field", "receptive-field-analysis", "hacktoberfest"], "description": "A toolbox for receptive field analysis and visualizing neural network architectures"}
{"name": "ethanrosenthal/nannernest", "full_name": "EthanRosenthal/nannernest", "topics": ["machine-learning", "computer-vision", "sandwiches", "deep-learning"], "description": "Optimal peanut butter and banana sandwiches"}
{"name": "denguir/student-teacher-anomaly-detection", "full_name": "denguir/student-teacher-anomaly-detection", "topics": ["artificial-intelligence", "deep-learning", "neural-network", "unsupervised-learning", "computer-vision"], "description": "Student\u2013Teacher Anomaly Detection with Discriminative Latent Embeddings"}
{"name": "microsoft/coco-lm", "full_name": "microsoft/COCO-LM", "topics": ["language-model", "pretrained-language-model", "natural-language-processing", "natural-language-understanding", "pretraining", "representation-learning", "deep-learning", "transformers", "contrastive-learning"], "description": "[NeurIPS 2021] COCO-LM: Correcting and Contrasting Text Sequences for Language Model Pretraining"}
{"name": "sony/model_optimization", "full_name": "sony/model_optimization", "topics": ["deep-learning", "quantization", "network-compression", "network-quantization", "deep-neural-networks", "machine-learning", "edge-ai", "neural-network", "optimizer", "ptq", "pytorch", "qat", "tensorflow"], "description": "Model Compression Toolkit (MCT) is an open source project for neural network model optimization under efficient, constrained hardware. This project provides researchers, developers, and engineers advanced quantization and compression tools for deploying state-of-the-art neural networks."}
{"name": "gorilla-lab-scut/sstnet", "full_name": "Gorilla-Lab-SCUT/SSTNet", "topics": ["deep-learning", "instance-segmentation", "point-cloud", "superpoint", "3d"], "description": "Instance Segmentation in 3D Scenes using Semantic Superpoint Tree Networks"}
{"name": "mcg-nju/fcot", "full_name": "MCG-NJU/FCOT", "topics": ["deep-learning", "pytorch", "tracking"], "description": "[CVIU] Fully Convolutional Online Tracking"}
{"name": "zsyoaoa/danet", "full_name": "zsyOAOA/DANet", "topics": [], "description": "Dual Adversarial Network: Toward Real-world Noise Removal and Noise Generation (ECCV 2020) (Pytorch)"}
{"name": "whj363636/adversarial-attack-on-person-reid-with-deep-mis-ranking", "full_name": "whj363636/Adversarial-attack-on-Person-ReID-With-Deep-Mis-Ranking", "topics": [], "description": "This is a pytorch implementation of the CVPR2020 paper: Transferable, Controllable, and Inconspicuous Adversarial Attacks on Person Re-identification With Deep Mis-Ranking"}
{"name": "ziwei-zh/corrpm", "full_name": "ziwei-zh/CorrPM", "topics": ["human-parsing", "semantic-segmantation", "pytorch", "cvpr2020", "cvpr"], "description": "Pytorch implementation of CVPR2020 paper \"Correlating Edge, Pose with Parsing\""}
{"name": "cogsys-tuebingen/mobilestereonet", "full_name": "cogsys-tuebingen/mobilestereonet", "topics": ["pytorch", "stereo-vision", "deep-learning"], "description": "Lightweight stereo matching network based on MobileNet blocks"}
{"name": "debeshjha/resunetplusplus", "full_name": "DebeshJha/ResUNetPlusPlus", "topics": ["unet", "tensorflow", "image-segmentation", "medical-image-segmentation", "unet-model", "resunet-architecture", "resunet", "resunet-plus-plus", "aspp", "attention", "residual-networks", "squeeze-and-excitation", "conv2d", "pytorch", "pytorch-implementation"], "description": "Official code for ResUNetplusplus for medical image segmentation (TensorFlow & Pytorch implementation) (IEEE ISM)"}
{"name": "hanlard/transformer-based-pretrained-model-for-event-extraction", "full_name": "Hanlard/Transformer-based-pretrained-model-for-event-extraction", "topics": ["event-extraction", "transformer", "bert", "ace2005", "muti-task"], "description": "\u4f7f\u7528\u57fa\u4e8eTransformer\u7684\u9884\u8bad\u7ec3\u6a21\u578b\u5728ACE2005\u6570\u636e\u96c6\u4e0a\u8fdb\u884c\u4e8b\u4ef6\u62bd\u53d6\u4efb\u52a1"}
{"name": "tartrl/tikick", "full_name": "TARTRL/TiKick", "topics": ["pytorch", "google-research-football", "reinforcement-learning", "multi-agent-reinforcement-learning"], "description": "Learning-based agent for Google Research Football (\u8db3\u7403\u6e38\u620f\u667a\u80fd\u4f53)"}
{"name": "bm-k/kosentencebert", "full_name": "BM-K/KoSentenceBERT-ETRI", "topics": ["sentence-bert", "sentence-similarity", "natural-language-processing", "korean-sentence-bert"], "description": "Sentence Embeddings using Siamese ETRI KoBERT-Networks"}
{"name": "juglab/embedseg", "full_name": "juglab/EmbedSeg", "topics": ["instance-segmentation", "test-time-augmentation", "deep-learning", "spatial-embeddings"], "description": "Code Implementation for EmbedSeg, an Instance Segmentation Method for Microscopy Images"}
{"name": "rishikksh20/fnet-pytorch", "full_name": "rishikksh20/FNet-pytorch", "topics": ["language-model", "text-classification", "vision", "text", "image-classification", "transformer", "fnet", "feedforward-neural-network", "fourier-transform"], "description": "Unofficial implementation of Google's FNet: Mixing Tokens with Fourier Transforms"}
{"name": "jackaduma/cyclegan-vc3", "full_name": "jackaduma/CycleGAN-VC3", "topics": ["voice-conversion", "gan", "pytorch", "voice-cloning", "cyclegan", "cyclegan-vc3", "cyclegan-vc", "cyclegan-vc2", "pytorch-implementation", "aigc"], "description": "Voice Conversion by CycleGAN (\u8bed\u97f3\u514b\u9686/\u8bed\u97f3\u8f6c\u6362)\uff1aCycleGAN-VC3"}
{"name": "fcakyon/small-object-detection-benchmark", "full_name": "fcakyon/small-object-detection-benchmark", "topics": ["benchmark", "coco", "fcos", "mmdetection", "object-detection", "pytorch", "sahi", "small-object-detection", "tood", "vfnet", "visdrone", "xview", "icip2022"], "description": "icip2022 paper: sahi benchmark on visdrone and xview datasets using fcos, vfnet and tood detectors"}
{"name": "rmokady/structural-analogy", "full_name": "rmokady/structural-analogy", "topics": [], "description": "Pytorch implementation for the paper \"Structural-analogy from a Single Image Pair\""}
{"name": "shark-nlp/cont", "full_name": "Shark-NLP/CoNT", "topics": ["generation", "contrastive-learning", "machine-translation", "pytorch", "summarization"], "description": "[NeurIPS'22 Spotlight] CoNT: Contrastive Neural Text Generation "}
{"name": "yuangongnd/psla", "full_name": "YuanGongND/psla", "topics": ["audio-classification", "audio", "deep-learning"], "description": "Code for the TASLP paper \"PSLA: Improving Audio Tagging With Pretraining, Sampling, Labeling, and Aggregation\"."}
{"name": "benjs/nfnets_pytorch", "full_name": "benjs/nfnets_pytorch", "topics": ["nfnets", "pytorch", "deepmind", "sgd-adc", "pretrained-models", "weight-standardization"], "description": "Pre-trained NFNets with 99% of the accuracy of the official paper \"High-Performance Large-Scale Image Recognition Without Normalization\"."}
{"name": "nmichlo/disent", "full_name": "nmichlo/disent", "topics": ["pytorch", "pytorch-lightning", "vae", "disentanglement", "disentangled-representations", "metrics", "configurable", "datasets", "python", "python3", "autoencoders", "representation-learning", "metric-learning"], "description": "\ud83e\uddf6 Modular VAE disentanglement framework for python built with PyTorch Lightning \u25b8 Including metrics and datasets \u25b8 With strongly supervised, weakly supervised and unsupervised methods \u25b8 Easily configured and run with Hydra config \u25b8 Inspired by disentanglement_lib"}
{"name": "cambridgeltl/sapbert", "full_name": "cambridgeltl/sapbert", "topics": ["nlp", "machine-learning", "language-model", "lexical-semantics", "representation-learning", "naacl2021", "acl2021", "bionlp", "bert", "contrastive-learning", "metric-learning"], "description": "[NAACL & ACL 2021] SapBERT: Self-alignment pretraining for BERT & XL-BEL: Cross-Lingual Biomedical Entity Linking."}
{"name": "naver-ai/ggdr", "full_name": "naver-ai/GGDR", "topics": [], "description": "Official Pytorch implementation of GGDR (ECCV 2022)"}
{"name": "phoenix1327/tea-action-recognition", "full_name": "Phoenix1327/tea-action-recognition", "topics": [], "description": "The Pytorch code of the TEA module (Temporal Excitation and Aggregation for Action Recognition)"}
{"name": "kathrinse/be_great", "full_name": "kathrinse/be_great", "topics": ["data-generation", "deep-learning", "tabular-data", "transformers"], "description": "A novel approach for synthesizing tabular data using pretrained large language models"}
{"name": "fenghz/kd3a", "full_name": "FengHZ/KD3A", "topics": ["domain-adaptation", "federated-learning", "unsupervised-learning", "transfer-learning", "deep-learning"], "description": "Here is the official implementation of the model KD3A in paper \"KD3A: Unsupervised Multi-Source Decentralized Domain Adaptation via Knowledge Distillation\"."}
{"name": "megvii-basedetection/ota", "full_name": "Megvii-BaseDetection/OTA", "topics": [], "description": "Official implementation of our CVPR2021 paper \"OTA: Optimal Transport Assignment for Object Detection\" in Pytorch."}
{"name": "d-li14/dhm", "full_name": "d-li14/DHM", "topics": ["pytorch", "imagenet", "pretrained-models", "deeply-supervised", "knowledge-distillation", "cvpr2020"], "description": "[CVPR 2020] Dynamic Hierarchical Mimicking Towards Consistent Optimization Objectives"}
{"name": "wzhouxiff/restoreformer", "full_name": "wzhouxiff/RestoreFormer", "topics": ["dictionary", "face-restoration", "pytorch", "transformer"], "description": "[CVPR 2022] RestoreFormer: High-Quality Blind Face Restoration from Undegraded Key-Value Pairs"}
{"name": "lucidrains/etsformer-pytorch", "full_name": "lucidrains/ETSformer-pytorch", "topics": ["artificial-intelligence", "deep-learning", "transformers", "time-series", "exponential-smoothing"], "description": "Implementation of ETSformer, state of the art time-series Transformer, in Pytorch"}
{"name": "mir-group/allegro", "full_name": "mir-group/allegro", "topics": ["atomistic-simulations", "computational-chemistry", "deep-learning", "drug-discovery", "force-fields", "interatomic-potentials", "machine-learning", "materials-science", "molecular-dynamics", "pytorch"], "description": "Allegro is an open-source code for building highly scalable and accurate equivariant deep learning interatomic potentials"}
{"name": "spotify/realbook", "full_name": "spotify/realbook", "topics": ["audio", "cqt", "librosa", "machine-learning", "mel-spectrogram", "spectrograms", "stft", "tensorflow"], "description": "Easier audio-based machine learning with TensorFlow."}
{"name": "lucidrains/unet-stylegan2", "full_name": "lucidrains/unet-stylegan2", "topics": ["artificial-intelligence", "deep-learning", "generative-adversarial-network", "u-net"], "description": "A Pytorch implementation of Stylegan2 with UNet Discriminator"}
{"name": "shijx12/kqapro_baselines", "full_name": "shijx12/KQAPro_Baselines", "topics": ["kbqa", "sparql", "dataset", "bart", "seq2seq"], "description": "Pytorch implementation of baseline models of KQA Pro, a large-scale dataset of complex question answering over knowledge base."}
{"name": "li-plus/dsnet", "full_name": "li-plus/DSNet", "topics": ["video-summarization", "pytorch", "detection", "computer-vision", "machine-learning"], "description": "DSNet: A Flexible Detect-to-Summarize Network for Video Summarization"}
{"name": "zxhuang1698/interpretability-by-parts", "full_name": "zxhuang1698/interpretability-by-parts", "topics": ["cvpr2020", "explainable-ai", "interpretability", "fine-grained-classification", "part-based-models", "celeba-dataset", "cvpr-2020", "cvpr-oral", "pytorch", "pytorch-implementation", "face-segmentation", "celeba", "weakly-supervised-segmentation", "weakly-supervised-localization", "cub-dataset"], "description": "Code repository for \"Interpretable and Accurate Fine-grained Recognition via Region Grouping\", CVPR 2020 (Oral)"}
{"name": "openclimatefix/metnet", "full_name": "openclimatefix/metnet", "topics": ["pytorch"], "description": "PyTorch Implementation of Google Research's MetNet and MetNet-2"}
{"name": "xindongzhang/elan", "full_name": "xindongzhang/ELAN", "topics": ["efficient-inference", "super-resolution", "transformer"], "description": "[ECCV2022] Efficient Long-Range Attention Network for Image Super-resolution"}
{"name": "mayurji/image-classification-pytorch", "full_name": "Mayurji/Image-Classification-PyTorch", "topics": ["pytorch-implementation", "convolutional-neural-networks", "inception", "vgg", "resnet", "googlenet", "alexnet-pytorch", "deep-neural-networks", "squeezenet-model", "densenet", "mobilenetv2", "deep-learning", "pytorch", "mlp-mixer", "vision-transformer"], "description": "Learning and Building Convolutional Neural Networks using PyTorch"}
{"name": "keonlee9420/parallel-tacotron2", "full_name": "keonlee9420/Parallel-Tacotron2", "topics": ["neural-tts", "non-autoregressive", "vae", "self-attention", "duration", "parallel-tacotron", "parallel-tacotron2", "speech-synthesis", "pytorch", "tts", "text-to-speech", "english", "fastspeech"], "description": "PyTorch Implementation of Google's Parallel Tacotron 2: A Non-Autoregressive Neural TTS Model with Differentiable Duration Modeling"}
{"name": "vitae-transformer/vitae-transformer", "full_name": "ViTAE-Transformer/ViTAE-Transformer", "topics": ["deep-learning", "vision-transformer", "imagenet", "ade20k", "imagenet-classification", "mscoco", "object-detection", "semantic-segmentation", "vitae-transformer"], "description": "The official repo for [NeurIPS'21] \"ViTAE: Vision Transformer Advanced by Exploring Intrinsic Inductive Bias\" and [IJCV'22] \"ViTAEv2: Vision Transformer Advanced by Exploring Inductive Bias for Image Recognition and Beyond\""}
{"name": "uber-research/permute-quantize-finetune", "full_name": "uber-research/permute-quantize-finetune", "topics": ["deep-learning", "network-compression", "vector-quantization"], "description": "Using ideas from product quantization for state-of-the-art neural network compression."}
{"name": "asyml/vision-transformer-pytorch", "full_name": "asyml/vision-transformer-pytorch", "topics": ["vision-transformer", "pytorch"], "description": "Pytorch version of Vision Transformer (ViT) with pretrained models. This is part of CASL (https://casl-project.github.io/) and ASYML project."}
{"name": "zhangheng19931123/mutualguide", "full_name": "zhanghengdev/MutualGuide", "topics": ["knowledge-distillation", "object-detection", "pytorch", "deep-learning", "tensorrt"], "description": "Localize to Classify and Classify to Localize: Mutual Guidance in Object Detection"}
{"name": "intel-isl/deeplagrangianfluids", "full_name": "isl-org/DeepLagrangianFluids", "topics": ["deeplearning", "fluids", "simulation", "convolutional-neural-networks", "convnet", "cnn"], "description": "Code repository for \"Lagrangian Fluid Simulation with Continuous Convolutions\", ICLR 2020."}
{"name": "raschka-research-group/coral-pytorch", "full_name": "Raschka-research-group/coral-pytorch", "topics": ["deep-learning", "ordinal-regression", "ordinal-classification"], "description": "CORAL and CORN implementations for ordinal regression with deep neural networks."}
{"name": "zjunlp/ontoprotein", "full_name": "zjunlp/OntoProtein", "topics": ["protein-protein-interaction", "gene-ontology", "protein-pretraining", "protein-function-prediction", "protein-structure-prediction", "knowledge-graph", "protein", "ontoprotein", "bert", "nlp", "pytorch", "pretrained-models", "pretraining", "iclr", "iclr2022"], "description": "Code and datasets for the ICLR2022 paper \"OntoProtein: Protein Pretraining With Gene Ontology Embedding\""}
{"name": "fangjinhuawang/itermvs", "full_name": "FangjinhuaWang/IterMVS", "topics": ["deep-learning", "3d-reconstruction", "multi-view-stereo", "computer-vision"], "description": "Official code of IterMVS (CVPR 2022)"}
{"name": "atosystem/speechclip", "full_name": "atosystem/SpeechCLIP", "topics": ["clip", "deep-learning", "pytorch", "speech-processing", "visually-grounded-speech"], "description": "SpeechCLIP: Integrating Speech with Pre-Trained Vision and Language Model, Accepted to IEEE SLT 2022"}
{"name": "bupt-ai-cz/cac-unet-digestpath2019", "full_name": "bupt-ai-cz/CAC-UNet-DigestPath2019", "topics": ["deep-learning", "domain-adaptation", "cancer-detection", "colonoscopy", "neurocomputing", "histopathology-images", "miccai-2019", "grand-challenge", "digestpath"], "description": "1st to MICCAI DigestPath2019 challenge (https://digestpath2019.grand-challenge.org/Home/) on colonoscopy tissue segmentation and classification task.  (MICCAI 2019) https://teacher.bupt.edu.cn/zhuchuang/en/index.htm"}
{"name": "raoyongming/pointglr", "full_name": "raoyongming/PointGLR", "topics": ["3d-point-clouds", "deep-learning", "unsupervised-learning", "computer-vision", "representation-learning", "metric-learning"], "description": "[CVPR 2020] Global-Local Bidirectional Reasoning for Unsupervised Representation Learning of 3D Point Clouds"}
{"name": "sh-lee-prml/bigvgan", "full_name": "sh-lee-prml/BigVGAN", "topics": [], "description": "Unofficial pytorch implementation of BigVGAN: A Universal Neural Vocoder with Large-Scale Training"}
{"name": "zjunlp/dart", "full_name": "zjunlp/DART", "topics": ["prompt-tuning", "pre-trained-language-models", "few-shot-learning", "prompt", "dart", "prompt-learning", "iclr", "iclr2022", "pytorch", "language-models"], "description": "Code for the ICLR2022 paper \"Differentiable Prompt Makes Pre-trained Language Models Better Few-shot Learners\""}
{"name": "forestagostinelli/deepcubea", "full_name": "forestagostinelli/DeepCubeA", "topics": ["deepcubea", "reinforcement-learning", "deep-learning", "deep-reinforcement-learning", "search", "astar-search", "python3", "pytorch", "rubiks-cube", "deepcube"], "description": "Code for DeepCubeA, a Deep Reinforcement Learning algorithm that can learn to solve the Rubik's cube."}
{"name": "vincentfung13/mine", "full_name": "vincentfung13/MINE", "topics": ["deep-learning", "novel-view-synthesis", "nerf", "depth-estimation", "3d-reconstruction", "computer-vision", "3d-vision"], "description": "Code and models for our ICCV 2021 paper \"MINE: Towards Continuous Depth MPI with NeRF for Novel View Synthesis\""}
{"name": "sunglasses-ai/classy", "full_name": "sunglasses-ai/classy", "topics": ["deep-learning", "pytorch", "neural-network", "nlp", "pytorch-lightning", "transformers", "natural-language-processing", "natural-language-understanding", "natural-language-generation", "seq2seq", "sequence-to-sequence", "bert", "bert-fine-tuning", "nlp-library"], "description": "classy is a simple-to-use library for building high-performance Machine Learning models in NLP."}
{"name": "ibm/crossvit", "full_name": "IBM/CrossViT", "topics": ["computer-vision", "deep-learning", "vision-transformer", "multi-scale-features"], "description": "Official implementation of CrossViT. https://arxiv.org/abs/2103.14899"}
{"name": "adobe/stringlifier", "full_name": "adobe/stringlifier", "topics": ["machine-learning", "python3", "api", "analysis", "unsupervised-machine-learning", "clustering", "tf-idf", "raw-text", "pytorch", "convolutional-networks", "long-short-term-memory", "classification"], "description": "Stringlifier is on Opensource ML Library for detecting random strings in raw text. It can be used in sanitising logs, detecting accidentally exposed credentials and as a pre-processing step in unsupervised ML-based analysis of application text data."}
{"name": "olawod/freevc", "full_name": "OlaWod/FreeVC", "topics": ["pytorch", "speech", "voice-conversion"], "description": "FreeVC: Towards High-Quality Text-Free One-Shot Voice Conversion"}
{"name": "huangjh-pub/synorim", "full_name": "huangjh-pub/synorim", "topics": ["deep-learning", "non-rigid", "point-cloud", "registration", "synchronization"], "description": "[T-PAMI'22] [Jittor & Pytorch] Multiway Non-rigid Point Cloud Registration via Learned Functional Map Synchronization"}
{"name": "gist-ailab/uoais", "full_name": "gist-ailab/uoais", "topics": ["deep-learning", "pytorch", "segmentation", "instance-segmentation", "synthetic-data", "robot-vision", "unseen-object"], "description": "Codes of paper \"Unseen Object Amodal Instance Segmentation via Hierarchical Occlusion Modeling\", ICRA 2022"}
{"name": "arthurdouillard/cvpr2021_plop", "full_name": "arthurdouillard/CVPR2021_PLOP", "topics": ["continual-learning", "semantic-segmentation", "cvpr2021", "deep-learning", "computer-vision"], "description": "Official code of CVPR 2021's PLOP: Learning without Forgetting for Continual Semantic Segmentation"}
{"name": "tomas-gajarsky/facetorch", "full_name": "tomas-gajarsky/facetorch", "topics": ["conda-forge", "deep-learning", "deepfake-detection", "docker-compose", "face-detection", "facial-detection", "facial-expression-recognition", "machine-learning", "neural-networks", "pypi-package", "pytorch", "torch", "torchscript", "torchvision", "computer-vision", "image-analysis", "3d-face-alignment", "facial-landmarks", "facial-landmarks-detection", "face-verification"], "description": "Python library for analysing faces using PyTorch"}
{"name": "shiramir/dino-vit-features", "full_name": "ShirAmir/dino-vit-features", "topics": ["deep-learning", "computer-vision", "vision-transformers", "co-segmentation", "part-segmentation", "semantic-correspondence", "dino", "pytorch"], "description": "Official implementation for the paper \"Deep ViT Features as Dense Visual Descriptors\"."}
{"name": "adobe-research/convmelspec", "full_name": "adobe-research/convmelspec", "topics": ["ai", "audio", "conversion", "coreml", "ml", "on-device", "onnx", "coremltools", "mil", "spectrograms", "melspectrograms", "deep-learning", "machine-learning", "pytorch"], "description": "Convmelspec: Convertible Melspectrograms via 1D Convolutions"}
{"name": "snap-research/mmvid", "full_name": "snap-research/MMVID", "topics": ["deep-learning", "video-generation", "multimodal-learning", "text-to-video", "multimodal-video-generation", "transformer", "bert"], "description": "[CVPR 2022] Show Me What and Tell Me How: Video Synthesis via Multimodal Conditioning"}
{"name": "donydchen/sem2nerf", "full_name": "donydchen/sem2nerf", "topics": ["nerf", "gan", "semantic-to-nerf", "eccv2022", "image-to-image", "image-translation", "image-generation", "image-manipulation", "pytorch", "eccv-2022"], "description": "\ud83d\udc69\ud83c\udffc\u200d\ud83e\uddb0\ud83d\ude3a[ECCV'22] Official PyTorch Implementation of Sem2NeRF: Converting Single-View Semantic Masks to NeRFs"}
{"name": "chriswu1997/deepcad", "full_name": "ChrisWu1997/DeepCAD", "topics": ["deep-learning", "computer-aided-design", "computer-graphics", "3d-shapes", "paper", "iccv2021"], "description": "code for our ICCV 2021 paper \"DeepCAD: A Deep Generative Network for Computer-Aided Design Models\""}
{"name": "vanint/sade-agnosticlt", "full_name": "Vanint/SADE-AgnosticLT", "topics": [], "description": "This repository is the official Pytorch implementation of Self-Supervised Aggregation of Diverse Experts for Test-Agnostic Long-Tailed Recognition (NeurIPS 2022)."}
{"name": "svjan5/kg-reeval", "full_name": "svjan5/kg-reeval", "topics": ["acl2020", "knowledge-graph", "knowledge-graph-completion", "deep-learning"], "description": "ACL 2020: A Re-evaluation of Knowledge Graph Completion Methods"}
{"name": "antoninodimaggio/hugging-captions", "full_name": "antoninodimaggio/Hugging-Captions", "topics": ["transformers", "nlp", "instagram", "huggingface", "gpt-2", "language-models"], "description": "Generate realistic Instagram captions using transformers \ud83e\udd17 "}
{"name": "dqshuai/metaformer", "full_name": "dqshuai/MetaFormer", "topics": ["fine-grained-classification", "pytorch"], "description": "A PyTorch implementation of \"MetaFormer: A Unified Meta Framework for Fine-Grained Recognition\". A reference PyTorch implementation of \u201cCoAtNet: Marrying Convolution and Attention for All Data Sizes\u201d"}
{"name": "novemberchopin/rl_tutorial", "full_name": "NovemberChopin/RL_Tutorial", "topics": ["tensorflow", "reinforcement-learning-algorithms"], "description": "Tutorial for Reinforcement Learning"}
{"name": "gatsby2016/augmentation-pytorch-transforms", "full_name": "gatsby2016/Augmentation-PyTorch-Transforms", "topics": ["image-augmentation", "augmentation", "pytorch", "pytorch-transforms", "affine-transformation", "elastic-transformation", "color-deconvolution", "pathology-image", "histopathology-images"], "description": "Image data augmentation on-the-fly by add new class on transforms in PyTorch and torchvision."}
{"name": "ejcgt/attention-target-detection", "full_name": "ejcgt/attention-target-detection", "topics": ["cvpr2020", "attention", "gaze-estimation", "pytorch", "gaze", "cvpr", "dataset"], "description": "[CVPR2020] \"Detecting Attended Visual Targets in Video\""}
{"name": "zhenghao977/fcos-pytorch-37.2ap", "full_name": "zhenghao977/FCOS-PyTorch-37.2AP", "topics": ["anchor-free", "fcos", "object-detection"], "description": "A pure torch implement of FCOS 37.2AP"}
{"name": "mpatacchiola/self-supervised-relational-reasoning", "full_name": "mpatacchiola/self-supervised-relational-reasoning", "topics": ["self-supervised-learning", "unsupervised-learning", "relational-reasoning", "deep-learning", "deep-neural-networks", "simclr", "rotnet", "deepcluster", "stl10"], "description": "Official PyTorch implementation of the paper \"Self-Supervised Relational Reasoning for Representation Learning\", NeurIPS 2020 Spotlight."}
{"name": "xrenaa/disco", "full_name": "xrenaa/DisCo", "topics": ["deep-learning", "generative-adversarial-network", "generative-model", "disentangled-representations", "gan", "pytorch", "unsupervised-learning", "gans", "pytorch-implementation"], "description": "[ICLR2022] Code for \"Learning Disentangled Representation by Exploiting Pretrained Generative Models: A Contrastive Learning View\""}
{"name": "googolxx/stf", "full_name": "Googolxx/STF", "topics": ["python", "pytorch", "attention-mechanism", "transformer"], "description": "Pytorch implementation of the paper \"The Devil Is in the Details: Window-based Attention for Image Compression\"."}
{"name": "howiema/deepsort_yolov5_pytorch", "full_name": "HowieMa/DeepSORT_YOLOv5_Pytorch", "topics": ["yolov5", "deepsort", "yolov5-deepsort-pytorch", "pytorch", "multi-object-tracking", "simple-online-and-realtime-tracking"], "description": "DeepSORT + YOLOv5"}
{"name": "d-li14/ghostnet.pytorch", "full_name": "d-li14/ghostnet.pytorch", "topics": ["ghostnet", "pytorch", "reproduction", "mobilenetv3", "pretrained-models", "imagenet"], "description": "73.6% GhostNet 1.0x pre-trained model on ImageNet"}
{"name": "jeromerony/adversarial-library", "full_name": "jeromerony/adversarial-library", "topics": ["machine-learning", "adversarial-attacks", "adversarial-examples", "pytorch"], "description": "Library containing PyTorch implementations of various adversarial attacks and resources"}
{"name": "audio-westlakeu/nbss", "full_name": "Audio-WestlakeU/NBSS", "topics": ["pytorch", "separation", "speech", "multi-channel", "narrow-band", "full-band"], "description": "The official repo of \"Multi-channel Narrow-band Deep Speech Separation with Full-band Permutation Invariant Training\", \"Multichannel Speech Separation with Narrow-band Conformer\" and \"NBC2: Multichannel Speech Separation with Revised Narrow-band Conformer\"."}
{"name": "bupt-gamma/gammagl", "full_name": "BUPT-GAMMA/GammaGL", "topics": ["graph", "deep-learning", "framework-agnostic", "tensorlayerx", "pytorch", "tensorflow", "paddlepaddle", "mindspore"], "description": "A multi-backend graph learning library."}
{"name": "proroklab/vectorizedmultiagentsimulator", "full_name": "proroklab/VectorizedMultiAgentSimulator", "topics": ["gym", "gym-environment", "marl", "multi-agent", "multi-agent-learning", "multi-agent-reinforcement-learning", "multi-agent-simulation", "multi-agent-systems", "multi-robot", "multi-robot-framework", "multi-robot-sim", "multi-robot-simulator", "multi-robot-systems", "pytorch", "rllib", "simulator", "vectorization", "vectorized", "robotics", "simulation"], "description": "VMAS is a vectorized framework designed for efficient Multi-Agent Reinforcement Learning benchmarking. It is comprised of a vectorized 2D physics engine written in PyTorch and a set of challenging multi-robot scenarios. Additional scenarios can be implemented through a simple and modular interface."}
{"name": "imdeepmind/neuralpy", "full_name": "imdeepmind/NeuralPy", "topics": ["deep-learning", "machine-learning", "keras", "pytorch", "neuralpy", "library", "data-science", "neural-network", "python", "neuralpy-torch"], "description": "NeuralPy:  A Keras like deep learning library works on top of PyTorch"}
{"name": "badbadbadboy/pytorch.ctpn", "full_name": "BADBADBADBOY/pytorch.ctpn", "topics": ["ctpn", "pytorch", "ocr", "text-detection", "python3", "ohem"], "description": "pytorch, ctpn ,text detection ,ocr,\u6587\u672c\u68c0\u6d4b"}
{"name": "cvlab-stonybrook/scanpath_prediction", "full_name": "cvlab-stonybrook/Scanpath_Prediction", "topics": ["pytorch", "inverse-reinforcement-learning", "scanpath-prediction", "imitation-learning", "adversarial-networks", "cvpr2020"], "description": "Predicting Goal-directed Human Attention Using Inverse Reinforcement Learning (CVPR2020)"}
{"name": "aidos-lab/pytorch-topological", "full_name": "aidos-lab/pytorch-topological", "topics": ["deep-learning", "pytorch", "topological-data-analysis", "topological-machine-learning"], "description": "A topological machine learning framework based on PyTorch"}
{"name": "robvanvolt/dalle-datasets", "full_name": "robvanvolt/DALLE-datasets", "topics": [], "description": "This is a summary of easily available datasets for generalized DALLE-pytorch training."}
{"name": "neu-vig/ezflow", "full_name": "neu-vi/ezflow", "topics": ["pytorch", "optical-flow", "modular"], "description": "A modular PyTorch library for optical flow estimation using neural networks"}
{"name": "social-machines/tweebanknlp", "full_name": "mit-ccc/TweebankNLP", "topics": ["nlp-toolkit", "ner", "tokenization", "lemmatization", "dependency-parser", "pos-tagging", "named-entity-recognition", "text-annotation", "twitter-nlp", "tweet-analysis", "machine-learning", "natural-language-processing"], "description": "[LREC 2022] An off-the-shelf pre-trained Tweet NLP Toolkit (NER, tokenization, lemmatization, POS tagging, dependency parsing)  + Tweebank-NER dataset"}
{"name": "frankluox/lightningfsl", "full_name": "Frankluox/LightningFSL", "topics": ["machine-learning", "few-shot-learning", "image-classification", "computer-vision", "pytorch-lightning"], "description": "LightningFSL: Pytorch-Lightning implementations of Few-Shot Learning models."}
{"name": "tengfei-wang/dcsr", "full_name": "Tengfei-Wang/DCSR", "topics": ["super-resolution", "refsr", "computer-vision", "deep-learning", "dual-cameras", "pytorch", "computational-photography"], "description": "[ICCV 2021 (Oral Presentation)] Dual-Camera Super-Resolution with Aligned Attention Modules (RefSR)"}
{"name": "dvlp-cmaterju/rectinet", "full_name": "DVLP-CMATERJU/RectiNet", "topics": ["ssim", "dewarping", "deep-learning", "artificial-intelligence", "neural-networks", "computer-vision", "bifurcation", "predictions"], "description": "A Gated and Bifurcated Stacked U-Net Module for Document Image Dewarping"}
{"name": "dki-lab/grailqa", "full_name": "dki-lab/GrailQA", "topics": ["nlp", "pytorch", "question-answering"], "description": null}
{"name": "frank-xwang/cld-unsupervisedlearning", "full_name": "frank-xwang/CLD-UnsupervisedLearning", "topics": [], "description": "[CVPR 2021] Pytorch implementation for \"Unsupervised Feature Learning by Cross-Level Instance-Group Discrimination.\""}
{"name": "yanndubs/lossyless", "full_name": "YannDubs/lossyless", "topics": ["pytorch", "machine-learning", "python", "deep-learning", "compression", "self-supervised-learning"], "description": "Generic image compressor for machine learning. Pytorch code for our paper \"Lossy compression for lossless prediction\"."}
{"name": "kozistr/pytorch_optimizer", "full_name": "kozistr/pytorch_optimizer", "topics": ["optimizer", "pytorch", "ranger", "chebyshev", "adamp", "radam", "madgrad", "adabound", "adabelief", "sam", "asam", "lookahead", "deep-learning", "diffgrad", "adamd", "nero", "adan", "gradient-centralization", "gsam", "adai"], "description": "optimizer & lr scheduler implementations in PyTorch"}
{"name": "gewelsji/vps", "full_name": "GewelsJI/VPS", "topics": ["video-polyp-segmentation", "video-object-segmentation", "awesome-polyp-segmentation", "polyp-segmentation", "colonoscopy", "medical-image-segmentation", "medical-image-analysis", "pytorch", "deep-learning", "jittor"], "description": "Video Polyp Segmentation: A Deep Learning Perspective (MIR 2022)"}
{"name": "iterative/dvclive", "full_name": "iterative/dvclive", "topics": ["machine-learning", "visualization", "developer-tools", "deep-learning", "dvc", "logger"], "description": "Log and track ML metrics, parameters, models with Git and/or DVC"}
{"name": "codeslake/pvdnet", "full_name": "codeslake/PVDNet", "topics": ["video-deblurring", "pytorch", "deep-learning"], "description": "[TOG 2021] Official PyTorch Implementation for \"Recurrent Video Deblurring with Blur-Invariant Motion Estimation and Pixel Volumes\""}
{"name": "devjwsong/gpt2-dialogue-generation-pytorch", "full_name": "devjwsong/gpt2-dialogue-generation-pytorch", "topics": ["pytorch", "gpt-2", "natural-language-processing", "natural-language-generation", "nlp", "nlg", "multiturn"], "description": "The PyTorch implementation of fine-tuning the GPT-2(Generative Pre-Training 2) for dialogue generation."}
{"name": "skylark0924/rofunc", "full_name": "Skylark0924/Rofunc", "topics": ["coordinate-transformations", "optitrack", "robotics", "xsens", "zed", "planning-algorithms", "bimanual-robot", "imitation-learning", "learning-from-demonstration", "deep-learning", "robot", "collaborate", "isaac-gym", "humanoid-robots", "delsys", "emg", "python", "reinforcement-learning-algorithms"], "description": "\ud83e\udd16 The Full Process Python Package for Robot Learning from Demonstration"}
{"name": "lornatang/esrgan-pytorch", "full_name": "Lornatang/ESRGAN-PyTorch", "topics": ["pytorch", "esrgan", "super-resolution"], "description": "A simple implementation of esrgan, which uses the pytorch framework."}
{"name": "jahongir7174/efficientnetv2", "full_name": "jahongir7174/EfficientNetV2", "topics": ["efficientnetv2", "imagenet", "training", "pytorch"], "description": "EfficientNetV2 implementation using PyTorch"}
{"name": "praneet9/representation-learning-for-information-extraction", "full_name": "Praneet9/Representation-Learning-for-Information-Extraction", "topics": ["pytorch-implementation", "google-research", "representation-learning", "invoice", "document", "deep-learning", "transformer", "google", "pytorch", "receipts", "relie"], "description": "Pytorch implementation of Paper by Google Research - Representation Learning for Information Extraction from Form-like Documents."}
{"name": "xyzforever/bevt", "full_name": "xyzforever/BEVT", "topics": ["action-recognition", "bert", "deep-learning", "masked-autoencoder", "pytorch", "video-understanding", "foundation-models", "self-supervised-learning", "video-representation-learning"], "description": "PyTorch implementation of BEVT (CVPR 2022) https://arxiv.org/abs/2112.01529"}
{"name": "shaofengzeng/superpoint-pytorch", "full_name": "shaofengzeng/SuperPoint-Pytorch", "topics": ["image", "keypoint"], "description": "Pytorch Implementation of rpautrat/SuperPoint"}
{"name": "ai4healthuol/sssd", "full_name": "AI4HealthUOL/SSSD", "topics": ["deep-learning", "diffusion-models", "time-series-forecasting", "time-series-imputation"], "description": "Repository for the paper: 'Diffusion-based Time Series Imputation and Forecasting with Structured State Space Models'"}
{"name": "hellloxiaotian/acnet", "full_name": "hellloxiaotian/ACNet", "topics": ["super-resolution", "deep-learning", "cnn", "cnn-pytorch", "low-level-vision", "image-processing", "deep-neural-networks", "deep-network", "pytorch", "pytorch-cnn", "python2", "python27", "blind-super-resolution"], "description": "Asymmetric CNN for image super-resolution (IEEE Transactions on Systmes, Man, and  Cybernetics: Systems 2021)"}
{"name": "spytensor/pytorch_img_classification_for_competition", "full_name": "spytensor/pytorch_img_classification_for_competition", "topics": ["pytorch", "image-classification", "competition"], "description": "use pytorch to do image classification"}
{"name": "plemeri/inspyrenet", "full_name": "plemeri/InSPyReNet", "topics": ["deep-learning", "high-resolution", "pytorch", "salient-object-detection", "accv2022", "computer-vision", "background-removal", "image-matting", "image-segmantation", "dichotomous-image-segmentation"], "description": "Official PyTorch implementation of Revisiting Image Pyramid Structure for High Resolution Salient Object Detection (ACCV 2022)"}
{"name": "octanove/shiba", "full_name": "octanove/shiba", "topics": ["natural-language-processing", "deep-learning", "neural-network"], "description": "Pytorch implementation and pre-trained Japanese model for CANINE, the efficient character-level transformer."}
{"name": "glam-imperial/emotionalconversionstargan", "full_name": "glam-imperial/EmotionalConversionStarGAN", "topics": ["generative-adversarial-network", "stargan", "stargan-vc", "data-augmentation", "emotion-recognition", "speech-synthesis", "deep-learning", "deep-neural-networks", "icassp-2020", "icassp", "imperial-college-london", "augsburg-university", "imperial-glam"], "description": "This repository contains code to replicate results from the ICASSP 2020 paper \"StarGAN for Emotional Speech Conversion: Validated by Data Augmentation of End-to-End Emotion Recognition\"."}
{"name": "nlpaueb/greek-bert", "full_name": "nlpaueb/greek-bert", "topics": ["natural-language-processing", "language-model", "transformers", "bert"], "description": "A Greek edition of BERT pre-trained language model"}
{"name": "solacex/ccm", "full_name": "Solacex/CCM", "topics": ["pytorch", "eccv2020", "domain-adaptation", "semantic-segmentation"], "description": "[ECCV2020] Content-Consistent Matching for Domain Adaptive Semantic Segmentation"}
{"name": "jac99/minkloc3d", "full_name": "jac99/MinkLoc3D", "topics": ["place-recognition", "point-cloud", "minkowski-engine", "deep-learning", "computer-vision", "3d-convolutional-network", "3d-vision", "metric-learning"], "description": "MinkLoc3D: Point Cloud Based Large-Scale Place Recognition"}
{"name": "nerminsamet/ppdet", "full_name": "nerminsamet/ppdet", "topics": ["object-detection", "deep-learning", "pytorch", "fpn", "noise-reduction", "small-object-detection", "pooling", "top-down", "bmvc", "bmvc20"], "description": "[BMVC-20] Official PyTorch implementation of PPDet."}
{"name": "neosapience/mlp-singer", "full_name": "neosapience/mlp-singer", "topics": ["singing-voice-synthesis", "text-to-speech", "singing-synthesis", "multi-layer-perceptron", "mlp", "pytorch"], "description": "Official implementation of MLP Singer: Towards Rapid Parallel Korean Singing Voice Synthesis (IEEE MLSP 2021)"}
{"name": "yeyupiaoling/audioclassification-pytorch", "full_name": "yeyupiaoling/AudioClassification-Pytorch", "topics": [], "description": "\u57fa\u4e8ePytorch\u5b9e\u73b0\u7684\u58f0\u97f3\u5206\u7c7b"}
{"name": "daveredrum/scan2cap", "full_name": "daveredrum/Scan2Cap", "topics": ["computer-vision", "natural-language-processing", "3d", "pytorch", "cvpr", "cvpr2021", "scans", "deep-learning", "point-cloud", "caption-generation"], "description": "[CVPR 2021] Scan2Cap: Context-aware Dense Captioning in RGB-D Scans"}
{"name": "fengdalu/learn-an-effective-lip-reading-model-without-pains", "full_name": "VIPL-Audio-Visual-Speech-Understanding/learn-an-effective-lip-reading-model-without-pains", "topics": ["lipreading", "pytorch", "deep-learning"], "description": "The PyTorch Code and Model In \"Learn an Effective Lip Reading Model without Pains\", (https://arxiv.org/abs/2011.07557), which reaches the state-of-art performance in LRW-1000 dataset."}
{"name": "alexklwong/calibrated-backprojection-network", "full_name": "alexklwong/calibrated-backprojection-network", "topics": ["machine-learning", "deep-learning", "computer-vision", "3d-vision", "sensor-fusion", "unsupervised-learning", "self-supervised-learning", "depth-estimation", "depth-completion", "3d-reconstruction", "calibration", "backprojection", "iccv", "iccv2021", "kitti-dataset", "void-dataset", "pytorch", "ucla", "kitti", "void"], "description": "PyTorch Implementation of Unsupervised Depth Completion with Calibrated Backprojection Layers (ORAL, ICCV 2021)"}
{"name": "songweige/tats", "full_name": "SongweiGe/TATS", "topics": ["pytorch", "text-to-video", "video-generation", "video-manipulation", "video-synthesizer", "audio-to-video", "long-video-generation"], "description": "Official PyTorch implementation of TATS: A Long Video Generation Framework with Time-Agnostic VQGAN and Time-Sensitive Transformer (ECCV 2022)"}
{"name": "lucidrains/uniformer-pytorch", "full_name": "lucidrains/uniformer-pytorch", "topics": ["artificial-intelligence", "deep-learning", "attention-mechanism", "transformers", "3d-convolutional-network", "video-classification"], "description": "Implementation of Uniformer, a simple attention and 3d convolutional net that achieved SOTA in a number of video classification tasks, debuted in ICLR 2022"}
{"name": "akshaydudhane16/bipnet", "full_name": "akshaydudhane16/BIPNet", "topics": ["pytorch", "low-light-image-enhancement", "image-restoration", "burst-processing", "burst-superresolution", "burst-denoising", "cvpr22", "low-level-vision"], "description": "[CVPR 2022--Oral, Best paper Finalist] Burst Image Restoration and Enhancement. SOTA for Burst Super-resolution, Low-light Burst Image Enhancement, Burst Image De-noising"}
{"name": "demoriarty/torchpq", "full_name": "DeMoriarty/TorchPQ", "topics": ["cuda", "nearest-neighbor-search", "pytorch"], "description": "Approximate nearest neighbor search with product quantization on GPU in pytorch and cuda"}
{"name": "archinetai/audio-diffusion-pytorch-trainer", "full_name": "archinetai/audio-diffusion-pytorch-trainer", "topics": ["artificial-intelligence", "audio-generation", "deep-learning", "denoising-diffusion"], "description": "Trainer for audio-diffusion-pytorch"}
{"name": "hahnec/torchimize", "full_name": "hahnec/torchimize", "topics": ["pytorch", "gauss-newton", "gauss-newton-method", "levenberg-marquardt", "levenberg-marquardt-algorithm", "parallel-computing", "parallel", "gradient-descent"], "description": "numerical optimization algorithms in pytorch"}
{"name": "alekseykorshuk/optimum-transformers", "full_name": "AlekseyKorshuk/optimum-transformers", "topics": ["nlp", "pipeline", "huggingface", "transformers", "onnx", "onnxruntime", "optimum", "natural-language-processing", "benchmark", "infinity"], "description": "Accelerated NLP pipelines for fast inference on CPU and GPU. Built with Transformers, Optimum and ONNX Runtime."}
{"name": "seefun/torchutils", "full_name": "seefun/TorchUtils", "topics": [], "description": "(WIP) TorchUtils is a pytorch library with several useful tools and training tricks. "}
{"name": "idealwhite/tdanet", "full_name": "idealwhite/tdanet", "topics": ["image-inpainting", "image-completion", "image-restoration", "text-to-image-synthesis", "computer-vision", "pytorch"], "description": "The pytorch implementation of the paper \"text-guided neural image inpainting\" at MM'2020 (oral)"}
{"name": "yuyangw/molclr", "full_name": "yuyangw/MolCLR", "topics": ["deep-learning", "molecule", "self-supervised-learning", "graph-neural-networks", "pytorch", "pytorch-geometric"], "description": "Implementation of MolCLR: \"Molecular Contrastive Learning of Representations via Graph Neural Networks\" in PyG."}
{"name": "mlcommons/gandlf", "full_name": "mlcommons/GaNDLF", "topics": ["deep-learning", "regression", "classification", "segmentation", "data-augmentation", "biomedical-image-processing", "medical-imaging", "framework", "clinical-workflow", "machine-learning", "medical-image-analysis", "medical-informatics", "pytorch"], "description": "A generalizable application framework for segmentation, regression, and classification using PyTorch"}
{"name": "pooya-mohammadi/deep_utils", "full_name": "pooya-mohammadi/deep_utils", "topics": ["pytorch", "deep-learning", "face-detection", "object-detection", "utils", "tensorflow", "python", "machine-learning", "modelcheckpoint", "augmentation", "computer-vision", "nlp", "cutmix", "coco", "yolov5", "face-recognition", "vggface2", "senet"], "description": "An open-source toolkit which is full of handy functions, including the most used models and utilities for deep-learning practitioners!"}
{"name": "chengchunhsu/everypixelmatters", "full_name": "chengchunhsu/EveryPixelMatters", "topics": ["object-detection", "domain-adaptation", "transfer-learning", "adversarial-learning", "anchor-free", "fcos", "computer-vision", "pytorch", "eccv", "eccv2020", "eccv-2020", "unsupervised-domain-adaptation"], "description": "Implementation of ECCV 2020 paper \"Every Pixel Matters: Center-aware Feature Alignment for Domain Adaptive Object Detector\""}
{"name": "jackaduma/las_mandarin_pytorch", "full_name": "jackaduma/LAS_Mandarin_PyTorch", "topics": ["asr", "chinese-speech-recognition", "speech-recognition", "listen-attend-and-spell", "pytorch-implementation", "speech-to-text", "deeplearning", "deep-learning", "mandarin"], "description": "Listen, attend and spell Model and a Chinese Mandarin Pretrained model  (\u4e2d\u6587-\u666e\u901a\u8bdd ASR\u6a21\u578b)"}
{"name": "xiaosu-zhu/mcquic", "full_name": "xiaosu-zhu/McQuic", "topics": ["computer-vision", "cvpr2022", "image-processing", "pytorch", "image-compression"], "description": "Repository of CVPR'22 paper \"Unified Multivariate Gaussian Mixture for Efficient Neural Image Compression\""}
{"name": "vvvm23/vqvae-2", "full_name": "vvvm23/vqvae-2", "topics": ["vq-vae", "pytorch", "generative-model", "vq-vae-2", "vae"], "description": "PyTorch implementation of VQ-VAE-2 from \"Generating Diverse High-Fidelity Images with VQ-VAE-2\""}
{"name": "thuiar/deepaligned-clustering", "full_name": "thuiar/DeepAligned-Clustering", "topics": ["clustering", "self-supervised-learning", "intent-discovering", "natural-language-processing", "natural-language-understanding", "artificial-intelligence", "aaai2021"], "description": "Discovering New Intents with Deep Aligned Clustering (AAAI 2021)"}
{"name": "thudm/proteinlm", "full_name": "THUDM/ProteinLM", "topics": ["protein-language-model", "deep-learning", "transfer-learning", "pretrained-models"], "description": "Protein Language Model"}
{"name": "donghande/autodebias", "full_name": "DongHande/AutoDebias", "topics": [], "description": "This is the official pytorch implementation of AutoDebias, an automatic debiasing method for recommendation.  "}
{"name": "ubcdingxin/improved_ccgan", "full_name": "UBCDingXin/improved_CcGAN", "topics": ["generative-adversarial-network", "gan", "ccgan"], "description": "Continuous Conditional Generative Adversarial Networks (CcGAN)"}
{"name": "deepmind/dm_nevis", "full_name": "deepmind/dm_nevis", "topics": ["benchmark", "continual-learning", "efficient-learning", "jax", "pytorch"], "description": "NEVIS'22: Benchmarking the next generation of never-ending learners"}
{"name": "kennardwang/vtuber-momosehiyori", "full_name": "KennardWang/VTuber-MomoseHiyori", "topics": ["unity", "live2d", "opencv", "cubism", "python", "socket", "deep-learning", "csharp", "vtuber", "pytorch", "dlib"], "description": "\ud83d\ude00 Live2D VTuber, made by Unity and Cubism. This project is based on TCP socket, Python OpenCV and deep learning algorithms used in face recognition and alignment."}
{"name": "raivnlab/str", "full_name": "RAIVNLab/STR", "topics": ["sparsity", "learnable-sparsity", "sparsity-optimization", "cnn", "efficient-inference", "edge-machine-learning", "soft-thresholding", "str", "imagenet", "resource-efficient", "icml-2020", "icml", "icml2020", "soft-threshold-reparameterization"], "description": "Soft Threshold Weight Reparameterization for Learnable Sparsity"}
{"name": "renyurui/neural-texture-extraction-distribution", "full_name": "RenYurui/Neural-Texture-Extraction-Distribution", "topics": ["deep-learning", "pytorch", "person-image-generation"], "description": "The PyTorch implementation for paper \"Neural Texture Extraction and Distribution for Controllable Person Image Synthesis\" (CVPR2022 Oral)"}
{"name": "bigballon/distribuuuu", "full_name": "BIGBALLON/distribuuuu", "topics": ["pytorch", "distributed", "imagenet", "training", "classification", "botnet", "transformer"], "description": "The pure and clear PyTorch Distributed Training Framework."}
{"name": "nanguoshun/lsr", "full_name": "nanguoshun/LSR", "topics": ["natural-language-processing", "deep-learning", "latent-variable-models"], "description": "Pytorch Implementation of our ACL 2020 Paper  \"Reasoning with Latent Structure Refinement for Document-Level Relation Extraction\""}
{"name": "jasonkks/pttr", "full_name": "Jasonkks/PTTR", "topics": ["point-cloud", "pytorch", "tracking", "autonomous-driving"], "description": "Pytorch Implementation of PTTR: Relational 3D Point Cloud Object Tracking with Transformer"}
{"name": "vita-group/agd", "full_name": "VITA-Group/AGD", "topics": ["pytorch", "compression", "neural-architecture-search", "generative-adversarial-network"], "description": "[ICML2020] \"AutoGAN-Distiller: Searching to Compress Generative Adversarial Networks\" by Yonggan Fu, Wuyang Chen, Haotao Wang, Haoran Li, Yingyan Lin, Zhangyang Wang"}
{"name": "kumapowerliu/pd-gan", "full_name": "KumapowerLIU/PD-GAN", "topics": [], "description": "The official pytorch code of PD-GAN: Probabilistic Diverse GAN for Image Inpainting (CVPR 2021)"}
{"name": "chriswu1997/multimodal-shape-completion", "full_name": "ChrisWu1997/Multimodal-Shape-Completion", "topics": ["eccv-2020", "shape-completion", "computer-vision", "deep-learning", "computer-graphics"], "description": "code for our ECCV 2020 spotlight paper \"Multimodal Shape Completion via Conditional Generative Adversarial Networks\""}
{"name": "ogkalu2/merge-stable-diffusion-models-without-distortion", "full_name": "ogkalu2/Merge-Stable-Diffusion-models-without-distortion", "topics": ["generative-art", "pytorch", "stable-diffusion"], "description": null}
{"name": "pokaxpoka/sunrise", "full_name": "pokaxpoka/sunrise", "topics": ["reinforcement-learning", "rl", "deep-learning", "mujoco", "dm-control", "codebase", "model-free", "off-policy", "deep-reinforcement-learning", "deep-neural-networks", "deep-q-learning", "deep-q-network", "soft-actor-critic", "sac", "rainbow"], "description": "SUNRISE: A Simple Unified Framework for Ensemble Learning in Deep Reinforcement Learning"}
{"name": "lonepatient/electra_pytorch", "full_name": "lonePatient/electra_pytorch", "topics": ["electra", "pytorch", "bert", "nlp", "deeplearning", "glue", "language-model"], "description": " ELECTRA: Pre-training Text Encoders as Discriminators Rather Than Generators "}
{"name": "mosheman5/timbre_painting", "full_name": "mosheman5/timbre_painting", "topics": ["generative-model", "audio", "deep-learning", "sound"], "description": "Hierarchical fast and high-fidelity audio generation "}
{"name": "tinapan-pt/videomoco", "full_name": "tinapan-pt/VideoMoCo", "topics": [], "description": "Official pytorch implementation of paper \"VideoMoCo: Contrastive Video Representation Learning with Temporally Adversarial Examples\" (CVPR 2021)."}
{"name": "jingtaozhan/drhard", "full_name": "jingtaozhan/DRhard", "topics": ["information-retrieval", "pytorch", "web-search"], "description": "SIGIR'21: Optimizing DR with hard negatives and achieving SOTA first-stage retrieval performance on TREC DL Track."}
{"name": "na-z/sess", "full_name": "Na-Z/sess", "topics": ["pytorch", "semi-supervised-learning", "3d-object-detection", "point-cloud"], "description": "[CVPR2020 Oral] SESS: Self-Ensembling Semi-Supervised 3D Object Detection"}
{"name": "georgian-io/knowledge-distillation-toolkit", "full_name": "georgian-io/Knowledge-Distillation-Toolkit", "topics": ["knowledge-distillation", "pytorch", "pytorch-lightning"], "description": "A knowledge distillation toolkit based on PyTorch and PyTorch Lightning."}
{"name": "biomedsciai/fuse-med-ml", "full_name": "BiomedSciAI/fuse-med-ml", "topics": ["deep-learning", "machine-learning", "pytorch", "collaboration", "fuse-med-ml", "fusemedml", "fuse", "medical", "medical-imaging", "healthcare", "vision", "multimodality", "ai", "python", "cmmd", "isic", "ct", "stoic", "knight-challenge", "hacktoberfest"], "description": "A python framework accelerating ML based discovery in the medical field by encouraging code reuse. Batteries included :)"}
{"name": "ertis-research/kafka-ml", "full_name": "ertis-research/kafka-ml", "topics": ["kafka", "machine-learning", "kubernetes", "tensorflow", "docker", "data-stream", "iot", "keras-tensorflow", "gpu-acceleration", "deep-learning", "keras", "pytorch"], "description": "Kafka-ML: connecting the data stream with ML/AI frameworks (now TensorFlow and PyTorch!)"}
{"name": "jayleicn/tvcaption", "full_name": "jayleicn/TVCaption", "topics": ["video-captioning", "dataset", "pytorch"], "description": "[ECCV 2020] PyTorch code of MMT (a multimodal transformer captioning model) on TVCaption dataset"}
{"name": "hyunwoongko/summarizers", "full_name": "hyunwoongko/summarizers", "topics": ["summarization", "nlp"], "description": "Package for controllable summarization"}
{"name": "jerryx1110/rpcmvos", "full_name": "JerryX1110/RPCMVOS", "topics": ["vos", "video", "computer-vision", "video-object-segmentation", "segmentation", "tracking", "pytorch", "aaai", "aaai2022", "dense-prediction", "reliability", "robustness"], "description": "[AAAI22 Oral] Reliable Propagation-Correction Modulation for Video Object Segmentation"}
{"name": "berniwal/swin-transformer-pytorch", "full_name": "berniwal/swin-transformer-pytorch", "topics": ["deep-learning", "machine-learning", "pytorch", "artificial-intelligence", "transformer-pytorch", "transformer-architecture", "attention-model"], "description": "Implementation of the Swin Transformer in PyTorch."}
{"name": "zubair-irshad/shapo", "full_name": "zubair-irshad/shapo", "topics": ["3d-computer-vision", "3d-detection", "6dof-pose", "computer-vision", "deep-learning", "implicit-neural-representation", "implicit-representions", "neural-fields", "pose-estimation", "pytorch", "robotics", "shape-reconstruction", "signed-distance-functions", "texture-synthesis", "3d-vision", "optimization", "scene-understanding"], "description": "Pytorch code for ECCV'22 paper. ShAPO: Implicit Representations for Multi-Object Shape, Appearance and Pose Optimization"}
{"name": "alexmonti19/dagnet", "full_name": "alexmonti19/dagnet", "topics": ["trajectory-prediction", "human-trajectory", "pedestrians", "basketball", "sports", "vae", "vrnn", "gnn", "gat", "gcn", "graph", "pytorch", "dagnet", "trajectory-forecasting", "graph-neural-networks", "graph-attention-networks"], "description": "PyTorch code for ICPR 2020 paper \"DAG-Net: Double Attentive Graph Neural Network for Trajectory Forecasting\""}
{"name": "lucidrains/stam-pytorch", "full_name": "lucidrains/STAM-pytorch", "topics": ["artificial-intelligence", "deep-learning", "attention-mechanism", "transformers", "video-classification"], "description": "Implementation of STAM (Space Time Attention Model), a pure and simple attention model that reaches SOTA for video classification"}
{"name": "wilile26811249/vitgan", "full_name": "wilile26811249/ViTGAN", "topics": ["pytorch", "generative-adversarial-network", "self-attention"], "description": "A PyTorch implementation of ViTGAN based on paper ViTGAN: Training GANs with Vision Transformers."}
{"name": "lxuechen/private-transformers", "full_name": "lxuechen/private-transformers", "topics": ["differential-privacy", "nlp", "transformers", "deep-learning", "pytorch", "huggingface-transformers"], "description": "make differentially private training of transformers easy"}
{"name": "alldbi/supermix", "full_name": "alldbi/SuperMix", "topics": ["pytorch", "augmentation", "supervised", "deep-learning", "saliency-detection", "distillation", "cvpr2021"], "description": "Pytorch implementation of CVPR2021 paper: SuperMix: Supervising the Mixing Data Augmentation"}
{"name": "microsoft/personalizedfl", "full_name": "microsoft/PersonalizedFL", "topics": ["federated-learning", "non-iid", "personalized-federated-learning", "deep-learning", "machine-learning"], "description": "Personalized federated learning codebase for research"}
{"name": "fraunhoferhhi/neural-deferred-shading", "full_name": "fraunhoferhhi/neural-deferred-shading", "topics": ["3d-reconstruction", "computer-vision", "deep-learning", "differentiable-rendering", "inverse-graphics", "neural-rendering", "pytorch", "computer-graphics", "machine-learning", "optimization", "triangle-mesh", "neural", "rendering"], "description": "Multi-View Mesh Reconstruction with Neural Deferred Shading (CVPR 2022) "}
{"name": "harfang3d/dogfight-sandbox-hg2", "full_name": "harfang3d/dogfight-sandbox-hg2", "topics": ["simulation", "python", "3d", "flight-simulator", "pbr", "autopilot", "network", "harfang3d", "opengl", "game", "directx-11", "tensorflow", "virtual-reality", "vr"], "description": "Air to air combat sandbox, created in Python 3 using the HARFANG 3D 2 framework."}
{"name": "kamwoh/orthohash", "full_name": "kamwoh/orthohash", "topics": ["hashing", "coco", "cosine-similarity", "deep-hashing", "deep-learning", "hash-codes", "image-retrieval", "imagenet", "neurips", "neurips-2021", "nuswide", "oxford", "paris", "gldv2", "instance-level-retrieval", "orthohash", "supervised-hashing", "roxf", "rpar"], "description": "Official implementation of NeurIPS 2021 paper \"One Loss for All: Deep Hashing with a Single Cosine Similarity based Learning Objective\""}
{"name": "zhengyiluo/meva", "full_name": "ZhengyiLuo/MEVA", "topics": ["human-pose-estimation", "accv2020", "3d-pose-estimation", "3d-human-pose", "smpl", "pytorch"], "description": "Official implementation of ACCV 2020 paper \"3D Human Motion Estimation via Motion Compression and Refinement\" (Identical repo to https://github.com/KlabCMU/MEVA, will be kept in sync)"}
{"name": "visualcomputinginstitute/dcm-net", "full_name": "JonasSchult/dcm-net", "topics": ["dcm-net", "3d-deep-learning", "deep-learning", "semantic-segmentation", "3d-segmentation", "scannet", "cvpr2020", "cvpr"], "description": "This work is based on our paper \"DualConvMesh-Net: Joint Geodesic and Euclidean Convolutions on 3D Meshes\", which appeared at the IEEE Conference On Computer Vision And Pattern Recognition (CVPR) 2020."}
{"name": "foivospar/ned", "full_name": "foivospar/NED", "topics": ["3dmm", "emotion", "cvpr2022", "pytorch", "deepfakes", "gan", "expression-manipulation", "face-edit", "image-generation", "talking-head", "face"], "description": "PyTorch implementation for NED (CVPR 2022). It can be used to manipulate the facial emotions of actors in videos based on emotion labels or reference styles."}
{"name": "lmbxmu/rbnn", "full_name": "lmbxmu/RBNN", "topics": ["binary-network", "binary-neural-networks", "network-compression-acceleration", "network-quantization", "neurips2020", "neurips-2020"], "description": "Pytorch implementation of our paper accepted by NeurIPS 2020 -- Rotated Binary Neural Network"}
{"name": "vlfom/rncdl", "full_name": "vlfom/RNCDL", "topics": ["computer-vision", "deep-learning", "neurips-2022", "object-detection", "pytorch", "representation-learning", "transfer-learning"], "description": "[NeurIPS 2022] The official implementation of \"Learning to Discover and Detect Objects\"."}
{"name": "nburrus/stereodemo", "full_name": "nburrus/stereodemo", "topics": ["deep-learning", "depth-estimation", "stereo-matching", "stereo-vision", "stereo-depth-estimation"], "description": "Small Python utility to compare and visualize the output of various stereo depth estimation algorithms"}
{"name": "lucidrains/deformable-attention", "full_name": "lucidrains/deformable-attention", "topics": ["artificial-intelligence", "deep-learning", "attention-mechanism"], "description": "Implementation of Deformable Attention in Pytorch from the paper \"Vision Transformer with Deformable Attention\""}
{"name": "dart2022/dart", "full_name": "DART2022/DART", "topics": ["computer-graphics", "mano", "metaverse", "pose-estimation", "pytorch", "rendering-3d-graphics"], "description": "DART: Articulated Hand Model with Diverse Accessories and Rich Textures (NeurIPS 2022 - Datasets and Benchmarks Track)"}
{"name": "bmw-innovationlab/bmw-classification-training-gui", "full_name": "BMW-InnovationLab/BMW-Classification-Training-GUI", "topics": ["gluoncv", "deep-learning", "classification", "inference-api", "training", "computer-vision"], "description": "This repository allows you to get started with training a State-of-the-art Deep Learning model with little to no configuration needed! You provide your labeled dataset and you can start the training right away. You can even test your model with our built-in Inference REST API. Training classification models with GluonCV has never been so easy."}
{"name": "bubblyyi/coronary-artery-tracking-via-3d-cnn-classification", "full_name": "BubblyYi/Coronary-Artery-Tracking-via-3D-CNN-Classification", "topics": ["3d-cnn", "3d-classification", "pytorch", "coronary-artery", "centerline-extraction", "3d-cnn-tracker", "centerline", "medical-image-processing", "deep-learning", "blood-vessel", "vessel", "centerline-detection"], "description": "The PyTorch re-implement of a 3D CNN Tracker to extract coronary artery centerlines with state-of-the-art (SOTA) performance. (paper: 'Coronary artery centerline extraction in cardiac CT angiography using a CNN-based orientation classi\ufb01er')"}
{"name": "shoprunner/collie_recs", "full_name": "ShopRunner/collie", "topics": ["recommendation-system", "recommender-system", "learning-to-rank", "pytorch", "deep-learning", "python", "implicit", "hybrid", "datascience"], "description": "A library for preparing, training, and evaluating scalable deep learning hybrid recommender systems using PyTorch. "}
{"name": "open-speech-ekstep/vakyansh-wav2vec2-experimentation", "full_name": "Open-Speech-EkStep/vakyansh-wav2vec2-experimentation", "topics": ["speech", "speechrecognition", "speechrecognition-python", "speech-recognition", "speech-recognition-model", "indic-languages", "indic-scripts", "pytorch", "asr", "open-source"], "description": "Repository containing experimentation platform on how to train, infer on wav2vec2 models."}
{"name": "khrylx/dlow", "full_name": "Khrylx/DLow", "topics": ["eccv2020", "motion-prediction", "motion-forecasting", "pose-prediction", "pose-forecasting", "generative-models", "diversity", "diversifying-latent-flows", "vae", "pytorch", "deep-learning"], "description": "[ECCV 2020] Official PyTorch Implementation of \"DLow: Diversifying Latent Flows for Diverse Human Motion Prediction\". ECCV 2020."}
{"name": "colin97/deepmetahandles", "full_name": "Colin97/DeepMetaHandles", "topics": ["3d-deep-learning", "mesh-generation", "deformation", "mesh-processing", "deep-learning", "mesh-deformation", "3d-graphics"], "description": "DeepMetaHandles: Learning Deformation Meta-Handles of 3D Meshes with Biharmonic Coordinates"}
{"name": "nvlabs/afno-transformer", "full_name": "NVlabs/AFNO-transformer", "topics": [], "description": "Adaptive FNO transformer - official Pytorch implementation"}
{"name": "yyzharry/multi-domain-imbalance", "full_name": "YyzHarry/multi-domain-imbalance", "topics": ["domain-adaptation", "domain-generalization", "eccv", "eccv-2022", "imbalance", "imbalanced-classification", "imbalanced-data", "imbalanced-learning", "long-tail", "long-tailed-recognition", "multi-domain", "multi-domain-learning", "deep-learning", "ood", "ood-generalization"], "description": "[ECCV 2022] Multi-Domain Long-Tailed Recognition, Imbalanced Domain Generalization, and Beyond"}
{"name": "ml4bio/e2efold", "full_name": "ml4bio/e2efold", "topics": [], "description": "pytorch implementation for \"RNA Secondary Structure Prediction By Learning Unrolled Algorithms\""}
{"name": "borhanmorphy/fastface", "full_name": "borhanMorphy/fastface", "topics": ["facedetection", "pytorch", "pytorch-lightning", "edge-ai"], "description": "Light Face Detection using PyTorch Lightning"}
{"name": "rdroste/unisal", "full_name": "rdroste/unisal", "topics": ["machine-learning", "deep-learning", "saliency-detection", "saliency-prediction", "visual-saliency", "visual-salience", "video-saliency-prediction", "video-saliency", "image-saliency", "eccv2020", "eccv-2020", "eccv", "saliency", "saliency-map", "saliency-model", "salicon", "dhf1k", "ucf-sports"], "description": "Unified Image and Video Saliency Modeling (ECCV 2020)"}
{"name": "josejimenezluna/delfta", "full_name": "josejimenezluna/delfta", "topics": ["machine-learning", "deep-learning", "pytorch", "quantum-chemistry"], "description": "\u0394-QML for medicinal chemistry"}
{"name": "twsl/whos-there", "full_name": "twsl/whos-there", "topics": ["python", "pytorch", "pytorch-lightning", "machine-learning", "deep-learning"], "description": "The spiritual successor to knockknock for PyTorch Lightning, get notified when your training ends"}
{"name": "iigroup/maniqa", "full_name": "IIGROUP/MANIQA", "topics": ["nr-iqa", "swintransformer", "vision-transformer", "cvpr2022", "pytorch-implementation", "deep-learning", "csiq", "kadid-10k", "live", "pipal"], "description": "[CVPRW 2022] MANIQA: Multi-dimension Attention Network for No-Reference Image Quality Assessment"}
{"name": "badbadbadboy/dbnet-lite.pytorch", "full_name": "BADBADBADBOY/DBnet-lite.pytorch", "topics": ["dbnet", "textdetection", "ocr", "lightweight", "pytorch", "python3"], "description": "A pytorch re-implementation of Real-time Scene Text Detection with Differentiable Binarization"}
{"name": "toughstonex/self-supervised-mvs", "full_name": "ToughStoneX/Self-Supervised-MVS", "topics": [], "description": "Pytorch codes for \"Self-supervised Multi-view Stereo via Effective Co-Segmentation and Data-Augmentation\""}
{"name": "lucidrains/hamburger-pytorch", "full_name": "lucidrains/hamburger-pytorch", "topics": ["artificial-intelligence", "deep-learning", "matrix-decomposition"], "description": "Pytorch implementation of the hamburger module from the ICLR 2021 paper \"Is Attention Better Than Matrix Decomposition\""}
{"name": "zjufanlab/scdeepsort", "full_name": "ZJUFanLab/scDeepSort", "topics": ["single-cell", "transcriptomics", "deep-learning", "graph-neural-network", "cell-type-classification", "reference-free", "annotation", "scrna-seq", "gnn"], "description": "Cell-type Annotation for Single-cell Transcriptomics using Deep Learning with a Weighted Graph Neural Network"}
{"name": "yuleiniu/cfvqa", "full_name": "yuleiniu/cfvqa", "topics": ["vqa", "causal-inference", "causality", "counterfactual", "cvpr", "cvpr2021", "language-bias", "pytorch"], "description": "[CVPR 2021] Counterfactual VQA: A Cause-Effect Look at Language Bias"}
{"name": "imirzadeh/stable-continual-learning", "full_name": "imirzadeh/stable-continual-learning", "topics": ["continual-learning", "catastrophic-forgetting", "pytorch", "lifelong-learning", "deep-learning"], "description": "Towards increasing stability of neural networks for continual learning: https://arxiv.org/abs/2006.06958.pdf (NeurIPS'20)"}
{"name": "dengbocong/nlp-dialogue", "full_name": "DengBoCong/nlp-dialogue", "topics": ["nlp", "bot", "machine-learning", "deep-learning", "bots", "natural-language-processing", "chatbot", "nlu", "conversational-ai"], "description": "A full-process dialogue system that can be deployed online"}
{"name": "applied-ai-lab/genesis", "full_name": "applied-ai-lab/genesis", "topics": ["machine-learning", "pytorch", "vae", "generative-model", "object-centric"], "description": "Official PyTorch implementation of GENESIS and GENESIS-V2"}
{"name": "sea-snell/implicit-language-q-learning", "full_name": "Sea-Snell/Implicit-Language-Q-Learning", "topics": ["implicit-q-learning", "iql", "language-model", "nlp", "offline-rl", "python", "pytorch", "q-learning", "reinforcement-learning"], "description": "Official code from the paper \"Offline RL for Natural Language Generation with Implicit Language Q Learning\""}
{"name": "zhongcl-thu/snake", "full_name": "zhongcl-thu/SNAKE", "topics": [], "description": "[NeurIPS 2022] Pytorch Implementation of SNAKE"}
{"name": "bobholamovic/cdlab", "full_name": "Bobholamovic/CDLab", "topics": ["remote-sensing", "change-detection", "deep-learning", "pytorch"], "description": "Yet another repository for developing and benchmarking deep learning-based change detection methods."}
{"name": "anton-jeran/fast-rir", "full_name": "anton-jeran/FAST-RIR", "topics": ["room-impulse-response", "automatic-speech-recognition", "acoustics", "conditional-generation", "generative-adversarial-network", "speech", "augmentation", "synthetic-data", "rir", "neural-network", "diffuse-scattering", "deep-learning", "impulse-response", "implicit-neural-representation"], "description": "This is the official implementation of our neural-network-based fast diffuse room impulse response generator (FAST-RIR)  for generating room impulse responses (RIRs) for a given acoustic environment."}
{"name": "deepchainbio/bio-transformers", "full_name": "DeepChainBio/bio-transformers", "topics": ["bioinformatics", "artificial-intelligence", "transformer", "embeddings"], "description": "bio-transformers is a wrapper on top of the ESM/Protbert model, trained on millions on proteins and used to predict embeddings."}
{"name": "young-geng/cql", "full_name": "young-geng/CQL", "topics": ["pytorch", "reinforcement-learning"], "description": "Conservative Q Learning on top of SAC"}
{"name": "n2cholas/jax-resnet", "full_name": "n2cholas/jax-resnet", "topics": ["jax", "flax", "neural-networks", "deep-learning", "machine-learning", "computer-vision", "resnet"], "description": "Implementations and checkpoints for ResNet, Wide ResNet, ResNeXt, ResNet-D, and ResNeSt in JAX (Flax)."}
{"name": "mberr/torch-ppr", "full_name": "mberr/torch-ppr", "topics": ["gpu", "pagerank", "personalized-pagerank", "pytorch"], "description": "(Personalized) Page-Rank computation using PyTorch"}
{"name": "rubenwiersma/deltaconv", "full_name": "rubenwiersma/deltaconv", "topics": ["differential-geometry", "geometric-deep-learning", "graph-learning", "point-cloud", "point-cloud-classification", "point-cloud-segmentation", "pytorch"], "description": "Code for the SIGGRAPH 2022 paper \"DeltaConv: Anisotropic Operators for Geometric Deep Learning on Point Clouds.\""}
{"name": "vanint/tade-agnosticlt", "full_name": "Vanint/SADE-AgnosticLT", "topics": [], "description": "This repository is the official Pytorch implementation of Self-Supervised Aggregation of Diverse Experts for Test-Agnostic Long-Tailed Recognition (NeurIPS 2022)."}
{"name": "jhyuklee/densephrases", "full_name": "princeton-nlp/DensePhrases", "topics": ["nlp", "open-domain-qa", "slot-filling", "knowledge-base", "information-retrieval", "passage-retrieval"], "description": "ACL'2021: Learning Dense Representations of Phrases at Scale; EMNLP'2021: Phrase Retrieval Learns Passage Retrieval, Too https://arxiv.org/abs/2012.12624"}
{"name": "leaderj1001/lambdanetworks", "full_name": "leaderj1001/LambdaNetworks", "topics": ["lambda-networks", "self-attention", "image-classification", "pytorch", "lambda-convolution"], "description": "Implementing Lambda Networks using Pytorch"}
{"name": "cerebroai/reformers", "full_name": "cerebroai/reformers", "topics": ["reformers", "pytorch", "tensorflow"], "description": "Efficient Transformers for research, PyTorch and Tensorflow using Locality Sensitive Hashing"}
{"name": "demi6od/chatbot", "full_name": "demi6od/ChatBot", "topics": [], "description": "Pytorch Generative ChatBot (Dialog System) based on RNN, Transformer, Bert and GPT2"}
{"name": "bsun0802/zero-dce", "full_name": "bsun0802/Zero-DCE", "topics": ["pytorch-implementation", "pytorch"], "description": "Pytorch implementation of paper \"Zero Reference low-light image enhancement\""}
{"name": "lucidrains/classifier-free-guidance-pytorch", "full_name": "lucidrains/classifier-free-guidance-pytorch", "topics": ["artificial-intelligence", "deep-learning", "classifier-free-guidance", "text-guidance"], "description": "Implementation of Classifier Free Guidance in Pytorch, with emphasis on text conditioning, and flexibility to include multiple text embedding models"}
{"name": "lilac-lee/neural_scene_flow_prior", "full_name": "Lilac-Lee/Neural_Scene_Flow_Prior", "topics": ["scene-flow", "3d-vision", "implicit-representations", "runtime-optimization", "computer-vision", "deep-learning", "neurips-2021"], "description": "Neural Scene Flow Prior (NeurIPS 2021 spotlight)"}
{"name": "mengyangpu/rindnet", "full_name": "MengyangPu/RINDNet", "topics": ["edge-detection", "deep-learning"], "description": "RINDNet: Edge Detection for Discontinuity in Reflectance, Illumination, Normal and Depth, in ICCV 2021 (oral)"}
{"name": "spijkervet/byol", "full_name": "Spijkervet/BYOL", "topics": ["byol", "pytorch", "self-supervised-learning", "deep-learning"], "description": "Bootstrap Your Own Latent: A New Approach to Self-Supervised Learning"}
{"name": "tatigabru/kaggle-rsna", "full_name": "tatigabru/kaggle-rsna", "topics": ["object-detection", "python", "machine-learning", "deep-learning", "detection", "image-processing", "image-augmentation", "pneumonia-detection", "retinanet", "neural-networks", "classification", "medical-imaging", "computer-assisted-diagnosis"], "description": "Deep Learning for Automatic Pneumonia Detection, RSNA challenge"}
{"name": "bluemirrors/cvu", "full_name": "BlueMirrors/cvu", "topics": ["computer-vision", "object-detection", "yolov5", "tensorrt", "tensorflow2", "pytorch", "onnxruntime"], "description": "Computer Vision deployment tools for dummies and experts. CVU  aims at making CV pipelines easier to build and consistent around platforms, devices, and models."}
{"name": "alexeykarnachev/full_stack_transformer", "full_name": "alexeykarnachev/full_stack_transformer", "topics": ["transformers", "pytorch-lightning", "language-model", "telegram-bot", "language-model-generation", "language-model-finetuning", "gpt-2"], "description": "Pytorch library for end-to-end transformer models training, inference and serving"}
{"name": "lucidrains/chroma-pytorch", "full_name": "lucidrains/chroma-pytorch", "topics": ["artificial-intelligence", "deep-learning", "denoising-diffusion", "graph-neural-networks", "protein-design"], "description": "Implementation of Chroma, generative models of protein using DDPM and GNNs, in Pytorch"}
{"name": "jianghaojun/condensenetv2", "full_name": "jianghaojun/CondenseNetV2", "topics": ["deep-learning", "computer-vision", "cvpr2021", "mobile-networks", "pytorch"], "description": "[CVPR 2021] CondenseNet V2: Sparse Feature Reactivation for Deep Networks"}
{"name": "ameraner/dsen2-cr", "full_name": "ameraner/dsen2-cr", "topics": ["sar", "cloud-removal", "optical", "satellite-imagery", "satellite-data", "sentinel", "sentinel-2", "sentinel-1", "deep-learning", "residual-neural-network", "satellite"], "description": "DSen2-CR: A network for removing clouds from Sentinel-2 images. This repo contains the model code, written in Python/Keras, as well as links to pre-trained checkpoints and the SEN12MS-CR dataset."}
{"name": "xdxie/wordart", "full_name": "xdxie/WordArt", "topics": ["corner", "dataset", "ocr", "text-recognition", "transformer", "artistic-text-recognition", "contrastive-learning"], "description": "The official code of CornerTransformer (ECCV 2022, Oral) on top of MMOCR."}
{"name": "xingyu-lin/mbpo_pytorch", "full_name": "Xingyu-Lin/mbpo_pytorch", "topics": [], "description": "A pytorch reprelication of the model-based reinforcement learning algorithm MBPO"}
{"name": "marload/aquvitae", "full_name": "marload/aquvitae", "topics": ["tensorflow", "pytorch", "light-weight", "deep-learning", "machine-learning", "knowledge-distillation", "model-compression"], "description": "Knowledge Distillation Toolkit"}
{"name": "postech-ami/fastmetro", "full_name": "postech-ami/FastMETRO", "topics": ["eccv2022", "human-mesh-recovery", "human-pose-estimation", "transformer", "3d-human-shape-and-pose-estimation"], "description": "[ECCV'22] Official PyTorch Implementation of \"Cross-Attention of Disentangled Modalities for 3D Human Mesh Recovery with Transformers\""}
{"name": "junleen/rainnet", "full_name": "junleen/RainNet", "topics": ["image-harmonization", "pytorch", "normalization", "cvpr2021", "computer-vision", "harmonization", "instance-normalization"], "description": "[CVPR 2021] Region-aware Adaptive Instance Normalization for Image Harmonization"}
{"name": "jugghm/penet_icra2021", "full_name": "JUGGHM/PENet_ICRA2021", "topics": ["pytorch", "depth-completion"], "description": "ICRA 2021 \"Towards Precise and Efficient Image Guided Depth Completion\""}
{"name": "rover-xingyu/ha-nerf", "full_name": "rover-xingyu/Ha-NeRF", "topics": [], "description": "Ha-NeRF (Hallucinated Neural Radiance Fields in the Wild) using pytorch."}
{"name": "clovaai/mxfont", "full_name": "clovaai/mxfont", "topics": ["font", "machine-learning", "deep-learning", "pytorch", "generative-models", "font-generation", "mx-font", "iccv2021", "iccv21"], "description": "Official PyTorch implementation of MX-Font (Multiple Heads are Better than One: Few-shot Font Generation with Multiple Localized Experts) ICCV 2021"}
{"name": "allanyiin/trident", "full_name": "AllanYiin/trident", "topics": ["pytorch", "tensorflow", "deep-learning", "neural-network", "convolutional-networks"], "description": "Make pytorch and tensorflow two become one."}
{"name": "idiap/pkwrap", "full_name": "idiap/pkwrap", "topics": [], "description": "A pytorch wrapper for LF-MMI training and parallel training in Kaldi"}
{"name": "vita-group/gan-slimming", "full_name": "VITA-Group/GAN-Slimming", "topics": ["pytorch", "compression", "gan", "cyclegan"], "description": "[ECCV 2020] \"All-in-One GAN Compression by Unified Optimization\" by Haotao Wang, Shupeng Gui, Haichuan Yang, Ji Liu, and Zhangyang Wang"}
{"name": "paul007pl/mvp_benchmark", "full_name": "paul007pl/MVP_Benchmark", "topics": ["pointcloud", "benchmark", "mvp", "pointcloud-registration", "pointcloud-completion", "partial-point-clouds", "iccv2021", "pytorch"], "description": "MVP Benchmark for Multi-View Partial Point Cloud Completion and Registration"}
{"name": "erlemar/wheat", "full_name": "Erlemar/wheat", "topics": ["object-detection", "deep-learning", "pytorch", "pytorch-lightning", "hydra", "kaggle-competition", "torchvision"], "description": "Wheat Detection challenge on Kaggle"}
{"name": "rajcscw/nlp-gym", "full_name": "rajcscw/nlp-gym", "topics": ["nlp-tasks", "rl-agents", "gym-environment", "nlp"], "description": "NLPGym - A toolkit to develop RL agents to solve NLP tasks."}
{"name": "jinyeying/dc-shadownet-hard-and-soft-shadow-removal", "full_name": "jinyeying/DC-ShadowNet-Hard-and-Soft-Shadow-Removal", "topics": ["shadow-removal", "shadow", "deep-learning", "iccv-2021", "low-level-vision", "restoration"], "description": "[ICCV2021]DC-ShadowNet: Single-Image Hard and Soft Shadow Removal Using Unsupervised Domain-Classifier Guided Network, https://arxiv.org/abs/2207.10434"}
{"name": "yinboc/trans-inr", "full_name": "yinboc/trans-inr", "topics": ["implicit-neural-representation", "machine-learning", "meta-learning", "pytorch", "transformer"], "description": "Transformers as Meta-Learners for Implicit Neural Representations, in ECCV 2022"}
{"name": "algolzw/ebsr", "full_name": "Algolzw/EBSR", "topics": ["pytorch", "super-resolution"], "description": "Pytorch code for \"EBSR: Feature Enhanced Burst Super-Resolution with Deformable Alignment\", CVPRW 2021, 1st NTIRE (real data track)."}
{"name": "lucidrains/feedback-transformer-pytorch", "full_name": "lucidrains/feedback-transformer-pytorch", "topics": ["artifiical-intelligence", "deep-learning", "attention-mechanism", "transformer", "memory"], "description": "Implementation of Feedback Transformer in Pytorch"}
{"name": "project-dc/pygeneses", "full_name": "Project-DC/pygeneses", "topics": ["pytorch", "deep-learning", "artificial-agents", "artificial-intelligence", "reinforcement-learning", "hacktoberfest"], "description": "A PyTorch based DeepRL framework to train and study artificial species in bio-inspired environments."}
{"name": "waterzxj/unf", "full_name": "waterzxj/UNF", "topics": ["pytorch", "text-classification", "sequence-labeling", "torchtext"], "description": "UNF(Universal NLP Framework)"}
{"name": "ibm/fuse-med-ml", "full_name": "BiomedSciAI/fuse-med-ml", "topics": ["deep-learning", "machine-learning", "pytorch", "collaboration", "fuse-med-ml", "fusemedml", "fuse", "medical", "medical-imaging", "healthcare", "vision", "multimodality", "ai", "python", "cmmd", "isic", "ct", "stoic", "knight-challenge", "hacktoberfest"], "description": "A python framework accelerating ML based discovery in the medical field by encouraging code reuse. Batteries included :)"}
{"name": "gt4sd/gt4sd-core", "full_name": "GT4SD/gt4sd-core", "topics": ["machine-learning", "python", "deep-learning", "generative-models"], "description": "GT4SD, an open-source library to accelerate hypothesis generation in the scientific discovery process."}
{"name": "singhgautam/slate", "full_name": "singhgautam/slate", "topics": [], "description": "This is the official source code for SLATE. We provide the code for the model, the training code, and a dataset loader for the 3D Shapes dataset. This code is implemented in Pytorch."}
{"name": "prunetruong/gocor", "full_name": "PruneTruong/GOCor", "topics": [], "description": "Official Pytorch implementation of 'GOCor: Bringing Globally Optimized Correspondence Volumes into Your Neural Network' (NeurIPS 2020)"}
{"name": "tyiannak/deep_audio_features", "full_name": "tyiannak/deep_audio_features", "topics": [], "description": "Pytorch implementation of deep audio embedding calculation"}
{"name": "aphp/edsnlp", "full_name": "aphp/edsnlp", "topics": ["nlp", "medical", "text-mining", "clinical-data-warehouse", "french", "spacy"], "description": "EDS-NLP provides a set of spaCy components to extract information from clinical notes written in French."}
{"name": "amazon-research/meta-q-learning", "full_name": "amazon-science/meta-q-learning", "topics": ["deep-learning", "meta-learning", "reinforcement-learning", "multi-task-learning"], "description": "Code for the paper \"Meta-Q-Learning\"( ICLR 2020)"}
{"name": "wisdomify/wisdomify", "full_name": "wisdomify/wisdomify", "topics": ["bert", "reverse-dictionary", "proverbs", "pytorch", "nlp", "idioms", "education", "language"], "description": "A BERT-based reverse dictionary of Korean proverbs"}
{"name": "basilevh/occlusions-4d", "full_name": "basilevh/occlusions-4d", "topics": ["4d", "computer-vision", "cvpr2022", "machine-learning", "neural-fields", "occlusions", "point-cloud", "segmentation", "spatiotemporal", "tracking", "video", "object-permanence", "deep-learning", "implicit-representions", "scene-completion", "3d"], "description": "Revealing Occlusions with 4D Neural Fields (CVPR 2022 Oral) - Official Implementation"}
{"name": "martenlienen/torchode", "full_name": "martenlienen/torchode", "topics": ["deep-learning", "neural-ode", "pytorch"], "description": "A parallel ODE solver for PyTorch"}
{"name": "hsword/hetu", "full_name": "Hsword/Hetu", "topics": ["deep-learning", "distributed-systems"], "description": "A high-performance distributed deep learning system targeting large-scale and automated distributed training. If you have any interests, please visit/star/fork https://github.com/PKU-DAIR/Hetu"}
{"name": "enochkan/torch-metrics", "full_name": "enochkan/torch-metrics", "topics": ["pytorch", "machine-learning", "deep-learning", "metrics", "pytorch-implementation", "pytorch-cnn", "computer-vision", "torch-metrics"], "description": "Metrics for model evaluation in pytorch"}
{"name": "seewoo5/kt", "full_name": "seewoo5/KT", "topics": ["knowledge-tracing", "pytorch"], "description": "Knowledge Tracing Models with PyTorch"}
{"name": "cure-lab/deciwatch", "full_name": "cure-lab/DeciWatch", "topics": ["2d-human-pose", "3d-pose-estimation", "body-reconstruction", "efficient-inference", "human-pose-estimation", "3d-body-recovery", "deep-learning", "efficiency", "efficient-neural-networks", "pose-estimation", "pytorch", "eccv", "eccv2022"], "description": "This is an official implementation for \"DeciWatch: A Simple Baseline for 10x Efficient 2D and 3D Pose Estimation\" (ECCV 2022)"}
{"name": "mcg-nju/mmn", "full_name": "MCG-NJU/MMN", "topics": ["video-understanding", "temporal-grounding", "pytorch"], "description": "[AAAI 2022] Negative Sample Matters: A Renaissance of Metric Learning for Temporal Grounding"}
{"name": "computationalradiationphysics/neuralsolvers", "full_name": "ComputationalRadiationPhysics/NeuralSolvers", "topics": [], "description": "Neural network based solvers for partial differential equations and inverse problems :milky_way:. Implementation of physics-informed neural networks in pytorch. "}
{"name": "upskyy/squeezeformer", "full_name": "upskyy/Squeezeformer", "topics": ["asr", "pytorch", "speech-recognition", "squeezeformer"], "description": "PyTorch implementation of \"Squeezeformer: An Efficient Transformer for Automatic Speech Recognition\" (NeurIPS 2022)"}
{"name": "mdiephuis/simclr", "full_name": "mdiephuis/SimCLR", "topics": ["pytorch", "simclr", "contrastive-learning", "representation-learning", "unsupervised-learning"], "description": "Pytorch implementation of \"A Simple Framework for Contrastive Learning of Visual Representations\""}
{"name": "halbielee/eps", "full_name": "halbielee/EPS", "topics": ["weakly-supervised-learning", "weakly-supervised-segmentation", "cvpr2021", "eps", "pytorch"], "description": "Official PyTorch implementation of \"Railroad is not a Train: Saliency as Pseudo-pixel Supervision for Weakly Supervised Semantic Segmentation\", CVPR2021"}
{"name": "borhanmorphy/light-face-detection", "full_name": "borhanMorphy/fastface", "topics": ["facedetection", "pytorch", "pytorch-lightning", "edge-ai"], "description": "Light Face Detection using PyTorch Lightning"}
{"name": "ahmdtaha/knowledge_evolution", "full_name": "ahmdtaha/knowledge_evolution", "topics": ["python3", "pytorch", "deep-learning", "deep-neural-networks", "computer-vision", "machine-learning", "knowledge-distillation", "classification", "few-shot-learning", "slim-networks", "knowledge-evolution"], "description": "(CVPR-Oral 2021) PyTorch implementation of Knowledge Evolution approach and Split-Nets"}
{"name": "tri-ml/dgp", "full_name": "TRI-ML/dgp", "topics": ["machine-learning", "autonomous-driving", "pytorch", "data-management", "deep-learning"], "description": "ML Dataset Governance Policy for Autonomous Vehicle Datasets"}
{"name": "macderru/hyperdomainnet", "full_name": "MACderRu/HyperDomainNet", "topics": ["generative-adversarial-network", "neurips-2022", "stylegan2", "domain-adaptation"], "description": "Official Implementation for \"HyperDomainNet: Universal Domain Adaptation for Generative Adversarial Networks\" (NeurIPS 2022)"}
{"name": "clovaai/rainbow-memory", "full_name": "clovaai/rainbow-memory", "topics": [], "description": "Official pytorch implementation of Rainbow Memory (CVPR 2021)"}
{"name": "coldmanck/recovering-unbiased-scene-graphs", "full_name": "coldmanck/recovering-unbiased-scene-graphs", "topics": ["visual-relationship-detection", "scene-graph-generation", "pytorch", "deep-learning"], "description": "Official implementation of \"Recovering the Unbiased Scene Graphs from the Biased Ones\" (ACMMM 2021)"}
{"name": "aimagelab/vkd", "full_name": "aimagelab/VKD", "topics": ["deep-learning", "re-id", "knowledge-distillation", "eccv-2020"], "description": "PyTorch code for ECCV 2020 paper: \"Robust Re-Identification by Multiple Views Knowledge Distillation\""}
{"name": "jeya-maria-jose/transweather", "full_name": "jeya-maria-jose/TransWeather", "topics": ["image-restoration", "computer-vision", "low-level-vision", "deep-learning", "transformers", "pytorch", "deraining", "dehazing", "desnowing"], "description": "Pytorch Code for the paper TransWeather - CVPR 2022"}
{"name": "sujaykhandekar/automated-objects-removal-inpainter", "full_name": "sujaykhandekar/Automated-objects-removal-inpainter", "topics": ["inpainting", "semantic-segmentation", "deeplabv3", "artificial-intelligence", "computer-vision", "deep-learning", "edgeconnect"], "description": "Automated object remover Inpainter is a project that combines Semantic segmentation and EdgeConnect architectures with minor changes in order to remove specified object/s from list of 20 objects from all the input photos"}
{"name": "wesleyhsieh0806/c3-sl", "full_name": "WesleyHsieh0806/C3-SL", "topics": ["communication-efficient", "computer-vision", "deep-learning", "machine-learning", "split-learning"], "description": "C3-SL: Circular Convolution-Based Batch-Wise Compression for Communication-Efficient Split Learning (IEEE MLSP 2022)"}
{"name": "triton-inference-server/model_navigator", "full_name": "triton-inference-server/model_navigator", "topics": ["deep-learning", "gpu", "inference"], "description": "The Triton Model Navigator is a tool that provides the ability to automate the process of model deployment on the Triton Inference Server."}
{"name": "graykode/matorage", "full_name": "graykode/matorage", "topics": ["deep-learning", "storage-manager", "pytorch", "tensorflow"], "description": "Matorage is tensor(multidimensional matrix) object storage manager for deep learning framework(Pytorch, Tensorflow V2, Keras)"}
{"name": "jimmyyhwu/spatial-intention-maps", "full_name": "jimmyyhwu/spatial-intention-maps", "topics": ["spatial-intention-maps", "mobile-manipulation", "robotics", "multi-agent-reinforcement-learning", "deep-reinforcement-learning", "dqn", "pybullet", "pytorch", "anki-vector", "spatial-action-maps"], "description": "Learning multi-agent robotic mobile manipulation with deep reinforcement learning"}
{"name": "julesbelveze/bert-squeeze", "full_name": "JulesBelveze/bert-squeeze", "topics": ["bert", "distillation", "transformers", "lstm", "nlp", "pytorch-lightning", "pruning", "quantization", "deebert", "fastbert", "theseus"], "description": "\ud83d\udee0\ufe0f  Tools for Transformers compression using PyTorch Lightning \u26a1"}
{"name": "dzld00/pytorch-manifold-matching", "full_name": "dzld00/pytorch-manifold-matching", "topics": [], "description": "[ICCV 2021] A Pytorch implementation of \"Manifold Matching via Deep Metric Learning for Generative Modeling\" "}
{"name": "kentonishi/torch-pitch-shift", "full_name": "KentoNishi/torch-pitch-shift", "topics": ["pytorch", "pitch-shift", "torch", "torchaudio", "augmentation", "audio-augmentation", "sound-processing", "gpu-support"], "description": "Pitch-shift audio clips quickly with PyTorch (CUDA supported)! Additional utilities for searching efficient transformations are included."}
{"name": "lucidrains/n-grammer-pytorch", "full_name": "lucidrains/n-grammer-pytorch", "topics": ["artificial-intelligence", "deep-learning", "transformers", "n-gram", "memory"], "description": "Implementation of N-Grammer, augmenting Transformers with latent n-grams, in Pytorch"}
{"name": "ntt123/viettts", "full_name": "NTT123/vietTTS", "topics": ["tts-engines", "deep-learning", "tacotron", "vocoder", "hifi-gan", "vietnam", "vietnamese", "text-to-speech"], "description": "Vietnamese Text to Speech library"}
{"name": "zhangzhengde0225/cdnet", "full_name": "zhangzhengde0225/CDNet", "topics": ["object-detection", "zebra-crossing", "crosswalk-detection", "deep-learning", "jetson-nano", "nvidia", "zebra", "crosswalk"], "description": "The tutorials, datasets and source codes of the crosswalk detection (zebra crossing detection) network, which is robust in real scenes and real-time in Jetson nano. cross. detect. pedestrian."}
{"name": "runinho/pytorch-cutpaste", "full_name": "Runinho/pytorch-cutpaste", "topics": ["pytorch", "anomaly-detection", "computer-vision-algorithms", "mvtec-ad", "cutpaste"], "description": "unoffical and work in progress PyTorch implementation of CutPaste"}
{"name": "chinmaynehate/dfspot-deepfake-recognition", "full_name": "chinmaynehate/DFSpot-Deepfake-Recognition", "topics": ["deepfakes", "deepfakes-classification", "deep-learning", "deep-neural-networks", "siamese-network", "triplet-loss", "efficientnet", "ensemble-learning", "transfer-learning", "pytorch", "deepfake-detection-challenge", "faceforensics", "fake-news", "vision-transformers"], "description": "Determine whether a given video sequence has been manipulated or synthetically generated"}
{"name": "explosion/spacy-experimental", "full_name": "explosion/spacy-experimental", "topics": ["spacy", "nlp", "natural-language-processing", "machine-learning", "tokenizer", "lemmatizer", "spacy-pipeline", "spacy-extension"], "description": "\ud83e\uddea Cutting-edge experimental spaCy components and features"}
{"name": "huangtinglin/mixgcf", "full_name": "huangtinglin/MixGCF", "topics": ["graph-neural-network", "recommender-system", "negative-sampling", "pytorch", "information-retrieval", "network-embedding"], "description": "MixGCF: An Improved Training Method for Graph Neural Network-based Recommender Systems, KDD2021"}
{"name": "otaheri/chamfer_distance", "full_name": "otaheri/chamfer_distance", "topics": ["chamfer-distance", "chamferloss", "pytorch"], "description": "Implementation of the Chamfer Distance as a module for PyTorch"}
{"name": "yzy-stack/ultra_fast_lane_detection_tensorrt", "full_name": "YZY-stack/Ultra_Fast_Lane_Detection_TensorRT", "topics": [], "description": "An ultra fast tiny model for lane detection, using onnx_parser, TensorRTAPI, torch2trt to accelerate. our model support for int8, dynamic input and profiling. (Nvidia-Alibaba-TensoRT-hackathon2021)"}
{"name": "zhaozhengchen/recam", "full_name": "zhaozhengChen/ReCAM", "topics": ["pytorch", "semantic-segmentation", "cvpr2022"], "description": "The official code of CVPR 2022 paper (Class Re-Activation Maps for Weakly-Supervised Semantic Segmentation)."}
{"name": "yeh-yu-hsuan/bifuse", "full_name": "yuhsuanyeh/BiFuse", "topics": ["depth", "depth-estimation", "monocular-depth-estimation", "spherical", "deep-learning", "computer-vision", "cvpr2020", "360-camera", "pytorch"], "description": "[CVPR2020] BiFuse: Monocular 360 Depth Estimation via Bi-Projection Fusion"}
{"name": "bshall/tacotron", "full_name": "bshall/Tacotron", "topics": ["speech-synthesis", "text-to-speech", "tacotron", "pytorch", "tts", "attention-mechanism"], "description": "A PyTorch implementation of Location-Relative Attention Mechanisms For Robust Long-Form Speech Synthesis"}
{"name": "amazon-science/refined", "full_name": "amazon-science/ReFinED", "topics": ["entity-extraction", "entity-linking", "entity-resolution", "nlp", "pytorch"], "description": "ReFinED is an efficient and accurate entity linking (EL) system."}
{"name": "lartpang/hdfnet", "full_name": "lartpang/HDFNet", "topics": ["eccv", "eccv2020", "saliency-detection", "salient-object-detection", "image-processing", "segmentation", "imagesegmentation", "imageprocessing", "pytorch", "saliency"], "description": "(ECCV 2020) Hierarchical Dynamic Filtering Network for RGB-D Salient Object Detection"}
{"name": "juglab/fourierimagetransformer", "full_name": "juglab/FourierImageTransformer", "topics": ["transformer", "computer-vision", "image-processing"], "description": "Fourier Image Transformer (FIT) can solve relevant image analysis tasks in Fourier space."}
{"name": "hlesmqh/ws3d", "full_name": "hlesmqh/WS3D", "topics": ["3d-detection", "eccv2020", "point-cloud-detection", "point-cloud", "weakly-supervised-learning", "3d-annotation", "pointrcnn", "vehicle-detection", "bird-eye-view", "lidar", "cascade-inference", "ws3d", "3d-annotator", "pytorch"], "description": "Official version of 'Weakly Supervised 3D object detection from Lidar Point Cloud'(ECCV2020)"}
{"name": "lucidrains/recurrent-interface-network-pytorch", "full_name": "lucidrains/recurrent-interface-network-pytorch", "topics": ["artificial-intelligence", "deep-learning", "image-generation", "video-generation", "latents", "denoising-diffusion", "attention-mechanisms"], "description": "Implementation of Recurrent Interface Network (RIN), for highly efficient generation of images and video without cascading networks, in Pytorch"}
{"name": "jingliang-duan/distributional-soft-actor-critic", "full_name": "Jingliang-Duan/Distributional-Soft-Actor-Critic", "topics": ["reinforcement-learning", "pytorch"], "description": null}
{"name": "amazon-science/glass-text-spotting", "full_name": "amazon-science/glass-text-spotting", "topics": ["attention", "deep-learning", "detection", "ocr", "text-spotting"], "description": "Official implementation for \"GLASS: Global to Local Attention for Scene-Text Spotting\" (ECCV'22)"}
{"name": "lucidrains/mlm-pytorch", "full_name": "lucidrains/mlm-pytorch", "topics": ["artificial-intelligence", "deep-learning", "unsupervised-learning", "pre-training", "transformers"], "description": "An implementation of masked language modeling for Pytorch, made as concise and simple as possible"}
{"name": "circuitnet/circuitnet", "full_name": "circuitnet/CircuitNet", "topics": ["dataset", "deep-learning", "eda", "machine-learning", "congestion-prediction", "drc-violation", "ir-drop"], "description": "CircuitNet: An Open-Source Dataset for Machine Learning Applications in Electronic Design Automation (EDA)"}
{"name": "wuyxin/dir-gnn", "full_name": "Wuyxin/DIR-GNN", "topics": ["graph-neural-networks", "pytorch", "causality", "generalization", "causal-discovery", "invariant-learning", "iclr2022", "interpretability"], "description": "Official code of \"Discovering Invariant Rationales for Graph Neural Networks\" (ICLR 2022)"}
{"name": "zezhishao/basicts", "full_name": "zezhishao/BasicTS", "topics": ["time-series", "pytorch", "traffic-forecasting", "benchmarking", "deep-learning"], "description": "An Open Source Standard Time Series Forecasting Benchmark."}
{"name": "lxc86739795/human_vehicle_parsing_platform", "full_name": "lxc86739795/human_vehicle_parsing_platform", "topics": ["human", "person", "vehicle", "parsing", "pytorch", "codebase", "segmentation", "veri776", "vehicleid", "veri-wild"], "description": "A pytorch codebase for human parsing and vehicle parsing "}
{"name": "by2101/openasr", "full_name": "by2101/OpenASR", "topics": ["speech", "speech-recognition", "speech-to-text", "speechrecognition", "speech-recognizer", "transformer", "las", "end2end", "asr"], "description": "A pytorch based end2end speech recognition system."}
{"name": "lifebeyondexpectations/eccv22-pointmixer", "full_name": "LifeBeyondExpectations/ECCV22-PointMixer", "topics": ["eccv2022", "mlp-mixer", "point-cloud", "transformer", "3d-reconstruction", "3d-semantic-segmentation", "point-cloud-reconstruction", "3d-object-classification"], "description": "[ECCV 2022] Official pytorch implementation of the paper, \"PointMixer: MLP-Mixer for Point Cloud Understanding\""}
{"name": "mcg-nju/rtd-action", "full_name": "MCG-NJU/RTD-Action", "topics": ["transformer", "temporal-action-localization", "temporal-action-proposals"], "description": "[ICCV 2021] Relaxed Transformer Decoders for Direct Action Proposal Generation"}
{"name": "radekd91/emoca", "full_name": "radekd91/emoca", "topics": ["computer-vision", "face-reconstruction", "emotion-recognition", "cvpr", "pytorch", "pytorch-lightning", "deep-learning", "3d-reconstruction", "3d-graphics", "3d-vision", "face-alignment", "morphable-model", "face-model", "flame-fitting", "face", "3d-face-alignment", "3d-face-reconstruction"], "description": "Official repository accompanying a CVPR 2022 paper EMOCA: Emotion Driven Monocular Face Capture And Animation. EMOCA takes a single image of a face as input and produces a 3D reconstruction. EMOCA sets the new standard on reconstructing highly emotional images in-the-wild"}
{"name": "fhamborg/newsmtsc", "full_name": "fhamborg/NewsMTSC", "topics": ["news-articles", "dataset", "tsc", "cuda", "pytorch", "deep-learning", "text-classification", "sentiment-analysis", "sentiment-classification"], "description": "Target-dependent sentiment classification in news articles reporting on political events. Includes a high-quality data set of over 11k sentences and a state-of-the-art classification model."}
{"name": "intersun/lightningdot", "full_name": "intersun/LightningDOT", "topics": ["pytorch", "transformers", "vision-and-language", "image-retrieval", "naacl2021"], "description": "source code and pre-trained/fine-tuned checkpoint for NAACL 2021 paper LightningDOT "}
{"name": "troublemaker-r/chinese_coreference_resolution", "full_name": "troublemaker-r/Chinese_Coreference_Resolution", "topics": ["python", "pytorch", "chinese-coreference-resolution", "natural-language-processing", "spanbert"], "description": "\u57fa\u4e8eSpanBert\u7684\u4e2d\u6587\u6307\u4ee3\u6d88\u89e3\uff0cpytorch\u5b9e\u73b0"}
{"name": "rayguan97/m3detr", "full_name": "rayguan97/M3DETR", "topics": ["point-cloud", "object-detection", "3d-object-detection", "transformer", "deep-learning", "waymo-open-dataset", "kitti-dataset"], "description": "Code base for M3DeTR: Multi-representation, Multi-scale, Mutual-relation 3D Object Detection with Transformers"}
{"name": "lucidrains/jepa-pytorch", "full_name": "lucidrains/JEPA-pytorch", "topics": ["artificial-general-intelligence"], "description": "Implementation of JEPA, Yann LeCun's vision of how AGI would be built, in Pytorch"}
{"name": "esa/torchquad", "full_name": "esa/torchquad", "topics": ["python", "gpu", "pytorch", "torchquad", "numerical-integration", "multidimensional-integration", "integration", "automatic-differentiation", "high-performance-computing", "monte-carlo-integration", "vegas", "vegas-enhanced", "machine-learning"], "description": "Numerical integration in arbitrary dimensions on the GPU using PyTorch / TF / JAX"}
{"name": "thetobysiu/deepstory", "full_name": "thetobysiu/deepstory", "topics": ["pytorch", "dctts", "dc-tts", "deep-learning", "jquery", "flask", "gpt-2", "gpt2", "witcher-3", "witcher3", "deep-fake", "fan-fiction"], "description": " Deepstory turns a text/generated text into a video where the character is animated to speak your story using his/her voice."}
{"name": "affjljoo3581/gpt2", "full_name": "affjljoo3581/GPT2", "topics": ["pytorch", "nlp", "language-model", "gpt2", "natural-language-processing", "natural-language-generation", "transformer"], "description": "PyTorch Implementation of OpenAI GPT-2"}
{"name": "zjunlp/mkgformer", "full_name": "zjunlp/MKGformer", "topics": ["mkgformer", "kg", "knowledge-graph", "multimodal", "mkg", "relation-extraction", "kgc", "link-prediction", "ner", "transformer", "mnre", "sigir2022", "pytorch", "former", "dataset"], "description": "Code for the SIGIR 2022 paper \"Hybrid Transformer with Multi-level Fusion for Multimodal Knowledge Graph Completion.\""}
{"name": "xionghuichen/rlassistant", "full_name": "xionghuichen/RLAssistant", "topics": ["reinforcement-learning", "pytorch", "tensorflow", "experiment-tracker", "training-tracking"], "description": "RLA is a tool for managing your RL experiments automatically"}
{"name": "yxuansu/tacl", "full_name": "yxuansu/TaCL", "topics": ["bert", "pretraining", "contrastive-learning", "nlp", "language-model", "ner", "text-classification"], "description": "[NAACL'22] TaCL: Improving BERT Pre-training with Token-aware Contrastive Learning"}
{"name": "jac99/minklocmultimodal", "full_name": "jac99/MinkLocMultimodal", "topics": ["computer-vision", "deep-learning", "point-cloud", "metric-learning", "place-recognition", "3d-vision", "3d-convolutional-network", "minkowski-engine", "multimodal"], "description": "MinkLoc++: Lidar and Monocular Image Fusion for Place Recognition"}
{"name": "lucidrains/linformer", "full_name": "lucidrains/linformer", "topics": ["artificial-intelligence", "deep-learning", "attention-mechanism", "transformer"], "description": "Implementation of Linformer for Pytorch"}
{"name": "microsoft/adamix", "full_name": "microsoft/AdaMix", "topics": ["adapter", "nlp", "pytorch", "parameter-efficient", "bert", "glue", "nlu", "roberta", "dart", "gpt-2", "nlg", "webnlg"], "description": "This is the implementation of the paper AdaMix: Mixture-of-Adaptations for Parameter-efficient Model Tuning (https://arxiv.org/abs/2205.12410). "}
{"name": "vaseline555/federated-averaging-pytorch", "full_name": "vaseline555/Federated-Averaging-PyTorch", "topics": ["federated-learning", "fedavg", "deep-learning", "pytorch", "federated-averaging"], "description": "An unofficial PyTorch implementation of a federated learning algorithm, FedAvg."}
{"name": "ajhamdi/mvtn", "full_name": "ajhamdi/MVTN", "topics": ["pytorch", "deep-learning", "point-cloud", "iccv2021", "3d", "3d-models", "classification"], "description": "pytorch implementation of the ICCV'21 paper \"MVTN: Multi-View Transformation Network for 3D Shape Recognition\""}
{"name": "rose-stl-lab/torchts", "full_name": "Rose-STL-Lab/torchTS", "topics": ["time-series", "machine-learning", "pytorch", "deep-learning", "pytorch-lightning"], "description": "Time series forecasting with PyTorch"}
{"name": "sithu31296/sota-backbones", "full_name": "sithu31296/sota-backbones", "topics": ["image-classification", "pytorch", "vision-transformer", "mlp-mixer", "sota", "object-recognition", "imagenet", "cnn", "transformer", "mlp", "deep-learning", "quantization"], "description": "A collection of SOTA Image Classification Models in PyTorch"}
{"name": "cbica/gandlf", "full_name": "mlcommons/GaNDLF", "topics": ["deep-learning", "regression", "classification", "segmentation", "data-augmentation", "biomedical-image-processing", "medical-imaging", "framework", "clinical-workflow", "machine-learning", "medical-image-analysis", "medical-informatics", "pytorch"], "description": "A generalizable application framework for segmentation, regression, and classification using PyTorch"}
{"name": "peijiyang/bert-bilstm-crf-ner-pytorch", "full_name": "hertz-pj/BERT-BiLSTM-CRF-NER-pytorch", "topics": ["named-entity-recognition", "chinese", "pytorch", "bert", "bilstm-crf"], "description": "Pytorch BERT-BiLSTM-CRF For NER"}
{"name": "okankop/driver-anomaly-detection", "full_name": "okankop/Driver-Anomaly-Detection", "topics": ["real-time-demo", "cnn", "contrastive-learning", "driver-anomaly-detection-dataset", "dad", "pretrained-models", "deep-neural-networks"], "description": "PyTorch Implementation of \"Driver Anomaly Detection: A Dataset and Contrastive Learning Approach\", codes and pretrained models."}
{"name": "dingmyu/dapn", "full_name": "dingmyu/DAPN", "topics": [], "description": "A pytorch implementation of \"Domain-Adaptive Few-Shot Learning\""}
{"name": "zudi-lin/rcan-it", "full_name": "zudi-lin/rcan-it", "topics": ["super-resolution", "deep-learning", "optimization"], "description": "Revisiting RCAN: Improved Training for Image Super-Resolution"}
{"name": "yhhhli/brecq", "full_name": "yhhhli/BRECQ", "topics": [], "description": "Pytorch implementation of BRECQ, ICLR 2021"}
{"name": "alibaba-nlp/multilangstructurekd", "full_name": "Alibaba-NLP/MultilangStructureKD", "topics": ["acl2020", "ner", "sequence-labeling", "multilingual", "bert", "knowledge-distillation", "pytorch", "nlp", "dependency-parsing", "enhanced-universal-dependency", "acl2019", "iwpt2020", "mrp", "semantic-dependency-parsing"], "description": "[ACL 2020] Structure-Level Knowledge Distillation For Multilingual Sequence Labeling"}
{"name": "edreismd/convirt-pytorch", "full_name": "edreisMD/ConVIRT-pytorch", "topics": [], "description": "Contrastive Learning Representations for Images and Text Pairs. Pytorch implementation of ConVIRT Paper."}
{"name": "ajitrajasekharan/unsupervised_ner", "full_name": "ajitrajasekharan/unsupervised_NER", "topics": ["nlp", "natural-language-processing", "ner", "self-supervised-learning"], "description": "Self-supervised NER prototype - updated version (69 entity types - 17 broad entity groups). Uses pretrained BERT models with no fine tuning. State-of-art performance on 3 biomedical datasets"}
{"name": "hannesstark/3dinfomax", "full_name": "HannesStark/3DInfomax", "topics": ["graph-representation-learning", "self-supervised-learning", "graph", "molecules", "3d", "pytorch-geometric", "dgl-graph", "gnn", "graph-neural-networks"], "description": "Making self-supervised learning work on molecules by using their 3D geometry to pre-train GNNs. Implemented in DGL and Pytorch Geometric."}
{"name": "lucidrains/ddpm-proteins", "full_name": "lucidrains/ddpm-proteins", "topics": ["artificial-intelligence", "deep-learning", "protein-structure", "generative-model"], "description": "A denoising diffusion probabilistic model (DDPM) tailored for conditional generation of protein distograms"}
{"name": "uason-chen/ctr-gcn", "full_name": "Uason-Chen/CTR-GCN", "topics": ["pytorch", "deep-learning"], "description": "[ICCV2021] Official code for \"Channel-wise Topology Refinement Graph Convolution for Skeleton-Based Action Recognition\""}
{"name": "sebischair/lbl2vec", "full_name": "sebischair/Lbl2Vec", "topics": ["natural-language-processing", "word-embeddings", "document-embeddings", "label-embeddings", "unsupervised-classification", "nlp", "machine-learning", "text-classification", "python", "unsupervised-document-retrieval"], "description": "Lbl2Vec learns jointly embedded label, document and word vectors to retrieve documents with predefined topics from an unlabeled document corpus."}
{"name": "cyang0515/noncuboidroom", "full_name": "CYang0515/NonCuboidRoom", "topics": ["computer-vision", "deep-learning", "scene-understanding", "room-layout"], "description": "Learning to Reconstruct 3D Non-Cuboid Room Layout from a Single RGB Image"}
{"name": "fakufaku/torchiva", "full_name": "fakufaku/torchiva", "topics": [], "description": "Blind source separation with independent vector analysis family of algorithm in torch"}
{"name": "chendelong1999/virtualconductor", "full_name": "ChenDelong1999/VirtualConductor", "topics": ["deep-learning", "music-information-retrieval", "motion-generation"], "description": "Official implementation of \"Self-Supervised Music-Motion Synchronization Learning for Music-Driven Conducting Motion Generation\"."}
{"name": "laihoe/did-it-spill", "full_name": "LaihoE/did-it-spill", "topics": ["deep-learning", "pytorch", "computer-vision", "data-science", "semantic-similarity", "time-series"], "description": "Check if you have training samples in your test set"}
{"name": "mdeib/berkeley-deep-rl-pytorch-solutions", "full_name": "mdeib/berkeley-deep-RL-pytorch-solutions", "topics": ["cs285", "reinforcement-learning", "pytorch-rl"], "description": "Pytorch solutions for UC Berkeley's cs285 assignments"}
{"name": "xiayouran/visutvm", "full_name": "xiayouran/VisuTVM", "topics": ["cpp", "python3", "tvm", "visualization", "visualization-tools", "relay-ir", "tvm-relay-ir", "visu-relay-ir", "visu-tvm", "neural-network", "neural-network-visualization"], "description": "TVM Relay IR Visualization Tool (TVM \u53ef\u89c6\u5316\u5de5\u5177)"}
{"name": "surajdonthi/multi-camera-person-re-identification", "full_name": "SurajDonthi/Multi-Camera-Person-Re-Identification", "topics": ["computer-vision", "person-reidentification", "pytorch", "pytorch-lightning", "spatial-temporal", "convolutional-neural-networks", "multi-camera-tracking", "mtmct", "dukemtmc-reid", "market-1501"], "description": "State-of-the-art model for person re-identification in Multi-camera Multi-Target Tracking. Benchmarked on Market-1501 and DukeMTMTC-reID datasets."}
{"name": "nju-websoft/mukg", "full_name": "nju-websoft/muKG", "topics": ["entity-alignment", "entity-typing", "link-prediction", "representation-learning", "multi-source-knowledge-graphs", "deep-learning", "pytorch"], "description": "\u03bcKG: A Library for Multi-source Knowledge Graph Embeddings and Applications, ISWC 2022"}
{"name": "ktrk115/const_layout", "full_name": "ktrk115/const_layout", "topics": ["layoutgan", "pytorch", "augmented-lagrangian-method", "latent-space", "generative-adversarial-network", "pretrained-models", "cma-es"], "description": "Official implementation of the MM'21 paper \"Constrained Graphic Layout Generation via Latent Optimization\" (LayoutGAN++, CLG-LO, and Layout evaluation)"}
{"name": "v-iashin/mdvc", "full_name": "v-iashin/MDVC", "topics": ["pytorch", "transformer", "multi-modal", "dense-video-captioning", "cvpr-workshop", "audio", "visual", "speech", "i3d", "activitynet-captions"], "description": "PyTorch implementation of Multi-modal Dense Video Captioning (CVPR 2020 Workshops)"}
{"name": "zhangbaijin/constractive-learning-shadow-removal", "full_name": "zhangbaijin/CB-MemoryNet", "topics": ["shadow-removal", "cloud-removal", "image-restoration", "pytorch"], "description": "Code for paper: CB-MemoryNet:Contrastive balance learning memory net for image restoration(cloud,rain,shadow removal)) "}
{"name": "pangzecheung/dual-task-pose-transformer-network", "full_name": "PangzeCheung/Dual-task-Pose-Transformer-Network", "topics": ["pose-guided-person-image-generation", "image-generation", "person-image-generation", "pose-transfer", "cvpr2022", "dual-task-correlation", "dual-task-pose-transformer-network", "gan", "deepfashion", "market1501", "pytorch", "transformer"], "description": "[CVPR 2022] Exploring Dual-task Correlation for Pose Guided Person Image Generation"}
{"name": "hkchengrex/scribble-to-mask", "full_name": "hkchengrex/Scribble-to-Mask", "topics": ["computer-vision", "deep-learning", "pytorch", "segmentation", "interactive-segmentation", "cvpr2021"], "description": "[CVPR 2021] MiVOS - Scribble to Mask module"}
{"name": "sherylhyx/pytorch_geometric_signed_directed", "full_name": "SherylHYX/pytorch_geometric_signed_directed", "topics": ["gnn", "graph-neural-netowrks", "signed-networks", "directed-networks", "pytorch-geometric", "pytorch", "python", "machine-learning", "deep-learning", "networks"], "description": "PyTorch Geometric Signed Directed is a signed/directed graph neural network extension library for PyTorch Geometric."}
{"name": "alibaba-nlp/multi-cpr", "full_name": "Alibaba-NLP/Multi-CPR", "topics": ["dataset", "passage-retrieval", "dense-retrieval", "passage-ranking", "pytorch", "question-answering", "text-ranking"], "description": "[SIGIR 2022] Multi-CPR: A Multi Domain Chinese Dataset for Passage Retrieval"}
{"name": "pykt-team/pykt-toolkit", "full_name": "pykt-team/pykt-toolkit", "topics": ["deep-learning", "dkt", "gkt", "knowledge-tracing", "knowledge-tracing-models"], "description": "pyKT: A Python Library to Benchmark Deep Learning based Knowledge Tracing Models"}
{"name": "intfloat/simkgc", "full_name": "intfloat/SimKGC", "topics": ["knowledge-graph-completion", "contrastive-learning", "natural-language-processing"], "description": "ACL 2022, SimKGC: Simple Contrastive Knowledge Graph Completion with Pre-trained Language Models"}
{"name": "snakers4/russian_stt_text_normalization", "full_name": "snakers4/russian_stt_text_normalization", "topics": ["speech", "russian-language", "python3", "pytorch", "torchscript", "text-normalization", "speech-to-text"], "description": "Russian text normalization pipeline for speech-to-text and other applications based on tagging s2s networks"}
{"name": "iliasprc/covidnet", "full_name": "iliasprc/COVIDNet", "topics": ["python3", "pytorch", "pytorch-implementation", "covid-19", "xray"], "description": "PyTorch implementation of COVID-Net https://github.com/lindawangg/COVID-Net"}
{"name": "antoinetheb/rnn-rl", "full_name": "AntoineTheb/RNN-RL", "topics": ["reinforcement-learning", "pytorch", "recurrent-neural-networks"], "description": "Experiments with reinforcement learning and recurrent neural networks"}
{"name": "omerbt/splice", "full_name": "omerbt/Splice", "topics": ["generative-models", "vision-transformer", "splice", "image-translation", "style-transfer", "single-image-generation", "single-image", "cvpr2022"], "description": "Official Pytorch Implementation for \"Splicing ViT Features for Semantic Appearance Transfer\" presenting \"Splice\" (CVPR 2022 Oral)"}
{"name": "vita-epfl/s-attack", "full_name": "vita-epfl/s-attack", "topics": ["adversarial-attacks", "human-behavior-understanding", "human-trajectory-prediction", "deep-learning", "vehicle-trajectory-prediction", "robustness"], "description": "[CVPR 2022] S-attack library. Official implementation of two papers \"Vehicle trajectory prediction works, but not everywhere\" and \"Are socially-aware trajectory prediction models really socially-aware?\"."}
{"name": "nayeemrizve/ups", "full_name": "nayeemrizve/ups", "topics": ["pseudo-labeling", "semi-supervised-learning", "uncertainty", "calibration", "pytorch"], "description": "\"In Defense of Pseudo-Labeling: An Uncertainty-Aware Pseudo-label Selection Framework for Semi-Supervised Learning\" by Mamshad Nayeem Rizve, Kevin Duarte, Yogesh S Rawat, Mubarak Shah (ICLR 2021)"}
{"name": "seongmin-kye/mct", "full_name": "seongmin-kye/MCT", "topics": ["few-shot-learning", "meta-learning", "transductive-learning"], "description": "Pytorch implementation of Meta-Learned Confidence for Few-shot Learning"}
{"name": "feymanpriv/pymetric", "full_name": "feymanpriv/pymetric", "topics": ["metric-learning", "classification", "pytorch", "retrieval"], "description": "pytorch metric learning tools and pycls"}
{"name": "eezkni/uegan", "full_name": "eezkni/UEGAN", "topics": ["enhancement-and-restoration", "gan", "unsupervised-learning", "generative-adversarial-network", "compter-vision", "image-manipulation"], "description": "[TIP2020] Pytorch implementation of \"Towards Unsupervised Deep Image Enhancement with Generative Adversarial Network\""}
{"name": "dahyun-kang/ifsl", "full_name": "dahyun-kang/ifsl", "topics": ["computer-vision", "deep-learning", "few-shot-learning", "few-shot-segmentation", "pytorch", "cvpr2022", "few-shot-classification", "pytorch-lightning"], "description": "[CVPR'22] Official PyTorch implementation of Integrative Few-Shot Learning for Classification and Segmentation"}
{"name": "vita-group/ultra-data-efficient-gan-training", "full_name": "VITA-Group/Ultra-Data-Efficient-GAN-Training", "topics": ["gan", "generative-adversarial-network", "lottery-ticket-hypothesis", "data-efficient", "augmentation", "data-efficient-gan-training"], "description": "[NeurIPS'21] \"Ultra-Data-Efficient GAN Training: Drawing A Lottery Ticket First, Then Training It Toughly\", Tianlong Chen, Yu Cheng, Zhe Gan, Jingjing Liu, Zhangyang Wang "}
{"name": "tvs-ai/pytorch_rppgs", "full_name": "remotebiosensing/rppg", "topics": ["deepphys", "mtts", "physnet", "pytorch", "deep-learning", "rppg", "remote-ppg", "blood-pressure", "bp", "ppg2abp"], "description": "implement remote-ppg (rppg;fppg) & PPG 2 ABP model  using pytorch"}
{"name": "yifan123/ic-conv", "full_name": "yifan123/IC-Conv", "topics": [], "description": "Official pytorch implementation of paper \"Inception Convolution with Efficient Dilation Search\" (CVPR 2021 Oral)."}
{"name": "ga642381/fastspeech2", "full_name": "ga642381/FastSpeech2", "topics": ["text-to-speech", "fastspeech2", "pytorch", "multi-speaker-tts", "melgan", "tts", "waveglow"], "description": "Multi-Speaker Pytorch FastSpeech2: Fast and High-Quality End-to-End Text to Speech :fist:"}
{"name": "akshitac8/tfvaegan", "full_name": "akshitac8/tfvaegan", "topics": ["zero-shot-learning", "image-classification", "f-vaegan", "clswgan", "action-recognition", "eccv2020", "gzsl", "gan", "zsl", "pytorch-gan", "feature-synthesis", "eccv-2020", "pytorch-implementation", "pytorch"], "description": "[ECCV 2020] Official Pytorch implementation for \"Latent Embedding Feedback and Discriminative Features for Zero-Shot Classification\". SOTA results for ZSL and GZSL"}
{"name": "crs4/atlantanet", "full_name": "crs4/AtlantaNet", "topics": ["3d-reconstruction", "computer-vision", "indoor-scenes", "panorama-image"], "description": "Pytorch implementation of the ECCV 2020 paper: AtlantaNet: Inferring the 3D Indoor Layout from a Single 360 Image beyond the Manhattan World Assumption"}
{"name": "bytedance/twist", "full_name": "bytedance/TWIST", "topics": ["self-supervised-learning", "deep-learning", "pretraining", "computer-vision", "twist"], "description": "Official codes: Self-Supervised Learning by Estimating Twin Class Distribution "}
{"name": "abrazinskas/copycat-abstractive-opinion-summarizer", "full_name": "abrazinskas/Copycat-abstractive-opinion-summarizer", "topics": ["summarization", "machine-learning", "natural-language-processing", "natural-language-generation", "deep-learning", "algorithms", "data-science", "abstractive-text-summarization", "abstractive-summarization", "reviews", "amazon", "yelp", "opinion-summarization", "vae"], "description": "ACL 2020 Unsupervised Opinion Summarization as Copycat-Review Generation"}
{"name": "thudm/grb", "full_name": "THUDM/grb", "topics": ["adversarial-attacks", "graph-neural-networks", "machine-learning", "deep-learning", "pytorch"], "description": "Graph Robustness Benchmark: A scalable, unified, modular, and reproducible benchmark for evaluating the adversarial robustness of Graph Machine Learning."}
{"name": "csyanbin/scot", "full_name": "csyanbin/SCOT", "topics": ["semantic-correspondence", "pytorch", "optimal-transport"], "description": "CVPR 2020, Semantic Correspondence as an Optimal Transport Problem, Pytorch Implementation. "}
{"name": "rick-mccoy/reformer-pytorch", "full_name": "Rick-McCoy/Reformer-pytorch", "topics": [], "description": "Implements Reformer: The Efficient Transformer in pytorch."}
{"name": "tianxiangzhao/graphsmote", "full_name": "TianxiangZhao/GraphSmote", "topics": [], "description": "Pytorch implementation of paper 'GraphSMOTE: Imbalanced Node Classification on Graphs with Graph Neural Networks' to appear on WSDM2021"}
{"name": "lucidrains/halonet-pytorch", "full_name": "lucidrains/halonet-pytorch", "topics": ["artificial-intelligence", "deep-learning", "attention-mechanism", "vision"], "description": "Implementation of the \ud83d\ude07 Attention layer from the paper, Scaling Local Self-Attention For Parameter Efficient Visual Backbones"}
{"name": "octoml/apple-m1-bert", "full_name": "octoml/Apple-M1-BERT", "topics": ["machine-learning", "m1-mac", "tensorflow"], "description": "3X speedup over Apple\u2019s TensorFlow plugin by using Apache TVM on M1"}
{"name": "huawei-noah/multi_hyp_cc", "full_name": "huawei-noah/multi_hyp_cc", "topics": ["color-constancy", "cvpr2020", "convolutional-neural-networks", "pytorch", "whitebalance", "cvpr"], "description": "[CVPR2020] A Multi-Hypothesis Approach to Color Constancy"}
{"name": "bshall/vectorquantizedcpc", "full_name": "bshall/VectorQuantizedCPC", "topics": ["pytorch", "voice-conversion", "contrastive-predictive-coding", "vq-vae", "speech-synthesis", "zerospeech", "acoustic-features"], "description": "Vector-Quantized Contrastive Predictive Coding for Acoustic Unit Discovery and Voice Conversion"}
{"name": "vinairesearch/blur-kernel-space-exploring", "full_name": "VinAIResearch/blur-kernel-space-exploring", "topics": ["pytorch", "deep-learning", "python", "computer-vision", "deblurring"], "description": "Exploring Image Deblurring via Blur Kernel Space (CVPR'21)"}
{"name": "mattdl/clsurvey", "full_name": "Mattdl/CLsurvey", "topics": ["continual-learning", "tpami", "defy-forgetting", "classification-tasks", "deep-learning", "neural-networks", "framework", "hyperparameter-tuning", "inaturalist", "tinyimagenet", "icarl", "synaptic-intelligence", "gradient-episodic-memory", "packnet", "hat", "memory-aware-synapses", "elastic-weight-consolidation", "incremental-learning", "incremental-moment-matching"], "description": "Continual Hyperparameter Selection Framework. Compares 11 state-of-the-art Lifelong Learning methods and  4 baselines. Official Codebase of \"A continual learning survey: Defying forgetting in classification tasks.\" in  IEEE TPAMI."}
{"name": "tharindudr/transquest", "full_name": "TharinduDR/TransQuest", "topics": ["deep-learning", "transformers", "quality-estimation"], "description": "Transformer based translation quality estimation"}
{"name": "sony/sqvae", "full_name": "sony/sqvae", "topics": ["bayesian", "deep-generative-model", "generative-model", "gumbel-softmax", "machine-learning", "pytorch", "vae", "variational-autoencoder", "vector-quantization", "vq-vae"], "description": "Pytorch implementation of stochastically quantized variational autoencoder (SQ-VAE)"}
{"name": "pietrolesci/energizer", "full_name": "pietrolesci/energizer", "topics": ["pytorch", "pytorch-lightning", "active-learning", "deep-learning", "python"], "description": "An active learning library for Pytorch based on Pytorch-Lightning."}
{"name": "hanxunh/unlearnable-examples", "full_name": "HanxunH/Unlearnable-Examples", "topics": ["deep-learning", "deep-neural-networks", "iclr2021", "pytorch"], "description": "[ICLR2021] Unlearnable Examples: Making Personal Data Unexploitable"}
{"name": "luanyunteng/pytorch-be-your-own-teacher", "full_name": "luanyunteng/pytorch-be-your-own-teacher", "topics": ["knowledge-distillation", "self-distillation"], "description": "A pytorch implementation of paper 'Be Your Own Teacher: Improve the Performance of Convolutional Neural Networks via Self Distillation', https://arxiv.org/abs/1905.08094"}
{"name": "wuminye/nhr", "full_name": "wuminye/NHR", "topics": [], "description": "Pytorch implementation of  Multi-view Neural Human Rendering."}
{"name": "ze-yang/context-transformer", "full_name": "Ze-Yang/Context-Transformer", "topics": ["few-shot", "pytorch", "rfbnet", "transfer-learning", "transformer", "object-detection"], "description": "Context-Transformer: Tackling Object Confusion for Few-Shot Detection, AAAI 2020"}
{"name": "gorilla-lab-scut/tango", "full_name": "Gorilla-Lab-SCUT/tango", "topics": ["text-to-3d", "differentiable-rendering", "aigc", "3d", "computer-graphics", "meshes", "neural-style", "pytorch"], "description": "[NeurIPS 2022] Official code repository for \"TANGO: Text-driven Photorealistic and Robust 3D Stylization via Lighting Decomposition\""}
{"name": "alfonmedela/triplet-loss-pytorch", "full_name": "alfonmedela/triplet-loss-pytorch", "topics": ["triplet-loss", "triplet", "loss-functions", "metric-learning", "constellation", "pytorch", "pytorch-implementation"], "description": "Highly efficient PyTorch version of the Semi-hard Triplet loss \u26a1\ufe0f"}
{"name": "lucidrains/jax2torch", "full_name": "lucidrains/jax2torch", "topics": ["jax", "torch", "deep-learning-framework"], "description": "Use Jax functions in Pytorch"}
{"name": "senya-ashukha/simple-equivariant-gnn", "full_name": "senya-ashukha/simple-equivariant-gnn", "topics": ["graph-neural-networks", "gnn", "equivariance", "pytorch", "egnn", "qm9", "homo", "molecules", "neural-networks", "deep-learning", "deep-neural-networks"], "description": "A short and easy PyTorch implementation of E(n) Equivariant Graph Neural Networks"}
{"name": "enze5088/wentiansearch", "full_name": "enze5088/WenTianSearch", "topics": ["nlp", "natural-language-processing"], "description": "A baseline for WenTianSearch"}
{"name": "dido1998/recurrent-independent-mechanisms", "full_name": "dido1998/Recurrent-Independent-Mechanisms", "topics": ["deep-learning", "generalization", "rim", "attention", "recurrent-networks", "lstms", "grus", "pytorch"], "description": "Implementation of the paper Recurrent Independent Mechanisms (https://arxiv.org/pdf/1909.10893.pdf)"}
{"name": "easoncai-dev/torch_backbones", "full_name": "Cai-Yichao/torch_backbones", "topics": ["backbones", "backbone-cnns", "pytorch"], "description": "Unofficial implementations of some classical  CNN backbones with pytorch"}
{"name": "yuweihao/reclor", "full_name": "yuweihao/reclor", "topics": ["nlp", "natural-language-processing", "natural-language-understanding", "machine-reading-comprehension"], "description": "Code for \"ReClor: A Reading Comprehension Dataset Requiring Logical Reasoning\" (ICLR 2020)"}
{"name": "zassou65535/image_converter", "full_name": "zassou65535/image_converter", "topics": ["python", "gan", "image-converter", "ugatit", "pytorch", "image-conversion", "style-transfer"], "description": "UGATIT\u306b\u3088\u308b\u753b\u50cf\u5909\u63db\u5668"}
{"name": "saahiluppal/catr", "full_name": "saahiluppal/catr", "topics": ["image-captioning", "transformer"], "description": "Image Captioning Using Transformer"}
{"name": "anthony-wang/crabnet", "full_name": "anthony-wang/CrabNet", "topics": ["predict-materials-properties", "neural-networks", "materials-informatics", "machine-learning", "pytorch", "materials-science", "materials-screening", "scikit-learn", "attention-mechanism", "attention", "self-attention", "transformer"], "description": "Predict materials properties using only the composition information!"}
{"name": "jerbarnes/semeval22_structured_sentiment", "full_name": "jerbarnes/semeval22_structured_sentiment", "topics": ["natural-language-processing", "semeval-2022", "sentiment-analysis", "structured-prediction"], "description": "SemEval-2022 Shared Task 10: Structured Sentiment Analysis"}
{"name": "moraieu/query-selector", "full_name": "moraieu/query-selector", "topics": ["transformer", "time-series", "machine-learning", "deep-learning", "self-attention", "pytorch", "forecasting"], "description": "LONG-TERM SERIES FORECASTING WITH QUERYSELECTOR \u2013 EFFICIENT MODEL OF SPARSEATTENTION"}
{"name": "megvii-research/tlc", "full_name": "megvii-research/TLC", "topics": ["deep-learning", "neural-network"], "description": "Test-time Local Converter"}
{"name": "zeke-xie/adaptive-inertia-adai", "full_name": "zeke-xie/adaptive-inertia-adai", "topics": ["machine-learning", "optimization", "ai", "deep-learning", "optimizer", "pytorch"], "description": "The PyTorch Implementation of Adaptive Inertia Methods. The algorithms are based on our ICML2022 Oral paper:  \"Adaptive Inertia: Disentangling the Effects of Adaptive Learning Rate and Momentum\"."}
{"name": "mawiszus/toad-gan", "full_name": "Mawiszus/TOAD-GAN", "topics": ["mario", "ai", "deep-learning", "super-mario-bros", "pcg", "pcgml", "gan", "singan"], "description": "Official repository for \"TOAD-GAN: Coherent Style Level Generation from a Single Example\" by Maren Awiszus, Frederik Schubert and Bodo Rosenhahn. "}
{"name": "nadeemlab/deepliif", "full_name": "nadeemlab/DeepLIIF", "topics": ["multiplex", "immunohistochemical-images", "immunohistochemistry", "deep-learning", "multitask-learning", "pathology", "pathology-image", "pathology-gan", "segmentation", "cell-segmentation", "cell-biology", "cloud-native-applications", "pytorch"], "description": "Deep Learning Inferred Multiplex ImmunoFluorescence for IHC Image Quantification (https://deepliif.org) [Nature Machine Intelligence'22, CVPR'22]"}
{"name": "mbrossar/denoise-imu-gyro", "full_name": "mbrossar/denoise-imu-gyro", "topics": ["imu", "attitude-estimation", "deep-learning"], "description": "Convolutional Neural Networks for Denoising Gyroscopes of Low-Cost IMUs"}
{"name": "mczhi/dipp", "full_name": "MCZhi/DIPP", "topics": ["deep-learning", "prediction-model"], "description": "Differentiable Integrated Prediction and Planning Framework for Urban Autonomous Driving  https://mczhi.github.io/DIPP/"}
{"name": "cwchenwang/nerf-sr", "full_name": "cwchenwang/NeRF-SR", "topics": ["nerf", "super-resolution", "acm-multimedia-2022", "acm-mm", "acm-multimedia", "pytorch"], "description": "[ACM MM 2022] NeRF-SR: High-Quality Neural Radiance Fields using Supersampling"}
{"name": "alexandrosstergiou/squeeze-and-recursion-temporal-gates", "full_name": "alexandrosstergiou/Squeeze-and-Recursion-Temporal-Gates", "topics": ["action-recognition", "activity-recognition", "3d-cnn", "spatio-temporal-modeling", "pytorch", "recursion-temporal-gates", "hacs", "kinetics-datasets", "moments-in-time"], "description": "Code for : [Pattern Recognit. Lett. 2021] \"Learn to cycle: Time-consistent feature discovery for action recognition\" and [IJCNN 2021] \"Multi-Temporal Convolutions for Human Action Recognition in Videos\"."}
{"name": "zhangbaijin/mprnet-cloud-removal", "full_name": "zhangbaijin/CB-MemoryNet", "topics": ["shadow-removal", "cloud-removal", "image-restoration", "pytorch"], "description": "Code for paper: CB-MemoryNet:Contrastive balance learning memory net for image restoration(cloud,rain,shadow removal)) "}
{"name": "lucidrains/gated-state-spaces-pytorch", "full_name": "lucidrains/gated-state-spaces-pytorch", "topics": ["artificial-intelligence", "deep-learning", "language-modeling", "state-spaces"], "description": "Implementation of Gated State Spaces, from the paper \"Long Range Language Modeling via Gated State Spaces\", in Pytorch"}
{"name": "nimbleedge/recoedge", "full_name": "NimbleEdge/EnvisEdge", "topics": ["recommender-system", "privacy", "machine-learning", "edge-computing", "pytorch", "deep-learning", "python"], "description": "Deploy recommendation engines with Edge Computing"}
{"name": "georgianpartners/multimodal-toolkit", "full_name": "georgian-io/Multimodal-Toolkit", "topics": ["huggingface-transformers", "transformer", "natural-language-processing", "tabular-data", "multimodal-learning"], "description": "Multimodal model for text and tabular data with HuggingFace transformers as building block for text data"}
{"name": "maxhalford/pytorch-resample", "full_name": "MaxHalford/pytorch-resample", "topics": ["pytorch", "imbalanced-learning", "undersampling", "oversampling", "resampling"], "description": "\ud83c\udfb2 Iterable dataset resampling in PyTorch"}
{"name": "little-podi/aiatrack", "full_name": "Little-Podi/AiATrack", "topics": ["attention-mechanism", "single-object-tracking", "tracking", "vision-transformer", "visual-tracking", "eccv2022", "pytorch"], "description": "[ECCV'22] The official PyTorch implementation of our ECCV 2022 paper: \"AiATrack: Attention in Attention for Transformer Visual Tracking\"."}
{"name": "sunnyhelen/jperceiver", "full_name": "sunnyHelen/JPerceiver", "topics": ["autonomous-driving", "deep-learning", "perception", "bev-perception", "depth-estimation", "visual-odometry"], "description": "[ECCV 2022]JPerceiver: Joint Perception Network for Depth, Pose and Layout Estimation in Driving Scenes"}
{"name": "mangye16/ddag", "full_name": "mangye16/DDAG", "topics": [], "description": "Pytorch Code of DDAG for Visible-Infrared Person Re-Identification (ECCV20)"}
{"name": "xuyangbai/d3feat.pytorch", "full_name": "XuyangBai/D3Feat.pytorch", "topics": ["pointcloud", "registration", "3d", "pytorch", "descriptor"], "description": "[PyTorch] Official Implementation of CVPR'20 oral paper - D3Feat: Joint Learning of Dense Detection and Description of 3D Local Features https://arxiv.org/abs/2003.03164"}
{"name": "uds-lsv/bert-stable-fine-tuning", "full_name": "uds-lsv/bert-stable-fine-tuning", "topics": ["nlp", "bert", "fine-tuning"], "description": "On the Stability of Fine-tuning BERT: Misconceptions, Explanations, and Strong Baselines"}
{"name": "nioolek/ppyoloe_pytorch", "full_name": "Nioolek/PPYOLOE_pytorch", "topics": [], "description": "An unofficial implementation of Pytorch version PP-YOLOE,based on  Megvii YOLOX training code."}
{"name": "lorenmt/shape-adaptor", "full_name": "lorenmt/shape-adaptor", "topics": ["neural-shape-learning", "pytorch", "automl", "nas", "pooling"], "description": "The implementation of \"Shape Adaptor: A Learnable Resizing Module\" [ECCV 2020]."}
{"name": "mxfold/mxfold2", "full_name": "mxfold/mxfold2", "topics": ["rna-secondary-structure-prediction", "deep-learning"], "description": "MXfold2: RNA secondary structure prediction using deep learning with thermodynamic integration"}
{"name": "emadeldeen24/attnsleep", "full_name": "emadeldeen24/AttnSleep", "topics": ["sleep-staging", "sleep-stage-scoring", "sleep-stage-classification", "pytorch", "eeg-classification", "eeg", "self-attention", "attention"], "description": "[IEEE TNSRE] \"An Attention-based Deep Learning Approach for Sleep Stage Classification with Single-Channel EEG\""}
{"name": "microsoft/sparenet", "full_name": "microsoft/SpareNet", "topics": ["deep-learning", "neural-network", "point-cloud", "point-cloud-completion", "generative-adversarial-network", "differentiable-renderer"], "description": "Style-based Point Generator with Adversarial Rendering for Point Cloud Completion (CVPR 2021)"}
{"name": "stanford-oval/genienlp", "full_name": "stanford-oval/genienlp", "topics": ["natural-language-processing", "deep-learning", "seq2seq", "nlp", "semantic-parsing", "translation", "paraphrasing", "dialogue", "question-answering"], "description": "GenieNLP: A versatile codebase for any NLP task"}
{"name": "cetmann/iunets", "full_name": "cetmann/iunets", "topics": [], "description": "A fully invertible U-Net for memory efficiency in Pytorch."}
{"name": "yassineyousfi/comma10k-baseline", "full_name": "YassineYousfi/comma10k-baseline", "topics": ["pytorch-lightning", "comma-ai", "segmentation", "openpilot", "deep-learning", "pytorch"], "description": "A baseline segmentation example using the comma10k dataset (WIP)"}
{"name": "kzl/lifelong_rl", "full_name": "kzl/lifelong_rl", "topics": [], "description": "Pytorch implementations of RL algorithms, focusing on model-based, lifelong, reset-free, and offline algorithms. Official codebase for Reset-Free Lifelong Learning with Skill-Space Planning."}
{"name": "cvi-szu/me-graphau", "full_name": "CVI-SZU/ME-GraphAU", "topics": ["facial-action-unit-detection", "facial-action-units", "graph-neural-network", "pytorch"], "description": "[IJCAI 2022] Learning Multi-dimensional Edge Feature-based AU Relation Graph for Facial Action Unit Recognition, Pytorch code"}
{"name": "sustainlab-group/sustainbench", "full_name": "sustainlab-group/sustainbench", "topics": ["machine-learning", "deep-learning", "sustainability", "sdgs"], "description": null}
{"name": "buxihuo/ow-yolo", "full_name": "buxihuo/OW-YOLO", "topics": ["yolov5", "pytorch", "yolo", "object-detection", "deep-learning", "unknown", "autolabel", "open-world-detection", "open-world", "yolov8"], "description": "Detect known and unknown objects in the open world\uff08\u5177\u6709\u533a\u5206\u5df2\u77e5\u4e0e\u672a\u77e5\u80fd\u529b\u7684\u5168\u65b0\u68c0\u6d4b\u5668\uff09\uff09"}
{"name": "amazon-research/tanl", "full_name": "amazon-science/tanl", "topics": ["natural-language-processing", "pytorch", "deep-learning"], "description": "Structured Prediction as Translation between Augmented Natural Languages"}
{"name": "lee-zq/vesselseg-pytorch", "full_name": "lee-zq/VesselSeg-Pytorch", "topics": ["retinal-vessel-segmentation"], "description": "Retinal vessel segmentation toolkit based on pytorch"}
{"name": "openclimatefix/graph_weather", "full_name": "openclimatefix/graph_weather", "topics": ["pytorch", "weather", "graph-neural-networks", "forecasting-models"], "description": "PyTorch implementation of Ryan Keisler's 2022 \"Forecasting Global Weather with Graph Neural Networks\" paper (https://arxiv.org/abs/2202.07575)"}
{"name": "chenmnz/cf-vit", "full_name": "ChenMnZ/CF-ViT", "topics": ["computer-vision", "vision-transformer", "image-classification", "dynamic", "efficiency"], "description": "Pytorch implementation of \"CF-ViT: A General Coarse-to-Fine Method for Vision Transformer\""}
{"name": "huangtinglin/ngcf-pytorch", "full_name": "huangtinglin/NGCF-PyTorch", "topics": ["pytorch", "pytorch-implementation", "machine-learning", "graph-algorithms", "recommender-system", "neural-collaborative-filtering", "deep-learning"], "description": "PyTorch Implementation for Neural Graph Collaborative Filtering"}
{"name": "asteroid-team/asteroid-filterbanks", "full_name": "asteroid-team/asteroid-filterbanks", "topics": ["python3", "pytorch", "deep-learning", "audio", "audio-processing", "filterbanks", "asteroid-filterbanks"], "description": ":rocket: Asteroid's filterbanks"}
{"name": "canturan10/satellighte", "full_name": "canturan10/satellighte", "topics": ["image-classification", "satellite", "pytorch", "pytorch-lightning", "computer-vision", "state-of-the-art", "deep-learning"], "description": "\ud83d\udce1 PyTorch Lightning Implementations of Recent Satellite Image Classification !"}
{"name": "prajjwal1/fluence", "full_name": "prajjwal1/fluence", "topics": ["transformers", "pytorch", "attention", "nlp", "deep-learning"], "description": "A deep learning library based on Pytorch focussed on low resource language research and robustness"}
{"name": "powerycy/lic2020-", "full_name": "powerycy/Lic2020-", "topics": [], "description": "lic2020\u5173\u7cfb\u62bd\u53d6\u6bd4\u8d5b\uff0c\u4f7f\u7528Pytorch\u5b9e\u73b0\u82cf\u795e\u7684\u6a21\u578b\u3002"}
{"name": "superzchen/ilearnplus", "full_name": "Superzchen/iLearnPlus", "topics": ["bioinformatics-tool", "sequence-analysis", "machine-learning", "automated-modelling", "feature-selection", "prediction", "biomedical-data-analytics", "python", "deep-learning"], "description": "iLearnPlus is the first machine-learning platform with both graphical- and web-based user interface that enables the construction of automated machine-learning pipelines for computational analysis and predictions using nucleic acid and protein sequences."}
{"name": "openopt/chop", "full_name": "openopt/chop", "topics": ["pytorch", "adversarial-attacks", "optimization", "python"], "description": "CHOP: An optimization library based on PyTorch, with applications to adversarial examples and structured neural network training."}
{"name": "jcwang123/ba-transformer", "full_name": "jcwang123/BA-Transformer", "topics": ["pytorch", "transformer-architecture", "miccai", "skin-lesion-segmentation"], "description": "[MICCAI 2021] Boundary-aware Transformers for Skin Lesion Segmentation"}
{"name": "cuiziteng/iccv_maet", "full_name": "cuiziteng/ICCV_MAET", "topics": ["low-light-image", "low-light-image-enhancement", "low-light-vision", "object-detection", "pytorch", "low-light-enhance", "self-supervised-learning", "deep-learning", "iccv2021"], "description": "[ICCV 2021] Multitask AET with Orthogonal Tangent Regularity for Dark Object Detection. A self-supervised learning way for low-light image object detection."}
{"name": "dvlab-research/scgan", "full_name": "dvlab-research/SCGAN", "topics": ["deep-learning", "gan", "image-synthesis", "iccv2021", "pytorch", "conditional-gan", "image-rendering", "dynamic-networks"], "description": "The implementation of 'Image synthesis via semantic composition', ICCV2021."}
{"name": "winycg/self-kd-lib", "full_name": "winycg/Self-KD-Lib", "topics": ["self-knowledge-distillation", "data-augmentation", "image-classification"], "description": "[ECCV-2022] Official implementation of MixSKD: Self-Knowledge Distillation from Mixup for Image Recognition && Pytorch Implementations of some Self-Knowledge Distillation and data augmentation methods"}
{"name": "thunlp/openbackdoor", "full_name": "thunlp/OpenBackdoor", "topics": ["nlp", "backdoor-attacks"], "description": "An open-source toolkit for textual backdoor attack and defense (NeurIPS 2022 D&B, Spotlight)"}
{"name": "yyk-wew/f3net", "full_name": "yyk-wew/F3Net", "topics": [], "description": "Pytorch implementation of F3Net (ECCV 2020 F3Net: Frequency in Face Forgery Network)"}
{"name": "joffery/m-ada", "full_name": "joffery/M-ADA", "topics": [], "description": "The Pytorch implementation for \"Learning to Learn Single Domain Generalization\" (CVPR 2020)"}
{"name": "neerajwagh/eeg-gcnn", "full_name": "neerajwagh/eeg-gcnn", "topics": ["graph-neural-networks", "eeg-classification", "eeg-signals-processing", "deep-learning", "machine-learning", "eeg", "eeg-signals", "convolutional-network", "eeg-gcnn", "neurips", "neurips-2020", "ml4h", "dgl-graph", "pytorch"], "description": "Resources for the paper titled \"EEG-GCNN: Augmenting Electroencephalogram-based Neurological Disease Diagnosis using a Domain-guided Graph Convolutional Neural Network\". Accepted for publication (with an oral spotlight!) at ML4H Workshop, NeurIPS 2020."}
{"name": "jeikeilim/kindle", "full_name": "JeiKeiLim/kindle", "topics": ["machine-learning", "deep-learning", "pytorch"], "description": "Making a PyTorch model easier than ever!"}
{"name": "zhangzhiqiangccm/nlp-project", "full_name": "zhangzhiqiangccm/NLP-project", "topics": [], "description": "\u81ea\u7136\u8bed\u8a00\u5904\u7406\u4e2d\u7684\u57fa\u7840\u4efb\u52a1\uff0c\u5305\u542b\u4f46\u4e0d\u9650\u4e8e\u6587\u672c\u8868\u793a\uff0c\u6587\u672c\u5206\u7c7b\uff0c\u547d\u540d\u5b9e\u4f53\u8bc6\u522b\uff0c\u5173\u7cfb\u62bd\u53d6\uff0c\u6587\u672c\u751f\u6210\uff0c\u6587\u672c\u6458\u8981\u7b49\uff0c\u57fa\u4e8etensorflow2\u6216Pytorch\uff0c\u6240\u6709\u4ee3\u7801\u5747\u7ecf\u8fc7\u6d4b\u8bd5\uff0c\u9879\u76ee\u4e2d\u4e5f\u5305\u542b\u76f8\u5173\u6570\u636e\u3002"}
{"name": "plemeri/transparent-background", "full_name": "plemeri/transparent-background", "topics": ["background-removal", "image-matting", "python", "salient-object-detection", "photo-editing", "pytorch", "remove-background", "remove-background-image", "remove-background-video", "video-editing", "deep-learning", "dichotomous-image-segmentation", "image-processing"], "description": "This is a background removing tool powered by InSPyReNet (ACCV 2022)"}
{"name": "ascust/3dmm-fitting-pytorch", "full_name": "ascust/3DMM-Fitting-Pytorch", "topics": ["3dmm", "bfm", "fitting", "face-reconstruction", "3d-face-reconstruction", "3d-face", "3d-face-alignment", "pytorch", "basel-face-model", "3d-morphable-face-model", "3d-morphable-models", "monocular-video-reconstruction"], "description": "A 3DMM fitting framework using Pytorch."}
{"name": "edouardelasalles/srvp", "full_name": "edouardelasalles/srvp", "topics": ["pytorch", "deep-learning", "video-prediction", "vae", "stochastic", "latent-variable-models", "generative-model", "icml-2020"], "description": "Official implementation of the paper Stochastic Latent Residual Video Prediction"}
{"name": "zsyoaoa/bsrdm", "full_name": "zsyOAOA/BSRDM", "topics": [], "description": "Blind Image Super-resolution with Elaborate Degradation Modeling on Noise and Kernel (CVPR, 2022) (Pytorch)"}
{"name": "pprp/pytorch-cifar-model-hub", "full_name": "pprp/PyTorch-CIFAR-Model-Hub", "topics": ["pytorch", "image-classification", "vision-transformer", "cnn-classification", "tricks", "cifar10", "cifar10-classification"], "description": "Implementation of Conv-based and Vit-based networks designed for CIFAR."}
{"name": "kgl-prml/pixel-level-cycle-association", "full_name": "kgl-prml/Pixel-Level-Cycle-Association", "topics": [], "description": "Pytorch Implementation for NeurIPS (oral) paper: Pixel Level Cycle Association: A New Perspective for Domain Adaptive Semantic Segmentation"}
{"name": "nod-ai/shark", "full_name": "nod-ai/SHARK", "topics": ["deep-learning", "machine-learning", "mlir", "pytorch", "amd", "apple-silicon", "nvidia"], "description": "SHARK - High Performance Machine Learning Distribution"}
{"name": "sbarratt/torch_interpolations", "full_name": "sbarratt/torch_interpolations", "topics": [], "description": "Interpolation routines in Pytorch."}
{"name": "monniert/dti-clustering", "full_name": "monniert/dti-clustering", "topics": ["clustering", "pytorch", "unsupervised-learning", "image-clustering", "neurips2020", "neurips-2020", "computer-vision", "deep-learning"], "description": "(NeurIPS 2020 oral) Code for \"Deep Transformation-Invariant Clustering\" paper"}
{"name": "thunlp/sememepso-attack", "full_name": "thunlp/SememePSO-Attack", "topics": ["nlp", "adversarial-examples", "adversarial-attacks", "sememe", "pso"], "description": "Code and data of the ACL 2020 paper \"Word-level Textual Adversarial Attacking as Combinatorial Optimization\""}
{"name": "homebrewnlp/homebrewnlp", "full_name": "HomebrewNLP/HomebrewNLP", "topics": ["artificial-intelligence", "machine-learning", "research", "pytorch", "gpt", "attention", "transformer"], "description": "A case study of efficient training of large language models using commodity hardware."}
{"name": "mims-harvard/raindrop", "full_name": "mims-harvard/Raindrop", "topics": ["time-series", "representation-learning", "deep-learning", "graph-neural-networks", "embeddings", "irregular-time-series", "machine-learning"], "description": "Graph Neural Networks for Irregular Time Series"}
{"name": "bigdata-ustc/educdm", "full_name": "bigdata-ustc/EduCDM", "topics": ["cognitive-diagnosis-models", "model-zoo", "psychometrics", "dina", "fuzzycdf", "neuralcdm", "irt", "item-response-theory", "cdm", "students", "knowledge-states", "irr", "knowledge-concepts", "item-response-ranking", "mirt", "python", "pytorch"], "description": "The Model Zoo of Cognitive Diagnosis Models, including classic Item Response Ranking (IRT), Multidimensional Item Response Ranking (MIRT), Deterministic Input, Noisy \"And\" model(DINA), and advanced Fuzzy Cognitive Diagnosis Framework (FuzzyCDF), Neural Cognitive Diagnosis Model (NCDM) and Item Response Ranking framework (IRR)."}
{"name": "flowmodelingcontrol/flowtorch", "full_name": "FlowModelingControl/flowtorch", "topics": ["machine-learning", "dynamic-mode-decomposition", "proper-orthogonal-decomposition", "pytorch", "jupyter", "openfoam", "netcdf", "tau", "davis", "csv", "hdf5", "ipsp", "dmd", "pod", "cnm"], "description": "flowTorch - a Python library for analysis and reduced-order modeling of fluid flows"}
{"name": "project-agml/agml", "full_name": "Project-AgML/AgML", "topics": ["deep-learning", "agriculture", "pytorch", "dataset", "image-classification", "object-detection", "semantic-segmentation", "computer-vision", "synthetic-data"], "description": "AgML is a centralized framework for agricultural machine learning. AgML provides access to public agricultural datasets for common agricultural deep learning tasks, with standard benchmarks and pretrained models, as well the ability to generate synthetic data and annotations."}
{"name": "haoheliu/subband-music-separation", "full_name": "haoheliu/Subband-Music-Separation", "topics": [], "description": "Pytorch: Channel-wise subband (CWS) input for better voice and accompaniment separation"}
{"name": "autoailab/fusiondepth", "full_name": "AutoAILab/FusionDepth", "topics": ["computer-vision", "computer-science", "lidar", "lidar-point-cloud", "depth-estimation", "monocular-depth-estimation", "self-supervised-learning", "self-driving-car", "artificial-intelligence", "convolutional-neural-networks", "sensor-fusion", "pytorch", "kitti", "corl"], "description": "Official implementation for paper \"Advancing Self-supervised Monocular Depth Learning with Sparse LiDAR\""}
{"name": "huangzhichao95/fewshotmotiontransfer", "full_name": "HuangZhiChao95/FewShotMotionTransfer", "topics": ["cvpr2021"], "description": "Pytorch implementation of our paper \"Few-Shot Human Motion Transfer by Personalized Geometry and Texture Modeling\""}
{"name": "lucidrains/global-self-attention-network", "full_name": "lucidrains/global-self-attention-network", "topics": ["artificial-intelligence", "attention-mechanism", "attention", "self-attention", "image-classification"], "description": "A Pytorch implementation of Global Self-Attention Network, a fully-attention backbone for vision tasks"}
{"name": "mchancan/deepseqslam", "full_name": "mchancan/deepseqslam", "topics": ["slam", "robotics", "deep-learning", "computer-vision", "place-recognition", "deep-neural-networks", "convolutional-neural-networks", "recurrent-neural-networks", "autonomous-driving", "navigation", "deepseqslam", "driving-datasets", "lstm", "rnn", "cnn", "sequential-place-recognition", "sequential-place-learning", "heuristic-free", "high-performance-place-recognition", "route-based-place-recognition"], "description": "The Official Deep Learning Framework for Robot Place Learning"}
{"name": "mihir135/yolov5", "full_name": "mihir135/yolov5", "topics": [], "description": "YOLO v5 pytorch implementation. This repository contains code for this tutorial."}
{"name": "hpwang-whu/yoho", "full_name": "HpWang-whu/YOHO", "topics": ["pytorch", "point-cloud", "registration"], "description": "[ACM MM 2022] You Only Hypothesize Once: Point Cloud Registration with Rotation-equivariant Descriptors"}
{"name": "sniklaus/revisiting-sepconv", "full_name": "sniklaus/revisiting-sepconv", "topics": ["python", "deep-learning", "cuda", "pytorch", "cupy"], "description": "an implementation of Revisiting Adaptive Convolutions for Video Frame Interpolation using PyTorch"}
{"name": "akwasigroch/pretext-invariant-representations", "full_name": "akwasigroch/Pretext-Invariant-Representations", "topics": ["machine-learning", "deep-learning", "self-supervised-learning", "self-supervised", "computer-vision"], "description": "Implementation of the paper Self-Supervised Learning of Pretext-Invariant Representations "}
{"name": "kinwaicheuk/audioloader", "full_name": "KinWaiCheuk/AudioLoader", "topics": ["dataset", "pytorch", "audio"], "description": "PyTorch Dataset for Speech and Music audio"}
{"name": "ahmedfgad/torchga", "full_name": "ahmedfgad/TorchGA", "topics": ["genetic-algorithm", "pygad", "python", "neural-networks", "cnn", "torch", "pytorch", "deep-learning", "machine-learning", "evolutionary-algorithms", "neuroscience"], "description": "Train PyTorch Models using the Genetic Algorithm with PyGAD"}
{"name": "christophreich1996/cell-detr", "full_name": "ChristophReich1996/Cell-DETR", "topics": ["bibm-2020", "deep-learning", "attention", "instance-segmentation", "cell-segmentation", "synthetic-biology", "cell-detr", "transformer", "system-biology"], "description": "Official and maintained implementation of the paper \"Attention-Based Transformers for Instance Segmentation of Cells in Microstructures\" [BIBM 2020]."}
{"name": "chuhuaw/sgnet.pytorch", "full_name": "ChuhuaW/SGNet.pytorch", "topics": ["deep-learning", "trajectory-prediction", "pytorch"], "description": "Pytorch Implementation for Stepwise Goal-Driven Networks for Trajectory Prediction (RA-L/ICRA2022)"}
{"name": "monniert/docextractor", "full_name": "monniert/docExtractor", "topics": ["document-analysis", "segmentation", "historical-data", "pytorch"], "description": "(ICFHR 2020 oral) Code for \"docExtractor: An off-the-shelf historical document element extraction\" paper"}
{"name": "stomoya/animeface", "full_name": "STomoya/animeface", "topics": ["python", "deep-learning", "machine-learning", "anime", "pytorch", "gan"], "description": "Training deep models using anime, illustration images."}
{"name": "thecamusean/grasp_diffusion", "full_name": "TheCamusean/grasp_diffusion", "topics": ["diffusion", "diffusion-models", "grasping", "lie-groups", "deep-learning", "robotics"], "description": "Pytorch implementation of diffusion models on Lie Groups for 6D grasp pose generation https://sites.google.com/view/se3dif/home"}
{"name": "jiaweihe1996/gmtracker", "full_name": "jiaweihe1996/GMTracker", "topics": ["pytorch", "deep-learning", "tracking-by-detection"], "description": "Official PyTorch implementation of \"Learnable Graph Matching: Incorporating Graph Partitioning with Deep Feature Learning for Multiple Object Tracking\" (CVPR 2021). "}
{"name": "lucidrains/med-seg-diff-pytorch", "full_name": "lucidrains/med-seg-diff-pytorch", "topics": ["artificial-intelligence", "deep-learning", "denoising-diffusion", "medicine", "segmentation"], "description": "Implementation of MedSegDiff in Pytorch - SOTA medical segmentation using DDPM and filtering of features in fourier space"}
{"name": "coperception/coperception", "full_name": "coperception/coperception", "topics": ["autonomous-driving", "computer-vision", "deep-learning", "graph", "knowledge-distillation", "communication-networks", "v2v", "3d-object-detection", "3d-scene-understanding", "collaborative-learning", "graph-learning", "multi-agent-learning", "multi-agent-perception", "multi-agent-system", "point-cloud-processing", "v2x-communication"], "description": "SDK for multi-agent collaborative perception."}
{"name": "cherrypiesexy/imitation_learning", "full_name": "CherryPieSexy/imitation_learning", "topics": ["reinforcement-learning", "ppo", "ppo-pytorch", "imitation-learning", "pytorch", "ppo-algo", "a2c", "deep-learning", "deep-reinforcement-learning", "proximal-policy-optimization", "advantage-actor-critic", "policy-gradient", "recurrent-ppo", "gail", "gail-ppo"], "description": "PyTorch implementation of some reinforcement learning algorithms: A2C, PPO, Behavioral Cloning from Observation (BCO), GAIL."}
{"name": "lucidrains/graph-transformer-pytorch", "full_name": "lucidrains/graph-transformer-pytorch", "topics": ["artificial-intelligence", "deep-learning", "transformer", "graphs"], "description": "Implementation of Graph Transformer in Pytorch, for potential use in replicating Alphafold2"}
{"name": "wutong16/density_aware_chamfer_distance", "full_name": "wutong16/Density_aware_Chamfer_Distance", "topics": [], "description": "Pytorch implementation for \"Density-aware Chamfer Distance as a Comprehensive Metric for Point Cloud Completion\" (NeurIPS 2021)"}
{"name": "morningsky/torch-rechub", "full_name": "morningsky/Torch-RecHub", "topics": ["ctr", "pytorch", "recommendation-algorithm"], "description": "A Lighting Pytorch Framework for Recommendation System, Easy-to-use and Easy-to-extend."}
{"name": "paletteml/mlsync", "full_name": "paletteml/mlsync", "topics": ["deep-learning", "machine-learning", "mlflow", "notion", "python", "pytorch"], "description": "Sync your ML data with your favorite productivity tools!"}
{"name": "ml6team/deepstream-python", "full_name": "ml6team/deepstream-python", "topics": ["nvidia", "deepstream", "python", "re-identification", "object", "detection", "anonymization", "segmentation", "boilerplate", "yolov4", "deepsort", "deep-learning", "edge-computing", "object-detection", "tensorrt"], "description": "NVIDIA Deepstream 6.1 Python boilerplate"}
{"name": "maximintegratedai/ai8x-training", "full_name": "MaximIntegratedAI/ai8x-training", "topics": ["max78000", "maxim", "machine-learning", "maxim-integrated", "ai", "artificial-intelligence", "deep-learning", "analog-devices", "max78002"], "description": "Model Training for ADI's MAX78000 and MAX78002 AI Devices"}
{"name": "cambridgeltl/mirror-bert", "full_name": "cambridgeltl/mirror-bert", "topics": ["bert", "nlp", "contrastive-learning", "emnlp2021", "unsupervised-learning"], "description": " [EMNLP 2021] Mirror-BERT: Converting Pretrained Language Models to universal text encoders without labels."}
{"name": "jihyongoh/demfi", "full_name": "JihyongOh/DeMFI", "topics": ["video-deblurring", "deblurring", "video-frame-interpolation", "deep-learning", "pytorch", "pytorch-implementation", "convolutional-neural-networks", "optical-flow", "eccv", "eccv2022", "computer-vision", "low-level-vision"], "description": "Official repository of DeMFI (ECCV 2022)."}
{"name": "meijieru/yet_another_mobilenet_series", "full_name": "meijieru/yet_another_mobilenet_series", "topics": [], "description": "Yet Another Pytorch Distributed MobileNetV2-based Networks Implementation"}
{"name": "amrelsersy/pointpainting", "full_name": "AmrElsersy/PointPainting", "topics": [], "description": "Real Time Semantic Segmentation for both LIDAR & Camera using BiseNetv2 & PointPainting Fusion in Pytorch"}
{"name": "coqui-ai/trainer", "full_name": "coqui-ai/Trainer", "topics": ["pytorch", "deep-learning", "machine-learning", "ai", "data-science"], "description": "\ud83d\udc38  - A general purpose model trainer, as flexible as it gets"}
{"name": "junjun3518/alias-free-torch", "full_name": "junjun3518/alias-free-torch", "topics": ["alias-free-gan", "aliasing", "torch", "resample", "resample-audio-files", "pytorch"], "description": "Simple torch.nn.module implementation of Alias-Free-GAN style filter and resample"}
{"name": "wholebody3d/wholebody3d", "full_name": "wholebody3d/wholebody3d", "topics": ["3d-human-pose", "3d-pose-estimation", "deep-learning", "face-landmark-detection", "foot-estimation", "hand-pose-estimation", "human-pose-estimation", "pose-estimation", "pytorch", "whole-body", "3d-whole-body-pose-estimation", "whole-body-pose-estimation"], "description": "Official repository of Human3.6M 3D WholeBody (H3WB) dataset"}
{"name": "hiyouga/dual-contrastive-learning", "full_name": "hiyouga/Dual-Contrastive-Learning", "topics": ["contrastive-learning", "text-classification", "transformers", "bert", "deep-learning", "neural-networks", "natural-language-processing"], "description": "Code for our paper \"Dual Contrastive Learning: Text Classification via Label-Aware Data Augmentation\""}
{"name": "rom1504/clip-retrieval", "full_name": "rom1504/clip-retrieval", "topics": ["semantic-search", "deep-learning", "multimodal", "ai", "clip", "knn"], "description": "Easily compute clip embeddings and build a clip retrieval system with them"}
{"name": "shibing624/nerpy", "full_name": "shibing624/nerpy", "topics": ["bert", "named-entity-recognition", "ner", "nlp", "pytorch", "transformers", "bert-softmax", "bert-span"], "description": "\ud83c\udf08  NERpy: Implementation of Named Entity Recognition using Python. \u547d\u540d\u5b9e\u4f53\u8bc6\u522b\u5de5\u5177\uff0c\u652f\u6301BertSoftmax\u3001BertSpan\u7b49\u6a21\u578b\uff0c\u5f00\u7bb1\u5373\u7528\u3002"}
{"name": "arthurdouillard/dytox", "full_name": "arthurdouillard/dytox", "topics": ["continual-learning", "computer-vision", "transformer", "dynamic-network", "imagenet", "cifar100"], "description": "Dynamic Token Expansion with Continual Transformers, accepted at CVPR 2022"}
{"name": "ignf/myria3d", "full_name": "IGNF/myria3d", "topics": ["pytorch", "deep-learning", "semantic-segmentation", "randla-net", "pointnet", "lidar-point-cloud", "geodata"], "description": "Semantic segmentation deep learning for aerial, high density Lidar point clouds."}
{"name": "leverxgroup/esrgan", "full_name": "leverxgroup/esrgan", "topics": ["super-resolution", "image-processing", "computer-vision", "generative-adversarial-network", "deep-neural-networks", "pytorch"], "description": "Enhanced SRGAN. Champion PIRM Challenge on Perceptual Super-Resolution"}
{"name": "lucidrains/ponder-transformer", "full_name": "lucidrains/ponder-transformer", "topics": ["artificial-intelligence", "deep-learning", "transformers", "adaptive-computation-time"], "description": "Implementation of a Transformer that Ponders, using the scheme from the PonderNet paper"}
{"name": "monologg/hanbert-transformers", "full_name": "monologg/HanBert-Transformers", "topics": ["hanbert", "transformers", "pytorch", "bert", "korean-nlp"], "description": "HanBert on \ud83e\udd17 Huggingface Transformers \ud83e\udd17"}
{"name": "liuyukid/transformers-ner", "full_name": "liuyukid/transformers-ner", "topics": ["ner", "pytorch", "transformers", "bert", "electra", "roberta", "albert", "adversarial-training", "crf", "softmax", "span", "distilbert", "camembert", "xlm", "xlmroberta", "pgd", "fgm"], "description": "Pytorch-Named-Entity-Recognition-with-transformers"}
{"name": "sally20921/all4depth", "full_name": "sally20921/All4Depth", "topics": ["pytorch", "depth-estimation", "pose-estimation"], "description": "Self-Supervised Depth Estimation on Monocular Sequences"}
{"name": "jetbrains-research/code2seq", "full_name": "JetBrains-Research/code2seq", "topics": ["code2seq", "pytorch", "ml4code", "ml4se", "pytorch-lightning"], "description": "PyTorch's implementation of the code2seq model."}
{"name": "dylanjcastillo/twitter-sentiment-tracker", "full_name": "dylanjcastillo/twitter-sentiment-tracker", "topics": ["python3", "dash", "pytorch", "nlp"], "description": "Dash app for classifying tweets in real-time"}
{"name": "shanghua-gao/rfnext", "full_name": "ShangHua-Gao/RFNext", "topics": ["field", "receptive", "search", "cnn", "dilation"], "description": "RF-Next: Efficient Receptive Field Search for CNN(TPAMI2022, CVPR2021) Try it, you wouldn't regret it!"}
{"name": "eliahuhorwitz/3d-ads", "full_name": "eliahuhorwitz/3D-ADS", "topics": ["anomaly-detection", "anomaly-segmentation", "machine-learning", "unsupervised-learning", "point-cloud", "mvtec-3d-ad", "mvtec-ad", "deep-learning", "pytorch"], "description": "Official Implementation for the \"Back to the Feature: Classical 3D Features are (Almost) All You Need for 3D Anomaly Detection\" paper."}
{"name": "pprp/pytorch-cifar-model-zoo", "full_name": "pprp/PyTorch-CIFAR-Model-Hub", "topics": ["pytorch", "image-classification", "vision-transformer", "cnn-classification", "tricks", "cifar10", "cifar10-classification"], "description": "Implementation of Conv-based and Vit-based networks designed for CIFAR."}
{"name": "taishan1994/pytorch_han", "full_name": "taishan1994/pytorch_HAN", "topics": ["graph-neural-network", "network-embedding", "graph-attention-network", "heterogeneous-network", "heterogeneous-graph", "heterogeneous-graph-neural-network"], "description": "\u5f02\u6784\u56fe\u795e\u7ecf\u7f51\u7edcHAN\u3002Heterogeneous Graph Attention Network (HAN) with pytorch"}
{"name": "gewelsji/fsnet", "full_name": "GewelsJI/FSNet", "topics": ["video-object-segmentation", "video-salient-object-detection", "deep-learning", "optical-flow-methods", "pytorch", "video-segmentation"], "description": "Full-Duplex Strategy for Video Object Segmentation, ICCV, 2021."}
{"name": "densechen/arelu", "full_name": "densechen/AReLU", "topics": ["pytorch", "activation-functions", "deep-learning", "attention-mechanism", "transfer-learning", "ai", "python", "attention", "meta-learning"], "description": "AReLU: Attention-based-Rectified-Linear-Unit"}
{"name": "layneh/greenmim", "full_name": "LayneH/GreenMIM", "topics": ["efficient-deep-learning", "masked-image-modeling", "pytorch", "self-supervised-learning", "vision-transformer"], "description": "[NeurIPS2022] Official implementation of the paper 'Green Hierarchical Vision Transformer for Masked Image Modeling'."}
{"name": "ahmednull/l2cs-net", "full_name": "Ahmednull/L2CS-Net", "topics": ["gaze-estimation", "deep-learning", "gaze-tracking", "gaze-estimation-model", "appearance", "mpiigaze", "gaze360", "pytorch", "pytorch-implementation", "3d", "gaze", "unconstrained", "eye-tracking", "eyetracking", "analysis"], "description": "The official PyTorch implementation of L2CS-Net"}
{"name": "pytorchlightning/lightning-covid19", "full_name": "Lightning-AI/lightning-Covid19", "topics": ["pytorch", "xray", "medical-imaging", "classification", "covid-19"], "description": "Classification for covid-19 chest X-ray images using Lightning"}
{"name": "ygjwd12345/transda", "full_name": "ygjwd12345/TransDA", "topics": [], "description": "Official pytorch implement for \u201cTransformer-Based Source-Free Domain Adaptation\u201d"}
{"name": "lajlksdf/vtl", "full_name": "lajlksdf/vtl", "topics": ["pytorch", "deep-learning", "fake-video-detection", "hashing-algorithm"], "description": "Fake videos detection by tracing the source using video hashing retrieval."}
{"name": "alasdairtran/fourierflow", "full_name": "alasdairtran/fourierflow", "topics": ["simulation", "navier-stokes", "fourier-transform", "pytorch"], "description": "[ICLR 2023] Factorized Fourier Neural Operators"}
{"name": "lucidrains/tr-rosetta-pytorch", "full_name": "lucidrains/tr-rosetta-pytorch", "topics": ["artificial-intelligence", "deep-learning", "protein-folding", "protein-design"], "description": "Implementation of trRosetta and trDesign for Pytorch, made into a convenient package, for protein structure prediction and design"}
{"name": "lbin/centernet-better-plus", "full_name": "lbin/CenterNet-better-plus", "topics": ["centernet", "detectron2", "pytorch"], "description": "centernet"}
{"name": "nguyenvo09/emnlp2020", "full_name": "nguyenvo09/EMNLP2020", "topics": ["pytorch", "fact-checking", "information-retrieval", "learning-to-rank", "fake-news-detection", "emnlp2020"], "description": "This is official Pytorch code and datasets of the paper \"Where Are the Facts? Searching for Fact-checked Information to Alleviate the Spread of Fake News\", EMNLP 2020. "}
{"name": "hunto/dist_kd", "full_name": "hunto/DIST_KD", "topics": ["detection", "dist", "imagenet", "kd", "pytorch"], "description": "Official implementation of paper \"Knowledge Distillation from A Stronger Teacher\", NeurIPS 2022"}
{"name": "yistlin/fragmentvc", "full_name": "yistLin/FragmentVC", "topics": ["voice-conversion", "any-to-any", "transformer", "attention-mechanism", "concatenative", "pytorch"], "description": "Any-to-any voice conversion by end-to-end extracting and fusing fine-grained voice fragments with attention"}
{"name": "turagalab/decode", "full_name": "TuragaLab/DECODE", "topics": ["smlm", "microscopy", "deep-learning", "localization-microscopy", "high-density", "gpu", "pytorch"], "description": "This is the official implementation of our publication \"Deep learning enables fast and dense single-molecule localization with high accuracy\" (Nature Methods)"}
{"name": "huggingface/text-generation-inference", "full_name": "huggingface/text-generation-inference", "topics": ["bloom", "nlp", "pytorch", "inference", "gpt"], "description": "Large Language Model Text Generation Inference"}
{"name": "tahmid0007/visualtransformers", "full_name": "tahmid0007/VisualTransformers", "topics": [], "description": "A Pytorch Implementation of the following paper \"Visual Transformers: Token-based Image Representation and Processing for Computer Vision\""}
{"name": "okkteam/transformer-transducer", "full_name": "oshindow/Transformer-Transducer", "topics": [], "description": "A pytorch_lightning reimplementation of the Transducer module from ESPnet."}
{"name": "xxxnell/spatial-smoothing", "full_name": "xxxnell/spatial-smoothing", "topics": ["uncertainty", "uncertainty-estimation", "uncertainty-quantification", "robustness", "neural-network", "bayesian-neural-networks", "bayesian-deep-learning", "pytorch"], "description": "(ICML 2022) Official PyTorch implementation of \u201cBlurs Behave Like Ensembles: Spatial Smoothings to Improve Accuracy, Uncertainty, and Robustness\u201d."}
{"name": "online-ml/deep-river", "full_name": "online-ml/deep-river", "topics": ["data-science", "deep-learning", "incremental-learning", "machine-learning", "neural-network", "online-deep-learning", "online-learning", "outlier-detection", "pytorch", "stream"], "description": null}
{"name": "zhangyi-3/idr", "full_name": "zhangyi-3/IDR", "topics": ["deep-learning", "denoising", "self-supervised"], "description": "Self-Supervised Image Denoising via Iterative Data Refinement (CVPR2022)"}
{"name": "l0sg/nanoflow", "full_name": "L0SG/NanoFlow", "topics": ["normalizing-flows", "deep-generative-model", "density-estimation", "speech-synthesis", "pytorch", "probabilistic-models", "generative-models"], "description": "PyTorch implementation of the paper \"NanoFlow: Scalable Normalizing Flows with Sublinear Parameter Complexity.\" (NeurIPS 2020)"}
{"name": "baegwangbin/surface_normal_uncertainty", "full_name": "baegwangbin/surface_normal_uncertainty", "topics": ["3d-reconstruction", "computer-vision", "deep-learning", "surface-normal", "surface-normals", "surface-normals-estimation", "uncertainty", "uncertainty-estimation", "iccv2021"], "description": "(ICCV 2021 - oral) Estimating and Exploiting the Aleatoric Uncertainty in Surface Normal Estimation"}
{"name": "eidoslab/torchstain", "full_name": "EIDOSLAB/torchstain", "topics": ["pytorch", "histopathology", "stain-normalization", "computational-pathology", "medical-imaging", "python", "digital-pathology", "numpy", "tensorflow"], "description": "Stain normalization tools for histological analysis and computational pathology"}
{"name": "paganpasta/eqxvision", "full_name": "paganpasta/eqxvision", "topics": ["equinox", "python", "vision", "pytorch"], "description": "A Python package of computer vision models for the Equinox ecosystem."}
{"name": "mims-harvard/graphxai", "full_name": "mims-harvard/GraphXAI", "topics": ["graph-neural-networks", "explainability", "explainable-ai", "explainable-ml", "interpretability", "deep-learning", "embeddings", "graph-machine-learning", "benchmarking"], "description": "GraphXAI: Resource to support the development and evaluation of GNN explainers"}
{"name": "mediabrain-sjtu/memonet", "full_name": "MediaBrain-SJTU/MemoNet", "topics": ["prediction", "deep-learning"], "description": "[CVPR2022] Remember Intentions: Retrospective-Memory-based Trajectory Prediction"}
{"name": "nicola-decao/knowledgeeditor", "full_name": "nicola-decao/KnowledgeEditor", "topics": ["nlp", "pytorch", "natural-language-processing", "transformers"], "description": "Code for Editing Factual Knowledge in Language Models"}
{"name": "lupantech/intergps", "full_name": "lupantech/InterGPS", "topics": ["pytorch", "mathqa"], "description": "Data and Code for ACL 2021 Paper \"Inter-GPS: Interpretable Geometry Problem Solving with Formal Language and Symbolic Reasoning\""}
{"name": "peterouzh/omni-gan-pytorch", "full_name": "PeterouZh/Omni-GAN-PyTorch", "topics": ["pytorch", "deep-learning", "generative-adversarial-network"], "description": "ICCV2021 (poster)"}
{"name": "kadirnar/yolov5-strongsort", "full_name": "kadirnar/yolov5-strongsort", "topics": ["deep-learning", "object-detection", "computer-vision", "deep-sort", "object-tracker", "artificial-intelligence", "pytorch", "strongsort"], "description": "Minimal PyTorch implementation of YOLOv5 and StrongSort"}
{"name": "huangtinglin/knowledge_graph_based_intent_network", "full_name": "huangtinglin/Knowledge_Graph_based_Intent_Network", "topics": ["www2021", "recommendation-system", "knowledge-graph", "graph-neural-network", "knowledge-graph-for-recommendation", "information-retrieval", "pytorch", "explainable-recommendation"], "description": "Learning Intents behind Interactions with Knowledge Graph for Recommendation, WWW2021"}
{"name": "deepalchemist/deep-person-search", "full_name": "DeepAlchemist/deep-person-search", "topics": ["pytorch", "re-identification", "person-search", "re-id", "pedestrian-detection"], "description": "deep learning person search in PyTorch."}
{"name": "raphaelsty/mkb", "full_name": "raphaelsty/mkb", "topics": ["knowledge-graph", "knowledge-graph-embeddings", "graph-embedding", "graph", "machine-learning", "pytorch", "wn18", "knowledge", "mkb", "embeddings", "distillation", "triplets"], "description": "Knowledge Base Embedding By Cooperative Knowledge Distillation"}
{"name": "phlippe/enco", "full_name": "phlippe/ENCO", "topics": ["causal-discovery", "pytorch", "causality", "structure-learning"], "description": "Official repository of the paper \"Efficient Neural Causal Discovery without Acyclicity Constraints\""}
{"name": "yan-hao-tian/contnet", "full_name": "yan-hao-tian/ConTNet", "topics": ["transformer", "convolution", "downstream-tasks", "imagenet"], "description": "This repo contains the code of \"ConTNet: Why not use convolution and transformer at the same time?\""}
{"name": "lightonai/rita", "full_name": "lightonai/RITA", "topics": ["deep-learning", "generative-models", "protein-design"], "description": "RITA is a family of autoregressive protein models, developed by LightOn in collaboration with the OATML group at Oxford and the Debora Marks Lab at Harvard."}
{"name": "omicsml/dance", "full_name": "OmicsML/dance", "topics": ["bioinformatics", "dance", "data-science", "deep-learning", "graph-neural-networks", "machine-learning", "multimodality", "python", "single-cell", "spatial-transcriptomics", "benchmark", "computational-biology", "single-cell-rna-seq", "single-cell-rna-sequencing"], "description": "DANCE: A Deep Learning Library and Benchmark Platform for Single-Cell Analysis"}
{"name": "opium-sh/prl", "full_name": "opium-sh/prl", "topics": ["reinforcement-learning", "machine-learning", "artificial-intelligence", "deep-learning", "neural-networks", "openai-gym", "opium-sh", "python"], "description": "Open-source library for a reinforcement learning research."}
{"name": "kayoyin/transformer-slt", "full_name": "kayoyin/transformer-slt", "topics": ["sign-language-translation", "neural-machine-translation", "transformer", "machine-learning", "deep-learning"], "description": "Sign Language Translation with Transformers (COLING'2020, ECCV'20 SLRTP Workshop)"}
{"name": "salykovaa/inerf", "full_name": "salykovaa/inerf", "topics": ["6d-pose-estimation", "deep-learning", "nerf", "neural-rendering", "pytorch", "pose-estimation"], "description": "6DoF Pose Estimation using Neural Radiance Fields"}
{"name": "cdjhz/multigen", "full_name": "cdjhz/multigen", "topics": ["pytorch", "kg", "nlg"], "description": "EMNLP2020 - Language Generation with Multi-hop Reasoning on Commonsense Knowledge Graph"}
{"name": "dreaminvoker/gain", "full_name": "DreamInvoker/GAIN", "topics": ["relation-extraction", "natural-language-processing", "graph-neural-networks", "document-level-relation-extraction", "dgl"], "description": "Source code for EMNLP 2020 paper: Double Graph Based Reasoning for Document-level Relation Extraction"}
{"name": "weichengtseng/pytorch-pcgrad", "full_name": "WeiChengTseng/Pytorch-PCGrad", "topics": ["deep-reinforcement-learning", "multi-task-learning", "deep-learning", "reinforcement-learning", "multi-task-reinforcement-learning", "rl", "multi-task-rl", "pytorch-pcgrad", "pytorch", "gradient-surgery", "mnist", "mulit-mnist", "reimplementation", "cifar-100"], "description": "Pytorch reimplementation for \"Gradient Surgery for Multi-Task Learning\""}
{"name": "liuzhian/hf2vad", "full_name": "LiUzHiAn/hf2vad", "topics": ["video-anomaly-detecti", "deep-learning", "pytorch"], "description": null}
{"name": "rusty1s/himp-gnn", "full_name": "rusty1s/himp-gnn", "topics": ["pytorch", "geometric-deep-learning", "graph-neural-networks", "molecular-graph", "junction-tree", "graph-pooling"], "description": "Hierarchical Inter-Message Passing for Learning on Molecular Graphs"}
{"name": "kinwaicheuk/demucs_lightning", "full_name": "KinWaiCheuk/demucs_lightning", "topics": ["deep-learning", "machine-learning", "music-information-retrieval", "source-separation"], "description": "Demucs Lightning: A PyTorch lightning version of Demucs with Hydra and Tensorboard features"}
{"name": "hemingkx/chinesenmt", "full_name": "hemingkx/ChineseNMT", "topics": ["pytorch", "transformer", "neural-machine-translation"], "description": "ChineseNMT: Translate English to Chinese with PyTorch Implementation of Transformer"}
{"name": "icetttb/planetr3d", "full_name": "IceTTTb/PlaneTR3D", "topics": ["deep-learning", "3dvision", "iccv2021", "structure"], "description": "[ICCV'21] PlaneTR: Structure-Guided Transformers for 3D Plane Recovery"}
{"name": "guanhuaw/mirtorch", "full_name": "guanhuaw/MIRTorch", "topics": ["magnetic-resonance-imaging", "medical-imaging", "model-based", "pytorch"], "description": "A PyTorch-powered differentiable image reconstruction/optimization toolbox"}
{"name": "igaoguru/sequoia", "full_name": "IgaoGuru/Sequoia", "topics": ["yolo", "neural-network", "dataset", "counterstrike", "counter-strike", "csgo"], "description": "A neural network for CounterStrike:GlobalOffensive character detection and classification. Built on a custom-made dataset (csgo-data-collector)"}
{"name": "paper11667/clipstyler", "full_name": "cyclomon/CLIPstyler", "topics": ["style-transfer", "clip"], "description": "Official Pytorch implementation of \"CLIPstyler:Image Style Transfer with a Single Text Condition\" (CVPR 2022)"}
{"name": "lucidrains/g-mlp-gpt", "full_name": "lucidrains/g-mlp-gpt", "topics": ["artificial-intelligence", "deep-learning", "multilayer-perceptron"], "description": "GPT, but made only out of MLPs"}
{"name": "lannguyen0910/food-recognition", "full_name": "lannguyen0910/food-recognition", "topics": ["object-detection", "yolov5", "pytorch", "food-detection", "efficientnet", "computer-vision", "deep-learning", "yolo", "semantic-segmentation", "image-classification", "unetplusplus", "food-classification", "food-segmentation", "food-analysis"], "description": "\ud83c\udf54\ud83c\udf5f\ud83c\udf57 Food analysis baseline  with Theseus. Integrate object detection, image classification and multi-class semantic segmentation. \ud83c\udf5e\ud83c\udf56\ud83c\udf55"}
{"name": "wxkang157/pytorchpipeline", "full_name": "wxkang157/PytorchPipeline", "topics": [], "description": "Pytorch pipeline template"}
{"name": "gmberton/deep-visual-geo-localization-benchmark", "full_name": "gmberton/deep-visual-geo-localization-benchmark", "topics": ["benchmark", "computer-vision", "datasets", "deep-learning", "geolocalization", "localization", "place-recognition", "pytorch", "descriptors", "image-retrieval", "netvlad", "visual-place-recognition"], "description": "Official code for CVPR 2022 (Oral) paper \"Deep Visual Geo-localization Benchmark\""}
{"name": "ranking666/yolov5-processing", "full_name": "Ranking666/Yolov5-Processing", "topics": ["ghostnet-yolov5", "eagleeye", "pytorch", "pruning", "backbone", "efficientnetv2", "shufflenetv2"], "description": "Multi-backbone, Prune,  Quantization,  KD"}
{"name": "woshidandan/tanet", "full_name": "woshidandan/TANet", "topics": ["iaa", "pytorch", "tad66k", "image-aesthetics-assessment"], "description": "IJCAI 2022: Rethinking Image Aesthetics Assessment: Models, Datasets and Benchmarks"}
{"name": "cloneofsimo/realformer-pytorch", "full_name": "cloneofsimo/RealFormer-pytorch", "topics": [], "description": "Implementation of RealFormer using pytorch"}
{"name": "lucidrains/pi-gan-pytorch", "full_name": "lucidrains/pi-GAN-pytorch", "topics": ["artificial-intelligence", "deep-learning", "generative-adversarial-network", "nerf", "film"], "description": "Implementation of \u03c0-GAN, for 3d-aware image synthesis, in Pytorch"}
{"name": "sdv-dev/deepecho", "full_name": "sdv-dev/DeepEcho", "topics": ["time-series", "deep-learning", "synthetic-data", "data-generation", "synthetic-data-generation", "sdv", "generative-adversarial-network"], "description": "Synthetic Data Generation for mixed-type, multivariate time series."}
{"name": "qiaofengsheng/pytorch-unet", "full_name": "qiaofengsheng/pytorch-UNet", "topics": [], "description": "pytorch\u642d\u5efa\u81ea\u5df1\u7684unet\u7f51\u7edc\uff0c\u8bad\u7ec3\u81ea\u5df1\u7684\u6570\u636e\u96c6\u3002 "}
{"name": "huggingface/setfit", "full_name": "huggingface/setfit", "topics": ["few-shot-learning", "nlp", "sentence-transformers"], "description": "Efficient few-shot learning with Sentence Transformers"}
{"name": "avalon-benchmark/avalon", "full_name": "Avalon-Benchmark/avalon", "topics": ["deep-learning", "machine-learning", "python", "pytorch", "reinforcement-learning", "simulator"], "description": "A 3D video game environment and benchmark designed from scratch for reinforcement learning research"}
{"name": "eora-ai/torchok", "full_name": "eora-ai/torchok", "topics": ["computer-vision", "deep-learning", "image-retrieval", "image-segmentation", "image-classification", "representation-learning"], "description": "Production-oriented Computer Vision models training pipeline for common tasks: classification, segmentation, detection and representation\ud83e\udd64"}
{"name": "junlinhan/cwr", "full_name": "JunlinHan/CWR", "topics": ["computer-vision", "pytorch", "generative-adversarial-network", "image-generation", "underwater-image", "image-restoration", "low-level-vision"], "description": "Code and dataset for Single Underwater Image Restoration by Contrastive Learning, IGARSS 2021, oral."}
{"name": "marchetz/mantra-cvpr20", "full_name": "Marchetz/MANTRA-CVPR20", "topics": [], "description": "Official Pytorch code for MANTRA - Memory Augmented Neural Trajectory Predictor (CVPR2020)"}
{"name": "chenshisen/ncnnqat", "full_name": "ChenShisen/ncnnqat", "topics": [], "description": "quantize aware training package for NCNN on pytorch"}
{"name": "bboylyg/nad", "full_name": "bboylyg/NAD", "topics": ["backdoor-attacks", "deep-neural-networks", "erasing-backdoor-triggers", "pytorch", "backdoor-defense"], "description": "This is an implementation demo of the ICLR 2021 paper [Neural Attention Distillation: Erasing Backdoor Triggers from Deep Neural Networks](https://openreview.net/pdf?id=9l0K4OM-oXE) in PyTorch."}
{"name": "asahi417/lm-question-generation", "full_name": "asahi417/lm-question-generation", "topics": ["nlp", "question-generation", "t5", "bart", "question-answering", "pytorch"], "description": "Multilingual/multidomain question generation datasets, models, and python library for question generation. "}
{"name": "torchspatiotemporal/tsl", "full_name": "TorchSpatiotemporal/tsl", "topics": ["deep-learning", "gnn", "graph-neural-networks", "pytorch", "spatio-temporal", "spatio-temporal-analysis", "spatio-temporal-data", "spatio-temporal-graph", "spatio-temporal-prediction", "spatiotemporal", "spatiotemporal-data", "spatiotemporal-data-analysis", "spatiotemporal-forecasting", "temporal-data", "temporal-graphs"], "description": "tsl: a PyTorch library for processing spatiotemporal data."}
{"name": "flyhighest/unrealperson", "full_name": "FlyHighest/UnrealPerson", "topics": ["pytorch", "unrealengine", "re-identification"], "description": "[CVPR-2021]  UnrealPerson: An  adaptive pipeline  for  costless person re-identification"}
{"name": "lizhi-sjtu/marl-code-pytorch", "full_name": "Lizhi-sjtu/MARL-code-pytorch", "topics": ["mappo", "mpe", "qmix", "reinforcement-learning", "smac", "vdn", "maddpg", "matd3"], "description": "Concise pytorch implements of MARL algorithms, including MAPPO, MADDPG, MATD3, QMIX and VDN."}
{"name": "confusezius/cvpr2020_pads", "full_name": "Confusezius/CVPR2020_PADS", "topics": ["deep-metric-learning", "cvpr2020", "pytorch", "deep-learning", "retrieval", "cub200-2011", "cars196", "metric-learning"], "description": "(CVPR 2020) This repo contains code for \"PADS: Policy-Adapted Sampling for Visual Similarity Learning\", which proposes learnable triplet mining with Reinforcement Learning."}
{"name": "tf2jaguar/pytorch_train", "full_name": "tf2jaguar/pytorch_train", "topics": ["resnet-34", "pytorch-tutorial"], "description": "\u6bd5\u4e1a\u8bbe\u8ba1 \u4f7f\u7528pytorch\u8fdb\u884c\u6df1\u5ea6\u5b66\u4e60\u7f51\u7edc\u6a21\u578b\u8bad\u7ec3\uff0c\u5b9e\u73b0\u8f66\u578b\u8bc6\u522b"}
{"name": "fredzzhang/spatially-conditioned-graphs", "full_name": "fredzzhang/spatially-conditioned-graphs", "topics": ["human-object-interaction", "pytorch", "graphical-models", "iccv2021"], "description": "Official PyTorch implementation for ICCV 2021 paper \"Spatially Conditioned Graphs for Detecting Human\u2013Object Interactions\""}
{"name": "snap-research/graphless-neural-networks", "full_name": "snap-research/graphless-neural-networks", "topics": ["deep-learning", "distillation", "efficient-inference", "graph-algorithm", "graph-neural-networks", "knowledge-distillation", "pytorch", "gnn", "scalability"], "description": "[ICLR 2022] Code for Graph-less Neural Networks: Teaching Old MLPs New Tricks via Distillation (GLNN)"}
{"name": "sayednadim/global-and-local-attention-based-free-form-image-inpainting", "full_name": "SayedNadim/Global-and-Local-Attention-Based-Free-Form-Image-Inpainting", "topics": ["inpainting", "attention-mechanism", "generative-adversarial-network"], "description": "Official implementation of \"Global and local attention-based free-form image inpainting\""}
{"name": "sithu31296/image-classification", "full_name": "sithu31296/sota-backbones", "topics": ["image-classification", "pytorch", "vision-transformer", "mlp-mixer", "sota", "object-recognition", "imagenet", "cnn", "transformer", "mlp", "deep-learning", "quantization"], "description": "A collection of SOTA Image Classification Models in PyTorch"}
{"name": "helblazer811/manimmachinelearning", "full_name": "helblazer811/ManimML", "topics": ["machine-learning", "neural-network", "visualization", "manim", "3blue1brown"], "description": "ManimML is a project focused on providing animations and visualizations of common machine learning concepts with the Manim Community Library."}
{"name": "tfaehse/dashcamcleaner", "full_name": "tfaehse/DashcamCleaner", "topics": ["dashcam", "blur", "opencv", "anonymizer", "yolov5", "plates", "faces", "video", "frame", "pytorch"], "description": "Censor identifiable information in videos., in particular dashcam recordings in Germany."}
{"name": "aminparvaneh/alpha_mix_active_learning", "full_name": "AminParvaneh/alpha_mix_active_learning", "topics": ["computer-vision", "active-learning", "image-classification", "deep-learning"], "description": "The official implementation of Active Learning by Feature Mixing (ALFA-Mix) paper"}
{"name": "moritztng/prism", "full_name": "moritztng/prism", "topics": ["style-transfer", "high-resolution", "controlling-perceptual-factors", "pytorch", "mixed-precision"], "description": "High Resolution Style Transfer in PyTorch with Color Control and Mixed Precision :art: "}
{"name": "gmftbygmftby/opendialog", "full_name": "gmftbyGMFTBY/OpenDialog", "topics": ["corpus", "generative", "retrieval", "gpt2", "bert", "transformers", "gan-based", "wechat-api", "multi-view", "wechat", "chinese", "open-domain", "reinforcement-learning", "pytorch"], "description": "An Open-Source Package for Chinese Open-domain Conversational Chatbot (\u4e2d\u6587\u95f2\u804a\u5bf9\u8bdd\u7cfb\u7edf\uff0c\u4e00\u952e\u90e8\u7f72\u5fae\u4fe1\u95f2\u804a\u673a\u5668\u4eba)"}
{"name": "sooftware/pytorch-lr-scheduler", "full_name": "sooftware/pytorch-lr-scheduler", "topics": ["learning-rate", "scheduler", "warmup", "transformer", "reduce", "lr", "plateau", "tri-stage"], "description": "PyTorch implementation of some learning rate schedulers for deep learning researcher."}
{"name": "evonneng/learning2listen", "full_name": "evonneng/learning2listen", "topics": [], "description": "Official pytorch implementation for Learning to Listen: Modeling Non-Deterministic Dyadic Facial Motion (CVPR 2022)"}
{"name": "shanjiayao/ptt", "full_name": "shanjiayao/PTT", "topics": ["point-cloud", "tracking", "sot", "deep-learning"], "description": "Official PyTorch Implementation for \"PTT: Point-Track-Transformer Module for 3D Single Object Trackingin Point Clouds\""}
{"name": "shenhanqian/speechdrivestemplates", "full_name": "ShenhanQian/SpeechDrivesTemplates", "topics": ["co-speech-gesture", "pytorch"], "description": "[ICCV 2021] The official repo for the paper \"Speech Drives Templates: Co-Speech Gesture Synthesis with Learned Templates\"."}
{"name": "hltchkust/xpersona", "full_name": "HLTCHKUST/Xpersona", "topics": ["crosslingual", "dataset", "bert", "chatbot", "transformer", "dialog"], "description": "XPersona: Evaluating Multilingual Personalized Chatbot"}
{"name": "dootmaan/mt-unet", "full_name": "Dootmaan/MT-UNet", "topics": ["segmentation", "medical-imaging", "transformer", "deep-learning"], "description": "Official Code for *Mixed Transformer UNet for Medical Image Segmentation*"}
{"name": "enochkan/plexiglass", "full_name": "enochkan/plexiglass", "topics": ["adversarial-attacks", "deep-learning", "cybersecurity", "machine-learning", "deep-neural-networks", "security"], "description": "A PyTorch toolbox for adversarial attack and deepfake detection research. "}
{"name": "rubenwiersma/hsn", "full_name": "rubenwiersma/hsn", "topics": ["geometric-deep-learning", "pytorch-geometric", "3d", "convolutional-neural-networks", "pytorch", "siggraph"], "description": "Code for SIGGRAPH paper CNNs on Surfaces using Rotation-Equivariant Features"}
{"name": "gordicaleksa/pytorch-neural-style-transfer-fast", "full_name": "gordicaleksa/pytorch-neural-style-transfer-johnson", "topics": ["neural-style-transfer", "machine-learning", "deep-learning", "python", "pytorch", "non-photorealistic-rendering", "neural-style-transfer-tutorial", "deep-learning-tutorial", "style-transfer"], "description": "Reconstruction of the fast neural style transfer (Johnson et al.). Some portions of the paper have been improved by the follow-up work like the instance normalization, etc. Checkout transformer_net.py's header for details."}
{"name": "prismformore/invpt", "full_name": "prismformore/Multi-Task-Transformer", "topics": ["computer-vision", "deep-learning", "depth-estimation", "eccv2022", "human-parsing", "multi-task-learning", "nyudv2", "pascal", "scene-understanding", "segmentation"], "description": "Code of ICLR2023 paper \"TaskPrompter: Spatial-Channel Multi-Task Prompting for Dense Scene Understanding\" and ECCV2022 paper \"Inverted Pyramid Multi-task Transformer for Dense Scene Understanding\""}
{"name": "stanleylsx/entity_extractor_by_binary_tagging", "full_name": "StanleyLsx/entity_extractor_by_pointer", "topics": ["pytorch", "bert", "entity-extraction", "binary-tagging", "ner", "globalpointer"], "description": "\u4f7f\u7528torch\u6574\u5408\u4e24\u79cd\u7ecf\u5178\u7684\u6307\u9488NER\u62bd\u53d6\u8303\u5f0f\uff0c\u5206\u522b\u662fSpanBert\u548c\u82cf\u795e\u7684GlobalPointer\uff0c\u7b80\u5355\u52a0\u4e86\u4e9btricks\uff0c\u914d\u7f6e\u540e\u4e00\u952e\u8fd0\u884c"}
{"name": "cptq/signnet-basisnet", "full_name": "cptq/SignNet-BasisNet", "topics": ["deep-learning", "graph-neural-networks", "machine-learning", "graph", "graph-convolutional-networks", "graph-machine-learning", "graph-transformer", "transformer-models"], "description": "SignNet and BasisNet"}
{"name": "sberbank-ai/real-esrgan", "full_name": "ai-forever/Real-ESRGAN", "topics": ["python", "pytorch", "super-resolution", "esrgan", "real-world-super-resolution", "real-esrgan"], "description": "PyTorch implementation of Real-ESRGAN model"}
{"name": "patrick-kidger/fasterneuraldiffeq", "full_name": "patrick-kidger/FasterNeuralDiffEq", "topics": ["deep-neural-networks", "deep-learning", "pytorch", "dynamical-systems", "differential-equations", "ordinary-differential-equations", "controlled-differential-equations", "neural-differential-equations", "numerical-methods", "numerical-analysis", "machine-learning"], "description": "Code for \"'Hey, that's not an ODE:' Faster ODE Adjoints via Seminorms\" (ICML 2021)"}
{"name": "bshall/acoustic-model", "full_name": "bshall/acoustic-model", "topics": ["pytorch", "representation-learning", "speech", "voice-conversion"], "description": "Acoustic models for: A Comparison of Discrete and Soft Speech Units for Improved Voice Conversion"}
{"name": "lucidrains/charformer-pytorch", "full_name": "lucidrains/charformer-pytorch", "topics": ["artificial-intelligence", "deep-learning", "tokenization", "transformer"], "description": "Implementation of the GBST block from the Charformer paper, in Pytorch"}
{"name": "awslabs/gap-text2sql", "full_name": "awslabs/gap-text2sql", "topics": ["text2sql", "semantic-parsing", "deep-learning", "language-model", "pretrained-models", "machine-learning", "nlu", "nlp", "pytorch", "text-generation"], "description": "GAP-text2SQL: Learning Contextual Representations for Semantic Parsing with Generation-Augmented Pre-Training"}
{"name": "georgian-io/pyoats", "full_name": "georgian-io/pyoats", "topics": ["anomaly", "anomaly-detection", "data-science", "time-series", "timeseries", "machine-learning", "deep-learning"], "description": "Quick and Easy Time Series Outlier Detection"}
{"name": "owlting/ai_basketball_games_video_editor", "full_name": "OwlTing/AI_basketball_games_video_editor", "topics": ["basketball", "machine-learning", "ai", "computer-vision", "artificial-intelligence", "deep-learning", "yolov4", "pytorch", "pytorch-yolov4", "tensorrt", "objection-detection"], "description": "AI Basketball Games Video Editor is a program to get basketball highlight video by PyTorch YOLOv4 object detection"}
{"name": "fcakyon/video-transformers", "full_name": "fcakyon/video-transformers", "topics": ["classification", "layer", "machine-learning", "neptune", "onnx", "onnxruntime", "tensorboard", "video", "accelerate", "evaluate", "huggingface", "pytorch", "transformers", "video-classification", "wandb", "deep-learning", "python", "pytorch-video", "vision", "video-transformer"], "description": "Easiest way of fine-tuning HuggingFace video classification models"}
{"name": "lucidrains/nwt-pytorch", "full_name": "lucidrains/NWT-pytorch", "topics": ["artificial-intelligence", "deep-learning", "video-generation", "audio"], "description": "Implementation of NWT, audio-to-video generation, in Pytorch"}
{"name": "eeyhsong/eeg-transformer", "full_name": "eeyhsong/EEG-Transformer", "topics": ["deep-learning", "attention-mechanism", "vit", "transformer", "attention", "common-spatial-pattern", "eeg", "eeg-classification", "physiological-signals"], "description": "i. A practical application of Transformer (ViT) on 2-D physiological signal (EEG) classification tasks. Also could be tried with EMG, EOG, ECG, etc. ii. Including the attention of spatial dimension (channel attention) and *temporal dimension*. iii. Common spatial pattern (CSP), an efficient feature enhancement method, realized with Python."}
{"name": "gordicaleksa/pytorch-deepdream", "full_name": "gordicaleksa/pytorch-deepdream", "topics": ["deepdream", "machine-learning", "deep-learning", "python", "pytorch", "deep-dream-tutorial", "deep-learning-tutorial"], "description": "PyTorch implementation of DeepDream algorithm (Mordvintsev et al.). Additionally I've included playground.py to help you better understand basic concepts behind the algo."}
{"name": "hypergol/hypergol", "full_name": "hypergol/hypergol", "topics": ["machine-learning", "data-science", "performance", "code-generation", "parallel-processing", "data-modelling", "deep-learning", "deployment"], "description": "Hypergol is a Data Science/Machine Learning productivity toolkit to accelerate any projects into production with autogenerated code, standardised structure for data and ML and parallel processing out-of-the-box."}
{"name": "superlouis/gatgnn", "full_name": "superlouis/GATGNN", "topics": [], "description": "Pytorch Repository for our work: Graph convolutional neural networks with global attention for improved materials property prediction"}
{"name": "progamergov/dream-creator", "full_name": "ProGamerGov/dream-creator", "topics": ["deepdream", "pytorch", "visualization", "computer-vision", "googlenet", "inception", "pytorch-deepdream", "deep-dream", "dream-creator", "deepdream-model", "inception-v1", "spatial-decorrelation", "color-decorrelation", "tiling", "googlenet-model", "dataset-creation", "pretrained-models"], "description": "Quickly and easily create / train a custom DeepDream model"}
{"name": "mourga/contrastive-active-learning", "full_name": "mourga/contrastive-active-learning", "topics": ["active-learning", "natural-language-processing", "acquisition-functions", "deep-learning"], "description": "Code for the EMNLP 2021 Paper \"Active Learning by Acquiring Contrastive Examples\" & the ACL 2022 Paper \"On the Importance of Effectively Adapting Pretrained Language Models for Active Learning\""}
{"name": "miemie2013/pytorch-diou-yolov3", "full_name": "miemie2013/Pytorch-DIOU-YOLOv3", "topics": [], "description": "Pytorch\u590d\u73b0YOLOv3\uff0c\u4f7f\u7528\u6700\u65b0\u7684DIOU loss\u8bad\u7ec3"}
{"name": "zlinao/mintl", "full_name": "zlinao/MinTL", "topics": ["task-oriented-dialogue", "transfer-learning", "language-model", "transformer"], "description": "MinTL: Minimalist Transfer Learning for Task-Oriented Dialogue Systems"}
{"name": "lescientifik/open_brats2020", "full_name": "lescientifik/open_brats2020", "topics": ["deep-learning", "semantic-segmentation", "medical-imaging", "medical-image-segmentation", "pytorch", "unet", "brats", "brats-challenge"], "description": "Top 10 brats 2020 Solution"}
{"name": "tteepe/gaitgraph", "full_name": "tteepe/GaitGraph", "topics": ["gait-recognition", "gcn", "hrnet", "pose-estimation", "pytorch", "deep-learning"], "description": "Official repository for \"GaitGraph: Graph Convolutional Network for Skeleton-Based Gait Recognition\" (ICIP'21)"}
{"name": "directgroup/direct", "full_name": "NKI-AI/direct", "topics": ["pytorch", "deep-learning", "mri-reconstruction", "inverse-problems", "medical-imaging", "fastmri-challenge"], "description": "Deep learning framework for MRI reconstruction"}
{"name": "he-dhamo/simsg", "full_name": "he-dhamo/simsg", "topics": ["scene-graphs", "image-manipulation", "gans", "generative-models", "pytorch", "deep-learning", "graph-convolution"], "description": "Semantic Image Manipulation using Scene Graphs (CVPR 2020)"}
{"name": "luodian/generalizable-mixture-of-experts", "full_name": "Luodian/Generalizable-Mixture-of-Experts", "topics": ["deep-learning", "domain-generalization", "pytorch", "pytorch-implementation"], "description": "GMoE could be the next backbone model for many kinds of generalization task."}
{"name": "cthoyt/class-resolver", "full_name": "cthoyt/class-resolver", "topics": ["python", "pytorch", "optuna", "utility"], "description": "\ud83d\udd0d Lookup classes and instantiate them with style"}
{"name": "sapphire497/query-selected-attention", "full_name": "sapphire497/query-selected-attention", "topics": ["image-to-image-translation", "generative-adversarial-network", "contrastive-learning"], "description": "Official implementation for \"QS-Attn: Query-Selected Attention for Contrastive Learning in I2I Translation\" (CVPR 2022)"}
{"name": "lingyanruan/drbnet", "full_name": "lingyanruan/DRBNet", "topics": ["deep-learning", "defocus-blur", "defocus-deblurring", "light-field"], "description": "[CVPR Oral 2022] PyTorch Implementation for \"Learning to Deblur using Light Field Generated and Real Defocused Images\""}
{"name": "kywen1119/dsran", "full_name": "kywen1119/DSRAN", "topics": ["pytorch", "image-text-matching", "tcsvt", "cross-modal", "computer-vision"], "description": "Code for journal paper \"Learning Dual Semantic Relations with Graph Attention for Image-Text Matching\", TCSVT, 2020."}
{"name": "mdeib/berkeley-deep-rl-pytorch-starter", "full_name": "mdeib/berkeley-deep-RL-pytorch-starter", "topics": ["cs285", "reinforcement-learning", "pytorch-rl"], "description": "Pytorch starter code for UC Berkeley's cs285 assignments"}
{"name": "siyuhuang/posestylizer", "full_name": "siyuhuang/PoseStylizer", "topics": ["person-image-generation", "pytorch"], "description": "PyTorch implementation of Generating Person Images with Appearance-aware Pose Stylizer (IJCAI 2020)"}
{"name": "lslrh/cpsl", "full_name": "lslrh/CPSL", "topics": [], "description": "Official pytorch implementation of CPSL: class-balanced pixel-level self-labeling for domain adaptive semantic segmentation (CVPR 2022) "}
{"name": "apapiu/guided-diffusion-keras", "full_name": "apapiu/guided-diffusion-keras", "topics": ["deep-learning", "diffusion-models", "generative-model", "keras", "text-to", "text-to-image", "stable-diffusion"], "description": "Text to Image Diffusion Models in Keras"}
{"name": "huangjh-pub/multibody-sync", "full_name": "huangjh-pub/multibody-sync", "topics": ["deep-learning", "multi-body", "point-cloud"], "description": "[CVPR'21 Oral] MultiBodySync: Multi-Body Segmentation and Motion Estimation via 3D Scan Synchronization"}
{"name": "jw9730/setvae", "full_name": "jw9730/setvae", "topics": ["point-cloud", "3d-generation", "permutation-invariant-training", "attention-mechanism", "transformer", "vae", "pytorch"], "description": "[CVPR'21] SetVAE: Learning Hierarchical Composition for Generative Modeling of Set-Structured Data, in PyTorch"}
{"name": "ami-iit/adam", "full_name": "ami-iit/ADAM", "topics": ["rigid-body-dynamics", "automatic-differentiation", "casadi", "python", "robotics", "jax", "numpy", "optimization", "urdf", "pytorch", "motion-planning", "reinforcement-learning"], "description": "ADAM implements a collection of algorithms for calculating rigid-body dynamics in Jax, CasADi, PyTorch, and Numpy."}
{"name": "nvidia-merlin/systems", "full_name": "NVIDIA-Merlin/systems", "topics": ["deep-learning", "gpu", "recommender-system", "recommendation-system", "ensemble", "machine-learning", "python", "tensorflow"], "description": "Merlin Systems provides tools for combining recommendation models with other elements of production recommender systems (like feature stores, nearest neighbor search, and exploration strategies) into end-to-end recommendation pipelines that can be served with Triton Inference Server."}
{"name": "lucidrains/discrete-key-value-bottleneck-pytorch", "full_name": "lucidrains/discrete-key-value-bottleneck-pytorch", "topics": ["artificial-intelligence", "deep-learning", "memory", "quantization", "transfer-learning", "system-2"], "description": "Implementation of Discrete Key / Value Bottleneck, in Pytorch"}
{"name": "janosh/tensorboard-reducer", "full_name": "janosh/tensorboard-reducer", "topics": ["tensorboard", "pytorch", "tensorboard-pytorch", "reducer", "machine-learning", "averaging", "csv", "tensorboard-reducer"], "description": "Reduce multiple PyTorch TensorBoard runs to new event (or CSV) files."}
{"name": "btdlozc-sjtu/timeseriesresearch", "full_name": "BTDLOZC-SJTU/TimeSeriesResearch", "topics": ["time-series", "pytorch", "deep-learning"], "description": "\u8fd9\u4e2a\u5f00\u6e90\u9879\u76ee\u4e3b\u8981\u662f\u5bf9\u7ecf\u5178\u7684\u65f6\u95f4\u5e8f\u5217\u9884\u6d4b\u7b97\u6cd5\u8bba\u6587\u8fdb\u884c\u590d\u73b0\uff0c\u6a21\u578b\u4e3b\u8981\u53c2\u8003\u81eaGluonTS\uff0c\u6846\u67b6\u4e3b\u8981\u53c2\u8003\u81eaInformer"}
{"name": "anirudh257/strm", "full_name": "Anirudh257/strm", "topics": ["few-shot", "few-shot-learning", "few-shot-recognition", "cvpr2022", "cvpr", "action-recognition", "spatio-temporal"], "description": "[CVPR 2022] Official Pytorch Implementation for \"Spatio-temporal Relation Modeling for Few-shot Action Recognition\". SOTA Results for Few-shot Action Recognition"}
{"name": "zhengli97/ctkd", "full_name": "zhengli97/CTKD", "topics": [], "description": "Official pytorch implementation for \"Curriculum Temperature for Knowledge Distillation\" (AAAI 2023) https://arxiv.org/abs/2211.16231"}
{"name": "duskvirkus/alias-free-gan", "full_name": "duskvirkus/alias-free-gan", "topics": ["alias-free-gan", "pytorch", "pytorch-lightning", "machine-learning", "mlart", "ai-art", "generative-art", "stylegan"], "description": "Unofficial Alias-Free GAN implementation. Based on rosinality's version with expanded training and inference options."}
{"name": "juliawolleb/diffusion-based-segmentation", "full_name": "JuliaWolleb/Diffusion-based-Segmentation", "topics": [], "description": "This is the official Pytorch implementation of the paper \"Diffusion Models for Implicit Image Segmentation Ensembles\"."}
{"name": "hkunlp/icl-selective-annotation", "full_name": "HKUNLP/icl-selective-annotation", "topics": ["active-learning", "language-model", "nlp", "sample-selection", "in-context-learning", "natural-language-processing"], "description": "[ICLR 2023] Code for our paper \"Selective Annotation Makes Language Models Better Few-Shot Learners\""}
{"name": "monologg/ner-multimodal-pytorch", "full_name": "monologg/NER-Multimodal-pytorch", "topics": ["ner", "named-entity-recognition", "pytorch", "multimodal", "coattention", "tweets", "attention-network"], "description": "Pytorch Implementation of \"Adaptive Co-attention Network for Named Entity Recognition in Tweets\" (AAAI 2018)"}
{"name": "edisonleeeee/greatx", "full_name": "EdisonLeeeee/GreatX", "topics": ["adversarial-attacks", "graph-convolutional-networks", "graph-neural-networks", "pytorch", "graph-reliability-toolbox", "distribution-shift", "inherent-noise", "pytorch-geometric"], "description": "A graph reliability toolbox based on PyTorch and PyTorch Geometric (PyG)."}
{"name": "seorim0/dccrn-with-various-loss-functions", "full_name": "seorim0/DCCRN-with-various-loss-functions", "topics": ["loss-functions", "perceptual", "deep-learning", "speech-enhancement", "pytorch"], "description": "DCCRN with various loss functions"}
{"name": "jonathonluiten/instant-nerf-pytorch", "full_name": "JonathonLuiten/instant-nerf-pytorch", "topics": [], "description": "NeRF trained SUPER FAST in pytorch"}
{"name": "openmined/threepio", "full_name": "OpenMined/Threepio", "topics": ["pytorch", "tensorflow", "tensorflowjs", "hacktoberfest"], "description": "A multi-language library for translating commands between PyTorch, TensorFlow, and TensorFlow.js"}
{"name": "howuhh/faster-trajectory-transformer", "full_name": "Howuhh/faster-trajectory-transformer", "topics": ["trajectory-transformer", "reinforcement-learning", "transformer"], "description": "Implementation of Trajectory Transformer with attention caching and batched beam search"}
{"name": "kajyuuen/daaja", "full_name": "kajyuuen/daaja", "topics": ["nlp", "natural-language-processing", "data-augmentation"], "description": "This repository has implementations of data augmentation for NLP for Japanese."}
{"name": "jac99/footandball", "full_name": "jac99/FootAndBall", "topics": ["player-detector", "ball-detector", "deep-learning", "soccer", "football"], "description": "FootAndBall: Integrated player and ball detector"}
{"name": "dmis-lab/gener", "full_name": "dmis-lab/GeNER", "topics": ["named-entity-recognition", "ner", "dataset", "nlp"], "description": "Simple Questions Generate Named Entity Recognition Datasets (EMNLP 2022)"}
{"name": "davda54/ada-hessian", "full_name": "davda54/ada-hessian", "topics": ["adahessian", "hessian", "optimizer", "pytorch", "second-order", "adam"], "description": "Easy-to-use AdaHessian optimizer (PyTorch)"}
{"name": "baegwangbin/magnet", "full_name": "baegwangbin/MaGNet", "topics": ["3d-reconstruction", "computer-vision", "cvpr2022", "deep-learning", "depth-estimation", "multi-view-stereo", "multiview-geometry", "multiview-stereo", "uncertainty", "uncertainty-estimation"], "description": "(CVPR 2022 - oral) Multi-View Depth Estimation by Fusing Single-View Depth Probability with Multi-View Geometry"}
{"name": "frank-xwang/debiased-pseudo-labeling", "full_name": "frank-xwang/debiased-pseudo-labeling", "topics": [], "description": "[CVPR 2022] Pytorch implementation for \u201cDebiased Learning from Naturally Imbalanced Pseudo-Labels\u201d"}
{"name": "sysbiochalmers/dlkcat", "full_name": "SysBioChalmers/DLKcat", "topics": ["deep-learning", "bayesian", "enzyme-turnover-number", "enzyme-constraints", "kinetics", "kcat"], "description": "Deep learning and Bayesian approach applied to enzyme turnover number for the improvement of enzyme-constrained genome-scale metabolic models (ecGEMs) reconstruction"}
{"name": "vinthony/deep-blind-watermark-removal", "full_name": "vinthony/deep-blind-watermark-removal", "topics": ["watermark-removal", "pytorch", "aaai2021"], "description": "[AAAI 2021] Split then Refine: Stacked Attention-guided ResUNets for Blind Single Image Visible Watermark Removal"}
{"name": "lucidrains/rq-transformer", "full_name": "lucidrains/RQ-Transformer", "topics": ["artificial-intelligence", "deep-learning", "transformers", "attention-mechanism", "image-generation"], "description": "Implementation of RQ Transformer, proposed in the paper \"Autoregressive Image Generation using Residual Quantization\""}
{"name": "snap-research/r2l", "full_name": "snap-research/R2L", "topics": ["nerf", "deep-learning", "distillation", "neural-light-field", "mlp", "novel-view-synthesis", "rendering"], "description": "[ECCV 2022] R2L: Distilling Neural Radiance Field to Neural Light Field for Efficient Novel View Synthesis"}
{"name": "devsinghsachan/emdr2", "full_name": "DevSinghSachan/emdr2", "topics": ["open-domain-question-answering", "open-domain-qa", "question-answering", "natural-questions", "triviaqa", "webq", "natural-language-processing", "pytorch", "nlp", "information-retrieval"], "description": "Code and Models for the paper \"End-to-End Training of Multi-Document Reader and Retriever for Open-Domain Question Answering\" (NeurIPS 2021)"}
{"name": "holywu/vs-rife", "full_name": "HolyWu/vs-rife", "topics": ["vapoursynth", "rife", "pytorch", "tensorrt"], "description": "RIFE function for VapourSynth"}
{"name": "symbioticlab/zeus", "full_name": "SymbioticLab/Zeus", "topics": ["deep-learning", "energy", "mlsys"], "description": "An energy optimization framework for DNN training."}
{"name": "hajix/g2p", "full_name": "mohamadhasansohanajini/G2P", "topics": ["g2p", "pytorch", "attention-model"], "description": "Grapheme To Phoneme"}
{"name": "nandan91/ulsam", "full_name": "Nandan91/ULSAM", "topics": ["self-attention", "computer-vision", "pytorch", "fine-grained-classification", "mobile-networks", "compact-neural-network"], "description": "ULSAM: Ultra-Lightweight Subspace Attention Module for Compact Convolutional Neural Networks"}
{"name": "vcl3d/pano3d", "full_name": "VCL3D/Pano3D", "topics": ["depth-estimation", "360-depth-estimation", "spherical-depth-estimation", "panorama-dataset", "benchmark", "spherical-panoramas", "omnidirectional-panorama", "monocular-depth-estimation", "cnn", "pytorch", "matterport3d", "gibson-dataset", "pano3d", "cvpr21", "omnicv"], "description": "Code and models for \"Pano3D: A Holistic Benchmark and a Solid Baseline for 360 Depth Estimation\", OmniCV Workshop @ CVPR21."}
{"name": "junnyu/flashquad_pytorch", "full_name": "JunnYu/FLASHQuad_pytorch", "topics": [], "description": "FLASHQuad_pytorch"}
{"name": "nik-v9/heaputil", "full_name": "Nik-V9/HEAPUtil", "topics": ["localization", "visual-place-recognition", "utility", "contrastive-learning", "netvlad", "deep-learning"], "description": "Code for the RA-L (IROS) 2021 paper \"A Hierarchical Dual Model of Environment- and Place-Specific Utility for Visual Place Recognition\""}
{"name": "gewelsji/dgnet", "full_name": "GewelsJI/DGNet", "topics": ["deep-learning", "jittor", "pytorch", "camouflage", "camouflaged-object-detection", "concealed-object-detection", "ascend"], "description": "Deep Gradient Network for Camouflaged Object Detection (MIR 2023). Code using PyTorch & Jittor & Huawei-Ascend frameworks are available."}
{"name": "evelynfan/faceformer", "full_name": "EvelynFan/FaceFormer", "topics": ["computer-vision", "computer-graphics", "deep-learning", "facial-animation", "speech", "3d-face", "3d-models", "pytorch-implementation", "lip-animation", "facial-expressions"], "description": "[CVPR 2022] FaceFormer: Speech-Driven 3D Facial Animation with Transformers"}
{"name": "babelscape/ner4el", "full_name": "Babelscape/ner4el", "topics": ["nlp", "ner", "named-entity-recognition", "natural-language-processing"], "description": "Repository for the paper \"Named Entity Recognition for Entity Linking: What Works and What's Next\" (EMNLP 2021)."}
{"name": "jingtaozhan/repbert-index", "full_name": "jingtaozhan/RepBERT-Index", "topics": ["information-retrieval", "pytorch", "web-search"], "description": "RepBERT is a competitive first-stage retrieval technique. It represents documents and queries with fixed-length contextualized embeddings. The inner products of them are regarded as relevance scores. Its efficiency is comparable to bag-of-words methods."}
{"name": "ibm/infairness", "full_name": "IBM/inFairness", "topics": ["individual-fairness", "machine-learning", "pytorch", "fairness-ai", "trustworthy-machine-learning", "fairness", "responsible-ai"], "description": "PyTorch package to train and audit ML models for Individual Fairness"}
{"name": "lucidrains/adjacent-attention-network", "full_name": "lucidrains/adjacent-attention-network", "topics": ["artificial-intelligence", "deep-learning", "transformer", "attention-mechanism", "graph-neural-networks"], "description": "Graph neural network message passing reframed as a Transformer with local attention"}
{"name": "gait3d/gait3d-benchmark", "full_name": "Gait3D/Gait3D-Benchmark", "topics": ["gait", "gait-recognition", "gait-in-the-wild", "gait3d", "pytorch", "python", "smplgait"], "description": "This is the code for the paper \"Jinkai Zheng, Xinchen Liu, Wu Liu, Lingxiao He, Chenggang Yan, Tao Mei: Gait Recognition in the Wild with Dense 3D Representations and A Benchmark. (CVPR 2022)\""}
{"name": "wangwenhao0716/adapted-center-and-scale-prediction", "full_name": "WangWenhao0716/Adapted-Center-and-Scale-Prediction", "topics": [], "description": "Pytorch implementation of \"Adapted Center and Scale Prediction: More stable and More Accurate\""}
{"name": "miulab/dualug", "full_name": "MiuLab/DuaLUG", "topics": ["dual-learning", "nlg", "papers", "nlp", "nlu", "emnlp2020", "acl2019", "acl2020"], "description": "The implementation of the papers on dual learning of natural language understanding and generation. (ACL2019,2020; Findings of EMNLP 2020)"}
{"name": "ghosthamlet/gpt2-ml-torch", "full_name": "ghosthamlet/gpt2-ml-torch", "topics": [], "description": "Pytorch model for https://github.com/imcaspar/gpt2-ml"}
{"name": "fzj-inm1-bda/celldetection", "full_name": "FZJ-INM1-BDA/celldetection", "topics": ["cell-detection", "celldetection", "pytorch", "deep-learning", "instance-segmentation", "cell-segmentation", "cell-counting", "semantic-segmentation", "unet", "mask-rcnn", "fpn", "cpn", "object-detection"], "description": "Cell Detection with PyTorch."}
{"name": "vahe1994/deep-vectorization-of-technical-drawings", "full_name": "Vahe1994/Deep-Vectorization-of-Technical-Drawings", "topics": [], "description": "Official Pytorch repository for Deep Vectorization of Technical Drawings https://arxiv.org/abs/2003.05471"}
{"name": "bes-dev/pytorch_clip_guided_loss", "full_name": "bes-dev/pytorch_clip_guided_loss", "topics": ["gan", "vqgan-clip", "synthetic-media", "image-synthesis", "deep-learning", "neural-art"], "description": "A simple library that implements CLIP guided loss in PyTorch."}
{"name": "kakaoenterprise/learning-debiased-disentangled", "full_name": "kakaoenterprise/Learning-Debiased-Disentangled", "topics": [], "description": "Official Pytorch implementation of \"Learning Debiased Representation via Disentangled Feature Augmentation (Neurips 2021, Oral)\""}
{"name": "lucidrains/lie-transformer-pytorch", "full_name": "lucidrains/lie-transformer-pytorch", "topics": ["artificial-intelligence", "deep-learning", "attention-mechanism", "equivariance", "transformer", "se3"], "description": "Implementation of Lie Transformer, Equivariant Self-Attention, in Pytorch"}
{"name": "yxuansu/plangen", "full_name": "yxuansu/PlanGen", "topics": ["nlg", "nlp", "deep-learning"], "description": "[EMNLP'21] Plan-then-Generate: Controlled Data-to-Text Generation via Planning"}
{"name": "ml4its/mtad-gat-pytorch", "full_name": "ML4ITS/mtad-gat-pytorch", "topics": ["attention", "anomaly-detection", "gnn", "2021", "graph-neural-networks", "graph-attention-networks", "pytorch", "deep-learning", "time-series", "mtad-gat"], "description": "PyTorch implementation of MTAD-GAT (Multivariate Time-Series Anomaly Detection via Graph Attention Networks) by Zhao et. al (2020, https://arxiv.org/abs/2009.02040)."}
{"name": "shrubb/latent-pose-reenactment", "full_name": "shrubb/latent-pose-reenactment", "topics": ["deep-learning", "head-reenactment", "face-reenactment", "talking-head", "generative-model", "pose-estimation", "landmark-detection", "facial-landmarks", "self-supervised-learning", "voxceleb", "voxceleb2", "head-avatar", "avatar", "pytorch"], "description": "The authors' implementation of the \"Neural Head Reenactment with Latent Pose Descriptors\" (CVPR 2020) paper."}
{"name": "ytzhang99/cf-net", "full_name": "ytZhang99/CF-Net", "topics": ["super-resolution", "exposure-fusion", "pytorch", "deep-learning"], "description": "Official repository of \"Deep Coupled Feedback Network for Joint Exposure Fusion and Image Super-Resolution\""}
{"name": "chirag126/vog", "full_name": "chirag126/VOG", "topics": ["interpretability", "atypical-examples", "human-in-the-loop-auditing", "deep-learning", "explainability"], "description": "Estimating Example Difficulty using Variance of Gradients"}
{"name": "zinengtang/vidlankd", "full_name": "zinengtang/VidLanKD", "topics": [], "description": "Pytorch version of VidLanKD: Improving Language Understanding viaVideo-Distilled Knowledge Transfer (NeurIPS 2021))"}
{"name": "sapienzanlp/extend", "full_name": "SapienzaNLP/extend", "topics": ["natural-language-processing", "nlp", "entity-disambiguation", "entity-linking", "entity-disambiguation-models", "text-extraction", "pytorch", "acl", "acl2022"], "description": "Entity Disambiguation as text extraction (ACL 2022)"}
{"name": "autosoft-dev/code-bert", "full_name": "autosoft-dev/code-bert", "topics": ["machine-learning", "machine-learning-on-source-code", "bert-model", "roberta", "mlmodel", "python3", "deep-learning", "transformer", "function-docstring-pairs", "python"], "description": "Automatically check mismatch between code and comments using AI and ML"}
{"name": "choyingw/voice2mesh", "full_name": "choyingw/Cross-Modal-Perceptionist", "topics": ["3d", "speech-to-face", "3d-models", "pytorch", "3dmm", "biometrics", "cognitive-science", "deep-learning", "machine-learning", "cross-modal-learning", "computer-vision", "speech-synthesis", "speech", "cvpr", "cvpr2022"], "description": "CVPR 2022: Cross-Modal Perceptionist: Can Face Geometry be Gleaned from Voices?"}
{"name": "sjleo/dmad", "full_name": "SJLeo/DMAD", "topics": [], "description": "Pytorch implementation of our paper accepted by IEEE TMM, 2022 --Learning Efficient GANs for Image Translation via Differentiable Masks and co-Attention Distillation"}
{"name": "rishikksh20/avocodo-pytorch", "full_name": "rishikksh20/Avocodo-pytorch", "topics": ["hifi-gan", "speech-synthesis", "text-to-speech", "tts", "vocoder", "pytorch", "avocodo", "gan", "generative-adversarial-network"], "description": "Avocodo: Generative Adversarial Network for Artifact-free Vocoder"}
{"name": "arunppsg/tadgan", "full_name": "gusty1g/TadGAN", "topics": ["wasserstein-gan", "gradient-penalty", "generative-adversarial-network", "time-series-anomaly-detection", "pytorch"], "description": "Code for the paper \"TadGAN: Time Series Anomaly Detection Using Generative Adversarial Networks\""}
{"name": "tuttelikz/farabio", "full_name": "tuttelikz/farabio", "topics": ["deep-learning", "pytorch", "python", "biomedical-imaging", "biomedical", "models", "datasets"], "description": ":robot: PyTorch toolkit for biomedical imaging :heart:"}
{"name": "ternaus/cloths_segmentation", "full_name": "ternaus/cloths_segmentation", "topics": ["deep-learning", "computer-vision", "image-segmentation"], "description": "Code for binary segmentation of cloths"}
{"name": "pytorch-lumo/lumo", "full_name": "pytorch-lumo/lumo", "topics": ["pytorch", "deep-learning"], "description": "More light-weight pytorch experiment library!"}
{"name": "mahmoodlab/sish", "full_name": "mahmoodlab/SISH", "topics": ["pathology", "image-retrieval", "wsi-images", "histology", "image-search-engine", "histopathology", "mahmoodlab", "fish", "deep-learning", "vqvae", "bioimage-analysis", "bioimage-informatics"], "description": "Fast and scalable search of whole-slide images via self-supervised deep learning - Nature Biomedical Engineering"}
{"name": "francois-rozet/zuko", "full_name": "francois-rozet/zuko", "topics": ["density-estimation", "generative-model", "normalizing-flows", "probability", "torch", "deep-learning"], "description": "Normalizing flows in PyTorch"}
{"name": "harskish/tlgan", "full_name": "harskish/tlgan", "topics": ["disentanglement", "generative-adversarial-network", "time-lapse", "timelapse"], "description": "Time-Lapse Disentanglement With Conditional GANs [SIGGRAPH 2022]"}
{"name": "radoslawkrolikowski/financial-market-data-analysis", "full_name": "radoslawkrolikowski/financial-market-data-analysis", "topics": ["apache-spark", "structured-streaming", "apache-kafka", "pytorch", "python", "mariadb", "scrapy", "neural-networks", "financial-data"], "description": "Real-Time Financial Market Data Processing and Prediction application"}
{"name": "kahnchana/opl", "full_name": "kahnchana/opl", "topics": ["loss-functions", "deep-learning", "classification"], "description": "Official repository for \"Orthogonal Projection Loss\" (ICCV'21) "}
{"name": "manpreet1130/realtime-sudoku-solver", "full_name": "manpreet1130/RealTime-Sudoku-Solver", "topics": ["pytorch", "opencv-python", "image-processing", "cnn", "artificial-intelligence", "sudoku-solver", "realtime"], "description": "Solving sudoku puzzles with the help of OpenCV and PyTorch(CNN)"}
{"name": "eliphatfs/skeletonmerger", "full_name": "eliphatfs/SkeletonMerger", "topics": ["unsupervised-learning", "pytorch", "cvpr2021", "3d-computer-vision"], "description": "Code repository for paper `Skeleton Merger: an Unsupervised Aligned Keypoint Detector`."}
{"name": "bmw-innovationlab/bmw-classification-inference-gpu-cpu", "full_name": "BMW-InnovationLab/BMW-Classification-Inference-GPU-CPU", "topics": ["gluoncv", "deep-learning", "classification", "inference", "inference-api", "computer-vision"], "description": "This is a repository for an image classification inference API using the Gluoncv framework. The inference REST API works on CPU/GPU. It's supported on Windows and Linux Operating systems. Models trained using our Gluoncv Classification training repository can be deployed in this API. Several models can be loaded and used at the same time."}
{"name": "jacen789/relation-extraction", "full_name": "Jacen789/relation-extraction", "topics": ["relation-extraction", "chinese", "nre", "bert", "pytorch"], "description": "\u4e2d\u6587\u5173\u7cfb\u62bd\u53d6"}
{"name": "gml16/rl-medical", "full_name": "gml16/rl-medical", "topics": ["reinforcement-learning", "deep-reinforcement-learning", "deep-learning", "landmark-detection", "machine-learning", "healthcare", "multiagent-reinforcement-learning"], "description": "Communicative Multiagent Deep Reinforcement Learning for Anatomical Landmark Detection using PyTorch."}
{"name": "rajammanabrolu/q-bert", "full_name": "rajammanabrolu/Q-BERT", "topics": ["interactive-fiction", "text-games", "reinforcement-learning", "knowledge-graphs", "natural-language-processing", "exploration"], "description": "Agents that build knowledge graphs and explore textual worlds by asking questions"}
{"name": "tianweidadada/smp2020---weibo-sentiment-classification", "full_name": "Tianweidadada/SMP2020---Weibo-sentiment-classification", "topics": ["nlp", "smp"], "description": "SMP 2020\u5e74\u5fae\u535a\u60c5\u611f\u5206\u7c7b\u8bc4\u6d4b\u4efb\u52a1 \u7b2c\u516d\u540d\u89e3\u51b3\u65b9\u6848"}
{"name": "neonbjb/ocotillo", "full_name": "neonbjb/ocotillo", "topics": [], "description": "Performant and accurate speech recognition built on Pytorch"}
{"name": "pedrolarben/timeseriesforecasting-deeplearning", "full_name": "pedrolarben/TimeSeriesForecasting-DeepLearning", "topics": ["series-forecasting", "deep-learning", "deep-neural-networks"], "description": "An experiemtal review on deep learning architectures for time series forecasting"}
{"name": "junlinhan/bid", "full_name": "JunlinHan/BID", "topics": ["computer-vision", "computer-graphics", "pytorch", "generative-adversarial-network", "deraining", "deshadow", "dehaze", "reflection-removal", "image-decomposition", "computervision", "desnowing", "watermark-removal", "shadow-removal", "rain-removal", "raindrop-removal", "cityscapes"], "description": "Code for Blind Image Decomposition (BID) and Blind Image Decomposition network (BIDeN). ECCV, 2022."}
{"name": "antofuller/configaformers", "full_name": "antofuller/configaformers", "topics": ["transformers", "artificial-intelligence", "deep-learning", "pytorch"], "description": "A python library for highly configurable transformers - easing model architecture search and experimentation."}
{"name": "iflytek/minirbt", "full_name": "iflytek/MiniRBT", "topics": ["bert", "pre-trained-model", "pytorch", "roberta", "tensorflow"], "description": "MiniRBT (\u4e2d\u6587\u5c0f\u578b\u9884\u8bad\u7ec3\u6a21\u578b\u7cfb\u5217)"}
{"name": "richardkxu/distributed-pytorch", "full_name": "richardkxu/distributed-pytorch", "topics": ["distributed-training", "deep-learning", "computer-vision", "imagenet", "mixed-precision-training", "pytorch", "nvidia-apex", "tensorboard", "horovod"], "description": "Distributed, mixed-precision training with PyTorch"}
{"name": "mit-acl/nn_robustness_analysis", "full_name": "mit-acl/nn_robustness_analysis", "topics": ["robustness-verification", "robustness-analysis", "neural-networks", "control-systems", "adversarial-attacks", "reachability-analysis", "deep-learning", "robotics"], "description": "Python tools for analyzing the robustness properties of neural networks (NNs) from MIT ACL"}
{"name": "searchableai/kitanaqa", "full_name": "searchableai/KitanaQA", "topics": ["nlp", "natural-language-processing", "pytorch", "adversarial-attacks", "adversarial-training", "data-augmentation", "ml-automation", "question-answering", "bert", "transformer"], "description": "KitanaQA: Adversarial training and data augmentation for neural question-answering models"}
{"name": "seominseok0429/real-world-anomaly-detection-in-surveillance-videos-pytorch", "full_name": "seominseok0429/Real-world-Anomaly-Detection-in-Surveillance-Videos-pytorch", "topics": [], "description": "Real-world Anomaly Detection in Surveillance Videos- pytorch Re-implementation"}
{"name": "nusdbsystem/arm-net", "full_name": "nusdbsystem/ARM-Net", "topics": ["tabular-data", "structured-data", "pytorch", "attention", "frappe-dataset", "movielens-dataset", "avazu-dataset", "criteo-dataset", "diabetes-prediction", "healthcare-analysis", "121-uci-datasets", "log-based-anomaly-detection"], "description": "A ready-to-use framework of the state-of-the-art models for structured (tabular) data learning with PyTorch. Applications include recommendation, CRT prediction, healthcare analytics, anomaly detection, and etc."}
{"name": "myungsub/meta-interpolation", "full_name": "myungsub/meta-interpolation", "topics": ["frame-interpolation", "meta-learning", "slow-motion", "pytorch", "cvpr2020", "video-frame-interpolation", "deep-learning", "computer-vision"], "description": "Source code for CVPR 2020 paper \"Scene-Adaptive Video Frame Interpolation via Meta-Learning\""}
{"name": "spcl/daceml", "full_name": "spcl/daceml", "topics": ["pytorch", "machine-learning", "deep-learning", "compiler", "high-performance-computing", "fpga", "cuda"], "description": "A Data-Centric Compiler for Machine Learning"}
{"name": "markusrosen/pytorch_multi_input_example", "full_name": "MarkusRosen/pytorch_multi_input_example", "topics": ["deep-neural-networks", "pytorch-lightning", "pytorch", "tabular-data", "tutorial"], "description": "Multi-Input Deep Neural Networks with PyTorch-Lightning - Combine Image and Tabular Data"}
{"name": "seominseok0429/label-smoothing-visualization-pytorch", "full_name": "seominseok0429/label-smoothing-visualization-pytorch", "topics": [], "description": "When Does Label Smoothing Help?_pytorch_implementationimp"}
{"name": "guangmingw/doplearning", "full_name": "guangmingw/DOPlearning", "topics": ["deep-learning", "self-supervised-learning", "unsupervised-learning", "depth-prediction", "visual-odometry", "optical-flow"], "description": "Code for T-ITS paper \"Unsupervised Learning of Depth, Optical Flow and Pose with Occlusion from 3D Geometry\"  and for ICRA paper \"Unsupervised Learning of Monocular Depth and Ego-Motion Using Multiple Masks\"."}
{"name": "dk-jang/motion_puzzle", "full_name": "DK-Jang/motion_puzzle", "topics": ["motion-synthesis", "motion-style-transfer", "deep-learning", "pytorch", "siggraph2022"], "description": "Motion Puzzle - Official PyTorch implementation"}
{"name": "muyuuuu/e-commerce-search-recall", "full_name": "muyuuuu/E-commerce-Search-Recall", "topics": ["huggingface", "cosent", "dssm", "simcse", "pytorch", "tensorflow", "keras", "nsp", "unilm", "simbertv2"], "description": "\u5929\u6c60\u963f\u91cc\u7075\u6770\u95ee\u5929\u5f15\u64ce\u7535\u5546\u641c\u7d22\u7b97\u6cd5\u8d5b\u975e\u5b98\u65b9 baseline\uff0c\u53c8\u540d NLP  \u4ece\u5165\u95e8\u5230 22/2771\u3002"}
{"name": "beierzhu/prompt-align", "full_name": "BeierZhu/Prompt-align", "topics": ["few-shot-classifcation", "image-classification", "clip", "prompt-tuning", "domain-generalization", "pytorch"], "description": "Prompt-aligned Gradient for Prompt Tuning"}
{"name": "yusukeurakami/dreamer-pytorch", "full_name": "yusukeurakami/dreamer-pytorch", "topics": [], "description": "pytorch-implementation of Dreamer (Model-based Image RL Algorithm)"}
{"name": "maria-korosteleva/garment-pattern-estimation", "full_name": "maria-korosteleva/Garment-Pattern-Estimation", "topics": ["3d-reconstruction", "deep-learning", "garments"], "description": "Reconstructing garment sewing patterns from 3D point clouds"}
{"name": "shunchengwu/3dssg", "full_name": "ShunChengWu/3DSSG", "topics": ["scene-graph", "scene-graph-generation", "scene-understanding", "incremental", "deep-learning"], "description": null}
{"name": "thepushkarp/nalcos", "full_name": "thepushkarp/nalcos", "topics": ["commits", "natural-language", "information-retrieval", "sentence-transformers", "huggingface", "commit-search", "hacktoberfest", "python", "nlp"], "description": "Search Git commits in natural language"}
{"name": "nicklashansen/policy-adaptation-during-deployment", "full_name": "nicklashansen/policy-adaptation-during-deployment", "topics": ["reinforcement-learning", "deep-reinforcement-learning", "pytorch", "dm-control", "mujoco", "gym", "deep-learning", "robotics", "self-supervised-learning"], "description": "Training code and evaluation benchmarks for the \"Self-Supervised Policy Adaptation during Deployment\" paper."}
{"name": "nvidia-ai-iot/jetnet", "full_name": "NVIDIA-AI-IOT/jetnet", "topics": ["dataset", "deep-learning", "easy-to-use", "gpu", "jetson", "model", "neural-network", "nvidia", "pre-trained"], "description": "Easy to use neural networks for NVIDIA Jetson (and desktop too!)"}
{"name": "mihdalal/raps", "full_name": "mihdalal/raps", "topics": ["deep-learning", "reinforcement-learning", "robotics", "primitives", "artificial-intelligence"], "description": "[NeurIPS 2021] PyTorch Code for Accelerating Robotic Reinforcement Learning with Parameterized Action Primitives"}
{"name": "eubinecto/the-clean-transformer", "full_name": "eubinecto/the-clean-transformer", "topics": ["translate", "seq2seq", "transformer", "attention-mechanism", "attention", "pytorch", "clean-code", "weights-and-biases", "wandb"], "description": "A clean and structured implementation of Transformer with wandb and pytorch-lightning"}
{"name": "claying/gckn", "full_name": "claying/GCKN", "topics": [], "description": "Pytorch Implementation of Graph Convolutional Kernel Networks"}
{"name": "xharlie/btcdet", "full_name": "Xharlie/BtcDet", "topics": ["pytorch", "deep-learning", "point-cloud", "object-detection", "3d", "3d-object-detection", "lidar-point-cloud", "lidar", "autonomous-vehicles", "autonomous-driving", "occlusion-handling", "occlusion", "generative-model", "aaai2022", "aaai-2022", "self-driving-car", "self-driving", "computer-vision"], "description": "Behind the Curtain: Learning Occluded Shapes for 3D Object Detection"}
{"name": "wilhelmberghammer/machinelearning", "full_name": "wilhelmberghammer/MachineLearning", "topics": ["machine-learning", "ml", "pytorch"], "description": "[Not Active] This is where I learn machine learning"}
{"name": "zjunlp/hvpnet", "full_name": "zjunlp/HVPNeT", "topics": ["entity-extraction", "relation-extraction", "multimodal", "kg", "prefix", "hvpnet", "ner", "re", "naacl", "dataset", "multimodal-knowledge-graph", "multimodal-learning", "pytorch", "bert", "information-extraction"], "description": "Code for the NAACL2022 paper \"Good Visual Guidance Makes A Better Extractor: Hierarchical Visual Prefix for Multimodal Entity and Relation Extraction\""}
{"name": "roman-vygon/triplet_loss_kws", "full_name": "roman-vygon/triplet_loss_kws", "topics": ["pytorch", "deep-learning", "keyword-spotting", "speech-recognition"], "description": "Learning Efficient Representations for Keyword Spotting with Triplet Loss"}
{"name": "nikhilbarhate99/min-decision-transformer", "full_name": "nikhilbarhate99/min-decision-transformer", "topics": ["reinforcement-learning", "deep-reinforcement-learning", "deep-learning", "offline-reinforcement-learning", "pytorch", "pytorch-transformers", "transformer", "machine-learning", "openai-gym", "mujoco", "robotics"], "description": "Minimal implementation of Decision Transformer: Reinforcement Learning via Sequence Modeling  in PyTorch for mujoco control tasks in OpenAI gym"}
{"name": "upskyy/transformer-transducer", "full_name": "upskyy/Transformer-Transducer", "topics": ["transformer-transducer", "rnnt", "transformer", "sequence-to-sequence", "end-to-end", "speech-recognition"], "description": "PyTorch implementation of \"Transformer Transducer: A Streamable Speech Recognition Model with Transformer Encoders and RNN-T Loss\" (ICASSP 2020)"}
{"name": "chail/gan-ensembling", "full_name": "chail/gan-ensembling", "topics": ["image-synthesis", "image-classfication", "generative-adversarial-network", "pytorch"], "description": "Invert and perturb GAN images for test-time ensembling"}
{"name": "jolibrain/joligan", "full_name": "jolibrain/joliGAN", "topics": ["pytorch", "deep-learning", "machine-learning", "gan", "cyclegan", "neural-network", "deepdetect", "image2image", "image-translation"], "description": "Semantic Image-to-Image Translation for Domain Adaptation"}
{"name": "yangchen1997/multi-agent-reinforcement-learning", "full_name": "yangchen1997/Multi-Agent-Reinforcement-Learning", "topics": ["multi-agent-reinforcement-learning", "pettingzoo", "pytorch", "qmix", "centralized-ppo", "grid-wise-control", "independent-ppo"], "description": "PyTorch implements multi-agent reinforcement learning algorithms, including QMIX, Independent PPO, Centralized PPO, Grid Wise Control, Grid Wise Control+PPO, Grid Wise Control+DDPG."}
{"name": "maciejczyzewski/batchboost", "full_name": "maciejczyzewski/batchboost", "topics": ["deep-learning", "machine-learning", "pytorch"], "description": "batchboost is a variation on MixUp that instead of mixing just two images, mixes many images together."}
{"name": "kaiyangzhou/ssdg-benchmark", "full_name": "KaiyangZhou/ssdg-benchmark", "topics": ["domain-generalization", "semi-supervised-learning", "neural-networks", "deep-learning", "pytorch"], "description": "Benchmarks for semi-supervised domain generalization."}
{"name": "rootlu/l2p-gnn", "full_name": "rootlu/L2P-GNN", "topics": ["pre-train", "gnn", "meta-learning", "aaai2021"], "description": "Codes and datasets for AAAI-2021 paper \"Learning to Pre-train Graph Neural Networks\""}
{"name": "tensorly/torch", "full_name": "tensorly/torch", "topics": ["pytorch", "tensor", "deep-learning", "tensor-learning", "deep-neural-networks", "factorized-cnns", "tensor-regression", "tensor-contraction", "tensor-networks", "tensor-convolution-networks", "deep-tensor-learning", "tensorized-networks", "factorized-convolution", "tensor-regression-layers", "factorized-networks"], "description": "TensorLy-Torch: Deep Tensor Learning with TensorLy and PyTorch"}
{"name": "deepsphere/deepsphere-weather", "full_name": "deepsphere/deepsphere-weather", "topics": ["weather-forecasting", "deep-learning", "pytorch", "graph-neural-networks", "deepsphere"], "description": "A spherical CNN for weather forecasting"}
{"name": "kkirchheim/pytorch-ood", "full_name": "kkirchheim/pytorch-ood", "topics": ["anomaly-detection", "confidence-estimation", "deep-learning", "neural-network", "novelty-detection", "ood-detection", "open-set-recognition", "pytorch"], "description": "PyTorch Out-of-Distribution Detection"}
{"name": "finn-no/recsys_slates_dataset", "full_name": "finn-no/recsys_slates_dataset", "topics": ["recommender-system", "dataset", "deep-learning", "pytorch"], "description": "FINN.no Slate Dataset for Recommender Systems. A dataset containing all interactions (viewed items + response (clicked item / no click) for users over a longer time horizon."}
{"name": "thstkdgus35/bicubic_pytorch", "full_name": "sanghyun-son/bicubic_pytorch", "topics": ["pytorch", "imageprocessing", "superresolution"], "description": "A PyTorch implementation of widely-used bicubic interpolation, which is fully compatible with MATLAB."}
{"name": "lhc1224/osad_net", "full_name": "lhc1224/OSAD_Net", "topics": [], "description": "Pytorch implementation of One-Shot Affordance Detection"}
{"name": "threedle/3dhighlighter", "full_name": "threedle/3DHighlighter", "topics": ["3d", "computer-graphics", "deep-learning", "differentiable-rendering", "geometry-processing", "meshes", "neural-fields", "pytorch"], "description": "Localizing Regions on 3D Shapes via Text Descriptions"}
{"name": "hennyjie/braingb", "full_name": "HennyJie/BrainGB", "topics": ["brain-networks", "gcn", "graph-convolutional-networks", "graph-neural-networks", "network-embedding", "pytorch", "ai4health"], "description": "Officially Accepted to IEEE Transactions on Medical Imaging (TMI, IF: 11.037) - Special Issue on Geometric Deep Learning in Medical Imaging."}
{"name": "ai4ce/flat", "full_name": "ai4ce/FLAT", "topics": ["deep-learning", "point-cloud", "lidar", "adversarial-attacks", "3d-object-detection", "ai-safety", "trustworthy-ai", "trustworthy-machine-learning", "3d-perception", "robotics", "autonomous-driving", "gnss"], "description": "[ICCV2021 Oral] Fooling LiDAR by Attacking GPS Trajectory"}
{"name": "zassou65535/vits", "full_name": "zassou65535/VITS", "topics": ["vits", "voice-conversion", "text-to-speech", "pytorch", "voice-style-transfer", "voice-converter"], "description": "VITS\u306b\u3088\u308b\u30c6\u30ad\u30b9\u30c8\u8aad\u307f\u4e0a\u3052\u5668&\u30dc\u30a4\u30b9\u30c1\u30a7\u30f3\u30b8\u30e3\u30fc"}
{"name": "nasib-ullah/video-captioning-models-in-pytorch", "full_name": "nasib-ullah/video-captioning-models-in-Pytorch", "topics": ["video-captioning", "deep-learning", "sequence-to-sequence", "msvd", "msrvtt", "s2vt", "pytorch", "pytorch-implementation", "video-captioning-models", "video", "marn", "recnet"], "description": "A PyTorch implementation of state of the art video captioning models from 2015-2019 on MSVD and MSRVTT datasets."}
{"name": "theshadow29/vognet-pytorch", "full_name": "TheShadow29/vognet-pytorch", "topics": ["grounding", "visual-grounding", "video", "video-object-grounding", "pytorch-implementation", "vision", "vision-and-language", "nlp", "object-grounding", "video-grounding", "captioning-videos"], "description": "[CVPR20] Video Object Grounding using Semantic Roles in Language Description (https://arxiv.org/abs/2003.10606)"}
{"name": "avinashpaliwal/deep-slomo", "full_name": "avinashpaliwal/Deep-SloMo", "topics": ["hybrid-imaging", "video-frame-interpolation", "deep-slomo", "slow-motion", "deep-learning", "slomo", "convolutional-neural-networks", "frame-interpolation", "pytorch-implementation", "pytorch", "dual-cameras", "super-resolution", "video-super-resolution"], "description": "Official PyTorch implementation of \"Deep Slow Motion Video Reconstruction with Hybrid Imaging System\" (TPAMI)"}
{"name": "gordicaleksa/pytorch-learn-reinforcement-learning", "full_name": "gordicaleksa/pytorch-learn-reinforcement-learning", "topics": ["python", "deep-learning", "jupyter", "pytorch", "rl", "reinforcement-learning", "reinforcement-learning-algorithms", "ppo", "policy-gradient", "dqn", "pytorch-implementation", "deep-q-network", "pytorch-dqn", "pytorch-policy-gradient", "pytorch-ppo"], "description": "A collection of various RL algorithms like policy gradients, DQN and PPO. The goal of this repo will be to make it a go-to resource for learning about RL. How to visualize, debug and solve RL problems. I've additionally included playground.py for learning more about OpenAI gym, etc."}
{"name": "jh-lee-kr/l2p-pytorch", "full_name": "JH-LEE-KR/l2p-pytorch", "topics": ["continual-learning", "deep-learning", "pytorch-implementation"], "description": "Pytorch Implementation of Learning to Prompt (L2P) for Continual Learning @ CVPR22"}
{"name": "naoto0804/synshadow", "full_name": "naoto0804/SynShadow", "topics": ["shadow-removal", "shadow-detection", "pytorch"], "description": "Learning from Synthetic Shadows for Shadow Detection and Removal [Inoue and Yamasaki, IEEE TCSVT 2021]."}
{"name": "francois-rozet/lampe", "full_name": "francois-rozet/lampe", "topics": ["bayesian", "density-estimation", "density-ratio-estimation", "inference", "likelihood-free-inference", "normalizing-flows", "probability", "simulation-based-inference", "python", "pytorch"], "description": "Likelihood-free AMortized Posterior Estimation with PyTorch"}
{"name": "microndla/mobilevitv3", "full_name": "micronDLA/MobileViTv3", "topics": ["categorization", "deep-learning", "detection", "neural-network", "segmentation"], "description": null}
{"name": "gaohongkui/tplinker-ner", "full_name": "gaohongkui/TPLinker-NER", "topics": ["ner", "pytorch", "chinese-ner", "tplinker", "tplinker-ner"], "description": "TPlinker for NER \u4e2d\u6587/\u82f1\u6587\u547d\u540d\u5b9e\u4f53\u8bc6\u522b"}
{"name": "utiasasrl/hero_radar_odometry", "full_name": "utiasASRL/hero_radar_odometry", "topics": ["robotics", "radar", "deep-learning", "state-estimation"], "description": "Unsupervised radar odometry combining deep learning with classical state estimation"}
{"name": "chiayewken/span-aste", "full_name": "chiayewken/Span-ASTE", "topics": ["nlp"], "description": "Code Implementation of \"Learning Span-Level Interactions for Aspect Sentiment Triplet Extraction\"."}
{"name": "yifanxu74/evo-vit", "full_name": "YifanXu74/Evo-ViT", "topics": ["computer-vision", "deep-learning", "image-classification", "vision-transformer", "vision-transformers"], "description": "Official implement of Evo-ViT: Slow-Fast Token Evolution for Dynamic Vision Transformer"}
{"name": "m-nauta/prototree", "full_name": "M-Nauta/ProtoTree", "topics": ["pytorch", "computer-vision", "explainable-ai", "interpretability", "interpretable-machine-learning", "deep-neural-networks", "explainable-ml", "fine-grained-visual-categorization", "explainability", "interpretable-deep-learning", "decision-trees", "fine-grained-classification", "cvpr2021"], "description": "ProtoTrees: Neural Prototype Trees for Interpretable Fine-grained Image Recognition, published at CVPR2021"}
{"name": "tianyu0207/igd", "full_name": "tianyu0207/IGD", "topics": ["deep-learning", "one-class-classification", "anomaly-detection", "anomaly-segmentation"], "description": "Official code for 'Deep One-Class Classification via Interpolated Gaussian Descriptor' [AAAI 2022 Oral]"}
{"name": "denfed/leaf-audio-pytorch", "full_name": "denfed/leaf-audio-pytorch", "topics": [], "description": "Pytorch port of Google Research's LEAF Audio paper"}
{"name": "lucidrains/flash-cosine-sim-attention", "full_name": "lucidrains/flash-cosine-sim-attention", "topics": ["artificial-intelligence", "attention-mechanisms", "deep-learning"], "description": "Implementation of fused cosine similarity attention in the same style as Flash Attention"}
{"name": "yzhangcs/crfpar", "full_name": "yzhangcs/crfpar", "topics": ["pytorch", "treecrf", "dependency-parsing", "constituency-parsing", "acl2020", "ijcai2020"], "description": "[ACL'20, IJCAI'20] Code for \"Efficient Second-Order TreeCRF for Neural Dependency Parsing\" and \"Fast and Accurate Neural CRF Constituency Parsing\"."}
{"name": "yhhhli/snn_calibration", "full_name": "yhhhli/SNN_Calibration", "topics": [], "description": "Pytorch Implementation of Spiking Neural Networks Calibration, ICML 2021"}
{"name": "tusharsarkar3/tla", "full_name": "tusharsarkar3/TLA", "topics": ["machine-learning", "sentiment-analysis", "pytorch", "nlp", "text-classification", "hacktoberfest"], "description": "A comprehensive tool for linguistic analysis of communities"}
{"name": "x35f/unstable_baselines", "full_name": "x35f/unstable_baselines", "topics": ["baselines", "meta-rl", "model-based-rl", "pytorch", "reinforcement-learning"], "description": "Re-implementations of SOTA RL algorithms."}
{"name": "zhangchbin/onlinelabelsmoothing", "full_name": "zhangchbin/OnlineLabelSmoothing", "topics": ["regularization", "classification", "fine-grained-classification", "noisy-labels", "adversarial-attacks", "robustness", "deep-learning", "tip2021", "pytorch"], "description": "The official code for the paper \"Delving Deep into Label Smoothing\", IEEE TIP 2021"}
{"name": "chunyuwang/imu-human-pose-pytorch", "full_name": "CHUNYUWANG/imu-human-pose-pytorch", "topics": [], "description": "This is an official Pytorch implementation of \"Fusing Wearable IMUs with Multi-View Images for Human Pose Estimation: A Geometric Approach, CVPR 2020\". "}
{"name": "christophreich1996/semantic_pyramid_for_image_generation", "full_name": "ChristophReich1996/Semantic_Pyramid_for_Image_Generation", "topics": ["generative-adversarial-network", "gan", "adversarial-learning", "semantic-pyramid", "image-generation", "pytorch", "deep-learning", "deep-neural-networks", "machine-learning", "convolutional-neural-networks", "cnn", "semantic-pyramid-image-generation"], "description": "PyTorch reimplementation of the paper: \"Semantic Pyramid for Image Generation\" [CVPR 2020]."}
{"name": "thunlp/prompt-transferability", "full_name": "thunlp/Prompt-Transferability", "topics": ["nlp", "parameter-efficient-learning", "pretrained-language-model", "pretrained-language-models", "pretrained-models", "prompt", "prompt-tuning", "pytorch", "transfer-learning", "parameter-efficient-tuning"], "description": "On Transferability of Prompt Tuning for Natural Language Processing"}
{"name": "chenqi1126/sipe", "full_name": "chenqi1126/SIPE", "topics": ["cvpr", "weakly-supervised-segmentation", "pytorch", "cvpr2022", "semantic-segmentation"], "description": "[CVPR 2022] Self-supervised Image-specific Prototype Exploration for Weakly Supervised Semantic Segmentation"}
{"name": "lucidrains/tf-bind-transformer", "full_name": "lucidrains/tf-bind-transformer", "topics": ["artificial-intelligence", "deep-learning", "transformers", "attention-mechanism", "transcription-factor-binding", "transcription-factors", "gene-expression"], "description": "A repository with exploration into using transformers to predict DNA \u2194 transcription factor binding"}
{"name": "qinnzou/deepcrack", "full_name": "qinnzou/DeepCrack", "topics": ["deepcrack", "pavement-images", "crack-detection", "cnn", "deep-learning", "pavement-crack-detection", "convolutional-neural-network"], "description": "DeepCrack: Learning Hierarchical Convolutional Features for Crack Detection"}
{"name": "amazon-research/semimtr-text-recognition", "full_name": "amazon-science/semimtr-text-recognition", "topics": ["computer-vision", "consistency-regularization", "contrastive-learning", "ocr", "scene-text-recognition", "semi-supervised-learning", "text-recognition", "deep-learning", "pytorch", "self-supervised-learning"], "description": "Multimodal Semi-Supervised Learning for Text Recognition (SemiMTR)"}
{"name": "swapniljadhav1921/asamiasami", "full_name": "swapniljadhav1921/asamiasami", "topics": ["nlp", "ai", "indic-languages", "machine-learning", "bert", "deep-learning", "fairseq", "nmt", "neural-machine-translation", "nsfw-detection", "language-detection"], "description": "State-Of-The-Art & ready to use mini NLP models for Indian Languages"}
{"name": "borgwardtlab/togl", "full_name": "BorgwardtLab/TOGL", "topics": ["persistent-homology", "graph-learning", "iclr2022", "machine-learning", "graph-classification", "node-classification", "pytorch", "pytorch-geometric"], "description": "Topological Graph Neural Networks (ICLR 2022)"}
{"name": "claying/otk", "full_name": "claying/OTK", "topics": [], "description": "A Pytorch implementation of the optimal transport kernel embedding"}
{"name": "dirtyharrylyl/symnet", "full_name": "DirtyHarryLYL/SymNet", "topics": ["attribute-object", "compositional-zero-shot-learning", "deep-learning", "object-recognition"], "description": "As a part of the HAKE project (HAKE-Object), code for SymNet (CVPR'20 and TPAMI'21)."}
{"name": "ashawkey/dreamfields-torch", "full_name": "ashawkey/dreamfields-torch", "topics": [], "description": "A pytorch implementation of dreamfields with modifications."}
{"name": "borgwardtlab/sat", "full_name": "BorgwardtLab/SAT", "topics": ["graph-neural-networks", "graph-representation-learning", "graph-transformer", "icml-2022"], "description": "Official Pytorch code for Structure-Aware Transformer."}
{"name": "kaspergroesludvigsen/influenza_transformer", "full_name": "KasperGroesLudvigsen/influenza_transformer", "topics": ["deep-learning", "forecasting", "forecasting-models", "neural-networks", "pytorch", "sequence-to-sequence", "time-series", "time-series-forecasting", "transformers"], "description": "PyTorch implementation of Transformer model used in \"Deep Transformer Models for Time Series Forecasting: The Influenza Prevalence Case\""}
{"name": "gau-nernst/centernet-lightning", "full_name": "gau-nernst/centernet-lightning", "topics": ["pytorch", "object-detection", "pytorch-lightning", "centernet", "object-tracking"], "description": "Implementation of CenterNet and FairMOT with PyTorch Lightning"}
{"name": "liucongg/unilmchatchitrobot", "full_name": "liucongg/UnilmChatchitRobot", "topics": ["unilm", "nlp", "generation", "chatbot", "chinese"], "description": "Unilm for Chinese Chitchat Robot.\u57fa\u4e8eUnilm\u6a21\u578b\u7684\u5938\u5938\u5f0f\u95f2\u804a\u673a\u5668\u4eba\u9879\u76ee\u3002"}
{"name": "kaleidophon/token2index", "full_name": "Kaleidophon/token2index", "topics": ["indexing", "token", "nlp", "pytorch", "tensorflow", "numpy", "w2i", "t2i", "stoi", "itos", "i2t", "i2w", "deeplearning", "seq2seq", "deep-learning", "python", "transformers", "rnn", "rnns", "transformer"], "description": "A lightweight but powerful library to build token indices for NLP tasks, compatible with major Deep Learning frameworks like PyTorch and Tensorflow."}
{"name": "zhulf0804/pcreg.pytorch", "full_name": "zhulf0804/PCReg.PyTorch", "topics": ["registration", "point-cloud", "pointnet", "deep-learning"], "description": "A Simple Point Cloud Registration Network based on PointNet."}
{"name": "degardinbruno/kinetic-gan", "full_name": "DegardinBruno/Kinetic-GAN", "topics": ["gan", "synthetic-data", "gcn", "pytorch", "wacv2022", "human-behavior-understanding"], "description": "Code for the paper \"Generative Adversarial Graph Convolutional Networks for Human Action Synthesis\", WACV 2022"}
{"name": "nadeemlab/cep", "full_name": "nadeemlab/CEP", "topics": ["deep-learning", "endoscopy", "unsupervised-learning", "colonoscopy", "videos", "domain-adaptation", "sim2real", "real2sim", "segmentation", "area-coverage", "tracking", "computer-vision", "gan", "pytorch"], "description": "Computational Endoscopy Platform (advanced deep learning toolset for analyzing endoscopy videos) [MICCAI'22, MICCAI'21, ISBI'21, CVPR'20]"}
{"name": "junshutang/3dfaceshop", "full_name": "junshutang/3DFaceShop", "topics": [], "description": "3DFaceShop: Explicitly Controllable 3D-Aware Portrait Generation (Official Pytorch Implementation)"}
{"name": "jianzhnie/autotabular", "full_name": "jianzhnie/AutoTabular", "topics": ["automl", "structured-data", "pytorch-lightning", "hpo", "tabular-data", "scikit-learn", "xgboost", "lightgbm", "catboost", "machine-learning", "data-science", "feature-engineering", "deep-learning"], "description": "Automatic machine learning for tabular data. \u26a1\ud83d\udd25\u26a1"}
{"name": "multimodal/multimodal", "full_name": "multimodal/multimodal", "topics": ["visual-features", "datasets", "embeddings", "vision-and-language", "reasoning", "deep-learning"], "description": "A collection of multimodal datasets, and visual features for VQA and captionning in pytorch. Just run \"pip install multimodal\""}
{"name": "jw9730/hot", "full_name": "jw9730/hot", "topics": ["transformer", "graph", "equivariance", "pytorch", "self-attention", "gnn", "hypergraph"], "description": "[NeurIPS'21] Higher-order Transformers for sets, graphs, and hypergraphs, in PyTorch"}
{"name": "elephantmipt/bert-distillation", "full_name": "elephantmipt/bert-distillation", "topics": ["catalyst", "bert", "nlp", "distillation", "distilbert", "rubert"], "description": "Distillation of BERT model with catalyst framework"}
{"name": "pliang279/sent_debias", "full_name": "pliang279/sent_debias", "topics": ["machine-learning", "natural-language-processing", "fairness-ai", "representation-learning"], "description": "[ACL 2020] Towards Debiasing Sentence Representations"}
{"name": "ashutosh1919/neuro-symbolic-sudoku-solver", "full_name": "ashutosh1919/neuro-symbolic-sudoku-solver", "topics": ["neurosymboliccomputing", "machine-learning", "deep-learning", "reinforcement-learning", "neural-network", "neural-logic-machines", "sudoku-solver", "sudoku", "artificial-intelligence", "artificial-neural-networks", "reinforcement-learning-agent", "explainable-ai", "solving-sudoku-puzzles"], "description": "\u2699\ufe0f Solving sudoku using Deep Reinforcement learning in combination with powerful symbolic representations."}
{"name": "kcosta42/vqgan-clip-docker", "full_name": "kcosta42/VQGAN-CLIP-Docker", "topics": ["vqgan", "transformers", "docker", "text-to-image", "text2image", "deep-learning", "generative-adversarial-network", "generative-art"], "description": "Zero-Shot Text-to-Image Generation VQGAN+CLIP Dockerized"}
{"name": "nvlabs/motion-policy-networks", "full_name": "NVlabs/motion-policy-networks", "topics": [], "description": "This repo has the expert data generation infrastructure and Pytorch implementation of MPiNets."}
{"name": "benedekrozemberczki/pdn", "full_name": "benedekrozemberczki/PDN", "topics": ["gcn", "gnn", "deepwalk", "multiplex", "graph2vec", "pytorch", "graph-neural-network", "deep-learning", "pathfinder", "message-passing", "neural-message-passing", "cheminformatics", "molecules", "graph-classification", "node-classification", "network-science", "data-science", "transformer", "bert", "gpt-3"], "description": "The official PyTorch implementation of \"Pathfinder Discovery Networks for Neural Message Passing\" (WebConf '21)"}
{"name": "carlosholivan/musicaiz", "full_name": "carlosholivan/musicaiz", "topics": ["audio", "deep-learning", "machine-learning", "music", "music-generation", "python", "symbolic", "mir", "music-information-retrieval"], "description": "A python framework for symbolic music generation, evaluation and analysis"}
{"name": "daisatojp/mpo", "full_name": "daisatojp/mpo", "topics": ["reinforcement-learning", "python", "pytorch"], "description": "PyTorch Implementation of the Maximum a Posteriori Policy Optimisation"}
{"name": "mohammadkhalifa/xlm-roberta-ner", "full_name": "mukhal/xlm-roberta-ner", "topics": ["named-entity-recognition", "roberta", "nlp", "nlp-machine-learning", "transfer-learning", "sequence-labeling", "part-of-speech-tagging"], "description": "Named Entity Recognition with Pretrained XLM-RoBERTa"}
{"name": "allegroai/clearml-serving", "full_name": "allegroai/clearml-serving", "topics": ["machine-learning", "mlops", "devops", "deep-learning", "kubernetes", "ai", "clearml", "model-serving", "serving", "serving-pytorch-models", "serving-ml", "tensorflow-serving", "triton", "triton-inference-server"], "description": "ClearML - Model-Serving Orchestration and Repository Solution"}
{"name": "guoleisun/vss-cffm", "full_name": "GuoleiSun/VSS-CFFM", "topics": ["transformer", "video-semantic-segmentation"], "description": "Code for CVPR 2022 paper: Coarse-to-Fine Feature Mining for Video Semantic Segmentation"}
{"name": "lucidrains/isab-pytorch", "full_name": "lucidrains/isab-pytorch", "topics": ["artificial-intelligence", "deep-learning", "attention-mechanism", "attention"], "description": "An implementation of (Induced) Set Attention Block, from the Set Transformers paper"}
{"name": "xiaoachen98/ddb", "full_name": "xiaoachen98/DDB", "topics": ["domain-adaptation", "pytorch", "semantic-segmentation"], "description": "[NeurIPS 2022 Spotlight] Official implement of Deliberated Domain Bridging for Domain Adaptive Semantic Segmentation"}
{"name": "holywu/vs-realesrgan", "full_name": "HolyWu/vs-realesrgan", "topics": ["vapoursynth", "real-esrgan", "pytorch", "tensorrt"], "description": "Real-ESRGAN function for VapourSynth"}
{"name": "luodian/sf-moe-dg", "full_name": "Luodian/Generalizable-Mixture-of-Experts", "topics": ["deep-learning", "domain-generalization", "pytorch", "pytorch-implementation"], "description": "GMoE could be the next backbone model for many kinds of generalization task."}
{"name": "airctic/icedata", "full_name": "airctic/icedata", "topics": ["voc-parser", "dataset", "computer-vision-datasets", "coco", "annotations-formats", "deep-learning", "object-detection", "fastai", "annotation-parsers", "coco-parser", "pytorch", "pytorch-lightning", "custom-parser", "coco-dataset", "voc-dataset", "pycocotools", "pycoco"], "description": "IceData: Datasets Hub for the *IceVision* Framework"}
{"name": "coopercoppers/pfn", "full_name": "Coopercoppers/PFN", "topics": ["relation-extraction", "nlp", "multi-task-learning"], "description": "EMNLP 2021 - A Partition Filter Network for Joint Entity and Relation Extraction"}
{"name": "ikernels/transformers-lightning", "full_name": "iKernels/transformers-lightning", "topics": ["dataset", "transformers", "models"], "description": "A collection of Models, Datasets, DataModules, Callbacks, Metrics, Losses and Loggers to better integrate pytorch-lightning with transformers."}
{"name": "alonstern/function-identification", "full_name": "alonstern/function-identification", "topics": ["deep-learning", "machine-learning", "ml", "neural-network", "python", "pytorch", "reverse-engineering"], "description": "This project demonstrates how a convolutional neural network can be used to detect the boundaries of a function in compiled code"}
{"name": "chandlerbang/selftask-gnn", "full_name": "ChandlerBang/SelfTask-GNN", "topics": ["graph-neural-networks", "self-supervised-learning", "machine-learning", "deep-learning", "graph-mining"], "description": "Implementation of  paper \"Self-supervised Learning on Graphs:Deep Insights and New Directions\""}
{"name": "selimsef/xview2_solution", "full_name": "selimsef/xview2_solution", "topics": ["satellite-imagery", "deep-learning", "semantic-segmentation"], "description": "2nd place solution for Xview2 challenge https://xview2.org/"}
{"name": "jinzhuoran/cogie", "full_name": "jinzhuoran/CogIE", "topics": ["information-extraction", "named-entity-recognition", "relation-extraction", "event-extraction", "pytorch", "natural-language-processing", "nlp", "python", "entity-linking", "frame-semantic-parsing", "entity-typing", "acl2021", "demo"], "description": "CogIE: An Information Extraction Toolkit for Bridging Text and CogNet. ACL 2021"}
{"name": "vlsomers/bpbreid", "full_name": "VlSomers/bpbreid", "topics": ["computer-vision", "deep-learning", "person", "pytorch", "re-identification", "reid", "tracking", "wacv2023", "person-reidentification", "reidentification", "person-re-identification"], "description": "A strong baseline for body part-based person re-identification (see also our WACV23 paper)"}
{"name": "fanchimao/cmfnet", "full_name": "FanChiMao/CMFNet", "topics": ["image-restoration", "image-deblurring", "image-dehazing", "image-deraining", "attention", "unet"], "description": "Compound Multi-branch Feature Fusion for Real Image Restoration"}
{"name": "quick-ai/quickvision", "full_name": "oke-aditya/quickvision", "topics": ["computer-vision", "deep-learning", "pytorch", "pytorch-lightning"], "description": "An Easy To Use PyTorch Computer Vision Library"}
{"name": "toshas/torch-discounted-cumsum", "full_name": "toshas/torch-discounted-cumsum", "topics": ["pytorch", "discounted-cumulative-sum", "rl", "reinforcement-learning", "reinforce"], "description": "Fast Discounted Cumulative Sums in PyTorch"}
{"name": "aryanshekarlaban/data2vec-pytorch", "full_name": "arxyzan/data2vec-pytorch", "topics": ["pytorch", "self-supervised-learning", "data2vec", "fairseq", "roberta", "wav2vec", "huggingface", "beit"], "description": "PyTorch implementation of \"data2vec: A General Framework for Self-supervised Learning in Speech, Vision and Language\" from Meta AI"}
{"name": "atomicoo/paralleltts", "full_name": "atomicoo/FCH-TTS", "topics": ["tts", "english", "tibetan", "mandarin", "japanese", "russian", "dctts", "tacotron", "fastspeech", "korean", "chinese", "melgan", "pytorch"], "description": "A fast Text-to-Speech (TTS) model. Work well for English, Mandarin/Chinese, Japanese, Korean, Russian and Tibetan (so far).   \u5feb\u901f\u8bed\u97f3\u5408\u6210\u6a21\u578b\uff0c\u9002\u7528\u4e8e\u82f1\u8bed\u3001\u666e\u901a\u8bdd/\u4e2d\u6587\u3001\u65e5\u8bed\u3001\u97e9\u8bed\u3001\u4fc4\u8bed\u548c\u85cf\u8bed\uff08\u5f53\u524d\u5df2\u6d4b\u8bd5\uff09\u3002"}
{"name": "taeu/style-your-hair", "full_name": "Taeu/Style-Your-Hair", "topics": [], "description": "Official Pytorch implementation of \"Style Your Hair: Latent Optimization for Pose-Invariant Hairstyle Transfer via Local-Style-Aware Hair Alignment (ECCV 2022)\""}
{"name": "yurongyou/modest", "full_name": "YurongYou/MODEST", "topics": ["point-cloud", "pytorch", "object-detection", "autonomous-driving", "3d-detection", "unlabeled-data"], "description": "Code release for \"Learning to Detect Mobile Objects from LiDAR Scans Without Labels\" [CVPR 2022]"}
{"name": "tongjilibo/torch4keras", "full_name": "Tongjilibo/torch4keras", "topics": ["keras", "torch"], "description": "Use torch like keras"}
{"name": "zlinao/variational-transformer", "full_name": "zlinao/Variational-Transformer", "topics": ["machine-learning", "transformer", "variational-transformer", "dialog", "dialogue-systems"], "description": "Variational Transformers for Diverse Response Generation"}
{"name": "lingkai-kong/sde-net", "full_name": "Lingkai-Kong/SDE-Net", "topics": ["deep-learning", "uncertainty-quantification", "robustness", "open-world-classification"], "description": "Code for paper: SDE-Net: Equipping Deep Neural network with Uncertainty Estimates"}
{"name": "pandora-intelligence/fast-sentence-transformers", "full_name": "Pandora-Intelligence/fast-sentence-transformers", "topics": ["hacktoberfest", "nlp", "embeddings", "onnx", "sentence-transformers"], "description": "This repository, called fast sentence transformers, contains code to run 5X faster sentence transformers using tools like quantization and ONNX."}
{"name": "dayyass/qaner", "full_name": "dayyass/QaNER", "topics": ["natural-language-processing", "ner", "nlp", "data-science", "machine-learning", "named-entity-recognition", "python", "python3", "question-answering"], "description": "Unofficial implementation of QaNER: Prompting Question Answering Models for Few-shot Named Entity Recognition."}
{"name": "mhashas/document-image-unwarping-pytorch", "full_name": "mhashas/Document-Image-Unwarping-pytorch", "topics": ["computer-vision", "deep-learning", "convolutional-neural-networks", "unet", "deeplab-v3-plus", "pytorch", "document-unwarping", "mobilenet-v2", "resnet"], "description": "Pytorch implementation and extension of \"DocUnet: Document Image Unwarping via A Stacked U-Net\""}
{"name": "nitin4525/speechenhancement", "full_name": "Nitin4525/SpeechEnhancement", "topics": ["deeplearning", "speech-processing", "speechenhancement", "pytorch"], "description": "Combining Weighted Multi-resolution STFT Loss and Distance Fusion to Optimize Speech Enhancement Generative Adversarial Networks"}
{"name": "lucidrains/uformer-pytorch", "full_name": "lucidrains/uformer-pytorch", "topics": ["artificial-intelligence", "deep-learning", "image-segmentation", "transformer", "unet"], "description": "Implementation of Uformer, Attention-based Unet, in Pytorch"}
{"name": "geoffxy/habitat", "full_name": "geoffxy/habitat", "topics": ["deep-learning", "deep-neural-networks", "neural-networks", "performance-prediction", "performance", "gpu"], "description": "\ud83d\udd2e Execution time predictions for deep neural network training iterations across different GPUs."}
{"name": "kaylode/vehicle-counting", "full_name": "kaylode/vehicle-counting", "topics": ["object-tracking", "pytorch", "vehicle-tracking", "machine-learning", "vehicle-counting", "yolov5", "deepsort", "object-detection"], "description": "Vehicle counting using Pytorch"}
{"name": "oravus/seqnet", "full_name": "oravus/seqNet", "topics": ["visual-place-recognition", "localization", "sequential", "deep-learning", "1d-convolution", "temporal", "day-night", "snow", "place-recognition"], "description": "SeqNet: Code for the RA-L (ICRA) 2021 paper \"SeqNet: Learning Descriptors for Sequence-Based Hierarchical Place Recognition\""}
{"name": "mtics/deep-photo-enhancer", "full_name": "mtics/deep-photo-enhancer", "topics": ["image-enhancement", "python", "pytorch", "deep-photo-enhancer"], "description": "the Pytorch implementation of Deep Photo Enhancer"}
{"name": "hellloxiaotian/dudenet", "full_name": "hellloxiaotian/DudeNet", "topics": ["image-denoising", "deep-learning", "real-noise", "blind-denoising", "cnn", "cnn-pytorch", "python2", "image-preprocessing", "low-level-vision"], "description": "Designing and Training of A Dual CNN for Image Denoising (Knowledge-based Systems, 2021)"}
{"name": "theblackcat102/h5record", "full_name": "theblackcat102/H5Record", "topics": ["hdf5-library", "hdf5", "pytorch", "dataset"], "description": "Large dataset storage format for Pytorch"}
{"name": "sailist/lumo", "full_name": "pytorch-lumo/lumo", "topics": ["pytorch", "deep-learning"], "description": "More light-weight pytorch experiment library!"}
{"name": "inria-thoth/graphit", "full_name": "inria-thoth/GraphiT", "topics": [], "description": "Official Pytorch Implementation of GraphiT"}
{"name": "yuki-11/cssr", "full_name": "Yuki-11/CSSR", "topics": ["super-resolution", "semantic-segmentation", "deep-learning", "machine-learning", "joint-learning", "crack-detection", "mva", "python3", "pytorch", "crack-segmentation"], "description": "Crack Segmentation for Low-Resolution Images using Joint Learning with Super-Resolution (CSSR) was accepted to international conference on MVA2021 (oral), and selected for the Best Practical Paper Award."}
{"name": "yueliu1999/hsan", "full_name": "yueliu1999/HSAN", "topics": ["clustering", "data-mining", "deep-clustering", "deep-learning", "graph-clustering", "graph-neural-networks", "graphclustering", "machine-learning", "network-embedding", "representation-learning", "self-supervised-learning", "unsupervised-learning", "contrastive-learning"], "description": "[AAAI 2023] An official source code for paper Hard Sample Aware Network for Contrastive Deep Graph Clustering."}
{"name": "elijahcole/single-positive-multi-label", "full_name": "elijahcole/single-positive-multi-label", "topics": ["computer-vision", "multilabel-classification", "cvpr2021", "missing-labels", "deep-learning", "cvpr", "multi-label-classification"], "description": "Multi-Label Learning from Single Positive Labels - CVPR 2021"}
{"name": "welkinyang/gradtts", "full_name": "WelkinYang/GradTTS", "topics": [], "description": "Pytorch implementation of \"Grad-TTS: A Diffusion Probabilistic Model for Text-to-Speech\""}
{"name": "bm-k/kosentencebert_skt", "full_name": "BM-K/KoSentenceBERT-SKT", "topics": ["sentence-bert", "sentence-similarity", "natural-language-processing", "korean-sentence-bert"], "description": "Sentence Embeddings using Siamese SKT KoBERT-Networks"}
{"name": "megvii-research/pmn", "full_name": "megvii-research/PMN", "topics": ["pytorch", "raw", "data-augmentation", "denoising", "noise-modeling", "paired-data", "low-light"], "description": "[ACMMM 2022 Best Paper Runner-Up Award] Learnability Enhancement for Low-light Raw Denoising: Where Paired Real Data Meets Noise Modeling"}
{"name": "0x7o/text2keywords", "full_name": "0x7o/text2keywords", "topics": ["t5", "nlp", "keyword", "transformer", "natural-language-processing", "rut5", "keyt5", "transformers", "python"], "description": "Trained T5 and T5-large model for creating keywords from text"}
{"name": "filippoaleotti/reversing", "full_name": "FilippoAleotti/Reversing", "topics": ["stereo-matching", "monocular-depth-estimation", "computer-vision", "deep-learning", "eccv-2020"], "description": "Code for \"Reversing the cycle: self-supervised deep stereo through enhanced monocular distillation\""}
{"name": "evgeneus/graph-domain-adaptaion", "full_name": "Evgeneus/Graph-Domain-Adaptaion", "topics": ["domain-adaptation", "mtdap", "graph-neural-networks", "graph-convolutional-networks", "graph-domain-adaptation", "pytorch", "domainnet", "office", "pacs", "cdan", "curriculum-learning", "coteaching", "computer-vision"], "description": "PyTorch code for the paper \"Curriculum Graph Co-Teaching for Multi-target Domain Adaptation\" (CVPR2021)"}
{"name": "moon-hotel/transformertranslation", "full_name": "moon-hotel/TransformerTranslation", "topics": ["transformer"], "description": "A Transformer Framework Based Translation Task"}
{"name": "changliu00/causal-semantic-generative-model", "full_name": "changliu00/causal-semantic-generative-model", "topics": ["pytorch", "machine-learning", "generative-model", "causal-models"], "description": "Codes for Causal Semantic Generative model (CSG), the model proposed in \"Learning Causal Semantic Representation for Out-of-Distribution Prediction\" (NeurIPS-21)"}
{"name": "thuangb/enhancing-transformers", "full_name": "thuanz123/enhancing-transformers", "topics": ["pytorch", "rq-vae", "vit-vqgan"], "description": "An unofficial implementation of both ViT-VQGAN and RQ-VAE in Pytorch"}
{"name": "salesforce/cost", "full_name": "salesforce/CoST", "topics": ["contrastive-learning", "deep-learning", "self-supervised-learning", "time-series", "time-series-forecasting", "time-series-decomposition", "forecasting-model", "machine-learning"], "description": "PyTorch code for CoST: Contrastive Learning of Disentangled Seasonal-Trend Representations for Time Series Forecasting (ICLR 2022)"}
{"name": "chrisby/torchmtl", "full_name": "chrisby/torchMTL", "topics": ["deep-learning", "multi-task-learning", "pytorch", "framework", "python3", "machine-learning", "mtl"], "description": "A lightweight module for Multi-Task Learning in pytorch."}
{"name": "zjysteven/dverge", "full_name": "zjysteven/DVERGE", "topics": ["pytorch", "ensembles", "diversifying-vulnerabilities", "adversarial-robustness", "adversarial-attack-and-defense"], "description": "Pytorch implementation of our NeurIPS'20 *Oral* paper \"DVERGE: Diversifying Vulnerabilities for Enhanced Robust Generation of Ensembles\"."}
{"name": "shenzheng2000/pointnorm-for-point-cloud-analysis", "full_name": "ShenZheng2000/PointNorm-for-Point-Cloud-Analysis", "topics": [], "description": "This is the official Pytorch implementation of our paper \"PointNorm: Normalization is All You Need for Point Cloud Analysis\"\""}
{"name": "cripac-dig/grace", "full_name": "CRIPAC-DIG/GRACE", "topics": ["contrastive-learning", "graph-representation-learning", "deep-learning", "machine-learning"], "description": "[GRL+ @ ICML 2020] PyTorch implementation for \"Deep Graph Contrastive Representation Learning\" (https://arxiv.org/abs/2006.04131v2)"}
{"name": "curryyuan/instancerefer", "full_name": "CurryYuan/InstanceRefer", "topics": ["scanrefer", "leaderboard", "pytorch", "iccv2021"], "description": "[ICCV 2021] InstanceRefer: Cooperative Holistic Understanding for Visual Grounding on Point Clouds through Instance Multi-level Contextual Referring"}
{"name": "thuiar/adaptive-decision-boundary", "full_name": "thuiar/Adaptive-Decision-Boundary", "topics": ["open-classification", "natural-language-processing", "artificial-intelligence", "intent-detection", "out-of-distribution-detection", "aaai2021"], "description": "Deep Open Intent Classification with Adaptive Decision Boundary (AAAI 2021)"}
{"name": "yeongjoonju/cfr-gan", "full_name": "yeongjoonJu/CFR-GAN", "topics": ["deep-learning", "computer-vision", "face-frontalization", "face-de-occlusion", "face-rotation"], "description": "Complete Face Recovery GAN: Unsupervised Joint Face Rotation and De-Occlusion from a Single-View Image (WACV 2022)"}
{"name": "simonrennotte/data-efficient-reinforcement-learning-with-probabilistic-model-predictive-control", "full_name": "SimonRennotte/Data-Efficient-Reinforcement-Learning-with-Probabilistic-Model-Predictive-Control", "topics": ["reinforcement-learning", "pytorch", "pytorch-implementation", "gpytorch", "gaussian-processes", "model-predictive-control", "model-based-reinforcement-learning", "paper", "control-animation", "uncertainty"], "description": "Unofficial Implementation of the paper \"Data-Efficient Reinforcement Learning with Probabilistic Model Predictive Control\", applied to gym environments"}
{"name": "ziplab/ecoformer", "full_name": "ziplab/EcoFormer", "topics": ["neurips-2022", "classification", "efficient-transformers", "vision-transformer", "pytorch"], "description": "[NeurIPS 2022 Spotlight] This is the official PyTorch implementation of \"EcoFormer: Energy-Saving Attention with Linear Complexity\""}
{"name": "ariel415el/gpdm", "full_name": "ariel415el/GPDM", "topics": [], "description": "Original Pytorch implementation of the GPDM model introduced in \"Generating natural images with direct patch distributions matching\""}
{"name": "jac99/minkloc3dv2", "full_name": "jac99/MinkLoc3Dv2", "topics": ["computer-vision", "deep-learning", "point-cloud", "metric-learning", "place-recognition", "3d-vision", "3d-convolutional-network", "minkowski-engine"], "description": "MinkLoc3Dv2: Improving Point Cloud Based Place Recognition with Ranking-based Loss and Large Batch Training"}
{"name": "megengine/icd", "full_name": "MegEngine/ICD", "topics": ["object-detection", "pytorch", "megengine", "knowledge-distillation"], "description": "This is the official implementation of the paper \"Instance-conditional Knowledge Distillation for Object Detection\", based on MegEngine and Pytorch."}
{"name": "dongkyuk/dolg-pytorch", "full_name": "dongkyuk/DOLG-pytorch", "topics": ["image-retrieval", "deep-learning", "cnn", "pytorch", "dolg", "pytorch-lightning"], "description": "Unofficial PyTorch Implementation of \"DOLG: Single-Stage Image Retrieval with Deep Orthogonal Fusion of Local and Global Features\""}
{"name": "fcakyon/pywhisper", "full_name": "fcakyon/pywhisper", "topics": ["deep-learning", "machine-learning", "natural-language-processing", "nlp", "openai", "python", "pytorch", "speech-recognition", "speech-to-text", "whisper"], "description": "openai/whisper + extra features"}
{"name": "tinglok/cvc", "full_name": "Tinglok/CVC", "topics": ["voice-conversion", "speech", "pytorch", "cyclegan", "contrastive-learning"], "description": "CVC: Contrastive Learning for Non-parallel Voice Conversion (INTERSPEECH 2021, in PyTorch)"}
{"name": "eubinecto/wisdomify", "full_name": "wisdomify/wisdomify", "topics": ["bert", "reverse-dictionary", "proverbs", "pytorch", "nlp", "idioms", "education", "language"], "description": "A BERT-based reverse dictionary of Korean proverbs"}
{"name": "fcakyon/balanced-loss", "full_name": "fcakyon/balanced-loss", "topics": ["binary-crossentropy", "class-balanced-loss", "cross-entropy", "focal-loss", "loss-functions", "python", "pytorch", "balanced-loss", "cvpr", "pip", "pypi", "computer-vision", "deep-learning", "image-classification", "machine-learning"], "description": "Easy to use class balanced cross entropy and focal loss implementation for Pytorch"}
{"name": "inspirai/wilderness-scavenger", "full_name": "inspirai/wilderness-scavenger", "topics": ["deep-learning", "fps-game", "open-world", "reinforcement-learning"], "description": "A platform for intelligent agent learning based on a 3D open-world FPS game developed by Inspir.AI."}
{"name": "htdt/hyp_metric", "full_name": "htdt/hyp_metric", "topics": ["machine-learning", "computer-vision", "pytorch"], "description": "Hyperbolic Vision Transformers: Combining Improvements in Metric Learning | Official repository"}
{"name": "rishikksh20/lightspeech", "full_name": "rishikksh20/LightSpeech", "topics": ["text-to-speech", "fastspeech", "fastspeech2", "lightspeech", "tts", "pytorch", "speech", "speech-synthesis"], "description": "LightSpeech: Lightweight and Fast Text to Speech with Neural Architecture Search"}
{"name": "dahyun-kang/renet", "full_name": "dahyun-kang/renet", "topics": ["neural-networks", "pytorch", "computer-vision", "few-shot-learning", "few-shot-classifcation", "deep-learning", "iccv2021"], "description": "[ICCV'21] Official PyTorch implementation of Relational Embedding for Few-Shot Classification "}
{"name": "dmmaze/comic-text-detector", "full_name": "dmMaze/comic-text-detector", "topics": ["scene-text-detection", "weak-supervision", "weakly-supervised-segmentation", "ocr", "computer-vision", "manga-translation", "anime", "comics", "deep-learning", "object-detection"], "description": "Manga&Comic text detection"}
{"name": "sy-xuan/iics", "full_name": "SY-Xuan/IICS", "topics": [], "description": "Implementation \"Intra-Inter Camera Similarity for Unsupervised Person Re-Identification\" in pytorch (CVPR2021)"}
{"name": "binliang-nlp/intergcn-absa", "full_name": "BinLiang-NLP/InterGCN-ABSA", "topics": ["pytorch", "graph-neural-networks", "sentiment-analysis"], "description": "[COLING 2020] Jointly Learning Aspect-Focused and Inter-Aspect Relations with Graph Convolutional Networks for Aspect Sentiment Analysis"}
{"name": "messi-q/amevuldetector", "full_name": "Messi-Q/AMEVulDetector", "topics": ["smart-contracts", "vulnerability-detection", "expert-knowledge", "deep-learning"], "description": "Smart Contract Vulnerability Detection From Pure Neural Network to Interpretable Graph Feature and Expert Pattern Fusion (IJCAI-21 Accepted)"}
{"name": "dayyass/pytorch-ner", "full_name": "dayyass/pytorch-ner", "topics": ["deep-learning", "natural-language-processing", "nlp", "pytorch", "named-entity-recognition", "ner", "lstm", "text", "pipeline", "rnn", "onnx", "machine-learning", "python", "hacktoberfest"], "description": "Pipeline for training NER models using PyTorch."}
{"name": "anweshcr7/rhythmnet", "full_name": "AnweshCR7/RhythmNet", "topics": ["heart-rate", "deep-learning", "cnn", "pytorch", "rhythmnet-model"], "description": "End-to-end Heart Rate Estimation from Face via Spatial-temporal Representation. A replication of the RhythmNet model."}
{"name": "obss/trapper", "full_name": "obss/trapper", "topics": ["python", "nlp", "natural-language-processing", "allennlp", "pytorch", "transformer", "transformers", "pytorch-transformers", "deep-learning"], "description": "State-of-the-art NLP through transformer models in a modular design and consistent APIs."}
{"name": "droliven/msrgcn", "full_name": "Droliven/MSRGCN", "topics": ["gcn", "multiscale", "residuals", "pytorch", "frequency", "discrete-cosine-transform", "fourier-transform", "human-motion-prediction", "deep-learning", "deterministic", "iccv2021"], "description": "Official implementation of MSR-GCN (ICCV2021 paper)"}
{"name": "twke18/spml", "full_name": "twke18/SPML", "topics": ["computer-vision", "deep-learning", "metric-learning", "semantic-segmentation", "weakly-supervised-learning"], "description": "Universal Weakly Supervised Segmentation by Pixel-to-Segment Contrastive Learning"}
{"name": "lvyufeng/cybertron", "full_name": "lvyufeng/Cybertron", "topics": ["bert", "transformers", "mindspore", "nlp", "python", "machine-learning", "natural-language-processing", "deep-learning", "pretrained-models", "language-models", "mindspore-transformers", "model-hub", "modelzoo"], "description": "mindspore implementation of transformers"}
{"name": "indonlp/indonlg", "full_name": "IndoNLP/indonlg", "topics": ["dataset", "nlp", "indonlg", "natural-language-processing", "deep-learning", "bart", "gpt", "gpt2", "summarization", "benchmark", "qa", "chit-chat", "dialogue-system", "indonesian", "bahasa", "sundanese", "javanese"], "description": "The first-ever vast natural language generation benchmark for Indonesian, Sundanese, and Javanese. We provide multiple downstream tasks, pre-trained IndoGPT and IndoBART models, and a starter code! (EMNLP 2021)"}
{"name": "hristo-vrigazov/dnn.cool", "full_name": "hristo-vrigazov/dnn.cool", "topics": ["pytorch", "deep-learning", "deep-neural-network", "deep-neural-networks", "multitask-learning", "catalyst", "multitasking", "task-precondition", "task-composition"], "description": "A framework for multi-task learning, where you may precondition tasks and compose them into bigger tasks. Conditional objectives and per-task evaluations and interpretations. "}
{"name": "huanghuidmml/tfbert", "full_name": "huanghuidmml/tfbert", "topics": ["tensorflow", "bert", "electra", "albert", "trainer", "xla", "mixed-precision", "ernie", "ernie-gram", "chinesebert"], "description": "\u57fa\u4e8etensorflow1.x\u7684\u9884\u8bad\u7ec3\u6a21\u578b\u8c03\u7528\uff0c\u652f\u6301\u5355\u673a\u591a\u5361\u3001\u68af\u5ea6\u7d2f\u79ef\uff0cXLA\u52a0\u901f\uff0c\u6df7\u5408\u7cbe\u5ea6\u3002\u53ef\u7075\u6d3b\u8bad\u7ec3\u3001\u9a8c\u8bc1\u3001\u9884\u6d4b\u3002"}
{"name": "shahules786/twitter-sentiment", "full_name": "shahules786/Twitter-Sentiment", "topics": ["sentiment-analyzer", "twitter-domain", "natural-language-processing", "pytorch", "embedding-vectors"], "description": "Sentiment analyzer for your tweets."}
{"name": "valencebond/rethinking_of_par", "full_name": "valencebond/Rethinking_of_PAR", "topics": ["pytorch", "multilabel", "pedestrian-attribute-recognition", "baseline"], "description": "Pytorch Pedestrian Attribute Recognition: A strong PyTorch baseline for pedestrian attribute recognition and multi-label classification. "}
{"name": "vinairesearch/warping-based_backdoor_attack-release", "full_name": "VinAIResearch/Warping-based_Backdoor_Attack-release", "topics": ["backdoor-attacks", "security", "deep-learning", "machine-learning", "computer-vision", "iclr2021", "deep-learning-security"], "description": "WaNet - Imperceptible Warping-based Backdoor Attack (ICLR 2021)"}
{"name": "mechanicalsea/lighthubert", "full_name": "mechanicalsea/lighthubert", "topics": ["neural-architecture-search", "pytorch", "self-supervised-learning", "speech-representation", "lighthubert"], "description": "LightHuBERT: Lightweight and Configurable Speech Representation Learning with Once-for-All Hidden-Unit BERT"}
{"name": "nvlabs/bongard-hoi", "full_name": "NVlabs/Bongard-HOI", "topics": ["cvpr2022", "few-shot-learning", "pytorch", "visual-reasoning"], "description": "[CVPR 2022 (oral)] Bongard-HOI for benchmarking few-shot visual reasoning"}
{"name": "mikoto10032/automaticweightedloss", "full_name": "Mikoto10032/AutomaticWeightedLoss", "topics": ["multi-task", "multi-task-learning", "weigh-losses", "auxiliary-tasks", "pytorch", "deep-learning"], "description": "Multi-task learning using uncertainty to weigh losses for scene geometry and semantics, Auxiliary Tasks in Multi-task Learning"}
{"name": "mboudiaf/pytorch-meta-dataset", "full_name": "mboudiaf/pytorch-meta-dataset", "topics": ["few-shot-learning", "few-shot-classifcation", "meta-dataset", "pytorch", "tfrecorddataset"], "description": "A non-official 100% PyTorch implementation of META-DATASET benchmark for few-shot classification"}
{"name": "uncbiag/simpleclick", "full_name": "uncbiag/SimpleClick", "topics": ["interactive-segmentation", "vision-transformers", "masked-autoencoder", "pytorch"], "description": "SimpleClick: Interactive Image Segmentation with Simple Vision Transformers"}
{"name": "suessmann/intelligent_traffic_lights", "full_name": "suessmann/intelligent_traffic_lights", "topics": ["q-learning", "deep-learning", "neural-network", "reinforcement-learning", "traffic-lights", "traffic-control"], "description": "Traffic Lights Control with Deep Learning"}
{"name": "bigpon/qppwg", "full_name": "bigpon/QPPWG", "topics": ["speech-synthesis", "neural-vocoder", "wavenet", "parallel-wavenet-vocoder", "pytorch", "real-time"], "description": "Quasi-Periodic Parallel WaveGAN Pytorch implementation"}
{"name": "fregu856/ebms_3dod", "full_name": "fregu856/ebms_3dod", "topics": ["energy-based-model", "3d-object-detection", "object-detection", "pytorch", "deep-learning", "computer-vision", "machine-learning"], "description": "Official implementation of \"Accurate 3D Object Detection using Energy-Based Models\", CVPR Workshops 2021."}
{"name": "johnsk95/pt4al", "full_name": "johnsk95/PT4AL", "topics": ["active-learning", "eccv2022", "pytorch", "self-supervised-learning"], "description": "Official PyTorch implementation of \"PT4AL: Using Self-Supervised Pretext Tasks for Active Learning (ECCV2022)\""}
{"name": "megvii-research/tlsc", "full_name": "megvii-research/TLC", "topics": ["deep-learning", "neural-network"], "description": "Test-time Local Converter"}
{"name": "fuzailpalnak/building-footprint-segmentation", "full_name": "fuzailpalnak/building-footprint-segmentation", "topics": ["semantic-segmentation", "satellite-imagery", "gis", "satellite-imagery-segmentation", "building-footprint-segmentation", "deep-learning", "pytorch", "building-footprints"], "description": "Building footprint segmentation from satellite and aerial imagery"}
{"name": "sb-ai-lab/replay", "full_name": "sb-ai-lab/RePlay", "topics": ["algorithms", "distributed-computing", "evaluation", "machine-learning", "pyspark", "pytorch", "recommendation-algorithms", "recommender-system", "collaborative-filtering", "deep-learning", "matrix-factorization"], "description": "A recommendation framework for distributed model building and evaluation with PySpark."}
{"name": "ruckbreasoning/subgraphretrievalkbqa", "full_name": "RUCKBReasoning/SubgraphRetrievalKBQA", "topics": [], "description": "The pytorch implementation of Subgraph Retrieval Enhanced Model for Multi-hop Knowledge Base Question Answering "}
{"name": "bogihsu/wg-wavenet", "full_name": "BogiHsu/WG-WaveNet", "topics": ["speech-synthesis", "neural-vocoder", "waveglow", "wavenet", "wg-wavenet", "pytorch", "tts", "vocoder", "realtime"], "description": "Real-Time High-Fidelity Speech Synthesis without GPU"}
{"name": "jiayuzou2020/hft", "full_name": "JiayuZou2020/HFT", "topics": [], "description": "Official Pytorch implementation for HFT"}
{"name": "deepbrains/tsception", "full_name": "deepBrains/TSception", "topics": ["deep-learning", "eeg", "emotion-recognition", "time-series"], "description": "PyTorch implementation of TSception"}
{"name": "sharif-apu/bjdd_cvpr21", "full_name": "sharif-apu/BJDD_CVPR21", "topics": ["quadbayercfa", "bayercfa", "demosaicking", "denoising", "deep-learning", "cvpr2021"], "description": "This is the official implementation of Beyond Joint Demosaicking and Denoising from CVPRW21. "}
{"name": "astra-vision/manifest", "full_name": "astra-vision/ManiFest", "topics": ["few-shot", "few-shot-learning", "image-to-image-translation", "gan", "gans", "generative-adversarial-network", "generative-model", "conditional-gan", "one-shot-learning", "one-shot", "image-translation", "image-processing", "eccv", "computer-vision", "cvpr", "eccv2022"], "description": "Few-shot image translation method working on unstructured environments. ECCV 2022"}
{"name": "goktug97/estorch", "full_name": "goktug97/estorch", "topics": ["evolutionary-algorithms", "evolution-strategies", "pytorch", "neural-network", "reinforcement-learning", "mpi", "parallel-computing", "evolution-strategy-library"], "description": "Evolution Strategy Library"}
{"name": "qitianwu/idcf", "full_name": "qitianwu/IDCF", "topics": ["graph-neural-networks", "out-of-distribution-generalization", "pytorch", "recommender-system"], "description": "Codes and datasets for ICML21 paper \"Towards open-world recommendation: An inductive model-based collaborative filtering approach\""}
{"name": "smoke-trees/voice-synthesis", "full_name": "smoke-trees/Voice-synthesis", "topics": ["voice-synthesis", "voice-cloning", "sv2tts", "pytorch-implementation", "tensorflow", "keras", "speech-to-text"], "description": "This repository is an implementation of Transfer Learning from Speaker Verification to Multispeaker Text-To-Speech Synthesis (SV2TTS) with a vocoder that works in real-time. SV2TTS is a three-stage deep learning framework that allows to create a numerical representation of a voice from a few seconds of audio, and to use it to condition a text-to-speech model trained to generalize to new voices."}
{"name": "lartpang/zoomnet", "full_name": "lartpang/ZoomNet", "topics": ["cvpr2022", "cvpr", "salient-object-detection", "camouflaged-object-detection", "rgbsod", "saliency-detection", "pytorch", "python", "rgbcod", "sod", "cod", "paper", "papercode", "codeforpaper"], "description": "Zoom In and Out: A Mixed-scale Triplet Network for Camouflaged Object Detection, CVPR 2022"}
{"name": "gpauloski/kfac-pytorch", "full_name": "gpauloski/kfac-pytorch", "topics": ["pytorch", "optimizer", "kfac", "distributed", "second-order-optimization", "deep-learning"], "description": "Distributed K-FAC Preconditioner for PyTorch"}
{"name": "satya77/transformer_temporal_tagger", "full_name": "satya77/Transformer_Temporal_Tagger", "topics": ["bert-model", "temporal-tagger", "encoder-decoder", "token-classification", "seq2seq", "transformer", "pytorch", "huggingface"], "description": "Code and data form the paper BERT Got a Date: Introducing Transformers to Temporal Tagging"}
{"name": "weiyithu/pv-raft", "full_name": "weiyithu/PV-RAFT", "topics": ["deep-learning", "scene-flow", "3dvision", "point-cloud"], "description": "[CVPR 2021] PV-RAFT: Point-Voxel Correlation Fields for Scene Flow Estimation of Point Clouds"}
{"name": "zerohd4869/dialoguecrn", "full_name": "zerohd4869/DialogueCRN", "topics": ["natural-language-processing", "sentiment-analysis"], "description": "Source code for ACL-IJCNLP 2021 paper \"DialogueCRN: Contextual Reasoning Networks for Emotion Recognition in Conversations\""}
{"name": "kr-happyface/kodalle", "full_name": "KR-HappyFace/KoDALLE", "topics": ["text-to-image", "vqgan", "dalle", "korean", "pytorch"], "description": "\ud83c\uddf0\ud83c\uddf7 Text to Image in Korean"}
{"name": "qq44642754a/yolov5_ros", "full_name": "qq44642754a/Yolov5_ros", "topics": ["yolov5", "pytorch", "ros"], "description": "Real-time object detection with ROS, based on YOLOv5 and PyTorch (\u57fa\u4e8e YOLOv5\u7684ROS\u5b9e\u65f6\u5bf9\u8c61\u68c0\u6d4b)"}
{"name": "coldmanck/zero-shot-indoor-localization-release", "full_name": "coldmanck/zero-shot-indoor-localization-release", "topics": ["pytorch", "graph-neural-networks", "indoor-localization", "place-recognition"], "description": "The official code and datasets for \"Zero-Shot Multi-View Indoor Localization via Graph Location Networks\" (ACMMM 2020)"}
{"name": "mikewangwzhl/vidil", "full_name": "MikeWangWZHL/VidIL", "topics": ["blip", "clip", "gpt-3", "msrvtt", "msvd", "vatex", "video-language", "vision-language", "youcook2", "vlep"], "description": "Pytorch code for Language Models with Image Descriptors are Strong Few-Shot Video-Language Learners"}
{"name": "seongmin-kye/meta-sr", "full_name": "seongmin-kye/meta-SR", "topics": ["speaker-recognition", "short-utterances", "speaker-verification", "meta-learning"], "description": "Pytorch implementation of Meta-Learning for Short Utterance Speaker Recognition with Imbalance Length Pairs (Interspeech, 2020)"}
{"name": "ganjinzero/kebiolm", "full_name": "GanjinZero/KeBioLM", "topics": ["language-model", "pre-training", "nlp", "biomedical"], "description": "Improving Biomedical Pretrained Language Models with Knowledge [BioNLP 2021]"}
{"name": "yiranran/qmupd", "full_name": "yiranran/QMUPD", "topics": ["computer-vision", "computer-graphics", "non-photorealistic-rendering", "face", "image-generation", "image-synthesis", "pytorch", "gan", "image-to-image-translation"], "description": "Code for TPAMI \"Quality Metric Guided Portrait Line Drawing Generation from Unpaired Training Data\""}
{"name": "oalieno/asm2vec-pytorch", "full_name": "oalieno/asm2vec-pytorch", "topics": ["asm2vec", "pytorch", "unofficial", "python", "machine-learning", "neural-language-processing", "gpu-acceleration"], "description": "Unofficial implementation of asm2vec using pytorch ( with GPU acceleration )"}
{"name": "trojai/trojai", "full_name": "trojai/trojai", "topics": ["deep-learning", "deep-neural-networks", "deep-reinforcement-learning", "adversarial-machine-learning", "poisoning-attack"], "description": "A repository to quickly generate synthetic data and associated trojaned deep learning models"}
{"name": "kevinzakka/ibc", "full_name": "kevinzakka/ibc", "topics": ["behavioral-cloning", "energy-based-model", "robotics", "deep-learning", "pytorch"], "description": "A PyTorch implementation of Implicit Behavioral Cloning"}
{"name": "chrhenning/hypnettorch", "full_name": "chrhenning/hypnettorch", "topics": ["pytorch", "deep-learning", "hypernetworks", "hypernets", "python", "hypernet", "hypernetwork", "neural-network", "torch"], "description": "Package for working with hypernetworks in PyTorch."}
{"name": "hpc203/license-plate-detect-recoginition-pytorch", "full_name": "hpc203/license-plate-detect-recoginition-pytorch", "topics": ["pytorch", "license-plate-detection", "license-plate-recognition", "detect-corners"], "description": "\u6df1\u5ea6\u5b66\u4e60\u8f66\u724c\u68c0\u6d4b\u4e0e\u8bc6\u522b\uff0c\u68c0\u6d4b\u7ed3\u679c\u5305\u542b\u8f66\u724c\u77e9\u5f62\u6846\u548c4\u4e2a\u89d2\u70b9\uff0c\u57fa\u4e8epytorch\u6846\u67b6\u8fd0\u884c"}
{"name": "ga642381/speechprompt", "full_name": "ga642381/SpeechPrompt", "topics": ["deep-learning", "nlp", "speech-processing", "prompting", "prompt", "pytorch"], "description": "**Interspeech 2022** \u300aSpeechPrompt: An Exploration of Prompt Tuning on Generative Spoken Language Model for Speech Processing Tasks\u300bSpeech processing with prompting paradigm"}
{"name": "junjue-wang/factseg", "full_name": "Junjue-Wang/FactSeg", "topics": ["semantic-segmentation", "remote-sensing", "pytorch", "deep-learning"], "description": "[TGRS 2021] FactSeg: Foreground Activation Driven Small Object Semantic Segmentation in Large-Scale Remote Sensing Imagery"}
{"name": "cisiplab/cisip-fire", "full_name": "CISiPLab/cisip-FIRe", "topics": ["deeplearning", "hashing", "imageretrieval", "coco", "cosine-similarity", "deep-learning", "image-retrieval", "imagenet", "deep-hashing", "neurips", "gldv2", "hash-codes", "instance-level-retrieval", "neurips-2021", "orthohash", "roxf", "rpar", "supervised-hashing", "dpn", "hacktoberfest"], "description": "Fast Image Retrieval (FIRe) is an open source project to promote image retrieval research. It implements most of the major binary hashing methods to date, together with different popular backbone networks and public datasets."}
{"name": "machinelearninglifescience/stochman", "full_name": "MachineLearningLifeScience/stochman", "topics": ["python", "machine-learning", "manifold", "riemannian-geometry", "pytorch"], "description": "Algorithms for computations on random manifolds made easier"}
{"name": "lukashermann/hulc", "full_name": "lukashermann/hulc", "topics": ["computer-vision", "deep-learning", "grounding", "manipulation", "natural-language-processing", "pytorch", "robotics", "vision", "vision-and-language", "vision-language"], "description": "Hierarchical Universal Language Conditioned Policies"}
{"name": "liudakai2/unsupdis-pytorch", "full_name": "liudakai2/UnsupDIS-pytorch", "topics": ["pytorch", "unsupervised-stitching"], "description": "A pytorch implementation of UnsupervisedDeepImageStitching"}
{"name": "miracle-center/yolo_universal_anatomical_landmark_detection", "full_name": "MIRACLE-Center/YOLO_Universal_Anatomical_Landmark_Detection", "topics": ["deep-learning", "landmark-detection", "universal-model", "multi-domain-learning", "global-local"], "description": "[MICCAI 2021] You Only Learn Once: Universal Anatomical Landmark Detection  https://arxiv.org/abs/2103.04657"}
{"name": "ivlabs/variational-dl", "full_name": "IvLabs/Variational-DL", "topics": ["deep-learning", "autoencoder"], "description": "Variational Deep Learning implementations, starting from simple Autoencoders."}
{"name": "ilyadobrynin/opti_models", "full_name": "IlyaDobrynin/opti_models", "topics": ["pytorch", "optimization", "neural-networks", "tensorrt", "onnx", "openvino", "image-processing", "imagenet-benchmarks", "classification", "pretrained-models", "opti-models", "onnx-convertation", "models-convertation"], "description": "PyTorch optimizations and benchmarking"}
{"name": "xlliu7/e2e-tad", "full_name": "xlliu7/E2E-TAD", "topics": ["action-recognition", "temporal-action-detection", "temporal-action-localization", "pytorch"], "description": "[CVPR 2022] An Empirical Study of End-to-end Temporal Action Detection"}
{"name": "gupta-abhay/setr-pytorch", "full_name": "gupta-abhay/setr-pytorch", "topics": ["transformer", "segmentation", "segmentation-transformer", "semantic-segmentation"], "description": "Rethinking Semantic Segmentation from a Sequence-to-Sequence Perspective with Transformers"}
{"name": "intellabs/avuc", "full_name": "IntelLabs/AVUC", "topics": ["uncertainty-calibration", "bayesian-deep-learning", "uncertainty-estimation", "model-calibration", "deep-learning", "uncertainty-quantification", "variational-inference", "uncertainty-neural-networks", "probabilistic-neural-network", "probabilistic-deep-learning"], "description": "Code to accompany the paper 'Improving model calibration with accuracy versus uncertainty optimization'."}
{"name": "jianf-wang/gbdl", "full_name": "Jianf-Wang/GBDL", "topics": [], "description": "A Pytorch implementation of CVPR 2022 paper \"Rethinking Bayesian Deep Learning Methods for Semi-Supervised Volumetric Medical Image Segmentation\""}
{"name": "sanweiliti/place", "full_name": "sanweiliti/PLACE", "topics": ["human-scene-interaction", "3d-human-mesh", "3d-scenes", "pytorch"], "description": "Official Pytorch implementation for 2020 3DV paper \"PLACE: Proximity Learning of Articulation and Contact in 3D Environments\" and trained models"}
{"name": "extreme-classification/decaf", "full_name": "Extreme-classification/DECAF", "topics": ["decaf", "label-features", "extreme-classification", "python", "machine-learning", "deep-learning", "meta-data", "classification", "label-text", "multi-label-classification"], "description": "DECAF: Deep Extreme Classification with Label Features"}
{"name": "plai-group/simple-cnaps", "full_name": "plai-group/simple-cnaps", "topics": ["deep-learning", "metric-learning", "meta-learning", "few-shot-learning", "few-shot-recognition", "mini-imagenet", "tiered-imagenet", "meta-dataset", "conditional-neural-process", "few-shot-classifcation"], "description": "Source codes for \"Improved Few-Shot Visual Classification\" (CVPR 2020), \"Enhancing Few-Shot Image Classification with Unlabelled Examples\" (WACV 2022), and \"Beyond Simple Meta-Learning: Multi-Purpose Models for Multi-Domain, Active and Continual Few-Shot Learning\" (Neural Networks 2022 - in submission)"}
{"name": "lolrudy/gpv_pose", "full_name": "lolrudy/GPV_Pose", "topics": [], "description": "pytorch implementation of GPV-Pose"}
{"name": "sapienzanlp/ewiser", "full_name": "SapienzaNLP/ewiser", "topics": ["word-sense-disambiguation", "natural-language-processing", "nlp", "wsd"], "description": "A Word Sense Disambiguation system integrating implicit and explicit external knowledge."}
{"name": "lucidrains/contrastive-learner", "full_name": "lucidrains/contrastive-learner", "topics": ["artificial-intelligence", "self-supervised-learning", "contrastive-loss", "deep-learning"], "description": "A simple to use pytorch wrapper for contrastive self-supervised learning on any neural network"}
{"name": "bslience/xbot", "full_name": "CYang828/xbot", "topics": ["chatbot", "task-oriented-dialogue", "conversational-ai", "nlp", "nlu", "dialogue-manager", "nlg"], "description": "Task-oriented Chatbot"}
{"name": "steven-lang/dafne", "full_name": "braun-steven/DAFNe", "topics": ["object-detection", "oriented-object-detection", "deep-learning", "machine-learning", "one-stage-detector", "anchor-free"], "description": "Code for our paper \"DAFNe: A One-Stage Anchor-Free Deep Model for Oriented Object Detection\"."}
{"name": "hiranumn/deepaccnet", "full_name": "hiranumn/DeepAccNet", "topics": ["pyrosetta", "protein", "pytorch", "ema"], "description": "Pytorch/Python3 implementation of DeepAccNet, protein model accuracy evaluator. "}
{"name": "epfl-nlp/kogito", "full_name": "epfl-nlp/kogito", "topics": ["commonsense-reasoning", "nlp", "python"], "description": "A Python Knowledge Inference Toolkit"}
{"name": "zhangks98/eeg-adapt", "full_name": "zhangks98/eeg-adapt", "topics": ["eeg", "motor-imagery", "cnn", "deep-learning"], "description": "Source Code for \"Adaptive Transfer Learning with Deep CNN for EEG Motor Imagery Classification\"."}
{"name": "doubtedsteam/mpanet", "full_name": "DoubtedSteam/MPANet", "topics": ["visible-infrared", "pytorch", "person-reidentification"], "description": "The official implementation for Discover Cross-Modality Nuances for Visible-Infrared Person Re-Identification (CVPR21)"}
{"name": "chenjunyi1999/chatbot-gpt2", "full_name": "chenjunyi1999/ChatBot-GPT2", "topics": ["pytorch", "huggingface-transformers", "nlp", "machine-learning", "deep-learning"], "description": "[Pytorch] A GPT2-ChatBot implemented by huggingface/transformers"}
{"name": "michaelnny/deep_rl_zoo", "full_name": "michaelnny/deep_rl_zoo", "topics": ["dqn", "r2d2", "never-give-up", "agent57", "impala", "vtrace", "retrace", "rainbow", "ppo", "c51", "iqn", "qr-dqn", "actor-critic", "deep-reinforcement-learning", "pytorch", "icm", "rnd", "deep-rl"], "description": "A collection of Deep RL algorithms implemented with PyTorch to solve Atari games and classic control tasks like CartPole, LunarLander, and MountainCar."}
{"name": "gentaiscool/few-shot-lm", "full_name": "gentaiscool/few-shot-lm", "topics": ["language-model", "few-shot-learning", "multilingual", "few-shot", "intent", "nlp", "gpt", "t5"], "description": "The source code of \"Language Models are Few-shot Multilingual Learners\" (MRL @ EMNLP 2021)"}
{"name": "alejandrobarrera/birdnet2", "full_name": "AlejandroBarrera/birdnet2", "topics": ["deep-learning", "object-detection", "point-cloud", "pytorch", "neural-network", "autonomous-driving"], "description": "Official Pytorch implementation of Birdnet+"}
{"name": "ukp-square/square-core", "full_name": "UKP-SQuARE/square-core", "topics": ["natural-language-processing", "nlp", "question-answering"], "description": "SQuARE: Software for question answering research."}
{"name": "zabaras/transformer-physx", "full_name": "zabaras/transformer-physx", "topics": ["machine-learning", "deep-learning", "physics", "transformer", "self-attention", "pytorch", "physical-systems"], "description": "Transformers for modeling physical systems"}
{"name": "yikaiw/tokenfusion", "full_name": "yikaiw/TokenFusion", "topics": ["3d-detection", "image-translation", "semantic-segmentation", "transformer", "tokenfusion", "multimodal-transformer", "rgbd-segmentation"], "description": "[CVPR 2022] Code release for \"Multimodal Token Fusion for Vision Transformers\""}
{"name": "dadmatech/dadmatools", "full_name": "Dadmatech/DadmaTools", "topics": ["natural-language-processing", "persian", "nlptoolkit", "tokenizer", "lemmatizer", "postagger", "dependency-parser", "persian-nlp", "ner", "spacy", "constituency-parser", "chunker", "dataset-loader", "embedding-vectors", "embeddings"], "description": "DadmaTools is a Persian NLP tools developed by Dadmatech Co."}
{"name": "txsun1997/colake", "full_name": "txsun1997/CoLAKE", "topics": ["deep-learning", "knowledge-embedding", "knowledge-graph", "language-model", "natural-language-processing"], "description": "COLING'2020: CoLAKE: Contextualized Language and Knowledge Embedding"}
{"name": "zengqunzhao/former-dfer", "full_name": "zengqunzhao/Former-DFER", "topics": ["computer-vison", "facial-expression-recognition", "pytorch", "transformer", "video-analysis", "acmmm2021"], "description": "\u201cFormer-DFER: Dynamic Facial Expression Recognition Transformer\u201d, ACM Multimedia, 2021."}
{"name": "szandala/torchprism", "full_name": "szandala/TorchPRISM", "topics": ["xai", "pytorch", "xai-library", "explainable-ai", "trustworthy-ai", "explainable-machine-learning", "neural-networks"], "description": "Principal Image Sections Mapping. Convolutional Neural Network Visualisation and Explanation Framework"}
{"name": "evandez/neuron-descriptions", "full_name": "evandez/neuron-descriptions", "topics": ["interpretability", "machine-learning", "research", "computer-vision", "pytorch", "deep-learning"], "description": "Natural Language Descriptions of Deep Visual Features, ICLR 2022"}
{"name": "lucidrains/memory-compressed-attention", "full_name": "lucidrains/memory-compressed-attention", "topics": ["artificial-intelligence", "deep-learning", "attention-mechanism"], "description": "Implementation of Memory-Compressed Attention, from the paper \"Generating Wikipedia By Summarizing Long Sequences\""}
{"name": "hunto/image_classification_sota", "full_name": "hunto/image_classification_sota", "topics": ["pytorch", "imagenet", "cifar", "nas", "kd", "pruning", "rep", "vit", "transformer", "image-classification"], "description": "Training ImageNet / CIFAR models with sota strategies and fancy techniques such as ViT, KD, NAS, Rep, etc."}
{"name": "princeton-nlp/webshop", "full_name": "princeton-nlp/WebShop", "topics": ["decision-making", "language", "language-grounding", "ml", "nlp", "rl", "rl-environment", "shopping", "sim-to-real", "web-based"], "description": "[NeurIPS 2022] \ud83d\uded2WebShop: Towards Scalable Real-World Web Interaction with Grounded Language Agents"}
{"name": "pratikpv/malware_detect2", "full_name": "pratikpv/malware_detect2", "topics": ["mlp", "cnn", "rnn", "lstm", "gru", "pytorch", "malware", "knn", "xgboost", "random-forest", "deep-learning", "malware-classification", "machine-learning"], "description": "Malware Classification using Machine learning"}
{"name": "s-nlp/rudetoxifier", "full_name": "s-nlp/rudetoxifier", "topics": ["style-transfer", "nlp", "russian-language"], "description": "Code and data of \"Methods for Detoxification of Texts for the Russian Language\" paper"}
{"name": "dptech-corp/uni-core", "full_name": "dptech-corp/Uni-Core", "topics": ["distributed", "pytorch"], "description": "an efficient distributed PyTorch framework"}
{"name": "xrenaa/look-outside-room", "full_name": "xrenaa/Look-Outside-Room", "topics": ["autoregressive", "novel-view-synthesis", "transformer"], "description": "[CVPR 2022] Look Outside the Room: Synthesizing A Consistent Long-Term 3D Scene Video from A Single Image"}
{"name": "yiconghong/discrete-continuous-vln", "full_name": "YicongHong/Discrete-Continuous-VLN", "topics": ["cvpr2022", "vision-and-language-navigation", "vision-and-language", "embodied-ai", "computer-vision", "deep-learning", "visual-navigation"], "description": "Code and Data of the CVPR 2022 paper: Bridging the Gap Between Learning in Discrete and Continuous Environments for Vision-and-Language Navigation"}
{"name": "ailab-mltools/lightautoml", "full_name": "sb-ai-lab/LightAutoML", "topics": ["automl", "data-science", "machine-learning", "python", "automated-machine-learning", "automatic-machine-learning", "automl-algorithms", "binary-classification", "kaggle", "lama", "multiclass-classification", "nlp", "regression"], "description": "Fast and customizable framework for automatic ML model creation (AutoML)"}
{"name": "lucidrains/hourglass-transformer-pytorch", "full_name": "lucidrains/hourglass-transformer-pytorch", "topics": ["artificial-intelligence", "deep-learning", "transformers"], "description": "Implementation of Hourglass Transformer, in Pytorch, from Google and OpenAI"}
{"name": "illiterate/bertclassifier", "full_name": "illiterate/BertClassifier", "topics": ["bert", "pytorch", "transformer", "transformers"], "description": "\u57fa\u4e8ePyTorch\u7684BERT\u4e2d\u6587\u6587\u672c\u5206\u7c7b\u6a21\u578b\uff08BERT Chinese text classification model implemented by PyTorch\uff09"}
{"name": "yuanbit/finbert-qa", "full_name": "yuanbit/FinBERT-QA", "topics": ["natural-language-processing", "deep-learning", "bert", "question-answering", "information-retrieval", "financial-data", "bert-model", "retriever", "finbert-qa", "fine-tunes", "fiqa-dataset", "finbert"], "description": "Financial Domain Question Answering with pre-trained BERT Language Model"}
{"name": "charmve/mirror-glass-detection", "full_name": "Charmve/Mirror-Glass-Detection", "topics": ["glass-detection", "mirror-detection", "water-face", "water-surface-detection", "glass-wall", "glass-objects", "mirror", "scenes", "dataset", "papers", "deep-learning", "computer-vision", "charmve"], "description": "\ud83c\udf78 Mirror & Glass Detection in Real-world Scenes"}
{"name": "lucid1ty/yolov5forcsgo", "full_name": "Lucid1ty/Yolov5ForCSGO", "topics": ["csgo", "detection", "yolov5", "auto-aim", "english", "aimbot", "autoaim", "chinese", "computer-vision", "object-detection", "python", "python3", "pytorch"], "description": "CSGO character detection and auto aim"}
{"name": "pliang279/lm_bias", "full_name": "pliang279/LM_bias", "topics": ["natural-language-processing", "machine-learning", "fairness-ai", "language-model"], "description": "[ICML 2021] Towards Understanding and Mitigating Social Biases in Language Models"}
{"name": "98zyx/hetero-center-loss-for-cross-modality-person-re-id", "full_name": "98zyx/Hetero-center-loss-for-cross-modality-person-re-id", "topics": ["pytorch", "person-reidentification", "cross-modality-re-identification"], "description": "Code for paper \"Hetero-center loss for cross-modality person re-identification\""}
{"name": "zhejz/carla-roach", "full_name": "zhejz/carla-roach", "topics": ["carla", "autonomous-driving", "imitation-learning", "iccv2021", "pytorch", "reinforcement-learning"], "description": "Roach: End-to-End Urban Driving by Imitating a Reinforcement Learning Coach"}
{"name": "hltchkust/ke-dialogue", "full_name": "HLTCHKUST/ke-dialogue", "topics": ["dialogue", "dialogue-system", "pytorch", "gpt", "gpt-2", "knowledge-graph", "knowledge", "mwoz", "smd", "kvr", "opendialkg"], "description": "KE-Dialogue: Injecting knowledge graph into a fully end-to-end dialogue system."}
{"name": "liguge/fault-diagnosis-for-small-samples-based-on-attention-mechanism", "full_name": "liguge/Fault-diagnosis-for-small-samples-based-on-attention-mechanism", "topics": ["deep-learning", "fault-diagnosis", "intelligent-fault-diagnosis", "machine-learning", "phm", "small-sample"], "description": "\u57fa\u4e8e\u6ce8\u610f\u529b\u673a\u5236\u7684\u5c11\u91cf\u6837\u672c\u6545\u969c\u8bca\u65ad  pytorch"}
{"name": "devjwsong/gpt2-chatbot-pytorch", "full_name": "devjwsong/gpt2-dialogue-generation-pytorch", "topics": ["pytorch", "gpt-2", "natural-language-processing", "natural-language-generation", "nlp", "nlg", "multiturn"], "description": "The PyTorch implementation of fine-tuning the GPT-2(Generative Pre-Training 2) for dialogue generation."}
{"name": "lsj2408/transformer-m", "full_name": "lsj2408/Transformer-M", "topics": ["transformer", "general-purpose-molecular-model", "graph-neural-network", "graph-transformer", "molecular-modeling", "molecule"], "description": "One Transformer Can Understand Both 2D & 3D Molecular Data"}
{"name": "raghavian/lungvae", "full_name": "raghavian/lungVAE", "topics": [], "description": "This is the official Pytorch implementation of \"Lung Segmentation from Chest X-rays using Variational Data Imputation\", Raghavendra Selvan et al. 2020"}
{"name": "msu-mlsys-lab/deepaa", "full_name": "AIoT-MLSys-Lab/DeepAA", "topics": ["deep-learning", "data-augmentation", "automl"], "description": "[ICLR 2022] \"Deep AutoAugment\" by Yu Zheng, Zhi Zhang,  Shen Yan, Mi Zhang"}
{"name": "kssteven418/i-bert", "full_name": "kssteven418/I-BERT", "topics": ["natural-language-processing", "quantization", "efficient-model", "efficient-neural-networks", "transformer", "bert", "model-compression"], "description": "[ICML'21 Oral] I-BERT: Integer-only BERT Quantization"}
{"name": "fu0511/xgrad-cam", "full_name": "Fu0511/XGrad-CAM", "topics": [], "description": "Axiom-based Grad-CAM implementation in Pytorch"}
{"name": "vita-group/self-pu", "full_name": "VITA-Group/Self-PU", "topics": ["pytorch", "pu-learning"], "description": "[ICML2020] \"Self-PU: Self Boosted and Calibrated Positive-Unlabeled Training\" by Xuxi Chen, Wuyang Chen, Tianlong Chen, Ye Yuan, Chen Gong, Kewei Chen, Zhangyang Wang"}
{"name": "algoprog/quin", "full_name": "algoprog/Quin", "topics": ["semantic-search", "search-engine", "question-answering", "fact-checking", "retrieval", "nlp", "qr-bert", "sentence-embeddings"], "description": "An easy to use framework for large-scale fact-checking and question answering"}
{"name": "persiannlp/parsinlu", "full_name": "persiannlp/parsinlu", "topics": ["query-paraphrasing", "machine-translation", "sentiment-analysis", "persian-language", "persian", "natural-language-processing", "farsi", "reading-comprehension", "textual-entailment", "natural-language-inference", "sentiment-analysis-dataset", "mt5-models"], "description": "A comprehensive suite of high-level NLP tasks for Persian language"}
{"name": "hayeonlee/metad2a", "full_name": "HayeonLee/MetaD2A", "topics": ["neural-architecture-search", "pytorch", "meta-learning", "efficient-deep-learning", "machine-learning"], "description": "Official PyTorch implementation of  \"Rapid Neural Architecture Search by Learning to Generate Graphs from Datasets\" (ICLR 2021)"}
{"name": "servicenow/tactis", "full_name": "ServiceNow/tactis", "topics": ["deep-learning", "machine-learning", "neural-network", "time-series", "transformers"], "description": "TACTiS: Transformer-Attentional Copulas for Time Series from ServiceNow Research"}
{"name": "mickeystroller/r-bert", "full_name": "mickeysjm/R-BERT", "topics": ["relation-extraction", "semeval-2010", "tacred", "bert-model", "relation-classification", "pytorch"], "description": "Pytorch re-implementation of R-BERT model"}
{"name": "cattaneod/maskflownet-pytorch", "full_name": "cattaneod/MaskFlownet-Pytorch", "topics": ["deep-learning", "computer-vision", "convolutional-neural-networks", "optical-flow", "kitti-dataset", "dnn", "cnn", "pytorch", "maskflownet"], "description": "Pytorch implementation of MaskFlownet"}
{"name": "slgero/receipt_parser", "full_name": "slgero/receipt_parser", "topics": ["receipt", "receipt-validation", "nlp"], "description": "Allow parsing Russian receipts"}
{"name": "cassidylaidlaw/perceptual-advex", "full_name": "cassidylaidlaw/perceptual-advex", "topics": ["adversarial-attacks", "imagenet", "robustness", "machine-learning", "pytorch"], "description": "Code and data for the ICLR 2021 paper \"Perceptual Adversarial Robustness: Defense Against Unseen Threat Models\"."}
{"name": "kaiyuyue/mgd", "full_name": "KaiyuYue/mgd", "topics": ["matching-guided-distillation", "mgd", "model-distillation", "knowledge-distillation", "pytorch", "detectron2", "kd", "detection", "classification", "moco-v2", "unsupervised-learning", "deep-learning"], "description": "Matching Guided Distillation (ECCV 2020)"}
{"name": "elyha7/yoloface", "full_name": "elyha7/yoloface", "topics": ["face-detection", "pytorch", "face-alignment", "yolov5", "bounding-boxes", "yolo", "detection", "face", "keypoints"], "description": "Yolov5 Face Detection"}
{"name": "yan-roo/spinenet-pytorch", "full_name": "yan-roo/SpineNet-Pytorch", "topics": ["mmdetection", "spinenet", "pytorch", "spinenet-pytorch", "cvpr2020"], "description": "SpineNet - mmdetection (Pytorch) Implementation"}
{"name": "unique-chan/complement-cross-entropy", "full_name": "unique-chan/Complement-Cross-Entropy", "topics": [], "description": "Imbalanced Image Classification with Complement Cross Entropy (Pytorch)"}
{"name": "lucidrains/einops-exts", "full_name": "lucidrains/einops-exts", "topics": ["artificial-intelligence", "deep-learning", "tensor-manipulation"], "description": "Implementation of some personal helper functions for Einops, my most favorite tensor manipulation library \u2764\ufe0f"}
{"name": "atksh/onnx-facial-lmk-detector", "full_name": "atksh/onnx-facial-lmk-detector", "topics": ["face-detection", "onnx", "onnxruntime", "pytorch"], "description": "End-to-end face detection, cropping, norm estimation, and landmark detection in a single onnx model"}
{"name": "longlongman/casrel-pytorch-reimplement", "full_name": "longlongman/CasRel-pytorch-reimplement", "topics": [], "description": "Pytorch reimplement of the paper \"A Novel Cascade Binary Tagging Framework for Relational Triple Extraction\" ACL2020. The original code is written in keras."}
{"name": "yantaoshen/openbct", "full_name": "YantaoShen/openBCT", "topics": [], "description": "Pytorch code for Towards Backward-Compatible Representation Learning [CVPR 2020 Oral]"}
{"name": "dusty-nv/jetson-voice", "full_name": "dusty-nv/jetson-voice", "topics": ["speech-recognition", "nlp", "text-to-speech", "jetson", "jetson-nano", "deep-learning", "pytorch", "tensorrt"], "description": "ASR/NLP/TTS deep learning inference library for NVIDIA Jetson using PyTorch and TensorRT"}
{"name": "mangonihao/multiheadjointentityrelationextraction_simple", "full_name": "Xie-Minghui/MultiHeadJointEntityRelationExtraction_simple", "topics": ["nlp", "entity-relation-extraction", "bert"], "description": "\u5b9e\u4f53\u5173\u7cfb\u62bd\u53d6\uff0c\u4f7f\u7528\u4e86\u767e\u5ea6\u6bd4\u8d5b\u7684\u6570\u636e\u96c6\u3002\u4f7f\u7528pytorch\u5b9e\u73b0MultiHeadJointEntityRelationExtraction\uff0c\u5305\u542bBert\u3001Albert\u3001gru\u7684\u4f7f\u7528\uff0c\u5e76\u4e14\u6dfb\u52a0\u4e86\u5bf9\u6297\u8bad\u7ec3\u3002\u6700\u540e\u4f7f\u7528Flask\u548cNeo4j\u56fe\u6570\u636e\u5e93\u5bf9\u6a21\u578b\u8fdb\u884c\u4e86\u90e8\u7f72"}
{"name": "iamigos/avatar-image-generator", "full_name": "IAmigos/avatar-image-generator", "topics": ["deep-learning", "gans"], "description": "We strive to transfer realistic features from photos of real faces to avatar styles. An end-to-end ML application using PyTorch, Weights & Biases, Flask API, Docker and ReactJS."}
{"name": "tfernd/sd-fused", "full_name": "tfernd/sd-fused", "topics": ["dreambooth", "pytorch", "stable-diffusion"], "description": "A re-implementation of Stable-Diffusion using better code pratices with faster and lower-memory usage."}
{"name": "xishen0220/segswap", "full_name": "XiSHEN0220/SegSwap", "topics": ["synthetic-data", "transformer", "image-retrieval", "art-image", "discovery", "co-segmentation"], "description": "(CVPRW 2022) Learning Co-segmentation by Segment Swapping for Retrieval and Discovery"}
{"name": "hasanhuz/spanemo", "full_name": "hasanhuz/SpanEmo", "topics": ["multi-label-classification", "emotion-recognition", "span-prediction", "emotion-analysis", "eacl2021", "natural-language-processing", "english", "arabic", "spanish", "emotion-detection", "emotion-classification", "emotion-correlation-loss", "semeval-2018-ec", "fine-grained-emotion-analysis"], "description": "SpanEmo"}
{"name": "cendelian/yolov4-hat-detection", "full_name": "yumulinfeng1/YOLOv4-Hat-detection", "topics": ["yolov4", "hat-detection", "pytorch"], "description": "\u57fa\u4e8eYOLOv4\u7684\u5b89\u5168\u5e3d\u4f69\u6234\u68c0\u6d4b"}
{"name": "xcmyz/fastspeech2", "full_name": "xcmyz/FastSpeech2", "topics": ["fastspeech", "fastspeech2", "speech-synthesis", "pytorch", "tts"], "description": "The Implementation of FastSpeech2 Based on Pytorch."}
{"name": "gt-ripl/robo-vln", "full_name": "GT-RIPL/robo-vln", "topics": ["deep-learning", "deep-neural-networks", "supervised-learning", "artificial-intelligence", "robotics", "computer-vision", "language", "transformers", "bert", "pytorch", "python", "habitat-api", "habitat-sim", "vision-and-language", "navigation", "vision-and-language-navigation"], "description": "Pytorch code for ICRA'21 paper: \"Hierarchical Cross-Modal Agent for Robotics Vision-and-Language Navigation\""}
{"name": "djdefrag/realesrscaler", "full_name": "Djdefrag/RealScaler", "topics": ["anime", "deep-learning", "opencv", "python", "video", "windows", "amd", "compression-artifact-reduction", "directx-12", "gui-application", "intel", "manga", "noise-reduction", "nvidia", "pytorch", "pytorch-directml", "super-resolution"], "description": "RealScaler - image/video AI upscaler app  (Real-ESRGAN)"}
{"name": "joaolages/ratransformers", "full_name": "JoaoLages/RATransformers", "topics": ["transformers", "nlp", "pytorch", "language-model", "bert", "deep-learning", "natural-language-processing", "neural-network", "t5", "transformer"], "description": "RATransformers \ud83d\udc2d- Make your transformer (like BERT, RoBERTa, GPT-2 and T5) Relation Aware!"}
{"name": "liumency/srcdnet", "full_name": "liumency/SRCDNet", "topics": [], "description": "The pytorch implementation for \"Super-resolution-based Change Detection Network with Stacked Attention Module for Images with Different Resolutions \"."}
{"name": "yzd-v/cls_kd", "full_name": "yzd-v/cls_KD", "topics": ["image-classification", "knowledge-distillation", "vision-transformer", "pytorch"], "description": "'Rethinking Knowledge Distillation via Cross-Entropy' and 'ViTKD: Practical Guidelines for ViT Feature Knowledge Distillation'"}
{"name": "talegqz/unsupervised_co_part_segmentation", "full_name": "Talegqz/unsupervised_co_part_segmentation", "topics": ["deep-learning", "pytorch"], "description": "[ICML2021] Unsupervised Co-part Segmentation through Assembly "}
{"name": "bit-da/i2v-gan", "full_name": "BIT-DA/I2V-GAN", "topics": ["pytorch", "video-to-video-translation", "infrared-to-visible-translation", "gans"], "description": "ACMMM2021 paper \"I2V-GAN: Unpaired Infrared-to-Visible Video Translation\""}
{"name": "ternaus/people_segmentation", "full_name": "ternaus/people_segmentation", "topics": ["deep-learning", "image-segmentation", "semantic-segmentation", "computer-vision", "python", "people-segmentation"], "description": "Code for the model to segment people at the image"}
{"name": "icandle/man", "full_name": "icandle/MAN", "topics": ["pytorch", "super-resolution"], "description": "Multi-scale Attention Network for Single Image Super-Resolution"}
{"name": "sangmin-git/lmc-memory", "full_name": "sangmin-git/LMC-Memory", "topics": ["pytorch", "video-prediction", "cvpr2021"], "description": "Official PyTorch implementation of \"Video Prediction Recalling Long-term Motion Context via Memory Alignment Learning\" (CVPR 2021 Oral)"}
{"name": "shandilya21/few-shot", "full_name": "Shandilya21/Few-Shot", "topics": ["few-shot-learning", "pytorch", "zero-shot-learning", "meta-learning"], "description": "A PyTorch implementation of a few shot, and meta-learning algorithms for image classification."}
{"name": "xwhan/proqa", "full_name": "xwhan/ProQA", "topics": ["natural-language-processing", "question-answering", "pytorch", "information-retrieval"], "description": "Progressively Pretrained Dense Corpus Index for Open-Domain QA and Information Retrieval"}
{"name": "hhousen/docsum", "full_name": "HHousen/DocSum", "topics": ["machine-learning", "nlp", "summarization", "automatic-summarization", "python", "pdf", "xml-parser", "abstractive-summarization", "abstractive-text-summarization", "text-summarization", "bart", "xml", "transformers"], "description": "A tool to automatically summarize documents abstractively using the BART or PreSumm Machine Learning Model."}
{"name": "primeqa/primeqa", "full_name": "primeqa/primeqa", "topics": ["ibm", "ibm-research-ai", "machine-learning", "natural-language-processing", "nlp", "python", "pytorch", "question-answering", "ai", "dpr", "language-model", "neural-search", "semantic-search", "transfer-learning", "bert", "neural-information-retrieval", "squad"], "description": "The prime repository for state-of-the-art Multilingual Question Answering research and development."}
{"name": "vinairesearch/lemul", "full_name": "VinAIResearch/LeMul", "topics": ["3d-graphics", "3d-reconstruction", "computer-vision", "unsupervised-learning", "pytorch", "python3", "anaconda3", "iccv2021", "vinai", "iccv", "iccv21", "3d-objects", "3d-object-reconstruction", "phong-shading", "deep-learning", "iccv-2021"], "description": "Toward Realistic Single-View 3D Object Reconstruction with Unsupervised Learning from Multiple Images (ICCV 2021)"}
{"name": "jerrodparker20/adaptive-transformers-in-rl", "full_name": "jerrodparker20/adaptive-transformers-in-rl", "topics": ["rl", "pomdp", "transformer", "attention-mechanism", "stabilizing-transformers-for-rl", "adaptive-attention", "transformers-in-rl", "torchbeast", "impala", "monobeast"], "description": "Adaptive Attention Span for Reinforcement Learning"}
{"name": "nvidia-isaac-ros/isaac_ros_pose_estimation", "full_name": "NVIDIA-ISAAC-ROS/isaac_ros_pose_estimation", "topics": ["pose-estimation", "dope", "deep-learning", "nvidia", "tensorrt", "inference", "ros", "ros2-humble", "ros2", "gpu", "jetson"], "description": "Deep learned, hardware-accelerated 3D object pose estimation"}
{"name": "lucidrains/marge-pytorch", "full_name": "lucidrains/marge-pytorch", "topics": ["artificial-intelligence", "deep-learning", "transformers", "pre-training", "retrieval"], "description": "Implementation of Marge, Pre-training via Paraphrasing, in Pytorch"}
{"name": "sense-x/uninet", "full_name": "Sense-X/UniNet", "topics": ["deep-learning", "neural-architecture-search", "transformer"], "description": "Unified Architecture Search with Convolution, Transformer, and MLP (ECCV 2022)"}
{"name": "josephkj/eli", "full_name": "JosephKJ/ELI", "topics": ["cvpr2022", "cvpr", "ebm", "energy-based-model", "latent-aligning", "incremental-learning", "continual-learning", "pytorch"], "description": "(CVPR 2022) Energy-based Latent Aligner for Incremental Learning"}
{"name": "loretoparisi/hf-experiments", "full_name": "loretoparisi/hf-experiments", "topics": ["huggingface", "huggingface-transformer", "deep-learning", "nlp", "python", "python3", "summarization", "emotions", "sentiment", "translation", "speech-recognition", "automatic-speech-recognition", "topic-detection", "topic-modeling", "question-answering"], "description": "Experiments with Hugging Face \ud83d\udd2c \ud83e\udd17"}
{"name": "futianfan/clinical-trial-outcome-prediction", "full_name": "futianfan/clinical-trial-outcome-prediction", "topics": ["clinical-trials", "clinical-data", "graph-neural-networks", "benchmark-datasets", "dataset-generation", "benchmark", "drug-design", "drug-development", "life-sciences", "dataset", "therapeutics", "clinical-research-data-warehouse", "clinical-research", "machine-learning", "deep-learning"], "description": "benchmark dataset and Deep learning method (Hierarchical Interaction Network, HINT) for clinical trial approval probability prediction, published in Cell Patterns 2022."}
{"name": "pris-cv/oslnet", "full_name": "PRIS-CV/OSLNet", "topics": ["python", "pytorch", "small-sample", "orthogonal"], "description": "Code release for  OSLNet: Deep Small-Sample Classification with an Orthogonal Softmax Layer (TIP2020)"}
{"name": "mloptpsu/fedtorch", "full_name": "MLOPTPSU/FedTorch", "topics": ["federated-learning", "distributed-optimization", "distributed", "pytorch", "mpi"], "description": "FedTorch is a generic repository for benchmarking different federated and distributed learning algorithms using PyTorch Distributed API."}
{"name": "maximintegratedai/ai8x-synthesis", "full_name": "MaximIntegratedAI/ai8x-synthesis", "topics": ["max78000", "maxim", "machine-learning", "maxim-integrated", "ai", "artificial-intelligence", "deep-learning", "analog-devices", "max78002"], "description": "Quantization and Synthesis (Device Specific Code Generation) for ADI's MAX78000 and MAX78002 AI Devices"}
{"name": "rpryzant/causal-bert-pytorch", "full_name": "rpryzant/causal-bert-pytorch", "topics": [], "description": "Pytorch implementation of \"Adapting Text Embeddings for Causal Inference\""}
{"name": "noelshin/pixelpick", "full_name": "NoelShin/PixelPick", "topics": ["deep-learning", "pytorch", "semantic-segmentation"], "description": "[ICCVW'21] All you need are a few pixels: semantic segmentation with PixelPick"}
{"name": "zensors/datatap-python", "full_name": "zensors/datatap-python", "topics": ["dataset", "machine-learning", "datastructures", "data-pipeline", "deep", "deeplearning", "python", "pytorch", "tensorflow", "training", "trainsets", "testset", "cross-validation", "resnet", "dataloader"], "description": "Focus on Algorithm Design, Not on Data Wrangling"}
{"name": "pavancm/contrique", "full_name": "pavancm/CONTRIQUE", "topics": ["image-processing", "computer-vision", "image-quality-assessment", "image-quality", "contrastive-learning", "contrastive-loss", "blind-image-quality-assessment", "no-reference", "full-reference-iqa", "deep-learning", "deep-neural-networks", "convolutional-neural-networks"], "description": "Official implementation for \"Image Quality Assessment using Contrastive Learning\""}
{"name": "ise-uiuc/freefuzz", "full_name": "ise-uiuc/FreeFuzz", "topics": ["fuzzing", "mining", "pytorch", "tensorflow"], "description": "Free Lunch for Testing: Fuzzing Deep-Learning Libraries from Open Source (ICSE'22)"}
{"name": "baiksung/alfa", "full_name": "baiksung/ALFA", "topics": ["maml", "pytorch", "meta-learning", "deep-learning", "machine-learning", "few-shot-learning", "neurips", "neurips-2020"], "description": "Source code for NeurIPS 2020 paper \"Meta-Learning with Adaptive Hyperparameters\""}
{"name": "molecularai/deep-molecular-optimization", "full_name": "MolecularAI/deep-molecular-optimization", "topics": ["transformer", "seq2seq", "molecular-optimization", "multi-property-optimization"], "description": "Molecular optimization by capturing chemist\u2019s intuition using the Seq2Seq with attention and the Transformer"}
{"name": "luchixiang/pcrl", "full_name": "Luchixiang/PCRL", "topics": [], "description": "official pytorch implementation of PCRL"}
{"name": "nantu-io/ntcore", "full_name": "nantu-io/ntcore", "topics": ["machine-learning", "python", "deep-learning", "pytorch", "tensorflow", "kubernetes", "docker", "ai", "sklearn", "ml", "mlops"], "description": "Deploy and Monitor ML Model in Any Cloud"}
{"name": "xiaoyubie1994/dvae-speech", "full_name": "XiaoyuBIE1994/DVAE", "topics": ["deep-learning", "generative-model", "variational-autoencoders"], "description": "Official implementation of Dynamical VAEs"}
{"name": "omar-mohamed/gpt2-chest-x-ray-report-generation", "full_name": "omar-mohamed/GPT2-Chest-X-Ray-Report-Generation", "topics": ["deep-learning", "transformer", "gpt2", "transfer-learning", "medical-imaging", "chest-xrays", "report-generation", "radiology"], "description": "This is the implementation of the CDGPT2 model mentioned in our paper 'Automated Radiology Report Generation using Conditioned Transformers'"}
{"name": "d-li14/lambda.pytorch", "full_name": "d-li14/lambda.pytorch", "topics": ["lambda-network", "attention", "pytorch", "iclr2021", "imagenet", "pre-trained-model"], "description": "PyTorch implementation of Lambda Network and pretrained Lambda-ResNet"}
{"name": "chenhaoxing/ssformers", "full_name": "chenhaoxing/SSFormers", "topics": ["few-shot-learning", "meta-learning", "deep-learning"], "description": "This repository is the code of the paper \"Sparse Spatial Transformers for Few-Shot Learning (SCIENCE CHINA Information Sciences)\"."}
{"name": "ternaus/check_orientation", "full_name": "ternaus/check_orientation", "topics": ["deep-learning", "image-classification", "orientation-detection", "computer-vision"], "description": "Model to check if image was rotated by 90, 180, 270 degrees."}
{"name": "blakechi/comvex", "full_name": "blakechi/ComVEX", "topics": ["pytorch", "computer-vision", "einop", "transformer"], "description": "Implementations of Recent Papers in Computer Vision"}
{"name": "green-wood/bttr", "full_name": "Green-Wood/BTTR", "topics": ["handwritten-text-recognition", "transformer", "deep-learning", "math-recognition", "pytorch-lightning", "pytorch", "latex", "icdar2021"], "description": "Official implementation for ICDAR 2021 best poster paper \"Handwritten Mathematical Expression Recognition with Bidirectionally Trained Transformer\""}
{"name": "baegwangbin/irondepth", "full_name": "baegwangbin/IronDepth", "topics": ["3d-reconstruction", "bmvc2022", "computer-vision", "deep-learning", "depth-estimation", "monocular-depth-estimation", "surface-normal", "surface-normals", "uncertainty"], "description": "(BMVC 2022) IronDepth: Iterative Refinement of Single-View Depth using Surface Normal and its Uncertainty"}
{"name": "erksch/fnet-pytorch", "full_name": "erksch/fnet-pytorch", "topics": ["transformer", "fnet", "language-model", "pytorch"], "description": "Unofficial PyTorch implementation of Google's FNet: Mixing Tokens with Fourier Transforms. With checkpoints."}
{"name": "ibm/vsrl-framework", "full_name": "IBM/vsrl-framework", "topics": ["reinforcement-learning", "safety-critical", "formal-verification", "formal-methods", "reinforcement-learning-algorithms", "reinforcement-learning-environments", "cyber-physical-systems", "keymaerax", "keymaera", "differential-dynamic-logic", "pytorch", "safe-reinforcement-learning", "safe-control"], "description": "The Verifiably Safe Reinforcement Learning Framework"}
{"name": "hfailab/clip-gen", "full_name": "HFAiLab/clip-gen", "topics": ["pytorch", "text-to-image", "clip", "text2image"], "description": "CLIP-GEN: Language-Free Training of a Text-to-Image Generator with CLIP"}
{"name": "code-kern-ai/automl-docker", "full_name": "code-kern-ai/automl-docker", "topics": ["auto-ml", "cli", "containerization", "docker", "fastapi", "natural-language-processing", "nlp", "python", "text-classification", "ui", "webservice"], "description": "CLI-based tool to automatically build ML models from training data into a servable Docker container"}
{"name": "rfeinman/pytorch-lasso", "full_name": "rfeinman/pytorch-lasso", "topics": ["lasso", "sparse-coding", "dictionary-learning", "pytorch", "l1-regularization", "least-squares"], "description": "L1-regularized least squares with PyTorch"}
{"name": "maverickpeter/disco-pytorch", "full_name": "MaverickPeter/DiSCO-pytorch", "topics": ["robotics", "pytorch", "icra2021", "place-recognition"], "description": "Differentiable Scan Context with Orientation"}
{"name": "christophalt/pytorch-ie", "full_name": "ChristophAlt/pytorch-ie", "topics": ["information-extraction", "pytorch", "pytorch-lightning", "named-entity-recognition", "relation-extraction", "relation-classification", "datasets", "transformers"], "description": "PyTorch-IE: State-of-the-art Information Extraction in PyTorch"}
{"name": "imrahulr/adversarial_robustness_pytorch", "full_name": "imrahulr/adversarial_robustness_pytorch", "topics": ["adversarial-training", "adversarial-robustness", "pytorch", "deep-learning"], "description": "Unofficial implementation of the DeepMind papers \"Uncovering the Limits of Adversarial Training against Norm-Bounded Adversarial Examples\" & \"Fixing Data Augmentation to Improve Adversarial Robustness\" in PyTorch"}
{"name": "cure-lab/deep-active-learning", "full_name": "cure-lab/deep-active-learning", "topics": ["active-learning", "deep-learning", "sample-selection"], "description": "An implementation of the state-of-the-art Deep Active Learning algorithms"}
{"name": "havenfeng/trust", "full_name": "HavenFeng/TRUST", "topics": ["face-reconstruction", "machine-learning", "pytorch"], "description": "Towards Racially Unbiased Skin Tone Estimation via Scene Disambiguation (ECCV2022)"}
{"name": "dragon-wang/rl_algorithms", "full_name": "dragon-wang/RL_Algorithms", "topics": [], "description": "Reinforcement learning algorithms with pytorch"}
{"name": "dengbocong/text-similarity", "full_name": "DengBoCong/text-similarity", "topics": ["nlp", "deep-learning", "mechine-learing", "similarity", "model", "text-classification", "pytorch", "bert", "transformer"], "description": "\u6587\u672c\u76f8\u4f3c\u5ea6\uff08\u5339\u914d\uff09\u8ba1\u7b97\uff0c\u63d0\u4f9bBaseline\u3001\u8bad\u7ec3\u3001\u63a8\u7406\u3001\u6307\u6807\u5206\u6790...\u4ee3\u7801\u5305\u542bTensorFlow/Pytorch\u53cc\u7248\u672c"}
{"name": "online-ml/river-torch", "full_name": "online-ml/deep-river", "topics": ["data-science", "deep-learning", "incremental-learning", "machine-learning", "neural-network", "online-deep-learning", "online-learning", "outlier-detection", "pytorch", "stream"], "description": null}
{"name": "audio-westlakeu/mcnet", "full_name": "Audio-WestlakeU/McNet", "topics": ["array-signal-processing", "multi-channel-speech-enhancement", "pytorch", "pytorch-lightning", "signal-processing", "speech-enhancement"], "description": "The official repo: \"McNet: Fuse Multiple Cues for Multichannel Speech Enhancement\" submitted to ICASSP 2023"}
{"name": "adrianjav/heterogeneous_vaes", "full_name": "adrianjav/heterogeneous_vaes", "topics": [], "description": "Pytorch implementation of VAEs for heterogeneous likelihoods."}
{"name": "lucidrains/protein-bert-pytorch", "full_name": "lucidrains/protein-bert-pytorch", "topics": ["artificial-intelligence", "deep-learning", "protein-sequences", "unsupervised-learning"], "description": "Implementation of ProteinBERT in Pytorch"}
{"name": "sapienzanlp/spring", "full_name": "SapienzaNLP/spring", "topics": ["amr", "semantic-parsing", "semantic-parser", "abstract-meaning-representation", "data-to-text", "natural-language-generation", "natural-language-processing"], "description": "SPRING is a seq2seq model for Text-to-AMR and AMR-to-Text (AAAI2021)."}
{"name": "tgisaturday/dalle-lightning", "full_name": "tgisaturday/dalle-lightning", "topics": [], "description": "Refactoring dalle-pytorch and taming-transformers for TPU VM"}
{"name": "amazon-research/crossnorm-selfnorm", "full_name": "amazon-science/crossnorm-selfnorm", "topics": ["normalization", "model-robustness", "computer-vision", "natural-language-processing", "domain-generalization", "domain-adaptation", "iccv-2021"], "description": "CrossNorm and SelfNorm for Generalization under Distribution Shifts, ICCV 2021"}
{"name": "iarai/landslide4sense-2022", "full_name": "iarai/Landslide4Sense-2022", "topics": ["landslide", "remote-sensing", "natural-hazard", "competition", "pytorch", "deep-learning", "dataset"], "description": "Data description and baseline code for LandSlide4Sense 2022 competition"}
{"name": "chenghaomou/pytorch-pqrnn", "full_name": "ChenghaoMou/pytorch-pQRNN", "topics": ["nlp", "pytorch", "pqrnn", "text-classification"], "description": "Implementation of pQRNN in PyTorch"}
{"name": "vcl3d/structurenet", "full_name": "VCL3D/StructureNet", "topics": ["calibration", "extrinsic-calibration", "volumetric-video", "multi-sensor", "depth-camera", "kinect4azure", "realsense2", "kinect-sensor", "kinect-camera", "realsense-camera", "realsense", "cnn", "pytorch", "markerless", "multi-sensor-image-fusion", "rgbd"], "description": "Markerless volumetric alignment for depth sensors. Contains the code of the work \"Deep Soft Procrustes for Markerless Volumetric Sensor Alignment\" (IEEE VR 2020). "}
{"name": "mftnakrsu/automatic_number_plate_recognition_yolo_ocr", "full_name": "mftnakrsu/Automatic_Number_Plate_Recognition_YOLO_OCR", "topics": ["detection", "easyocr", "object", "object-detection", "ocr", "yolo", "yolov5", "csv", "database", "flask", "paddleocr", "realtime", "ai", "artificial-intelligence", "computer-vision", "deep-learning", "machine-learning", "opencv", "python"], "description": "Automatic number plate recognition using tech:  Yolo, OCR, Scene text detection, scene text recognation, flask, torch"}
{"name": "shangeth/wavencoder", "full_name": "shangeth/wavencoder", "topics": ["deeplearning", "pytorch", "speech-recognition", "audio-processing", "speech-processing", "speechrecognition", "representation-learning", "unsupervised-learning", "semi-supervised-learning", "voice-recognition", "speaker-recognition", "hacktoberfest"], "description": "WavEncoder is a Python library for encoding audio signals, transforms for audio augmentation, and training audio classification models with PyTorch backend."}
{"name": "ziyizhang27/dite-hrnet", "full_name": "ZiyiZhang27/Dite-HRNet", "topics": ["deep-learning", "high-resolution-net", "human-pose-estimation", "mpii-dataset", "mscoco-keypoint", "pytorch", "pose-estimation", "keypoint-detection", "coco-keypoints-detection", "mpii"], "description": "This is an official PyTorch implementation of our IJCAI-ECAI 2022 paper \"Dite-HRNet: Dynamic Lightweight High-Resolution Network for Human Pose Estimation\""}
{"name": "algolzw/bsrt", "full_name": "Algolzw/BSRT", "topics": ["multi-frame", "pytorch", "super-resolution", "transformer"], "description": "Pytorch code for \"BSRT: Improving Burst Super-Resolution with Swin Transformer and Flow-Guided Deformable Alignment\", CVPRW, 1st place in NTIRE 2022 BurstSR Challenge (real-world track)."}
{"name": "qq456cvb/canonicalvoting", "full_name": "qq456cvb/CanonicalVoting", "topics": ["3d-scenes", "pytorch", "3d-object-detection", "hough-transform", "deep-learning", "cvpr2022"], "description": "Canonical Voting: Towards Robust Oriented Bounding Box Detection in 3D Scenes (CVPR2022)"}
{"name": "johncai117/meta-fine-tuning", "full_name": "johncai117/Meta-Fine-Tuning", "topics": ["gnn", "meta-fine-tuning", "few-shot-learning", "computer-vision", "deep-learning", "cvpr", "cvpr2020", "transfer-learning", "meta-learning-algorithm"], "description": "[CVPR 2020 VL3] The repository for meta fine-tuning in cross-domain few-shot learning."}
{"name": "shuweishao/af-sfmlearner", "full_name": "ShuweiShao/AF-SfMLearner", "topics": ["computer-vision", "deep-learning", "depth-estimation", "pose-estimation", "brightness-calibration", "monodepth", "endoscopy", "self-supervision", "pytorch"], "description": "[MedIA2022 & ICRA2021] Self-Supervised Monocular Depth and Ego-Motion Estimation in Endoscopy: Appearance Flow to the Rescue"}
{"name": "zj-zhang/amber", "full_name": "zj-zhang/AMBER", "topics": ["automl", "biomedicine", "deep-learning", "genomics", "keras", "pytorch"], "description": "Automated Modelling for Biological Evidence-based Research"}
{"name": "microsoft/simxns", "full_name": "microsoft/SimXNS", "topics": ["dense-retrieval", "information-retrieval", "natural-language-processing", "negative-mining", "negative-sampling"], "description": "SimXNS, a research project for information retrieval, containing official implementations, by MSRA NLC IR team."}
{"name": "jinheonbaek/gmt", "full_name": "JinheonBaek/GMT", "topics": ["graph-representation", "graph-representation-learning", "graph-pooling", "graph-multiset-pooling", "graph-multiset-transformer", "graph-classification", "graph-reconstruction", "graph-transformer", "graph-neural-networks", "pytorch", "graph"], "description": "Official Code Repository for the paper \"Accurate Learning of Graph Representations with Graph Multiset Pooling\" (ICLR 2021)"}
{"name": "ziyang-xie/pycaptcha", "full_name": "ZiYang-xie/PyCAPTCHA", "topics": ["captcha-solver", "pytorch", "pytorch-lightning"], "description": "\ud83d\udee0  Pytorch lightweight Captcha Solver, Over 98% accuracy "}
{"name": "jieshibo/petl-vit", "full_name": "JieShibo/PETL-ViT", "topics": ["pytorch", "transfer-learning", "visual-prompting"], "description": "Source code of Convpass (arXiv) and FacT (AAAI 2023)"}
{"name": "apugoneappu/ask_me_anything", "full_name": "apugoneappu/ask_me_anything", "topics": ["vqa", "attentions", "pytorch", "python", "mfb", "mcan", "openvqa"], "description": "An easy-to-use app to visualise attentions of various VQA models."}
{"name": "amanchadha/iperceive", "full_name": "amanchadha/iPerceive", "topics": ["python", "python3", "video", "captioning", "captioning-videos", "dense-captioning", "convolutional-neural-networks", "resnets", "videoqa", "question-answering", "common-sense", "causality", "distilling-the-knowledge", "multi-modal", "transformers", "reasoning", "lstm", "self-attention", "attention", "pytorch"], "description": "Applying Common-Sense Reasoning to Multi-Modal Dense Video Captioning and Video Question Answering | Python3 | PyTorch | CNNs | Causality | Reasoning | LSTMs | Transformers | Multi-Head Self Attention | Published in IEEE Winter Conference on Applications of Computer Vision (WACV) 2021"}
{"name": "jaketae/deep-malware-detection", "full_name": "jaketae/deep-malware-detection", "topics": ["deep-learning", "pytorch", "malware-detection", "malware-research", "pe-file", "pe-format"], "description": "A neural approach to malware detection in portable executables"}
{"name": "lilityolyan/cutpaste", "full_name": "LilitYolyan/CutPaste", "topics": ["anomaly-detection", "self-supervised-learning", "deep-learning", "pytorch"], "description": "Unofficial implementation of Google \"CutPaste: Self-Supervised Learning for Anomaly Detection and Localization\" in PyTorch"}
{"name": "babelscape/wikineural", "full_name": "Babelscape/wikineural", "topics": ["natural-language-processing", "named-entity-recognition", "multilinguality", "dataset"], "description": "Data and evaluation code for the paper WikiNEuRal: Combined Neural and Knowledge-based Silver Data Creation for Multilingual NER (EMNLP 2021)."}
{"name": "ibm/adamml", "full_name": "IBM/AdaMML", "topics": ["computer-vision", "multimodal-learning", "deep-learning", "efficient-inference"], "description": "Official implementation of AdaMML. https://arxiv.org/abs/2105.05165. "}
{"name": "gcorso/neuroseed", "full_name": "gcorso/NeuroSEED", "topics": ["machine-learning", "bioinformatics", "biological-sequences", "pytorch", "hierarchical-clustering", "multiple-sequence-alignment", "neurips-2021"], "description": "Implementation of Neural Distance Embeddings for Biological Sequences (NeuroSEED) in PyTorch (NeurIPS 2021) "}
{"name": "keonlee9420/daft-exprt", "full_name": "keonlee9420/Daft-Exprt", "topics": ["text-to-speech", "style", "pytorch", "tts", "speech-synthesis", "english", "speaker", "prosody", "prosody-transfer", "gaussian-upsampling", "neural-tts", "non-autoregressive"], "description": "PyTorch Implementation of Daft-Exprt: Robust Prosody Transfer Across Speakers for Expressive Speech Synthesis"}
{"name": "jiangtaoxie/sot", "full_name": "jiangtaoxie/SoT", "topics": ["pytorch", "deep-learning"], "description": "SoT: Delving Deeper into Classification Head for Transformer"}
{"name": "onpix/lcdpnet", "full_name": "onpix/LCDPNet", "topics": ["computer-vision", "deep-learning", "eccv2022", "exposure-correction", "low-level-vision", "pytorch", "low-light-enhance", "low-light-image-enhancement", "overexposure-correction"], "description": "Official PyTorch code and dataset of the paper \"Local Color Distributions Prior for Image Enhancement\" [ECCV2022]"}
{"name": "rishikksh20/resunet", "full_name": "rishikksh20/ResUnet", "topics": ["resunet", "unet", "image-processing", "image-segmentation", "unet-pytorch", "medical-image-processing", "satellite-imagery", "deep-residual-network", "segmentation", "image-to-image-translation"], "description": "Pytorch implementation of ResUnet and ResUnet ++"}
{"name": "arcchang1236/ca-noisegan", "full_name": "arcchang1236/CA-NoiseGAN", "topics": ["denoisers", "noise-models", "camera-sensors", "eccv2020", "eccv", "gan", "pytorch", "sidd-dataset"], "description": "The official implementation of our ECCV 2020 paper \"Learning Camera-Aware Noise Models\"."}
{"name": "yuqi657/ts2_net", "full_name": "yuqi657/ts2_net", "topics": [], "description": "[ECCV2022] A pytorch implementation for TS2-Net: Token Shift and Selection Transformer for Text-Video Retrieval"}
{"name": "chargedmonk/social-distancing-using-yolov5", "full_name": "ChargedMonk/Social-Distancing-using-YOLOv5", "topics": ["python", "opencv", "yolo", "computer-vision", "deep-learning", "social-distancing", "social-distancing-detection", "social-distance-monitoring", "pytorch"], "description": "Classifying people as high risk and low risk based on their distance to other people."}
{"name": "aimodelshare/aimodelshare", "full_name": "AIModelShare/aimodelshare", "topics": ["machine-learning", "data-science", "deep-learning", "python", "mlops"], "description": null}
{"name": "nlp-suite/nlp-suite", "full_name": "NLP-Suite/NLP-Suite", "topics": ["nlp-suite", "nlp", "research"], "description": "CLICK ON WIKI LINK BELOW OR ON Wiki TAB AT TOP BANNER FOR DOWNLOAD INSTRUCTIONS AND  INFORMATION ON THE NLP SUITE."}
{"name": "lucidrains/multistream-transformers", "full_name": "lucidrains/multistream-transformers", "topics": ["artificial-intelligence", "deep-learning", "transformers"], "description": "Implementation of Multistream Transformers in Pytorch"}
{"name": "laughing-q/yolov5-q", "full_name": "Laughing-q/yolov5-q", "topics": ["pytorch", "segmentation", "deep-learning", "detection"], "description": "This repo is planning for instance segmentation based on yolov5-6.0 and yolact."}
{"name": "wwang2/torchmd", "full_name": "torchmd/mdgrad", "topics": ["quantum-dynamics", "molecular-dynamics", "statistical-mechanics", "physics-simulation", "chemistry", "graph-neural-networks", "polymer", "force-field-optimization", "differentiable-simulations", "quantum-isomerization"], "description": "Pytorch differentiable molecular dynamics "}
{"name": "frozenmad/metadelta", "full_name": "Frozenmad/MetaDelta", "topics": ["meta-learning", "deep-learning", "pytorch", "automl", "few-shot"], "description": "1st solution to AAAI 2021 and NeurIPS 2021 MetaDL competition from Team Meta_Learners. Serve as a strong baseline for cd metadl challenge."}
{"name": "disanda/dae", "full_name": "disanda/DAE", "topics": ["gan-encoders", "stylegan-encoder", "biggan-encoder", "gan", "pytorch", "deep-learning"], "description": "GAN encoders in PyTorch that could match PGGAN, StyleGAN v1/v2,  and BigGAN.  Code also integrates the implementation of these GANs."}
{"name": "pengzhiliang/conformer", "full_name": "pengzhiliang/Conformer", "topics": ["transformer", "cnn", "classification", "object-detection"], "description": "Official code for Conformer: Local Features Coupling Global Representations for Visual Recognition"}
{"name": "lyutyuh/asp", "full_name": "lyutyuh/ASP", "topics": ["coreference-resolution", "huggingface", "information-extraction", "named-entity-recognition", "natural-language-processing", "pytorch", "relation-extraction", "structured-prediction", "t5", "transformer", "emnlp2022", "pytorch-implementation"], "description": "PyTorch implementation and pre-trained models for ASP - Autoregressive Structured Prediction with Language Models, EMNLP 22. https://arxiv.org/pdf/2210.14698.pdf"}
{"name": "kylezheng1997/ressl", "full_name": "kyle-1997/ReSSL", "topics": ["self-supervised-learning", "unsupervised-learning", "machine-learning", "deep-learning"], "description": "ReSSL: Relational Self-Supervised Learning with Weak Augmentation"}
{"name": "zggg1p/a-domain-adaption-transfer-learning-bearing-fault-diagnosis-model-based-on-wide-convolution-deep-neu", "full_name": "zggg1p/A-Domain-Adaption-Transfer-Learning-Bearing-Fault-Diagnosis-Model-Based-on-Wide-Convolution-Deep-Neu", "topics": ["deep-learning", "domain-adaptation", "fault-detection"], "description": " Inspired by the idea of transfer learning, a combined approach is proposed. In the method, Deep Convolutional Neural Networks with Wide First-layer Kernel is used to extract features to classify the health conditions. "}
{"name": "ipapakis/gcnnmatch", "full_name": "IPapakis/GCNNMatch", "topics": ["multi-object-tracking", "graph-neural-networks", "deep-learning", "computer-vision"], "description": "This repository is the official code implementation of the paper GCNNMatch: Graph Convolutional Neural Networks for Multi-Object Tracking via Sinkhorn Normalization."}
{"name": "nicola-decao/efficient-autoregressive-el", "full_name": "nicola-decao/efficient-autoregressive-EL", "topics": ["natural-language-processing", "nlp", "pytorch", "entity-linking", "entity-disambiguation"], "description": "Pytorch implementation of Highly Parallel Autoregressive Entity Linking with Discriminative Correction"}
{"name": "m3dv/fracnet", "full_name": "M3DV/FracNet", "topics": ["medical-imaging", "deep-learning", "rib", "fracture", "ribfrac"], "description": "[eBioMedicine] Deep-learning-assisted detection and segmentation of rib fractures from CT scans: Development and validation of FracNet"}
{"name": "haochengwan/pvt", "full_name": "HaochengWan/PVT", "topics": ["point-cloud", "pytorch", "pvt", "modelnet40", "shapenet", "s3dis", "kitti", "point-cloud-processing", "sota"], "description": "PVT: Point-Voxel Transformer for 3D Deep Learning"}
{"name": "akshitac8/biam", "full_name": "akshitac8/BiAM", "topics": ["multi-label-zsl", "nus-wide", "openimages-v4", "iccv2021", "self-attention", "channel-attention", "generalized-zero-shot-learning", "zero-shot-learning", "multi-label-learning"], "description": "[ICCV 2021]  Official Pytorch implementation for Discriminative Region-based Multi-Label Zero-Shot Learning SOTA results on NUS-WIDE and OpenImages"}
{"name": "yhzhu99/covid-ehr-benchmarks", "full_name": "yhzhu99/covid-ehr-benchmarks", "topics": ["deep-learning", "ehr", "machine-learning", "pytorch"], "description": "A Comprehensive Benchmark For COVID-19 Predictive Modeling Using Electronic Health Records"}
{"name": "amazon-research/glass-text-spotting", "full_name": "amazon-science/glass-text-spotting", "topics": ["attention", "deep-learning", "detection", "ocr", "text-spotting"], "description": "Official implementation for \"GLASS: Global to Local Attention for Scene-Text Spotting\" (ECCV'22)"}
{"name": "royerlab/cytoself", "full_name": "royerlab/cytoself", "topics": ["deep-learning", "protein", "imaging", "autoencoder", "fluorescence", "pytorch", "self-supervised", "self-supervised-learning", "tensorflow", "opencell", "microscopy"], "description": "Self-supervised models for encoding protein localization patterns from microscopy images"}
{"name": "takaaki-saeki/ssl_speech_restoration", "full_name": "Takaaki-Saeki/ssl_speech_restoration", "topics": ["pytorch", "speech-enhancement", "speech-synthesis", "self-supervised-learning"], "description": "SelfRemaster: SSL Speech Restoration"}
{"name": "chenjunyi1999/chatbot-pytorch", "full_name": "chenjunyi1999/ChatBot-GPT2", "topics": ["pytorch", "huggingface-transformers", "nlp", "machine-learning", "deep-learning"], "description": "[Pytorch] A GPT2-ChatBot implemented by huggingface/transformers"}
{"name": "qitianwu/graphood-eerm", "full_name": "qitianwu/GraphOOD-EERM", "topics": ["causal-models", "graph-neural-networks", "out-of-distribution-generalization", "pytorch"], "description": "The official implementation for ICLR22 paper \"Handling Distribution Shifts on Graphs: An Invariance Perspective\""}
{"name": "jelly54/pytorch_train", "full_name": "tf2jaguar/pytorch_train", "topics": ["resnet-34", "pytorch-tutorial"], "description": "\u6bd5\u4e1a\u8bbe\u8ba1 \u4f7f\u7528pytorch\u8fdb\u884c\u6df1\u5ea6\u5b66\u4e60\u7f51\u7edc\u6a21\u578b\u8bad\u7ec3\uff0c\u5b9e\u73b0\u8f66\u578b\u8bc6\u522b"}
{"name": "keonlee9420/wavegrad2", "full_name": "keonlee9420/WaveGrad2", "topics": ["text-to-speech", "phoneme-to-waveform", "neural-tts", "audio", "synthesis", "non-autoregressive", "score-matching", "duration", "robust", "pytorch", "tts", "speech-synthesis", "text-to-audio", "end-to-end"], "description": "PyTorch Implementation of Google Brain's WaveGrad 2: Iterative Refinement for Text-to-Speech Synthesis"}
{"name": "glami/glami-1m", "full_name": "glami/glami-1m", "topics": ["computer-vision", "dataset", "deep-learning", "fashion", "image-text", "image-to-text", "multilingual", "multimodal", "natural-language-processing", "classification", "image-text-classification", "multilingual-image-text-classification", "image-classification", "text-classification", "text-to-image-generation", "multi-modal-deep-learning"], "description": "The largest multilingual image-text classification dataset. It contains fashion products."}
{"name": "dimitymiller/cac-openset", "full_name": "dimitymiller/cac-openset", "topics": ["openset", "deep-learning", "openset-classification"], "description": "Code for Class Anchor Clustering loss for training a distance-based open set classifier"}
{"name": "yiqun-wang/mgcn", "full_name": "yiqun-wang/MGCN", "topics": ["pytorch", "descriptor-learning", "multiscale-gcns", "graphics", "siggraph"], "description": "MGCN: Descriptor Learning using Multiscale GCNs (SIGGRAPH 2020)"}
{"name": "chenjunyi1999/chatbot_gpt2", "full_name": "chenjunyi1999/ChatBot-GPT2", "topics": ["pytorch", "huggingface-transformers", "nlp", "machine-learning", "deep-learning"], "description": "[Pytorch] A GPT2-ChatBot implemented by huggingface/transformers"}
{"name": "quansight/pytest-pytorch", "full_name": "Quansight/pytest-pytorch", "topics": ["pytest", "plugin", "pytorch", "torch"], "description": "pytest plugin for a better developer experience when working with the PyTorch test suite"}
{"name": "chenpan0615/fccdn_pytorch", "full_name": "chenpan0615/FCCDN_pytorch", "topics": [], "description": "The pytorch implemention of FCCDN for change detection task"}
{"name": "xinjinghao/ppo-continuous-pytorch", "full_name": "XinJingHao/PPO-Continuous-Pytorch", "topics": [], "description": "A clean and robust Pytorch implementation of PPO on continuous action space."}
{"name": "kanishkamisra/minicons", "full_name": "kanishkamisra/minicons", "topics": ["nlp", "natural-language-processing", "transformers", "language-model"], "description": "Utility for analyzing Transformer based representations of language."}
{"name": "l294265421/acsa", "full_name": "l294265421/ACSA", "topics": ["aspect-category-sentiment-analysis", "acd", "acsc", "joint-model", "pytorch", "aspect-based-sentiment-analysis"], "description": "Papers, models and datasets for Aspect-Category Sentiment Analysis."}
{"name": "seanbenhur/siamese_net", "full_name": "seanbenhur/siamese_net", "topics": ["siamese-networks", "signature-verification", "convolutional-neural-networks", "pytorch", "pytorch-implementation"], "description": "Signature verification system using Siamese networks"}
{"name": "cglemon/pydlgo", "full_name": "CGLemon/pyDLGO", "topics": ["deep-learning", "mcts", "weiqi", "goban", "baduk", "alphago", "game-of-go"], "description": "\u57fa\u65bc\u6df1\u5ea6\u5b78\u7fd2\u7684 GTP \u570d\u68cb\uff08\u56f4\u68cb\uff09\u5f15\u64ce\uff0cKGS \u6307\u5f15\u6587\u4ef6\u4ee5\u53ca\u6f14\u7b97\u6cd5\u6559\u5b78\u3002"}
{"name": "iesl/box-embeddings", "full_name": "iesl/box-embeddings", "topics": ["box-embedding", "deep-learning", "machine-learning"], "description": "Box Embeddings as Modules"}
{"name": "mccreezhao/qamface", "full_name": "MccreeZhao/QAMFace", "topics": [], "description": "Pytorch implementation of Quadratic Additive Angular Margin Loss for Face Recognition"}
{"name": "wenxuecui/csnet-pytorch", "full_name": "WenxueCui/CSNet-Pytorch", "topics": [], "description": "Pytorch code for paper \"Deep Networks for Compressed Image Sensing\" and \"Image Compressed Sensing Using Convolutional Neural Network\""}
{"name": "akshitac8/generative_mlzsl", "full_name": "akshitac8/Generative_MLZSL", "topics": ["zero-shot-classification", "multi-label-classification", "generative-adversarial-network", "vaegan", "self-attention", "pytorch-implementation", "gzsl", "zsl", "zero-shot-detection", "multi-label-zsl", "clswgan", "pytorch"], "description": "[TPAMI Under Submission] Generative Multi-Label Zero-Shot Learning"}
{"name": "rushhan/generative-adversarial-user-model-for-reinforcement-learning-based-recommendation-system-pytorch", "full_name": "rushhan/Generative-Adversarial-User-Model-for-Reinforcement-Learning-Based-Recommendation-System-Pytorch", "topics": ["gan", "generative-adversarial-network", "reinforcement-learning", "recommendation-system", "recommender-system", "pytorch", "pytorch-implementation", "position-weight-matrix", "cascading-dqn", "dqn", "dqn-pytorch"], "description": null}
{"name": "iceclear/mw-gan", "full_name": "IceClear/MW-GAN", "topics": ["mw-gan", "pytorch"], "description": "Official PyTorch implements for Multi-level Wavelet-Based Generative Adversarial Network for Perceptual Quality Enhancement of Compressed Video (ECCV, 2020) and MW-GAN+ for Perceptual Quality Enhancement on Compressed Video (IEEE TCSVT)."}
{"name": "declare-lab/kingdom", "full_name": "declare-lab/kingdom", "topics": ["sentiment-analysis", "domain-adaptation", "opinion-mining", "deep-learning", "deep-neural-networks", "adversarial-networks", "adversarial-learning"], "description": "Domain Adaptation using External Knowledge for Sentiment Analysis"}
{"name": "shiming-chen/transzero", "full_name": "shiming-chen/TransZero", "topics": ["cross-dataset-bias", "transformer", "zero-shot-learning", "pytorch", "attribute-localization", "feature-improvement"], "description": "Official PyTorch Implementation of TransZero (AAAI'22)"}
{"name": "sajjadaemmi/face-recognition", "full_name": "SajjadAemmi/Face-Recognition", "topics": ["face-recognition", "deep-learning", "pytorch"], "description": "Face Recognition using Python"}
{"name": "galmetzer/self-sample", "full_name": "galmetzer/self-sample", "topics": ["pytorch", "deep-learning", "point-cloud"], "description": "Single shape Deep Point Cloud Consolidation [TOG 2021]"}
{"name": "jxhe/efficient-knnlm", "full_name": "jxhe/efficient-knnlm", "topics": [], "description": "Pytorch implementation of paper \"Efficient Nearest Neighbor Language Models\" (EMNLP 2021)"}
{"name": "skywalker023/focused-empathy", "full_name": "skywalker023/focused-empathy", "topics": ["nlp", "conference-paper", "empathy", "dialogue-systems", "chatbot", "pragmatics", "perspective-taking", "dataset", "deep-learning", "pytorch", "emotion", "emotion-cause"], "description": "\ud83e\udd17 Code and Dataset for our EMNLP 2021 paper: \"Perspective-taking and Pragmatics for Generating Empathetic Responses Focused on Emotion Causes\""}
{"name": "ybabakhin/zindi_wheat_growth", "full_name": "ybabakhin/zindi_wheat_growth", "topics": ["deep-learning", "image-classification", "pytorch", "resnet", "pytorch-lightning", "computer-vision"], "description": "1st place solution for CGIAR Wheat Growth Stage Challenge"}
{"name": "tymonxie/tymon", "full_name": "TymonXie/tymon", "topics": ["pytorch", "sklearn", "machine-learning", "python", "deep-learning"], "description": "An AI Assistant More Than a Toolkit"}
{"name": "icon-lab/resvit", "full_name": "icon-lab/ResViT", "topics": ["deep-learning", "image-synthesis", "medical-imaging", "residual-learning", "transformers", "image-to-image-translation", "mri", "vision-transformer", "attention"], "description": "Official Implementation of ResViT: Residual Vision Transformers for Multi-modal Medical Image Synthesis"}
{"name": "connorlee77/pytorch-mutual-information", "full_name": "connorlee77/pytorch-mutual-information", "topics": [], "description": "Mutual Information in Pytorch"}
{"name": "boomb0om/real-esrgan-colab", "full_name": "boomb0om/Real-ESRGAN-colab", "topics": ["pytorch", "super-resolution", "esrgan", "real-esrgan", "denoise", "decompress"], "description": "A Real-ESRGAN model trained on a custom dataset"}
{"name": "pvjosue/lfmnet", "full_name": "pvjosue/LFMNet", "topics": ["neural-network", "lightfield", "4d", "reconstruction", "inverse-problems", "pytorch-cnn", "pytorch", "deep-learning", "conv4d", "3d-volume"], "description": "Deep neural network to reconstruct Confocal 3D stacks from Light Field Microscopy images."}
{"name": "bubbliiiing/yolov5-v6.1-pytorch", "full_name": "bubbliiiing/yolov5-v6.1-pytorch", "topics": [], "description": "\u8fd9\u662f\u4e00\u4e2ayolov5-v6.1-pytorch\u7684\u6e90\u7801\uff0c\u53ef\u4ee5\u7528\u4e8e\u8bad\u7ec3\u81ea\u5df1\u7684\u6a21\u578b\u3002"}
{"name": "iigroup/radn", "full_name": "IIGROUP/RADN", "topics": ["ntire2021", "pytorch", "image-quality-assessment"], "description": "[CVPRW 2021] Codes for Region-Adaptive Deformable Network for Image Quality Assessment"}
{"name": "cuge1995/pointcutmix", "full_name": "cuge1995/PointCutMix", "topics": ["point-cloud", "deep-learning", "3d-deep-learning", "data-augmentation"], "description": "our code for paper 'PointCutMix: Regularization Strategy for Point Cloud Classification'"}
{"name": "vita-group/sandwich-batch-normalization", "full_name": "VITA-Group/Sandwich-Batch-Normalization", "topics": ["neural-architecture-search", "gan", "style-transfer", "adversarial-training", "batch-normalization", "normalization", "sandwich-batch-normalization", "sabn", "nas", "pytorch"], "description": "[WACV 2022] \"Sandwich Batch Normalization: A Drop-In Replacement for Feature Distribution Heterogeneity\" by Xinyu Gong, Wuyang Chen, Tianlong Chen and Zhangyang Wang"}
{"name": "romainloiseau/helix4d", "full_name": "romainloiseau/Helix4D", "topics": [], "description": "Official Pytorch implementation of the \"Online Segmentation of LiDAR Sequences: Dataset and Algorithm\" paper"}
{"name": "shiweiliuiiiiiii/in-time-over-parameterization", "full_name": "Shiweiliuiiiiiii/In-Time-Over-Parameterization", "topics": ["sparsity", "in-time-overparameterization", "sparse-training", "dynamic-sparse-training", "deep-learning", "generalization", "in-time-over-parameterization", "over-parameterization", "overparameterization"], "description": "[ICML 2021] \"Do We Actually Need Dense Over-Parameterization? In-Time Over-Parameterization in Sparse Training\" by Shiwei Liu, Lu Yin, Decebal Constantin Mocanu,  Mykola Pechenizkiy"}
{"name": "manycore-research/faceformer", "full_name": "manycore-research/faceformer", "topics": ["computer-vision", "cvpr", "3d-reconstruction", "pytorch", "transformer", "deep-learning", "line-drawing", "pointer-networks"], "description": "[CVPR 2022] Neural Face Identification in a 2D Wireframe Projection of a Manifold Object"}
{"name": "fangwei123456/parametric-leaky-integrate-and-fire-spiking-neuron", "full_name": "fangwei123456/Parametric-Leaky-Integrate-and-Fire-Spiking-Neuron", "topics": ["spiking-neural-networks", "snn", "deep-learning", "deep-neural-networks"], "description": "Incorporating Learnable Membrane Time Constant to Enhance Learning of Spiking Neural Networks"}
{"name": "wuyxin/refine", "full_name": "Wuyxin/ReFine", "topics": ["graph-neural-network", "multi-grained-explainability", "neurips2021"], "description": "Official code of \"Towards Multi-Grained Explainability for Graph Neural Networks\" (NeurIPS 2021) + Pytorch Implementation of recent attribution methods for GNNs"}
{"name": "tvhahn/weibull-knowledge-informed-ml", "full_name": "tvhahn/weibull-knowledge-informed-ml", "topics": ["condition-monitoring", "weibull", "machine-learning", "knowledge-informed-machine-learning", "bearing-fault-diagnosis", "remaining-useful-life", "ims-bearing-data-set", "pronostia-dataset", "prognostics-health-management", "deep-learning", "manufacturing", "pytorch"], "description": "Using knowledge-informed machine learning on the PRONOSTIA (FEMTO) and IMS bearing data sets. Predict remaining-useful-life (RUL)."}
{"name": "pau1o-hs/learned-motion-matching", "full_name": "pau1o-hs/Learned-Motion-Matching", "topics": ["pytorch"], "description": "A neural-network-based generative model for video-game characters animations"}
{"name": "richermans/datadriven-gpvad", "full_name": "RicherMans/Datadriven-GPVAD", "topics": ["noise-robust", "voice-activity-detection", "speech-activity-detection", "machine-learning", "pytorch"], "description": "The codebase for Data-driven general-purpose voice activity detection."}
{"name": "csiro-robotics/tce", "full_name": "csiro-robotics/TCE", "topics": ["self-supervised-learning", "computer-vision", "contrastive-learning", "metric-learning", "representation-learning", "ucf-101", "pytorch", "hmdb51", "kinetics-datasets", "action-recognition", "tsne-visualisations", "contrastive-loss", "embeddings", "deep-learning"], "description": "This repository contains the code implementation used in the paper Temporally Coherent Embeddings for Self-Supervised Video Representation Learning (TCE). "}
{"name": "flaport/torch_sparse_solve", "full_name": "flaport/torch_sparse_solve", "topics": ["pytorch", "sparse-matrix", "sparse-linear-systems", "klu-algorithm", "sparse", "sparse-matrices", "suitesparse", "python"], "description": "A sparse KLU solver for PyTorch."}
{"name": "zqpei/dssd", "full_name": "ZQPei/DSSD", "topics": ["dssd", "object-detection", "one-stage", "one-shot-object-detection"], "description": "Pytorch implementation of DSSD (Deconvolutional Single Shot Detector)"}
{"name": "waking95/easy-bert", "full_name": "waking95/easy-bert", "topics": ["bert", "torch", "transformers", "nlp", "classification", "sequence-labelling", "knowledge-distillation", "chinese-nlp", "chinese", "deep-learning", "nlp-library"], "description": "easy-bert\u662f\u4e00\u4e2a\u4e2d\u6587NLP\u5de5\u5177\uff0c\u63d0\u4f9b\u8bf8\u591abert\u53d8\u4f53\u8c03\u7528\u548c\u8c03\u53c2\u65b9\u6cd5\uff0c\u6781\u901f\u4e0a\u624b\uff1b\u6e05\u6670\u7684\u8bbe\u8ba1\u548c\u4ee3\u7801\u6ce8\u91ca\uff0c\u4e5f\u5f88\u9002\u5408\u5b66\u4e60"}
{"name": "danielhcarranza/ml-production-template", "full_name": "DanielhCarranza/ml-production-template", "topics": ["deep-learning", "deep-learning-production"], "description": "This codebase is a starting point to get your Machine Learning project into Production."}
{"name": "lucidrains/anymal-belief-state-encoder-decoder-pytorch", "full_name": "lucidrains/anymal-belief-state-encoder-decoder-pytorch", "topics": ["deep-learning", "artificial-intelligence", "robotics", "locomotion-control"], "description": "Implementation of the Belief State Encoder / Decoder in the new breakthrough robotics paper from ETH Z\u00fcrich"}
{"name": "mlsysops/alaas", "full_name": "MLSysOps/Active-Learning-as-a-Service", "topics": ["active-learning", "mlsys", "mlops", "deep-learning", "machine-learning", "automl", "pytorch"], "description": "A scalable & efficient active learning/data selection system for everyone."}
{"name": "hoya012/automatic-mixed-precision-tutorials-pytorch", "full_name": "hoya012/automatic-mixed-precision-tutorials-pytorch", "topics": [], "description": "Automatic Mixed Precision Tutorials using pytorch. Based on PyTorch 1.6 Official Features,  implement classification codebase using custom dataset."}
{"name": "ioangatop/srvae", "full_name": "ioangatop/srVAE", "topics": ["vae", "vae-pytorch", "super-resolution", "representation-learning", "unsupervised-learning", "unsupervised-machine-learning", "pytorch", "python3", "generative-model", "variational-autoencoder", "cifar10", "cifar-10"], "description": "VAE with RealNVP prior and Super-Resolution VAE in PyTorch. Code release for https://arxiv.org/abs/2006.05218."}
{"name": "jianf-wang/np-match", "full_name": "Jianf-Wang/NP-Match", "topics": [], "description": "A Pytorch implementation of ICML 2022 paper \"NP-Match: When Neural Processes meet Semi-Supervised Learning\""}
{"name": "masadcv/fastgeodis", "full_name": "masadcv/FastGeodis", "topics": ["deep-learning", "gpu", "pytorch"], "description": "Fast Implementation of Generalised Geodesic Distance Transform for CPU (OpenMP) and GPU (CUDA)"}
{"name": "omerferhatt/torch2tflite", "full_name": "omerferhatt/torch2tflite", "topics": ["pytorch", "tensorflow2", "onnx", "tflite", "tensorflowlite", "onnx-tf", "model-converter"], "description": "PyTorch to TensorFlow Lite converter"}
{"name": "recursionpharma/gflownet", "full_name": "recursionpharma/gflownet", "topics": ["deep-learning", "gflownet", "graph-neural-network", "pytorch"], "description": "GFlowNet library specialized for graph & molecular data"}
{"name": "jerryx1110/robust-video-object-segmentation", "full_name": "JerryX1110/Robust-Video-Object-Segmentation", "topics": ["robust", "robustness", "video", "video-object-segmentation", "video-segmentation", "vos", "acm-mm", "acm-multimedia", "acm-multimedia-2022", "segmentation", "trustworthy-ai", "clustering", "denosing", "k-means", "acm", "acm-mm-22", "pytorch", "tracking", "robust-tracking"], "description": "[ACM MM22] Towards Robust Video Object Segmentation with Adaptive Object Calibration, ACM Multimedia 2022"}
{"name": "denisyarats/proto", "full_name": "denisyarats/proto", "topics": ["python", "control", "reinforcement-learning", "deep-learning", "pixel", "representation-learning", "pytorch", "rl", "gym", "mujoco", "dm-control", "sac", "drq", "proto", "proto-rl", "soft-actor-critic", "unsupervised-learning", "unsupervised-rl"], "description": "Proto-RL: Reinforcement Learning with Prototypical Representations"}
{"name": "tencentyouturesearch/personreid-nafs", "full_name": "TencentYoutuResearch/PersonReID-NAFS", "topics": ["cuhk-pedes-dataset", "pytorch"], "description": "Code for \"Contextual Non-Local Alignment over Full-Scale Representation for Text-Based Person Search\""}
{"name": "oss-pole-emploi/gabarit", "full_name": "OSS-Pole-Emploi/gabarit", "topics": ["data-science", "deep-learning", "machine-learning", "python"], "description": "Gabarit : kickstart your data science project from scratch "}
{"name": "vumblebot/odqa_baseline_code", "full_name": "VumBleBot/odqa_baseline_code", "topics": ["pytorch", "odqa", "machine-reading-comprehension", "mrc", "korquad", "question-answering", "bert", "electra", "openqa"], "description": "Baseline code for Korean open domain question answering(ODQA)"}
{"name": "jiechuanjiang/pytorch_dgn", "full_name": "jiechuanjiang/pytorch_DGN", "topics": [], "description": "The pytorch implementation of DGN on grid world and Starcraft"}
{"name": "silverster98/humanise", "full_name": "Silverster98/HUMANISE", "topics": ["3d-scene-understanding", "deep-learning", "motion-generation"], "description": "Official implementation of the NeurIPS22 paper \"HUMANISE: Language-conditioned Human Motion Generation in 3D Scenes\""}
{"name": "disanda/dse", "full_name": "disanda/DAE", "topics": ["gan-encoders", "stylegan-encoder", "biggan-encoder", "gan", "pytorch", "deep-learning"], "description": "GAN encoders in PyTorch that could match PGGAN, StyleGAN v1/v2,  and BigGAN.  Code also integrates the implementation of these GANs."}
{"name": "acl21/deep-active-learning-pytorch", "full_name": "acl21/deep-active-learning-pytorch", "topics": ["deep-active-learning", "image-classification", "toolkit", "pytorch"], "description": "A PyTorch toolkit with 8 popular deep active learning query methods implemented. "}
{"name": "bayesgroup/code_transformers", "full_name": "bayesgroup/code_transformers", "topics": ["pytorch", "deep-learning", "code-completion", "variable-misuse", "function-naming"], "description": "Empirical Study of Transformers for Source Code & A Simple Approach for Handling Out-of-Vocabulary Identifiers in Deep Learning for Source Code"}
{"name": "deeppsp/torch_ecg", "full_name": "DeepPSP/torch_ecg", "topics": ["deep-learning", "ecg", "pytorch"], "description": "Deep learning ECG models implemented using PyTorch"}
{"name": "liguge/deep-residual-shrinkage-networks-for-intelligent-fault-diagnosis-drsn-", "full_name": "liguge/Deep-Residual-Shrinkage-Networks-for-intelligent-fault-diagnosis-DRSN-", "topics": [], "description": "Deep Residual Shrinkage Networks for Intelligent Fault Diagnosis\uff08pytorch\uff09  \u6df1\u5ea6\u6b8b\u5dee\u6536\u7f29\u7f51\u7edc\u5e94\u7528\u4e8e\u6545\u969c\u8bca\u65ad"}
{"name": "bm-k/kosimcse-skt", "full_name": "BM-K/KoSimCSE-SKT", "topics": ["natural-language-processing", "sentence-embeddings", "sentence-similarity", "korean-simcse"], "description": "Simple Contrastive Learning of Korean Sentence Embeddings"}
{"name": "vcl3d/deeppanoramalighting", "full_name": "VCL3D/DeepPanoramaLighting", "topics": ["spherical-panoramas", "lighting-estimation", "cnn", "pytorch", "relighting", "spherical-harmonics", "360", "omnidirectional", "augmented-reality"], "description": "Deep Lighting Environment Map Estimation from Spherical Panoramas (CVPRW20)"}
{"name": "mahmoudnafifi/c5", "full_name": "mahmoudnafifi/C5", "topics": ["white-balance", "whitebalance", "colorconstancy", "color-constancy", "cross-camera", "deep-learning", "hypernetworks", "machine-learning", "computational-photography", "illuminant-estimation", "color-correction", "iccv2021", "pytorch"], "description": "Reference code for the paper \"Cross-Camera Convolutional Color Constancy\" (ICCV 2021)"}
{"name": "ubisoft/ubisoft-laforge-daft-exprt", "full_name": "ubisoft/ubisoft-laforge-daft-exprt", "topics": ["text-to-speech", "tts", "speech-synthesis", "expressive-spee", "style", "style-transfer", "prosody", "prosody-transfer", "self-attention", "affine-transformations", "pytorch", "expressive-speech-synthesis"], "description": "PyTorch Implementation of Daft-Exprt: Robust Prosody Transfer Across Speakers for Expressive Speech Synthesis"}
{"name": "leaderj1001/synthesizer-rethinking-self-attention-transformer-models", "full_name": "leaderj1001/Synthesizer-Rethinking-Self-Attention-Transformer-Models", "topics": ["transformer", "synthesizer", "pytorch"], "description": "Implementing SYNTHESIZER: Rethinking Self-Attention in Transformer Models using Pytorch"}
{"name": "buxihuo/luck-yolo", "full_name": "buxihuo/OW-YOLO", "topics": ["yolov5", "pytorch", "yolo", "object-detection", "deep-learning", "unknown", "autolabel", "open-world-detection", "open-world", "yolov8"], "description": "Detect known and unknown objects in the open world\uff08\u5177\u6709\u533a\u5206\u5df2\u77e5\u4e0e\u672a\u77e5\u80fd\u529b\u7684\u5168\u65b0\u68c0\u6d4b\u5668\uff09\uff09"}
{"name": "yassouali/scl", "full_name": "yassouali/SCL", "topics": ["deep-learning", "self-supervised-learning", "contrastive-learning", "few-shot-learning", "image-classification"], "description": ":page_facing_up: Spatial Contrastive Learning for Few-Shot Classification (ECML/PKDD 2021)."}
{"name": "palver7/equiconvpytorch", "full_name": "palver7/EquiConvPytorch", "topics": [], "description": "Pytorch implementation of EquiConv "}
{"name": "joshr17/ifm", "full_name": "joshr17/IFM", "topics": ["pytorch", "deep-learning", "self-supervised-learning"], "description": "Code for paper \"Can contrastive learning avoid shortcut solutions?\" NeurIPS 2021."}
{"name": "rangilyu/mobilenext", "full_name": "RangiLyu/mobilenext", "topics": ["deep-neural-networks", "pytorch", "mobilenet"], "description": "non-official PyTorch implementation of MobileNeXt from paper [Rethinking Bottleneck Structure for Efficient Mobile Network Design]"}
{"name": "mswzeus/plus", "full_name": "mswzeus/PLUS", "topics": ["plus", "protein-transfer-learning", "pytorch"], "description": "Official Pytorch implementation of PLUS (Protein sequence representations Learned Using Structural information), IEEE Access 2021"}
{"name": "matthias-k/deepgaze", "full_name": "matthias-k/DeepGaze", "topics": [], "description": "pytorch implementation of the different DeepGaze models"}
{"name": "syuoni/eznlp", "full_name": "syuoni/eznlp", "topics": ["natural-language-processing", "nlp", "pytorch", "information-extraction", "named-entity-recognition"], "description": "Easy Natural Language Processing"}
{"name": "pooya-mohammadi/crnn-pytorch", "full_name": "pooya-mohammadi/crnn-pytorch", "topics": ["crnn", "crnn-ocr", "license-plate-recognition", "ocr", "ocr-recognition", "persian-licenceplate", "python", "pytorch", "pytorch-lightning", "crnn-pytorch"], "description": "pytorch implementation of crnn. A sample training of license plate is provided."}
{"name": "columbia-robovision/decentralized-multiarm", "full_name": "columbia-ai-robotics/decentralized-multiarm", "topics": ["multiagent-reinforcement-learning", "robotics", "deep-learning", "motion-planning", "pytorch"], "description": "[CoRL 2020] Learning a Decentralized Multiarm Motion Planner"}
{"name": "dlmacedo/distinction-maximization-loss", "full_name": "dlmacedo/distinction-maximization-loss", "topics": ["classification", "deep-learning", "machine-learning", "open-set-recognition", "out-of-distribution-detection", "pytorch", "robust-machine-learning", "trustworthy-ai", "trustworthy-machine-learning", "uncertainty-estimation", "ai-safety", "anomaly-detection", "novelty-detection", "ood", "ood-detection", "open-set", "osr", "out-of-distribution"], "description": "A project to improve out-of-distribution detection (open set recognition) and uncertainty estimation by changing a few lines of code in your project! Perform efficient inferences (i.e., do not increase inference time) without repetitive model training, hyperparameter tuning, or collecting additional data."}
{"name": "samholt/neurallaplace", "full_name": "samholt/NeuralLaplace", "topics": ["deep-learning", "deep-neural-networks", "delay-differential-equations", "differential-equations", "dynamical-systems", "ilt", "integro-differential-equations", "laplace-transform", "neural-differential-equations", "riemann-sphere", "stereographic-projection", "inverse-laplace-transform", "stiff-ode", "forced-ode", "dde", "ide", "ode", "neural-network", "pytorch"], "description": "Neural Laplace: Differentiable Laplace Reconstructions for modelling any time observation with O(1) complexity."}
{"name": "atrcheema/ai4water", "full_name": "AtrCheema/AI4Water", "topics": ["machine-learning", "deep-learning", "tabular-data", "time-series"], "description": "framework for developing machine (and deep) learning models for structured data"}
{"name": "ibaigorordo/ultrafast-lane-detection-inference-pytorch-", "full_name": "ibaiGorordo/Ultrafast-Lane-Detection-Inference-Pytorch-", "topics": ["python", "pytorch", "lane-detection", "self-driving-car", "lane-lines-detection", "lane-segmentation"], "description": "Example scripts for the detection of lanes using the ultra fast lane detection model in Pytorch."}
{"name": "wutong16/adversarial_long-tail", "full_name": "wutong16/Adversarial_Long-Tail", "topics": [], "description": "[ CVPR 2021 Oral ] Pytorch implementation for \"Adversarial Robustness under Long-Tailed Distribution\""}
{"name": "alisonbma/aisfx", "full_name": "alisonbma/aiSFX", "topics": ["deep-learning", "embedding-models", "machine-learning", "music-information-retrieval", "representation-learning", "sound-effects-library", "universal-category-system"], "description": "Representation Learning for the Automatic Indexing of Sound Effects Libraries (ISMIR 2022): Deep audio embeddings pre-trained on UCS & Non-UCS-compliant datasets."}
{"name": "yk/patch-torch-save", "full_name": "yk/patch-torch-save", "topics": [], "description": "Patches the torch.save function with arbitrary code that gets executed upon torch.load."}
{"name": "yaoxiaoyuan/mimix", "full_name": "yaoxiaoyuan/mimix", "topics": ["chinese-chatbot", "chinese-nlp", "gpt-2", "nlp", "poetry-generation", "pytorch", "question-generation", "seq2seq", "summarization", "text-similarity", "comment-generation", "essay-generation", "question-answering", "generative-qa", "product-description-generation", "product-review-generation", "pretrained-models", "chinese-pretrained-models", "novel-generation", "chinese-english-translator"], "description": "Chinese Text Generation/\u4e2d\u6587\u6587\u672c\u751f\u6210,\u5305\u62ec\u8bd7\u8bcd\u66f2\u8054\u751f\u6210\u3001\u6b4c\u8bcd\u751f\u6210\u3001\u73b0\u4ee3\u8bd7\u751f\u6210\u3001\u95ee\u9898\u6269\u589e\u3001\u81ea\u52a8\u6458\u8981\u3001\u6587\u8a00\u6587\u7ffb\u8bd1\u3001\u95ee\u9898\u76f8\u4f3c\u5ea6\u6a21\u578b\u3001\u4f5c\u6587\u6a21\u578b\u3001\u65b0\u95fb\u8bc4\u8bba\u751f\u6210\u3001\u5546\u54c1\u6587\u6848\u751f\u6210\u3001\u5546\u54c1\u8bc4\u4ef7\u751f\u6210\u3001\u6b66\u4fa0\u5c0f\u8bf4\u751f\u6210\u3001\u751f\u6210\u5f0f\u95ee\u7b54\u3001\u4e2d\u82f1\u673a\u5668\u7ffb\u8bd1"}
{"name": "lipairui/textgo", "full_name": "Lipairui/textgo", "topics": ["text-preprocessing", "nlp", "text-classification", "text-search", "text-similarity", "text-representation", "bert"], "description": "Text preprocessing, representation, similarity calculation, text search and classification. Let's go and play with text!"}
{"name": "chogovadze/deep-illuminator", "full_name": "chogovadze/Deep-Illuminator", "topics": ["augmentations", "illumination", "relighting", "deep-learning", "pytorch"], "description": "Deep Illuminator is a data augmentation tool designed for image relighting. It can be used to easily and efficiently generate a wide range of illumination variants of a single image."}
{"name": "danieldeutsch/repro", "full_name": "danieldeutsch/repro", "topics": ["nlp", "docker", "reproducible-research", "reproducibility", "machine-learning"], "description": "Repro is a library for easily running code from published papers via Docker."}
{"name": "jiarenchang/realtimestereo", "full_name": "JiaRenChang/RealtimeStereo", "topics": ["stereo-vision", "stereo-matching", "pytorch", "psmnet", "real-time"], "description": "Attention-Aware Feature Aggregation for Real-time Stereo Matching on Edge Devices (ACCV, 2020)"}
{"name": "lyqun/pu-net_pytorch", "full_name": "lyqun/PU-Net_pytorch", "topics": ["pytorch", "cvpr2018", "point-cloud", "pu-net", "upsampled-point-clouds"], "description": "PyTorch Implementation of PU-Net. PU-Net: Point Cloud Upsampling Network, CVPR 2018"}
{"name": "inhwanbae/enet-sad_pytorch", "full_name": "InhwanBae/ENet-SAD_Pytorch", "topics": ["lane-detection", "enet", "self-attention-distillation", "pytorch-implementation", "deep-learning", "semantic-segmentation", "pytorch", "python"], "description": "Pytorch implementation of \"Learning Lightweight Lane Detection CNNs by Self Attention Distillation (ICCV 2019)\""}
{"name": "sanster/pytorch-network-slimming", "full_name": "Sanster/pytorch-network-slimming", "topics": ["pytorch", "network-slimming", "pruning"], "description": "A package to make do Network Slimming a little easier"}
{"name": "e-tornike/story_generator", "full_name": "e-tornike/Story_Generator", "topics": ["machine-learning", "natural-language-processing", "streamlit", "huggingface-transformers", "gpt2"], "description": "A Streamlit web app that generates Rick and Morty stories using GPT2."}
{"name": "shuyanzhou/docprompting", "full_name": "shuyanzhou/docprompting", "topics": ["code-generation", "natural-language-processing", "reading-comprehension", "nl-to-code"], "description": "Data and code for \"DocPrompting: Generating Code by Retrieving the Docs\" @ICLR 2023"}
{"name": "young-geng/m3ae_public", "full_name": "young-geng/m3ae_public", "topics": ["computer-vision", "flax", "jax", "natural-language-processing", "transformers"], "description": "Multimodal Masked Autoencoders (M3AE): A JAX/Flax Implementation"}
{"name": "bioinfomachinelearning/deepinteract", "full_name": "BioinfoMachineLearning/DeepInteract", "topics": ["bioinformatics", "proteins", "transformers", "geometric-deep-learning", "graph-neural-networks", "protein-protein-interactions", "deep-learning", "machine-learning", "docker"], "description": "A geometric deep learning pipeline for predicting protein interface contacts."}
{"name": "chenfengye/sportscap", "full_name": "ChenFengYe/SportsCap", "topics": ["action-recognition", "dataset", "deep-learning", "motion-capture", "motion-prior", "ijcv2021", "sport", "sports-analytics", "sports-data"], "description": "The implementation for the SportsCap (IJCV 2021)"}
{"name": "kimythanly/again-vc", "full_name": "KimythAnly/AGAIN-VC", "topics": ["voice-conversion", "pytorch", "zero-shot", "one-shot", "any-to-any"], "description": "This is the official implementation of the paper AGAIN-VC: A One-shot Voice Conversion using Activation Guidance and Adaptive Instance Normalization."}
{"name": "albertfeng-0405/scenetransformer", "full_name": "Chen-Albert-FENG/SceneTransformer", "topics": ["pytorch"], "description": " [ICLR 2022] Unofficial implementation of SceneTransformer"}
{"name": "jiangweibeta/checkerboard-context-model-for-efficient-learned-image-compression", "full_name": "JiangWeibeta/Checkerboard-Context-Model-for-Efficient-Learned-Image-Compression", "topics": ["imagecompression", "imagecoding", "checkerboardcontext"], "description": "Unofficial pytorch implementation of CVPR2021 paper \"Checkerboard Context Model for Efficient Learned Image Compression\"."}
{"name": "justusthies/neuraltexgen", "full_name": "JustusThies/NeuralTexGen", "topics": ["texture-mapping", "pytorch", "optimization", "image-generation"], "description": "Image-space texture optimization of 3D meshes using PyTorch"}
{"name": "raymond-sci/pica", "full_name": "Raymond-sci/PICA", "topics": [], "description": "Official Pytorch Implementation for CVPR'20 paper: Deep Semantic Clustering by Partition Confidence Maximisation"}
{"name": "megvii-research/icd", "full_name": "MegEngine/ICD", "topics": ["object-detection", "pytorch", "megengine", "knowledge-distillation"], "description": "This is the official implementation of the paper \"Instance-conditional Knowledge Distillation for Object Detection\", based on MegEngine and Pytorch."}
{"name": "chenyaofo/ctnas", "full_name": "chenyaofo/CTNAS", "topics": ["neural-architecture-search", "deep-learning", "machine-learning"], "description": "[CVPR 2021] Contrastive Neural Architecture Search with Neural Architecture Comparators"}
{"name": "zomin28/resnet18_cifar10_95.46", "full_name": "ZOMIN28/ResNet18_Cifar10_95.46", "topics": [], "description": "Pytorch\u5b9e\u73b0\uff1a\u4f7f\u7528ResNet18\u7f51\u7edc\u8bad\u7ec3Cifar10\u6570\u636e\u96c6\uff0c\u6d4b\u8bd5\u96c6\u51c6\u786e\u7387\u8fbe\u523095.46%(\u4ece0\u5f00\u59cb\uff0c\u4e0d\u4f7f\u7528\u9884\u8bad\u7ec3\u6a21\u578b)"}
{"name": "timothyzero/medvision", "full_name": "TimothyZero/MedVision", "topics": ["pytorch", "cuda", "medical-image-detection", "medical-image-processing", "detection-3d"], "description": "Medical Image Vision Operators, such as RoIAlign, DCNv1, DCNv2 and NMS for both 2/3D images."}
{"name": "kpoeppel/pytorch_probgraph", "full_name": "kpoeppel/pytorch_probgraph", "topics": ["probabilistic-graphical-models", "pytorch", "restricted-boltzmann-machine", "deep-belief-network"], "description": "A Library for Modelling Probabilistic Hierarchical Graphical Models in PyTorch"}
{"name": "zzh-tech/dual-reversed-rs", "full_name": "zzh-tech/Dual-Reversed-RS", "topics": ["rolling-shutter-undistortion", "video-frame-interpolation", "eccv2022", "deep-learning", "rolling-shutter-cameras", "rolling-shutter-images", "temporal-super-resolution", "image-to-video"], "description": "[ECCV2022 Oral] Bringing Rolling Shutter Images Alive with Dual Reversed Distortion"}
{"name": "ife1er/smu_pytorch", "full_name": "iFe1er/SMU_pytorch", "topics": [], "description": "A Pytorch implementation of SMU: SMOOTH ACTIVATION FUNCTION FOR DEEP NETWORKS USING SMOOTHING MAXIMUM TECHNIQUE"}
{"name": "jind11/titlestylist", "full_name": "jind11/TitleStylist", "topics": ["natural-language-processing", "summarization", "transformer", "style-transfer", "pytorch-implementation"], "description": "Source code for our \"TitleStylist\" paper at ACL 2020"}
{"name": "pkchat-focus/focus", "full_name": "pkchat-focus/FoCus", "topics": ["nlp", "deep-learning", "dialog", "pytorch", "chatbots", "gpt2", "bart", "focus", "conversational-ai", "conversational-agents"], "description": "Source codes and dataset of Call for Customized Conversation: Customized Conversation Grounding Persona and Knowledge"}
{"name": "isl-org/adaptive-surface-reconstruction", "full_name": "isl-org/adaptive-surface-reconstruction", "topics": ["3d-reconstruction", "3d", "pointcloud", "tensorflow", "pytorch"], "description": "Adaptive Surface Reconstruction for 3D Data Processing"}
{"name": "liguge/1d-grad-cam-for-interpretable-intelligent-fault-diagnosis", "full_name": "liguge/1D-Grad-CAM-for-interpretable-intelligent-fault-diagnosis", "topics": ["deep-learning", "fault-diagnosis"], "description": "\u667a\u80fd\u6545\u969c\u8bca\u65ad\u4e2d\u4e00\u7ef4\u7c7b\u68af\u5ea6\u6fc0\u6d3b\u6620\u5c04\u53ef\u89c6\u5316\u5c55\u793a   1D-Grad-CAM for interpretable intelligent fault diagnosis"}
{"name": "moskomule/sam.pytorch", "full_name": "moskomule/sam.pytorch", "topics": ["sam", "pytorch", "optimizer"], "description": "A PyTorch implementation of Sharpness-Aware Minimization for Efficiently Improving Generalization"}
{"name": "sina-baharlou/depth-vrd", "full_name": "Sina-Baharlou/Depth-VRD", "topics": ["visual-relationship-detection", "scene-graph-generation", "depth-maps", "visual-genome", "vg-depth", "pytorch", "faster-rcnn", "computer-vision", "icpr-2020", "icpr2020", "scene-graphs", "scene-graph", "deep-learning", "predicate-classification", "scene-graph-classification"], "description": "Improving Visual Relation Detection using Depth Maps (ICPR 2020)"}
{"name": "dd-duda/labeltrack", "full_name": "DD-DuDa/LabelTrack", "topics": ["deep-learning", "mot", "python", "tools"], "description": "LabelTrack\u662f\u4e00\u4e2a\u9488\u5bf9\u4e8e\u591a\u76ee\u6807\u8ddf\u8e2a\u7684\u56fe\u5f62\u5316\u81ea\u52a8\u6807\u6ce8\u5e73\u53f0"}
{"name": "youngkyunjang/spq", "full_name": "youngkyunJang/SPQ", "topics": ["deep-learning", "pytorch", "representation-learning", "self-supervised-learning", "iccv2021", "product-quantization", "hashing"], "description": "Self-supervised Product Quantization for Deep Unsupervised Image Retrieval - ICCV2021"}
{"name": "disanda/mtv-tsa", "full_name": "disanda/DAE", "topics": ["gan-encoders", "stylegan-encoder", "biggan-encoder", "gan", "pytorch", "deep-learning"], "description": "GAN encoders in PyTorch that could match PGGAN, StyleGAN v1/v2,  and BigGAN.  Code also integrates the implementation of these GANs."}
{"name": "rehg-lab/clrec", "full_name": "rehg-lab/CLRec", "topics": ["continual-learning", "3d-reconstruction", "classification", "pytorch-implementation", "reconstruction", "incremental-learning", "convolutional-neural-networks"], "description": "Pytorch implementation for \"The Surprising Positive Knowledge Transfer in Continual 3D Object Shape Reconstruction\""}
{"name": "mrezaei92/trihorn-net", "full_name": "mrezaei92/TriHorn-Net", "topics": ["attention-mechanism", "computer-vision", "deep-learning", "hand-pose-estimation", "hand-pose", "human-computer-interaction", "keypoints"], "description": "Official PyTorch implementation of TriHorn-Net"}
{"name": "namepllet/handoccnet", "full_name": "namepllet/HandOccNet", "topics": [], "description": "Offical pytorch implementation of \"HandOccNet: Occlusion-Robust 3D Hand Mesh Estimation Network\", CVPR 2022."}
{"name": "wgcban/hypertransformer", "full_name": "wgcban/HyperTransformer", "topics": ["pansharpening", "super-resolution", "hyperspectral-imaging", "image-fusion", "deep-learning", "multispectral-images", "transformers", "attention-mechanism"], "description": "[CVPR'22] HyperTransformer: A Textural and Spectral Feature Fusion Transformer for Pansharpening"}
{"name": "lornatang/srcnn-pytorch", "full_name": "Lornatang/SRCNN-PyTorch", "topics": ["pytorch", "super-resolution", "deep-learning", "cnn"], "description": "Pytorch framework can easily implement srcnn algorithm with excellent performance"}
{"name": "janghunhyeon/pcloc", "full_name": "JanghunHyeon/PCLoc", "topics": ["visual-localization", "deep-learning", "indoor-localization", "iccv2021", "image-retrieval", "pose-estimation", "feature-matching"], "description": "Pose Correction for Highly Accurate Visual Localization in Large-scale Indoor Spaces (ICCV 2021)"}
{"name": "jergusadamec/ecg-deep-segmentation", "full_name": "jergusadamec/ecg-deep-segmentation", "topics": ["pytorch", "numpy", "pandas", "baseline-wander-removal", "matplotlib", "deep-learning", "ecg", "segmentation", "time-series", "lstm", "signal-processing"], "description": "Design and implementation of deep learning models trained for automated annotation of ecg signal with various preprocessing steps."}
{"name": "kdmayer/3d-pv-locator", "full_name": "kdmayer/3D-PV-Locator", "topics": ["neurips-2020", "solar", "renewable-energy", "pv-systems", "deepsolar", "computer-vision", "inception-v3", "deeplabv3", "network-planning", "solar-panels", "climate-change", "ai", "deep-learning", "remote-sensing", "satellite-imagery"], "description": "Repo for \"3D-PV-Locator: Large-scale detection of rooftop-mounted photovoltaic systems in 3D\" based on Applied Energy publication."}
{"name": "csteinmetz1/automix-toolkit", "full_name": "csteinmetz1/automix-toolkit", "topics": ["audio", "automatic-mixing", "deep-learning", "music"], "description": "Models and datasets for training deep learning automatic mixing models"}
{"name": "youshaamurhij/fmfnet", "full_name": "YoushaaMurhij/FMFNet", "topics": ["deep-learning", "object-detection", "pytorch", "tracking", "computer-vision"], "description": "Official Pytorch implementation for the paper: \"FMFNet: Improve the 3D Object Detection and Tracking via Feature Map Flow\" [IJCNN-2022] "}
{"name": "nicozwy/cofced", "full_name": "Nicozwy/CofCED", "topics": ["fake-news-detection", "explainable-fake-news-detection", "dataset", "deep-learning"], "description": "COLING 2022: A Coarse-to-fine Cascaded Evidence-Distillation Neural Network for Explainable Fake News Detection.    "}
{"name": "ccdv-ai/convert_checkpoint_to_lsg", "full_name": "ccdv-ai/convert_checkpoint_to_lsg", "topics": ["pytorch", "transformers", "deep-learning", "natural-language-processing", "nlp", "python", "seq2seq"], "description": "Efficient Attention for Long Sequence Processing"}
{"name": "stefanwebb/flowtorch-old", "full_name": "stefanwebb/flowtorch-old", "topics": ["normalizing-flows", "pytorch", "bayesian-inference", "bayesian-statistics", "probabilistic-graphical-models", "probabilistic-programming", "probabilistic-models"], "description": "Separating Normalizing Flows code from Pyro and improving API"}
{"name": "kkahatapitiya/coarse-fine-networks", "full_name": "kkahatapitiya/Coarse-Fine-Networks", "topics": ["activity-detection", "efficient-video-architectures", "pytorch"], "description": "Code for our CVPR 2021 paper \"Coarse-Fine Networks for Temporal Activity Detection in Videos\""}
{"name": "ai-in-motion/moai", "full_name": "ai-in-motion/moai", "topics": ["pytorch", "mdk", "deep-learning", "cnn", "computer-vision", "human-pose-estimation", "object-pose-estimation", "vae", "vae-pytorch", "depth-estimation", "reproducible-research", "reproducibility", "data-driven", "artificial-intelligence", "neural-network", "convolutional-neural-networks", "experimentation", "hydra"], "description": "moai is a PyTorch-based AI Model Development Kit (MDK) created to improve data-driven model workflows, design and reproducibility."}
{"name": "bdsaglam/torch-scae", "full_name": "bdsaglam/torch-scae", "topics": ["deep-learning", "capsule-network", "pytorch", "computer-vision"], "description": "PyTorch implementation of Stacked Capsule Auto-Encoders"}
{"name": "sailist/thexp", "full_name": "pytorch-lumo/lumo", "topics": ["pytorch", "deep-learning"], "description": "More light-weight pytorch experiment library!"}
{"name": "xijiz/cfgen", "full_name": "xijiz/cfgen", "topics": ["named-entity-recognition", "causality", "spurious-correlations", "natural-language-processing"], "description": "Implementation of the EMNLP 2020 paper \"Counterfactual Generator: A Weakly-Supervised Method for Named Entity Recognition\"."}
{"name": "plantnet/plantnet-300k", "full_name": "plantnet/PlantNet-300K", "topics": ["dataset", "deep-learning", "plants", "pytorch"], "description": "[NeurIPS2021] A plant image dataset with high label ambiguity and a long-tailed distribution"}
{"name": "nju-jet/sr_framework", "full_name": "NJU-Jet/SR_Framework", "topics": ["model-zoo", "latticenet", "imdn", "srfbn", "idn", "carn", "edsr", "drrn", "lapsrn", "drcn", "vdsr", "pytorch", "super-resolution"], "description": "A generic framework which implements some famouts super-resolution models"}
{"name": "azure/mlops-project-template", "full_name": "Azure/mlops-project-template", "topics": ["azure", "azuremachinelearning", "azureml", "deep-learning", "devops", "machine-learning", "microsoft", "mlops", "mlops-environment", "mlops-template", "mlops-workflow"], "description": "Azure MLOps (v2) solution accelerators. Enterprise ready templates to deploy your machine learning models on the Azure Platform. "}
{"name": "lotayou/cocosnet", "full_name": "Lotayou/CoCosNet", "topics": [], "description": "Pytorch Implementation of the paper [\"Cross-domain Correspondence Learning for Exemplar-based Image Translation\"](https://panzhang0212.github.io/CoCosNet)"}
{"name": "deepmind/dks", "full_name": "deepmind/dks", "topics": ["neural-networks", "machine-learning", "deep-learning", "jax", "pytorch", "tensorflow", "artificial-intelligence", "neural-tangent-kernel"], "description": "Multi-framework implementation of Deep Kernel Shaping and Tailored Activation Transformations, which are methods that modify neural network models (and their initializations) to make them easier to train."}
{"name": "junction4nako/mvp_pytorch", "full_name": "Junction4Nako/mvp_pytorch", "topics": [], "description": "pytorch implementation of mvp: a multi-stage vision-language pre-training framework"}
{"name": "githubharald/worddetectornn", "full_name": "githubharald/WordDetectorNN", "topics": ["handwriting", "detector", "deep-learning", "pytorch"], "description": "Detect handwritten words (neural network based)."}
{"name": "zyh-uaiaaaa/relative-uncertainty-learning", "full_name": "zyh-uaiaaaa/Relative-Uncertainty-Learning", "topics": ["facial-expression-recognition", "uncertainty-estimation", "label-noise-robustness", "pytorch", "deep-learning"], "description": "Relative Uncertainty Learning"}
{"name": "bubbliiiing/yolov7-tiny-pytorch", "full_name": "bubbliiiing/yolov7-tiny-pytorch", "topics": [], "description": "\u8fd9\u662f\u4e00\u4e2ayolov7-tiny-pytorch\u7684\u6e90\u7801\uff0c\u53ef\u4ee5\u7528\u4e8e\u8bad\u7ec3\u81ea\u5df1\u7684\u6a21\u578b\u3002"}
{"name": "xpixelgroup/rethinkvsralignment", "full_name": "XPixelGroup/RethinkVSRAlignment", "topics": ["pytorch", "super-resolution", "vision-transformer", "nips-2022"], "description": "(NIPS 2022) Rethinking Alignment in Video Super-Resolution Transformers"}
{"name": "alexfromapex/tensorexperiments", "full_name": "alexfromapex/tensorexperiments", "topics": ["gpu", "gpu-acceleration", "gpu-computing", "gpu-programming", "m1", "m1-mac", "python", "python3", "pytorch", "tensorflow", "tensorflow2"], "description": "Boilerplate for GPU-Accelerated TensorFlow and PyTorch code on M1 Macbook"}
{"name": "ryanxingql/powerqe", "full_name": "ryanxingql/powerqe", "topics": ["benchmark", "image-enhancement", "image-restoration", "deep-learning", "pytorch"], "description": "An unified framework of quality enhancement approaches for compressed images based on PyTorch."}
{"name": "zyh-uaiaaaa/erasing-attention-consistency", "full_name": "zyh-uaiaaaa/Erasing-Attention-Consistency", "topics": ["deep-learning", "facial-expression-recognition", "noisy-label-learning", "pytorch"], "description": "Official implementation of the ECCV2022 paper: Learn From All: Erasing Attention Consistency for Noisy Label Facial Expression Recognition"}
{"name": "borchero/natural-posterior-network", "full_name": "borchero/natural-posterior-network", "topics": ["machine-learning", "deep-learning", "uncertainty-estimation", "bayesian-deep-learning", "pytorch"], "description": "Official Implementation of \"Natural Posterior Network: Deep Bayesian Predictive Uncertainty for Exponential Family Distributions\" (ICLR, 2022)"}
{"name": "jhgan00/ko-sentence-transformers", "full_name": "jhgan00/ko-sentence-transformers", "topics": ["nlp", "bert", "natural-language-processing", "roberta"], "description": "\ud55c\uad6d\uc5b4 \uc0ac\uc804\ud559\uc2b5 \ubaa8\ub378\uc744 \ud65c\uc6a9\ud55c \ubb38\uc7a5 \uc784\ubca0\ub529"}
{"name": "netsharecmu/netshare", "full_name": "netsharecmu/NetShare", "topics": ["gan", "gans", "gans-models", "generative-adversarial-network", "netflow", "netflow-data", "netflow-v9", "pcap", "pcap-generator", "synthetic-data", "synthetic-data-generator", "synthetic-dataset-generation", "time-series", "differential-privacy", "differential-privacy-deep-learning", "privacy", "privacy-preserving", "synthetic-data-generation", "machine-learning", "tensorflow"], "description": "(SIGCOMM '22) Practical GAN-based Synthetic IP Header Trace Generation using NetShare"}
{"name": "srinidhipy/ssl_cr_histo", "full_name": "srinidhiPY/SSL_CR_Histo", "topics": ["self-supervised-learning", "digital-pathology", "camelyon16", "breastpathq", "teacher-student-training", "annotation-efficient", "semi-supervised-learning", "deep-learning", "histopathology"], "description": "Official code for \"Self-Supervised driven Consistency Training for Annotation Efficient Histopathology Image Analysis\" Published in Medical Image Analysis (MedIA) Journal, Oct, 2021."}
{"name": "densoitlab/teachaugment", "full_name": "DensoITLab/TeachAugment", "topics": ["cvpr2022", "pytorch", "classification", "deeplearning"], "description": "Official Implementation of TeachAugment: Data Augmentation Optimization Using Teacher Knowledge (CVPR2022, Oral)"}
{"name": "merantix-momentum/squirrel-datasets-core", "full_name": "merantix-momentum/squirrel-datasets-core", "topics": ["python", "npl", "data-science", "machine-learning", "natural-language-processing", "ai", "computer-vision", "deep-learning", "tensorflow", "cv", "ml", "collaboration", "pytorch", "distributed", "dataops", "cloud-computing", "datasets", "data-ingestion", "data-mesh"], "description": "Squirrel dataset hub"}
{"name": "zengqunzhao/ma-net", "full_name": "zengqunzhao/MA-Net", "topics": ["computer-vision", "facial-expression-recognition", "deep-learning", "pytorch"], "description": "\u201cLearning Deep Global Multi-scale and Local Attention Features for Facial Expression Recognition in the Wild\u201d, IEEE T-IP, 2021."}
{"name": "liuh127/ntire-2021-dehazing-dwgan", "full_name": "liuh127/NTIRE-2021-Dehazing-DWGAN", "topics": ["ntire2021", "cvpr2021", "dehazing", "cvpr", "ntire", "deep-learning"], "description": "Official PyTorch implementation of DW-GAN, 1st place solution of NTIRE 2021 NonHomogeneous Dehazing Challenge (CVPR Workshop 2021)."}
{"name": "lemonatsu/danbo-pytorch", "full_name": "LemonATsu/DANBO-pytorch", "topics": [], "description": "Pytorch implementation for DANBO: Disentangled Articulated Neural Body Representations via Graph Neural Networks"}
{"name": "asahi417/relbert", "full_name": "asahi417/relbert", "topics": ["nlp", "bert", "relation-extraction"], "description": "The official implementation of \"Distilling Relation Embeddings from Pre-trained Language Models, EMNLP 2021 main conference\", a high-quality relation embedding based on language models."}
{"name": "zchoi/s2-transformer", "full_name": "zchoi/S2-Transformer", "topics": ["ijcai2022", "image-captioning", "transformer", "vision-language", "pytorch"], "description": "[IJCAI 2022] Official Pytorch code for paper \u201cS2 Transformer for Image Captioning\u201d"}
{"name": "richardobi/medigan", "full_name": "RichardObi/medigan", "topics": ["medical", "generation", "gans", "toolbox", "python", "deep-learning", "machine-learning", "model", "computer-vision", "dataset", "endoscopy", "generative-adversarial-network", "generative-ai", "generative-model", "medical-image-analysis", "medical-image-dataset", "medical-imaging", "radiology", "synthesis", "synthetic-data"], "description": "medigan - A Python Library of Pretrained Generative Models for Medical Image Synthesis"}
{"name": "lucidrains/remixer-pytorch", "full_name": "lucidrains/remixer-pytorch", "topics": ["artificial-intelligence", "deep-learning", "transformers"], "description": "Implementation of the Remixer Block from the Remixer paper, in Pytorch"}
{"name": "jonathan-pearce/calibration_library", "full_name": "Jonathan-Pearce/calibration_library", "topics": ["calibration", "pytorch", "deep-learning", "visualization", "metrics", "recalibration"], "description": "Pytorch library for model calibration metrics and visualizations as well as recalibration methods. In progress!"}
{"name": "yjlee22/fedshare", "full_name": "yjlee22/FedShare", "topics": ["federated-learning", "pytorch", "optimization"], "description": "PyTorch implementation of Federated Learning with Non-IID Data, and federated learning algorithms, including FedAvg, FedProx."}
{"name": "fdbtrs/cr-fiqa", "full_name": "fdbtrs/CR-FIQA", "topics": ["face-image-quality-assessment", "biometrics", "face-recognition", "cr-fiqa", "pytorch"], "description": "Official repository for CR-FIQA: Face Image Quality Assessment by Learning Sample Relative Classifiability"}
{"name": "guangxinghan/meta-faster-r-cnn", "full_name": "GuangxingHan/Meta-Faster-R-CNN", "topics": ["attention", "few-shot-object-detection", "meta-learning"], "description": "Code for AAAI 2022 Oral paper: 'Meta Faster R-CNN: Towards Accurate Few-Shot Object Detection with Attentive Feature Alignment'"}
{"name": "dgedon/deepssm_sysid", "full_name": "dgedon/DeepSSM_SysID", "topics": ["neural-network", "vrnn", "pytorch", "identifiaction", "storn", "lstm", "vae"], "description": "Official PyTorch implementation of \"Deep State Space Models for Nonlinear System Identification\", 2020."}
{"name": "likenneth/mmgnn_textvqa", "full_name": "likenneth/mmgnn_textvqa", "topics": ["gnn", "vqa", "pytorch"], "description": "A Pytorch implementation of CVPR 2020 paper: Multi-Modal Graph Neural Network for Joint Reasoning on Vision and Scene Text"}
{"name": "haofanwang/cliff", "full_name": "haofanwang/CLIFF", "topics": ["3d-human-pose", "cliff", "smpl", "multi-person-pose-estimation", "pytorch", "human-pose-estimation", "pose-estimation"], "description": "This repo equips the official CLIFF [ECCV 2022 Oral] with better detector, better tracker. Support multi-person, motion interpolation, motion smooth and SMPLify fitting."}
{"name": "uta-smile/tvt", "full_name": "uta-smile/TVT", "topics": ["domain-adaptation", "transfer-learning", "vision-transformer", "vit", "pytorch"], "description": "Code of TVT: Transferable Vision Transformer for Unsupervised Domain Adaptation, WACV 2023"}
{"name": "khanld/asr-wav2vec-finetune", "full_name": "khanld/ASR-Wav2vec-Finetune", "topics": ["asr", "pytorch", "speech-recognition", "wav2vec2", "finetune-wav2vec", "huggingface", "speech-to-text", "vietnamese-speech-recognition"], "description": ":zap: Finetune Wa2vec 2.0 For Speech Recognition"}
{"name": "ferdinandzhong/punctuator", "full_name": "FerdinandZhong/punctuator", "topics": ["bert", "nlp", "seq2seq", "punctuation", "deep-learning", "pytorch", "bert-ner", "chinese-nlp"], "description": "A small seq2seq punctuator tool based on DistilBERT"}
{"name": "dreamip/strainnet", "full_name": "DreamIP/StrainNet", "topics": ["cnn", "digital-image-correlation", "speckle", "strain-fields", "subpixel", "displacement-fields", "dataset"], "description": "Subpixel displacement and strain fields estimation with deep learning"}
{"name": "tgxs002/wikiscenes", "full_name": "tgxs002/wikiscenes", "topics": ["computer-vision", "deep-learning"], "description": "Towers of Babel: Combining Images, Language, and 3D Geometry for Learning Multimodal Vision. ICCV 2021."}
{"name": "rishit-dagli/cppe-dataset", "full_name": "Rishit-dagli/CPPE-Dataset", "topics": ["machine-learning", "dataset", "vision", "computer-vision", "artificial-intelligence", "object-detection", "deep-learning", "pytorch", "tensorflow", "pretrained-models", "models", "data", "cppe5"], "description": "Code for our paper CPPE - 5 (Medical Personal Protective Equipment), a new challenging object detection dataset"}
{"name": "speediedan/finetuning-scheduler", "full_name": "speediedan/finetuning-scheduler", "topics": ["machine-learning", "transfer-learning", "finetuning", "fine-tuning", "pytorch-lightning", "pytorch", "artificial-intelligence", "neural-networks", "superglue"], "description": "A PyTorch Lightning extension that accelerates and enhances foundation model experimentation with flexible fine-tuning schedules."}
{"name": "cor-opt/superpolyak.py", "full_name": "COR-OPT/SuperPolyak.py", "topics": [], "description": "Pytorch implementation of SuperPolyak subgradient method. "}
{"name": "lingualytics/py-lingualytics", "full_name": "lingualytics/py-lingualytics", "topics": ["pytorch", "pytorch-nlp", "nlp-library", "bert", "nlp"], "description": "A text analytics library with support for codemixed data"}
{"name": "lucidrains/memformer", "full_name": "lucidrains/memformer", "topics": ["artificial-intelligence", "transformers", "attention-mechanism", "memory"], "description": "Implementation of Memformer, a Memory-augmented Transformer, in Pytorch"}
{"name": "lkevinzc/dance", "full_name": "lkevinzc/dance", "topics": ["coco", "instance-segmentation", "deep-learning", "computer-vision", "pytorch", "wacv2021"], "description": "Code for \"DANCE: A Deep Attentive Contour Model for Efficient Instance Segmentation\", WACV2021"}
{"name": "peihaochen/rspnet", "full_name": "PeihaoChen/RSPNet", "topics": [], "description": "Official Pytorch implementation for AAAI2021 paper (RSPNet: Relative Speed Perception for Unsupervised Video Representation Learning)"}
{"name": "chen-mingchang/pytorch_yolo_openvino_demo", "full_name": "Chen-MingChang/pytorch_YOLO_OpenVINO_demo", "topics": ["yolov3", "yolov4-pytorch", "yolov5", "yolov4", "onnx", "pytorch", "scaledyolov4", "object-detection", "openvino", "openvino-toolkit"], "description": null}
{"name": "tnbar/tednet", "full_name": "tnbar/tednet", "topics": ["tensor-decomposition", "pytorch", "deep-neural-networks", "artificial-intelligence"], "description": "TedNet: A Pytorch Toolkit for Tensor Decomposition Networks"}
{"name": "jiwidi/las-pytorch", "full_name": "jiwidi/las-pytorch", "topics": ["pytorch", "las", "e2e", "asr", "listen-attend-and-spell"], "description": "Listen, Attend and spell model for E2E ASR. Implementation in Pytorch"}
{"name": "yueyu1030/sumgnn", "full_name": "yueyu1030/SumGNN", "topics": ["drug-drug-interaction", "gnn", "graph-neural-networks", "drug-discovery", "subgraph", "knowledge-graph", "biomedical-knowledge-graph", "bioinformatics", "drugbank", "biosnap", "twosides"], "description": "[Bioinformatics 2021] This is the repo for the paper `SumGNN: Multi-typed Drug Interaction Prediction via Efficient Knowledge Graph Summarization'. "}
{"name": "hengyicai/contrastivelearning4dialogue", "full_name": "hengyicai/ContrastiveLearning4Dialogue", "topics": ["dialog", "pytorch", "parlai", "conversational-ai", "contrastive-learning"], "description": "The codebase for \"Group-wise Contrastive Learning for Neural Dialogue Generation\" (Cai et al., Findings of EMNLP 2020)"}
{"name": "human-analysis/muxconv", "full_name": "human-analysis/MUXConv", "topics": [], "description": "MUXConv: Information Multiplexing in Convolutional Neural Networks (CVPR '20), Pytorch Implementation"}
{"name": "guopengf/fl-mrcm", "full_name": "guopengf/FL-MRCM", "topics": ["deep-learning", "pytorch", "federated-learning"], "description": "Multi-institutional Collaborations for Improving Deep Learning-based Magnetic Resonance Image Reconstruction Using Federated Learning"}
{"name": "midasklr/ssd.pytorch", "full_name": "midasklr/SSD.Pytorch", "topics": [], "description": "Pytorch implementation of SSD512"}
{"name": "vibashan/image-fusion-transformer", "full_name": "Vibashan/Image-Fusion-Transformer", "topics": [], "description": "Official Pytorch Code base for  Image-Fusion-Transformer"}
{"name": "appleholic/multiband_melgan", "full_name": "AppleHolic/multiband_melgan", "topics": ["multiband-melgan", "pytorch", "audio", "neural-vocoder"], "description": "An unofficial implementation of https://arxiv.org/abs/2005.05106"}
{"name": "perrying/pytorch-consistency-regularization", "full_name": "perrying/pytorch-consistency-regularization", "topics": ["pytorch", "python", "semi-supervised", "semi-supervised-learning", "fixmatch"], "description": "PyTorch implementation of consistency regularization methods for semi-supervised learning"}
{"name": "ku21fan/str-fewer-labels", "full_name": "ku21fan/STR-Fewer-Labels", "topics": ["ocr", "deep-learning", "scene-text-recognition", "cvpr2021", "text-recognition", "real-datasets", "semi-supervised-learning", "self-supervised-learning", "synthetic-data"], "description": "Scene Text Recognition (STR) methods trained with fewer real labels (CVPR 2021)"}
{"name": "devolearn/devolearn", "full_name": "DevoLearn/devolearn", "topics": ["deep-learning", "biological-data-analysis", "pytorch", "opencv", "image-segmentaion"], "description": "Accelerate data driven research on  embryos with deep learning models :microscope:"}
{"name": "showlab/region_learner", "full_name": "showlab/Region_Learner", "topics": ["video-language"], "description": "The Pytorch implementation for \"Video-Text Pre-training with Learned Regions\""}
{"name": "csdongxian/anp_backdoor", "full_name": "csdongxian/ANP_backdoor", "topics": ["neurips-2021", "deep-learning", "pytorch", "backdoor-defense", "backdoor-attacks"], "description": "Codes for NeurIPS 2021 paper \"Adversarial Neuron Pruning Purifies Backdoored Deep Models\""}
{"name": "renovamen/text-classification", "full_name": "Renovamen/Text-Classification", "topics": ["text-classification", "han", "nlp", "hierarchical-attention-networks", "fasttext", "bilstm-attention", "textcnn", "lstm", "cnn", "document-classification", "transformer"], "description": "PyTorch implementation of some text classification models (HAN, fastText, BiLSTM-Attention, TextCNN, Transformer) | \u6587\u672c\u5206\u7c7b"}
{"name": "megvii-research/ssql-eccv2022", "full_name": "megvii-research/SSQL-ECCV2022", "topics": ["deep-learning", "pytorch", "quantization", "self-supervised-learning"], "description": "PyTorch implementation of SSQL (Accepted to ECCV2022 oral presentation)"}
{"name": "pd0wm/nn-morse", "full_name": "pd0wm/nn-morse", "topics": ["morse", "morse-code", "neural-network", "pytorch", "lstm"], "description": "Decode morse using a neural network"}
{"name": "humancompatibleai/eirli", "full_name": "HumanCompatibleAI/eirli", "topics": ["machine-learning", "imitation-learning", "representation-learning", "pytorch", "self-supervised-learning"], "description": "An Empirical Investigation of Representation Learning for Imitation (EIRLI), NeurIPS'21"}
{"name": "monniert/dti-sprites", "full_name": "monniert/dti-sprites", "topics": ["deep-learning", "unsupervised", "unsupervised-learning", "sprites", "image-decomposition", "multi-object", "computer-vision", "pytorch", "iccv2021"], "description": "(ICCV 2021) Code for \"Unsupervised Layered Image Decomposition into Object Prototypes\" paper"}
{"name": "mahdihosseini/rmsgd", "full_name": "mahdihosseini/RMSGD", "topics": ["pytorch", "deep-learning", "stochastic-gradient-descent", "convolutional-neural-networks"], "description": "Exploiting Explainable Metrics for Augmented SGD [CVPR2022]"}
{"name": "hunto/reloss", "full_name": "hunto/ReLoss", "topics": ["reloss", "loss", "iclr2022", "pytorch", "surrogate-loss", "surrogate"], "description": "Official implementation for paper \"Relational Surrogate Loss Learning\", ICLR 2022"}
{"name": "kssteven418/ltp", "full_name": "kssteven418/LTP", "topics": ["natural-language-processing", "transformer", "bert", "pruning", "model-compression", "efficient-model", "efficient-neural-networks"], "description": "[KDD'22] Learned Token Pruning for Transformers "}
{"name": "lightas/cvpr2020_manet", "full_name": "lightas/CVPR2020_MANet", "topics": [], "description": " This is the pytorch implementation of the CVPR2020 paper \"Memory aggregation networks for efficient interactive video object segmentation\"."}
{"name": "nengo/pytorch-spiking", "full_name": "nengo/pytorch-spiking", "topics": ["pytorch", "python", "deep-learning", "spiking-neural-networks"], "description": "Spiking neuron integration for PyTorch"}
{"name": "arwin-yu/deep-learning-image-classification-models-based-cnn-or-attention", "full_name": "Arwin-Yu/Deep-Learning-Image-Classification-Models-Based-CNN-or-Attention", "topics": ["attention-mechanism", "convolutional-neural-networks", "deep-learning", "image-classification", "pytorch"], "description": "This project organizes classic images classification neural networks based on convolution or attention, and writes training and inference python scripts "}
{"name": "gusb3ll/tsuki", "full_name": "Gusb3ll/Tsuki", "topics": ["python", "tensorflow", "pytorch", "deepcreampy", "hent-ai", "anime", "decensoring"], "description": "Manga uncensoring scripts using DeepCreamPy & HentAI combined with custom scripts"}
{"name": "pluslabnlp/geanet-biomed-event-extraction", "full_name": "PlusLabNLP/GEANet-BioMed-Event-Extraction", "topics": ["event-extraction", "biomedical", "covid-19", "cord-19", "natural-language-processing", "bert", "multitask-learning", "deep-learning"], "description": "Code for the paper Biomedical Event Extraction with Hierarchical Knowledge Graphs"}
{"name": "mbchang/decentralized-rl", "full_name": "mbchang/decentralized-rl", "topics": ["mechanism-design", "machine-learning", "deep-reinforcement-learning", "pytorch", "artificial-intelligence", "deep-learning"], "description": "Decentralized Reinforcment Learning: Global Decision-Making via Local Economic Transactions (ICML 2020)"}
{"name": "paritybit-ai/xfl", "full_name": "paritybit-ai/XFL", "topics": ["federated-learning", "machine-learning", "python", "federated-learning-framework", "paritybit", "paritybit-ai", "deep-learning"], "description": "An Efficient and Easy-to-use Federated Learning Framework."}
{"name": "shahules786/twitter-emotions", "full_name": "shahules786/twitter-emotions", "topics": ["sentiment", "pytorch", "extraction", "huggingface", "nlp", "docker"], "description": "NLP tool to extract emotional phrase from tweets \ud83e\udd29"}
{"name": "serkansulun/midi-emotion", "full_name": "serkansulun/midi-emotion", "topics": ["midi", "music-generation", "deep-learning", "emotion", "symbolic-music", "valence-arousal"], "description": "Generates multi-instrument symbolic music (MIDI), based on user-provided emotions from valence-arousal plane."}
{"name": "ycjungsubhuman/deepdeformable3dcaricatures", "full_name": "ycjungSubhuman/DeepDeformable3DCaricatures", "topics": ["deep-learning", "pytorch"], "description": "[SIGGRAPH 2022] Official code for \"Deep Deformable 3D Caricatures with Learned Shape Control\""}
{"name": "imed-lab/cs-net", "full_name": "iMED-Lab/CS-Net", "topics": ["deep-learning", "pytorch", "segmentation", "medical-imaging"], "description": "CS-Net (MICCAI 2019) and CS2-Net (MedIA 2020)"}
{"name": "cheggan/metaaudio-a-few-shot-audio-classification-benchmark", "full_name": "CHeggan/MetaAudio-A-Few-Shot-Audio-Classification-Benchmark", "topics": ["few-shot", "acoustics", "deep-learning", "pytorch", "python", "meta-learning"], "description": "A new comprehensive and diverse few-shot acoustic classification benchmark. "}
{"name": "jaketae/ensemble-transformers", "full_name": "jaketae/ensemble-transformers", "topics": ["python", "nlp", "machine-learning", "natural-language-processing", "deep-learning", "pytorch", "transformer"], "description": "Ensembling Hugging Face transformers made easy"}
{"name": "sara-nl/attention-sampling-pytorch", "full_name": "sara-nl/attention-sampling-pytorch", "topics": ["machine-learning", "artificial-intelligence", "attention-sampling", "pytorch", "pytorch-implementation"], "description": "This is a PyTorch implementation of the paper: \"Processing Megapixel Images with Deep Attention-Sampling Models\". "}
{"name": "yamonc/new-pytorch-chinese", "full_name": "yamonc/New-Pytorch-Chinese", "topics": [], "description": "\u4e2d\u6587\u6587\u672c\u6458\u8981\uff0c\u57fa\u4e8epytorch\uff0c\u91c7\u7528LCSTS\u6570\u636e\u96c6"}
{"name": "huggingface/optimum-graphcore", "full_name": "huggingface/optimum-graphcore", "topics": ["machine-learning", "pytorch", "training", "transformers", "graphcore", "fine-tuning"], "description": "Blazing fast training of \ud83e\udd17 Transformers on Graphcore IPUs"}
{"name": "indobenchmark/indonlg", "full_name": "IndoNLP/indonlg", "topics": ["dataset", "nlp", "indonlg", "natural-language-processing", "deep-learning", "bart", "gpt", "gpt2", "summarization", "benchmark", "qa", "chit-chat", "dialogue-system", "indonesian", "bahasa", "sundanese", "javanese"], "description": "The first-ever vast natural language generation benchmark for Indonesian, Sundanese, and Javanese. We provide multiple downstream tasks, pre-trained IndoGPT and IndoBART models, and a starter code! (EMNLP 2021)"}
{"name": "wkentaro/safepicking", "full_name": "wkentaro/safepicking", "topics": ["robotics", "computer-vision", "reinforcement-learning", "ros", "deep-learning", "machine-learning", "artificial-intelligence"], "description": "SafePicking: Learning Safe Object Extraction via Object-Level Mapping, ICRA 2022"}
{"name": "arsenyinfo/hookandlook", "full_name": "arsenyinfo/hookandlook", "topics": [], "description": "A library helping to gather stats and run checks during training deep learning models with Pytorch"}
{"name": "kimdanny/user-simulation-t5", "full_name": "kimdanny/user-simulation-t5", "topics": ["nlp", "pytorch", "t5", "task-oriented-dialogue", "user-simulation", "sigir2022", "user-satisfaction", "utterance-generation"], "description": "Official Code for SIGIR 2022 \"A Multi-task Based Neural Model to Simulate Users in Goal Oriented Dialogue Systems\". User Simulator generates user-side utterance, predicts user's next action and satisfaction level."}
{"name": "adamdad/knowledgefactor", "full_name": "Adamdad/KnowledgeFactor", "topics": ["knowledge-transfer", "pytorch", "knowldge-distillation", "eccv2022", "multitask-learning", "deep-learning", "kd", "distillation"], "description": "[ECCV2022] Factorizing Knowledge in Neural Networks"}
{"name": "dy112/lsmi-dataset", "full_name": "DY112/LSMI-dataset", "topics": ["whitebalance", "low-level-photography", "illumination", "illumination-estimation", "pytorch"], "description": "Large Scale Multi-Illuminant (LSMI) Dataset for Developing White Balance Algorithm under Mixed Illumination"}
{"name": "szzexpoi/air", "full_name": "szzexpoi/AiR", "topics": ["saliency-maps", "attention-supervision", "attention", "machine-attention"], "description": "Official Repository for ECCV 2020 paper \"AiR: Attention with Reasoning Capability\""}
{"name": "audioku/meta-transfer-learning", "full_name": "audioku/meta-transfer-learning", "topics": ["meta-learning", "speech", "speech-recognition", "asr", "code-switching", "multi-lingual", "language", "language-model", "neural-network", "transformer", "pytorch", "meta-transfer-learning", "mixed-language", "acl"], "description": "Implementation of meta-transfer-learning for ASR and LM (ACL 2020)"}
{"name": "cv-zmh/human-action-recognition", "full_name": "CV-ZMH/human-action-recognition", "topics": ["pose-estimation", "human-activity-recognition", "deepsort", "action-classifier", "deep-learning", "tracking"], "description": "Multi Person Skeleton Based Action Recognition and Tracking"}
{"name": "juniorrojas/hookean-springs-pytorch", "full_name": "juniorrojas/hookean-springs-pytorch", "topics": ["pytorch", "physics-simulation", "simulation"], "description": "Hookean springs in PyTorch"}
{"name": "chenjun2hao/ddrnet.pytorch", "full_name": "chenjun2hao/DDRNet.pytorch", "topics": ["ddrnet", "pytorch", "real-time", "segmentation", "semantic-segmentation"], "description": "This is the unofficial code of  Deep Dual-resolution Networks for Real-time and Accurate Semantic Segmentation of Road Scenes. which achieve state-of-the-art trade-off between accuracy and speed on cityscapes and camvid, without using inference acceleration and extra data"}
{"name": "abe404/root_painter", "full_name": "Abe404/root_painter", "topics": ["biological-images", "root", "painter", "segmentation", "deep-learning", "interactive-training", "interactive-segmentation", "root-painter", "gui", "human-in-the-loop", "human-in-the-loop-machine-learning", "interactive-machine-learning", "pytorch", "machine-teaching"], "description": "RootPainter: Deep Learning Segmentation of Biological Images with Corrective Annotation"}
{"name": "xuarehere/yolovx_deepsort_pytorch", "full_name": "xuarehere/yolo_series_deepsort_pytorch", "topics": ["pytorch", "sort", "yolo", "yolov3", "yolov4", "yolov4-deepsort", "yolov5", "yolov5-deepsort", "yolov5-deepsort-pytorch", "yolov6", "yolov7", "yolov6-deepsort", "yolov7-deepsort", "deepsort", "deep-sort", "deep-sort-tracking", "mot-tracking", "object-tracking", "mot", "yolov8-deepsort"], "description": "Deepsort with yolo series. This project support the existing yolo detection model algorithm (YOLOV8,  YOLOV7,  YOLOV6,  YOLOV5,  YOLOV4Scaled,  YOLOV4, YOLOv3', PPYOLOE,  YOLOR,  YOLOX )."}
{"name": "mathlab/pina", "full_name": "mathLab/PINA", "topics": ["physics-informed-neural-networks", "modeling", "machine-learning", "deep-learning", "python", "pytorch", "differential-equations", "neural-network", "ode", "pde", "physics-informed", "hacktoberfest"], "description": "Physics-Informed Neural networks for Advanced modeling"}
{"name": "fuenwang/bifusev2", "full_name": "fuenwang/BiFusev2", "topics": ["360", "deep-learning", "depth-estimation", "equirectangular", "panorama", "pytorch", "pytorch-lightning"], "description": "BiFuse++: Self-supervised and Efficient Bi-projection Fusion for 360 Depth Estimation"}
{"name": "kmeng01/memit", "full_name": "kmeng01/memit", "topics": ["gpt", "transformer", "editing", "pytorch"], "description": "Mass-editing thousands of facts into a transformer memory (ICLR 2023)"}
{"name": "yuk6heo/gis-ramap", "full_name": "yuk6heo/GIS-RAmap", "topics": ["video-object-segmentation"], "description": "Pytorch implementation of CVPR2021 oral paper (best paper candidate), \"Guided Interactive Video Object Segmentation Using Reliability-Based Attention Maps\""}
{"name": "siyuhuang/tod", "full_name": "siyuhuang/TOD", "topics": ["pytorch", "active-learning", "loss-estimation"], "description": "PyTorch Implementation of Temporal Output Discrepancy for Active Learning, ICCV 2021"}
{"name": "lusinlu/bias-loss-skipblocknet", "full_name": "lusinlu/bias-loss-skipblocknet", "topics": ["deep-learning", "loss-functions", "mobilenet", "mobile-networks", "machine-learning", "objective-functions", "pytorch", "pytorch-implementation"], "description": "[ICCV 2021]Code for the the bias loss and evaluation of SkipblockNet model on ImageNet validation set"}
{"name": "fernandolpz/text-classification-lstms-pytorch", "full_name": "FernandoLpz/Text-Classification-LSTMs-PyTorch", "topics": ["pytorch", "pytorch-nlp", "text-classification", "lstm", "lstm-model", "tweets", "baseline", "tensorflow", "keras", "tokenizer", "tonkens", "classification", "text-mining", "text-processing", "pytorch-tutorial", "pytorch-implementation"], "description": "The aim of this repository is to show a baseline model for text classification by implementing a LSTM-based model coded in PyTorch. In order to provide a better understanding of the model, it will be used a Tweets dataset provided by Kaggle."}
{"name": "westlake-ai/moganet", "full_name": "Westlake-AI/MogaNet", "topics": ["convolutional-neural-networks", "imagenet", "pytorch", "vision-transformer", "image-classification", "object-detection", "pose-estimation", "segmentation", "instance-segmentation", "video-prediction"], "description": "Code release for MogaNet: Efficient Multi-order Gated Aggregation Network"}
{"name": "m-mandel/aero", "full_name": "slp-rl/aero", "topics": ["audio", "audio-processing", "machine-learning", "audio-super-resolution", "pytorch", "bandwidth-extension", "speech-synthesis"], "description": "Audio Super Resolution in the Spectral Domain"}
{"name": "cyang0515/pytorch_ssn", "full_name": "CYang0515/pytorch_ssn", "topics": [], "description": "A pytorch version of SSN"}
{"name": "g8a9/ear", "full_name": "g8a9/ear", "topics": ["nlp", "bert-model", "regularization", "attention", "attention-mechanism"], "description": "Code associated with the paper \"Entropy-based Attention Regularization Frees Unintended Bias Mitigation from Lists\""}
{"name": "jinyeying/fogremoval", "full_name": "jinyeying/FogRemoval", "topics": ["deep-learning", "defog", "defogging", "dehaze", "dehazing", "smoke", "dense"], "description": "[ACCV22] Structure Representation Network and Uncertainty Feedback Learning for Dense Non-Uniform Fog Removal, https://arxiv.org/abs/2210.03061"}
{"name": "lucidrains/perceiver-ar-pytorch", "full_name": "lucidrains/perceiver-ar-pytorch", "topics": ["artficial-intelligence", "attention-mechanism", "deep-learning", "transformer", "long-context"], "description": "Implementation of Perceiver AR, Deepmind's new long-context attention network based on Perceiver architecture, in Pytorch"}
{"name": "noelshin/reco", "full_name": "NoelShin/reco", "topics": ["deep-learning", "pytorch", "semantic-segmentation"], "description": "[NeurIPS'22] ReCo: Retrieve and Co-segment for Zero-shot Transfer"}
{"name": "lxc86739795/vehicle_reid_by_parsing", "full_name": "lxc86739795/vehicle_reid_by_parsing", "topics": ["vehicle", "reid", "parsing", "pytorch", "vehicle-reid", "veri776", "veri-wild", "aicity"], "description": "This repo gives the code for the paper \"Xinchen Liu, Wu Liu, Jinkai Zheng, Chenggang Yan, Tao Mei: Beyond the Parts: Learning Multi-view Cross-part Correlation for Vehicle Re-identification. ACM MM 2020\"."}
{"name": "synsense/sinabs", "full_name": "synsense/sinabs", "topics": ["spiking-neural-networks", "machine-learning", "pytorch", "snn"], "description": "A deep learning library for spiking neural networks which is based on PyTorch, focuses on fast training and supports inference on neuromorphic hardware."}
{"name": "vipulraheja/iterater", "full_name": "vipulraheja/iterater", "topics": ["nlp", "natural-language-processing", "transformers", "transformer", "bert", "pegasus", "roberta", "text-editing", "iterative-text-editing", "iterative-text-revision", "text-revision", "writing-assistant", "writing-systems", "bart"], "description": "Official implementation of the paper \"IteraTeR: Understanding Iterative Revision from Human-Written Text\" (ACL 2022)"}
{"name": "lucidrains/panoptic-transformer", "full_name": "lucidrains/panoptic-transformer", "topics": ["artificial-intelligence", "deep-learning", "attention-mechanism"], "description": "Another attempt at a long-context / efficient transformer by me"}
{"name": "egyptdj/stagin", "full_name": "egyptdj/stagin", "topics": ["neuroimaging", "connectome", "fmri", "graph-neural-network", "gnn", "attention", "explainability", "stagin", "neurips", "neurips2021"], "description": "STAGIN: Spatio-Temporal Attention Graph Isomorphism Network"}
{"name": "m3dv/alignshift", "full_name": "M3DV/AlignShift", "topics": ["deeplesion", "miccai", "deep-learning", "3d-anisotropic-volumes", "imaging-thickness"], "description": "[MICCAI'21] A3D + [MICCAI'20] AlignShift: A Codebase for Universal Lesion Detection (DeepLesion)"}
{"name": "bm-k/kominilm", "full_name": "BM-K/KoMiniLM", "topics": ["distillation", "language-model", "natural-language-processing"], "description": "Korean Light Weight Language Model"}
{"name": "eubinecto/the-clean-rnns", "full_name": "eubinecto/the-clean-rnns", "topics": ["nlp", "rnn", "lstm", "bilstm", "pytorch", "wandb", "pytorch-lightning"], "description": "A clean and structured implementation of the RNN family with wandb and pytorch-lightning"}
{"name": "homebrewnlp/olmax", "full_name": "HomebrewNLP/Olmax", "topics": ["jax", "tpu", "attention", "transformer", "gpt", "hpc"], "description": "HomebrewNLP in JAX flavour for maintable TPU-Training"}
{"name": "doublez0108/mvs", "full_name": "doubleZ0108/MVS", "topics": ["mvs", "multi-view-stereo", "3d-reconstruction", "deep-learning"], "description": "Multi-View Stereo based on deep learning. | Learning notes, codes and more."}
{"name": "guolanqing/rellie", "full_name": "GuoLanqing/ReLLIE", "topics": [], "description": "ReLLIE  (ACMMM2021), Pytorch implementation"}
{"name": "orion-ai-lab/hephaestus", "full_name": "Orion-AI-Lab/Hephaestus", "topics": ["computer-vision", "dataset", "machine-learning", "synthetic-aperture-radar", "deep-learning", "insar", "remote-sensing"], "description": "Hephaestus: A large scale multitask dataset towards InSAR understanding"}
{"name": "sunnygjing/t5-pegasus-chinese", "full_name": "SunnyGJing/t5-pegasus-chinese", "topics": ["chinese", "text-generation", "summarization-generation", "coreference-resolution", "pytorch"], "description": "\u57fa\u4e8eGOOGLE T5\u4e2d\u6587\u751f\u6210\u5f0f\u6a21\u578b\u7684\u6458\u8981\u751f\u6210/\u6307\u4ee3\u6d88\u89e3\uff0c\u652f\u6301batch\u6279\u91cf\u751f\u6210\uff0c\u591a\u8fdb\u7a0b"}
{"name": "shjo-april/recurseed_and_edgepredictmix", "full_name": "shjo-april/RecurSeed_and_EdgePredictMix", "topics": ["deep-learning", "pytorch", "semantic-segmentation"], "description": "[Under Review] RecurSeed and EdgePredictMix: Single-stage learning is sufficient for Weakly-Supervised Semantic Segmentation"}
{"name": "archinetai/smart-pytorch", "full_name": "archinetai/smart-pytorch", "topics": ["deep-learning", "artificial-intelligence", "fine-tuning"], "description": "PyTorch \u2013 SMART: Robust and Efficient Fine-Tuning for Pre-trained Natural Language Models."}
{"name": "lvyufeng/bert4ms", "full_name": "lvyufeng/Cybertron", "topics": ["bert", "transformers", "mindspore", "nlp", "python", "machine-learning", "natural-language-processing", "deep-learning", "pretrained-models", "language-models", "mindspore-transformers", "model-hub", "modelzoo"], "description": "mindspore implementation of transformers"}
{"name": "binitai/betterloader", "full_name": "BinItAI/BetterLoader", "topics": ["pytorch-dataloader", "pytorch", "torch", "torchvision", "deep-learning", "pytorch-implmention", "pytorch-dataloader-objects", "pytorch-transformers"], "description": "A better PyTorch data loader capable of custom image operations and image subsets"}
{"name": "mmsir/gainedvae", "full_name": "mmSir/GainedVAE", "topics": ["compression"], "description": "A Pytorch Implementation of a continuously rate adjustable learned image compression framework."}
{"name": "dongkwonjin/semantic-line-drm", "full_name": "dongkwonjin/Semantic-Line-DRM", "topics": ["semantic-line-detection", "pytorch", "dominant-parallel-lines-detection", "reflection-symmetry-axes-detection", "line-detection", "object-detection"], "description": "Official code for \"Semantic Line Detection Using Mirror Attention and Comparative Ranking and Matching\", ECCV 2020"}
{"name": "mynlp/pnmt", "full_name": "mynlp/pnmt", "topics": ["framework", "machine-learning", "nlp", "translation"], "description": "Pre-train support for OpenNMT (PNMT)"}
{"name": "mlvlab/tokenmixup", "full_name": "mlvlab/TokenMixup", "topics": ["neurips-2022", "mixup", "vision-transformer"], "description": "Official pytorch implementation of NeurIPS 2022 paper, TokenMixup"}
{"name": "noelshin/selfmask", "full_name": "NoelShin/selfmask", "topics": ["deep-learning", "pytorch"], "description": "[CVPRW'22] Unsupervised Salient Object Detection With Spectral Cluster Voting"}
{"name": "indonesian-nlp/multilingual-asr", "full_name": "indonesian-nlp/multilingual-asr", "topics": ["speech-recognition", "asr", "nlp", "indonesian", "machine-learning"], "description": "Multilingual Speech Recognition for Indonesian Languages"}
{"name": "xrenaa/safety-aware-motion-prediction", "full_name": "xrenaa/Safety-Aware-Motion-Prediction", "topics": ["autonomous-driving", "motion-prediction", "deep-learning"], "description": "[ICCV2021] Safety-aware Motion Prediction with Unseen Vehicles for Autonomous Driving"}
{"name": "hitcszx/lnl_sr", "full_name": "hitcszx/lnl_sr", "topics": ["pytorch", "iccv2021"], "description": "Learning with Noisy Labels via Sparse Regularization, ICCV2021"}
{"name": "oliverguhr/german-sentiment-lib", "full_name": "oliverguhr/german-sentiment-lib", "topics": ["bert-model", "german", "sentiment-analysis", "sentiment-classification", "python-library", "machine-learning", "deep-learning"], "description": "An easy to use python package for deep learning-based german sentiment classification."}
{"name": "bupt-ai-cz/llvip", "full_name": "bupt-ai-cz/LLVIP", "topics": ["computer-vision", "visible-infrared", "low-light-image", "image-fusion", "object-detection", "cnn", "gan", "deep-learning", "low-light-vision", "image-to-image-translation", "iccv2021"], "description": "LLVIP: A Visible-infrared Paired Dataset for Low-light Vision"}
{"name": "lemuria-wchen/dialogved", "full_name": "lemuria-wchen/DialogVED", "topics": ["dialogue-generation", "latent-variable-models", "pretrained-model", "pytorch"], "description": "Code and released pre-trained model for our ACL 2022 paper: \"DialogVED: A Pre-trained Latent Variable Encoder-Decoder Model for Dialog Response Generation\""}
{"name": "ganjinzero/coder", "full_name": "GanjinZero/CODER", "topics": ["nlp", "medical", "pretrained-language-model", "umls", "multi-language", "embeddings"], "description": "CODER: Knowledge infused cross-lingual medical term embedding for term normalization. [JBI, ACL-BioNLP 2022]"}
{"name": "lucidrains/logavgexp-torch", "full_name": "lucidrains/logavgexp-torch", "topics": ["pytorch", "logsumexp"], "description": "Implementation of LogAvgExp for Pytorch"}
{"name": "wqt2019/tacotron-2_wavernn", "full_name": "wqt2019/tacotron-2_wavernn", "topics": [], "description": "tacotron-2(tensorflow) + wavernn(pytorch) chinese TTS"}
{"name": "p-ranav/merged_depth", "full_name": "p-ranav/merged_depth", "topics": ["depth-prediction", "neural-networks", "pytorch", "python3", "torch", "torchvision", "image-processing", "prediction", "average", "mit-license", "open-source", "academic", "depth-estimation", "camera", "youtube", "images", "average-calculator", "machine-learning", "deep-learning"], "description": "Monocular Depth Estimation - Weighted-average prediction from multiple pre-trained depth estimation models"}
{"name": "storymy/take-off-eyeglasses", "full_name": "StoryMY/take-off-eyeglasses", "topics": [], "description": "Official pytorch implementation of paper \"Portrait Eyeglasses and Shadow Removal by Leveraging 3D Synthetic Data\" (CVPR 2022)."}
{"name": "facebookresearch/safetorch", "full_name": "facebookresearch/SAFEtorch", "topics": [], "description": "pytorch version of the SAFE neural network"}
{"name": "chiehpower/setup-deeplearning-tools", "full_name": "chiehpower/Setup-deeplearning-tools", "topics": ["tensorrt", "cuda", "cudnn", "installation", "onnxruntime", "onnx2trt", "onnx-simplifier", "agx", "pytorch", "tesseract-ocr", "triton-inference-server", "tensorrt-inference-server", "nvidia", "deep-learning", "ci", "docker", "triton-server", "paddleocr", "supervisord", "minio"], "description": "Set up CI in DL/ cuda/ cudnn/ TensorRT/ onnx2trt/ onnxruntime/ onnxsim/ Pytorch/ Triton-Inference-Server/ Bazel/ Tesseract/ PaddleOCR/ NVIDIA-docker/ minIO/ Supervisord on AGX or PC from scratch."}
{"name": "2gunsu/monocon-pytorch", "full_name": "2gunsu/monocon-pytorch", "topics": ["3d-object-detection"], "description": "Unofficial Pytorch Implementation for MonoCon(AAAI, 2022)"}
{"name": "clarin-pl/embeddings", "full_name": "CLARIN-PL/embeddings", "topics": ["languagemodel", "nlp", "nlp-machine-learning", "fine-tuning", "classification", "sequence-tagging", "benchmark", "lm"], "description": "Embeddings: State-of-the-art Text Representations for Natural Language Processing tasks, an initial version of library focus on the Polish Language "}
{"name": "yknishidate/morecon", "full_name": "yknishidate/morecon", "topics": ["deep-learning", "transformer", "motion-capture"], "description": "MoRecon - A tool for reconstructing missing frames in motion capture data"}
{"name": "deepglugs/deep_imagen", "full_name": "deepglugs/deep_imagen", "topics": [], "description": "scripts for running and training imagen-pytorch"}
{"name": "anshulpaigwar/gndnet", "full_name": "anshulpaigwar/GndNet", "topics": ["point-cloud-segmentation", "autonomous-vehicles", "ground-segmentation", "ground-estimator", "deep-learning"], "description": "GndNet: Fast ground plane estimation and point cloud segmentation for autonomous vehicles using deep neural networks."}
{"name": "lukashedegaard/continual-inference", "full_name": "LukasHedegaard/continual-inference", "topics": ["pytorch", "deep-learning", "cnn", "continual-inference", "convolutional-neural-networks", "deep-neural-networks", "efficiency", "machine-learning", "neural-networks", "recurrent-neural-network"], "description": "A Python library for Continual Inference Networks in PyTorch"}
{"name": "raghavian/graph_refinement", "full_name": "raghavian/graph_refinement", "topics": [], "description": "This is official Pytorch implementation of \"Graph Refinement based Airway Extraction using Mean-Field Networks and Graph Neural Networks\", Raghavendra Selvan et al. 2020"}
{"name": "ut-austin-rpl/ditto", "full_name": "UT-Austin-RPL/Ditto", "topics": ["computer-vision", "robotics", "3d-reconstruction", "digital-twin", "deep-learning"], "description": "Code for Ditto: Building Digital Twins of Articulated Objects from Interaction"}
{"name": "lornatang/espcn-pytorch", "full_name": "Lornatang/ESPCN-PyTorch", "topics": ["super-resolution", "pytorch", "cnn", "deep-learning"], "description": "A PyTorch implementation of ESPCN based on CVPR 2016 paper Real-Time Single Image and Video Super-Resolution Using an Efficient Sub-Pixel Convolutional Neural Network."}
{"name": "lancopku/dynamickd", "full_name": "lancopku/DynamicKD", "topics": ["nlp", "pre-trained-language-models", "knowledge-distillation"], "description": "Code for EMNLP 2021 main conference paper \"Dynamic Knowledge Distillation for Pre-trained Language Models\""}
{"name": "d-li14/san", "full_name": "d-li14/SAN", "topics": ["efficient-neural-networks", "scale-invariance", "resnet", "mobilenetv2", "imagenet", "classification", "eccv2020", "pytorch", "meta-learning", "knowledge-distillation"], "description": "[ECCV 2020] Scale Adaptive Network: Learning to Learn Parameterized Classification Networks for Scalable Input Images"}
{"name": "tianyu0207/ccd", "full_name": "tianyu0207/CCD", "topics": ["anomaly-detection", "pytorch", "deep-learning", "unsupervised-learning", "medical-image-analysis"], "description": "Code for 'Constrained Contrastive Distribution Learning for Unsupervised Anomaly Detection and Localisation in Medical Images'  [MICCAI 2021]"}
{"name": "levindabhi/sievenet", "full_name": "levindabhi/SieveNet", "topics": ["pytorch", "pytorch-implementation", "vton", "vitual-tryon", "sievenet", "2d-virtual-try-on", "image-based-tryon"], "description": "This is the unofficial implementation of SieveNet: A Unified Framework for Robust Image-Based Virtual Try-On"}
{"name": "mlelarge/graph_neural_net", "full_name": "mlelarge/graph_neural_net", "topics": ["gnn", "deep-learning", "graph", "graph-neural-networks", "pytorch"], "description": "Expressive Power of Invariant and Equivariant Graph Neural Networks (ICLR 2021)"}
{"name": "gt-ripl/multiagentperception", "full_name": "GT-RIPL/MultiAgentPerception", "topics": ["cvpr2020", "multi-agent-systems", "semantic-segmentation", "multi-view", "deep-learning"], "description": "Official source code to CVPR'20 paper, \"When2com: Multi-Agent Perception via Communication Graph Grouping\""}
{"name": "1adrianb/binary-networks-pytorch", "full_name": "1adrianb/binary-networks-pytorch", "topics": ["convolutional-neural-networks", "network-quantization", "network-binarization", "pytorch"], "description": "Binarize convolutional neural networks using pytorch :fire:"}
{"name": "lukasruff/classification-ad", "full_name": "lukasruff/Classification-AD", "topics": ["anomaly-detection", "deep-learning", "one-class-classification", "one-class-learning", "deep-anomaly-detection", "machine-learning", "pytorch", "python", "python3"], "description": "Repository for the paper \"Rethinking Assumptions in Anomaly Detection\""}
{"name": "wangcongcong123/ttt", "full_name": "wangcongcong123/ttt", "topics": ["transformers", "tpus", "tensorflow2", "nlp", "t5"], "description": "A package for fine-tuning Transformers with TPUs, written in Tensorflow2.0+"}
{"name": "pytorch-ignite/code-generator", "full_name": "pytorch-ignite/code-generator", "topics": ["pytorch", "pytorch-ignite", "deep-learning", "neural-networks", "webapp", "vuejs", "hacktoberfest", "code-generator"], "description": "Web Application to generate your training scripts with PyTorch Ignite"}
{"name": "aivresearch/msanet", "full_name": "AIVResearch/MSANet", "topics": ["computer-vision", "deep-learning", "few-shot-learning", "few-shot-segmentation", "pytorch-implementation", "semantic-segmentation"], "description": "Official Pytorch implementation of Multi-Similarity and Attention Guidence for Boosting Few-Shot Segmentation."}
{"name": "archinetai/audio-data-pytorch", "full_name": "archinetai/audio-data-pytorch", "topics": ["artifical-intelligense", "audio-generation", "datasets", "deep-learning", "pytorch"], "description": "A collection of useful audio datasets and transforms for PyTorch."}
{"name": "hcnoh/knowledge-tracing-collection-pytorch", "full_name": "hcnoh/knowledge-tracing-collection-pytorch", "topics": ["pytorch", "knowledge-tracing", "deep-learning", "dkt", "dkvmn", "sakt", "dkt-plus", "gkt", "kqn"], "description": "A collection of Knowledge Tracing model implementations with PyTorch"}
{"name": "ebartrum/lightning_gan_zoo", "full_name": "ebartrum/lightning_gan_zoo", "topics": ["gan", "hydra", "pytorch", "pytorch-lightning"], "description": "GAN models implemented with Pytorch Lightning and Hydra configuration"}
{"name": "intellabs/matsciml", "full_name": "IntelLabs/matsciml", "topics": ["ai", "dgl", "pytorch", "pytorch-lightning"], "description": "Open MatSci ML Toolkit is a single framework for prototyping and scaling out deep learning models for materials discovery, built on top of OpenCatalyst, PyTorch Lightning, and the Deep Graph Library."}
{"name": "zassou65535/image_generator_2", "full_name": "zassou65535/image_generator_2", "topics": ["python", "gan", "image-generation", "progressive-gan", "pytorch"], "description": "Progressive GAN\u306b\u3088\u308b\u753b\u50cf\u751f\u6210\u5668"}
{"name": "mmehdimousavi/supercaustics", "full_name": "MMehdiMousavi/SuperCaustics", "topics": ["deep-learning", "computer-vision", "pytorch", "virtual", "virtual-environment", "simulation", "transparent-objects", "synthetic-data", "dataset", "dataset-generation", "unreal-engine"], "description": "Real-time, open-source simulation of transparent objects for deep learning applications"}
{"name": "haamoon/mmtm", "full_name": "haamoon/mmtm", "topics": ["multimodal-deep-learning", "multimodal-learning", "cnn-fusion", "pytorch", "action-recognition", "speech-enhancement", "gesture-recognition"], "description": "Implementation of CVPR 2020 paper \"MMTM: Multimodal Transfer Module for CNN Fusion\""}
{"name": "seonghyeonye/flipped-learning", "full_name": "seonghyeonye/Flipped-Learning", "topics": ["deep-learning", "nlp", "pytorch", "large-language-models"], "description": "[ICLR 2023] Guess the Instruction! Flipped Learning Makes Language Models Stronger Zero-Shot Learners"}
{"name": "zacario-li/fast-scnn_pytorch", "full_name": "zacario-li/Fast-SCNN_pytorch", "topics": ["pytorch", "fast-scnn", "semantic-segmentation", "segmentation"], "description": "A PyTorch Implementation of Fast-SCNN: Fast Semantic Segmentation Network(PyTorch >= 1.4)"}
{"name": "gpauloski/kfac_pytorch", "full_name": "gpauloski/kfac-pytorch", "topics": ["pytorch", "optimizer", "kfac", "distributed", "second-order-optimization", "deep-learning"], "description": "Distributed K-FAC Preconditioner for PyTorch"}
{"name": "lucidrains/geometric-vector-perceptron", "full_name": "lucidrains/geometric-vector-perceptron", "topics": ["artficial-intelligence", "deep-learning", "equivariance", "protein-structure", "biomolecule"], "description": "Implementation of Geometric Vector Perceptron, a simple circuit for 3d rotation equivariance for learning over large biomolecules, in Pytorch. Idea proposed and accepted at ICLR 2021"}
{"name": "sauradip/stale", "full_name": "sauradip/STALE", "topics": ["action-detection", "clip", "prompt-tuning", "temporal-action-detection", "temporal-action-localization", "transformers", "video-understanding", "vision-language"], "description": "[ECCV 2022] Official Pytorch Implementation of the paper : \" Zero-Shot Temporal Action Detection via Vision-Language Prompting \""}
{"name": "toshas/torch-householder", "full_name": "toshas/torch-householder", "topics": ["pytorch", "orgqr", "linalg", "householder-product", "householder-transformation", "householder-reflectors", "lapack", "orthogonality", "parameterization"], "description": "Efficient Householder Transformation in PyTorch"}
{"name": "otaheri/bps_torch", "full_name": "otaheri/bps_torch", "topics": [], "description": "A Pytorch implementation of the bps code using chamfer distance on GPU"}
{"name": "zzz1515151/self-supervised_learning_sketch", "full_name": "zzz1515151/self-supervised_learning_sketch", "topics": ["self-supervised-learning", "self-supervised", "deep-learning", "representation-learning", "free-hand-sketch", "sketch-recognition", "sketch-retrieval", "sketch-classificaton", "temporal-convolutional-network", "temporal-convolutions", "rotnet"], "description": "self-supervised learning, deep learning, representation learning, RotNet, temporal convolutional network(TCN), deformation transformation, sketch pre-train, sketch classification, sketch retrieval, free-hand sketch,  official code of paper \"Deep Self-Supervised Representation Learning for Free-Hand Sketch\""}
{"name": "lmbxmu/1xn", "full_name": "lmbxmu/1xN", "topics": [], "description": "Pytorch implementation of TPAMI 2022 -- 1xN Pattern for Pruning Convolutional Neural Networks"}
{"name": "yfletberliac/adversarially-guided-actor-critic", "full_name": "yfletberliac/adversarially-guided-actor-critic", "topics": ["adversarially-guided-actor-critic", "tensorflow", "pytorch"], "description": "AGAC: Adversarially Guided Actor-Critic"}
{"name": "lewis-morris/mapextrackt", "full_name": "lewis-morris/mapextrackt", "topics": ["pytorch", "feature-extraction", "neural-network"], "description": "Pytorch Feature Map Extractor"}
{"name": "csdongxian/awp", "full_name": "csdongxian/AWP", "topics": ["neurips-2020", "adversarial-attacks", "pytorch", "adversarial-training"], "description": "Codes for NeurIPS 2020 paper \"Adversarial Weight Perturbation Helps Robust Generalization\""}
{"name": "edward3862/carime-pytorch", "full_name": "edward3862/CariMe-pytorch", "topics": ["caricatures", "style-transfer", "gan", "pytorch"], "description": "Unpaired Caricature Generation with Multiple Exaggerations (TMM 2021)"}
{"name": "thu-coai/sentilare", "full_name": "thu-coai/SentiLARE", "topics": ["sentiment-polarity", "sentiment-analysis", "sentiment-classification", "pretrained-models", "bert", "linguistic-features", "part-of-speech", "pytorch"], "description": "Codes for our paper \"SentiLARE: Sentiment-Aware Language Representation Learning with Linguistic Knowledge\" (EMNLP 2020)"}
{"name": "hltchkust/vg-gplms", "full_name": "HLTCHKUST/VG-GPLMs", "topics": ["deep-learning", "summarization", "nlp", "multimodal-deep-learning"], "description": "The code repository for EMNLP 2021 paper \"Vision Guided Generative Pre-trained Language Models for Multimodal Abstractive Summarization\"."}
{"name": "kniter1/tailor", "full_name": "kniter1/TAILOR", "topics": [], "description": "Pytorch implementation for Tailor Versatile Multi-modal Learning for Multi-label Emotion Recognition"}
{"name": "aiwizo/pytorch-datastream", "full_name": "nextml-code/pytorch-datastream", "topics": [], "description": "Simple dataset to dataloader library for pytorch"}
{"name": "geoelements/gns", "full_name": "geoelements/gns", "topics": ["graph-network-simulator", "deep-learning", "machine-learning", "pytorch"], "description": "Graph Network Simulator"}
{"name": "xuyuan/waymo_2d_tracking", "full_name": "xuyuan/waymo_2d_tracking", "topics": ["autonomous-driving", "deep-learning", "object-detection", "tracking", "pytorch"], "description": "3rd place solution of Waymo open dataset challenge 2D tracking track"}
{"name": "mcbal/deep-implicit-attention", "full_name": "mcbal/deep-implicit-attention", "topics": ["artificial-intelligence", "attention-mechanism", "transformers", "deep-learning", "implicit-layers", "mean-field-theory", "boltzmann-machines", "deep-equilibrium-models", "hopfield-networks", "neural-networks", "ising-spin-models", "statistical-physics", "associative-memory"], "description": "Implementation of deep implicit attention in PyTorch"}
{"name": "timy90022/droploss", "full_name": "timy90022/DropLoss", "topics": ["long-tail", "droploss", "pytorch", "instance-segmentation", "object-detection"], "description": "Implementation of DropLoss for Long-Tail Instance Segmentation in Pytorch"}
{"name": "jabertuhin/image-classification-api", "full_name": "jabertuhin/image-classification-api", "topics": ["fastapi", "pytorch-lightning", "pytorch"], "description": "Serving model through api. FastApi + PytorchLightning"}
{"name": "shenzheng2000/semantic-guided-low-light-image-enhancement", "full_name": "ShenZheng2000/Semantic-Guided-Low-Light-Image-Enhancement", "topics": [], "description": "This is the official Pytorch implementation for our paper \"Semantic-Guided Zero-Shot Learning for Low-Light Image/Video Enhancement.\""}
{"name": "sberbank-ai/ru-clip", "full_name": "ai-forever/ru-clip", "topics": ["nlp", "computer-vision", "clip"], "description": "CLIP implementation for Russian language"}
{"name": "anguyen8/deepface-emd", "full_name": "anguyen8/deepface-emd", "topics": ["computer-vision", "face-identification", "earth-movers-distance", "deep-learning"], "description": "Code for CVPR 2022 https://arxiv.org/abs/2112.04016 DeepFace-EMD Re-ranking Using Patch-wise Earth Movers Distance Improves Out-Of-Distribution Face Identification"}
{"name": "audio-westlakeu/audiossl", "full_name": "Audio-WestlakeU/audiossl", "topics": ["audio-classification", "audio-datasets", "self-supervised-learning", "audio-pretraining", "audio-self-supervised-learning", "audio-representation", "audioset", "nsynth", "speech-commands", "urbansound8k", "voxceleb1", "pytorch", "pytorch-lightning"], "description": "A library for audio self-supervised learning"}
{"name": "giannifranchi/lp_bnn", "full_name": "giannifranchi/LP_BNN", "topics": ["deep-learning", "pytorch", "uncertainty-quantification", "uncertainty-estimation", "bayesian-deep-learning", "resnet"], "description": "This repository contains an official implementation of LPBNN."}
{"name": "batsresearch/csp", "full_name": "BatsResearch/csp", "topics": ["zero-shot-learning", "pytorch", "deep-learning"], "description": "Learning to compose soft prompts for compositional zero-shot learning."}
{"name": "valencebond/fixmatch_pytorch", "full_name": "valencebond/FixMatch_pytorch", "topics": ["semi-supervised-learning", "pytorch", "fixmatch"], "description": "Unofficial PyTorch implementation of \"FixMatch: Simplifying Semi-Supervised Learning with Consistency and Confidence\""}
{"name": "seraphlabs-ca/sentencemim-demo", "full_name": "seraphlabs-ca/SentenceMIM-demo", "topics": ["pytorch", "python3", "mim", "seraphlabs", "nlp", "variational-inference"], "description": "This repo contains code to reproduce some of the results presented in the paper \"SentenceMIM: A Latent Variable Language Model\""}
{"name": "fmu2/gradfeat20", "full_name": "fmu2/gradfeat20", "topics": ["deep-learning", "representation-learning", "transfer-learning"], "description": "Gradients as Features for Deep Representation Learning"}
{"name": "jiaweishicv/amend-representation-module", "full_name": "JiaweiShiCV/Amend-Representation-Module", "topics": ["raf-db", "pytorch", "facial-expression-recognition"], "description": "ARM - Official PyTorch Implementation"}
{"name": "hzxie/rmnet", "full_name": "hzxie/RMNet", "topics": ["video-object-segmentation", "segmentation", "cvpr2021", "pytorch"], "description": "Implementation of \"Efficient Regional Memory Network for Video Object Segmentation\".  (Xie et al., CVPR 2021)"}
{"name": "pvnieo/dpfm", "full_name": "pvnieo/DPFM", "topics": ["python3", "pytorch", "3dvision", "shape-matching", "partial-shape-matching", "deep-learning", "functional-maps", "deep-functional-maps"], "description": "Pytorch code for \"DPFM: Deep Partial Functional Maps\" - 3DV 2021 (Oral)"}
{"name": "sooftware/lightning-asr", "full_name": "sooftware/lightning-asr", "topics": ["asr", "speech-recognition", "pytorch-lightning", "conformer", "hydra"], "description": "Modular and extensible speech recognition library leveraging pytorch-lightning and hydra."}
{"name": "guokan987/dgcn", "full_name": "guokan987/DGCN", "topics": [], "description": "The pytorch code of DGCN(TITS)"}
{"name": "saareliad/ftpipe", "full_name": "saareliad/FTPipe", "topics": ["pipeline-parallelism", "fine-tuning", "nlp", "t5", "deep-neural-networks", "distributed-training"], "description": "FTPipe and related pipeline model parallelism research."}
{"name": "simon3dv/frustum_pointnets_pytorch", "full_name": "simon3dv/frustum_pointnets_pytorch", "topics": [], "description": "A pytorch version of frustum-pointnets"}
{"name": "phython96/gnas-mp", "full_name": "phython96/GNAS-MP", "topics": ["gnas", "graph", "architecture", "neighbor-aggregation"], "description": "Pytorch Implementation of  Rethinking Graph Neural Architecture Search from Message-passing (CVPR2021)"}
{"name": "saltoricristiano/gipso-sfouda", "full_name": "saltoricristiano/gipso-sfouda", "topics": ["3d", "domain-adaptation", "online-learning", "segmentation"], "description": "Official Pytorch implementation of the ECCV 2022 paper \"GIPSO: Geometrically Informed Propagation for Online Adaptation in 3D LiDAR Segmentation\""}
{"name": "hanson0910/retinatrack", "full_name": "Hanson0910/RetinaTrack", "topics": [], "description": "The pytorch implement of the retina track original paper link: https://arxiv.org/abs/2003.13870"}
{"name": "mindspore-lab/mindnlp", "full_name": "mindspore-lab/mindnlp", "topics": ["mindspore", "natural-language-processing", "nlp", "nlp-library", "deep-learning", "python"], "description": "An opensource NLP library based on MindSpore."}
{"name": "chaovven/pyrl", "full_name": "chaovven/PyRL", "topics": ["pytorch", "dqn", "ddpg", "td3", "reinforcement-learning", "deep-reinforcement-learning", "ppo", "soft-actor-critic"], "description": "PyRL - Reinforcement Learning Framework in Pytorch (Policy Gradient, DQN, DDPG, TD3, PPO, SAC, etc.)"}
{"name": "bluebrain/search", "full_name": "BlueBrain/Search", "topics": ["python", "machine-learning", "deep-learning", "nlp", "natural-language-processing", "text-mining"], "description": "Blue Brain text mining toolbox for semantic search and structured information extraction"}
{"name": "awslabs/sagemaker-defect-detection", "full_name": "awslabs/sagemaker-defect-detection", "topics": ["deep-learning", "computer-vision", "sagemaker", "sagemaker-pytorch", "sagemaker-deployment", "defect-detection", "quality-control"], "description": "Detect Defects in Products from their Images using Amazon SageMaker"}
{"name": "robertcsordas/modules", "full_name": "RobertCsordas/modules", "topics": ["modularity", "generalization", "transformers", "rnn", "paper", "weight-sharing", "machine-learning", "pytorch", "deep-learning"], "description": "The official repository for our paper \"Are Neural Nets Modular? Inspecting Functional Modularity Through Differentiable Weight Masks\". We develop a method for analyzing emerging functional modularity in neural networks based on differentiable weight masks and use it to point out important issues in current-day neural networks."}
{"name": "acheun9/pytorch-implementation-of-mobile-former", "full_name": "ACheun9/Pytorch-implementation-of-Mobile-Former", "topics": [], "description": "Simple implementation of  Mobile-Former on Pytorch"}
{"name": "z-zheng/farseg", "full_name": "Z-Zheng/FarSeg", "topics": ["semantic-segmentation", "deep-learning", "computer-vision", "remote-sensing", "high-resolution-rs-image", "object-segmentation", "convolutional-neural-networks"], "description": "Foreground-Aware Relation Network for Geospatial Object Segmentation in High Spatial Resolution Remote Sensing Imagery (CVPR 2020) https://arxiv.org/pdf/2011.09766.pdf"}
{"name": "pclubiitk/model-zoo", "full_name": "pclubiitk/model-zoo", "topics": ["model-zoo", "cnn-model", "cnn", "classification", "video", "3d-vision", "object-detection", "gans", "vae-gan", "pytorch", "tensorflow", "super-resolution", "nlp", "machine-learning", "deep-learning"], "description": "Implementations of various Deep Learning models in PyTorch and TensorFlow."}
{"name": "seungeunrho/football-paris", "full_name": "seungeunrho/football-paris", "topics": ["gfootball", "self-play", "reinforcement-learning", "pytorch", "ppo", "liveinparis", "kaggle"], "description": "The exact codes used by the team \"liveinparis\" at the kaggle football competition  ranked 6th/1141"}
{"name": "chenyanwu/mebow", "full_name": "ChenyanWu/MEBOW", "topics": ["body-orientation", "orientation-estimation", "pytorch", "dataset"], "description": "Code for \"MEBOW: Monocular Estimation of Body Orientation In the Wild\", CVPR 2020"}
{"name": "pratogab/batch-transforms", "full_name": "pratogab/batch-transforms", "topics": ["pytorch", "batch", "transform", "transforms", "image", "images", "torchvision", "normalize", "randomcrop", "randomhorizontalflip", "totensor"], "description": "Batch equivalent of PyTorch Transforms."}
{"name": "lee-jh-kr/l2p-pytorch", "full_name": "JH-LEE-KR/l2p-pytorch", "topics": ["continual-learning", "deep-learning", "pytorch-implementation"], "description": "Pytorch Implementation of Learning to Prompt (L2P) for Continual Learning @ CVPR22"}
{"name": "songqi-github/attanet", "full_name": "songqi-github/AttaNet", "topics": ["real-time", "semantic-segmentation", "pytorch", "cityscapes", "aaai2021", "scene-parsing"], "description": "AttaNet for real-time semantic segmentation."}
{"name": "jingtaozhan/jpq", "full_name": "jingtaozhan/JPQ", "topics": ["information-retrieval", "web-search", "dense-retrieval", "product-quantization", "compression", "efficiency", "deep-learning", "pytorch"], "description": "CIKM'21: JPQ substantially improves the efficiency of Dense Retrieval with 30x compression ratio, 10x CPU speedup and 2x GPU speedup."}
{"name": "yiqinyang/icq", "full_name": "YiqinYang/ICQ", "topics": ["deep-reinforcement-learning", "deep-rl", "multi-agent-reinforcement-learning", "mutli-agent", "offline", "pytorch", "reinforcement-learning"], "description": "Codes accompanying the paper \"Believe What You See: Implicit Constraint Approach for Offline Multi-Agent Reinforcement Learning\" (NeurIPS 2021 Spotlight https://arxiv.org/abs/2106.03400)"}
{"name": "toytiny/raflow", "full_name": "Toytiny/RaFlow", "topics": ["deep-learning", "autonomous-driving", "point-cloud", "scene-flow-estimation", "pytorch", "automotive-radar", "self-supervised"], "description": "Self-Supervised Scene Flow Estimation with 4-D Automotive Radar (RA-L & IROS'22)"}
{"name": "brdav/atrc", "full_name": "brdav/atrc", "topics": ["computer-vision", "pytorch", "multi-task-learning", "neural-architecture-search"], "description": "Exploring Relational Context for Multi-Task Dense Prediction [ICCV 2021]"}
{"name": "lanl/pyseqm", "full_name": "lanl/PYSEQM", "topics": [], "description": "an interface to semi-empirical quantum chemistry methods implemented with pytorch"}
{"name": "endywon/texture-reformer", "full_name": "EndyWon/Texture-Reformer", "topics": ["fast", "interactive", "semantic-style-transfer", "style-transfer", "texture-synthesis", "texture-transfer", "universal", "interactive-texture-transfer", "fast-semantic-style-transfer"], "description": "Official Pytorch code for \"Texture Reformer: Towards Fast and Universal Interactive Texture Transfer\" (AAAI 2022)"}
{"name": "ephrem-eth/e2e-kws", "full_name": "Ephrem-ETH/E2E-KWS", "topics": ["asr", "keyword", "keywordspotting", "lstm", "pytorch", "deep-learning", "end2end-keywordspotting", "wake-word-detection", "end-2-end-asr", "end-2-end-keyword-spotting"], "description": "End-to-End Keyword Spotting (E2E-KWS) using a character level LSTM"}
{"name": "ruiliu-ai/fuseformer", "full_name": "ruiliu-ai/FuseFormer", "topics": [], "description": "official Pytorch implementation of ICCV 2021 paper FuseFormer: Fusing Fine-Grained Information in Transformers for Video Inpainting."}
{"name": "mac-automl/xnas", "full_name": "MAC-AutoML/XNAS", "topics": ["pytorch", "automl", "neural-architecture-search"], "description": "XNAS: An effective, modular, and flexible Neural Architecture Search (NAS) framework."}
{"name": "yellowshippo/isogcn-iclr2021", "full_name": "yellowshippo/isogcn-iclr2021", "topics": ["machine-learning", "deep-learning", "physical-simulation", "graph-neural-network"], "description": "IsoGCN code for ICLR2021"}
{"name": "icvteam/tdrg", "full_name": "iCVTEAM/TDRG", "topics": ["multi-label-image-classification", "transformer", "gcn"], "description": "Transformer-based Dual Relation Graph for Multi-label Image Recognition. ICCV 2021"}
{"name": "kingjamessong/fastdifferentiablematsqrt", "full_name": "KingJamesSong/FastDifferentiableMatSqrt", "topics": ["vision-transformer", "decorrelated-bn", "neural-style-transfer", "global-covariance-pooling", "matrix-factorization"], "description": "Official Pytorch implementation of ICLR 22 paper \"Fast Differentiable Matrix Square Root\" and T-PAMI extension"}
{"name": "cdancette/multimodal", "full_name": "multimodal/multimodal", "topics": ["visual-features", "datasets", "embeddings", "vision-and-language", "reasoning", "deep-learning"], "description": "A collection of multimodal datasets, and visual features for VQA and captionning in pytorch. Just run \"pip install multimodal\""}
{"name": "shanghua-gao/g2l-search", "full_name": "ShangHua-Gao/RFNext", "topics": ["field", "receptive", "search", "cnn", "dilation"], "description": "RF-Next: Efficient Receptive Field Search for CNN(TPAMI2022, CVPR2021) Try it, you wouldn't regret it!"}
{"name": "ylhz/tf_to_pytorch_model", "full_name": "ylhz/tf_to_pytorch_model", "topics": [], "description": "Convert tensorflow model to pytorch model via [MMdnn](https://github.com/microsoft/MMdnn) for adversarial attacks."}
{"name": "pietrobarbiero/logic_explained_networks", "full_name": "pietrobarbiero/logic_explained_networks", "topics": ["xai", "explainable-ai", "deep-learning", "neural-networks", "machine-learning", "logic"], "description": "Logic Explained Networks is a python repository implementing explainable-by-design deep learning models."}
{"name": "soloist-v/autostrike", "full_name": "soloist-v/AutoStrike", "topics": ["cf", "crossfire", "yolo", "yolov5", "screenshot", "ai", "pytorch", "mouse", "game", "csgo", "cheat"], "description": null}
{"name": "rishikksh20/talknet2-pytorch", "full_name": "rishikksh20/TalkNet2-pytorch", "topics": ["tts", "text-to-speech", "speech", "speech-synthesis", "pytorch"], "description": "TalkNet 2: Non-Autoregressive Depth-Wise Separable Convolutional Model for Speech Synthesis with Explicit Pitch and Duration Prediction."}
{"name": "yurongyou/hindsight", "full_name": "YurongYou/Hindsight", "topics": ["point-cloud", "pytorch", "autonomous-driving", "object-detection", "3d-detection", "hindsight"], "description": "Code release for \"Hindsight is 20/20: Leveraging Past Traversals to Aid 3D Perception\" [ICLR 2022]"}
{"name": "mahdihosseini/adas", "full_name": "mahdihosseini/RMSGD", "topics": ["pytorch", "deep-learning", "stochastic-gradient-descent", "convolutional-neural-networks"], "description": "Exploiting Explainable Metrics for Augmented SGD [CVPR2022]"}
{"name": "kha-white/manga_ocr", "full_name": "kha-white/manga-ocr", "topics": ["ocr", "japanese", "manga", "transformers", "computer-vision", "deep-learning", "comics"], "description": "Optical character recognition for Japanese text, with the main focus being Japanese manga"}
{"name": "postech-ami/clip-actor", "full_name": "postech-ami/CLIP-Actor", "topics": ["3d", "computer-graphics", "computer-vision", "differentiable-rendering", "geometry-processing", "human-motion", "mesh-generation", "meshes", "neural-fields", "neural-style", "pytorch", "text-driven-editing", "eccv2022"], "description": "[ECCV'22] Official PyTorch Implementation of \"CLIP-Actor: Text-Driven Recommendation and Stylization for Animating Human Meshes\""}
{"name": "kristijanbartol/general-3d-humans", "full_name": "kristijanbartol/general-3d-humans", "topics": ["3d-human-pose", "human-pose-estimation", "human36m", "cmu-panoptic", "feedforward-neural-network", "generalization", "stochastic-learning", "cvpr2022", "deep-learning"], "description": "[CVPR 2022 Oral] Generalizable Human Pose Triangulation"}
{"name": "chihyaoma/cyclical-visual-captioning", "full_name": "chihyaoma/cyclical-visual-captioning", "topics": ["pytorch", "vision-and-language", "visual-grounding", "captioning-images", "captioning-videos"], "description": "PyTorch code for: Learning to Generate Grounded Visual Captions without Localization Supervision"}
{"name": "leonhlj/rskp", "full_name": "LeonHLJ/RSKP", "topics": ["weakly-supervised-learning", "temporal-action-localization", "deep-learning", "pytorch"], "description": "The official implementation of  'Weakly Supervised Temporal Action Localization via Representative Snippet Knowledge Propagation' (CVPR 2022)"}
{"name": "wuziyi616/if-defense", "full_name": "Wuziyi616/IF-Defense", "topics": ["pytorch", "point-cloud", "implicit-representions", "adversarial-machine-learning", "deep-learning", "pointnet", "pointnet2", "dgcnn", "pointconv", "rs-cnn", "3d-reconstruction", "3d-attack", "defense"], "description": "This is the official pytorch implementation for paper: IF-Defense: 3D Adversarial Point Cloud Defense via Implicit Function based Restoration"}
{"name": "fidelity/textwiser", "full_name": "fidelity/textwiser", "topics": ["natural-language-processing", "nlp", "bert", "text-featurization"], "description": "[AAAI 2021] TextWiser: Text Featurization Library"}
{"name": "wellcometrust/wellcomeml", "full_name": "wellcometrust/WellcomeML", "topics": ["deep-learning", "scibert", "transformers", "nlp", "datascience"], "description": "Repository for Machine Learning utils at the Wellcome Trust"}
{"name": "princeton-vl/attach-juxtapose-parser", "full_name": "princeton-vl/attach-juxtapose-parser", "topics": ["neurips-2020", "parsing", "nlp", "machine-learning"], "description": "Code for the paper \"Strongly Incremental Constituency Parsing with Graph Neural Networks\""}
{"name": "dsfsi/masakhane-web", "full_name": "dsfsi/masakhane-web", "topics": ["africanlp", "africannlp", "natural-language-processing", "african", "joeynmt", "masakhane", "african-languages", "machine-translation", "translation-models", "docker", "masakhane-web"], "description": "Masakhane Web is a translation web application for solely African Languages."}
{"name": "kalelpark/ai_paper", "full_name": "kalelpark/Awesome-ComputerVision", "topics": ["computer-vision", "deep-learning", "object-detection", "segmentation", "review", "awesome", "awesome-list", "image-classification", "meta-learning", "fgvc", "self-supervised-learning", "collaborate", "educative", "github-campus-experts"], "description": " Awesome-ComputerVision"}
{"name": "wtyhub/lpn", "full_name": "wtyhub/LPN", "topics": [], "description": "Pytorch implementation of Each Part Matters: Local Patterns Facilitate Cross-view Geo-localization https://arxiv.org/abs/2008.11646"}
{"name": "jingyibysutsoftware/yolov5-deepsort-driverdistracted-driving-behavior-detection", "full_name": "JingyibySUTsoftware/Yolov5-deepsort-driverDistracted-driving-behavior-detection", "topics": ["deepsort", "yolov5", "playsound", "opencv", "object-detection", "tracker", "driver-behavior", "tired", "python", "deeplearning", "sort", "pytorch", "detection", "yolov5-deepsort", "dlib-face-detection", "dlib-tracker", "dlib", "pyqt5"], "description": "\u57fa\u4e8e\u6df1\u5ea6\u5b66\u4e60\u7684\u9a7e\u9a76\u5458\u5206\u5fc3\u9a7e\u9a76\u884c\u4e3a\uff08\u75b2\u52b3+\u5371\u9669\u884c\u4e3a\uff09\u9884\u8b66\u7cfb\u7edf\u4f7f\u7528YOLOv5+Deepsort\u5b9e\u73b0\u9a7e\u9a76\u5458\u7684\u5371\u9669\u9a7e\u9a76\u884c\u4e3a\u7684\u9884\u8b66\u76d1\u6d4b"}
{"name": "irohxu/lanenet-lane-detection-pytorch", "full_name": "IrohXu/lanenet-lane-detection-pytorch", "topics": [], "description": "Unofficial implemention of lanenet model for real time lane detection Pytorch Version"}
{"name": "shaoeric/torch-atom", "full_name": "shaoeric/torch-atom", "topics": ["pytorch", "deeplearning", "trainer", "simple"], "description": "A basic and simple training framework for pytorch. Easy to expand for multi network interaction."}
{"name": "svip-lab/lbylnet", "full_name": "svip-lab/LBYLNet", "topics": ["cvpr2021", "visual-grounding", "pytorch", "cvpr"], "description": "[CVPR2021] Look before you leap: learning landmark features for one-stage visual grounding."}
{"name": "d-li14/regnet.pytorch", "full_name": "d-li14/regnet.pytorch", "topics": ["pytorch", "regnet", "resnext", "imagenet", "pretrained-models", "neural-architecture-search"], "description": "PyTorch-style and human-readable RegNet with a spectrum of pre-trained models"}
{"name": "shanghai-digital-brain-laboratory/db-football", "full_name": "Shanghai-Digital-Brain-Laboratory/DB-Football", "topics": ["distributed", "google-research-football", "multi-agent-reinforcement-learning", "ray", "football", "reinforcement-learning", "mappo", "ppo", "pytorch", "psro", "league-training"], "description": "A Simple, Distributed and Asynchronous Multi-Agent Reinforcement Learning Framework for Google Research Football AI."}
{"name": "somepago/dbviz", "full_name": "somepago/dbViz", "topics": ["pytorch", "understanding-neural-networks", "decision-boundaries", "visualization-tools", "neural-network-visualizations", "decision-boundary-visualizations", "cifar10"], "description": "The official PyTorch implementation - Can Neural Nets Learn the Same Model Twice? Investigating Reproducibility and Double Descent from the Decision Boundary Perspective (CVPR'22)."}
{"name": "luka-group/lattice", "full_name": "luka-group/Lattice", "topics": ["attention-mechanism", "equivariance", "equivariant-network", "equivariant-representations", "table-to-text", "transformer"], "description": "[NAACL 2022] Robust (Controlled) Table-to-Text Generation with Structure-Aware Equivariance Learning. "}
{"name": "itmo-nss-team/torch_de_solver", "full_name": "ITMO-NSS-team/torch_DE_solver", "topics": ["equation-solver", "differential-equations", "numerical-methods"], "description": "Combines power of torch, numerical methods to conquer and solve ALL {O,P}DEs"}
{"name": "yule-buaa/dstgcn", "full_name": "yule-BUAA/DSTGCN", "topics": ["deep-learning", "spatial-temporal-data", "graph-convolutional-networks", "traffic-accident-prediction"], "description": "codes of Deep Spatio-Temporal Graph Convolutional Network for Traffic Accident Prediction"}
{"name": "andreybicalho/vrpdr", "full_name": "andreybicalho/vrpdr", "topics": ["ocr", "pytorch", "opencv", "deep-learning", "license-plate-recognition", "license-plate-detection", "yolo", "yolov3", "vehicle-registration-plate", "neural-networks", "convolutional-neural-networks", "optical-character-recognition", "character-recognition", "attention-ocr"], "description": "Deep Learning Applied To Vehicle Registration Plate Detection and Recognition in PyTorch."}
{"name": "thudm/icetk", "full_name": "THUDM/icetk", "topics": ["tokenization", "transformer"], "description": "A unified tokenization tool for Images, Chinese and English."}
{"name": "nianticlabs/panoptic-forecasting", "full_name": "nianticlabs/panoptic-forecasting", "topics": ["semantic-segmentation", "panoptic-segmentation", "cityscapes", "pytorch", "future-prediction", "video-semantic-segmentation"], "description": "[CVPR 2021] Forecasting the panoptic segmentation of future video frames"}
{"name": "yerevann/warp", "full_name": "YerevaNN/WARP", "topics": ["adversarial", "natural-language-processing", "pretrained-models", "few-shot-learning"], "description": "Code for ACL'2021 paper WARP \ud83c\udf00 Word-level Adversarial ReProgramming. Outperforming `GPT-3` on SuperGLUE Few-Shot text classification. https://aclanthology.org/2021.acl-long.381/"}
{"name": "abrazinskas/fewsum", "full_name": "abrazinskas/FewSum", "topics": ["machine-learning", "natural-language-processing", "summarization", "deep-learning", "opinion-summarization"], "description": "Few-shot learning framework for opinion summarization published at EMNLP 2020. "}
{"name": "daiquocnguyen/qgnn", "full_name": "daiquocnguyen/QGNN", "topics": ["graph-classification", "node-classification", "graph-representation-learning", "quaternion", "graph-neural-networks", "graph-embeddings", "node-embeddings", "text-classification", "hamilton-product", "quaternion-algebra"], "description": "Quaternion Graph Neural Networks (ACML 2021) (Pytorch and Tensorflow)"}
{"name": "ibaigorordo/pytorch-high-res-stereo-depth-estimation", "full_name": "ibaiGorordo/PyTorch-High-Res-Stereo-Depth-Estimation", "topics": ["pytorch", "python", "stereo-vision", "stereo-matching", "stereo-depth-estimation", "depth-estimation"], "description": "Python scripts form performing stereo depth estimation using the high res stereo model in PyTorch ."}
{"name": "leminhbinh0209/f3net", "full_name": "Leminhbinh0209/F3Net", "topics": ["deepfakes", "pytorch", "frequency"], "description": "Unofficial Pytorch implementation of Thinking in frequency: Face forgery detection by mining frequency-aware clues (ECCV2020)"}
{"name": "nikitadurasov/masksembles", "full_name": "nikitadurasov/masksembles", "topics": ["uncertainty-estimation", "deep-learning", "computer-vision", "tensorflow", "torch", "uncertainty-quantification", "uncertainty-neural-networks", "paper", "out-of-distribution-detection"], "description": "Official repository for the paper \"Masksembles for Uncertainty Estimation\" (CVPR2021)."}
{"name": "fschmid56/efficientat", "full_name": "fschmid56/EfficientAT", "topics": ["audio-tagging", "convolutional-neural-networks", "knowledge-distillation", "mobilenetv3", "pytorch"], "description": "This repository aims at providing efficient CNNs for Audio Tagging. We provide AudioSet pre-trained models ready for downstream training and extraction of audio embeddings."}
{"name": "diditforlulz273/pokerrl-omaha", "full_name": "diditforlulz273/PokerRL-Omaha", "topics": ["reinforcement-learning", "pytorch", "cfr", "deep-learning", "reinforcement-learning-algorithms", "poker-bot", "monte-carlo-tree-search", "omaha-poker", "counterfactual-regret-minimization"], "description": "Omaha Poker functionality+some features for PokerRL Reinforcement Learning card framwork"}
{"name": "robot-perception-group/airpose", "full_name": "robot-perception-group/AirPose", "topics": ["pose-estimation", "deep-learning", "python", "human", "multi-view", "drones", "shape-estimation"], "description": "This repository contains the code of AirPose, our multi-view fusion network for Human Pose and Shape Estimation method"}
{"name": "maoweinuaa/cartoonface-detection", "full_name": "maoweinuaa/Cartoonface-detection", "topics": [], "description": "Base on retinaface and centerface modefied. frame work depend on pytorch."}
{"name": "sooftware/speech-transformer", "full_name": "sooftware/speech-transformer", "topics": ["asr", "speech", "transformer", "attention-is-all-you-need", "pytorch", "end-to-end"], "description": "Transformer implementation speciaized in speech recognition tasks using Pytorch.  "}
{"name": "iqtlabs/fakefinder", "full_name": "IQTLabs/FakeFinder", "topics": ["deepfake-detection", "deep-learning", "artificial-intelligence", "mlops", "cloud-computing", "machine-learning"], "description": "FakeFinder builds a modular framework for evaluating various deepfake detection models, offering a web application as well as API access for integration into existing workflows."}
{"name": "fetchai/colearn", "full_name": "fetchai/colearn", "topics": ["machine-learning", "deep-learning", "python", "blockchain", "priv"], "description": "Colearn is a collection of protocols for running multi-stakeholder machine learning that preserve data privacy"}
{"name": "gcambara/cape", "full_name": "gcambara/cape", "topics": ["positional-encoding", "positional-encoder", "positional-embedding", "transformer", "cape", "pytorch", "audio", "speech", "text", "vit", "visual-transformer"], "description": "Continuous Augmented Positional Embeddings (CAPE) implementation for PyTorch"}
{"name": "tum-daml/synthetic_coordinates", "full_name": "TUM-DAML/synthetic_coordinates", "topics": ["paper", "pytorch", "gnn", "graph-neural-networks"], "description": "Synthetic coordinates for GNNs, as proposed in \"Directional Message Passing on Molecular Graphs via Synthetic Coordinates\" (NeurIPS 2021)"}
{"name": "cn-upb/nfvdeep", "full_name": "CN-UPB/NFVdeep", "topics": ["sfc", "nfv", "networking", "virtualization", "orchestration", "vnf-management", "vnf-placement", "reinforcement-learning", "machine-learning", "deep-learning", "python", "python3", "stable-baselines"], "description": "NFVdeep: Deep Reinforcement Learning for Online Orchestration of Service Function Chains"}
{"name": "saro00/dgn", "full_name": "Saro00/DGN", "topics": ["graph-machine-learning", "graph-neural-networks", "pytorch", "dgl", "spectral-methods"], "description": "Implementation of Directional Graph Networks in PyTorch and DGL"}
{"name": "panjinquan/pytorch-base-trainer", "full_name": "PanJinquan/Pytorch-Base-Trainer", "topics": ["distributed-training", "pytorch-prune", "pytorch-training", "deep-learning"], "description": "Pytorch\u5206\u5e03\u5f0f\u8bad\u7ec3\u6846\u67b6"}
{"name": "debeshjha/colonsegnet", "full_name": "DebeshJha/ColonSegNet", "topics": ["polyp-detection", "colonoscopy", "localisation", "segmentation", "deep-learning", "medical-image-segmentation", "detection-model", "image-detection", "tensorflow", "unet", "pythnon", "pytorch", "pytorch-implementation"], "description": "ColonSegNet: Real-Time Polyp Segmentation (Used in NVIDIA Clara Holoscan App for Polyp Segmentation)"}
{"name": "joelcthomas/ml-azuredatabricks", "full_name": "joelcthomas/ml-azuredatabricks", "topics": ["azure", "databricks", "machine-learning", "deep-learning", "mlflow"], "description": "Collection of Machine Learning Examples for Azure Databricks"}
{"name": "hasanirtiza/pedesformer-transformer-networks-for-pedestrian-detection", "full_name": "hasanirtiza/PedesFormer-Transformer-Networks-For-Pedestrian-Detection", "topics": ["transformer", "transformers", "pedestrian-detection"], "description": "Transformer Networks for Pedestrian Detection"}
{"name": "londonnode/pearl", "full_name": "LondonNode/Pearl", "topics": ["python", "reinforcement-learning", "research", "pytorch", "evolutionary-computation", "pearl", "evolutionary-algorithms", "model-based-reinforcement-learning"], "description": "Adaptable tools to make reinforcement learning and evolutionary computation algorithms."}
{"name": "pilhyeon/learning-action-completeness-from-points", "full_name": "Pilhyeon/Learning-Action-Completeness-from-Points", "topics": ["deep-learning", "pytorch", "action-completeness", "weakly-supervised-learning", "temporal-action-localization", "point-level-supervision"], "description": "Official Pytorch Implementation of 'Learning Action Completeness from Points for Weakly-supervised Temporal Action Localization' (ICCV-21 Oral)"}
{"name": "avivga/overlord", "full_name": "avivga/overlord", "topics": ["generative-models", "disentanglement", "image-translation", "iccv", "pytorch", "image-to-image-translation", "face-manipulations", "stylegan", "stylegan2"], "description": "Official pytorch implementation of \"Scaling-up Disentanglement for Image Translation\", ICCV 2021."}
{"name": "xxradon/onnxtocaffe", "full_name": "xxradon/ONNXToCaffe", "topics": ["pytorch", "caffe", "onnx"], "description": "pytorch -> onnx -> caffe, pytorch to caffe, or other deep learning framework to onnx and onnx to caffe."}
{"name": "michedev/ddpms-pytorch", "full_name": "Michedev/DDPMs-Pytorch", "topics": ["ddpm", "generative-model", "pytorch", "deep-learning"], "description": "Implementation of various DDPM papers to understand how they work "}
{"name": "cheind/autoregressive", "full_name": "cheind/autoregressive", "topics": ["machine-learning", "deep-learning", "generative-model", "autoregressive", "wavenet", "pytorch"], "description": ":kiwi_fruit: Autoregressive Models in PyTorch."}
{"name": "uoft-ecosystem/hfta", "full_name": "UofT-EcoSystem/hfta", "topics": ["deep-learning", "machine-learning", "pytorch", "gpu", "tpu", "neural-network", "hardware-utilization"], "description": "Boost hardware utilization for ML training workloads via Inter-model Horizontal Fusion"}
{"name": "kiri-ai/kiri", "full_name": "backprop-ai/backprop", "topics": ["natural-language-processing", "nlp", "question-answering", "bert", "language-model", "text-classification", "multilingual-models", "image-classification", "fine-tuning", "transfer-learning", "transformers"], "description": "Backprop makes it simple to use, finetune, and deploy state-of-the-art ML models."}
{"name": "lucidrains/bidirectional-cross-attention", "full_name": "lucidrains/bidirectional-cross-attention", "topics": ["artificial-intelligence", "deep-learning", "attention-mechanism"], "description": "A simple cross attention that updates both the source and target in one step"}
{"name": "liuzhen03/adnet", "full_name": "liuzhen03/ADNet", "topics": [], "description": "Pytorch implementation of ADNet. (The winning method of the first edition of NTIRE2021 Multi-Frame HDR Challenge)"}
{"name": "bgu-cs-vil/deepmcbm", "full_name": "BGU-CS-VIL/DeepMCBM", "topics": ["background-estimation", "computer-vision", "deep-learning", "moving-camera", "pytorch"], "description": "\"A Deep Moving-camera Background Model\" [Erez, Shapira Weber, and Freifeld, ECCV 2022]"}
{"name": "lucidrains/axial-positional-embedding", "full_name": "lucidrains/axial-positional-embedding", "topics": ["artificial-intelligence", "deep-learning", "pytorch"], "description": "Axial Positional Embedding for Pytorch"}
{"name": "mlzxy/qsparse", "full_name": "mlzxy/qsparse", "topics": ["pruning", "quantization-aware-training", "neural-network", "pytorch", "model-compression"], "description": "Train neural networks with joint quantization and pruning on both weights and activations using any pytorch modules"}
{"name": "indolem/indolem", "full_name": "indolem/indolem", "topics": ["indolem", "indobert", "bert", "indonesian-language", "summarization", "dependency-parsing", "glue", "discourse", "sentiment-analysis", "ner", "pos-tagging", "indonesian", "bahasa", "natural-language-processing"], "description": "IndoLEM is a comprehensive Indonesian NLU benchmark, comprising three pillars NLP task: morpho-syntax, semantic, and discourse. Presented in COLING 2020."}
{"name": "xiaofeng94/refinednet-for-dehazing", "full_name": "xiaofeng94/RefineDNet-for-dehazing", "topics": [], "description": "The Pytorch implementation for \"RefineDNet: A Weakly Supervised Refinement Framework for Single Image Dehazing\" (TIP 2021)"}
{"name": "zlxy9892/st-causalconvnet", "full_name": "zlxy9892/ST-CausalConvNet", "topics": ["air-pollution", "causal-inference", "causal-models", "cnn", "deep-learning", "pytorch"], "description": "A spatiotemporal causal convolutional network for predicting PM2.5 concentrations."}
{"name": "yvquanli/glam", "full_name": "yvquanli/GLAM", "topics": ["graph-neural-networks", "pytorch", "deep-learning"], "description": "Code for \"An adaptive graph learning method for automated molecular interactions and properties predictions\"."}
{"name": "col-in-coding/tensorrt-cv", "full_name": "col-in-coding/Tensorrt-CV", "topics": ["cuda", "pytorch", "deep-learning", "tensorrt", "onnx", "tensorrt-conversion", "tensorrt-inference", "tensorrt-engine"], "description": "Using TensorRT for Inference Model Deployment. "}
{"name": "dr-costas/dnd-sed", "full_name": "dr-costas/dnd-sed", "topics": ["sound-event-detection", "depthwise-separable-convolutions", "dilated-convolution", "depthwiseseparableconvolution", "dilated-cnn", "audio-signal-processing", "machine-listening", "deep-learning", "deep-neural-networks", "machine-learning"], "description": "Sound event detection with depthwise separable and dilated convolutions. "}
{"name": "qianjinhao/circle-loss", "full_name": "qianjinhao/circle-loss", "topics": [], "description": "Circleloss pytorch version"}
{"name": "idsia/recurrent-fwp", "full_name": "IDSIA/recurrent-fwp", "topics": ["transformers", "fast-weight-programmers", "language-modeling", "reinforcement-learning", "recurrent-neural-networks", "fast-weights", "pytorch", "torchbeast"], "description": "Official repository for the paper \"Going Beyond Linear Transformers with Recurrent Fast Weight Programmers\" (NeurIPS 2021)"}
{"name": "pavankunchala/deep-learning", "full_name": "Pavankunchala/Deep-Learning", "topics": ["deep-learning", "tensorflow2", "recurrent-neural-networks", "lstm-neural-networks", "stockprediction", "pytorch", "opencv", "feature-extraction", "face-detection", "augementedreality", "color-quantization", "qrcode-scanner", "face-tracking", "tensorflow", "alex-net", "lstm-model", "localization", "robotics", "kalman-filter"], "description": "This repo provides projects on deep-learning mainly using Tensorflow 2.0"}
{"name": "kyungminjin/hanet", "full_name": "KyungMinJin/HANet", "topics": ["deep-learning", "pytorch", "transformer", "pose-estimation", "video", "wacv2023", "2d-human-pose", "3d-body-recovery", "3d-human-pose", "3d-pose-estimation", "body-reconstruction", "human-pose-estimation"], "description": "Kinematic-aware Hierarchical Attention Network for Human Pose Estimation in Videos (WACV 2023)"}
{"name": "crimeacs/seismic-augmentation", "full_name": "crimeacs/seismic-augmentation", "topics": [], "description": "Pytorch library for seismic data augmentation"}
{"name": "amazon-research/refined", "full_name": "amazon-science/ReFinED", "topics": ["entity-extraction", "entity-linking", "entity-resolution", "nlp", "pytorch"], "description": "ReFinED is an efficient and accurate entity linking (EL) system."}
{"name": "mlsysops/torchscene", "full_name": "breezeml/ml_exp_tracking_benchmark", "topics": ["model-zoo", "pytorch", "deep-learning", "mlflow", "mlops", "neptune", "wandb"], "description": "Evaluate wandb, tensorboard, neptune, mlflow, etc"}
{"name": "princeton-nlp/mabel", "full_name": "princeton-nlp/MABEL", "topics": ["contrastive-learning", "fairness", "natural-language-processing", "gender-bias"], "description": "EMNLP 2022: \"MABEL: Attenuating Gender Bias using Textual Entailment Data\" https://arxiv.org/abs/2210.14975"}
{"name": "sjleo/gcc", "full_name": "SJLeo/GCC", "topics": [], "description": "Pytorch implementation of our paper accepted by NeurIPS 2021 -- Revisiting Discriminator in GAN Compression: A Generator-discriminator Cooperative Compression Scheme"}
{"name": "safreita1/malnet-graph", "full_name": "safreita1/malnet-graph", "topics": ["machine-learning", "graph-algorithms", "data-science", "data-mining", "deep-learning", "geometric-deep-learning", "graph-embedding", "embedded", "representation-learning", "artificial-intelligence", "neural-networks", "graph", "graph-classification"], "description": "A large-scale database for graph representation learning"}
{"name": "tjddus9597/labelrelaxation-cvpr21", "full_name": "tjddus9597/LabelRelaxation-CVPR21", "topics": ["knowledge-distillation", "deep-metric-learning", "pytorch", "cvpr2021", "embedding-trasnfer", "image-retrieval"], "description": "Official PyTorch Implementation of Embedding Transfer with Label Relaxation for Improved Metric Learning, CVPR 2021"}
{"name": "bbuf/onnx2x", "full_name": "BBuf/onnx2X", "topics": [], "description": "ONNX2Pytorch"}
{"name": "ibm/regression-transformer", "full_name": "IBM/regression-transformer", "topics": ["ibm-research-ai", "deep-learning", "generative-modeling", "language-model", "gt4sd", "regression-transformer"], "description": "Regression Transformer code"}
{"name": "chengy12/apnet", "full_name": "CHENGY12/APNet", "topics": ["reid", "person-re-identification", "attention", "pyrimad", "sota", "baseline", "pytorch"], "description": "The official Pytorch implementation of APNet: Person Re-identification via Attention Pyramid "}
{"name": "switchablenorms/adax", "full_name": "switchablenorms/AdaX", "topics": ["gradient-descent", "deep-learning", "adaptive-gradient-descent"], "description": "AdaX: Adaptive Gradient Descent with Exponential Long Term Momery"}
{"name": "eliasnehme/deepstorm3d", "full_name": "EliasNehme/DeepSTORM3D", "topics": [], "description": "DeepSTORM3D implemented in Pytorch"}
{"name": "gngdb/pytorch-minimize", "full_name": "gngdb/pytorch-minimize", "topics": ["pytorch", "python", "scipy"], "description": "Use scipy.optimize.minimize as a PyTorch Optimizer."}
{"name": "taowangzj/llformer", "full_name": "TaoWangzj/LLFormer", "topics": ["benchmark", "low-light-image-enhancement", "transformer", "uhd-lol"], "description": "The code release of paper \"AAAI Ultra-High-Definition Low-Light Image Enhancement: A Benchmark and Transformer-Based Method\", AAAI 2023"}
{"name": "gyunggyung/distilkobilstm", "full_name": "gyunggyung/DistilKoBiLSTM", "topics": ["bert", "bert-multilingua", "bilstm", "distilbert", "distillation", "ele", "electra", "gpt-2", "huggingface", "knowledge-distillation", "kobert", "korean", "korean-nlp", "nlp", "pytorch", "roberta", "t5", "transformer", "xlnet"], "description": "Distilling Task-Specific Knowledge from Teacher Model into BiLSTM"}
{"name": "chandar-lab/patchup", "full_name": "chandar-lab/PatchUp", "topics": ["regularization-methods", "convolutional-neural-network", "pytorch"], "description": null}
{"name": "nerminsamet/hprnet", "full_name": "nerminsamet/HPRNet", "topics": ["pytorch", "deep-learning", "pose-estimation", "whole-body", "hand-pose-estimation", "face-landmark-detection", "2d-pose-estimation", "foot-estimation", "bottom-up", "bottom-up-model", "multi-person-pose-estimation"], "description": "Bottom-up whole-body pose estimation method in constant time."}
{"name": "elttaes/revisiting-plms", "full_name": "elttaes/Revisiting-PLMs", "topics": ["alphafold", "function-prediction", "fitness-prediction", "alphafold2", "benchmark", "contact-prediction", "multiple-sequence-alignment", "protein-annotation", "protein-classification", "protein-language-model", "pytorch", "stability", "esm1b", "metal-ion-binding", "msa-construction", "msa-transformer", "remote-homology-detection", "zero-shot-prediction"], "description": "Exploring Evolution-aware & free protein language models as protein function predictors"}
{"name": "stevinc/transformer_timeseries", "full_name": "stevinc/Transformer_Timeseries", "topics": ["time-series", "transformer", "forecasting", "time-series-forecasting", "deep-learning", "pytorch"], "description": "Pytorch code for Google's Temporal Fusion Transformer"}
{"name": "kwea123/coordinate-mlps", "full_name": "kwea123/Coordinate-MLPs", "topics": ["neural-fields", "pytorch-lightning", "coordinate-mlp", "gaussian-activation", "image-reconstruction"], "description": "Experiments of coordinate MLPs"}
{"name": "lucidrains/htm-pytorch", "full_name": "lucidrains/HTM-pytorch", "topics": ["artificial-intelligence", "deep-learning", "attention-mechanism", "memory"], "description": "Implementation of Hierarchical Transformer Memory (HTM) for Pytorch"}
{"name": "nocoolsandwich/iamqa", "full_name": "nocoolsandwich/iamQA", "topics": ["question-answering", "nlp", "bert"], "description": "\u4e2d\u6587wiki\u767e\u79d1QA\u9605\u8bfb\u7406\u89e3\u95ee\u7b54\u7cfb\u7edf\uff0c\u4f7f\u7528\u4e86CCKS2016\u6570\u636e\u7684NER\u6a21\u578b\u548cCMRC2018\u7684\u9605\u8bfb\u7406\u89e3\u6a21\u578b\uff0c\u8fd8\u6709W2V\u8bcd\u5411\u91cf\u641c\u7d22,\u4f7f\u7528torchserve\u90e8\u7f72"}
{"name": "yangnianzu0515/moleood", "full_name": "yangnianzu0515/MoleOOD", "topics": ["graph-classification", "molecule-representation-learning", "out-of-distribution-generalization", "pytorch"], "description": "Official implementation for the paper \"Learning Substructure Invariance for Out-of-Distribution Molecular Representations\" (NeurIPS 2022)."}
{"name": "astha-chem/mvts-ano-eval", "full_name": "astha-chem/mvts-ano-eval", "topics": ["anomaly-detection", "deep-learning", "time-series"], "description": "A repository for code accompanying the manuscript 'An Evaluation of Anomaly Detection and Diagnosis in Multivariate Time Series' (published at TNNLS)"}
{"name": "minhmanho/deep_preset", "full_name": "minhmanho/deep_preset", "topics": ["retouching-photos", "deep-learning", "style-transfer"], "description": "[WACV'21] Deep Preset: Blending and Retouching Photos with Color Style Transfer"}
{"name": "edureismd/convirt-pytorch", "full_name": "edreisMD/ConVIRT-pytorch", "topics": [], "description": "Contrastive Learning Representations for Images and Text Pairs. Pytorch implementation of ConVIRT Paper."}
{"name": "zhangming8/yolox-pytorch", "full_name": "zhangming8/yolox-pytorch", "topics": ["yolox", "yolox-pytorch", "yolov3", "yolov4", "mot", "pytorch", "object-detection"], "description": "a Pytorch easy re-implement of \"YOLOX: Exceeding YOLO Series in 2021\""}
{"name": "lucasmansilla/dgvgs", "full_name": "lucasmansilla/DGvGS", "topics": ["domain-generalization", "gradient-surgery", "image-classification", "deep-learning", "domain-shift", "pytorch"], "description": "Domain Generalization via Gradient Surgery"}
{"name": "weihaox/tedigan", "full_name": "IIGROUP/TediGAN", "topics": ["image-synthesis", "gan-inversion", "cvpr2021"], "description": "[CVPR 2021] Pytorch implementation for TediGAN: Text-Guided Diverse Face Image Generation and Manipulation"}
{"name": "clorverccy/gedloss_pytorch", "full_name": "ViEm-ccy/GEDLoss_pytorch", "topics": [], "description": "a pytorch  implementation of Google GEDLoss"}
{"name": "jugghm/orepa_cvpr2022", "full_name": "JUGGHM/OREPA_CVPR2022", "topics": ["pytorch", "re-parameterization"], "description": "CVPR 2022 \"Online Convolutional Re-parameterization\""}
{"name": "cmpute/d3d", "full_name": "cmpute/d3d", "topics": ["pytorch", "3d-deep-learning", "visualization", "dataset", "object-detection", "object-tracking"], "description": "Devkit for 3D -- Some utils for 3D object detection based on Numpy and Pytorch"}
{"name": "nihalsid/retrieval-fuse", "full_name": "nihalsid/retrieval-fuse", "topics": ["3d-reconstruction", "deep-learning", "computer-vision", "pytorch", "iccv2021"], "description": "[ICCV21] Code for \"RetrievalFuse: Neural 3D Scene Reconstruction with a Database\""}
{"name": "feiwang96/gtr", "full_name": "FeiWang96/GTR", "topics": ["table-retrieval", "ir", "nlp", "graph-neural-networks"], "description": "[SIGIR 2021] Retrieving Complex Tables with Multi-Granular Graph Representation Learning. "}
{"name": "juanfmontesinos/torch_mir_eval", "full_name": "JuanFMontesinos/torch_mir_eval", "topics": [], "description": "Backpropagable pytorch implementation of https://craffel.github.io/mir_eval/. "}
{"name": "jinkaizheng/trand", "full_name": "JinkaiZheng/TraND", "topics": ["python", "pytorch", "cross-domain", "gait-recognition", "gait", "casia-b", "oulp"], "description": "This is the code for the paper \"Jinkai Zheng, Xinchen Liu, Chenggang Yan, Jiyong Zhang, Wu Liu, Xiaoping Zhang and Tao Mei: TraND: Transferable Neighborhood Discovery for Unsupervised Cross-domain Gait Recognition. ISCAS 2021\" (Best Paper Award - Honorable Mention)"}
{"name": "trt2022/mst-plus-plus-tensorrt", "full_name": "TRT2022/MST-plus-plus-TensorRT", "topics": ["tensorrt", "mst", "transformer", "mstplusplus", "hackathon", "trt2022"], "description": ":poodle: :poodle: :poodle: TensorRT 2022\u590d\u8d5b\u65b9\u6848\uff1a \u9996\u4e2a\u57fa\u4e8eTransformer\u7684\u56fe\u50cf\u91cd\u5efa\u6a21\u578bMST++\u7684TensorRT\u6a21\u578b\u63a8\u65ad\u4f18\u5316"}
{"name": "dayyass/rllib", "full_name": "dayyass/rllib", "topics": ["data-science", "deep-learning", "machine-learning", "python", "reinforcement-learning"], "description": "Reinforcement Learning Library."}
{"name": "audio-captioning/dcase-2020-baseline", "full_name": "audio-captioning/dcase-2020-baseline", "topics": ["audio-captioning", "audio-signal-processing", "captioning", "deep-learning", "deep-neural-networks", "machine-listening", "machine-learning", "signal-processing", "dcase2020", "dcase"], "description": "Audio captioning baseline system for DCASE 2020 challenge. "}
{"name": "saturncloud/dask-pytorch-ddp", "full_name": "saturncloud/dask-pytorch-ddp", "topics": ["pytorch", "machine-learning", "deep-learning", "distributed-computing", "dask", "nlp", "computer-vision"], "description": "dask-pytorch-ddp is a Python package that makes it easy to train PyTorch models on dask clusters using distributed data parallel. "}
{"name": "lambert-x/catenorm", "full_name": "lambert-x/CateNorm", "topics": ["python", "pytorch", "segmentation"], "description": "The official implementation of \"CateNorm: Categorical Normalization for Robust Medical Image Segmentation\""}
{"name": "dkedar7/fast_dash", "full_name": "dkedar7/fast_dash", "topics": ["python", "flask", "plotly-dash", "webdevelopment", "data-science", "machine-learning", "deep-learning", "fast-dash", "data-visualization", "data-analysis", "ui"], "description": "Machine Learning prototypes made easy and fast! Deploy your Python functions in only a handful lines of code."}
{"name": "demelin/moral_stories", "full_name": "demelin/moral_stories", "topics": ["dataset", "nlu", "nlg", "commonsense-reasoning", "social-reasoning", "natural-language-processing", "natural-language-generation", "natural-language-understanding"], "description": "Data and code for the \"Moral Stories: Situated Reasoning about Norms, Intents, Actions, and their Consequences\" (Emelin et al., 2021) paper."}
{"name": "unicredit/charade", "full_name": "andreaferretti/charade", "topics": ["nlp", "nlp-apis", "python"], "description": "A server for multilanguage, composable NLP API in Python"}
{"name": "rapidrabbit76/stable-diffusion-api", "full_name": "rapidrabbit76/stable-diffusion-API", "topics": ["fastapi", "generative-model", "image2image", "pytorch", "stable-diffusion", "text2image", "unofficial-api", "python"], "description": "Unofficial Fastapi implementation of Stable-Diffusion API"}
{"name": "salesforce/query-focused-sum", "full_name": "salesforce/query-focused-sum", "topics": ["nlp", "machine-learning", "deep-learning", "summarization", "neural-network", "question-answering"], "description": "Official code repository for \"Exploring Neural Models for Query-Focused Summarization\"."}
{"name": "raminmh/liquid-s4", "full_name": "raminmh/liquid-s4", "topics": ["deep-learning", "neural-networks", "recurrent-neural-networks", "sequence-modeling", "state-space-models", "time-series", "liquid-neural-networks"], "description": "Liquid Structural State-Space Models"}
{"name": "gordicaleksa/pytorch-naive-video-neural-style-transfer", "full_name": "gordicaleksa/pytorch-naive-video-neural-style-transfer", "topics": ["neural-style-transfer", "video", "python", "pytorch", "machine-learning", "deep-learning", "non-photorealistic-rendering", "neural-style-transfer-tutorial", "semantic-segmentation", "deep-learning-tutorial", "style-transfer"], "description": "Create naive (no temporal loss) NST for videos with person segmentation. Just place your videos in data/, run and you get your stylized and segmented videos."}
{"name": "hpcaitech/cachedembedding", "full_name": "hpcaitech/CachedEmbedding", "topics": ["colossal-ai", "deep-learning", "dlrm", "embeddings", "nlp", "pytorch", "recommandation-system"], "description": "A memory efficient DLRM training solution using ColossalAI"}
{"name": "jefffffu/awesome-differential-privacy-and-meachine-learning", "full_name": "JeffffffFu/Awesome-Differential-Privacy-and-Meachine-Learning", "topics": ["deep-learning", "privacy", "differential-privacy", "dpsgd", "federated-learning"], "description": "\u673a\u5668\u5b66\u4e60\u548c\u5dee\u5206\u9690\u79c1\u7684\u8bba\u6587\u7b14\u8bb0\u548c\u4ee3\u7801\u4ed3"}
{"name": "bupt-ai-cz/bci", "full_name": "bupt-ai-cz/BCI", "topics": ["breast-cancer-detection", "breast-cancer-histopathology", "computer", "image-generation", "image-to-image-translation", "medical-diagnosis", "medical-image-generation", "cnn", "computer-vision", "cvpr2022", "deep-learning", "gan", "pytorch"], "description": "BCI: Breast Cancer Immunohistochemical Image Generation through Pyramid Pix2pix"}
{"name": "hsg-aiml/ssltransformerrs", "full_name": "HSG-AIML/SSLTransformerRS", "topics": ["deep-learning", "earth-observation", "remote-sensing", "self-supervised-learning", "semantic-segmentation"], "description": "Code repository for \"Self-supervised Vision Transformers for Land-cover Segmentation and Classification\", CVPR EarthVision workshop - Best Student Paper Award"}
{"name": "kcl-bmeis/vs_seg", "full_name": "KCL-BMEIS/VS_Seg", "topics": ["deep-learning", "medical-image-segmentation", "pytorch", "monai"], "description": "Automatic Segmentation of Vestibular Schwannoma with MONAI (PyTorch)"}
{"name": "csjunxu/noisy-as-clean-tip2020", "full_name": "csjunxu/Noisy-As-Clean-TIP2020", "topics": ["pytorch"], "description": "PyTorch Code for \"Noisy-As-Clean: Learning Self-supervised Denoising from Corrupted Image\", TIP 2020."}
{"name": "zhaozunjin/retinexdip", "full_name": "zhaozunjin/RetinexDIP", "topics": [], "description": "The pytorch implementation of RetinexDIP, a unified zero-reference deep framework for low-light enhancement."}
{"name": "darrenjkt/see-mtda", "full_name": "darrenjkt/SEE-MTDA", "topics": ["object-detection", "3d-object-detection", "autonomous-driving", "surface-completion", "unsupervised-domain-adaptation", "computer-vision", "deep-learning"], "description": "(RA-L 2022) See Eye to Eye: A Lidar-Agnostic 3D Detection Framework for Unsupervised Multi-Target Domain Adaptation."}
{"name": "ki-ljl/cnn-dogs-vs-cats", "full_name": "ki-ljl/cnn-dogs-vs-cats", "topics": ["cnn", "dogs-vs-cats", "pytorch"], "description": "Implementation of cats-vs-dogs based on CNN."}
{"name": "eidoslab/simplify", "full_name": "EIDOSLAB/simplify", "topics": ["deep-learning", "pruning", "optimization"], "description": "Simplification of pruned models for accelerated inference | SoftwareX https://doi.org/10.1016/j.softx.2021.100907"}
{"name": "allenxiangx/snowflakenet", "full_name": "AllenXiangX/SnowflakeNet", "topics": ["iccv2021", "point-cloud-completion", "deep-learning", "pytorch", "3dvision", "transformers", "tpami2022"], "description": "(TPAMI 2022) Snowflake Point Deconvolution for Point Cloud Completion and Generation with Skip-Transformer"}
{"name": "aaltovision/hscnet", "full_name": "AaltoVision/hscnet", "topics": ["pytorch", "computer-vision", "visual-localization", "camera-relocalization"], "description": "Hierarchical Scene Coordinate Classification and Regression for Visual Localization "}
{"name": "dvelopery0115/torch-nerf", "full_name": "DveloperY0115/torch-NeRF", "topics": ["neural-rendering", "pytorch", "image-based-rendering", "nerf"], "description": "Pytorch implementation of NeRF: Representing Scenes as Neural Radiance Fields for View Synthesis (Mildenhall et al., ECCV 2020 Oral, Best Paper Honorable Mention) and its extension to follow-up research projects"}
{"name": "leaplabthu/efficienttrain", "full_name": "LeapLabTHU/EfficientTrain", "topics": ["computer-vision", "deep-learning", "efficient-training", "pytorch", "machine-learning"], "description": "Reducing the training cost of SOTA deep networks (e.g., ConvNeXts, DeiT, PVT, Swin/CSWin, MAE) by >1.5\u00d7 on ImageNet-1K/22K without sacrificing the accuracy."}
{"name": "yumoxu/marge", "full_name": "yumoxu/marge", "topics": ["query-focused-summarization", "summarization", "nlp", "question-answering", "generation"], "description": "Code for ACL 21: Generating Query Focused Summaries from Query-Free Resources"}
{"name": "arpanmangal/covidaid", "full_name": "arpanmangal/CovidAID", "topics": ["coronavirus", "covid-19", "chest-xray", "machine-learning", "deep-learning", "cnn", "densenet121", "pytorch", "chexnet"], "description": "COVID-19 Detection Using Chest X-Ray"}
{"name": "nitin-rathi/hybrid-snn-conversion", "full_name": "nitin-rathi/hybrid-snn-conversion", "topics": ["pytorch", "snn", "ann-snn-conversion", "deep-learning", "backpropagation-algorithm", "spiking-neural-networks"], "description": "Training spiking networks with hybrid ann-snn conversion and spike-based backpropagation"}
{"name": "tchaton/lightning-geometric", "full_name": "tchaton/lightning-geometric", "topics": [], "description": "Integrate pytorch"}
{"name": "chaitjo/gated-graph-transformers", "full_name": "chaitjo/gated-graph-transformers", "topics": ["transformers", "graph-neural-networks", "graph-representation-learning", "deep-learning", "pytorch"], "description": "Transformers are Graph Neural Networks!"}
{"name": "kesslerlib/kessler", "full_name": "kesslerlib/kessler", "topics": ["machine-learning", "deep-learning", "spacecraft-collision-avoidance", "space-debris", "satellite-conjunction-analysis", "probabilistic-programming", "probabilistic-models", "conjunction-data-messages"], "description": "A machine learning library for spacecraft collision avoidance"}
{"name": "hcnoh/gail-pytorch", "full_name": "hcnoh/gail-pytorch", "topics": ["pytorch", "reinforcement-learning", "deep-learning", "deep-reinforcement-learning", "gail", "imitation-learning", "openai-gym"], "description": "A simple implementation of Generative Adversarial Imitation Learning with PyTorch"}
{"name": "lance0218/pytorch-distributeddataparallel-training-tricks", "full_name": "Lance0218/Pytorch-DistributedDataParallel-Training-Tricks", "topics": ["pytorch", "pytorch-distributeddataparallel", "distributed", "apex", "warmup", "learning-rate-scheduling", "early-stopping", "random-seeds"], "description": "A guide that integrates Pytorch DistributedDataParallel, Apex, warmup, learning rate scheduler, also mentions the set-up of early-stopping and random seed."}
{"name": "kaifishr/pytorchrelevancepropagation", "full_name": "kaifishr/PyTorchRelevancePropagation", "topics": ["interactive", "lrp", "pytorch", "real-time", "relevance-propagation"], "description": "A basic implementation of Layer-wise Relevance Propagation (LRP) in PyTorch."}
{"name": "riccorl/transformers-embedder", "full_name": "Riccorl/transformers-embedder", "topics": ["nlp", "bert", "transformer", "transformers", "allennlp", "huggingface", "huggingface-transformers", "tokenizer", "natural-language-processing", "python", "pytorch", "deep-learning", "transformer-embedder", "embeddings", "sentences", "hidden-states", "preprocess", "pretrained-models", "transformers-embedder", "language-model"], "description": "A Word Level Transformer layer based on PyTorch and \ud83e\udd17 Transformers."}
{"name": "wzjialang/mfpnet", "full_name": "wzjialang/MFPNet", "topics": ["change-detection", "remote-sensing", "deep-learning", "feature-fusion", "perceptual-loss", "attention-mechanism"], "description": "PyTorch implementation for \"Remote Sensing Change Detection Based on Multidirectional Adaptive Feature Fusion and Perceptual Similarity\""}
{"name": "cheind/pytorch-debayer", "full_name": "cheind/pytorch-debayer", "topics": ["debayer", "demosaicing", "bayer", "bayer-filter-array", "pytorch", "convolution"], "description": "Convolutional PyTorch debayering / demosaicing layers"}
{"name": "ternaus/midv-500-models", "full_name": "ternaus/midv-500-models", "topics": ["deep-learning", "computer-vision", "semantic-segmentation", "image-segmentation", "document-scanner", "pytorch", "python"], "description": "Model for document segmentation trained on the midv-500-models dataset."}
{"name": "stonezwr/tssl-bp", "full_name": "stonezwr/TSSL-BP", "topics": [], "description": "Pytorch implementation of TSSL-BP rule for Deep Spiking Neural Networks."}
{"name": "p208p2002/transformer-qg-on-squad", "full_name": "p208p2002/Transformer-QG-on-SQuAD", "topics": ["question-generation", "squad", "pytorch-lightning", "bart", "gpt2", "text-generation", "t5-model", "bert", "roberta", "albert", "flask", "api-server", "question-generator"], "description": "Implement Question Generator with SOTA pre-trained Language Models (RoBERTa, BERT, GPT, BART, T5, etc.)"}
{"name": "lusinlu/biasloss_skipblocknet", "full_name": "lusinlu/bias-loss-skipblocknet", "topics": ["deep-learning", "loss-functions", "mobilenet", "mobile-networks", "machine-learning", "objective-functions", "pytorch", "pytorch-implementation"], "description": "[ICCV 2021]Code for the the bias loss and evaluation of SkipblockNet model on ImageNet validation set"}
{"name": "microsoft/list", "full_name": "microsoft/LiST", "topics": ["nlp", "liteweight", "machine-learning-algorithms", "few-shot-learning", "nlu", "pytorch", "deep-learning", "prompt-based"], "description": "Lite Self-Training "}
{"name": "shoarora/transformers-trainers", "full_name": "shoarora/transformers-trainers", "topics": [], "description": "Tools for training pytorch language models"}
{"name": "13952522076/open-set-recognition", "full_name": "ma-xu/Open-Set-Recognition", "topics": ["open-set-recognition", "openmax", "oltr", "center-loss", "cifar", "pytorch", "mnist", "imagenet", "openset", "openset-classification", "openset-recognition", "open-set"], "description": "Open Set Recognition"}
{"name": "karnwatcharasupat/latte", "full_name": "karnwatcharasupat/latte", "topics": ["machine-learning", "python", "deep-learning"], "description": "Latte: Cross-framework Python Package for Evaluation of Latent-based Generative Models"}
{"name": "zengxianyu/co-mod-gan-pytorch", "full_name": "zengxianyu/co-mod-gan-pytorch", "topics": ["pytorch", "deep-learning", "gan", "generative-adversarial-network", "inpainting", "image-inpainting", "iclr2021", "image-completion"], "description": "pytorch implementation of the paper ``Large Scale Image Completion via Co-Modulated Generative Adversarial Networks\""}
{"name": "shivangi-aneja/tafim", "full_name": "sanonymous22/TAFIM", "topics": ["adversarial-attacks", "computer-vision", "deep-learning", "deepfake-detection", "deepfakes", "image-manipulation", "image-manipulation-detection", "generative-adversarial-network", "image-translation", "stylegan2", "eccv2022", "eccv", "eccv-2022", "styleclip"], "description": "TAFIM: Targeted Adversarial Attacks against Facial Image Manipulation (ECCV 2022)"}
{"name": "megvii-research/mm2022-vicoperceptualheadgeneration", "full_name": "megvii-research/MM2022-ViCoPerceptualHeadGeneration", "topics": ["video-generation", "pytorch"], "description": "MM2022 Workshop-Perceptual Conversational Head Generation with Regularized Driver and Enhanced Renderer"}
{"name": "suicao/pytorch-audio-emotion-recognition", "full_name": "suicao/Pytorch-Audio-Emotion-Recognition", "topics": ["audio", "sentiment-classification", "cnn", "pytorch"], "description": "1st Place Public Leaderboard Solution for ERC2019"}
{"name": "confusezius/eccv2020_diva_multifeature_dml", "full_name": "Confusezius/ECCV2020_DiVA_MultiFeature_DML", "topics": ["deep-metric-learning", "metric-learning", "deep-learning", "image-retrieval", "wandb", "cub200-2011", "cars196", "stanford-online-products"], "description": "(ECCV 2020) This repo contains code for \"DiVA: Diverse Visual Feature Aggregation for Deep Metric Learning\" (https://arxiv.org/abs/2004.13458), which extends vanilla DML with auxiliary and self-supervised features."}
{"name": "cloud-cv/vilbert-multi-task", "full_name": "Cloud-CV/vilbert-multi-task", "topics": ["machine-learning", "deep-learning", "cnn", "visual-question-answering", "python3", "javascript", "redis", "rabbitmq", "postgresql", "channels", "web-sockets"], "description": ":eyes: :speaking_head: :memo:12-in-1: Multi-Task Vision and Language Representation Learning Web Demo"}
{"name": "horenbergerb/friendsimulator", "full_name": "horenbergerb/FriendSimulator", "topics": ["ai", "ml", "gpt2", "gpt2-chatbot", "machine-learning", "huggingface", "huggingface-transformers", "nlp", "gpt-2"], "description": "Uses GPT2 to simulate your friends"}
{"name": "camtl/ca-mtl", "full_name": "CAMTL/CA-MTL", "topics": ["multitask-learning", "natural-language-processing", "natural-language-understanding", "ca-mtl"], "description": "Conditionally Adaptive Multi-Task Learning: Improving Transfer Learning in NLP Using Fewer Parameters & Less Data"}
{"name": "eryixie/planerecnet", "full_name": "EryiXie/PlaneRecNet", "topics": ["pytorch", "deep-learning", "computer-vision"], "description": "This is an official implementation for \"PlaneRecNet\" (BMVC 2021)."}
{"name": "bupt-ai-cz/balnmp", "full_name": "bupt-ai-cz/BALNMP", "topics": ["breast-cancer", "breast-cancer-classification", "breast-cancer-prediction", "axillary-lymph-node-metastasis", "deep-learning", "primary-tumor-classification", "biopsy", "metastasis", "wsi-images"], "description": "Predicting Axillary Lymph Node Metastasis in Early Breast Cancer Using Deep Learning on Primary Tumor Biopsy Slides, BCNB Dataset"}
{"name": "yoosunghyun/pytorch-lightning-template", "full_name": "YooSungHyun/pytorch-lightning-template", "topics": ["pytorch-lightning", "pytorch-lightning-template", "template", "deep-learning", "pytorch"], "description": "my useful torch lightning training template"}
{"name": "lucidrains/token-shift-gpt", "full_name": "lucidrains/token-shift-gpt", "topics": ["artificial-intelligence", "deep-learning"], "description": "Implementation of Token Shift GPT - An autoregressive model that solely relies on shifting the sequence space for mixing"}
{"name": "ozanciga/diffusion-for-beginners", "full_name": "ozanciga/diffusion-for-beginners", "topics": ["dall-e", "diffusion", "imagen", "midjourney", "scheduler", "stable-diffusion", "pytorch"], "description": "denoising diffusion models, as simple as possible"}
{"name": "xinshaoamoswang/deepcriticallearning", "full_name": "XinshaoAmosWang/DeepCriticalLearning", "topics": ["bert-transformer", "convolutional-neural-networks", "deep-learning", "image-classification", "protein-function-prediction", "pytorch", "protein-transformer", "protein-classification", "protein-design", "protein-localization"], "description": "Deep Critical Learning. Implementation of ProSelfLC, IMAE, DM, etc. "}
{"name": "mstoelzle/solving-occlusion", "full_name": "mstoelzle/solving-occlusion", "topics": ["pytorch", "terrain-mapping", "deep-learning", "robotics", "inpainting"], "description": "ETH Z\u00fcrich Master thesis on Solving Occlusion in Terrain Mapping with Neural Networks"}
{"name": "hibugs/centernet", "full_name": "HiBugs/CenterNet", "topics": ["pytorch", "centernet", "face-detection", "seaships-detection", "centerface"], "description": "pytorch \u4f7f\u7528centernet\u8fdb\u884c \u4eba\u8138\u68c0\u6d4bFace Detection (bbox + landmark)\u3001 \u8239\u53ea\u68c0\u6d4bSeaShips Detection"}
{"name": "tuvuumass/task-transferability", "full_name": "tuvuumass/task-transferability", "topics": ["transfer-learning", "natural-language-processing", "bert", "task-transferability", "nlp-tasks", "emnlp2020"], "description": "Data and code for our paper \"Exploring and Predicting Transferability across NLP Tasks\", to appear at EMNLP 2020. "}
{"name": "ricolike/mmgnn_textvqa", "full_name": "likenneth/mmgnn_textvqa", "topics": ["gnn", "vqa", "pytorch"], "description": "A Pytorch implementation of CVPR 2020 paper: Multi-Modal Graph Neural Network for Joint Reasoning on Vision and Scene Text"}
{"name": "wangyx240/high-resolution-image-inpainting-gan", "full_name": "wangyx240/High-Resolution-Image-Inpainting-GAN", "topics": [], "description": "Pytorch Re-implementation of \"Contextual Residual Aggregation for Ultra High-Resolution Image Inpainting\"(CVPR 2020 Oral)"}
{"name": "namkyeong/bgrl_pytorch", "full_name": "Namkyeong/BGRL_Pytorch", "topics": ["pytorch", "graph", "representation-learning", "graphneuralnetwork"], "description": "Pytorch implementation of \"Large-Scale Representation Learning on Graphs via Bootstrapping\""}
{"name": "daiquocnguyen/quatre", "full_name": "daiquocnguyen/QuatRE", "topics": ["knowledge-graph-embeddings", "knowledge-graph-completion", "knowledge-base-completion", "link-prediction", "quaternion-algebra", "hamilton-product"], "description": "QuatRE: Relation-Aware Quaternions for Knowledge Graph Embeddings (TheWebConf WWW 2022) (Pytorch)"}
{"name": "agaldran/cost_sensitive_loss_classification", "full_name": "agaldran/cost_sensitive_loss_classification", "topics": [], "description": "A straightforward mechanism to implement cost sensitive losses in pytorch"}
{"name": "feigsss/dysat_pytorch", "full_name": "FeiGSSS/DySAT_pytorch", "topics": [], "description": "Pytorch implementation of DySAT: Deep Neural Representation Learning on Dynamic Graphs via Self-Attention Networks"}
{"name": "anisha2102/docvqa", "full_name": "anisha2102/docvqa", "topics": ["visual-question-answering", "computer-vision", "deep-learning", "document-analysis"], "description": "Document Visual Question Answering"}
{"name": "powerycy/efficient-globalpointer", "full_name": "powerycy/Efficient-GlobalPointer", "topics": [], "description": "pytorch Efficient GlobalPointer "}
{"name": "constantinpape/torch-em", "full_name": "constantinpape/torch-em", "topics": [], "description": "Deep-learning based semantic and instance segmentation for 3D Electron Microscopy and other bioimage analysis problems based on pytorch."}
{"name": "dayyass/pytorch_ner", "full_name": "dayyass/pytorch-ner", "topics": ["deep-learning", "natural-language-processing", "nlp", "pytorch", "named-entity-recognition", "ner", "lstm", "text", "pipeline", "rnn", "onnx", "machine-learning", "python", "hacktoberfest"], "description": "Pipeline for training NER models using PyTorch."}
{"name": "r0maink/outperformer", "full_name": "r0mainK/outperformer", "topics": ["pytorch", "transformer", "performer", "reformer"], "description": "Code for scaling Transformers"}
{"name": "holywu/vs-dpir", "full_name": "HolyWu/vs-dpir", "topics": ["vapoursynth", "dpir", "pytorch", "tensorrt"], "description": "DPIR function for VapourSynth"}
{"name": "sooftware/lasr", "full_name": "sooftware/lightning-asr", "topics": ["asr", "speech-recognition", "pytorch-lightning", "conformer", "hydra"], "description": "Modular and extensible speech recognition library leveraging pytorch-lightning and hydra."}
{"name": "hate-alert/tutorial-resources", "full_name": "hate-alert/Tutorial-Resources", "topics": ["hatespeech", "hate-speech-detection", "hate-speech", "counterspeech", "twitter", "tutorial", "icwsm2021", "nlp", "natural-language-processing", "bert-model", "xlmroberta", "xlm-roberta", "huggingface-transformers", "huggingface", "abuse-detection"], "description": "Resources and tools for the Tutorial - \"Hate speech detection, mitigation and beyond\" presented at ICWSM 2021"}
{"name": "jcy132/hneg_src", "full_name": "jcy132/Hneg_SRC", "topics": [], "description": "Official Pytorch implementation of \"Exploring Patch-wise Semantic Relation for Contrastive Learning in Image-to-Image Translation Tasks\" (CVPR 2022)"}
{"name": "juanfmontesinos/vovit", "full_name": "JuanFMontesinos/VoViT", "topics": ["audio", "graph", "transformer"], "description": "VoViT: Low Latency Graph-based Audio-Visual VoiceSeparation Transformer"}
{"name": "xingyuuchen/tri-depth", "full_name": "xingyuuchen/tri-depth", "topics": ["depth-estimation", "self-supervised-learning", "monocular-depth", "computer-vision", "pytorch", "kitti", "self-supervised"], "description": "[WACV 2023] Self-Supervised Monocular Depth Estimation: Solving the Edge-Fattening Problem"}
{"name": "ganjinzero/triaffine-nested-ner", "full_name": "GanjinZero/Triaffine-nested-ner", "topics": ["ner", "nlp"], "description": "Fusing Heterogeneous Factors with Triaffine Mechanism for Nested Named Entity Recognition [ACL 2022 Findings]"}
{"name": "zhiyuandang/nnm", "full_name": "ZhiyuanDang/NNM", "topics": ["clustering", "deep-learning"], "description": "The PyTorch official implementation of the CVPR2021 Poster Paper NNM: Nearest Neighbor Matching for Deep Clustering."}
{"name": "geopi1/deepmri", "full_name": "geopi1/DeepMRI", "topics": ["mridata", "super-resolution", "kspace", "kspace-deep-learning", "mri", "mri-reconstruction", "interpolation"], "description": "Pytorch implementation of RAKI, k-space interpolation of MRI data"}
{"name": "kamalesh0406/audio-classification", "full_name": "kamalesh0406/Audio-Classification", "topics": [], "description": "Pytorch code for \"Rethinking CNN Models for Audio Classification\""}
{"name": "helmholtzai-consultants-munich/quicksetup-ai", "full_name": "HelmholtzAI-Consultants-Munich/Quicksetup-ai", "topics": ["deep-learning", "pytorch-lightning"], "description": "A flexible template, as a quick setup for deep learning projects in pytorch-lightning "}
{"name": "murtyshikhar/expbert", "full_name": "MurtyShikhar/ExpBERT", "topics": ["nlp", "bert"], "description": "Code for our ACL '20 paper \"Representation Engineering with Natural Language Explanations\""}
{"name": "shellysheynin/a-hierarchical-transformation-discriminating-generative-model-for-few-shot-anomaly-detection", "full_name": "shellysheynin/A-Hierarchical-Transformation-Discriminating-Generative-Model-for-Few-Shot-Anomaly-Detection", "topics": ["gan", "anomaly-detection", "few-shot", "official", "defect-detection", "self", "supervised-learning", "pytorch", "transformation", "localization"], "description": "Official pytorch implementation of the paper: \"A Hierarchical Transformation-Discriminating Generative Model for Few Shot Anomaly Detection\""}
{"name": "retarfi/language-pretraining", "full_name": "retarfi/language-pretraining", "topics": ["nlp", "natural-language-processing", "pytorch", "transformer", "implementation", "language-models", "language-model", "bert", "electra"], "description": "Pre-training Language Models for Japanese"}
{"name": "ruanchaves/hashformers", "full_name": "ruanchaves/hashformers", "topics": ["hashtag-segmentor", "word-segmentation", "transformers", "transformers-gpt2", "deep-learning", "nlp", "twitter", "tweet-analysis", "tweets-classification", "sentiment-analysis", "sentiment-classification", "sentiment-polarity", "twitter-sentiment-analysis", "natural-language-processing", "bert", "transformer", "segmentation", "paper"], "description": "Hashformers is a framework for hashtag segmentation with transformers."}
{"name": "keonlee9420/robust_fine_grained_prosody_control", "full_name": "keonlee9420/Robust_Fine_Grained_Prosody_Control", "topics": ["speech-synthesis", "pytorch", "robust", "prosody", "tts", "expressive-speech-synthesis", "expressive-tts", "text-to-speech", "controllable-tts", "controllable-speech-synthesis"], "description": "PyTorch Implementation of Robust and fine-grained prosody control of end-to-end speech synthesis"}
{"name": "weixmath/view-gcn", "full_name": "weixmath/view-GCN", "topics": [], "description": "Pytorch code for view-GCN (CVPR2020)"}
{"name": "ai4finance-llc/elegant-finrl", "full_name": "AI4Finance-Foundation/FinRL_Podracer", "topics": ["deep-reinforcement-learning", "machine-learning-algorithms", "quantitative-finance", "quant", "algorithmic-trading", "pytorch", "openai-gym"], "description": "Cloud-native Financial Reinforcement Learning"}
{"name": "zzy979/pytorch-tutorial", "full_name": "ZZy979/pytorch-tutorial", "topics": ["pytorch", "pytorch-tutorial", "graph-neural-network"], "description": "PyTorch\u793a\u4f8b\u4ee3\u7801\uff1b\u590d\u73b0GNN\u6a21\u578b"}
{"name": "yanbeic/ccl", "full_name": "yanbeic/CCL", "topics": ["compositional-contrastive-learning", "audio-teacher-models", "multi-modal-distillation", "distillation", "audio-visual-learning", "cvpr2021", "contrastive-learning", "pytorch", "video-recognition"], "description": "PyTorch Implementation on Paper [CVPR2021]Distilling Audio-Visual Knowledge by Compositional Contrastive Learning"}
{"name": "rizki4106/netrade", "full_name": "rizki4106/netrade", "topics": ["artificial-intelligence", "cryptocurrency", "neural-network", "stock", "trading"], "description": "AI Trading assistant with professional trader approach"}
{"name": "yif-zhang/regionproxy", "full_name": "YiF-Zhang/RegionProxy", "topics": ["computer-vision", "cvpr2022", "semantic-segmentation", "vision-transformer", "pytorch"], "description": "[CVPR22] Official codebase of Semantic Segmentation by Early Region Proxy."}
{"name": "cyk1337/highway-transformer", "full_name": "cyk1337/Highway-Transformer", "topics": ["highway-transformer", "transformer-xl", "language-model", "pytorch", "transformer", "gating-transformer", "gated-attention"], "description": "[ACL\u201820] Highway Transformer: A Gated Transformer."}
{"name": "cbica/brainmage", "full_name": "CBICA/BrainMaGe", "topics": ["pytorch", "pytorch-lightning", "python", "neuroimaging", "brain-extraction", "nih", "deep-learning", "machine-learning", "skull-stripping", "segmentation"], "description": "Brain extraction in presence of abnormalities, using single and multiple MRI modalities"}
{"name": "abaldrati/clip4cir", "full_name": "ABaldrati/CLIP4Cir", "topics": ["cirr", "clip", "image-retrieval", "multimodal", "pytorch", "fashioniq", "deep-learning"], "description": "CLIP for Composed image retrieval training code"}
{"name": "hyperdimensional-computing/torchhd", "full_name": "hyperdimensional-computing/torchhd", "topics": ["hdc", "hyperdimensional-computing", "pytorch", "vector-symbolic-architectures", "vsa", "hd-computing", "symbolic-ai"], "description": "Torchhd is a Python library for Hyperdimensional Computing and Vector Symbolic Architectures"}
{"name": "jgamper/intrinsic-dimensionality", "full_name": "jgamper/intrinsic-dimensionality", "topics": ["deep-learning", "pytorch"], "description": "Use this package to compute intrinsic dimensionality of your task given a fixed neural network in PYTORCH! :fire:"}
{"name": "whitegive-boy/cws-hmm_bilstm-crf", "full_name": "WhiteGive-Boy/CWS-Hmm_BiLSTM-CRF", "topics": [], "description": "CWS\u4e2d\u6587\u5206\u8bcd HMM BiLSTM+CRF pytorch \u7ec6\u81f4\u5b9e\u73b0"}
{"name": "shivangi-aneja/cosmos", "full_name": "sanonymous22/COSMOS", "topics": ["dataset", "misinformation", "cheapfakes", "fake-news", "deepfakes", "deepfake-detection", "computer-vision", "deep-learning", "pytorch", "machine-learning", "nlp"], "description": "COSMOS: Catching Out-of-Context Misinformation using Self Supervised Learning (AAAI 2023)"}
{"name": "lee-gihun/mediar", "full_name": "Lee-Gihun/MEDIAR", "topics": ["biomedical", "cell-biology", "cell-segmentation", "instance-segmentation", "monai", "multi-modality", "neurips-2022", "pytorch", "pytorch-implementation", "pytorch-segmentation", "vision-transformer", "miscroscopy", "multi-resolution"], "description": "(NeurIPS 2022 CellSeg Challenge - 1st Winner) Open source code for \"MEDIAR: Harmony of Data-Centric and Model-Centric for Multi-Modality Microscopy\""}
{"name": "alphaplustt/mipnerf-pytorch", "full_name": "AlphaPlusTT/mipnerf-pytorch", "topics": [], "description": "mipnerf-pytorch and under development"}
{"name": "xindongzhang/simpleir", "full_name": "xindongzhang/SimpleIR", "topics": ["pytorch", "super-resolution", "efficient", "mobile"], "description": "A Simple framework for image restoration, it includes ECBSR, ELAN and other SOTAs."}
{"name": "yumeng5/supergen", "full_name": "yumeng5/SuperGen", "topics": ["zero-shot-learning", "natural-language-processing", "natural-language-understanding", "pretrained-language-model", "text-generation", "text-classification"], "description": "[NeurIPS 2022] Generating Training Data with Language Models: Towards Zero-Shot Language Understanding"}
{"name": "mcspooder/camull-net", "full_name": "McSpooder/camull-net", "topics": ["deep-learning", "machine-learning", "pytorch"], "description": "A 3D convolutional neural network for the classification of Alzheimer's disease and its precursor Mild Cognitive Impairement."}
{"name": "tanh-wink/semantic-similarity", "full_name": "Tanh-wink/semantic-similarity", "topics": ["semantic", "similarity", "word2vec", "wmd", "bert"], "description": "semantic similarity\uff0c word2vec + wmd\uff0c bert+wmd\uff0c pytorch"}
{"name": "binliang-nlp/aagcn-acsa", "full_name": "BinLiang-NLP/AAGCN-ACSA", "topics": ["sentiment-analysis", "nlp", "knowledge-base", "graph-neural-networks", "affective-knowledge"], "description": "[EMNLP 2021] Beta Distribution Guided Aspect-aware Graph for Aspect Category Sentiment Analysis with Affective Knowledge"}
{"name": "rg2/deepfluorolabeling-ipcai2020", "full_name": "rg2/DeepFluoroLabeling-IPCAI2020", "topics": ["landmark-detection", "semantic-segmentation", "registration", "2d-3d-registration", "x-ray-navigation", "orthopaedics", "pytorch", "u-net", "convolutional-neural-networks", "fluoroscopy", "x-ray"], "description": "Code and data for the \"annotation\" component of the IPCAI 2020 paper: \"Automatic Annotation of Hip Anatomy in Fluoroscopy for Robust and Efficient 2D/3D Registration.\" https://arxiv.org/abs/1911.07042 or https://doi.org/10.1007/s11548-020-02162-7"}
{"name": "jinglescode/ssvep-multi-task-learning", "full_name": "jinglescode/ssvep-multi-task-learning", "topics": ["eeg", "deep-learning", "convolutional-neural-network", "pytorch", "brain-computer-interface", "bci", "cnn", "multitask-learning", "ssvep"], "description": "Using multi-task learning to capture signals simultaneously from the fovea efficiently and the neighboring targets in the peripheral vision generate a visual response map. A calibration-free user-independent solution, desirable for clinical diagnostics. A stepping stone for an objective assessment of glaucoma patients\u2019 visual field."}
{"name": "nickhuang1996/hjl-re-id", "full_name": "nickhuang1996/HJL-re-id", "topics": ["region-segmentation", "unsupervised-learning", "person-reidentification", "occlusion-detection", "deep-learning"], "description": "A awesome project for person re-id. There are re-implements of PCB, MGN, MDRS(ours), PGFA, Pyramidal and HOReID."}
{"name": "mims-harvard/subgnn", "full_name": "mims-harvard/SubGNN", "topics": ["graph-neural-networks", "subgraphs", "graph-representation-learning", "embeddings", "deep-learning", "dataset"], "description": "Subgraph Neural Networks (NeurIPS 2020)"}
{"name": "jiupinjia/deep-adversarial-decomposition", "full_name": "jiupinjia/Deep-adversarial-decomposition", "topics": [], "description": "Pytorch implementation of the paper: \"A Unified Framework for Separating Superimposed Images\", in CVPR 2020."}
{"name": "rentainhe/trar-vqa", "full_name": "rentainhe/TRAR-VQA", "topics": ["vqav2", "iccv2021", "transformer", "clevr", "multi-modal", "vision-and-language", "visual-question-answering", "pytorch", "multi-scale-features", "dynamic-network", "attention", "local-and-global", "multi-modality", "visualization", "multi-modal-learning", "official"], "description": "[ICCV 2021] TRAR: Routing the Attention Spans in Transformers for Visual Question Answering"}
{"name": "juliagusak/neural-ode-metasolver", "full_name": "juliagusak/neural-ode-metasolver", "topics": ["neural-network", "pytorch", "ordinary-differential-equations", "neural-ode", "solver", "runge-kutta", "parametrized", "robustness", "adversarial-attacks"], "description": "Supplementary code for the paper  \"Meta-Solver for Neural Ordinary Differential Equations\"  https://arxiv.org/abs/2103.08561"}
{"name": "yiconghong/entity-graph-vln", "full_name": "YicongHong/Entity-Graph-VLN", "topics": ["vision-and-language-navigation", "graph-neural-networks", "deep-learning", "neurips-2021"], "description": "Code of the NeurIPS 2021 paper: Language and Visual Entity Relationship Graph for Agent Navigation"}
{"name": "lhryang/crl_egpg", "full_name": "LHRYANG/CRL_EGPG", "topics": [], "description": "Pytorch Implementation of \"Contrastive Representation Learning for Exemplar-Guided Paraphrase Generation\" "}
{"name": "rohanchacko/peeledhuman", "full_name": "RohanChacko/PeeledHuman", "topics": ["reconstruction-humans", "pytorch"], "description": "[3DV 2020] PeeledHuman: Robust Shape Representation for Textured 3D Human Body Reconstruction"}
{"name": "gursi26/virtual_drawing_board", "full_name": "gursi26/virtual_drawing_board", "topics": ["deep-learning", "deep-neural-networks", "python", "pytorch", "computer-vision", "opencv", "pose-estimation", "hacktoberfest", "hacktoberfest2021"], "description": "Virtual whiteboard with hand pose estimation"}
{"name": "debeshjha/resunetplusplus-with-crf-and-tta", "full_name": "DebeshJha/ResUNetPlusPlus-with-CRF-and-TTA", "topics": ["semantic-segmentation", "convolutional-neural-networks", "computer-vision", "image-segmentation", "unet-image-segmentation", "deep-learning", "unet", "resunet", "resunet-architecture", "medical-imaging", "pytorch", "pytorch-implementation", "segmentation", "tensorflow", "image-segmantation"], "description": "ResUNet++, CRF, and TTA  for segmentation of medical images  (IEEE JBIHI)"}
{"name": "yuk6heo/ivos-atnet", "full_name": "yuk6heo/IVOS-ATNet", "topics": ["video-object-segmentation"], "description": "Pytorch implementation of ECCV2020 paper, \"Interactive Video Object Segmentation Using Global and Local Transfer Modules\""}
{"name": "minerva-j/pytorch-segmentation-multi-models", "full_name": "Minerva-J/Pytorch-Segmentation-multi-models", "topics": [], "description": "Pytorch implementation for Semantic Segmentation with multi models (Deeplabv3, Deeplabv3_plus, PSPNet, UNet, UNet_AutoEncoder, UNet_nested, R2AttUNet, AttentionUNet, RecurrentUNet,, SEGNet, CENet, DsenseASPP, RefineNet, RDFNet)"}
{"name": "alexts1980/covid-ct-mask-net", "full_name": "AlexTS1980/COVID-CT-Mask-Net", "topics": ["ct-scans", "covid", "segmentation-model", "classification-model", "covid-19", "mask-rcnn", "computer-tomograpy", "computer-vision", "deep-learning", "mask", "chest"], "description": "Segmentation and Classification models for COVID CT scans (COVID, pneumonia, normal) based on Mask R-CNN."}
{"name": "xuxy09/rsc-net", "full_name": "xuxy09/RSC-Net", "topics": ["deep-learning", "3d", "3d-human-shape-and-pose-estimation", "3d-human-mesh", "weakly-supervised-learning", "contrastive-learning", "computer-vision"], "description": "Implementation for \"3D human pose, shape and texture from low-resolution images and videos\", TPAMI 2021"}
{"name": "hobincar/sgn", "full_name": "hobincar/SGN", "topics": [], "description": "Official pytorch implementation of the AAAI 2021 paper \"Semantic Grouping Network for Video Captioning\""}
{"name": "asrani1/live-cctv", "full_name": "AsRaNi1/live-cctv", "topics": ["deep-learning", "computer-vision", "neural-network", "python", "convolutional-neural-networks", "yolov3", "yolo", "machine-learning", "cosine-similarity", "object-detection", "cctv-cameras", "cctv", "motion-detection", "frame-change-detection", "image-classification", "euclidean-distances", "darknet"], "description": "To detect any reasonable change in a live cctv to avoid large storage of data. Once, we notice a change, our goal would be track that object or person causing it. We would be using Computer vision concepts. Our major focus will be on Deep Learning and will try to add as many features in the process. "}
{"name": "naszilla/nas-encodings", "full_name": "naszilla/nas-encodings", "topics": ["automl", "nas", "nasbench", "deep-learning", "automl-algorithms", "automl-experiments", "neural-architecture-search", "tensorflow", "pytorch"], "description": "Encodings for neural architecture search"}
{"name": "acids-ircam/wavae", "full_name": "acids-ircam/wavae", "topics": [], "description": "Realtime Variational Autoencoder built on top of libtorch and PureData"}
{"name": "huicongzhang/stdan", "full_name": "huicongzhang/STDAN", "topics": ["deblur", "pytorch", "video-deblur", "eccv2022"], "description": "Implementation of \"Spatio-Temporal Deformable Attention Network for Video Deblurring\". (Zhang et al., ECCV 2022)"}
{"name": "lourencovazpato/seeing-without-looking", "full_name": "LourencoVazPato/seeing-without-looking", "topics": ["deep-learning", "object-detection", "recurrent-neural-networks", "pytorch", "cvpr2020"], "description": "PyTorch implementation for Seeing without Looking: Contextual Rescoring of Object Detections for AP Maximization (CVPR 2020)"}
{"name": "oml-team/open-metric-learning", "full_name": "OML-Team/open-metric-learning", "topics": ["computer-vision", "data-science", "deep-learning", "metric-learning", "pytorch", "pytorch-lightning", "representation-learning", "hacktoberfest", "similarity-learning"], "description": "Library for metric learning pipelines"}
{"name": "chaineypung/ccf-bdci-2021-ultrasonic-image-tumor-segmentation-rank1st", "full_name": "chaineypung/CCFBDCI-2021-Ultrasonic-Tumor-Segmentation-Rank1st", "topics": ["ultrasound-imaging", "hemangioma", "tumor-segmentation", "pytorch", "deep-neural-networks", "medical-imaging"], "description": "This is the source code of the 1st place solution for segmentation task (with Dice 90.32%) in 2021 CCF BDCI challenge."}
{"name": "machelreid/lewis", "full_name": "machelreid/lewis", "topics": ["nlp", "machine-learning", "style-transfer", "editing"], "description": "Official code for LEWIS, from:  \"LEWIS: Levenshtein Editing for Unsupervised Text Style Transfer\", ACL-IJCNLP 2021 Findings by Machel Reid and Victor Zhong"}
{"name": "hpi-xnor/bitorch", "full_name": "hpi-xnor/bitorch", "topics": ["binary-neural-networks", "deep-learning", "python", "pytorch"], "description": "BITorch: Open-Source Implementation of Binary Neural Networks with PyTorch"}
{"name": "ponimatkin/focalpose", "full_name": "ponimatkin/focalpose", "topics": ["6dof", "6dof-pose", "computer-vision", "deep-learning", "pose-estimation", "pytorch"], "description": "[CVPR 2022] Focal Length and Object Pose Estimation via Render and Compare"}
{"name": "mukosame/aoda", "full_name": "Mukosame/AODA", "topics": ["gan", "deep-learning", "pytorch", "image2image", "sketch", "cvpr", "cvpr2021", "wacv", "wacv2022", "gans", "computer-vision", "image-manipulation", "image-generation", "open-domain"], "description": "Official implementation of \"Adversarial Open Domain Adaptation for Sketch-to-Photo Synthesis\"(WACV 2022/CVPRW 2021)"}
{"name": "lucidrains/tranception-pytorch", "full_name": "lucidrains/tranception-pytorch", "topics": ["artificial-intelligence", "attention-mechanism", "deep-learning", "protein-fitness-prediction", "retrieval", "transformers"], "description": "Implementation of Tranception, an attention network, paired with retrieval, that is SOTA for protein fitness prediction"}
{"name": "jiangtaoxie/so-vit", "full_name": "jiangtaoxie/SoT", "topics": ["pytorch", "deep-learning"], "description": "SoT: Delving Deeper into Classification Head for Transformer"}
{"name": "nlp-greyfoss/metagrad", "full_name": "nlp-greyfoss/metagrad", "topics": [], "description": "\u4e00\u4e2a\u7528\u4e8e\u5b66\u4e60\u7684\u4effPytorch\u7eafPython\u5b9e\u73b0\u7684\u81ea\u52a8\u6c42\u5bfc\u5de5\u5177\u3002"}
{"name": "lironui/linear-attention-mechanism", "full_name": "lironui/Linear-Attention-Mechanism", "topics": ["attention-mechanism", "attention", "segmentation"], "description": "Attention mechanism"}
{"name": "subhadityamukherjee/pytorchtutorialrepo", "full_name": "SubhadityaMukherjee/pytorchTutorialRepo", "topics": ["pytorch", "tutorials", "easy-to-use"], "description": "Unified/Standardized pytorch tutorials"}
{"name": "sun-umn/pygranso", "full_name": "sun-umn/PyGRANSO", "topics": ["deep-learning", "machine-learning", "mathematical-software", "numerical-optimization", "data-science", "computer-vision"], "description": "PyGRANSO: A PyTorch-enabled port of GRANSO with auto-differentiation"}
{"name": "xueyunlong12589/dgcnn", "full_name": "xueyunlong12589/DGCNN", "topics": ["python", "pytorch", "dgcnn"], "description": "Repetition code of the model for the paper \"EEG Emotion Recognition Using Dynamical Graph Convolutional Neural Networks\" in pytorch"}
{"name": "zjunlp/kformer", "full_name": "zjunlp/Kformer", "topics": ["transformer", "ffn", "knowledge-injection", "kformer", "nlpcc", "nlpcc-2022", "pytorch"], "description": "Code for the NLPCC 2022 paper \"Kformer: Knowledge Injection in Transformer Feed-Forward Layers\""}
{"name": "imperialnlp/pysimt", "full_name": "ImperialNLP/pysimt", "topics": ["machine-translation", "simultaneous-translations", "sequence-to-sequence", "pytorch"], "description": "Simultaneous NMT/MMT framework in PyTorch"}
{"name": "habout632/stargan2", "full_name": "habout632/StarGAN2", "topics": [], "description": "Unofficial Pytorch version StarGAN v2"}
{"name": "shamim-hussain/egt_pytorch", "full_name": "shamim-hussain/egt_pytorch", "topics": ["graphs", "transformer", "molecular-graph-learning", "pytorch", "python", "transformer-architecture", "machine-learning", "gnn", "attention", "self-attention"], "description": "Edge-Augmented Graph Transformer"}
{"name": "krishnadn/x-vector-pytorch", "full_name": "KrishnaDN/x-vector-pytorch", "topics": ["x-vector", "x-vector-pytorch", "language-recognition", "language-identification", "speech"], "description": "Implementation of the paper \"Spoken Language Recognition using X-vectors\" in Pytorch"}
{"name": "pomonam/self-tuning-networks", "full_name": "pomonam/Self-Tuning-Networks", "topics": ["hyperparameter-optimization", "bilevel-optimization", "self-tuning-network", "pytorch", "neurips-2020", "deep-learning"], "description": "PyTorch implementation of \"STNs\" and \"Delta-STNs\"."}
{"name": "gatheluck/fourierheatmap", "full_name": "gatheluck/FourierHeatmap", "topics": ["fourier-analysis", "heatmap", "robustness", "pytorch"], "description": "Unofficial pytorch implementation of Fourier Heat Map proposed in 'A Fourier Perspective on Model Robustness in Computer Vision' [Yin+, NeurIPS2019]"}
{"name": "kracekumar/facetouch", "full_name": "kracekumar/facetouch", "topics": ["python3", "pytorch", "yolov3", "covid-19", "facetouch"], "description": "Neural Network to predict face touch on live feed and warn you, \"don't touch the face\". "}
{"name": "pranavphoenix/wavemix", "full_name": "pranavphoenix/WaveMix", "topics": ["attention", "wavelet-transform", "linear", "efficient", "image-classification", "semantic-segmentation", "token-mixing"], "description": "2D discrete Wavelet Transform for Image Classification and Segmentation"}
{"name": "davinnovation/pytorch-boilerplate", "full_name": "davinnovation/pytorch-boilerplate", "topics": ["pytorch", "boilerplate", "pytorch-lightning", "omegaconf", "nni"], "description": "The OTHER pytorch boilerplate"}
{"name": "kaylode/theseus", "full_name": "kaylode/theseus", "topics": ["template", "pytorch", "classification", "segmentation", "computer-vision", "natural-language-processing", "object-detection", "structured-data"], "description": "General template for most Pytorch projects"}
{"name": "dyfine/sphericalembedding", "full_name": "Dyfine/SphericalEmbedding", "topics": ["deep-metric-learning"], "description": "official pytorch implementation of \"Deep Metric Learning with Spherical Embedding\", NeurIPS 2020"}
{"name": "yining043/vrp-dact", "full_name": "yining043/VRP-DACT", "topics": ["reinforcement-learning", "vehicle-routing-problem", "neural-combinatorial-optimization", "transformer", "tsp", "vrp"], "description": "This repo implements our paper, \"Learning to Iteratively Solve Routing Problems with Dual-Aspect Collaborative Transformer\", which has been accepted at NeurIPS 2021."}
{"name": "aos55/fixedwing-airsim", "full_name": "AOS55/Fixedwing-Airsim", "topics": ["jsbsim", "airsim", "python", "deep-learning", "deep-reinforcement-learning", "convolutional-neural-networks", "semantic-segmentation"], "description": "Combines JSBSim and Airsim with a python module to simulate a fixedwing"}
{"name": "homebrewnlp/homebrewnlp-jax", "full_name": "HomebrewNLP/Olmax", "topics": ["jax", "tpu", "attention", "transformer", "gpt", "hpc"], "description": "HomebrewNLP in JAX flavour for maintable TPU-Training"}
{"name": "royalskye/image-caption", "full_name": "RoyalSkye/Image-Caption", "topics": ["image-captioning", "transformer", "encoder-decoder", "attention-mechanism", "beam-search", "pytorch", "mscoco-dataset", "cnn-lstm"], "description": "Using LSTM or Transformer to solve Image Captioning in Pytorch"}
{"name": "junnyu/gplinker_pytorch", "full_name": "JunnYu/GPLinker_pytorch", "topics": [], "description": "GPLinker_pytorch"}
{"name": "norod/u-2-net-styletransfer", "full_name": "Norod/U-2-Net-StyleTransfer", "topics": ["u2net", "style-transfer", "image-stylization", "pytorch"], "description": "U-2-Net: U Square Net - Modified for paired image training of style transfer"}
{"name": "jeankaddour/sin", "full_name": "JeanKaddour/SIN", "topics": ["deep-learning", "causal-inference"], "description": "Causal Effect Inference for Structured Treatments (SIN) (NeurIPS 2021)"}
{"name": "renovamen/flint", "full_name": "Renovamen/flint", "topics": ["numpy", "deep-learning", "autograd", "neural-network", "autodiff", "autodifferentiation"], "description": "A toy deep learning framework implemented in pure Numpy from scratch. Aka homemade PyTorch lol."}
{"name": "mid-push/irwgan", "full_name": "Mid-Push/IrwGAN", "topics": ["gan", "generative-adversarial-network", "pytorch", "irwgan", "image-translation", "importance-reweighting"], "description": "Official pytorch implementation of the IrwGAN for unaligned image-to-image translation"}
{"name": "heylynne/focalloss_for_multiclass", "full_name": "HeyLynne/FocalLoss_for_multiclass", "topics": ["classification", "pytorch"], "description": "Focal loss for multiple class classification"}
{"name": "taufikxu/triple-gan", "full_name": "taufikxu/Triple-GAN", "topics": [], "description": "Pytorch for Triple-GAN"}
{"name": "markusschoen/mgnet", "full_name": "markusschoen/MGNet", "topics": ["monocular-depth-estimation", "panoptic-segmentation", "multi-task-learning", "pytorch"], "description": "Code release for \"MGNet: Monocular Geometric Scene Understanding for Autonomous Driving\""}
{"name": "yongwookha/swin-transformer-ocr", "full_name": "YongWookHa/swin-transformer-ocr", "topics": ["ocr", "transformer", "swin-transformer", "pytorch", "deep-learning", "pytorch-lightning", "text-recognition"], "description": "swin-transformer custom for OCR"}
{"name": "niklexical/brc_pytorch", "full_name": "niklexical/brc_pytorch", "topics": [], "description": "Pytorch implementation of bistable recurrent cell with baseline comparisons."}
{"name": "living-with-machines/mapreader", "full_name": "Living-with-machines/MapReader", "topics": ["hut23", "hut23-96", "computer-vision", "deep-learning", "hacktoberfest", "machine-learning", "pytorch", "article"], "description": "A computer vision pipeline for exploring and analyzing images at scale"}
{"name": "aaditya-singh/safin", "full_name": "Aaditya-Singh/SAFIN", "topics": ["pytorch", "deep-learning", "neural-style-transfer", "computer-vision"], "description": "Code for the ICME 2021 paper \"SAFIN: Arbitrary Style Transfer With Self-Attentive Factorized Instance Normalization\""}
{"name": "kajyuuen/allennlp-book", "full_name": "kajyuuen/allennlp-book", "topics": ["allennlp", "nlp"], "description": "\u672c\u30ea\u30dd\u30b8\u30c8\u30ea\u306f\u300cAllenNLP\u5165\u9580\u300d\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u7f6e\u304d\u5834\u3067\u3059\u3002"}
{"name": "harry-kit/image-classification-on-small-datasets-in-pytorch", "full_name": "Harry-KIT/Image-Classification-on-small-datasets-in-Pytorch", "topics": ["image-classification", "pytorch", "cnn", "computer-vision", "gradcam-visualization"], "description": "This repo is special for those who want to start learning computer vision related tasks such as image classification."}
{"name": "micahcarroll/unimask", "full_name": "micahcarroll/uniMASK", "topics": ["bert-model", "deep-learning", "imitation-learning", "pytorch", "reinforcement-learning", "self-supervised-learning"], "description": "Codebase for \"Uni[MASK]: Unified Inference in Sequential Decision Problems\""}
{"name": "bit-da/sdca", "full_name": "BIT-DA/SDCA", "topics": ["domain-adaptation", "semantic-segmentation", "pytorch", "contrastive-context-information"], "description": "Official Implementation of Semantic Distribution-aware Contrastive Adaptation for Semantic Segmentation https://arxiv.org/abs/2105.05013"}
{"name": "jerrywn121/tianchi_aiearth", "full_name": "jerrywn121/TianChi_AIEarth", "topics": ["convlstm", "spatial-temporal-forecasting", "attention-mechanism", "transformer", "timesformer", "pytorch"], "description": "TianChi AIEarth Contest Solution"}
{"name": "megvii-research/baseshomo", "full_name": "megvii-research/BasesHomo", "topics": ["deep-homography", "pytorch"], "description": "The official PyTorch implementation of the paper \"Motion Basis Learning for Unsupervised Deep Homography Estimation with Subspace Projection\"."}
{"name": "ki-ljl/fedavg-numpy-pytorch-tff", "full_name": "ki-ljl/FedAvg-numpy-pytorch-tff", "topics": ["federated-learning", "fedavg", "numpy", "pytorch", "tff"], "description": "Three implementations of FedAvg: numpy, pytorch and tensorflow federated."}
{"name": "yanndubs/invariant-self-supervised-learning", "full_name": "YannDubs/Invariant-Self-Supervised-Learning", "topics": ["python", "machine-learning", "self-supervised-learning", "pytorch", "representation-learning"], "description": "Pytorch code for \"Improving Self-Supervised Learning by Characterizing Idealized Representations\""}
{"name": "lucidrains/transframer-pytorch", "full_name": "lucidrains/transframer-pytorch", "topics": ["artificial-intelligence", "deep-learning", "video-generation", "attention-mechanisms", "transformers", "unet"], "description": "Implementation of Transframer, Deepmind's U-net + Transformer architecture for up to 30 seconds video generation, in Pytorch"}
{"name": "vsainteuf/utae-paps", "full_name": "VSainteuf/utae-paps", "topics": ["deep-learning", "computer-vision", "iccv", "iccv2021", "satellite-imagery", "sentinel-2", "agriculture", "panoptic-segmentation", "semantic-segmentation", "self-attention"], "description": "PyTorch implementation of U-TAE and PaPs for satellite image time series panoptic segmentation."}
{"name": "emadeldeen24/adatime", "full_name": "emadeldeen24/AdaTime", "topics": ["deep-learning", "pytorch", "domain-adaptation", "time-series", "eeg", "sleep-stage-classification", "human-activity-recognition", "transfer-learning", "unsupervised-domain-adaptation", "cdan", "dann", "deep-coral", "homm", "dsan"], "description": "[TKDD 2023] AdaTime: A Benchmarking Suite for Domain Adaptation on Time Series Data"}
{"name": "connorstoneastro/autoprof", "full_name": "ConnorStoneAstro/AutoProf", "topics": ["astronomy", "python", "pytorch", "scientific-computing"], "description": "A fast, flexible, and automated astronomical image modelling tool for precise parallel multi-wavelength photometry"}
{"name": "incheon-cho/dynamic_model_pruning_with_feedback", "full_name": "INCHEON-CHO/Dynamic_Model_Pruning_with_Feedback", "topics": ["pruning", "pytorch-implementation", "prune", "pruning-structures"], "description": "Implement of Dynamic Model Pruning with Feedback with pytorch"}
{"name": "prunetruong/glampoints_pytorch", "full_name": "PruneTruong/GLAMpoints_pytorch", "topics": [], "description": "Official Pytorch implementation of GLAMpoints "}
{"name": "ytchx1999/maxp_dgl_graph", "full_name": "ytchx1999/MAXP_DGL_Graph", "topics": ["dgl", "gnn", "machine-learning", "graph"], "description": "MAXP \u547d\u9898\u8d5b \u4efb\u52a1\u4e00\uff1a\u57fa\u4e8eDGL\u7684\u56fe\u673a\u5668\u5b66\u4e60\u4efb\u52a1\u3002\u961f\u4f0d\uff1aGraph@ICT\uff0c\ud83e\udd49rank6\u3002https://www.biendata.xyz/competition/maxp_dgl/"}
{"name": "jungjee/dcasenet", "full_name": "Jungjee/DcaseNet", "topics": ["acoustic-scene-classification", "audio-tagging", "sound-event-detection", "pytorch", "dcase"], "description": "Author's repository for reproducing DcaseNet, an integrated pre-trained DNN that performs acoustic scene classification, audio tagging, and sound event detection. Implemented using PyTorch."}
{"name": "masterhow/csflow", "full_name": "MasterHow/CSFlow", "topics": ["deep-learning", "optical-flow"], "description": "[IV2022] pytorch implementation for 'CSFlow: Learning Optical Flow via Cross Strip Correlation for Autonomous Driving'"}
{"name": "meilfang/lmfd-pad", "full_name": "meilfang/LMFD-PAD", "topics": ["attention-mechanism", "deep-learning", "face-presentation-attack-detection", "frequency-domain-decomposition"], "description": "Learnable Multi-level Frequency Decomposition and Hierarchical Attention Mechanism for Generalized Face Presentation Attack Detection"}
{"name": "correr-zhou/spml-acktheunknown", "full_name": "Correr-Zhou/SPML-AckTheUnknown", "topics": ["computer-vision", "deep-learning", "eccv2022", "machine-learning", "multi-label-image-classification", "multi-label-learning", "weakly-supervised-learning"], "description": "[ECCV 2022] Offical implementation of the paper \"Acknowledging the Unknown for Multi-label Learning with Single Positive Labels\"."}
{"name": "maryam089/sdvit", "full_name": "maryam089/SDViT", "topics": ["domain-generalization", "pytorch", "vision-transformer", "deep-learning"], "description": "Official repository for \"Self-Distilled Vision Transformer for Domain Generalization\" (ACCV-2022 ORAL)"}
{"name": "pfnet-research/torch-dftd", "full_name": "pfnet-research/torch-dftd", "topics": [], "description": "pytorch implementation of dftd2 & dftd3"}
{"name": "pinatafarms/feartracker", "full_name": "PinataFarms/FEARTracker", "topics": ["comuter-vision", "deep-learning", "eccv", "eccv2022", "pytorch", "pytorch-lightning", "visual-tracking"], "description": "Official repo for FEAR: Fast, Efficient, Accurate and Robust Visual Tracker (ECCV 2022)"}
{"name": "thunlp/cokebert", "full_name": "thunlp/CokeBERT", "topics": ["bert", "knowledge-graph", "nlp", "pretrained-language-model", "pytorch"], "description": "CokeBERT: Contextual Knowledge Selection and Embedding towards Enhanced Pre-Trained Language Models"}
{"name": "tsujuifu/pytorch_sscr", "full_name": "tsujuifu/pytorch_sscr", "topics": ["emnlp2020", "pytorch", "computer-vision", "image-editing"], "description": "A PyTorch implementation of SSCR"}
{"name": "langboat/mengzi-retrieval-lm", "full_name": "Langboat/mengzi-retrieval-lm", "topics": ["gpt", "language-model", "transformer", "artificial-intelligence", "attention-mechanism", "deep-learning", "retrieval"], "description": "An experimental implementation of the retrieval-enhanced language model"}
{"name": "ugenteraan/deep_hierarchical_classification", "full_name": "Ugenteraan/Deep_Hierarchical_Classification", "topics": ["deep-learning", "hierarchical-models", "hierarchical-classification", "pytorch-implementation", "image-classification", "python", "neural-networks", "pytorch"], "description": "PyTorch Implementation of Deep Hierarchical Classification for Category Prediction in E-commerce System"}
{"name": "lucidrains/aoa-pytorch", "full_name": "lucidrains/AoA-pytorch", "topics": ["attention", "attention-mechanism", "vqa", "visual-question-answering", "captioning"], "description": "A Pytorch implementation of Attention on Attention module (both self and guided variants), for Visual Question Answering"}
{"name": "masterhow/panoflow", "full_name": "MasterHow/PanoFlow", "topics": ["deep-learning", "omnivision", "optical-flow", "panorama", "dataset", "semantic"], "description": "PanoFlow: Learning Optical Flow for Panoramic Images"}
{"name": "freerotate/textclassification", "full_name": "FreeRotate/TextClassification", "topics": ["bilstm", "cnn", "transformer", "pytorch", "bigru"], "description": "\u26a1 \u57fa\u4e8ePyTorch\u7684\u591a\u79cd\u6a21\u578b\u6587\u672c\u5206\u7c7b\u6846\u67b6"}
{"name": "theshadow29/vidsitu", "full_name": "TheShadow29/VidSitu", "topics": ["vision", "vision-and-language", "grounding", "nlp", "video", "video-language", "event-relations", "semantic-roles", "srl", "captioning-videos", "captioning"], "description": "[CVPR21] Visual Semantic Role Labeling for Video Understanding (https://arxiv.org/abs/2104.00990)"}
{"name": "mindslab-ai/pnlp-mixer", "full_name": "mindslab-ai/pnlp-mixer", "topics": ["pytorch", "mlp-mixer", "pytorch-lightning", "nlp"], "description": "Unofficial PyTorch Implementation for pNLP-Mixer: an Efficient all-MLP Architecture for Language (https://arxiv.org/abs/2202.04350)"}
{"name": "haibo-qiu/synface", "full_name": "haibo-qiu/SynFace", "topics": ["pytorch", "face-recognition", "synthetic-data"], "description": "[ICCV 2021] SynFace: Face Recognition with Synthetic Data"}
{"name": "nathanbreitsch/torchmocks", "full_name": "nathanbreitsch/torchmocks", "topics": ["neural-networks", "pytorch", "testing", "unittest", "pytorch-lightning"], "description": "Test pytorch code with minimal computational overhead"}
{"name": "megvii-research/neurips2021-ml4co-kida", "full_name": "megvii-research/NeurIPS2021-ML4CO-KIDA", "topics": ["deep-learning", "combinatorial-optimization", "graph-convolutional-networks"], "description": "1st Solution For NeurIPS 2021 Competition on ML4CO Dual Task"}
{"name": "wkentaro/reorientbot", "full_name": "wkentaro/reorientbot", "topics": ["robotics", "computer-vision", "deep-learning", "artificial-intelligence", "ros", "machine-learning"], "description": "ReorientBot: Learning Object Reorientation for Specific-Posed Placement, ICRA 2022"}
{"name": "maple-research-lab/clsa", "full_name": "maple-research-lab/CLSA", "topics": ["clsa", "stronger-augmentations", "self-supervised-learning", "contrastive-learning", "unsupervised-learning", "deep-learning"], "description": "official implemntation for \"Contrastive Learning with Stronger Augmentations\""}
{"name": "aiaudit-org/raw2logit", "full_name": "aiaudit-org/raw2logit", "topics": ["distribution", "shift", "drift", "camera", "optics", "machine-learning", "deep-learning", "deep-neural-networks", "robustness", "pytorch"], "description": "In order to control processing-induced dataset drift we require two ingredients: raw sensor data and an image processing model. This code repository contains the materials for the second ingredient, the image processing models, as well as scripts to load data and run experiments. https://arxiv.org/abs/2211.02578"}
{"name": "mhardalov/exams-qa", "full_name": "mhardalov/exams-qa", "topics": ["nlp", "multilingual", "dataset", "question-answering", "reading-comprehension", "multiple-choice", "crosslingual", "exams", "cross-lingual", "school-examinations-dataset", "multi-subject"], "description": "A Multi-subject High School Examinations Dataset for Cross-lingual and Multilingual Question Answering"}
{"name": "whiax/bert-transformer-pytorch", "full_name": "Whiax/BERT-Transformer-Pytorch", "topics": [], "description": "Basic implementation of BERT and Transformer in Pytorch in one short python file "}
{"name": "rishikksh20/hifigan-denoiser", "full_name": "rishikksh20/hifigan-denoiser", "topics": ["denoiser", "denoising", "wavenet", "hifigan", "speech", "speech-processing", "waveform", "pytorch", "python", "gan"], "description": "HiFi-GAN: High Fidelity Denoising and Dereverberation Based on Speech Deep Features in Adversarial Networks"}
{"name": "sijieji/clnet", "full_name": "SIJIEJI/CLNet", "topics": ["pytorch", "csi", "csinet", "paper"], "description": "Code of the paper, CLNet: Complex Input Lightweight Neural Network designed for Massive MIMO CSI Feedback"}
{"name": "quocthangnguyen/deep-metric-learning-tsinghua-dogs", "full_name": "QuocThangNguyen/deep-metric-learning-tsinghua-dogs", "topics": ["proxy-nca-loss", "triplet-loss", "proxy-anchor-loss", "soft-triple-loss", "tsinghua-dogs-dataset", "deep-metric-learning", "fine-grained-classification", "pytorch"], "description": "Dogs classification with Deep Metric Learning"}
{"name": "hannawong/colxlm", "full_name": "hannawong/ColXLM", "topics": ["nlp", "information-retrieval", "faiss", "multilingual"], "description": "Multilingual Retrieval on Yelp Search Engine \u26a1"}
{"name": "dawn-lx/vidsgg-big", "full_name": "Dawn-LX/VidSGG-BIG", "topics": [], "description": "Pytorch implementation of our paper Classification-Then-Grounding: Reformulating Video Scene Graphs as Temporal Bipartite Graphs, which is accepted by CVPR2022"}
{"name": "1170300521/difa", "full_name": "YBYBZhang/DiFa", "topics": [], "description": "Official Pytorch Implementation of \"Towards Diverse and Faithful One-shot Domain Adaption of Generative Adversarial Networks\" (NeurIPS 2022)"}
{"name": "loicgrobol/zeldarose", "full_name": "LoicGrobol/zeldarose", "topics": ["bert", "fine-tuning", "machine-learning", "neural-networks", "nlp", "pretraining", "transformers"], "description": "Train transformer-based models."}
{"name": "christophreich1996/oss-net", "full_name": "ChristophReich1996/OSS-Net", "topics": ["deep-learning", "segmentation", "semantic-segmentation", "computer-vision", "medical-imaging", "brats", "lits", "oss-net", "bmvc", "bmvc2021", "3d-vision", "pytorch"], "description": "Official and maintained implementation of the paper \"OSS-Net: Memory Efficient High Resolution Semantic Segmentation of 3D Medical Data\" [BMVC 2021]."}
{"name": "rezazad68/transdeeplab", "full_name": "rezazad68/transdeeplab", "topics": ["cnn", "deep-learning", "deep-neural-networks", "segmentation", "semantic-segmentation", "skin-cancer", "synapse", "transformer", "deeplab-v3-plus", "transformers"], "description": "TransDeepLab: Convolution-Free Transformer-based DeepLab v3+ for Medical Image Segmentation"}
{"name": "rjduan/advdrop", "full_name": "RjDuan/AdvDrop", "topics": ["adversarial-attacks", "adversarial-examples", "ai-security", "pytorch"], "description": "Code for \"Adversarial attack by dropping information.\" (ICCV 2021)"}
{"name": "mchughes288/emotion_detection_cpc", "full_name": "McHughes288/emotion_detection_cpc", "topics": ["emotion", "emotion-recognition", "emotion-detection", "machine-learning", "pytorch", "self-supervised-learning", "speech"], "description": "Emotion detection in audio utilising self-supervised representations trained with Contrastive Predictive Coding (CPC)."}
{"name": "dwromero/att_gconvs", "full_name": "dwromero/att_gconvs", "topics": ["equivariance", "group-convolution", "cnns", "attention", "pytorch"], "description": "Code repository for the paper \"Attentive Group Equivariant Convolutional Neural Networks\" published at ICML 2020. https://arxiv.org/abs/2002.03830"}
{"name": "adrianjav/rotograd", "full_name": "adrianjav/rotograd", "topics": [], "description": "Official Pytorch's implementation of RotoGrad"}
{"name": "lambert-x/dualnorm-unet", "full_name": "lambert-x/CateNorm", "topics": ["python", "pytorch", "segmentation"], "description": "The official implementation of \"CateNorm: Categorical Normalization for Robust Medical Image Segmentation\""}
{"name": "topoxlab/topointeraction", "full_name": "TopoXLab/TopoInteraction", "topics": ["deep-learning", "eccv2022", "multiclass", "pytorch", "segmentation", "topology"], "description": "This repository contains the implementation for our work \"Learning Topological Interactions for Multi-Class Medical Image Segmentation\", accepted to ECCV 2022 (Oral)"}
{"name": "jossalgon/stablediffusiontelegram", "full_name": "jossalgon/StableDiffusionTelegram", "topics": ["diffusers", "stable-diffusion", "telegram-bot", "deep-learning", "diffusion", "image-generation", "pytorch"], "description": "StableDiffusionTelegram is a telegram bot that allows to generate images using the stable diffusion AI from a telegram bot, in a much more comfortable and simple way."}
{"name": "vinhsuhi/jmac", "full_name": "vinhsuhi/JMAC", "topics": ["knowledge-graph-alignment", "knowledge-graph-completion", "knowledge-graph-embeddings", "jmac"], "description": "Joint Multilingual Knowledge Graph Completion and Alignment (Findings of EMNLP 2022) (Pytorch)"}
{"name": "cyclomon/diagonalgan", "full_name": "cyclomon/DiagonalGAN", "topics": ["gan", "pytorch"], "description": "Pytorch Implementation of \"Diagonal Attention and Style-based GAN for Content-Style disentanglement in image generation and translation\" (ICCV 2021)"}
{"name": "bigdata-ustc/edunlp", "full_name": "bigdata-ustc/EduNLP", "topics": ["python", "deep-learning", "machine-learning", "word2vec", "doc2vec", "tokenizer", "katex", "formula", "natural-language-processing"], "description": "A library for advanced Natural Language Processing towards multi-modal educational items. "}
{"name": "jimmyyhwu/spatial-action-maps", "full_name": "jimmyyhwu/spatial-action-maps", "topics": ["spatial-action-maps", "robotics", "pybullet", "pytorch", "deep-reinforcement-learning", "mobile-manipulation", "dqn", "anki-vector"], "description": "Learning robotic mobile manipulation with deep reinforcement learning"}
{"name": "mike9251/simswap-inference-pytorch", "full_name": "mike9251/simswap-inference-pytorch", "topics": ["deepfake", "pytorch", "gfpgan", "simswap"], "description": "Unofficial Pytorch implementation (inference only) of the SimSwap: An Efficient Framework For High Fidelity Face Swapping"}
{"name": "lukashedegaard/co3d", "full_name": "LukasHedegaard/co3d", "topics": ["convolutional-neural-networks", "pytorch", "deep-learning", "cnn", "human-activity-recognition", "3d-cnn", "continual-inference"], "description": "Official source code for \"Continual 3D Convolutional Neural Networks for Real-time Processing of Videos\" [ECCV2022]"}
{"name": "saleml/gfn", "full_name": "saleml/gfn", "topics": ["pytorch", "gflownets"], "description": "GFlowNet library"}
{"name": "graphnet-team/graphnet", "full_name": "graphnet-team/graphnet", "topics": ["astrophysics", "deep-learning", "gpu", "high-energy-physics", "machine-learning", "neural-network", "particle-physics", "physics-analysis", "python", "pytorch", "neutrino-oscillations", "neutrino-physics", "neutrinos", "graph-neural-network"], "description": "Graph neural networks for neutrino telescope event reconstruction"}
{"name": "wenliangdai/modality-transferable-mer", "full_name": "wenliangdai/Modality-Transferable-MER", "topics": ["deep-learning", "nlp", "pytorch", "multimodal", "emotion-recognition", "zero-shot", "few-shot", "cmu-mosei", "iemocap"], "description": "Modality-Transferable-MER, multimodal emotion recognition model with zero-shot and few-shot abilities."}
{"name": "z-zheng/changeos", "full_name": "Z-Zheng/ChangeOS", "topics": ["change-detection", "building-damage-assessment", "remote-sensing", "deep-learning", "object-based-image-analysis"], "description": "ChangeOS: Building damage assessment via Deep Object-based Semantic Change Detection - (RSE 2021)"}
{"name": "davidiommi/pytorch-unet3d-single_channel", "full_name": "davidiommi/Pytorch-Unet3D-single_channel", "topics": [], "description": "3D-Unet: patched based Pytorch implementation for medical images segmentation"}
{"name": "basiralab/reggnn", "full_name": "basiralab/RegGNN", "topics": ["gnn", "regression", "brain-connectivity", "network-neuroscience", "graph-neural-networks", "sample-selection", "cognitive-score", "matrix-parallel-transport", "symmetric-positive-definite", "riemannian-manifold", "geodesic-transport"], "description": "Regression Graph Neural Network (regGNN) for cognitive score prediction."}
{"name": "mcgill-nlp/topiocqa", "full_name": "McGill-NLP/topiocqa", "topics": ["question-answering", "natural-language-processing", "conversational-ai", "deep-learning", "dense-retrieval", "reading-comprehension"], "description": "Code and data for reproducing baselines for TopiOCQA, an open-domain conversational question-answering dataset"}
{"name": "francois-rozet/torchist", "full_name": "francois-rozet/torchist", "topics": ["numpy", "pytorch", "histogram"], "description": "NumPy-style histograms in PyTorch"}
{"name": "ronmckay/oodretrieval", "full_name": "RonMcKay/OODRetrieval", "topics": ["pytorch", "deep-learning", "semantic-segmentation", "machine-learning", "out-of-distribution-dectection", "uncertainty", "retrieval"], "description": "Detection and Retrieval of Out-of-Distribution Objects in Semantic Segmentation"}
{"name": "nguyenvo09/eacl2021", "full_name": "nguyenvo09/EACL2021", "topics": ["fact-checking", "fake-news-detection", "pytorch", "nlp", "fact-verification", "eacl2021"], "description": "This is the PyTorch code + data repository for paper \"Hierarchical Multi-head Attentive Network for Evidence-aware Fake News Detection\", EACL 2021"}
{"name": "610265158/face_landmark_pytorch", "full_name": "610265158/face_landmark_pytorch", "topics": [], "description": "pytorch face_landmark"}
{"name": "arwin-yu/deep-learning-classification-models-based-cnn-or-attention", "full_name": "Arwin-Yu/Deep-Learning-Image-Classification-Models-Based-CNN-or-Attention", "topics": ["attention-mechanism", "convolutional-neural-networks", "deep-learning", "image-classification", "pytorch"], "description": "This project organizes classic images classification neural networks based on convolution or attention, and writes training and inference python scripts "}
{"name": "incognite-lab/mygym", "full_name": "incognite-lab/myGym", "topics": ["reinforcement-learning", "multi-step-rl", "pick-and-place", "robotic-manipulation", "robotics", "deep-learning", "simulator", "real-time", "robotics-simulation", "simulators", "vision", "multi-network", "semantic-segmentation"], "description": "myGym enables fast prototyping of RL in the area of robotic manipulation and navigation.You can train different robots, in several environments on various tasks. There is automatic evaluation and benchmark tool. From version 2.1 there is support for multi-step tasks, multi-reward training and multi-network architectures."}
{"name": "sap-samples/acl2020-commonsense", "full_name": "SAP-samples/acl2020-commonsense", "topics": ["sample", "sample-code", "machine-learning", "nlp", "commonsense-reasoning", "deep-learning", "self-supervised", "contrastive"], "description": "Source code for paper on commonsense reasoning for 2020 Annual Conference of the Association for Computational Linguistics (ACL) 2020."}
{"name": "dhopp1/nowcast_lstm", "full_name": "dhopp1/nowcast_lstm", "topics": ["pytorch", "deep-learning", "machine-learning", "neural-networks", "forecasting", "nowcasting"], "description": "LSTM neural networks for nowcasting economic data."}
{"name": "oatml/eve", "full_name": "OATML/EVE", "topics": ["protein", "evolutionary-data", "eve-models", "generative-model", "pytorch"], "description": "Official repository for the paper \"Large-scale clinical interpretation of genetic variants using evolutionary data and deep learning\". Joint collaboration between the Marks lab and the OATML group."}
{"name": "emiliendupont/coinpp", "full_name": "EmilienDupont/coinpp", "topics": [], "description": "Pytorch implementation of COIN++ \ud83c\udf41"}
{"name": "jspenmar/monodepth_benchmark", "full_name": "jspenmar/monodepth_benchmark", "topics": ["benchmarking", "deep-learning", "monocular-depth-estimation", "pytorch", "pytorch-lightning", "self-supervised-learning"], "description": " Code for \"Deconstructing Monocular Depth Reconstruction: The Design Decisions that Matter\" (https://arxiv.org/abs/2208.01489)"}
{"name": "sea-snell/calm-dialogue", "full_name": "Sea-Snell/CALM-Dialogue", "topics": ["deep-learning", "language-model", "nlp", "python", "pytorch", "reinforcement-learning"], "description": "Official code for the paper \"Context-Aware Language Modeling for Goal-Oriented Dialogue Systems\""}
{"name": "huckiyang/obs-causal-q-network", "full_name": "huckiyang/Obs-Causal-Q-Network", "topics": ["reinforcement-learning", "causal-inference", "causality", "pytorch", "colab", "treatment-effect-estimation", "deep-reinforcement-learning"], "description": "AAAI 22 - Training a Resilient Q-Network against Observational Interference, Causal Inference Q-Networks"}
{"name": "keonlee9420/comprehensive-tacotron2", "full_name": "keonlee9420/Comprehensive-Tacotron2", "topics": ["text-to-speech", "tts", "tacotron", "tacotron2", "pytorch", "speech-synthesis", "autoregressive", "single-speaker", "multi-speaker", "robustness", "efficiency", "comprehensive", "neural-tts", "mel-gan", "hifi-gan", "reduction-factor", "diagonal-guided-attention", "deep-learning"], "description": "PyTorch Implementation of Google's Natural TTS Synthesis by Conditioning WaveNet on Mel Spectrogram Predictions. This implementation supports both single-, multi-speaker TTS and several techniques to enforce the robustness and efficiency of the model."}
{"name": "junleen/expression-manipulator", "full_name": "junleen/Expression-manipulator", "topics": ["expression-manipulator", "pytorch", "eccv"], "description": "ECCV'20 paper 'Toward Fine-grained Facial Expression Manipulation' code"}
{"name": "dewenzeng/positional_cl", "full_name": "dewenzeng/positional_cl", "topics": ["deep-learning", "pytorch", "medical-image-segmentation", "contrastive-learning", "self-supervised-learning"], "description": "code for paper Positional Contrastive Learning for Volumetric Medical Image Segmentation"}
{"name": "zijian-hu/simple", "full_name": "zijian-hu/SimPLE", "topics": ["machine-learning", "semi-supervised-learning", "computer-vision", "transfer-learning", "pytorch"], "description": "Code for the paper: \"SimPLE: Similar Pseudo Label Exploitation for Semi-Supervised Classification\""}
{"name": "lucifer443/efficientdet-pytorch", "full_name": "lucifer443/EfficientDet-Pytorch", "topics": ["efficientdet", "mmdetection", "pytorch", "detection", "bifpn"], "description": "This project is a kind of implementation of EfficientDet(CVPR 2020) using mmdetection. "}
{"name": "kennethenevoldsen/spacy-wrap", "full_name": "KennethEnevoldsen/spacy-wrap", "topics": ["spacy-nlp", "spacy-extension", "natural-language-processing", "spacy-extensions", "spacy-transformers", "spacy-models", "transformers", "machine-learning", "language-model", "pytorch", "spacy-pipeline", "huggingface", "huggingface-transformers", "nlp", "spacy", "text-classification", "deep-learning"], "description": "spaCy-wrap is a wrapper library for spaCy for including fine-tuned transformers from Huggingface in your spaCy pipeline allowing you to include existing fine-tuned models within your SpaCy workflow."}
{"name": "davidiommi/pytorch--3d-medical-images-segmentation--salmon", "full_name": "davidiommi/Pytorch--3D-Medical-Images-Segmentation--SALMON", "topics": ["segmentation", "monai", "organs", "pytorch", "unet-pytorch", "unet", "unet-3d", "deep-learning", "monai-toolbox", "nnunet", "transformers", "unetr", "mri"], "description": "Segmentation deep learning ALgorithm based on MONai toolbox: single and multi-label segmentation software developed by QIMP team-Vienna."}
{"name": "nadeemlab/physics-arx", "full_name": "nadeemlab/Physics-ArX", "topics": ["deep-learning", "physics-simulation", "data-augmentation", "computed-tomography", "cone-beam-ct", "radiotherapy", "radiology"], "description": "Physics-based data augmentation library for quantifying CT and CBCT images in radiotherapy [PMB'21, Medical Physics'21, AAPM'21]"}
{"name": "tianyic/only_train_once", "full_name": "tianyic/only_train_once", "topics": ["pytorch", "deep-learning", "model-compression", "sparse-optimization", "no-retrain", "pruning"], "description": "[ICLR 2023] OTOv2: Automatic, Generic, User-Friendly; [NeurIPS 2021] Only Train Once: A One-Shot Neural Network Training And Pruning Framework"}
{"name": "wanghelin1997/maskspec", "full_name": "WangHelin1997/MaskSpec", "topics": [], "description": "The Pytorch implementation of paper: Masked Spectrogram Prediction For Self-Supervised Audio Pre-Training"}
{"name": "ray-project/ray_lightning_accelerators", "full_name": "ray-project/ray_lightning", "topics": [], "description": "Pytorch Lightning Distributed Accelerators using Ray"}
{"name": "shaw-git/lightweight-head-pose-estimation", "full_name": "Shaw-git/Lightweight-Head-Pose-Estimation", "topics": ["deep-learning", "pytorch", "head-pose-estimation", "lightweight-neural-network"], "description": "Code for TMM 2022 \"Accurate Head Pose Estimation Using Image Rectification and Lightweight Convolutional Neural Network\""}
{"name": "xinshengwang/s2igan", "full_name": "xinshengwang/S2IGAN", "topics": [], "description": "Pytorch Code for S2IGAN"}
{"name": "lucko515/cnn-raccoon", "full_name": "lucko515/cnn-raccoon", "topics": ["convolutional-neural-networks", "deep-learning", "explainable-ml", "tensorflow", "keras", "pytorch", "dashboards", "visualization-tools"], "description": "Create interactive dashboards for your Convolutional Neural Networks with a single line of code!"}
{"name": "joeyballentine/video-inference", "full_name": "joeyballentine/Video-Inference", "topics": [], "description": "Easy inference for video networks. Currently supports SOFVSR (traiNNer Version), RIFE, and TecoGAN-pytorch"}
{"name": "rexrex9/basic_neural_networks_pytorch", "full_name": "rexrex9/basic_neural_networks_pytorch", "topics": [], "description": "\u6700\u5165\u95e8\u7684\u795e\u7ecf\u7f51\u7edc\u793a\u4f8b\u4ee3\u7801,pytorch\u7248"}
{"name": "zhihanyang2022/off-policy-continuous-control", "full_name": "zhihanyang2022/off-policy-continuous-control", "topics": ["pytorch", "recurrent-neural-network", "actor-critic", "off-policy", "continuous-control", "reinforcement-learning", "rdpg", "rtd3", "rsac"], "description": "[DeepRL Workshop, NeurIPS-21] Recurrent Off-policy Baselines for Memory-based Continuous Control (RDPG, RTD3 and RSAC)"}
{"name": "aioz-ai/miccai21_mmq", "full_name": "aioz-ai/MICCAI21_MMQ", "topics": ["deep-learning", "question-answering", "medical", "vqa", "medical-image-processing"], "description": "Multiple Meta-model Quantifying for Medical Visual Question Answering"}
{"name": "ansleliu/efficientnet.pytorch", "full_name": "linksense/EfficientNet.PyTorch", "topics": ["efficientnet", "efficient-model", "efficient-inference", "pytorch", "efficientnet-pytorch", "efficientnet-pretrained", "efficientseg", "imagenet", "pretrained-weights"], "description": "Concise, Modular, Human-friendly PyTorch implementation of EfficientNet with Pre-trained Weights."}
{"name": "tahmid0007/visiontransformer", "full_name": "tahmid0007/VisionTransformer", "topics": [], "description": "A complete easy to follow implementation of Google's Vision Transformer proposed in \"AN IMAGE IS WORTH 16X16 WORDS\". This pytorch implementation has comments for better understanding."}
{"name": "jramapuram/byol", "full_name": "jramapuram/BYOL", "topics": [], "description": "Bootstrap Your Own Latent (BYOL) pytorch implementation using DistributedDataParallel."}
{"name": "holywu/vs-basicvsrpp", "full_name": "HolyWu/vs-basicvsrpp", "topics": ["pytorch", "vapoursynth", "basicvsrplusplus"], "description": "BasicVSR++ function for VapourSynth"}
{"name": "agentmaker/paddle-perceptualsimilarity", "full_name": "AgentMaker/Paddle-PerceptualSimilarity", "topics": ["deep-neural-networks", "deep-learning", "paddlepaddle", "paddle", "perceptual-losses", "perceptual-metric", "perceptual-similarity"], "description": "LPIPS metric on PaddlePaddle. pip install paddle-lpips"}
{"name": "theos-ai/easy-yolov7", "full_name": "theos-ai/easy-yolov7", "topics": ["yolov5", "yolov7", "computer-vision", "deep-learning", "machine-learning", "neural-networks", "object-detection", "python", "pytorch"], "description": "This a clean and easy-to-use implementation of YOLOv7 in PyTorch, made with \u2764\ufe0f by Theos AI."}
{"name": "pytorchkorea/hub-kr", "full_name": "PyTorchKorea/hub-kr", "topics": ["model-zoo", "korean-docs", "korean", "pytorch", "hacktoberfest"], "description": "\ud83c\uddf0\ud83c\uddf7\ud30c\uc774\ud1a0\uce58\uc5d0\uc11c \uc81c\uacf5\ud558\ub294 \ubaa8\ub378 \ud5c8\ube0c\uc758 \ud55c\uad6d\uc5b4 \ubc88\uc5ed\uc744 \uc704\ud55c \uc800\uc7a5\uc18c\uc785\ub2c8\ub2e4. (Translate PyTorch model hub in Korean\ud83c\uddf0\ud83c\uddf7)"}
{"name": "miaoyunzhao/gantransferlimiteddata", "full_name": "MiaoyunZhao/GANTransferLimitedData", "topics": [], "description": "This is a pytorch implementation of the paper \"On Leveraging Pretrained GANs for Limited-Data Generation\"."}
{"name": "mps-net/mps-net_release", "full_name": "MPS-Net/MPS-Net_release", "topics": ["3d-human-motion", "3d-human-shape-and-pose-estimation", "cvpr2022", "pytorch"], "description": "Official implementation of CVPR2022 paper \"Capturing Humans in Motion: Temporal-Attentive 3D Human Pose and Shape Estimation from Monocular Video\""}
{"name": "zjunlp/docre", "full_name": "zjunlp/DocuNet", "topics": ["document-level-relation-extraction", "semantic-segmentation", "document-level", "pytorch", "pytorch-implementation", "re", "relation-extraction", "docunet", "document", "docred", "information-extraction", "segmentation"], "description": "Code and dataset for the IJCAI 2021 paper \"Document-level Relation Extraction as Semantic Segmentation\"."}
{"name": "guanghaoyin/cvrkd-iqa", "full_name": "guanghaoyin/CVRKD-IQA", "topics": [], "description": "Pytorch code for our AAAI2022 Oral paper \"Content-Variant Reference Image Quality Assessment via Knowledge Distillation\""}
{"name": "zhuang-group/hvt", "full_name": "ziplab/HVT", "topics": ["pytorch", "transformers"], "description": "[ICCV 2021] Official implementation of \"Scalable Vision Transformers with Hierarchical Pooling\""}
{"name": "sfme/rvae_mixedtypes", "full_name": "sfme/RVAE_MixedTypes", "topics": ["outlier-detection", "robust-variational-autoencoders", "repair", "tabular-data", "deep-learning", "generative-model", "data-analysis", "unsupervised-learning", "pytorch", "python"], "description": "Repository for code release of paper \"Robust Variational Autoencoders for Outlier Detection and Repair of Mixed-Type Data\" (AISTATS 2020)"}
{"name": "ruhyadi/yolo3d", "full_name": "ruhyadi/YOLO3D", "topics": ["yolo", "self-driving-car", "3d-object-detection", "pytorch", "deep-learning"], "description": "YOLO 3D Object Detection for Autonomous Driving Vehicle"}
{"name": "byminji/slttrack", "full_name": "byminji/SLTtrack", "topics": ["eccv2022", "pytorch", "vot", "reinforcement-learning", "visual-tracking", "tracking"], "description": "Official Implementation of Towards Sequence-Level Training for Visual Tracking (ECCV 2022)"}
{"name": "hcw-00/stpm_anomaly_detection", "full_name": "hcw-00/STPM_anomaly_detection", "topics": [], "description": "Unofficial pytorch implementation of Student-Teacher Feature Pyramid Matching for Unsupervised Anomaly Detection"}
{"name": "disi-unibo-nlp/nlg-metricverse", "full_name": "disi-unibo-nlp/nlg-metricverse", "topics": ["natural-language-processing", "natural-language-generation", "metrics", "python", "pytorch", "language-models", "visualization", "nlg-evaluation"], "description": "[COLING22] An End-to-End Library for Evaluating Natural Language Generation"}
{"name": "enigmatisms/nerf", "full_name": "Enigmatisms/NeRF", "topics": ["nerf", "novel-view-synthesis", "pytorch"], "description": "Reproduction of ECCV 2020 NeRF and its subsequent works (mip NeRF, 360,  Ref NeRF, info-NeRF) in PyTorch."}
{"name": "erquren/vehicle_recognition", "full_name": "dongqianzhuan/vehicle_recognition", "topics": ["resnet", "pytorch", "vehicle-recognition"], "description": "\u4e00\u79cd\u8fd0\u7528resnet\u8fdb\u884c\u8f66\u578b\u8bc6\u522b\u7684\u65b9\u6cd5\uff0c"}
{"name": "yujia-yan/skipping-the-frame-level", "full_name": "Yujia-Yan/Skipping-The-Frame-Level", "topics": ["audio-to-midi", "automatic-transcription", "crf", "music", "piano-transcription", "pytorch", "sound-processing", "music-transcription", "audio", "midi", "piano", "transcription"], "description": "A simple yet effective Audio-to-Midi Automatic Piano Transcription system"}
{"name": "bm-k/styling-chatbot-with-transformer", "full_name": "BM-K/Styling-Chatbot-with-Transformer", "topics": ["natural-language-processing"], "description": "Language Style\uacfc \uac10\uc815\uc5d0 \ub530\ub978 \ucc57\ubd07 \ub2f5\ubcc0 \ubcc0\ud654 \ubaa8\ub378"}
{"name": "aimagelab/camel", "full_name": "aimagelab/camel", "topics": ["image-captioning", "captioning-images", "captioning", "computer-vision", "artificial-intelligence", "pytorch"], "description": "CaMEL: Mean Teacher Learning for Image Captioning. ICPR 2022"}
{"name": "laszukdawid/ai-traineree", "full_name": "laszukdawid/ai-traineree", "topics": ["ppo", "reinforcement-learning", "artificial-intelligence-algorithms", "agents", "ddpg", "rainbow", "dqn-pytorch", "pytorch", "multi-agents", "deep"], "description": "PyTorch agents and tools for (Deep) Reinforcement Learning"}
{"name": "hellojialee/offsetguided", "full_name": "hellojialee/OffsetGuided", "topics": ["multi-person-pose-estimation", "bottom-up", "human-pose", "pytorch", "fast", "speed", "heatmap", "vector", "efficiency", "pose-estimation"], "description": "Code for \"Greedy Offset-Guided Keypoint Grouping for Human Pose Estimation\""}
{"name": "zhengyaojiang/latentplan", "full_name": "ZhengyaoJiang/latentplan", "topics": ["model-based-reinforcement-learning", "offline-reinforcement-learning", "reinforcement-learning", "generative-model", "transformer"], "description": "Code release for Efficient Planning in a Compact Latent Action Space https://arxiv.org/abs/2208.10291."}
{"name": "maartengr/reinlife", "full_name": "MaartenGr/ReinLife", "topics": ["python", "reinforcement-learning", "artificial-intelligence", "artificial-life", "deep-learning"], "description": "Creating Artificial Life with Reinforcement Learning"}
{"name": "mohsenfayyaz89/sct", "full_name": "MohsenFayyaz89/SCT", "topics": ["cvpr2020", "cvpr", "computer-vision", "deep-learning"], "description": "SCT: Set Constrained Temporal Transformer for Set Supervised Action Segmentation (CVPR2020) https://arxiv.org/abs/2003.14266"}
{"name": "hyakuchiki/realtimeddsp", "full_name": "hyakuchiki/realtimeDDSP", "topics": ["audio", "pytorch"], "description": "Realtime (streaming) DDSP in PyTorch compatible with neutone"}
{"name": "raman-lab-ucla/multiclass_metasurface_inversedesign", "full_name": "Raman-Lab-UCLA/Multiclass_Metasurface_InverseDesign", "topics": ["dcgan-pytorch", "generative-adversarial-network", "nanophotonics"], "description": "Here, we use a conditional deep convolutional generative adversarial network (cDCGAN) to inverse design across multiple classes of metasurfaces. Reference: https://onlinelibrary.wiley.com/doi/10.1002/adom.202100548"}
{"name": "nohtow/ppl-mcts", "full_name": "NohTow/PPL-MCTS", "topics": ["bert", "gpt-2", "nlp", "transformers"], "description": "Repository for the code of the \"PPL-MCTS: Constrained Textual Generation Through Discriminator-Guided Decoding\" paper, NAACL'22"}
{"name": "erfanmhi/deep-reinforcement-learning-cs285-pytorch", "full_name": "erfanMhi/Deep-Reinforcement-Learning-CS285-Pytorch", "topics": ["pytorch", "reinforcement-learning", "deep-learning", "berkeley", "python", "deep-reinforcement-learning", "neural-networks", "openai-gym", "mujoco", "deep-q-learning", "policy-gradient", "actor-critic-algorithm", "model-based-rl", "model-free-rl"], "description": "Solutions of assignments of Deep Reinforcement Learning course presented by the University of California, Berkeley (CS285) in Pytorch framework"}
{"name": "learn-ventures/trdesign-pytorch", "full_name": "Learn-Ventures/trdesign-pytorch", "topics": [], "description": "pytorch implementation of trDesign"}
{"name": "clovaai/fewshot-font-generation", "full_name": "clovaai/fewshot-font-generation", "topics": ["font", "machine-learning", "deep-learning", "pytorch", "generative-models", "font-generation", "fewshot-font-generation"], "description": "The unified repository for few-shot font generation methods. This repository includes FUNIT (ICCV'19), DM-Font (ECCV'20), LF-Font (AAAI'21) and MX-Font (ICCV'21)."}
{"name": "taikiinoue/stad", "full_name": "taikiinoue45/STAD", "topics": ["anomaly-detection", "pytorch", "mvtec", "unsupervised-learning", "student-teacher-learning"], "description": "Uninformed Students: Student-Teacher Anomaly Detection with Discriminative Latent Embeddings"}
{"name": "gt-salt/idbr", "full_name": "SALT-NLP/IDBR", "topics": ["continual-learning", "text-classification", "lifelong-learning", "natural-language-processing"], "description": "Codes for the paper: Continual Learning for Text Classification with Information Disentanglement Based Regularization"}
{"name": "jbakermans/torch_tem", "full_name": "jbakermans/torch_tem", "topics": [], "description": "Implementation of the Tolman Eichenbaum Machine in pytorch"}
{"name": "meteorshub/glia-net", "full_name": "MeteorsHub/GLIA-Net", "topics": [], "description": "A segmentation network for  intracranial aneurysm on CTA images using pytorch"}
{"name": "yeliudev/consnet", "full_name": "yeliudev/ConsNet", "topics": ["pytorch", "human-object-interaction"], "description": "\ud83d\udeb4\u200d\u2642\ufe0f ConsNet: Learning Consistency Graph for Zero-Shot Human-Object Interaction Detection (MM 2020)"}
{"name": "wyl7/dci-pytorch", "full_name": "wyl7/DCI-pytorch", "topics": [], "description": "The pytorch implementation of decoupling representation learning and classification for GNN-based anomaly detection."}
{"name": "guangxinghan/fct", "full_name": "GuangxingHan/FCT", "topics": ["few-shot-object-detection", "meta-learning", "transformer"], "description": "Code for CVPR 2022 Oral paper: 'Few-Shot Object Detection with Fully Cross-Transformer'"}
{"name": "pathwaycommons/semantic-search", "full_name": "PathwayCommons/semantic-search", "topics": ["semantic-search", "natural-language-processing", "transformers", "declutr"], "description": "A simple semantic search engine for scientific papers."}
{"name": "ggjy/fastmim.pytorch", "full_name": "ggjy/FastMIM.pytorch", "topics": [], "description": "FastMIM, official pytorch implementation of our paper \"FastMIM: Expediting Masked Image Modeling Pre-training for Vision\"(https://arxiv.org/pdf/2212.06593.pdf)."}
{"name": "langgege-cqu/maxp_dgl", "full_name": "langgege-cqu/maxp_dgl", "topics": ["classification", "dgl", "gnn-model", "mutilmodel", "pytorch"], "description": "2021MXAP-DGL rank2"}
{"name": "sooftware/transformer", "full_name": "sooftware/transformer", "topics": ["transformer", "seq2seq", "attention-is-all-you-need", "attention", "nlp"], "description": "A PyTorch Implementation of \"Attention Is All You Need\""}
{"name": "zyxxmu/lottery-jackpots", "full_name": "zyxxmu/lottery-jackpots", "topics": [], "description": "Pytorch implementation of our paper under review \u2014 Lottery Jackpots Exist in Pre-trained Models "}
{"name": "ai4ce/spare3d", "full_name": "ai4ce/SPARE3D", "topics": ["line-drawings", "spatial-reasoning", "deep-learning", "pythonocc", "reasoning", "line-drawing"], "description": "[CVPR2020] A Dataset for SPAtial REasoning on Three-View Line Drawings"}
{"name": "shaoshengsong/quarkdet", "full_name": "shaoshengsong/quarkdet", "topics": ["object-detection", "efficientdet", "ghostnet", "mobilenetv3", "shufflenetv2", "fpn", "pan", "bifpn", "quarkdet", "nanodet", "fcos", "mosaic", "pytorch"], "description": "QuarkDet  lightweight object detection in PyTorch .Real-Time Object Detection on Mobile Devices."}
{"name": "positivepeng/nlp-beginner-projects", "full_name": "positivepeng/nlp-beginner-projects", "topics": [], "description": "NLP\u5e38\u89c1\u4efb\u52a1\u5b9e\u73b0\uff08pytorch\u7248\uff09"}
{"name": "dlvu/vugrad", "full_name": "dlvu/vugrad", "topics": ["deep-learning", "deep-neural-networks", "teaching-tools"], "description": "Yet another mini autodiff system for educational purposes"}
{"name": "yinghao-li/chmm-alt", "full_name": "Yinghao-Li/CHMM-ALT", "topics": ["weakly-supervised-learning", "weak-supervision", "nlp", "ner", "hmm"], "description": "Code for \"BERTifying the Hidden Markov Model for Multi-Source Weakly Supervised Named Entity Recognition\""}
{"name": "dingsheng-ong/ipr-gan", "full_name": "dingsheng-ong/ipr-gan", "topics": ["artificial-intelligence", "computer-vision", "deep-learning", "generative-adversarial-networks", "deep-ipr", "intellectual-property", "neural-network-ownership", "nn-ownership", "ownership-verification", "gan", "generative-adversarial-network", "ipr", "pytorch"], "description": "This is the code repo of our CVPR2021 on protecting the IPR of Generative Adversarial Networks (GANs) from Ambiguity Attack"}
{"name": "andreagemelli/doc2graph", "full_name": "andreagemelli/doc2graph", "topics": ["deep-learning", "document-understanding", "geometric-deep-learning", "gnn", "key-information-extraction", "layout-analysis", "nlp", "table-detection", "pytorch"], "description": "Doc2Graph transforms documents into graphs and exploit a GNN to solve several tasks."}
{"name": "tejasvaidhyadev/ner_lab_protocols", "full_name": "tejasvaidhyadev/NER_Lab_Protocols", "topics": ["ner", "pytorch", "named-entity-recognition"], "description": "Domain-specific BERT representation for Named Entity Recognition of lab protocol"}
{"name": "xiaohui9607/f_anogan_pytorch", "full_name": "Xiaohui9607/f_anogan_pytorch", "topics": ["anomaly-detection", "generative-adversarial-network", "outlier-detection"], "description": "Code for reproducing f-AnoGAN in Pytorch"}
{"name": "sky1456723/pytorch-mbnet", "full_name": "sky1456723/Pytorch-MBNet", "topics": [], "description": "A pytorch implementation of MBNET: MOS PREDICTION FOR SYNTHESIZED SPEECH WITH MEAN-BIAS NETWORK"}
{"name": "neclow/serab", "full_name": "Neclow/SERAB", "topics": ["benchmark", "byol", "byol-a", "deep-learning", "emotion-recognition", "pytorch", "scikit-learn", "self-supervised-learning", "speech-processing", "icassp"], "description": "SERAB: a multi-lingual benchmark for speech emotion recognition"}
{"name": "digantamisra98/reproducibilty-challenge-ecanet", "full_name": "digantamisra98/Reproducibilty-Challenge-ECANET", "topics": ["research", "reproducible-research", "reproducibility", "reproducible-paper", "wandb", "pytorch", "mmdetection", "image-classification", "image-recognition", "image-segmentation", "object-detection", "computer-vision", "cvpr2020", "deep-learning", "deep-neural-networks", "convolutional-neural-networks"], "description": "Unofficial Implementation of ECANets (CVPR 2020) for the Reproducibility Challenge 2020."}
{"name": "tmaxedu/kordpr", "full_name": "TmaxEdu/KorDPR", "topics": ["bert", "korean-nlp", "nlp", "retrieval"], "description": "This repo Implements \"Dense Passage Retrieval for Open-Domain Question Answering\" using Korean Dataset"}
{"name": "zengxh/npdraw", "full_name": "ZENGXH/NPDRAW", "topics": ["generative-model", "image-generation", "pytorch", "vae", "draw", "npdraw"], "description": "NP DRAW paper released code "}
{"name": "zsyoaoa/s2vd", "full_name": "zsyOAOA/S2VD", "topics": [], "description": "Semi-supervised Video Deraining with Dynamical Rain Generator (CVPR, 2021, Pytorch)"}
{"name": "bubbliiiing/srgan-pytorch", "full_name": "bubbliiiing/srgan-pytorch", "topics": [], "description": "\u8fd9\u662f\u4e00\u4e2asrgan-keras\u7684\u6e90\u7801\uff0c\u53ef\u4ee5\u7528\u4e8e\u8bad\u7ec3\u81ea\u5df1\u7684\u6a21\u578b\u3002"}
{"name": "yamatokataoka/reinforcement-learning-replications", "full_name": "yamatokataoka/reinforcement-learning-replications", "topics": ["reinforcement-learning", "deep-learning", "pytorch"], "description": "Reinforcement Learning Replications is a set of Pytorch implementations of reinforcement learning algorithms."}
{"name": "manhph2211/bkai-challenge-vietnamese-ocr", "full_name": "manhph2211/BKAI-Challenge-Vietnamese-OCR", "topics": ["text-detection", "dbnet", "dbnetplus", "transocr", "vietnamese-ocr", "ensemble-text-detection", "scene-text-generator", "bkai", "text-recognition", "pytorch", "ocr", "scene-text-detection-recognition"], "description": "This is our solution dealing with BKAI challenge :smile: "}
{"name": "zsm1211/pnp-cassi", "full_name": "zsm1211/PnP-CASSI", "topics": [], "description": "Python(pytorch) code for the paper: Siming Zheng, Yang Liu, Ziyi Meng, Mu Qiao, Zhishen Tong, Xiaoyu Yang, Shensheng Han, and Xin Yuan, \"Deep plug-and-play priors for spectral snapshot compressive imaging,\" Photon. Res. 9, B18-B29 (2021)"}
{"name": "xu-song/k-plug", "full_name": "xu-song/k-plug", "topics": ["transformer", "bert", "pytorch"], "description": "K-PLUG \u77e5\u8bc6\u9884\u8bad\u7ec3\u8bed\u8a00\u6a21\u578b"}
{"name": "jtchen0528/pcl-i2g", "full_name": "jtchen0528/PCL-I2G", "topics": ["deepfake-detection", "consistency", "self-supervision", "pytorch", "deepfakes", "faceforensics"], "description": "Unofficial Implementation: Learning Self-Consistency for Deepfake Detection"}
{"name": "rmeli/gnina-torch", "full_name": "RMeli/gnina-torch", "topics": ["pytorch", "scoring-functions", "deep-learning", "gnina", "docking", "drug-discovery", "pytorch-ignite"], "description": "\ud83d\udd25 PyTorch implementation of GNINA scoring function for molecular docking"}
{"name": "velebit-ai/covid-next-pytorch", "full_name": "velebit-ai/COVID-Next-Pytorch", "topics": ["pytorch", "xray", "covid-19", "resnext"], "description": "COVID-Next -> Pytorch upgrade of the COVID-Net for COVID-19 detection in X-Ray images"}
{"name": "zhaofang0627/hpbtt", "full_name": "zhaofang0627/HPBTT", "topics": [], "description": "HPBTT-Pytorch"}
{"name": "renmin1991/dyamic_graph_representation", "full_name": "RenMin1991/Dyamic_Graph_Representation", "topics": ["pytorch", "feature-graphs", "feature-extraction", "biometrics", "iris-recognition", "face-recognition", "aaai2020"], "description": "Official Dynamic Graph Representation PyTorch implement for iris/face recognition"}
{"name": "meiyor/sincnet-for-autism-eeg-based-emotion-recognition", "full_name": "meiyor/SincNet-for-Autism-EEG-based-Emotion-Recognition", "topics": ["sincnet", "deep-learning", "autism", "autism-spectrum-disorder", "convolutional-neural-networks"], "description": "This project describes the necessary code to implement a EEG-based emotion recognition using SincNet [Ravanelli & Bengio 2018] including data from individuals diagnosed with Autism Spectrum Disorder (ASD). For more details and data request send an email to the authors and contributors Juan Manuel Mayor Torres (juan.mayortorres@unitn.it) and Mirco Ravanelli (mirco.ravanelli@gmail.com)"}
{"name": "toshas/torch_truncnorm", "full_name": "toshas/torch_truncnorm", "topics": ["pytorch", "distributions", "truncated-normal"], "description": "Truncated Normal Distribution in PyTorch"}
{"name": "lmbxmu/supervit", "full_name": "lmbxmu/SuperViT", "topics": [], "description": "Official Pytorch implementation of Super Vision Transformer"}
{"name": "relph1119/deeplearning-with-pytorch-notes", "full_name": "Relph1119/deeplearning-with-pytorch-notes", "topics": ["pytorch"], "description": "\u9f99\u66f2\u826f\u300aPyTorch\u6df1\u5ea6\u5b66\u4e60\u300b\u5b66\u4e60\u7b14\u8bb0\u53ca\u4ee3\u7801"}
{"name": "pelletierlab/noise2fast", "full_name": "pelletierlab/Noise2Fast", "topics": ["deep-learning", "image", "image-denoising", "image-processing", "self-supervised-learning"], "description": null}
{"name": "jh-lee-kr/dualprompt-pytorch", "full_name": "JH-LEE-KR/dualprompt-pytorch", "topics": ["continual-learning", "deep-learning", "pytorch-implementation"], "description": "Pytorch Implementation of DualPrompt: Complementary Prompting for Rehearsal-free Continual Learning @ ECCV22"}
{"name": "google-research/dataclass_array", "full_name": "google-research/dataclass_array", "topics": ["dataclass", "dataclasses", "jax", "numpy", "tensorflow"], "description": "Dataclasses which can be manipulated as numpy arrays (with batching, reshape, slicing,...)"}
{"name": "rintarooo/tsp_drl_ptrnet", "full_name": "Rintarooo/TSP_DRL_PtrNet", "topics": ["tsp", "deep-reinforcement-learning", "actor-critic", "pointer-networks", "active-search", "pytorch"], "description": "\"Neural Combinatorial Optimization with Reinforcement Learning\"[Bello+, 2016], Traveling Salesman Problem solver"}
{"name": "haibo-qiu/from", "full_name": "haibo-qiu/FROM", "topics": ["pytorch", "face-recognition", "deep-learning", "mask-face-recognition"], "description": "[TPAMI 2021] End2End Occluded Face Recognition by Masking Corrupted Features"}
{"name": "louisoutin/yolov5_torchserve", "full_name": "louisoutin/yolov5_torchserve", "topics": ["pytorch", "docker", "object-detection", "service", "batch-inference", "torchserve", "deep-learning"], "description": "Torchserve server using a YoloV5 model running on docker with GPU and static batch inference to perform production ready and real time inference."}
{"name": "cwmok/c2fvit", "full_name": "cwmok/C2FViT", "topics": [], "description": "This is the official Pytorch implementation of \"Affine Medical Image Registration with Coarse-to-Fine Vision Transformer\" (CVPR 2022), written by Tony C. W. Mok and Albert C. S. Chung."}
{"name": "mims-harvard/gnnguard", "full_name": "mims-harvard/GNNGuard", "topics": ["adversarial-attacks", "graph-neural-networks", "robust-learning", "graph-convolutional-networks", "deep-learning"], "description": "Defending graph neural networks against adversarial attacks (NeurIPS 2020)"}
{"name": "kentonishi/torch-time-stretch", "full_name": "KentoNishi/torch-time-stretch", "topics": ["torch", "pytorch", "sound-processing", "augmentation", "gpu-support", "torchaudio", "audio-augmentation", "time-stretch"], "description": "Time-stretch audio clips quickly with PyTorch (CUDA supported)! Additional utilities for searching efficient transformations are included."}
{"name": "takuyashintate/tsts", "full_name": "TakuyaShintate/tsts", "topics": ["deep-learning", "time-series-forecasting", "pytorch", "time-series", "informer", "nbeats", "scinet", "seq2seq", "dilate"], "description": "\ud83d\udcc8 toolset for time series forecasting"}
{"name": "yuuho/stylegans-pytorch", "full_name": "yuuho/stylegans-pytorch", "topics": ["pytorch", "stylegan2", "stylegan"], "description": "PyTorch StyleGAN2, StyleGAN\u306e\u518d\u73fe\u5b9f\u88c5"}
{"name": "novartis/scar", "full_name": "Novartis/scar", "topics": ["machine-learning", "single-cell-rna-seq", "denoising-algorithm", "variational-autoencoder", "probabilistic-graphical-models", "generative-model", "cite-seq", "crispr-screen", "pytorch"], "description": "scAR (single-cell Ambient Remover) is a deep learning model for removal of the ambient signals in droplet-based single cell omics"}
{"name": "mikecheninoulu/unsupervised_iepgan", "full_name": "mikecheninoulu/Unsupervised_IEPGAN", "topics": ["pytorch", "style-transfer", "3d", "meshes"], "description": "Source code for ICCV 2021 paper, IEPGAN"}
{"name": "nahidebrahimian/cars-detection-using-yolov5", "full_name": "NahidEbrahimian/Cars-Detection-using-Yolov5", "topics": ["detection", "pytorch", "yolov5"], "description": "Iranian Cars Detection using Yolov5s, PyTorch "}
{"name": "dali92002/docentr", "full_name": "dali92002/DocEnTR", "topics": ["document-binarization", "transformers", "deep-learning", "image-enhancement", "vision-transformer", "auto-encoders"], "description": "DocEnTr: An end-to-end document image enhancement transformer - ICPR 2022"}
{"name": "antoinebrl/torchextractor", "full_name": "antoinebrl/torchextractor", "topics": ["python3", "pytorch", "machine-learning", "feature-extraction"], "description": "Feature extraction made simple with torchextractor"}
{"name": "aserdega/convlstmgru", "full_name": "aserdega/convlstmgru", "topics": ["convlstm", "convgru", "pytorch", "video-prediction", "moving-mnist", "bouncing-mnist", "seq-to-seq", "encoder-decoder"], "description": "Pytorch implementations of ConvLSTM and ConvGRU modules with examples"}
{"name": "mj-will/nessai", "full_name": "mj-will/nessai", "topics": ["pytorch", "normalizing-flows", "nested-sampling", "python", "bayesian-inference", "bilby", "machine-learning"], "description": "nessai: Nested Sampling with Artificial Intelligence"}
{"name": "yi-ding-cs/lgg", "full_name": "yi-ding-cs/LGG", "topics": ["deep-learning", "eeg-classification", "graph-neural-networks"], "description": "[TNNLS-2023] This is the PyTorch implementation of LGGNet. "}
{"name": "haoran-song/pip-planning-informed-prediction", "full_name": "Haoran-SONG/PiP-Planning-informed-Prediction", "topics": ["deep-learning", "motion-forecasting", "trajectory-prediction", "trajectory-planning", "autonomous-driving", "eccv2020"], "description": "(ECCV 2020) PiP: Planning-informed Trajectory Prediction for Autonomous Driving"}
{"name": "twni2016/f-irl", "full_name": "twni2016/f-IRL", "topics": ["imitation-learning", "deep-reinforcement-learning", "inverse-reinforcement-learning", "maxent", "pytorch", "mujoco"], "description": "Inverse Reinforcement Learning via State Marginal Matching - CoRL 2020"}
{"name": "csiro-robotics/logg3d-net", "full_name": "csiro-robotics/LoGG3D-Net", "topics": ["deep-learning", "place-recognition", "lidar-point-cloud", "lidar", "3d", "learning", "pytroch", "contrastive-loss", "point-cloud", "robotics"], "description": "The official repository for paper \"LoGG3D-Net: Locally Guided Global Descriptor Learning for 3D Place Recognition\"  To appear in 2022 IEEE International Conference on Robotics and Automation (ICRA) https://arxiv.org/abs/2109.08336       "}
{"name": "clegaard/deep_learning_for_dynamical_systems", "full_name": "clegaard/deep_learning_for_dynamical_systems", "topics": ["deep-learning", "dynamical-systems", "numerical-simulation", "ordinary-differential-equations", "partial-differential-equations", "physics-informed-neural-networks", "scientific-machine-learning", "pytorch"], "description": null}
{"name": "lironui/maresu-net", "full_name": "lironui/MAResU-Net", "topics": ["attention-mechanism", "attention", "linear-attention", "segmentation", "semantic-segmentation", "remote-sensing"], "description": "The semantic segmentation of remote sensing images"}
{"name": "openmatch/coco-dr", "full_name": "OpenMatch/COCO-DR", "topics": ["bert", "dense-retrieval", "nlp", "transformer", "zero-shot", "zero-shot-retrieval", "contrastive-learning", "distributionally", "information-retrieval", "pretrained-language-model", "distributionally-robust"], "description": "[EMNLP 2022] This is the code repo for our EMNLP\u201822 paper \"COCO-DR: Combating Distribution Shifts in Zero-Shot Dense Retrieval with Contrastive and Distributionally Robust Learning\"."}
{"name": "lucidrains/molecule-attention-transformer", "full_name": "lucidrains/molecule-attention-transformer", "topics": ["artificial-intelligence", "deep-learning", "transformers", "molecules"], "description": "Pytorch reimplementation of Molecule Attention Transformer, which uses a transformer to tackle the graph-like structure of molecules"}
{"name": "ki-ljl/per-fedavg", "full_name": "ki-ljl/Per-FedAvg", "topics": ["per-fedavg", "pytorch"], "description": "PyTorch implementation of Per-FedAvg (Personalized Federated Learning: A Meta-Learning Approach)."}
{"name": "samyak0210/saliency", "full_name": "samyak0210/saliency", "topics": ["pytorch-implementation", "saliency-prediction", "simplenet", "saliency-models"], "description": "Pytorch Implementation of the paper - \"Tidying Deep Saliency Prediction Architectures\""}
{"name": "riroaki/capsnet", "full_name": "Riroaki/CapsNet", "topics": ["pytorch", "capsule-network", "capsule", "capsule-neural-networks"], "description": "A pytorch implementation of Capsule Network."}
{"name": "logintelligence/logadempirical", "full_name": "LogIntelligence/LogADEmpirical", "topics": ["deep-learning", "log-analysis", "log-based-anomaly-detection"], "description": "Log-based Anomaly Detection with Deep Learning: How Far Are We? (ICSE 2022, Technical Track)"}
{"name": "rayguan97/ganav-offroad", "full_name": "rayguan97/GANav-offroad", "topics": ["deep-learning", "terrain-analysis", "semantic-segmentation", "off-road", "navigation"], "description": "This is the code base for GANav: Group-wise Attention Network for Classifying Navigable Regions in Unstructured Outdoor Environments."}
{"name": "minglunhan/cif-pytorch", "full_name": "MingLunHan/CIF-PyTorch", "topics": ["speech-recognition", "continuous-integrate-and-fire", "asr", "automatic-speech-recognition", "cif", "integrate-and-fire", "alignment", "pytorch", "speech", "speech-to-text", "soft-alignment"], "description": "A PyTorch implementation of Continuous Integrate-and-Fire (CIF) mechanism/module/process in CIF-based speech recognition."}
{"name": "raghavian/cflow", "full_name": "raghavian/cFlow", "topics": [], "description": "This is official Pytorch implementation of \"Uncertainty quantification in medical image segmentation with Normalizing Flows\", Raghavendra Selvan et al. 2020"}
{"name": "vistec-ai/thai-nner", "full_name": "vistec-AI/Thai-NNER", "topics": ["acl2022", "thai-nner"], "description": "Pytorch implementation of paper: Thai Nested Named Entity Recognition"}
{"name": "lukashedegaard/pytorch-benchmark", "full_name": "LukasHedegaard/pytorch-benchmark", "topics": ["pytorch", "benchmark", "deep-learning", "gpu", "jetson", "flops", "timing-analysis", "python"], "description": "Easily benchmark PyTorch model FLOPs, latency, throughput, allocated gpu memory and energy consumption "}
{"name": "choubo/deviation-network-image", "full_name": "Choubo/deviation-network-image", "topics": ["anomaly-detection", "deep-learning", "outlier-detection"], "description": "Official PyTorch implementation of the paper \u201cExplainable Deep Few-shot Anomaly Detection with Deviation Networks\u201d, weakly/partially supervised anomaly detection, few-shot anomaly detection, image defect detection."}
{"name": "thuhcsi/tacotron", "full_name": "thuhcsi/tacotron", "topics": ["pytorch", "tacotron", "tacotron2", "tacotron-2", "tacotron-pytorch", "tacotron2-pytorch", "gst", "gst-tacotron", "gst-tacotron2"], "description": "PyTorch implementation of Tacotron and Tacotron2"}
{"name": "clin1223/vldet", "full_name": "clin1223/VLDet", "topics": ["iclr2023", "multi-modal", "object-detection", "open-vocabulary", "pytorch", "vision-and-language"], "description": "[ICLR 2023] PyTorch implementation of VLDet \uff08https://arxiv.org/abs/2211.14843\uff09"}
{"name": "tencentyouturesearch/personreid-youreid", "full_name": "TencentYoutuResearch/PersonReID-YouReID", "topics": ["person-reid", "identification", "pytorch", "person-reidentification", "baseline", "market1501", "msmt17"], "description": "A Simple, High-efficiency, Strong framework for person re-Identification."}
{"name": "joennlae/halutmatmul", "full_name": "joennlae/halutmatmul", "topics": ["machine-learning", "matrix-multiplication", "pytorch", "amm", "cuda", "cuda-kernels"], "description": "Hashed Lookup Table based Matrix Multiplication (halutmatmul) built on MADDness/bolt"}
{"name": "rkouye/es-clip-image-search", "full_name": "rkouye/es-clip-image-search", "topics": ["elasticsearch", "image-search", "nlp", "opensearch", "knn"], "description": "Sample implementation of natural language image search with OpenAI's CLIP and Elasticsearch or Opensearch."}
{"name": "srvcodes/continual-learning-benchmark", "full_name": "srvCodes/continual-learning-benchmark", "topics": ["lifelong-machine-learning", "continual-learning", "incremental-learning", "pytorch", "tsne", "icml-2020"], "description": "Benchmarking continual learning techniques for Human Activity Recognition data. We offer interesting insights on how the performance techniques vary with a domain other than images."}
{"name": "audreycui/relighting", "full_name": "audreycui/relighting", "topics": ["computational-photography", "computer-vision", "deep-learning", "gans", "lighting", "research"], "description": "Local Relighting of Real Scenes"}
{"name": "layer6ai-labs/hgcf", "full_name": "layer6ai-labs/HGCF", "topics": ["pytorch", "recommender-system", "graph-neural-networks", "python"], "description": "Code for the WWW'21 paper \"HGCF: Hyperbolic Graph Convolution Networks for Collaborative Filtering\""}
{"name": "zimoqingfeng/umop", "full_name": "zimoqingfeng/UMOP", "topics": ["pytorch", "object-detection"], "description": null}
{"name": "ligouhai-bigone/sentiment-analysis-chinese-pytorch", "full_name": "Ligouhai-bigone/Sentiment-Analysis-Chinese-pytorch", "topics": [], "description": "Sentiment Analysis-Pytorch(\u60c5\u611f\u5206\u6790\u7684Pytorch\u5b9e\u73b0)"}
{"name": "ut-austin-rpl/prelude", "full_name": "UT-Austin-RPL/PRELUDE", "topics": ["deep-learning", "quadruped-robot", "robotics", "locomotion-control"], "description": "Official codebase for Perceptive Locomotion Under Dynamic Environments (PRELUDE) "}
{"name": "rhett-chen/graspness_implementation", "full_name": "rhett-chen/graspness_implementation", "topics": ["graspnet", "graspness", "minkowskiengine", "pytorch", "graspnet-1billion"], "description": "My implementation of Graspnet Graspness."}
{"name": "neuralchen/rainnet", "full_name": "neuralchen/RainNet", "topics": ["climate-change", "dataset", "deep-learning", "meteorology", "neurips-2022"], "description": "[NeurIPS 2022]RainNet: A Large-Scale Imagery Dataset and Benchmark for Spatial Precipitation Downscaling"}
{"name": "koukyo1994/kaggle-birdcall-6th-place", "full_name": "koukyo1994/kaggle-birdcall-6th-place", "topics": ["python", "pytorch", "kaggle", "kaggle-solution", "birdsong-recognition", "audio-tagging", "sound-event-detection"], "description": "Training code of Cornell Birdcall Identification Challenge 6th place solution"}
{"name": "tianhongzxy/pytorch-sakt", "full_name": "TianHongZXY/pytorch-SAKT", "topics": ["pytorch", "nlp", "knowledge-tracing"], "description": "a simple pytorch implemention of paper A Self-Attentive model for Knowledge Tracing"}
{"name": "gerbenbeintema/deepsi", "full_name": "GerbenBeintema/deepSI", "topics": ["deep-learning", "dynamical-systems", "machine-learning"], "description": "Dynamical System Identification using python incorporating numerous powerful deep learning methods. (deepSI = deep System Identification)"}
{"name": "zhongyang-debug/attention-is-all-you-need-in-speech-separation", "full_name": "Zhongyang-debug/Attention-Is-All-You-Need-In-Speech-Separation", "topics": ["pytorch"], "description": "Speech Separation"}
{"name": "omarfoq/communication-in-cross-silo-fl", "full_name": "omarfoq/communication-in-cross-silo-fl", "topics": ["federated-learning", "training-inaturalist", "pytorch"], "description": "Official code for \"Throughput-Optimal Topology Design for Cross-Silo Federated Learning\" (NeurIPS'20)"}
{"name": "saminens/medi-coqa", "full_name": "saminens/Medi-CoQA", "topics": ["conversational-ai", "pytorch", "question-answering", "dockerfile", "coqa", "squad", "albert", "clinicalbert", "bert"], "description": "Conversational Question Answering on Clinical Text"}
{"name": "green-wood/comer", "full_name": "Green-Wood/CoMER", "topics": ["deep-learning", "eccv2022", "encoder-decoder", "handwritten-text-recognition", "latex", "math-recognition", "pytorch", "pytorch-lightning", "transformer"], "description": "Official implementation for ECCV 2022 paper \"CoMER: Modeling Coverage for Transformer-based Handwritten Mathematical Expression Recognition\""}
{"name": "zerovl/zerovl", "full_name": "zerovl/ZeroVL", "topics": ["clip", "cross-modal", "deep-learning", "vision-and-language"], "description": "[ECCV2022] Contrastive Vision-Language Pre-training with Limited Resources"}
{"name": "dacus1995/pytorch-mmap-dataset", "full_name": "DACUS1995/pytorch-mmap-dataset", "topics": ["dataset", "memory-mapping", "mmap", "pytorch", "deep-learning"], "description": "A custom pytorch Dataset extension that provides a faster iteration and better RAM usage"}
{"name": "openfirework/pytorch_solov2", "full_name": "OpenFirework/pytorch_solov2", "topics": ["instance-segmentation", "cv"], "description": "SOLOv2 pytorch (without mmdetection and mmcv)"}
{"name": "wangle53/csa-cdgan", "full_name": "wangle53/CSA-CDGAN", "topics": ["gan", "pytorch", "deep-learning", "generative-adversarial-network"], "description": "A general framework for change detection of remote sensing images"}
{"name": "inhwanbae/gpgraph", "full_name": "InhwanBae/GPGraph", "topics": ["autonomous-vehicles", "deep-learning", "eccv2022", "human-trajectory-prediction", "motion-forecasting", "multi-agent"], "description": "Official Code for \"Learning Pedestrian Group Representations for Multi-modal Trajectory Prediction (ECCV 2022)\""}
{"name": "christos42/cldr_clner_models", "full_name": "christos42/CLDR_CLNER_models", "topics": ["contrastive-learning", "deep-learning", "knowledge-extraction", "languange-model", "language-model-finetuning", "representation-learning", "information-extraction", "graphs"], "description": "Though language model text embeddings have revolutionized NLP research, their ability to capture high-level semantic information, such as relations between entities in text, is limited. In this paper, we propose a novel contrastive learning framework that trains sentence embeddings to encode the relations in a graph structure. Given a sentence (unstructured text) and its graph, we use contrastive learning to impose relation-related structure on the token level representations of the sentence obtained with a CharacterBERT (El Boukkouri et al., 2020) model. The resulting relation-aware sentence embeddings achieve state-of-the-art results on the relation extraction task using only a simple KNN classifier, thereby demonstrating the success of the proposed method. Additional visualization by a tSNE analysis shows the effectiveness of the learned representation space compared to baselines. Furthermore, we show that we can learn a different space for named entity recognition, again using a contrastive learning objective, and demonstrate how to successfully combine both representation spaces in an entity-relation task."}
{"name": "deng-mit/reactorch", "full_name": "DENG-MIT/reactorch", "topics": ["combustion", "pytorch", "chemical-kinetics", "fluid-dynamics", "scientific-machine-learning", "kinetics"], "description": "A Differentiable Reacting Flow Simulation Package in PyTorch"}
{"name": "zejunwang1/bertorch", "full_name": "zejunwang1/bertorch", "topics": [], "description": "\u57fa\u4e8e pytorch \u7684 bert \u5b9e\u73b0\u548c\u4e0b\u6e38\u4efb\u52a1\u5fae\u8c03"}
{"name": "haibo-qiu/gfnet", "full_name": "haibo-qiu/GFNet", "topics": ["deep-learning", "point-cloud", "pytorch", "semantic-segmentation"], "description": "[TMLR 2022] Geometric Flow Network for 3D Point Cloud Semantic Segmentation"}
{"name": "raghavian/lotenet_pytorch", "full_name": "raghavian/loTeNet_pytorch", "topics": [], "description": "Official Pytorch implementation of model in  \"Tensor Networks for Medical Image Classification\", Raghavendra Selvan & Erik Dam, MIDL 2020"}
{"name": "abrazinskas/selsum", "full_name": "abrazinskas/SelSum", "topics": ["summarization", "deep-learning", "natural-language-processing", "natural-language-understanding", "variational-inference", "reinforcement-learning", "amazon", "opinion-mining"], "description": "Abstractive opinion summarization system (SelSum) and the largest dataset of Amazon product summaries (AmaSum). EMNLP 2021 conference paper."}
{"name": "ayanglab/swinmr", "full_name": "ayanglab/SwinMR", "topics": ["mri-reconstruction", "transformer-models", "swin-transformer", "deep-learning", "computer-vision"], "description": "This is the official implementation of our proposed SwinMR"}
{"name": "laura-wang/video_repres_sts", "full_name": "laura-wang/video_repres_sts", "topics": [], "description": "Pytorch implementation of  our T-PAMI 2021 paper: Self-supervised Video Representation Learning by Uncovering Motion and Appearance Statistics"}
{"name": "paul007pl/gmcnet", "full_name": "paul007pl/GMCNet", "topics": ["point-cloud-registration", "3d-points", "transformer", "point-transformer", "point-cloud"], "description": "Robust Partial-to-Partial Point Cloud Registration in a Full Range"}
{"name": "vincentstimper/resampled-base-flows", "full_name": "VincentStimper/resampled-base-flows", "topics": ["normalizing-flows", "resampled-base-distribution", "pytorch"], "description": "Normalizing Flows with a resampled base distribution"}
{"name": "cv-rits/manifest", "full_name": "astra-vision/ManiFest", "topics": ["few-shot", "few-shot-learning", "image-to-image-translation", "gan", "gans", "generative-adversarial-network", "generative-model", "conditional-gan", "one-shot-learning", "one-shot", "image-translation", "image-processing", "eccv", "computer-vision", "cvpr", "eccv2022"], "description": "Few-shot image translation method working on unstructured environments. ECCV 2022"}
{"name": "ggsding/lanet", "full_name": "ggsDing/LANet", "topics": [], "description": "Pytorch codes for 'LANet: Local Attention Embedding to Improve the Semantic Segmentation of Remote Sensing Images'"}
{"name": "pashtari/factorizer", "full_name": "pashtari/factorizer", "topics": [], "description": "Pytorch implementation of Factorizer."}
{"name": "chenjiashuo123/ccf_2020_beike", "full_name": "chenjiashuo123/CCF_2020_BEIKE", "topics": ["ccf", "text-classification", "pytorch", "bert"], "description": "CCF BDCI 2020 \u623f\u4ea7\u884c\u4e1a\u804a\u5929\u95ee\u7b54\u5339\u914d\u8d5b\u9053 A\u699c47/2985"}
{"name": "samsad35/source-filter-vae", "full_name": "samsad35/source-filter-vae", "topics": ["variational-autoencoder", "audio-processing", "source-filter", "latent-space", "deep-learning", "machine-learning", "speech-synthesis", "speech", "pitch-control", "formant-control"], "description": "Learning and controlling the source-filter representation of speech with a variational autoencoder"}
{"name": "crazorback/aadg", "full_name": "CRazorback/AADG", "topics": ["domain-generalization", "pytorch", "reinforcement-learning", "retinal-images"], "description": "[TMI'22] \"AADG: Automatic Augmentation for Domain Generalization on Retinal Image Segmentation\"."}
{"name": "syuntoku14/pytorch-rl-il", "full_name": "syuntoku14/pytorch-rl-il", "topics": [], "description": "A library for building reinforcement learning and imitation learning agents in Pytorch"}
{"name": "astorfi/cor-gan", "full_name": "astorfi/cor-gan", "topics": ["deep-learning", "generative-adversarial-network", "pytorch", "python", "healthcare", "synthetic-dataset-generation"], "description": ":unlock: COR-GAN: Correlation-Capturing Convolutional Neural Networks for Generating Synthetic Healthcare Records"}
{"name": "minkaixu/cgcf-confgen", "full_name": "MinkaiXu/CGCF-ConfGen", "topics": ["molecule", "conformation-generation", "iclr", "iclr2021", "conformer", "conformation", "pytorch"], "description": ":test_tube: Learning Neural Generative Dynamics for Molecular Conformation Generation (ICLR 2021)"}
{"name": "xiusu/vitas", "full_name": "xiusu/ViTAS", "topics": ["neural-architecture-search", "automl", "deep-learning", "nas", "vision-transformer", "channel-search", "nas-search-space", "vision-transformer-search-space", "block-level-architectures"], "description": "Code for ViTAS_Vision Transformer Architecture Search"}
{"name": "gt4sd/zberta", "full_name": "GT4SD/zberta", "topics": ["bert", "deep-learning", "intent", "intent-classification", "intent-detection", "nlp", "pytorch", "transformers", "zero-shot", "zero-shot-classification"], "description": "Implementation of Z-BERT-A: a zero-shot pipeline for unknown intent detection."}
{"name": "tongjilibo/rec4torch", "full_name": "Tongjilibo/rec4torch", "topics": ["ctr", "deepfm", "dien", "widedeep"], "description": "\u63a8\u8350\u7cfb\u7edf\u7684pytorch\u7b97\u6cd5\u5b9e\u73b0"}
{"name": "hankyul2/efficientnetv2-pytorch", "full_name": "hankyul2/EfficientNetV2-pytorch", "topics": ["efficientnetv2", "pytorch", "pytorch-lightning"], "description": "EfficientNetV2 pytorch (pytorch lightning) implementation with pretrained model"}
{"name": "lannguyen0910/food-detection-yolov5", "full_name": "lannguyen0910/food-recognition", "topics": ["object-detection", "yolov5", "pytorch", "food-detection", "efficientnet", "computer-vision", "deep-learning", "yolo", "semantic-segmentation", "image-classification", "unetplusplus", "food-classification", "food-segmentation", "food-analysis"], "description": "\ud83c\udf54\ud83c\udf5f\ud83c\udf57 Food analysis baseline  with Theseus. Integrate object detection, image classification and multi-class semantic segmentation. \ud83c\udf5e\ud83c\udf56\ud83c\udf55"}
{"name": "lingyunwu14/stft", "full_name": "lingyunwu14/STFT", "topics": ["pytorch", "video-object-detection"], "description": "Spatial-Temporal Feature Transformation for Video Object Detection, MICCAI2021"}
{"name": "orion-ai-lab/wildfire_forecasting", "full_name": "Orion-AI-Lab/wildfire_forecasting", "topics": ["deep-learning", "pytorch-lightning", "wildfires"], "description": "Deep Learning Models for Wildfire Danger Forecasting"}
{"name": "fredzzhang/hicodet", "full_name": "fredzzhang/hicodet", "topics": ["dataset", "human-object-interaction", "pytorch", "python3"], "description": "Utilities for the human-object interaction detection dataset HICO-DET"}
{"name": "etetteh/sota-data-augmentation-and-optimizers", "full_name": "etetteh/sota-data-augmentation-and-optimizers", "topics": [], "description": "This repository contains some of the latest data augmentation techniques and optimizers for image classification using pytorch and the CIFAR10 dataset"}
{"name": "tianxiangma/must-gan", "full_name": "TianxiangMa/MUST-GAN", "topics": ["cvpr2021", "gan", "person-image-generation"], "description": "Pytorch implementation of CVPR2021 paper \"MUST-GAN: Multi-level Statistics Transfer for Self-driven Person Image Generation\""}
{"name": "zwcolin/eeg-transformer", "full_name": "zwcolin/EEG-Transformer", "topics": ["eeg-classification", "bci", "vit", "transformer"], "description": "A ViT based transformer applied on multi-channel time-series EEG data for motor imagery classification"}
{"name": "agrija9/deep-unsupervised-domain-adaptation", "full_name": "agrija9/Deep-Unsupervised-Domain-Adaptation", "topics": ["domain-adaptation", "convolutional-neural-networks", "coral-loss", "unsupervised-learning", "deep-coral", "deep-domain-confusion", "conditional-adversarial-da"], "description": "Pytorch implementation of four neural network based domain adaptation techniques: DeepCORAL, DDC, CDAN and CDAN+E. Evaluated on benchmark dataset Office31."}
{"name": "v-iashin/sparsesync", "full_name": "v-iashin/SparseSync", "topics": ["audio-visual", "bmvc", "lrs", "pytorch", "synchronization", "transformer", "vggsound", "multi-modal", "sparse"], "description": "Source code for \"Sparse in Space and Time: Audio-visual Synchronisation with Trainable Selectors.\" (Spotlight at the BMVC 2022) "}
{"name": "mrrobot2211/pytorch-deep-photo-enhancer", "full_name": "MrRobot2211/pytorch-deep-photo-enhancer", "topics": ["deep-photo-enhancer", "pytorch", "gans"], "description": "pytorch implementation of deep photo enhancer"}
{"name": "smhassanerfani/atlantis", "full_name": "smhassanerfani/atlantis", "topics": ["dataset", "semantic-segmentation", "water-resources", "deep-learning", "python", "pytorch", "cnn-architecture"], "description": "A Benchmark for Semantic Segmentation of Waterbody Images"}
{"name": "wq2012/speakerrecognitionfromscratch", "full_name": "wq2012/SpeakerRecognitionFromScratch", "topics": ["attention-mechanism", "deep-learning", "librispeech", "lstm", "neural-network", "pytorch", "speaker-recognition", "speaker-recognition-systems", "transformer", "transformer-models"], "description": "Final project for the Speaker Recognition course on Udemy, \u673a\u5668\u4e4b\u5fc3, \u6df1\u84dd\u5b66\u9662 and \u8bed\u97f3\u4e4b\u5bb6"}
{"name": "yining043/pdp-n2s", "full_name": "yining043/PDP-N2S", "topics": ["neural-combinatorial-optimization", "pickup-and-delivery", "reinforcement-learning", "transformer", "vehicle-routing-problem"], "description": "This repo implements our paper, \"Efficient Neural Neighborhood Search for Pickup and Delivery Problems\", which has been accepted as short oral at IJCAI 2022."}
{"name": "bubbliiiing/yolact-pytorch", "full_name": "bubbliiiing/yolact-pytorch", "topics": [], "description": "\u8fd9\u662f\u4e00\u4e2ayolact-pytorch\u7684\u5e93\uff0c\u53ef\u7528\u4e8e\u8bad\u7ec3\u81ea\u5df1\u7684\u6570\u636e\u96c6"}
{"name": "csinva/imodelsx", "full_name": "csinva/imodelsX", "topics": ["ai", "deep-learning", "explainability", "huggingface", "interpretability", "language-model", "machine-learning", "ml", "natural-language-processing", "natural-language-understanding", "neural-network", "pytorch", "text", "text-classification", "transformer-models", "xai"], "description": "Interpretable prompting and models for NLP (using large language models)."}
{"name": "mascerade/supervised-product-matching", "full_name": "Mascerade/supervised-product-matching", "topics": ["python", "machine-learning", "neural-network", "product-matching", "bert", "pytorch", "nlp", "natural-language-processing", "transformer", "characterbert"], "description": "\u2696\ufe0f Neural network for product matching, aka classifying whether two product titles represent the same entity"}
{"name": "nateraw/hf-hub-lightning", "full_name": "nateraw/hf-hub-lightning", "topics": ["machine-learning", "huggingface", "pytorch-lightning"], "description": "A PyTorch Lightning Callback for pushing models to the Hugging Face Hub \ud83e\udd17\u26a1\ufe0f"}
{"name": "elegan23/hypernets", "full_name": "eleGAN23/HyperNets", "topics": ["convolutional-neural-networks", "hypercomplex-neural-networks", "lightweight-neural-network", "efficient-neural-networks", "quaternion-neural-networks", "hypercomplex-algebra", "phc", "phm", "pytorch", "hypercomlpex-parameterization", "parameterize-neural-network", "lightweight-convolution", "hypercomplex", "hypercomplex-convolution", "parameterize-hypercomplex-layer"], "description": "Hypercomplex Neural Networks with PyTorch"}
{"name": "asrafulashiq/transfer_broad", "full_name": "asrafulashiq/transfer_broad", "topics": ["transfer-learning", "contrastive-learning", "cross-domain-learning", "iccv2021", "self-supervised-learning"], "description": "Pytorch Code for \"A Broad Study on the Transferability of Visual Representations with Contrastive Learning\" (ICCV 2021)"}
{"name": "chaineypung/ccf-bdci-2021-ulseg-rank1st", "full_name": "chaineypung/CCFBDCI-2021-Ultrasonic-Tumor-Segmentation-Rank1st", "topics": ["ultrasound-imaging", "hemangioma", "tumor-segmentation", "pytorch", "deep-neural-networks", "medical-imaging"], "description": "This is the source code of the 1st place solution for segmentation task (with Dice 90.32%) in 2021 CCF BDCI challenge."}
{"name": "helioszhao/shade", "full_name": "HeliosZhao/SHADE", "topics": ["domain-generalization", "eccv2022", "pytorch", "semantic-segmentation"], "description": "Style-Hallucinated Dual Consistency Learning for Domain Generalized Semantic Segmentation. ECCV 2022"}
{"name": "jhauret/eben", "full_name": "jhauret/eben", "topics": ["bandwidth-extension", "pytorch", "signal-processing", "speech-enhancement", "pqmf-banks"], "description": "Repo for source code of EBEN: Extreme Bandwidth Extension Network"}
{"name": "torrient/video-summarization-pytorch", "full_name": "TorRient/Video-Summarization-Pytorch", "topics": ["video-summarization", "video-summaries", "deep-learning", "unsupervised-learning", "computer-vision"], "description": "IMPLEMENT AAAI 2018 - Unsupervised video summarization with deep reinforcement learning (PyTorch)"}
{"name": "vita-group/m3vit", "full_name": "VITA-Group/M3ViT", "topics": ["transformer"], "description": "[NeurIPS 2022] \u201cM\u00b3ViT: Mixture-of-Experts Vision Transformer for Efficient Multi-task Learning with Model-Accelerator Co-design\u201d, Hanxue Liang*, Zhiwen Fan*, Rishov Sarkar, Ziyu Jiang, Tianlong Chen, Kai Zou, Yu Cheng, Cong Hao, Zhangyang Wang"}
{"name": "hqucms/weaver", "full_name": "hqucms/weaver", "topics": ["python", "deep-learning", "neural-network", "numpy", "pytorch", "hep", "hep-ex", "root-cern"], "description": "Streamlined neural network training."}
{"name": "nianticlabs/relpose-gnn", "full_name": "nianticlabs/relpose-gnn", "topics": ["computer-vision", "machine-learning", "3dv2021", "niantic", "eth-zurich", "ucl", "gnn", "gnns", "graph-neural-networks", "deep-learning", "machine-vision", "relocalization", "relocalisation", "relative-position", "pose-estimation"], "description": "[3DV21] Visual Camera Re-Localization Using Graph Neural Networks and Relative Pose Supervision, M. T\u00fcrko\u01e7lu et al."}
{"name": "aryankargwal/capbot2.0", "full_name": "aryankargwal/capbot2.0", "topics": ["computer-vision", "nlp", "surveillance-systems", "encryption-decryption", "streamlit", "pytorch", "pandas", "hackathon"], "description": "Repository to hold code for the cap-bot varient that is being presented at the SIIC Defence Hackathon 2021."}
{"name": "navervision/proxy-synthesis", "full_name": "navervision/proxy-synthesis", "topics": ["aaai2021", "pytorch", "proxy-synthesis", "metric-learning", "image-retrieval", "deep-learning", "deep-metric-learning", "cars196", "regularizer", "proxy-based", "synthetic-classes", "norm-softmax", "proxy-nca"], "description": "Official PyTorch implementation of \"Proxy Synthesis: Learning with Synthetic Classes for Deep Metric Learning\" (AAAI 2021)"}
{"name": "mats-robotics/yolov5_ros", "full_name": "mats-robotics/yolov5_ros", "topics": ["yolov5", "deep-learning", "ros", "ros-noetic", "onnx", "tflite", "pytorch", "object-detection"], "description": "A complete ROS interface for running YOLOv5 inference"}
{"name": "atrcheema/dl4seq", "full_name": "AtrCheema/AI4Water", "topics": ["machine-learning", "deep-learning", "tabular-data", "time-series"], "description": "framework for developing machine (and deep) learning models for structured data"}
{"name": "euphoriayan/zi2zi-pytorch", "full_name": "EuphoriaYan/zi2zi-pytorch", "topics": [], "description": "zi2zi implement with pytorch"}
{"name": "ofnote/gestop", "full_name": "ofnote/gestop", "topics": ["mediapipe", "hand-gestures", "pytorch", "pytorch-lightning", "deep-learning"], "description": "A tool to navigate the desktop with hand gestures. Builds on mediapipe."}
{"name": "hanyoseob/pytorch-noise2void", "full_name": "hanyoseob/pytorch-noise2void", "topics": ["deep-learning", "deep-neural-networks", "unsupervised-learning", "noise2void", "cnn", "pytorch-gan"], "description": "Noise2Void - Learning Denoising from Single Noisy Images"}
{"name": "easylearn-fmri/easylearn_dev", "full_name": "easylearn-fmri/easylearn_dev", "topics": ["resting-state-fmri", "machine-learning", "radiomics", "deep-learning", "neuroimaging", "graphic-user-interface"], "description": "Easylearn is designed for machine learning mainly in resting-state fMRI, radiomics and other fields (such as EEG). Easylearn is built on top of scikit-learn, pytorch and other packages. Easylearn can assist doctors and researchers who have limited coding experience to easily realize machine learning, e.g., (MR/CT/PET/EEG)imaging-marker- or other biomarker-based disease diagnosis and prediction, treatment response prediction,  disease subtyping, dimensional decoding for transdiagnostic psychiatric diseases or other diseases, disease mechanism exploration and etc.  "}
{"name": "bm-k/kosentencebert_sktbert", "full_name": "BM-K/KoSentenceBERT-SKT", "topics": ["sentence-bert", "sentence-similarity", "natural-language-processing", "korean-sentence-bert"], "description": "Sentence Embeddings using Siamese SKT KoBERT-Networks"}
{"name": "rolnicklab/climart", "full_name": "RolnickLab/climart", "topics": ["radiative-transfer", "emulation", "dataset", "climart", "climate-change", "machine-learning", "atmospheric-science", "neural-networks", "distributional-shift", "pytorch"], "description": "A benchmark dataset for Machine Learning emulation of atmospheric radiative transfer in weather and climate models (NeurIPS 2021 Datasets and Benchmarks Track)"}
{"name": "daintlab/confidence-aware-learning", "full_name": "daintlab/confidence-aware-learning", "topics": ["pytorch"], "description": "Confidence-Aware Learning for Deep Neural Networks (ICML2020)"}
{"name": "jiangyanting/taidi_2020_data_ming_c", "full_name": "JiangYanting/Taidi_2020_Data_Ming_C", "topics": ["data-mining", "natural-language-processing", "machine-learning", "bert"], "description": "2020\u5e74\u7b2c\u516b\u5c4a\u6cf0\u8fea\u676f\u6570\u636e\u6316\u6398C\u9898\u201c\u667a\u6167\u653f\u52a1\u6587\u672c\u6316\u6398\u201d\u7279\u7b49\u5956\u4f5c\u54c1\uff08\u8bba\u6587\u4e0e\u4ee3\u7801\uff09"}
{"name": "karol-g/gcam", "full_name": "Karol-G/Gcam", "topics": ["pytorch", "gradcam", "gradcam-plus-plus", "grad-cam", "guided-backpropagation", "guidedgradcam", "visualization", "saliency", "cnn-visualization", "guided-grad-cam", "segmentation", "2d", "3d", "medical-imaging", "gradient-visualization", "gcam"], "description": "Gcam is an easy to use Pytorch library that makes model predictions more interpretable for humans.  It allows the generation of attention maps with multiple methods like Guided Backpropagation,  Grad-Cam, Guided Grad-Cam and Grad-Cam++."}
{"name": "bubbliiiing/detr-pytorch", "full_name": "bubbliiiing/detr-pytorch", "topics": [], "description": "\u8fd9\u662f\u4e00\u4e2aDETR-pytorch\u7684\u4ed3\u5e93\uff0c\u53ef\u4ee5\u8bad\u7ec3\u81ea\u5df1\u7684\u6570\u636e\u96c6"}
{"name": "pingyu-iris/sa-gcn", "full_name": "PingYu-iris/SA-GCN", "topics": [], "description": "This code repository presents the pytorch implementation of the paper \u201cStructure-Aware Human-ActionGeneration\u201d(ECCV 2020)."}
{"name": "kaminyou/urust", "full_name": "Kaminyou/URUST", "topics": ["computer-vision", "deep-learning", "eccv-2022", "gan", "image-to-image-translation", "eccv2022"], "description": "[ECCV 2022] URUST: Ultra-high-resolution unpaired stain transformation via Kernelized Instance Normalization"}
{"name": "hanxunh/active-passive-losses", "full_name": "HanxunH/Active-Passive-Losses", "topics": ["icml-2020", "label-noise", "pytorch", "icml", "noisy-labels", "deep-learning", "deep-neural-networks", "noisy-data", "unreliable-labels", "robust-learning"], "description": "[ICML2020] Normalized Loss Functions for Deep Learning with Noisy Labels"}
{"name": "oichii/deeppulse-pytorch", "full_name": "Oichii/DeepPulse-pytorch", "topics": ["gradcam", "pytorch", "hr-cnn", "physnet-3d", "physnet", "pulse", "heart-rate"], "description": "PyTorch implementation of pulse measurement neural networks."}
{"name": "wang-ml-lab/grda", "full_name": "Wang-ML-Lab/GRDA", "topics": ["adversarial-learning", "domain-adaptation", "graph-learning", "graphs", "relational-learning", "transfer-learning", "deep-learning", "deep-learning-models", "game-theory", "statistical-machine-learning"], "description": "[ICLR 2022] Graph-Relational Domain Adaptation"}
{"name": "cnstark/easytorch", "full_name": "cnstark/easytorch", "topics": ["pytorch", "deep-learning"], "description": "Simple and powerful pytorch framework."}
{"name": "bojone/cdial-gpt-tf", "full_name": "bojone/CDial-GPT-tf", "topics": [], "description": "\u7528bert4keras\u52a0\u8f7dCDial-GPT"}
{"name": "ryanxhr/dwbc", "full_name": "ryanxhr/DWBC", "topics": ["imitation-learning", "offline-reinforcement-learning", "pytorch"], "description": "Author's implementation of DWBC in \"Discriminator-Weighted Offline Imitation Learning from Suboptimal Demonstrations\""}
{"name": "yukewang96/tcgnn-pytorch", "full_name": "YukeWang96/TCGNN-Pytorch", "topics": ["pytorch", "graph-neural-networks", "deep-learning", "tensorcores", "gpu", "cuda"], "description": "TC-GNN with Pytorch integration"}
{"name": "csiro-robotics/incloud", "full_name": "csiro-robotics/InCloud", "topics": ["catastrophic-forgetting", "continual-learning", "deep-learning", "incremental-learning", "lidar", "lidar-point-cloud", "lifelong-learning", "place-recognition", "pytorch"], "description": "InCloud: Incremental Learning for Point Cloud Place Recognition IROS2022  https://arxiv.org/abs/2203.00807"}
{"name": "kingjamessong/differentiablesvd", "full_name": "KingJamesSong/DifferentiableSVD", "topics": ["svd", "svd-matrix-factorisation", "svd-factorization", "style-transfer", "image-recognition", "deep-learning", "imagenet-classification", "fine-grained-visual-categorization", "fine-grained-classification", "iccv21", "pytorch", "end-to-end-svd", "differentiable-svd"], "description": "A collection of differentiable SVD methods and also the official implementation of the ICCV21 paper \"Why Approximate Matrix Square Root Outperforms Accurate SVD in Global Covariance Pooling?\""}
{"name": "vita-group/gan-lth", "full_name": "VITA-Group/GAN-LTH", "topics": ["gan", "generative-adversarial-network", "lottery-ticket-hypothesis", "transfer", "pruning"], "description": "[ICLR 2021] \"GANs Can Play Lottery Too\" by Xuxi Chen, Zhenyu Zhang, Yongduo Sui, Tianlong Chen "}
{"name": "jsksxs360/how-to-use-transformers", "full_name": "jsksxs360/How-to-use-Transformers", "topics": ["nlp", "pytorch", "transformers"], "description": "Transformers \u5e93\u5feb\u901f\u5165\u95e8\u6559\u7a0b"}
{"name": "bubbliiiing/hrnet-pytorch", "full_name": "bubbliiiing/hrnet-pytorch", "topics": [], "description": "\u8fd9\u662f\u4e00\u4e2ahrnet-pytorch\u7684\u5e93\uff0c\u53ef\u7528\u4e8e\u8bad\u7ec3\u81ea\u5df1\u7684\u8bed\u4e49\u5206\u5272\u6570\u636e\u96c6"}
{"name": "toriving/text-classification-transformers", "full_name": "toriving/text-classification-transformers", "topics": ["huggingface-transformers", "transformers", "text-classification", "deep-learning", "pytorch", "korean", "bert-model", "kobert", "huggingface-models"], "description": "Easy text classification for everyone : Bert based models via Huggingface transformers (KR / EN)"}
{"name": "tk-rusch/lem", "full_name": "tk-rusch/LEM", "topics": ["recurrent-neural-networks", "time-series", "keyword-spotting", "google12", "dynamical-systems", "iclr2022", "iclr", "deep-learning", "lem"], "description": "Official code for Long Expressive Memory (ICLR 2022, Spotlight)"}
{"name": "alvinchangw/cocon_iclr2021", "full_name": "alvinchangw/COCON_ICLR2021", "topics": [], "description": "Pytorch implementation of CoCon: A Self-Supervised Approach for Controlled Text Generation "}
{"name": "hitlic/bijou", "full_name": "hitlic/bijou", "topics": [], "description": "A fastai-like framework for training, tuning and probing pytorch models, which is compatible with pytorch_geometric and DGL."}
{"name": "bojone/cpm_lm_bert4keras", "full_name": "bojone/CPM_LM_bert4keras", "topics": [], "description": "\u5728bert4keras\u4e0b\u52a0\u8f7dCPM_LM\u6a21\u578b"}
{"name": "bohuanglab/protein-localization-transformer", "full_name": "BoHuangLab/Protein-Localization-Transformer", "topics": ["artificial-intelligence", "attention-mechanism", "deep-learning", "language-modeling", "multi-modal", "pytorch", "text-to-image", "transformers", "protein-sequences"], "description": "Code for CELL-E: Biological Zero-Shot Text-to-Image Synthesis for Protein Localization Prediction"}
{"name": "alexklwong/subpixel-embedding-segmentation", "full_name": "alexklwong/subpixel-embedding-segmentation", "topics": ["deep-learning", "computer-vision", "machine-learning", "pytorch", "mri", "medical-imaging", "segmentation", "stroke-lesion", "atlas", "ischemic-stroke", "lesion-segmentation", "ucla"], "description": "PyTorch Implementation of Small Lesion Segmentation in Brain MRIs with Subpixel Embedding (ORAL, MICCAIW 2021)"}
{"name": "yanjh97/transgrasp", "full_name": "yanjh97/TransGrasp", "topics": ["grasp", "pytorch", "robot", "category-level", "grasp-transfer", "grasp-pose-estimation"], "description": "[ECCV 2022] TransGrasp: Grasp Pose Estimation of a Category of Objects by Transferring Grasps from Only One Labeled Instance"}
{"name": "wyysf-98/moco_flow", "full_name": "wyysf-98/MoCo_Flow", "topics": ["dynamic-nerf", "dynamic-scenes", "nerf", "pytorch", "digital-human", "humannerf"], "description": ":star: Building the dynamic digital human by only using a mobile phone!"}
{"name": "wenzhengzhang/entqa", "full_name": "WenzhengZhang/EntQA", "topics": [], "description": "Pytorch implementation of EntQA paper"}
{"name": "youngkyunjang/deep-hash-distillation", "full_name": "youngkyunJang/Deep-Hash-Distillation", "topics": ["image-retrieval", "self-distillation", "deep-learning", "hashing", "pytorch", "representation-learning", "vision-transformer"], "description": "Deep Hash Distillation for Image Retrieval - ECCV 2022"}
{"name": "taishan1994/pytorch_bert_event_extraction", "full_name": "taishan1994/pytorch_bert_event_extraction", "topics": ["pytorch", "bert", "event-extraction", "chinese-nlp"], "description": "\u57fa\u4e8epytorch+bert\u7684\u4e2d\u6587\u4e8b\u4ef6\u62bd\u53d6"}
{"name": "dhruvdcoder/wandb-allennlp", "full_name": "dhruvdcoder/wandb-allennlp", "topics": ["allennlp", "sweep", "wandb", "machine-learning", "deep-learning"], "description": "Utilities and boilerplate code to use wandb with allennlp"}
{"name": "hkust-knowcomp/atomic-conceptualization", "full_name": "HKUST-KnowComp/atomic-conceptualization", "topics": ["commonsense-knowledge", "commonsense-reasoning", "natural-language-processing"], "description": "Code and data for the paper Acquiring and Modelling Abstract Commonsense Knowledge via Conceptualization"}
{"name": "freerotate/textclassificationbert", "full_name": "FreeRotate/TextClassificationBERT", "topics": ["bert", "nlp", "pytorch", "text-classification"], "description": "\ud83d\ude80 \u57fa\u4e8ePyTorch\u7684BERT\u6587\u672c\u5206\u7c7b\u6846\u67b6"}
{"name": "tui-nicr/emsanet", "full_name": "TUI-NICR/EMSANet", "topics": ["deep-learning", "deep-neural-networks", "instance-segmentation", "machine-learning", "mobile-robotics", "orientation-estimation", "panoptic-segmentation", "pytorch", "real-time", "rgbd", "scene-analysis", "semantic-segmentation"], "description": "EMSANet: Efficient Multi-Task RGB-D Scene Analysis for Indoor Environments"}
{"name": "sash-a/es_pytorch", "full_name": "sash-a/es_pytorch", "topics": ["evolutionary-strategy", "reinforcement-learning", "gym", "deep-neuroevolution", "pytorch", "neuroevolution", "mpi", "mpi4py", "ai"], "description": "High performance implementation of Deep neuroevolution in pytorch using mpi4py. Intended for use on HPC clusters"}
{"name": "genie-kim/pinthememory", "full_name": "Genie-Kim/PintheMemory", "topics": ["deep-learning", "domain", "generalization", "meta-learning", "pytorch", "semantic-segmentation"], "description": "Pin the Memory (CVPR 2022): Official Project Webpage"}
{"name": "hli1221/imagefusion-nestfuse", "full_name": "hli1221/imagefusion-nestfuse", "topics": ["imagefusion", "deep-learning", "nest-connection", "pytorch"], "description": "NestFuse (IEEE TIM 2020)- Pytorch >= 0.4.1"}
{"name": "tigerchen52/love", "full_name": "tigerchen52/LOVE", "topics": ["nlp", "wordembeddings", "out-of-vocabulary"], "description": "ACL22 paper: Imputing Out-of-Vocabulary Embeddings with LOVE Makes Language Models Robust with Little Cost"}
{"name": "bcmi/slbr-visible-watermark-removal", "full_name": "bcmi/SLBR-Visible-Watermark-Removal", "topics": ["watermark", "acmmm2021", "pytorch", "watermark-removal"], "description": "[ACM MM 2021] Visible Watermark Removal via Self-calibrated Localization and Background Refinement"}
{"name": "cabooster/deepcad-rt", "full_name": "cabooster/DeepCAD-RT", "topics": ["pytorch", "deep-learning", "cnn"], "description": "DeepCAD-RT: Real-time denoising of fluorescence time-lapse imaging using deep self-supervised learning"}
{"name": "bwittmann/transoar", "full_name": "bwittmann/transoar", "topics": ["machine-learning", "medical-imaging", "3d-detection", "transformer", "detection-transformer", "vision-transformer"], "description": "A 3D medical Detection Transformer library."}
{"name": "deepmialab/ai-ffpe", "full_name": "DeepMIALab/AI-FFPE", "topics": ["deep-learning", "computer-vision", "generative-adversarial-networks", "pytorch-implementation"], "description": "Deep Learning-based Frozen Section to FFPE Translation"}
{"name": "h-deep/trans-svsr", "full_name": "H-deep/Trans-SVSR", "topics": [], "description": "Pytorch implementation for \"A New Dataset and Transformer for Stereoscopic Video Super-Resolution\""}
{"name": "hongxinxiang/imagemol", "full_name": "HongxinXiang/ImageMol", "topics": ["ai4science", "computer-vision", "deep-learning", "molecular-modeling", "pytorch"], "description": "ImageMol is a molecular image-based pre-training deep learning framework for computational drug discovery."}
{"name": "cjf8899/cdrl", "full_name": "cjf8899/CDRL", "topics": ["change-detection", "pytorch", "unsupervised-learning"], "description": ":earth_asia:Official PyTorch implementation of \"Unsupervised Change Detection Based on Image Reconstruction Loss\", CVPRW 2022."}
{"name": "linzichuan/admrl", "full_name": "LinZichuan/AdMRL", "topics": ["meta-reinforcement-learning", "model-based-rl", "adversarial-training", "tensorflow"], "description": "Code for paper \"Model-based Adversarial Meta-Reinforcement Learning\" (https://arxiv.org/abs/2006.08875)"}
{"name": "rmst/rlrd", "full_name": "rmst/rlrd", "topics": ["reinforcement-learning", "pytorch", "deep-reinforcement-learning", "deep-learning"], "description": "PyTorch implementation of our paper Reinforcement Learning with Random Delays (ICLR 2020)"}
{"name": "vturrisi/contrastive-learning", "full_name": "vturrisi/solo-learn", "topics": ["simclr", "nvidia-dali", "contrastive-learning", "pytorch", "pytorch-lightning", "barlow-twins", "self-supervised-learning", "swav", "byol", "moco", "simsiam", "vicreg", "nnclr", "dino", "deepcluster", "ressl", "vibcreg", "transformer-models", "mae", "masked-input-prediction"], "description": "solo-learn: a library of self-supervised methods for visual representation learning powered by Pytorch Lightning"}
{"name": "positive666/mediapipe_poseestimation_pytorch", "full_name": "positive666/mediapipe_PoseEstimation_pytorch", "topics": ["mediapipe", "pytorch", "face-detection", "gpu", "iris", "python", "unity"], "description": "based on  mediapipe human Estimation project for pytorch, provide function(face_mesh,iris,pose,hand)"}
{"name": "hwwancient/pytorch-plato", "full_name": "HwwAncient/Pytorch-PLATO", "topics": [], "description": "PLATO dialog model with pre-trained parameters in pytorch version"}
{"name": "dongkwonjin/semantic-line-slnet", "full_name": "dongkwonjin/Semantic-Line-SLNet", "topics": ["semantic-line-detection", "application"], "description": "Official pytorch reimplementation for \"Semantic Line Detection and Its Applications\""}
{"name": "gan-police/frequency-forensics", "full_name": "gan-police/frequency-forensics", "topics": ["deepfakes", "gans", "pytorch", "cookiecutter-snekpack", "machine-learning", "deep-learning", "python"], "description": "Deepfake detection using wavelet-packets in PyTorch, European Conference on Machine Learning (ECML PKDD) 2022."}
{"name": "lukashedegaard/ride", "full_name": "LukasHedegaard/ride", "topics": ["python", "machine-learning", "deep-learning", "artificial-intelligence", "ai", "pytorch", "pytorch-lightning", "framework"], "description": "Training wheels, side rails, and helicopter parent for your Deep Learning projects in PyTorch"}
{"name": "adrienchaton/perceptualaudio_pytorch", "full_name": "adrienchaton/PerceptualAudio_Pytorch", "topics": [], "description": "Pytorch implementation of \"A Differentiable Perceptual Audio Metric Learned from Just Noticeable Differences\", Pranay Manocha et al. - unofficial work in progress"}
{"name": "huaizhengzhang/torchscene", "full_name": "breezeml/ml_exp_tracking_benchmark", "topics": ["model-zoo", "pytorch", "deep-learning", "mlflow", "mlops", "neptune", "wandb"], "description": "Evaluate wandb, tensorboard, neptune, mlflow, etc"}
{"name": "passerer/hpinet", "full_name": "passerer/HPINet", "topics": ["image-super-resolution", "python", "pytorch"], "description": "Hierarchical Pixel Integration for Lightweight Image Super-Resolution"}
{"name": "neu-statsml-research/regularized-self-labeling", "full_name": "NEU-StatsML-Research/Regularized-Self-Labeling", "topics": ["pytorch", "transfer-learning"], "description": "We present a regularized self-labeling approach to improve the generalization and robustness properties of fine-tuning (NeurIPS'21)"}
{"name": "arogozhnikov/readable_capsnet", "full_name": "arogozhnikov/readable_capsnet", "topics": [], "description": "Blazingly fast capsule networks in 75 lines of pytorch+einops"}
{"name": "kiyoon/pyvideoai", "full_name": "kiyoon/PyVideoAI", "topics": ["deep-learning", "pytorch"], "description": "PyTorch-based Ultimate Deep Learning Research Tool focusing on Video Action Recognition"}
{"name": "jinheonbaek/gen", "full_name": "JinheonBaek/GEN", "topics": ["meta-learning", "graph-neural-network", "few-shot-learning", "link-prediction", "graph-link-prediction", "graph-neural-networks", "knowledge-graph", "deep-learning"], "description": "Official Code Repository for the paper \"Learning to Extrapolate Knowledge: Transductive Few-shot Out-of-Graph Link Prediction\" (NeurIPS 2020)"}
{"name": "ki-ljl/scaffold-federated-learning", "full_name": "ki-ljl/Scaffold-Federated-Learning", "topics": ["federated-learning", "scaffold", "pytorch"], "description": "PyTorch implementation of SCAFFOLD (Stochastic Controlled Averaging for Federated Learning, ICML 2020)."}
{"name": "typoverflow/utilsrl", "full_name": "typoverflow/UtilsRL", "topics": ["python", "pytorch", "reinforcment-learning"], "description": "A python module designed for agile RL algorithm developing."}
{"name": "iscyy/yoloair2", "full_name": "iscyy/yoloair2", "topics": ["yolov5", "yolov7", "transformer", "yolov6", "ppyoloe", "yoloair", "yolor", "yolov3", "yolov4", "yolox"], "description": "\u2601\ufe0f\ud83d\udca1\ud83c\udf88YOLOAir2 is the second version of the YOLOAir series, The framework is based on YOLOv7, including YOLOv7, YOLOv6, YOLOv5, YOLOX, YOLOR, YOLOv4, YOLOv3, Transformer, Attention and Improved-YOLOv7... Support to improve Backbone, Neck, Head, Loss, IoU, NMS and other modules"}
{"name": "nlpatvcu/multitasking_transformers", "full_name": "NLPatVCU/multitasking_transformers", "topics": ["clinical-nlp", "deep-learning", "bert", "multi-task-learning"], "description": "Multitask Learning with Pretrained Transformers"}
{"name": "matciotola/z-pnn", "full_name": "matciotola/Z-PNN", "topics": ["pytorch", "neural-network", "deep-learning", "pansharpening", "super-resolution", "unsupervised-deep-learning", "remote-sensing"], "description": "Pansharpening by convolutional neural networks in the full resolution framework"}
{"name": "openvinotoolkit/model_preparation_algorithm", "full_name": "openvinotoolkit/model_preparation_algorithm", "topics": ["deep-learning", "transfer-learning", "pytorch", "mmcv", "mmclassification", "mmdetection", "mmsegmentation", "openvino-toolkit", "classification", "detection", "segmentation"], "description": "Model Preparation Algorithm: a Transfer Learning Framework"}
{"name": "jsxlei/scalex", "full_name": "jsxlei/SCALEX", "topics": ["single-cell-genomics", "scalex", "single-cell", "deep-learning", "online-integration"], "description": "Online single-cell data integration through projecting heterogeneous datasets into a common cell-embedding space"}
{"name": "regenerator/dpf-nets", "full_name": "Regenerator/dpf-nets", "topics": ["deep-learning", "generative-modeling", "normalizing-flows", "point-clouds", "autoencoder", "reconstruction"], "description": "Flow-based generative model for 3D point clouds."}
{"name": "elliottzheng/face-detection", "full_name": "elliottzheng/face-detection", "topics": ["pytorch", "face-detection", "retinaface", "python"], "description": "Fast and reliable face detection with RetinaFace.PyTorch"}
{"name": "ki-ljl/fedprox-pytorch", "full_name": "ki-ljl/FedProx-PyTorch", "topics": ["federated-learning", "fedprox", "pytorch"], "description": "PyTorch implementation of FedProx (Federated Optimization for Heterogeneous Networks, MLSys 2020)."}
{"name": "chenqi008/hpgm", "full_name": "chenqi008/HPGM", "topics": [], "description": "Pytorch implementation for \u201cIntelligent Home 3D: Automatic 3D-House Design from Linguistic Descriptions Only\u201d"}
{"name": "wzzzd/text_classifier_pytorch", "full_name": "wzzzd/text_classifier_pytorch", "topics": [], "description": "\u57fa\u4e8ePytorch\u7684\u6587\u672c\u5206\u7c7b\u6846\u67b6\uff0c\u652f\u6301TextCNN\u3001Bert\u3001Electra\u7b49\u3002"}
{"name": "fabio-deep/rezero-resnet", "full_name": "fabio-deep/ReZero-ResNet", "topics": ["resnet", "rezero", "deep-learning", "deep-neural-networks", "residual-networks", "pytorch", "cifar10", "python", "machine-learning"], "description": "Unofficial pytorch implementation of ReZero in ResNet"}
{"name": "yukariin/san_pytorch", "full_name": "Yukariin/SAN_pytorch", "topics": ["pytorch", "super-resolution", "single-image-super-resolution", "attention"], "description": "Second-order Attention Network for Single Image Super-resolution (CVPR-2019)"}
{"name": "jingtianyilong/yolov4-pytorch", "full_name": "jingtianyilong/YOLOv4-pytorch", "topics": [], "description": "This is a pytorch repository of YOLOv4 that can be trained with custom dataset."}
{"name": "zlccccc/3djcg", "full_name": "zlccccc/3DVL_Codebase", "topics": ["3d-vision", "cvpr2022", "dense-captioning", "pytorch", "visual-grounding", "scanrefer", "3d-vision-and-language", "3d-visual-grounding", "deep-learning", "3d-visual-question-answering", "3d-vqa"], "description": "[CVPR2022 Oral] 3DJCG: A Unified Framework for Joint Dense Captioning and Visual Grounding on 3D Point Clouds"}
{"name": "xialuxi/circleloss_face", "full_name": "xialuxi/CircleLoss_Face", "topics": ["pytorch", "circleloss"], "description": "pytorch CircleLoss for Face recognition"}
{"name": "justin900429/facial-graph-representation-learning", "full_name": "Justin900429/Facial-Graph-Representation-Learning", "topics": ["microexpressions", "deep-learning", "pytorch", "paper-implementations", "graphconvoltution"], "description": "PyTorch version for the \"Micro-expression Recognition Based on Facial Graph Representation Learning and Facial Action Unit Fusion\""}
{"name": "atharvbhat/plus-ultra", "full_name": "AtharvBhat/Plus-Ultra", "topics": ["deeplearning", "anime", "image-super-resolution", "pytorch", "super-resolution"], "description": "Plus Ultra is a tool to enhance digital media."}
{"name": "pliang279/multiviz", "full_name": "pliang279/MultiViz", "topics": ["computer-vision", "machine-learning", "multimodal-learning", "natural-language-processing"], "description": "[ICLR 2023] MultiViz: Towards Visualizing and Understanding Multimodal Models"}
{"name": "bjekic/wallsegmentation", "full_name": "bjekic/WallSegmentation", "topics": ["semantic-segmentation", "pytorch", "python", "ade20k", "encoder-decoder", "resnet-50", "pyramid-pooling-module", "dilated-resnet"], "description": "Implementation of a wall segmentation algorithm in PyTorch."}
{"name": "fnangle/text_classfication-with-bert-pytorch-", "full_name": "fnangle/text_classfication-with-bert-pytorch", "topics": [], "description": "nlp text classification task with bert and pytorch on IMDB dataset"}
{"name": "leonhlj/fac-net", "full_name": "LeonHLJ/FAC-Net", "topics": ["deep-learning", "pytorch", "weakly-supervised-learning", "temporal-action-localization", "foreground-action-consistency"], "description": "Foreground-Action Consistency Network for Weakly Supervised Temporal Action Localization"}
{"name": "yeonwoosung/glom", "full_name": "YeonwooSung/GLOM", "topics": ["ai", "artificial-intelligence", "artificial-neural-networks", "glom", "neural-network", "neural-networks"], "description": "PyTorch implementation of GLOM"}
{"name": "ternaus/facemask_detection", "full_name": "ternaus/facemask_detection", "topics": ["python", "pytorch", "classification", "image-processing", "mask-detection"], "description": "Detection masks on faces."}
{"name": "samuelbroscheit/entity_knowledge_in_bert", "full_name": "samuelbroscheit/entity_knowledge_in_bert", "topics": ["nlp", "entity-linking", "machine-learning"], "description": "This repository contains the code for the CONLL 2019 paper \"Investigating Entity Knowledge in BERT with Simple Neural End-To-End Entity Linking\". The code is provided as a documentation for the paper and also for follow-up research."}
{"name": "haomingcai/pipal-dataset", "full_name": "HaomingCai/PIPAL-dataset", "topics": ["pytorch", "pipal", "iqa-dataset", "perceptual-quality"], "description": "[ Official ] - PIPAL Dataset and Training Codebase.  ECCV-2020, NTIRE-21/22."}
{"name": "strongio/torchcast", "full_name": "strongio/torchcast", "topics": ["pytorch", "forecasting"], "description": "Forecasting with PyTorch"}
{"name": "wuxinwang1997/wheatdetection", "full_name": "wuxinwang1997/wheatdetection", "topics": [], "description": "Pytorch project for https://www.kaggle.com/c/global-wheat-detection"}
{"name": "lemok00/ideas", "full_name": "Lemok00/IDEAS", "topics": ["pytorch", "steganography", "image-generation"], "description": "Official pytorch implementation of paper \"Image Disentanglement Autoencoder for Steganography without Embedding\" (CVPR2022)."}
{"name": "z-hxu/recu", "full_name": "z-hXu/ReCU", "topics": [], "description": "Pytorch implementation of our paper accepted by ICCV 2021 -- ReCU: Reviving the Dead Weights in Binary Neural Networks http://arxiv.org/abs/2103.12369"}
{"name": "mdca-loss/mdca-calibration", "full_name": "mdca-loss/MDCA-Calibration", "topics": ["pytorch", "deep-learning"], "description": "[CVPR 2022] Official code for the paper: \"A Stitch in Time Saves Nine: A Train-Time Regularizing Loss for Improved Neural Network Calibration\""}
{"name": "wwmark/meshgraphnets", "full_name": "wwMark/meshgraphnets", "topics": [], "description": "Rewrite deepmind/meshgraphnets into pytorch"}
{"name": "zhutmost/neuralzip", "full_name": "zhutmost/neuralzip", "topics": ["pytorch", "neural-network-quantization", "deep-learning"], "description": "A Out-of-box PyTorch Scaffold for Neural Network Quantization-Aware-Training (QAT) Research. Website: https://github.com/zhutmost/neuralzip"}
{"name": "alessandromondin/yolov5m", "full_name": "AlessandroMondin/YOLOV5m", "topics": ["computer-vision", "deep-learning", "yolo"], "description": "A personal implementation of YOLOv5 (v6.0)"}
{"name": "bit-ml/anoshift", "full_name": "bit-ml/AnoShift", "topics": ["anomaly-detection", "distribution-shift", "network", "network-traffic", "pytorch", "timeseries"], "description": null}
{"name": "qiqihaer/3dssd-pytorch-openpcdet", "full_name": "qiqihaer/3DSSD-pytorch-openPCDet", "topics": [], "description": "The successful implementation of 3DSSD in Pytorch"}
{"name": "declare-lab/cider", "full_name": "declare-lab/CIDER", "topics": ["nli", "commonsense-reasoning", "commonsense-extraction", "natural-language-processing", "dialogue-systems", "reasoning"], "description": "This repository contains the dataset and the pytorch implementations of the models from the paper CIDER: Commonsense Inference for Dialogue Explanation and Reasoning. CIDER has been accepted to appear at SIGDIAL 2021. "}
{"name": "chamorajg/pl-dreamer", "full_name": "chamorajg/pl-dreamer", "topics": ["pytorch", "dreamer", "pytorch-lightning"], "description": "Simplistic Pytorch Implementation of the Dreamer-RL"}
{"name": "vita-group/large_scale_gcn_benchmarking", "full_name": "VITA-Group/Large_Scale_GCN_Benchmarking", "topics": ["graph-neural-networks", "pytorch"], "description": "This is an authors' implementation of the NIPS 2022 dataset and Benchmark Track Paper \"A Comprehensive Study on Large Scale Graph Training: Benchmarking and Rethinking\" in PyTorch."}
{"name": "huyhoang17/db_text_minimal", "full_name": "huyhoang17/DB_text_minimal", "topics": ["text-detection", "ocr", "deep-learning", "db-text", "db", "differentiable-binarization", "scene-text-detection", "pytorch", "pytorch-db", "real-time"], "description": "[WIP] A Pytorch implementation of DB-Text - Real-time Scene Text Detection with Differentiable Binarization"}
{"name": "iwa-shi/fidelity_controllable_compression", "full_name": "iwa-shi/fidelity_controllable_compression", "topics": ["compression", "pytorch"], "description": "Official PyTorch Implementation of Fidelity Controllable Extreme Image Compression with GAN"}
{"name": "sevakon/efficientdet", "full_name": "sevakon/efficientdet", "topics": ["efficientdet", "efficientnet", "object-detection", "pytorch"], "description": "PyTorch Implementation of the state-of-the-art model for object detection EfficientDet   [pre-trained weights provided]  "}
{"name": "jsikyoon/dreamer-torch", "full_name": "jsikyoon/dreamer-torch", "topics": [], "description": "Pytorch version of Dreamer, which follows the original TF v2 codes."}
{"name": "nithin-holla/metalifelonglanguage", "full_name": "Nithin-Holla/MetaLifelongLanguage", "topics": ["meta-learning", "lifelong-learning", "continual-learning", "text-classification", "relation-extraction", "natural-language-processing", "experience-replay"], "description": "Repository containing code for the paper \"Meta-Learning with Sparse Experience Replay for Lifelong Language Learning\"."}
{"name": "bbuf/onnx2nn", "full_name": "BBuf/onnx2X", "topics": [], "description": "ONNX2Pytorch"}
{"name": "lupantech/iconqa", "full_name": "lupantech/IconQA", "topics": ["vqa", "mathai", "commensense", "dataset", "reasoning", "pytorch"], "description": "Data and code for NeurIPS 2021 Paper \"IconQA: A New Benchmark for Abstract Diagram Understanding and Visual Language Reasoning\"."}
{"name": "danikiyasseh/clocs", "full_name": "danikiyasseh/CLOCS", "topics": ["deep-learning", "contrastive-learning", "cardiac-signals"], "description": "PyTorch code for self-supervised pre-training of networks with CLOCS"}
{"name": "baiksung/l2f", "full_name": "baiksung/L2F", "topics": ["meta-learning", "pytorch", "maml", "deep-learning", "machine-learning", "few-shot-learning", "reinforcement-learning", "cvpr2020", "computer-vision"], "description": "Source code for CVPR 2020 paper \"Learning to Forget for Meta-Learning\" "}
{"name": "baiksung/metal", "full_name": "baiksung/MeTAL", "topics": ["machine-learning", "deep-learning", "pytorch", "maml", "meta-learning", "few-shot-learning", "iccv", "computer-vision"], "description": "Official PyTorch implementation of \"Meta-Learning with Task-Adaptive Loss Function for Few-Shot Learning\" (ICCV2021 Oral)"}
{"name": "pangoraw/semiorthogonal", "full_name": "Pangoraw/SemiOrthogonal", "topics": ["pytorch", "mvtec-ad", "covariance-matrix", "mahalanobis-distance", "anomaly-detection", "mvtec", "unsupervised-learning"], "description": ":toothbrush: Unofficial re-implementation of Semi-orthogonal Embedding for Efficient Unsupervised Anomaly Segmentation"}
{"name": "psipred/dmpfold2", "full_name": "psipred/DMPfold2", "topics": ["protein-structure-prediction", "deep-learning", "multiple-sequence-alignment", "end-to-end"], "description": "Fast and accurate protein structure prediction"}
{"name": "najaemin92/fixbi", "full_name": "NaJaeMin92/FixBi", "topics": ["domain-adaptation", "cvpr2021", "pytorch"], "description": "FixBi: Bridging Domain Spaces for Unsupervised Domain Adaptation (CVPR 2021)"}
{"name": "fnangle/text_classfication-with-bert-pytorch", "full_name": "fnangle/text_classfication-with-bert-pytorch", "topics": [], "description": "nlp text classification task with bert and pytorch on IMDB dataset"}
{"name": "eric612/mobilenet-yolo-pytorch", "full_name": "eric612/Mobilenet-YOLO-Pytorch", "topics": ["mobilenet-yolo", "yolo-series", "yolov3", "mobilenet-series", "pytorch"], "description": "Include mobilenet series (v1,v2,v3...) and yolo series (yolov3,yolov4,...)"}
{"name": "zeke-xie/positive-negative-momentum", "full_name": "zeke-xie/Positive-Negative-Momentum", "topics": ["deep-learning", "optimizer", "stochastic-optimization", "pytorch", "machine-learning", "momentum-optimization-algorithm"], "description": "The official PyTorch Implementations of Positive-Negative Momentum Optimizers (ICML 2021)."}
{"name": "jh-jeong/smoothing-consistency", "full_name": "jh-jeong/smoothing-consistency", "topics": ["adversarial-machine-learning", "deep-learning", "randomized-smoothing", "adversarial-defense", "neurips2020", "robustness"], "description": "Code for the paper \"Consistency Regularization for Certified Robustness of Smoothed Classifiers\" (NeurIPS 2020)"}
{"name": "dsshim0125/grmc", "full_name": "dsshim0125/grmc", "topics": ["self-supervised-learning", "contrastive-learning", "depth-estimation", "pytorch", "icra2021"], "description": "\"Learning a Geometric Representation for Depth Estimation via Gradient Field and Contrastive Loss\" (ICRA 2021)"}
{"name": "fire717/fireclassification", "full_name": "fire717/FireClassification", "topics": [], "description": "\u57fa\u4e8ePytorch\u7684\u56fe\u50cf\u5206\u7c7b\u6846\u67b6"}
{"name": "media-smart/vedatad", "full_name": "Media-Smart/vedatad", "topics": ["pytorch", "toolbox", "temporal-action-detection", "single-stage"], "description": "A single stage temporal action detection toolbox based on PyTorch"}
{"name": "kachayev/gym-microrts-paper-sb3", "full_name": "kachayev/gym-microrts-paper-sb3", "topics": ["reinforcement-learning", "reinforcement-learning-agent", "gym-environment", "ppo", "pytorch", "real-time-strategy"], "description": "RL agent to play \u03bcRTS with Stable-Baselines3 and PyTorch"}
{"name": "byungkwanlee/adversarial-information-bottleneck", "full_name": "ByungKwanLee/Adversarial-Information-Bottleneck", "topics": ["pytorch", "adversarial-attacks", "deep-learning"], "description": "Official PyTorch Implementation for \"Distilling Robust and Non-Robust Features in Adversarial Examples by Information Bottleneck\" in NeurIPS21"}
{"name": "rachellea/pytorch-computer-vision", "full_name": "rachellea/pytorch-computer-vision", "topics": ["pytorch", "pytorch-cnn", "tutorial", "computer-vision", "convolutional-neural-networks", "data-loader", "custom-dataset", "custom-model", "python"], "description": "PyTorch tutorial for computer vision"}
{"name": "mengmenm/smil", "full_name": "mengmenm/SMIL", "topics": [], "description": "Pytorch implementation of SMIL: Multimodal Learning with Severely Missing Modality (AAAI 2021)"}
{"name": "yang-liu1082/invdn", "full_name": "Yang-Liu1082/InvDN", "topics": ["pytorch", "cvpr2021", "denoising"], "description": "Implementation for the paper: Invertible Denoising Network: A Light Solution for Real Noise Removal (CVPR2021)."}
{"name": "junjue-wang/rank1-ali-tianchi-real-world-image-forgery-localization-challenge", "full_name": "Junjue-Wang/Rank1-Ali-Tianchi-Real-World-Image-Forgery-Localization-Challenge", "topics": ["tampering", "security", "deep-learning", "computer-vision"], "description": "2022\u963f\u91cc\u5929\u6c60\u771f\u5b9e\u573a\u666f\u7be1\u6539\u56fe\u50cf\u68c0\u6d4b\u6311\u6218\u8d5b-\u51a0\u519b\u65b9\u6848\uff081/1149\uff09"}
{"name": "luckydc/generalizing-reid", "full_name": "LuckyDC/generalizing-reid", "topics": ["domain-adaptation", "person-reidentification", "deep-learning"], "description": "Repository of the paper \"Generalizing Person Re-Identification by Camera-Aware Instance Learning and Cross-Domain Mixup\""}
{"name": "bayer-science-for-a-better-life/phc-gnn", "full_name": "bayer-science-for-a-better-life/phc-gnn", "topics": ["graph-neural-networks", "graph-classification", "neural-message-passing", "deep-learning", "graph-representation-learning", "hypercomplex", "quaternion"], "description": "Implementation of the Paper: \"Parameterized Hypercomplex Graph Neural Networks for Graph Classification\" by Tuan Le, Marco Bertolini, Frank No\u00e9 and Djork-Arn\u00e9 Clevert"}
{"name": "luost26/cgcf-confgen", "full_name": "MinkaiXu/CGCF-ConfGen", "topics": ["molecule", "conformation-generation", "iclr", "iclr2021", "conformer", "conformation", "pytorch"], "description": ":test_tube: Learning Neural Generative Dynamics for Molecular Conformation Generation (ICLR 2021)"}
{"name": "rishikksh20/zero-shot-tts", "full_name": "rishikksh20/Zero-Shot-TTS", "topics": ["pytorch", "tts", "speech", "speech-synthesis", "text-to-speech", "zero-shot-learning", "transformer", "audio"], "description": "Unofficial Implementation of Zero-Shot Text-to-Speech for Text-Based Insertion in Audio Narration"}
{"name": "paccmann/paccmann_proteomics", "full_name": "PaccMann/paccmann_proteomics", "topics": ["protein-language-model", "transformer", "pytorch"], "description": "PaccMann models for protein language modeling"}
{"name": "andrescasado/pergamo", "full_name": "AndresCasado/pergamo", "topics": ["python", "pytorch", "deformable-model", "differentiable-rendering", "machine-learning"], "description": "Code for PERGAMO, a two step approach to learn deformable models"}
{"name": "hari-sikchi/offline_rl", "full_name": "hari-sikchi/offline_rl", "topics": ["reinforcement-learning", "offline-reinforcement", "offline-rl"], "description": "Pytorch implementation of state-of-the-art offline reinforcement learning algorithms."}
{"name": "lightonai/lairgpt", "full_name": "lightonai/lairgpt", "topics": [], "description": "Inference code in Pytorch for GPT-like models, such as PAGnol, a family of models with up to 1.5B parameters, trained on datasets in French."}
{"name": "deepaudio/deepaudio-speaker", "full_name": "deepaudio/deepaudio-speaker", "topics": ["speaker-recognition", "speaker-verification", "pytorch-lightning", "hydra", "speaker-diarization"], "description": "neural network based speaker embedder"}
{"name": "senmaoy/rat-gan", "full_name": "senmaoy/RAT-GAN", "topics": ["gan", "generative-adversarial-network", "image-generation", "pytorch", "text-to-image"], "description": "A conditional GAN for text-to-image "}
{"name": "uca-datalab/nilm-thresholding", "full_name": "UCA-Datalab/nilm-thresholding", "topics": ["nilm", "nilm-algorithms", "neural-network", "pytorch", "domestic-appliances", "monitoring", "tensorflow", "gru", "convolutional-neural-networks", "recurrent-neural-networks", "thresholding-methods", "thresholding", "deep-learning"], "description": "Non-Intrusive Load Monitoring (NILM) aims to predict the status or consumption of domestic appliances in a household only by knowing the aggregated power load. NILM can be formulated as regression problem or most often as a classification problem. Most datasets gathered by smart meters allow to define naturally a regression problem, but the corresponding classification problem is a derived one, since it requires a conversion from the power signal to the status of each device by a thresholding method. We treat three different thresholding methods to perform this task, discussing their differences on various devices from the UK-DALE dataset. We analyze the performance of deep learning state-of-the-art architectures on both the regression and classification problems, introducing criteria to select the most convenient thresholding method."}
{"name": "tiagomantunes/karen", "full_name": "TiagoMAntunes/KAREN", "topics": ["hate", "speech", "hatespeech", "detection", "framework", "deep-learning", "pytorch", "benchmark", "tfidf", "bert", "nlp", "natural-language-processing", "huggingface", "sentence-classification", "twitter", "offensive-language", "abuse", "offensive"], "description": "KAREN: Unifying Hatespeech Detection and Benchmarking"}
{"name": "moothes/salod", "full_name": "moothes/SALOD", "topics": ["benchmark", "pytorch", "salient-object-detection", "camouflaged-object-detection"], "description": "A benchmark for Salient Object Detection (SOD) and Camouflaged Object Detection (COD)."}
{"name": "mkofinas/locs", "full_name": "mkofinas/locs", "topics": ["trajectory-forecasting", "graph-neural-networks", "equivariance", "deep-learning", "temporal-dynamics", "autonomous-driving"], "description": "Official source code for \"Roto-translated Local Coordinate Frames For Interacting Dynamical Systems\". In NeurIPS 2021"}
{"name": "jeffwang0325/image-identification-for-self-driving-cars", "full_name": "JeffWang0325/Image-Identification-for-Self-Driving-Cars", "topics": ["computer-vision", "yolo", "yolov5", "deep-learning", "self-driving-car", "deep-neural-networks", "tensorflow", "pytorch", "convolutional-neural-networks", "traffic-light-classification", "traffic-sign-classification", "tkinter", "tkinter-gui", "tkinter-python", "real-time-detection", "droidcam", "webcam", "webcam-capture", "dr", "python"], "description": "\ud83d\udd8d\ufe0f This project achieves some functions of image identification for Self-Driving Cars. First, use yolov5 for object detection. Second, image classification for traffic light and traffic sign. Furthermore, the GUI of this project makes it more user-friendly for users to realize the image identification for Self-Driving Cars."}
{"name": "dondzundza/pytorch-3d-medical-image-semantic-segmentation", "full_name": "arthurzhang817/Pytorch-3D-Medical-Image-Semantic-Segmentation", "topics": ["pytorch", "3d-segmentation", "semantic-segmentation", "medical-imaging"], "description": "3D medical image semantic segmentation with Pytorch."}
{"name": "chanind/frame-semantic-transformer", "full_name": "chanind/frame-semantic-transformer", "topics": ["framenet", "huggingface", "nlp", "semantic-parsing", "t5", "transformers"], "description": "Frame Semantic Parser based on T5 and FrameNet"}
{"name": "wdika/mridc", "full_name": "wdika/mridc", "topics": ["deep-learning", "pytorch", "machine-learning", "mri", "mri-reconstruction", "recurrent-inference-machines", "variational-network", "unet", "convolutional-neural-networks", "data-consistency", "medical-imaging", "medical-image-processing", "medical-image-analysis", "fastmri", "compressed-sensing", "cirim", "quantitative-image-analysis", "quantitative-imaging", "quantitative-mri"], "description": "Data Consistency Toolbox for Magnetic Resonance Imaging"}
{"name": "quasarlight/pytorch_face_recognition-", "full_name": "QuasarLight/Pytorch_Face_Recognition-", "topics": [], "description": "Pytorch implementation of mainstream face recognition algorithms(ArcFace, CosFace)."}
{"name": "hejingwenhejingwen/csrnet", "full_name": "hejingwenhejingwen/CSRNet", "topics": ["photo-retouching", "deep-learning", "image-enhancement", "image-processing", "color-enhancement", "csrnet"], "description": "(ECCV 2020) Conditional Sequential Modulation for Efficient Global Image Retouching"}
{"name": "stijnverdenius/snip-it", "full_name": "StijnVerdenius/SNIP-it", "topics": ["machine-learning", "deep-learning", "pruning", "structured-pruning", "unstructured-pruning", "structured-pruning-before-training", "artificial-intelligence", "neural-networks", "model-compression", "science", "science-research", "computer-vision", "publication", "speedup"], "description": "This repository is the official implementation of the paper Pruning via Iterative Ranking of Sensitivity Statistics and implements novel pruning / compression algorithms for deep learning / neural networks. Amongst others it implements structured pruning before training, its actual parameter shrinking and unstructured before/during training. "}
{"name": "tensorbfs/cmpo", "full_name": "TensorBFS/cMPO", "topics": ["tensor-networks", "pytorch"], "description": "continuous-time matrix product operator for finite temperature quantum states"}
{"name": "khawar-islam/fpvt_bmvc22", "full_name": "khawar-islam/FPVT_BMVC22", "topics": ["face-recognition", "python", "pytorch", "vision", "vision-transformer"], "description": "Code of Pyramid Vision Transformer at BMVC 2022"}
{"name": "hi-paris/deepdespeckling", "full_name": "hi-paris/deepdespeckling", "topics": ["deep-learning", "machine-learning", "pytorch", "satelite"], "description": null}
{"name": "yahshibu/nested-ner-tacl2020-flair", "full_name": "yahshibu/nested-ner-tacl2020-flair", "topics": ["named-entity-recognition", "information-extraction", "natural-language-processing", "nested-named-entity-recognition"], "description": "Implementation of Nested Named Entity Recognition using Flair"}
{"name": "liguge/pytorch-deep-residual-shrinkage-networks-for-intelligent-fault-diagnosis", "full_name": "liguge/Deep-Residual-Shrinkage-Networks-for-intelligent-fault-diagnosis-DRSN-", "topics": [], "description": "Deep Residual Shrinkage Networks for Intelligent Fault Diagnosis\uff08pytorch\uff09  \u6df1\u5ea6\u6b8b\u5dee\u6536\u7f29\u7f51\u7edc\u5e94\u7528\u4e8e\u6545\u969c\u8bca\u65ad"}
{"name": "vlachosgroup/nextorch", "full_name": "VlachosGroup/nextorch", "topics": ["bayesian-optimization", "design-of-experiments", "experimental-design", "pytorch"], "description": "Experimental design and Bayesian optimization library in Python/PyTorch"}
{"name": "harlen520/semantic-similarity", "full_name": "Tanh-wink/semantic-similarity", "topics": ["semantic", "similarity", "word2vec", "wmd", "bert"], "description": "semantic similarity\uff0c word2vec + wmd\uff0c bert+wmd\uff0c pytorch"}
{"name": "feymanpriv/dolg", "full_name": "feymanpriv/DOLG", "topics": [], "description": "Pytorch Implementation of DOLG (ICCV 2021)"}
{"name": "synsense/rockpool", "full_name": "synsense/rockpool", "topics": [], "description": "A machine learning library for spiking neural networks. Supports training with both torch and jax pipelines, and deployment to neuromorphic hardware."}
{"name": "jundsp/vae-bss", "full_name": "jundsp/VAE-BSS", "topics": ["unsupervised-machine-learning", "audio", "deep-learning", "pytorch", "separation"], "description": "Unsupervised blind source separation of mixed images and sounds with variational auto-encoders."}
{"name": "monologg/goemotions-pytorch", "full_name": "monologg/GoEmotions-pytorch", "topics": ["goemotions", "emotion-classification", "pytorch", "multi-label-classification", "transformers", "bert", "pipeline"], "description": "Pytorch Implementation of GoEmotions \ud83d\ude0d\ud83d\ude22\ud83d\ude31"}
{"name": "albert100121/aifdepthnet", "full_name": "albert100121/AiFDepthNet", "topics": ["pytorch", "iccv", "iccv2021", "all-in-focus", "depth-estimation", "deep-learning", "bokeh-effect", "blur-image", "focal-stack", "computer-vision", "cnn"], "description": "Official Pytorch implementation of ICCV 2021 2020 paper \"Bridging Unsupervised and Supervised Depth from Focus via All-in-Focus Supervision\""}
{"name": "ezra-yu/accv2022_fgia_1st", "full_name": "Ezra-Yu/ACCV2022_FGIA_1st", "topics": ["arcface-loss", "eql", "fine-grained-classification", "longtail", "mae", "pseudolabelling", "pytorch", "swin"], "description": "1st solution for the Webly-supervised Fine-grained Recognition competition in https://www.cvmart.net/race/10412/base"}
{"name": "bwconrad/decoder-denoising", "full_name": "bwconrad/decoder-denoising", "topics": ["pytorch", "pytorch-lightning", "segmentation", "self-supervised-learning", "semantic-segmentation"], "description": "Pytorch reimplementation of Decoder Denoising Pretraining for Semantic Segmentation"}
{"name": "lonepatient/bert-attribute-value-extract", "full_name": "lonePatient/BERT-Attribute-Value-Extract", "topics": ["pytorch", "bert", "attribute-value-extract", "lstm", "crf", "attention"], "description": "A Pytorch implementation of \"Scaling Up Open Tagging from Tens to Thousands: Comprehension Empowered Attribute Value Extraction from Product Title\" (ACL 2019)."}
{"name": "zzhanghub/gicd", "full_name": "zzhanghub/gicd", "topics": ["eccv", "eccv2020", "co-saliency", "pytorch", "coca", "gicd", "salient-object-detection", "segmentation", "jigsaw", "saliency-detection", "paper"], "description": "[ECCV 2020] Gradient-Induced Co-Saliency Detection"}
{"name": "pxiangwu/plc", "full_name": "pxiangwu/PLC", "topics": ["iclr2021", "label-noise", "machine-learning", "pytorch"], "description": "ICLR 2021, \"Learning with feature-dependent label noise: a progressive approach\""}
{"name": "gatsby2016/fast-wsi-prediction", "full_name": "gatsby2016/Fast-WSI-Prediction", "topics": ["pytorch", "whole-slide-image", "classification-task", "pathological-images", "deep-learning", "medical-image-computing"], "description": "Unofficial implementation for ScanNet (a fast WSI prediction method) in PyTorch."}
{"name": "navassherif98/recipe-generation-from-food-image", "full_name": "navassherif98/Recipe-Generation-from-Food-Image", "topics": ["deep-learning", "machine-learning", "recipe-generation", "food", "food-images", "final-year-project", "final-project", "recipes", "ingredients", "flask-application", "flask", "project", "development", "application", "inverse-cooking", "facebook", "html", "css", "cooking", "dishes"], "description": "An Application for Generating a cooking recipe consist of title, ingredients and instructions from an food image using Deep Learning."}
{"name": "easonnie/chaosnli", "full_name": "easonnie/ChaosNLI", "topics": ["paper", "emnlp", "emnlp2020", "natural-language-understanding", "natural-language-processing"], "description": "[EMNLP 2020] Collective HumAn OpinionS on Natural Language Inference Data"}
{"name": "dairlab/contact-nets", "full_name": "DAIRLab/contact-nets", "topics": ["machine-learning", "contact-dynamics", "pytorch"], "description": "Learning Discontinuous Contact Dynamics with Smooth, Implicit Representations"}
{"name": "thunlp/hiddenkiller", "full_name": "thunlp/HiddenKiller", "topics": ["nlp", "backdoor-attacks", "nlproc"], "description": "Code and data of the ACL-IJCNLP 2021 paper \"Hidden Killer: Invisible Textual Backdoor Attacks with Syntactic Trigger\""}
{"name": "ai4ce/self-supervised-spare3d", "full_name": "ai4ce/Self-Supervised-SPARE3D", "topics": ["spatial-reasoning", "line-drawing", "deep-learning", "contrastive-learning", "line-drawings", "reasoning"], "description": "[CVPR 2022] Self-supervised Spatial Reasoning on Multi-View Line Drawings"}
{"name": "na-z/sdcot", "full_name": "Na-Z/SDCoT", "topics": ["class-incremental-learning", "3d", "3d-object-detection", "pytorch", "point-cloud"], "description": "[AAAI 2022 Oral] Static-Dynamic Co-Teaching for Class-Incremental 3D Object Detection"}
{"name": "wang-chen/lgl", "full_name": "wang-chen/LGL", "topics": ["lifelong-learning", "graph-learning", "pytorch"], "description": "Lifelong Graph Learning (CVPR 2022 Oral)"}
{"name": "xushenlz/parksim", "full_name": "XuShenLZ/ParkSim", "topics": ["deep-learning", "motion-prediction", "pytorch", "simulation"], "description": "Vehicle simualtion and behavior prediction in parking lots."}
{"name": "zju3dv/niid-net", "full_name": "zju3dv/NIID-Net", "topics": ["intrinsic-image-decomposition", "intrinsic-images", "pytorch"], "description": "Code for \"NIID-Net: Adapting Surface Normal Knowledge for Intrinsic Image Decomposition in Indoor Scenes\" TVCG"}
{"name": "robotic-vision-lab/progressive-conditional-generative-adversarial-network", "full_name": "robotic-vision-lab/Progressive-Conditional-Generative-Adversarial-Network", "topics": ["deep-learning", "point-cloud", "computer-vision"], "description": "Progressive conditional generative adversarial network for generating dense and colored 3D point clouds."}
{"name": "hkust-vgd/architectural_style_transfer", "full_name": "hkust-vgd/architectural_style_transfer", "topics": ["style-transfer", "architectural-photos", "deep-learning", "image-translation", "neural-style-transfer", "architectural-style-transfer"], "description": "Code and data release for ICCP 2022 paper \"Time-of-Day Neural Style Transfer for Architectural Photographs\"."}
{"name": "onuriel/permutedadain", "full_name": "onuriel/PermutedAdaIN", "topics": [], "description": "Pytorch Implementation of PermutedAdaIN"}
{"name": "xifengguo/dsc-net", "full_name": "XifengGuo/DSC-Net", "topics": [], "description": "A Pytorch implementation of DSC-Net (Deep subspace clustering networks, NIPS17)"}
{"name": "krishnadn/speech-emotion-recognition-using-self-attention", "full_name": "KrishnaDN/speech-emotion-recognition-using-self-attention", "topics": ["emotion-recognition", "speech-emotion-recognition", "deep-learning", "speech"], "description": "Implementation of the paper \"Improved End-to-End Speech Emotion Recognition Using Self Attention Mechanism and Multitask Learning\" From INTERSPEECH 2019"}
{"name": "odegeasslbc/self-supervised-sketch-to-image-synthesis-pytorch", "full_name": "odegeasslbc/Self-Supervised-Sketch-to-Image-Synthesis-PyTorch", "topics": [], "description": "The pytorch implementation for the paper \"Self-Supervised Sketch-to-Image Synthesis\" in AAAI-2021"}
{"name": "enoche/imrec", "full_name": "enoche/ImRec", "topics": ["gcn", "implicit-feedback", "recommender-system", "layer-refined"], "description": "A Pytorch Recommendation Framework with Implicit Feedback."}
{"name": "jintuzheng/zisan", "full_name": "JintuZheng/zisan", "topics": [], "description": "Integrated CV basic application development kit based on Pytorch \u57fa\u4e8ePytorch\u7684\u96c6\u6210CV\u57fa\u7840\u5e94\u7528\u5f00\u53d1\u5de5\u5177\u5305"}
{"name": "trigram19/m5-python-starter", "full_name": "Trigram19/m5-python-starter", "topics": ["m5-competition", "transformer"], "description": "Python framework for a good neural network for the Makidrakis 5 (M5) competition hosted on Kaggle."}
{"name": "lilac-lee/pointnetlk_revisited", "full_name": "Lilac-Lee/PointNetLK_Revisited", "topics": ["point-cloud-registration", "lucas-kanade", "computer-vision", "deep-learning", "pointnet", "cvpr2021"], "description": "Implementation for our CVPR 2021 oral paper \"PointNetLK Revisited\"."}
{"name": "tanulsingh/humour.ai-language-model-that-can-crack-jokes", "full_name": "tanulsingh/Humour.ai-Language-model-that-can-crack-Jokes", "topics": ["pytorch", "language-model", "nlg", "nlp", "joke", "joker", "humour-generator", "gpt-2", "transformers", "python"], "description": "Language Model that makes you Laugh . "}
{"name": "ve-forbryderne/mtj-softtuner", "full_name": "VE-FORBRYDERNE/mtj-softtuner", "topics": ["gpt-j", "gpt-neo", "nlp", "nlp-machine-learning", "prompt-learning", "python", "colab-notebook", "transformer", "prompt-tuning", "causal-models", "jax", "fairseq", "metaseq"], "description": "Create soft prompts for fairseq 13B dense, GPT-J-6B and GPT-Neo-2.7B for free in a Google Colab TPU instance"}
{"name": "by-liu/mbls", "full_name": "by-liu/MbLS", "topics": ["calibration", "pytorch", "deep-learning", "label-smoothing"], "description": "Code of our method MbLS (Margin-based Label Smoothing) for network calibration. To Appear at CVPR 2022. Paper : https://arxiv.org/abs/2111.15430"}
{"name": "chenghan111/dnc", "full_name": "ChengHan111/DNC", "topics": [], "description": "Official Pytorch implementation of 'Visual Recognition with Deep Nearest Centroids'. (ICLR2023 Spotlight)"}
{"name": "malteos/semantic-document-relations", "full_name": "malteos/semantic-document-relations", "topics": ["wikipedia", "pytorch", "document", "similarity", "transformer", "bert", "xlnet", "document-classification"], "description": "Implementation, trained models and result data for the paper \"Pairwise Multi-Class Document Classification for Semantic Relations between Wikipedia Articles\""}
{"name": "rmojgani/lpinns", "full_name": "rmojgani/LPINNs", "topics": ["ml", "nn", "pinn", "burgers", "convection", "convection-diffusion", "lagrangian", "method-of-characteristics", "physics-informed-neural-networks", "deep-learning", "neural-network", "pytorch"], "description": "To address some of the failure modes in training of physics informed neural networks, a Lagrangian architecture is designed to conform to the direction of travel of information in convection-diffusion equations, i.e., method of characteristic; The repository includes a pytorch implementation of PINN and proposed LPINN with periodic boundary conditions"}
{"name": "tangyong1975/deeplabv3-swintransformer", "full_name": "TangYong1975/deeplabv3-swintransformer", "topics": ["deeplabv3plus", "swin-transformer", "pytorch", "deeplabv3", "hrnet", "mobilenet", "regnet", "resnet"], "description": null}
{"name": "justin900429/pytorch-dssn-mer", "full_name": "Justin900429/PyTorch-DSSN-MER", "topics": ["micro-expression-recognition", "pytorch", "paper-implementation", "python", "computer-vision"], "description": "PyTorch version for the \"Dual-Dtream Shallow Networks for Facial Micro-Expression Recognition\""}
{"name": "deeperlearner/pytorch-template", "full_name": "deeperlearner/pytorch-template", "topics": [], "description": "A pytorch template files generator."}
{"name": "mattdl/continualprototypeevolution", "full_name": "Mattdl/ContinualPrototypeEvolution", "topics": ["continual-learning", "online-learning", "prototypes", "representation-learning", "computer-vision", "deep-learning", "datastreaming"], "description": "Codebase for Continual Prototype Evolution (CoPE) to attain perpetually representative prototypes for online and non-stationary datastreams. Includes implementation of the Pseudo-Prototypical Proxy (PPP) loss."}
{"name": "isaaccorley/mlp-mixer-pytorch", "full_name": "isaaccorley/mlp-mixer-pytorch", "topics": ["neural-networks", "deep-learning", "artificial-intelligence", "computer-vision"], "description": "PyTorch implementation of \"MLP-Mixer: An all-MLP Architecture for Vision\" Tolstikhin et al. (2021)"}
{"name": "fdbtrs/pocketnet", "full_name": "fdbtrs/PocketNet", "topics": ["biometrics", "face-recognition", "neural-architecture-search", "knowledge-distillation", "pocketnet", "pytorch"], "description": "Official repository for PocketNet: Extreme Lightweight Face Recognition Network using Neural Architecture Search and Multi-Step Knowledge Distillation"}
{"name": "siekmanj/r2l", "full_name": "siekmanj/r2l", "topics": [], "description": "Recurrent continuous reinforcement learning algorithms implemented in Pytorch."}
{"name": "tk-rusch/cornn", "full_name": "tk-rusch/coRNN", "topics": ["recurrent-neural-network", "time-series", "deep-learning", "mnist", "imdb", "iclr2021", "iclr"], "description": "Official code for Coupled Oscillatory RNN (ICLR 2021, Oral)"}
{"name": "uetailab/uetai", "full_name": "UETAILab/uetai", "topics": ["ai", "machine-learning", "pytorch-lightning", "data-analysis", "experiment-tracking", "model-debugging"], "description": "Custom ML tracking experiment and debugging tools."}
{"name": "xxlong0/estdepth", "full_name": "xxlong0/ESTDepth", "topics": ["depth", "transformer", "video", "consistency"], "description": "CVPR2021"}
{"name": "hmdolatabadi/denoising_diffusion", "full_name": "hmdolatabadi/denoising_diffusion", "topics": ["generative-modeling", "image-generation", "pytorch-lightning", "denoising-diffusion"], "description": "Unofficial Implementation of \"Denoising Diffusion Probabilistic Models\" in PyTorch(Lightning)"}
{"name": "chen742/pipa", "full_name": "chen742/PiPa", "topics": ["contrastive-learning", "deep-learning", "domain-adaptation", "semantic-segmentation", "transformer"], "description": "Official Implementation of PiPa: Pixel- and Patch-wise Self-supervised Learning for Domain Adaptative Semantic Segmentation"}
{"name": "cmu-ideel/new_grad", "full_name": "CMU-IDeeL/new_grad", "topics": ["deep-learning", "deeplearning", "autograd", "autodiff", "backpropagation", "neural-networks", "machine-learning"], "description": "A new lightweight auto-differentation library that directly builds on numpy. Used as a homework for CMU 11785/11685/11485."}
{"name": "elife-asu/innlab", "full_name": "ELIFE-ASU/INNLab", "topics": ["invertible-neural-networks", "machine-learning"], "description": "A python/pytorch package for invertible neural networks"}
{"name": "lapalap/dora", "full_name": "lapalap/dora", "topics": ["deep-learning", "explainable-ai", "machine-learning", "neural-network", "pytorch", "representation-analysis"], "description": "GitHub repository for DORA: Data-agnOstic Representation Analysis paper. DORA allows to find outlier representations in Deep Neural Networks."}
{"name": "carolchenyx/mgfn", "full_name": "carolchenyx/MGFN", "topics": ["anomaly-detection", "deep-learning", "weakly-supervised-learning"], "description": "This is the official repo of paper accepted in AAAI 2023."}
{"name": "aioz-ai/cfr_vqa", "full_name": "aioz-ai/CFR_VQA", "topics": ["vqa", "computer-vision", "deep-learning", "reasoning", "reasoning-machine"], "description": "Coarse-to-Fine Reasoning for Visual Question Answering"}
{"name": "zmykevin/uc2", "full_name": "zmykevin/UC2", "topics": [], "description": "CVPR 2021 Official Pytorch  Code for  UC2: Universal Cross-lingual Cross-modal Vision-and-Language Pre-training"}
{"name": "livxue/gnn4cmr", "full_name": "LivXue/GNN4CMR", "topics": ["pytorch", "graph-neural-networks", "cross-modal-retrieval", "adversarial-networks", "contrastive-learning"], "description": "PyTorch implementation of the AAAI-21 paper \"Dual Adversarial Label-aware Graph Neural Networks for Cross-modal Retrieval\" and the TPAMI-22 paper \"Integrating Multi-Label Contrastive Learning with Dual Adversarial Graph Neural Networks for Cross-Modal Retrieval\"."}
{"name": "kaczmarj/champkit", "full_name": "SBU-BMI/champkit", "topics": ["benchmark", "benchmarking", "histopathology", "image-classification", "deep-learning", "pytorch"], "description": "Benchmarking toolkit for patch-based histopathology image classification."}
{"name": "millanp95/delucs", "full_name": "millanp95/DeLUCS", "topics": ["sequence-clustering", "taxonomic-classification", "deep-learning"], "description": "This repository contains all the source files required to run DeLUCS, a deep learning clustering algorithm for DNA sequences."}
{"name": "kevalmorabia97/object-and-semantic-part-detection-pytorch", "full_name": "kevalmorabia97/Object-and-Semantic-Part-Detection-pyTorch", "topics": ["object-detection", "faster-rcnn", "convolutional-neural-networks", "self-attention", "feature-fusion", "pytorch", "computer-vision"], "description": "Joint detection of Object and its Semantic parts using Attention-based Feature Fusion on PASCAL Parts 2010 dataset"}
{"name": "milan-buaa/tsan-brain-age-estimation", "full_name": "Milan-BUAA/TSAN-brain-age-estimation", "topics": ["brain-age", "brain-age-prediction", "deep-learning", "mri", "pytorch"], "description": "TSAN: Two-Stage-Age-Net, for brain age estimation from T1-weighted MRI data."}
{"name": "arunpalaniappan/tadgan", "full_name": "gusty1g/TadGAN", "topics": ["wasserstein-gan", "gradient-penalty", "generative-adversarial-network", "time-series-anomaly-detection", "pytorch"], "description": "Code for the paper \"TadGAN: Time Series Anomaly Detection Using Generative Adversarial Networks\""}
{"name": "enyandai/nrgnn", "full_name": "EnyanDai/NRGNN", "topics": ["label-noise-robustness", "gnn"], "description": "Offical pytorch implementation of proposed NRGNN and Compared Methods in \"NRGNN: Learning a Label Noise-Resistant Graph Neural Network on Sparsely and Noisily Labeled Graphs\" (KDD 2021)."}
{"name": "hearai/hearai", "full_name": "hearai/hearai", "topics": ["sign-language-recognition", "deep-learning", "hamnosys", "gloss", "pose-estimation", "sign-language", "sign-language-translation"], "description": "Model Sign Language with Machine Learning"}
{"name": "markin-wang/xpronet", "full_name": "Markin-Wang/XProNet", "topics": ["medical-image-processing", "pytorch", "radiology-report-generation"], "description": "[ECCV2022] The official implementation of Cross-modal Prototype Driven Network for Radiology Report Generation"}
{"name": "kaiidams/voice100", "full_name": "kaiidams/voice100", "topics": ["tts", "speech-synthesis", "text-to-speech", "pytorch", "asr", "speech-recognition", "speech", "onnx"], "description": "Voice100 includes neural TTS/ASR models. Inference of Voice100 is low cost as its models are tiny and only depend on CNN without autoregression."}
{"name": "jhl-det/cva-net", "full_name": "jhl-Det/CVA-Net", "topics": ["deep-learning", "object-detection", "pytorch"], "description": null}
{"name": "qiqihaer/3dssd-pytorch", "full_name": "qiqihaer/3DSSD-pytorch", "topics": [], "description": "3DSSD's implementation with Pytorch"}
{"name": "serpapi/serapis-ai-image-classifier", "full_name": "serpapi/serapis-ai-image-classifier", "topics": ["ai", "automatic", "dataset", "dataset-generation", "deep-learning", "image-classification", "machine-learning", "ml", "mlops", "python", "pytorch", "resnet", "resnet-50", "serp", "serpapi"], "description": "Automatic Image Classification from SERP Data"}
{"name": "yxdr/pytorch-multi-class-focal-loss", "full_name": "yxdr/pytorch-multi-class-focal-loss", "topics": [], "description": "A simple pytorch implementation for multi-class focal loss"}
{"name": "wangh-allen/lau-net", "full_name": "wangh-allen/LAU-Net", "topics": [], "description": "This repo is the official pytorch implement for LAU-Net: Latitude Adaptive Upscaling Network for Omnidirectional Image Super-resolution (CVPR, 2021)."}
{"name": "jingzhaozhang/why-clipping-accelerates", "full_name": "JingzhaoZhang/why-clipping-accelerates", "topics": [], "description": "A pytorch implementation for the LSTM experiments in the paper: Why Gradient Clipping Accelerates Training: A Theoretical Justification for Adaptivity"}
{"name": "nipponjo/deepfillv2-pytorch", "full_name": "nipponjo/deepfillv2-pytorch", "topics": ["inpainting", "pytorch", "deepfill", "image-inpainting", "generative-adversarial-network"], "description": "A PyTorch reimplementation of the paper Free-Form Image Inpainting with Gated Convolution (DeepFill v2) (https://arxiv.org/abs/1806.03589) "}
{"name": "rohitkuk/animegan", "full_name": "rohitkuk/AnimeGAN", "topics": ["gan", "gans", "dcgan", "dcgan-pytorch", "pytorch", "python"], "description": "Generating Anime Images by Implementing Deep Convolutional Generative Adversarial Networks paper "}
{"name": "twni2016/meta-sac", "full_name": "twni2016/Meta-SAC", "topics": ["automl", "sac", "soft-actor-critic", "mujoco", "deep-reinforcement-learning", "hyperparameter-optimization", "pytorch", "meta-learning"], "description": "Auto-tune the Entropy Temperature of Soft Actor-Critic via Metagradient - 7th ICML AutoML workshop 2020"}
{"name": "kevinzakka/torchsdf-fusion", "full_name": "kevinzakka/torchsdf-fusion", "topics": ["tsdf-fusion", "pytorch", "robotics", "computer-vision"], "description": "Benchmarking PyTorch variants of TSDF fusion."}
{"name": "tshrjn/finetune-qa", "full_name": "tshrjn/Finetune-QA", "topics": [], "description": "BERT, RoBERTa fine-tuning over SQuAD Dataset using pytorch-lightning\u26a1\ufe0f, \ud83e\udd17-transformers & \ud83e\udd17-nlp."}
{"name": "sulaimanvesal/pointcloududa", "full_name": "sulaimanvesal/PointCloudUDA", "topics": ["domain-adaptation", "segmentation", "cardiac-segmentation", "deep-learning", "point-cloud", "unsupervised-learning"], "description": "[IEEE-TMI 2021] This is our PyTorch implementation for Adapt Everywhere paper on unsupervised domain adaptation using entropy and point-cloud paper. "}
{"name": "iree-org/iree-torch", "full_name": "iree-org/iree-torch", "topics": ["iree", "machine-learning", "pytorch", "compiler"], "description": "Torch Frontend for IREE"}
{"name": "ai-secure/crfl", "full_name": "AI-secure/CRFL", "topics": ["pytorch", "federated-learning", "certified-robustness"], "description": "CRFL: Certifiably Robust Federated Learning against Backdoor Attacks (ICML 2021)"}
{"name": "renzka/sign-segmentation", "full_name": "RenzKa/sign-segmentation", "topics": ["sign-language", "sign-language-segmentation", "pytorch", "segmentation"], "description": "Sign Language Segmentation with Temporal Convolutional Networks (ICASSP'21) and Sign Segmentation with Changepoint-Modulated Pseudo-Labelling (CVPRW'21)"}
{"name": "kaist-amsg/composition-conditioned-crystal-gan", "full_name": "kaist-amsg/Composition-Conditioned-Crystal-GAN", "topics": [], "description": "Composition-Conditioned Crystal GAN pytorch code"}
{"name": "sbelharbi/deep-active-learning-for-joint-classification-and-segmentation-with-weak-annotator", "full_name": "sbelharbi/deep-active-learning-for-joint-classification-and-segmentation-with-weak-annotator", "topics": ["active-learning", "segmentation", "weakly-supervised-learning", "deep-learning", "pytorch"], "description": "Pytorch code for the paper \"Deep Active Learning for Joint Classification and Segmentation with Weak Annotator\""}
{"name": "ai4bharat/indiannlp-transliteration", "full_name": "AI4Bharat/IndicNLP-Transliteration", "topics": ["indian-languages", "nlp", "transliteration", "konkani", "maithili", "sinhala", "urdu", "tamil", "malayalam", "kannada", "telugu", "punjabi", "gurmukhi", "marathi", "gujarati", "bangla", "sindhi"], "description": "Codebase for Indic-Transliteration using Seq2Seq RNN. For latest repo with Transformer-based models, check: https://github.com/AI4Bharat/IndicXlit"}
{"name": "sundw2014/dcm", "full_name": "sundw2014/DCM", "topics": ["cnn", "deep-learning", "machine-learning", "image-classification", "knowledge-transfer", "knowledge-distillation"], "description": "Knowledge Transfer via Dense Cross-layer Mutual-distillation (ECCV'2020)"}
{"name": "kushajveersingh/resize_network_cv", "full_name": "KushajveerSingh/resize_network_cv", "topics": ["pytorch", "pytorch-implementation", "computer-vision", "pytorch-lightning"], "description": "PyTorch implementation of the paper \"Learning to Resize Images for Computer Vision Tasks\" on Imagenette and Imagewoof datasets"}
{"name": "nianlonggu/memsum", "full_name": "nianlonggu/MemSum", "topics": ["extractive-summarization", "long-document-summarization", "acl2022", "reinforcement-learning", "memsum", "nlp", "pytorch"], "description": "Code for ACL 2022 paper on the topic of long document summarization: MemSum: Extractive Summarization of Long Documents Using Multi-Step Episodic Markov Decision Processes"}
{"name": "grishavak/lidia-denoiser", "full_name": "grishavak/LIDIA-denoiser", "topics": ["image-denoising", "residual-learning", "pytorch", "adaptation", "lightweight", "lightweight-neural-network", "fine-tuning", "deep-learning", "machine-learning", "image-processing"], "description": "LIDIA: Lightweight Learned Image Denoising with Instance Adaptation (NTIRE, 2020)"}
{"name": "hiredscorelabs/seqtolang", "full_name": "hiredscorelabs/seqtolang", "topics": ["machine-learning", "deep-learning", "natural-language-processing", "language-identification"], "description": "Multi-Langauge Identification"}
{"name": "matrixgame2018/feanet", "full_name": "matrixgame2018/FEANet", "topics": ["pytorch", "semantic-segmentation"], "description": "FEANet with RGB-Thermal"}
{"name": "leftthomas/restormer", "full_name": "leftthomas/Restormer", "topics": ["deraining", "pytorch", "transformer"], "description": "A PyTorch implementation of Restormer based on CVPR 2022 paper \"Restormer: Efficient Transformer for High-Resolution Image Restoration\""}
{"name": "pputzky/irim_fastmri", "full_name": "pputzky/irim_fastMRI", "topics": ["fastmri", "inverse-problems", "large-scale-learning", "deep-learning", "mri"], "description": "i-RIM applied to the fastMRI challenge data."}
{"name": "lijiazheng99/counterfactuals-for-sentiment-analysis", "full_name": "lijiazheng99/Counterfactuals-for-Sentiment-Analysis", "topics": ["python37", "huggingface-transformer", "sentiment-analysis", "natural-language-processing"], "description": "ACL-21 Exploring the Efficacy of Automatically Generated Counterfactuals for Sentiment Analysis"}
{"name": "lornatang/ugatit-pytorch", "full_name": "Lornatang/UGATIT-PyTorch", "topics": ["pytorch", "pytorch-implmention", "cnn", "gan", "ugatit", "simple", "speed", "pre-trained-model"], "description": "Simple, fast and easy to read. Yes, we use the pytorch framework!"}
{"name": "dzy3/kcd", "full_name": "dzy3/KCD", "topics": [], "description": "Pytorch implementation of our paper accepted by ECCV2022 -- Knowledge Condensation Distillation https://arxiv.org/abs/2207.05409"}
{"name": "gbouritsas/graph-substructure-networks", "full_name": "gbouritsas/GSN", "topics": ["graph-neural-networks", "pytorch", "graph-representation-learning", "subgraph-isomorphism", "neural-network-expressivity"], "description": "Official repository for the paper \"Improving Graph Neural Network Expressivity via Subgraph Isomorphism Counting\" (TPAMI'22) https://arxiv.org/abs/2006.09252"}
{"name": "denisyarats/exorl", "full_name": "denisyarats/exorl", "topics": ["python", "control", "reinforcement-learning", "unsupevised", "offline-rl", "deep-learning", "pytorch", "off-policy", "mujoco", "model-free", "exporation", "datasets"], "description": "ExORL: Exploratory Data for Offline Reinforcement Learning"}
{"name": "xuchensjtu/sat-master-online", "full_name": "xuChenSJTU/SAT-master-online", "topics": [], "description": "This is a Pytorch implementation of our \"Learning on Attribute-Missing Graphs\"."}
{"name": "interdigitalinc/compressai-vision", "full_name": "InterDigitalInc/CompressAI-Vision", "topics": ["compression", "computer-vision", "machine-to-machine-communication", "video-compression", "deep-learning", "pytorch"], "description": "CompressAI-Vision helps you design, test and compare Video Compression for Machines pipelines. Compression methods can be either pulled from custom AI-based modules from CompressAI or traditional codecs such as H.266/VVC."}
{"name": "l294265421/scan", "full_name": "l294265421/SCAN", "topics": ["aspect-category-sentiment-analysis", "absa", "acsa", "aspect-based-sentiment-analysis", "syntax", "sentence-constituent", "graph-attention-networks", "gat", "gnn", "graph-neural-networks"], "description": "[NLPCC 2020] Sentence Constituent-Aware Aspect-Category Sentiment Analysis with Graph Attention Networks"}
{"name": "learning-at-home/dalle-hivemind", "full_name": "learning-at-home/dalle-hivemind", "topics": [], "description": "Training a model similar to OpenAI DALL-E with volunteers from all over the Internet using hivemind and dalle-pytorch (NeurIPS 2021 demo)"}
{"name": "caopulan/ganinverter", "full_name": "caopulan/GANInverter", "topics": ["gan", "gan-inversion", "generative-adversarial-network", "inversion"], "description": "A GAN inversion toolbox based on PyTorch library. We design a unified pipeline for inversion methods and conduct a comprehensive benchmark."}
{"name": "yura52/delu", "full_name": "Yura52/delu", "topics": ["python", "pytorch", "deep-learning", "artificial-intelligence", "neural-networks", "machine-learning", "ai"], "description": "Deep Learning Utilities for PyTorch users (old name: Zero)"}
{"name": "suryanshkumar/online-joint-depthfusion-and-semantic", "full_name": "suryanshkumar/online-joint-depthfusion-and-semantic", "topics": ["deep-learning", "segmentation", "reconstruction"], "description": "A Real-Time Online Learning Framework for Joint 3D Reconstruction and Semantic Segmentation for Indoor Scene."}
{"name": "gaviotas/amn", "full_name": "gaviotas/AMN", "topics": ["pytorch", "amn", "cvpr2022", "weakly-supervised-learning", "weakly-supervised-segmentation", "threshold-matters-in-wsss"], "description": "Official PyTorch implementation of \"Threshold Matters in WSSS: Manipulating the Activation for the Robust and Accurate Segmentation Model Against Thresholds\", CVPR2022"}
{"name": "wey-gu/nebula-dgl", "full_name": "wey-gu/nebula-dgl", "topics": ["dgl", "nebula-graph", "networkx", "gcn", "gnn", "graph-data", "graph-neural-network", "graph-algorithms", "nebulagraph"], "description": "NebulaGraph DGL(Deep Graph Library) Integration Package. (WIP)"}
{"name": "ytongxie/unimiss-code", "full_name": "YtongXie/UniMiSS-code", "topics": [], "description": "[ECCV2022] Official pytorch implementation of UniMiSS"}
{"name": "lromul/gramtion", "full_name": "lRomul/gramtion", "topics": ["twitter", "twitter-bot", "image-captioning", "alt-text", "deep-learning", "accessibility"], "description": "Twitter bot for generating photo descriptions (alt text)"}
{"name": "sirui-xu/stars", "full_name": "Sirui-Xu/STARS", "topics": ["disentangled-representations", "eccv2022", "motion-forecasting", "motion-prediction", "generative-model", "graph-neural-networks", "deep-learning", "human-motion-prediction", "pytorch"], "description": "[ECCV 2022 oral] Official PyTorch implementation of the paper \"Diverse Human Motion Prediction Guided by Multi-Level Spatial-Temporal Anchors\""}
{"name": "qute012/kosr", "full_name": "qute012/kosr", "topics": ["speech-recognition", "korean-speech-recognition", "end-to-end", "pytorch", "asr", "transformer", "transformer-transducer", "korean-asr", "ksponspeech", "transforme-joint-ctc"], "description": "Korean speech recognition based on transformer (\ud2b8\ub79c\uc2a4\ud3ec\uba38 \uae30\ubc18 \ud55c\uad6d\uc5b4 \uc74c\uc131 \uc778\uc2dd)"}
{"name": "manassharma07/crysx_nn", "full_name": "manassharma07/crysx_nn", "topics": ["neural-network", "machine-learning", "python", "deep-learning", "numba-jit-compiler"], "description": "A simplistic and efficient pure-python neural network library from Phys Whiz."}
{"name": "nikosefth/im2rbte", "full_name": "NikosEfth/im2rbte", "topics": ["image-to-sketch", "domain-generalization", "im2rbte", "im4sketch", "python", "pytorch"], "description": "Edge Augmentation for Large Scale Sketch Recognition without Sketches"}
{"name": "ryanxhr/por", "full_name": "ryanxhr/POR", "topics": ["offline-reinforcement-learning", "pytorch"], "description": "Author's implementation of POR in \"A Policy-Guided Imitation Approach for Offline Reinforcement Learning\""}
{"name": "huang-research-group/globalfsl2019", "full_name": "huang-research-group/globalfsl2019", "topics": ["few-shot-learning", "generalized-few-shot-learning", "image-classification", "metric-learning", "iccv-2019", "pytorch"], "description": "Implementation for paper \"Few-Shot Learning with Global Class Representations\" (https://arxiv.org/abs/1908.05257)"}
{"name": "hltchkust/caire-covid", "full_name": "HLTCHKUST/CAiRE-COVID", "topics": ["question-answering", "qa", "summarization", "search-engine", "nlp", "kaggle"], "description": "A machine learning-based system that uses state-of-the-art natural language processing (NLP) question answering (QA) techniques combined with summarization for mining the available scientific literature"}
{"name": "shahrukhx01/siamese-nn-semantic-text-similarity", "full_name": "shahrukhx01/siamese-nn-semantic-text-similarity", "topics": ["pytorch", "nlp", "siamese-neural-network", "transformers", "bert", "lstm", "attention-mechanism"], "description": "A repository containing comprehensive Neural Networks based PyTorch implementations for the semantic text similarity task, including architectures such as:  Siamese LSTM Siamese BiLSTM with Attention Siamese Transformer Siamese BERT."}
{"name": "fpv-iplab/stmda-retinanet", "full_name": "fpv-iplab/STMDA-RetinaNet", "topics": ["detectron2", "cyclegan", "google-colab", "domain-adaptation", "object-detection", "coco-annotations", "stmda-retinanet", "unsupervised-domain-adaptation", "deep-learning"], "description": "Official Detectron2 implementation of STMDA-RetinaNet of our Computer Vision and Image Understanding 2022 work 'A Multi Camera Unsupervised Domain Adaptation Pipeline for Object Detection in Cultural Sites through Adversarial Learning and Self-Training'"}
{"name": "jinhseo/od-wscl", "full_name": "jinhseo/OD-WSCL", "topics": ["computer-vision", "object-detection", "weakly-supervised-object-detection"], "description": "[ECCV2022] Official Pytorch Implementation of Object Discovery via Contrastive Learning for Weakly Supervised Object Detection"}
{"name": "thinkwee/unikeyphrase", "full_name": "thinkwee/UniKeyphrase", "topics": ["natural-language-processing", "acl2021", "keyphrase-generation", "unilm", "tencent"], "description": "code for the paper \"UniKeyphrase: A Unified Extraction and Generation Framework for Keyphrase Prediction\""}
{"name": "dontlovebugs/superviseddepthprediction", "full_name": "dontLoveBugs/SupervisedDepthPrediction", "topics": ["dorn", "depth-estimation", "monocular", "apex"], "description": "Pytorch framework for supervised depth prediction"}
{"name": "bmycheez/c3net", "full_name": "bmycheez/C3Net", "topics": ["pytorch", "demoireing", "ntire2020", "cvpr2020", "python", "moire", "channel-attention", "loss-functions", "sangmin-kim"], "description": "C3Net: Demoireing Network Attentive in Channel, Color and Concatenation (CVPRW 2020)"}
{"name": "fightingsrain/pytorch-pixelrl", "full_name": "FightingSrain/Pytorch-pixelRL", "topics": [], "description": "Pytorch reproduction of pixelRL"}
{"name": "nagyrajmund/gesturebot", "full_name": "nagyrajmund/gesturebot", "topics": ["unity", "virtual-agents", "deep-learning", "human-computer-interaction"], "description": "The official code for our paper \"A Framework for Integrating Gesture Generation Models into Interactive Conversational Agents\", published as a demonstration at AAMAS 2021."}
{"name": "jgrss/cultionet", "full_name": "jgrss/cultionet", "topics": ["agriculture", "crops", "deep-learning", "fields", "land-cover", "pytorch", "satellite"], "description": "Image segmentation of cultivated land"}
{"name": "zgcr/aicity2020_track2_reid_bebetter", "full_name": "zgcr/AICITY2020_track2_reid_BeBetter", "topics": ["aicitychallenge", "aicity2020", "vehicle-reid", "pytorch"], "description": "AICITY2020 track2 reid open source code."}
{"name": "ipc-lab/private-ml-for-health", "full_name": "ipc-lab/private-ml-for-health", "topics": ["federated-learning", "differential-privacy", "secure-multi-party-computation", "deep-learning", "deep-neural-network", "medical-image-processing", "medical-application", "privacy", "machine-learning", "opacus", "diabetic-retinopathy", "diabetic-retinopathy-detection", "squeezenet"], "description": "Dopamine: Differentially Private Federated Learning on Medical Data (AAAI - PPAI)"}
{"name": "mathiaszinnen/focal_loss_torch", "full_name": "mathiaszinnen/focal_loss_torch", "topics": [], "description": "Simple pytorch implementation of focal loss"}
{"name": "wqt2019/tacotron-2_melgan", "full_name": "wqt2019/tacotron-2_melgan", "topics": [], "description": "tacotron-2(tensorflow) + melgan(pytorch) chinese TTS"}
{"name": "danielism97/st-mfnet", "full_name": "danielism97/ST-MFNet", "topics": ["deep-learning", "pytorch", "video-frame-interpolation"], "description": "[IEEE/CVF CVPR'2022] \"ST-MFNet: A Spatio-Temporal Multi-Flow Network for Frame Interpolation\", Duolikun Danier, Fan Zhang, David Bull"}
{"name": "snnclsr/ner", "full_name": "snnclsr/ner", "topics": ["ner", "nlp"], "description": "Turkish Named Entity Recognition"}
{"name": "agwave/pdf-resume-information-extraction", "full_name": "Agwave/PDF-Resume-Information-Extraction", "topics": ["bilstm-crf", "pytorch", "resume", "ner"], "description": "\u5929\u6c60\u6bd4\u8d5b\u4f5c\u54c1\u6574\u7406\u3002\u5b9e\u73b0\u4ecepdf\u4e2d\u63d0\u53d6\u51fa\u59d3\u540d\u3001\u51fa\u751f\u5e74\u6708\u3001\u6027\u522b\u3001\u7535\u8bdd\u3001\u6700\u9ad8\u5b66\u5386\u3001\u7c4d\u8d2f\u3001\u843d\u6237\u5e02\u53bf\u3001\u653f\u6cbb\u9762\u8c8c\u3001\u6bd5\u4e1a\u9662\u6821\u3001\u5de5\u4f5c\u5355\u4f4d\u3001\u5de5\u4f5c\u5185\u5bb9\u3001\u804c\u52a1\u3001\u9879\u76ee\u540d\u79f0\u3001\u9879\u76ee\u8d23\u4efb\u3001\u5b66\u4f4d\u3001\u6bd5\u4e1a\u65f6\u95f4\u3001\u5de5\u4f5c\u65f6\u95f4\u3001\u9879\u76ee\u65f6\u95f4\u517118\u4e2a\u5b57\u6bb5\u3002"}
{"name": "dongpoli/ec-bert", "full_name": "DongPoLI/EC-BERT", "topics": ["bert", "relation-extraction", "bert-relation-extraction", "pytorch", "relation-classification", "r-bert", "ec-bert"], "description": "Relation Classificaton based on information enhanced BERT"}
{"name": "konfuzio-ai/konfuzio-sdk", "full_name": "konfuzio-ai/konfuzio-sdk", "topics": ["python", "nlp", "computer-vision", "ocr", "document-extraction", "text-classification", "text-processing", "document-annotate", "document-annotation", "document-annotation-tool"], "description": "OCR, extract and classify documents. In addition, annotate documents and build your own NLP and Computer Vision models using Python by downloading the data. Find examples in our Colab Notebooks, e. g. how to fine-tune Flair."}
{"name": "audioku/cross-accent-maml-asr", "full_name": "audioku/cross-accent-maml-asr", "topics": ["maml", "meta-learning", "asr", "cross-accent", "accent", "pytorch", "speech"], "description": "Meta-learning model agnostic (MAML) implementation for cross-accented ASR"}
{"name": "inhwanbae/npsn", "full_name": "InhwanBae/NPSN", "topics": ["human-trajectory-prediction", "motion-forecasting", "multi-agent", "sampling-bias", "sampling-methods", "deep-learning", "cvpr2022", "autonomous-vehicles"], "description": "Official Code for \"Non-Probability Sampling Network for Stochastic Human Trajectory Prediction (CVPR 2022)\""}
{"name": "noahs-ark/groc", "full_name": "Noahs-ARK/GroC", "topics": [], "description": "Pytorch implementation of models described in \"Grounded compositional outputs for adaptive language modeling\", EMNLP 2020."}
{"name": "cpm0722/transformer_pytorch", "full_name": "cpm0722/transformer_pytorch", "topics": ["nlp", "transformer", "pytorch", "nlp-model"], "description": "Transformer(Attention Is All You Need) Implementation in Pytorch"}
{"name": "sedaboni/admm-diptv", "full_name": "sedaboni/ADMM-DIPTV", "topics": ["admm", "dip", "paper", "image-restoration", "pytorch", "admm-diptv", "deep-learning"], "description": "Combining Weighted Total Variation and Deep Image Prior for natural and medical image restoration via ADMM (2021)"}
{"name": "ggchen1997/gdw-nips2021", "full_name": "GGchen1997/GDW-NIPS2021", "topics": ["pytorch", "deep-learning", "meta-learning"], "description": "This repository is the official implementation of Generalized Data Weighting via Class-level Gradient Manipulation (NeurIPS 2021)(http://arxiv.org/abs/2111.00056)."}
{"name": "tibhannover/cross-modal_entity_consistency", "full_name": "TIBHannover/cross-modal_entity_consistency", "topics": ["cross-modal-consistency", "cross-modal-entity-verification", "multimodal-retrieval", "image-repurposing-detection", "deep-learning"], "description": "This repository contains the dataset and source files to reproduce the results in the publication M\u00fcller-Budack et al. 2021: \"Multimodal news analytics using measures of cross-modal entity and context consistency\", In: International Journal on Multimedia Information Retrieval (IJMIR), Vol. 10, Art. no. 2, 2021."}
{"name": "lee-zq/cnn-backbone", "full_name": "lee-zq/CNN-Backbone", "topics": ["cnn-backbone", "pytorch", "classification"], "description": "Some SOTA CNN modules or models construction methods and techniques"}
{"name": "zzhanghub/eval-co-sod", "full_name": "zzhanghub/eval-co-sod", "topics": ["co-saliency", "salient-object-detection", "pytorch", "evaluation", "f-measure", "e-measure", "s-measure", "auc", "pr-curve", "roc-curve", "average-precision", "mae", "mean-absolute-error", "python"], "description": "PyTorch-Based Evaluation Tool for Co-Saliency Detection"}
{"name": "lingkai-kong/calibrated-bert-fine-tuning", "full_name": "Lingkai-Kong/Calibrated-BERT-Fine-Tuning", "topics": ["calibration", "language-model", "uncertainty-quantification", "uncertainty-estimation", "bert", "open-world-classification", "robustness", "text-classification", "ood-detection", "deep-learning", "nlp-machine-learning", "nlp"], "description": "Code for Paper: Calibrated Language Model Fine-Tuning for In- and Out-of-Distribution Data"}
{"name": "zju-vipa/protopformer", "full_name": "zju-vipa/ProtoPFormer", "topics": ["computer-vision", "pytorch", "vision-transformer", "explainable-ai", "explainable-artificial-intelligence", "concept-based-explanations", "concept-based-models", "part-prototype-networks", "protopnet"], "description": "ProtoPFormer: Concentrating on Prototypical Parts in Vision Transformers for Interpretable Image Recognition"}
{"name": "iduta/pyconvsegnet", "full_name": "iduta/pyconvsegnet", "topics": ["semantic-segmentation", "scene-parsing", "ade20k", "pytorch", "scene-recognition", "deep-learning", "computer-vision", "pattern-recognition", "machine-learning", "neural-networks", "pyconv", "segmentation"], "description": "Semantic Segmentation PyTorch code for our paper: Pyramidal Convolution: Rethinking Convolutional Neural Networks for Visual Recognition (https://arxiv.org/pdf/2006.11538.pdf)"}
{"name": "isp1tze/maproj", "full_name": "isp1tze/MAProj", "topics": ["multi-agent-reinforcement-learning", "pytorch", "commnet", "bicnet", "maddpg"], "description": "Multi-agent project (commnet, bicnet, maddpg) in pytorch for Multi-Agent Particle Environment"}
{"name": "zassou65535/image_generator", "full_name": "zassou65535/image_generator", "topics": ["python", "gan", "image-generation", "dcgan", "pytorch"], "description": "GAN\u306epytorch\u5b9f\u88c5"}
{"name": "chenwwweixiang/opencoviddetector", "full_name": "ChenWWWeixiang/OpenCovidDetector", "topics": ["python", "covid19", "covid-19", "diagnosis", "pytorch"], "description": "New virsion for multi-categories were available. Since too many changes above old virsion, please refer to this site https://github.com/ChenWWWeixiang/diagnosis_covid19"}
{"name": "bubbliiiing/dcgan-pytorch", "full_name": "bubbliiiing/dcgan-pytorch", "topics": [], "description": "\u8fd9\u662f\u4e00\u4e2adcgan-pytorch\u7684\u6e90\u7801\uff0c\u53ef\u4ee5\u7528\u4e8e\u8bad\u7ec3\u81ea\u5df1\u7684\u6a21\u578b\u3002"}
{"name": "nazmul-karim170/unicon-noisy-label", "full_name": "nazmul-karim170/UNICON-Noisy-Label", "topics": ["contrastive-learning", "deep-learning", "deep-neural-networks", "jensen-shannon-divergence", "label-noise-robustness", "machine-learning", "noisy-labels", "semi-supervised-learning"], "description": "Official Implementation of the CVPR 2022 paper \"UNICON: Combating Label Noise Through Uniform Selection and Contrastive Learning\""}
{"name": "yanglabhkust/portal", "full_name": "YangLabHKUST/Portal", "topics": ["single-cell-analysis", "data-integration", "deep-learning"], "description": "Adversarial domain translation networks for integrating large-scale atlas-level single-cell datasets"}
{"name": "xavierfav/coala", "full_name": "xavierfav/coala", "topics": ["deep-learning", "contrastive-loss", "audio-representation", "autoencoders"], "description": "COALA: Co-Aligned Autoencoders for Learning Semantically Enriched Audio Representations"}
{"name": "mingyuyng/visual-selective-vio", "full_name": "mingyuyng/Visual-Selective-VIO", "topics": ["deep-learning", "eccv2022", "gumbel-softmax", "visual-inertial-odometry"], "description": "Code for \"Efficient Deep Visual and Inertial Odometry with Adaptive Visual Modality Selection\", ECCV 2022"}
{"name": "media-smart/vedacls", "full_name": "Media-Smart/vedacls", "topics": ["classification-toolbox", "pytorch"], "description": "A classification toolbox based on PyTorch"}
{"name": "skywalker023/pragmatic-consistency", "full_name": "skywalker023/pragmatic-consistency", "topics": ["emnlp", "paper", "dialogues", "nlp", "pragmatics", "consistency", "social-cognition", "natural-language-processing"], "description": "\ud83e\udd16 Code for our EMNLP 2020 paper: \"Will I Sound Like Me? Improving Persona Consistency in Dialogues through Pragmatic Self-Consciousness\""}
{"name": "seoneun/kobart-question-generation", "full_name": "Seoneun/KoBART-Question-Generation", "topics": ["nlp", "bart", "kobart", "natural-language-generation", "natural-language-processing", "nlg", "question-generation", "korean-nlp"], "description": "KorQuAD Korean domain Question Generation module based on KoBART"}
{"name": "yi-ding-cs/tsception", "full_name": "yi-ding-cs/TSception", "topics": ["cnn", "multi-scale-model", "eeg-classification", "emotion-recognition"], "description": "[TAFFC-2022] PyTorch implementation of TSception v2"}
{"name": "superlouis/node-select", "full_name": "superlouis/NODE-SELECT", "topics": ["deep-learning", "node-selection", "realistic-propagation", "graph-neural-networks"], "description": "NODE-SELECT: A Graph Neural Network Based On A Selective Propagation Technique"}
{"name": "nachifur/llpc", "full_name": "nachifur/LLPC", "topics": ["deep-learning", "edge-detection", "label-correction", "segmantation", "overlapping-cell", "dataset", "point-correction", "data-centric-ai", "segmentation"], "description": "Frontiers in Neuroinformatics 2022: Local Label Point Correction for Edge Detection of Overlapping Cervical Cells"}
{"name": "xingyul/revolver", "full_name": "xingyul/revolver", "topics": ["imitation-learning", "mujoco", "reinforcement-learning", "learning-from-demonstration", "policy-transfer", "pytorch", "robotics", "transfer-learning"], "description": "REvolveR: Continuous Evolutionary Models for Robot-to-robot Policy Transfer (ICML 2022 Long Oral)"}
{"name": "zyong812/stip", "full_name": "zyong812/STIP", "topics": ["computer-vision", "human-object-interaction", "cvpr2022", "deep-learning"], "description": "Code for CVPR22 paper: Exploring Structure-aware Transformer over Interaction Proposals for Human-Object Interaction Detection."}
{"name": "miemie2013/keras-solo", "full_name": "miemie2013/Keras-SOLO", "topics": ["keras", "solo", "solov2", "solov1"], "description": "Keras-SOLO(Segmenting Objects by Locations)"}
{"name": "ki-ljl/fedper", "full_name": "ki-ljl/FedPer", "topics": ["federated-learning", "python", "pytorch"], "description": "PyTorch implementation of FedPer (Federated Learning with Personalization Layers)."}
{"name": "zgr6010/hsi_ssftt", "full_name": "zgr6010/HSI_SSFTT", "topics": ["hyperspectral-image-classification", "convolutional-neural-networks", "deep-learning", "remote-sensing", "transformer"], "description": "L. Sun, G. Zhao, Y. Zheng, and Z. Wu. \"Spectral\u2013Spatial Feature Tokenization Transformer for Hyperspectral Image Classification,\" in IEEE TGRS, 2022."}
{"name": "dmburd/s-dcnet", "full_name": "dmburd/S-DCNet", "topics": ["deep-learning", "convolutional-neural-networks", "pytorch", "crowd-counting", "computer-vision", "crowd-analysis"], "description": "Unofficial Pytorch implementation of S-DCNet and SS-DCNet"}
{"name": "mako443/text2pos-cvpr2022", "full_name": "mako443/Text2Pos-CVPR2022", "topics": ["pytorch", "deep-learning", "localization", "nlp", "language-processing", "cross-modal", "cross-modal-retrieval", "cross-modal-learning", "computer-vision", "cvpr", "cvpr2022"], "description": "Code, dataset and models for our CVPR 2022 publication \"Text2Pos\""}
{"name": "yoseflaw/nerindo", "full_name": "yoseflaw/nerindo", "topics": ["ner", "pytorch", "nlproc", "bahasa-indonesia"], "description": "Named Entity Recognition with BiLSTM, CRF, and Attention-based models implemented in PyTorch for Indonesian News."}
{"name": "aws-samples/sagemaker-distributed-training-workshop", "full_name": "aws-samples/sagemaker-distributed-training-workshop", "topics": ["aws", "dataparallelism", "deep-learning", "modelparallelism", "sagemaker-training"], "description": "Hands-on workshop for distributed training and hosting on SageMaker"}
{"name": "akanametov/pathgan", "full_name": "akanametov/pathgan", "topics": ["deep-neural-networks", "pytorch", "heuristics", "pathfinding", "path-planning", "generative-adversarial-network", "gan", "neural-networks"], "description": "A Pytorch implementation of Generative Adversarial Network for Heuristics of Sampling-based Path Planning"}
{"name": "stanfordmlgroup/chexbert", "full_name": "stanfordmlgroup/CheXbert", "topics": ["deep-learning", "medical-imaging", "bert", "natural-language-processing", "radiology"], "description": "Combining Automatic Labelers and Expert Annotations for Accurate Radiology Report Labeling Using BERT"}
{"name": "flashkong/source-free-object-detection-by-learning-to-overlook-domain-style", "full_name": "Flashkong/Source-Free-Object-Detection-by-Learning-to-Overlook-Domain-Style", "topics": ["object-detection", "pytorch"], "description": "Shuaifeng Li, Mao Ye, Xiatian Zhu, Lihua Zhou, Lin Xiong, Source-Free Object Detection by Learning to Overlook Domain Style, CVPR2022-Oral paper, 2022."}
{"name": "icecube/graphnet", "full_name": "graphnet-team/graphnet", "topics": ["astrophysics", "deep-learning", "gpu", "high-energy-physics", "machine-learning", "neural-network", "particle-physics", "physics-analysis", "python", "pytorch", "neutrino-oscillations", "neutrino-physics", "neutrinos", "graph-neural-network"], "description": "Graph neural networks for neutrino telescope event reconstruction"}
{"name": "jhlew/softsplat-full", "full_name": "JHLew/SoftSplat-Full", "topics": ["cvpr2020", "pytorch", "video-frame-interpolation"], "description": "Full model implementation of CVPR 2020 paper, \"Softmax Splatting for Video Frame Interpolation\""}
{"name": "anshulpaigwar/frustum-pointpillars", "full_name": "anshulpaigwar/Frustum-Pointpillars", "topics": ["lidar", "point-cloud", "autonomous-driving", "deep-learning", "pytorch", "pointpillars", "frustum-pointnet", "rgb", "sensor-fusion", "3d-object-detection", "real-time", "pedestrian-detection", "frustrum", "f-pointpillars", "frustrum-pointpillars"], "description": "Frustum-PointPillars: A Multi-Stage Approach for 3D Object Detection using RGB Camera and LiDAR"}
{"name": "ga642381/robustvc", "full_name": "ga642381/RobustVC", "topics": ["speech-processing", "deep-learning", "speech-enhancement"], "description": "**ICASSP 2022** \u300aToward Degradation-Robust Voice Conversion\u300bUsing speech enhancement and end-to-end denoising training to improve degradation / adversarial robustness of VC models."}
{"name": "daveredrum/d3net", "full_name": "daveredrum/D3Net", "topics": ["computer-vision", "natural-language-processing", "deep-learning", "point-cloud", "3d", "caption-generation", "visual-grounding", "semi-supervised-learning", "eccv", "eccv2022"], "description": "[ECCV2022] D3Net: A Unified Speaker-Listener Architecture for 3D Dense Captioning and Visual Grounding "}
{"name": "combra-lab/spiking-ddpg-mapless-navigation", "full_name": "combra-lab/spiking-ddpg-mapless-navigation", "topics": ["snn", "loihi", "neuromorphic-computing", "intel-neuromorphic", "deep-reinforcement-learning", "mapless-navigation", "pytorch", "ros", "gazebo", "turtlebot2", "ddpg", "spiking-neural-networks"], "description": "Spiking-DDPG trains an SNN for energy-efficient mapless navigation on Intel's Loihi neuromorphic processor."}
{"name": "lava-nc/lava-dl", "full_name": "lava-nc/lava-dl", "topics": ["deep-learning", "neural-networks", "neuromorphic", "neuromorphic-computing", "python", "pytorch"], "description": "Deep Learning library for Lava"}
{"name": "joanrod/ocr-vqgan", "full_name": "joanrod/ocr-vqgan", "topics": ["dataset", "deep-generative-model", "deep-learning", "image-generation", "image-reconstruction", "ocr", "ocr-vqgan", "taming-transformers", "vqgan", "paper2fig", "paper2fig100k", "text-reconstruction"], "description": "OCR-VQGAN, a discrete image encoder (tokenizer and detokenizer) for figure images in Paper2Fig100k dataset. Implementation of OCR Perceptual loss for clear text-within-image generation. Fork from VQGAN in CompVis/taming-transformers"}
{"name": "gaozhongpai/paiconvmesh", "full_name": "Gaozhongpai/LSAConvMesh", "topics": ["3d-reconstruction", "graph-convolutional-networks", "mesh-generation", "pytorch", "3d-vision"], "description": "Official repository for the paper \"Learning Local Neighboring Structure for Robust 3D Shape Representation\" "}
{"name": "fredfung007/cityflow-nl", "full_name": "fredfung007/cityflow-nl", "topics": ["aicitychallenge", "nlp", "retrieval-systems"], "description": "Tracked Vehicle Retrieval by NL Challenge in the 2023 AI City Challenge."}
{"name": "bradyfu/dvg-face", "full_name": "BradyFU/DVG-Face", "topics": ["face-recognition", "heterogeneous-face-recognition", "pytorch"], "description": "DVG-Face: Dual Variational Generation for Heterogeneous Face Recognition, TPAMI 2021"}
{"name": "eedalong/dpex", "full_name": "eedalong/Dpex", "topics": ["deep-learning", "data-pipeline", "ray", "distributed-systems", "pytorch", "dataloader"], "description": "Distributed DataLoader For Pytorch Based On Ray"}
{"name": "ezeli/butd_model", "full_name": "ezeli/BUTD_model", "topics": ["image-captioning"], "description": "A pytorch implementation of \"Bottom-Up and Top-Down Attention for Image Captioning and Visual Question Answering\" for image captioning."}
{"name": "clashluke/perftorch", "full_name": "ClashLuke/PerfTorch", "topics": [], "description": "High performance pytorch modules"}
{"name": "fluidml/fluidml", "full_name": "fluidml/fluidml", "topics": ["machine-learning", "python", "data-science", "parallel", "pipelining", "deep-learning", "optimization", "model-selection"], "description": "FluidML is a lightweight framework for developing machine learning pipelines."}
{"name": "illidanlab/splitmix", "full_name": "illidanlab/SplitMix", "topics": ["federated-learning", "tiny-ml", "robustness", "iclr2022", "personalization", "slimmable-networks", "pytorch", "heterofl"], "description": "[ICLR2022] Efficient Split-Mix federated learning for in-situ model customization during both training and testing time"}
{"name": "sjleo/ffsd", "full_name": "SJLeo/FFSD", "topics": [], "description": "Pytorch implementation of our paper accepted by IEEE TNNLS, 2022 -- Distilling a Powerful Student Model via Online Knowledge Distillation"}
{"name": "marine-debris/marine-debris.github.io", "full_name": "marine-debris/marine-debris.github.io", "topics": ["deep-learning", "semantic-segmentation", "classification", "marine-litter"], "description": "Quick Start Guide for MARIDA (Marine Debris Archive)"}
{"name": "oncescuandreea/audio-retrieval", "full_name": "oncescuandreea/audio-retrieval", "topics": ["pytorch", "deep-learning", "text-based-retrieval", "audio-retrieval"], "description": "Implementation of \"Audio Retrieval with Natural Language Queries\", INTERSPEECH 2021, PyTorch"}
{"name": "qq456cvb/sprin", "full_name": "qq456cvb/SPRIN", "topics": ["segmentation", "shapenet", "rotation-invariant-features", "pytorch", "tpami"], "description": "PRIN/SPRIN: On Extracting Point-wise Rotation Invariant Features"}
{"name": "raschka-research-group/coral_pytorch", "full_name": "Raschka-research-group/coral-pytorch", "topics": ["deep-learning", "ordinal-regression", "ordinal-classification"], "description": "CORAL and CORN implementations for ordinal regression with deep neural networks."}
{"name": "zfchenunique/dcl-release", "full_name": "zfchenUnique/DCL-Release", "topics": [], "description": "This repo contains the pytorch implementation for Dynamic Concept Learner (accepted by ICLR 2021). "}
{"name": "0zgur0/ms-convstar", "full_name": "0zgur0/multi-stage-convSTAR-network", "topics": ["deep-learning", "pytorch", "rnn", "convolutional-neural-networks", "convlstm-network", "lstm-neural-networks", "gru", "crop-classification", "remote-sensing"], "description": "[RSE 2021] Crop mapping from image time series: deep learning with multi-scale label hierarchies"}
{"name": "bm-k/kosimcse_skt", "full_name": "BM-K/KoSimCSE-SKT", "topics": ["natural-language-processing", "sentence-embeddings", "sentence-similarity", "korean-simcse"], "description": "Simple Contrastive Learning of Korean Sentence Embeddings"}
{"name": "chnja/rdpnet", "full_name": "Chnja/RDPNet", "topics": ["remote-sensing", "change-detection", "deep-learning"], "description": "RDP-Net: Region Detail Preserving Network for Change Detection"}
{"name": "affromero/smile", "full_name": "affromero/SMILE", "topics": ["pytorch", "generative-adversarial-network", "face-manipulation", "deep-learning", "deep-fake"], "description": "SMILE: Semantically-guided Multi-attribute Image and Layout Editing, ICCV Workshops 2021."}
{"name": "mavenoid/prompt-hyperopt", "full_name": "Mavenoid/prompt-hyperopt", "topics": ["gpt-2", "gpt-3", "hyperparameter-optimization", "machine-learning", "natural-language-processing", "prompt-tuning", "template-engine"], "description": "Improve prompts for e.g. GPT3 and GPT-J using templates and hyperparameter optimization."}
{"name": "janosh/torch-mnf", "full_name": "janosh/torch-mnf", "topics": ["normalizing-flows", "generative-modeling", "pytorch"], "description": "Multiplicative Normalizing Flows in PyTorch."}
{"name": "fissoreg/relative-gradient-jacobian", "full_name": "fissoreg/relative-gradient-jacobian", "topics": ["deep-learning", "pytorch", "normalizing-flows", "relative-gradient"], "description": "Relative gradient optimization of the Jacobian term in unsupervised deep learning, NeurIPS 2020"}
{"name": "pubkey/fashion-segmentation", "full_name": "pubkey/fashion-segmentation", "topics": ["computer-vision", "deep-learning", "segmentation", "pix2pix", "pix2pix-tensorflow", "fashionai", "fashion", "fashion-mnist", "clothes-retrieval", "fashion-ai", "image-segmentation", "vision-for-fashion"], "description": "A tensorflow model for segmentation of fashion items out of multiple product images"}
{"name": "920232796/setr-pytorch", "full_name": "920232796/SETR-pytorch", "topics": ["setr", "transformer", "transformer-segmentation", "pytorch"], "description": "Implementation of SETR model, Original paper: Rethinking Semantic Segmentation from a Sequence-to-Sequence Perspective with Transformers."}
{"name": "ashok-arjun/zero-shot-sketch-based-image-retrieval", "full_name": "ashok-arjun/Zero-Shot-Sketch-Based-Image-Retrieval", "topics": ["pytorch", "deep-learning", "image-retrieval", "sketch-based-image-retrieval", "computer-vision", "zero-shot-learning", "machine-learning", "domain-adversarial", "gradient-reversal-layer"], "description": "Zero-shot sketch-based image retrieval using a domain adversarial neural network"}
{"name": "egeozsoy/4d-or", "full_name": "egeozsoy/4D-OR", "topics": ["3d", "4d", "deep-learning", "point-cloud", "scene-graph", "scene-graph-generation", "video"], "description": "Official code of the paper 4D-OR: Semantic Scene Graphs for OR Domain Modeling accepted at MICCAI 2022. This repo includes both the dataset and our code."}
{"name": "receiling/pspe", "full_name": "Receiling/PSPE", "topics": ["natural-language-processing", "information-extraction", "relation-extraction"], "description": "Pretrained Span and span Pair Encoder, code for \"Pre-training Entity Relation Encoder with Intra-span and Inter-spanInformation.\", EMNLP2020. It is based on our NERE toolkit (https://github.com/Receiling/NERE). "}
{"name": "fredzzhang/spatio-attentive-graphs", "full_name": "fredzzhang/spatially-conditioned-graphs", "topics": ["human-object-interaction", "pytorch", "graphical-models", "iccv2021"], "description": "Official PyTorch implementation for ICCV 2021 paper \"Spatially Conditioned Graphs for Detecting Human\u2013Object Interactions\""}
{"name": "jiminsun/pointer-generator", "full_name": "jiminsun/pointer-generator", "topics": ["summarization", "pytorch", "nlp", "seq2seq", "pointer-generator"], "description": "Pytorch implementation of the ACL paper 'Get To The Point: Summarization with Pointer-Generator Networks (See et al., 2017)', adapted to a Korean dataset"}
{"name": "kaixhin/ec", "full_name": "Kaixhin/EC", "topics": ["deep-learning", "deep-reinforcement-learning"], "description": "Episodic Control"}
{"name": "antoiloui/belgpt2", "full_name": "antoiloui/belgpt2", "topics": ["natural-language-processing", "gpt-2", "french-nlp", "language-model", "text-generation", "french", "transformers"], "description": "\ud83c\udde7\ud83c\uddea BelGPT-2: a GPT-2 model pre-trained on French corpora."}
{"name": "evanmy/sae", "full_name": "evanmy/sae", "topics": ["segmentation", "autoencoder", "mri", "pytorch", "deep-learning", "variational-autoencoder", "unsupervised", "brain"], "description": "Accepted in MIDL 2020"}
{"name": "archinetai/cqt-pytorch", "full_name": "archinetai/cqt-pytorch", "topics": ["audio", "cqt", "deep-learning", "pytorch"], "description": "An invertible and differentiable implementation of the Constant-Q Transform (CQT)."}
{"name": "jabb0/fastflow3d", "full_name": "Jabb0/FastFlow3D", "topics": ["point-cloud", "pytorch-lightning", "pytorch", "scene-flow"], "description": "Implementation of the FastFlow3D architecture for scene flow estimation from LiDAR point clouds in PyTorch using PyTorch Lightning."}
{"name": "yassinekdi/naimai", "full_name": "yassinekdi/naimai", "topics": ["literature-review", "nlp", "science"], "description": "Package to help with scientific literature research"}
{"name": "jarvis73/fptrans", "full_name": "Jarvis73/FPTrans", "topics": ["few-shot-segmentation", "pytorch", "transformer", "neurips-2022"], "description": "PyTorch and PaddlePaddle implementation of paper \"Feature-Proxy Transformer for Few-Shot Segmentation\" (NeurIPS 2022)"}
{"name": "kinredon/umt", "full_name": "kinredon/umt", "topics": [], "description": "A Pytorch Implementation of Unbiased Mean Teacher for Cross-domain Object Detection (CVPR 2021)"}
{"name": "dvl-tum/e-osvos", "full_name": "dvl-tum/e-osvos", "topics": ["pytorch", "video-object-segmentation", "meta-learning"], "description": "Implementation of \"Make One-Shot Video Object Segmentation Efficient Again\u201d and the semi-supervised fine-tuning \"e-OSVOS\" approach (NeurIPS 2020)."}
{"name": "aioxlabs/dvoice", "full_name": "AIOXLABS/DVoice", "topics": ["voice-recognition", "artificial-intelligence", "machine-learning", "nlp"], "description": "Dvoice est un outil de reconnaissance vocale pour les dialectes et les langues peu repr\u00e9sent\u00e9es."}
{"name": "nihaomiao/wacv23_tsnet", "full_name": "nihaomiao/WACV23_TSNet", "topics": ["deep-fake", "video-generation", "video-motion-retargeting", "motion-transfer", "talking-head"], "description": "The pytorch implementation of our WACV23 paper \"Cross-identity Video Motion Retargeting with Joint Transformation and Synthesis\"."}
{"name": "jt623/captcha", "full_name": "JT623/Captcha", "topics": ["captcha"], "description": "Captcha based on CNN using Pytorch.It has pretrain model and datasets"}
{"name": "hasangchun/transformer-transducer", "full_name": "upskyy/Transformer-Transducer", "topics": ["transformer-transducer", "rnnt", "transformer", "sequence-to-sequence", "end-to-end", "speech-recognition"], "description": "PyTorch implementation of \"Transformer Transducer: A Streamable Speech Recognition Model with Transformer Encoders and RNN-T Loss\" (ICASSP 2020)"}
{"name": "samsunglabs/semi-supervised-nfs", "full_name": "SamsungLabs/semi-supervised-NFs", "topics": ["semi-supervised-learning", "normalizing-flows", "deep-learning", "innf", "icml"], "description": "Code for the paper Semi-Conditional Normalizing Flows for Semi-Supervised Learning"}
{"name": "youtalk/iknet", "full_name": "youtalk/iknet", "topics": ["pytorch", "ros2", "robotis", "jetson-nano", "dynamixel", "neural-network"], "description": "Inverse kinematics estimation of ROBOTIS Open Manipulator X with neural networks"}
{"name": "icoz69/cec-cvpr2021", "full_name": "icoz69/CEC-CVPR2021", "topics": [], "description": "Pytorch code for CVPR2021 paper \"Few-Shot Incremental Learning with Continually Evolved Classifiers\""}
{"name": "givkashi/focal-unet", "full_name": "givkashi/Focal-Unet", "topics": ["image-segmentation", "medical", "medical-image-segmentation", "synapse", "transformer", "unet", "unet-image-segmentation"], "description": "Focal-Unet  https://givkashi.github.io/focal-unet/"}
{"name": "um-dsrg/super-resolution-meta-attention-networks", "full_name": "um-dsrg/Super-Resolution-Meta-Attention-Networks", "topics": ["super-resolution", "meta-attention", "pytorch", "python", "deep-learning", "image-restoration", "convolutional-neural-networks"], "description": "Open source single image super-resolution toolbox containing various functionality for training a diverse number of state-of-the-art  super-resolution models.  Also acts as the companion code for the IEEE signal processing letters paper titled 'Improving Super-Resolution Performance using Meta-Attention Layers\u2019."}
{"name": "wzzzd/lm_ner", "full_name": "wzzzd/lm_ner", "topics": [], "description": "\u57fa\u4e8ePytorch\u7684\u547d\u540d\u5b9e\u4f53\u8bc6\u522b\u6846\u67b6\uff0c\u652f\u6301LSTM+CRF\u3001Bert+CRF\u3001RoBerta+CRF\u7b49\u6846\u67b6"}
{"name": "seanywang0408/rasf", "full_name": "seanywang0408/RASF", "topics": ["iclr2022", "3d", "deep-learning"], "description": "[ICLR'22] Representation-Agnostic Shape Fields "}
{"name": "njunlp/knn-box", "full_name": "NJUNLP/knn-box", "topics": ["fairseq", "knn-mt", "pytorch"], "description": "an easy-to-use knn-mt toolkit"}
{"name": "mahmoodlab/fairy", "full_name": "mahmoodlab/SISH", "topics": ["pathology", "image-retrieval", "wsi-images", "histology", "image-search-engine", "histopathology", "mahmoodlab", "fish", "deep-learning", "vqvae", "bioimage-analysis", "bioimage-informatics"], "description": "Fast and scalable search of whole-slide images via self-supervised deep learning - Nature Biomedical Engineering"}
{"name": "seolhokim/distributedrl-pytorch-ray", "full_name": "seolhokim/DistributedRL-Pytorch-Ray", "topics": ["a3c", "pytorch", "ray", "distributedrl", "distributed", "dppo", "apex", "ape-x", "impala"], "description": "Distributed RL Implementation using Pytorch and Ray (ApeX(Ape-X), A3C, Distributed-PPO(DPPO), Impala)"}
{"name": "code-kern-ai/sequence-learn", "full_name": "code-kern-ai/sequence-learn", "topics": ["machine-learning", "named-entity-recognition", "natural-language-processing", "ner", "nlp", "python"], "description": "With sequence-learn, you can build models for named entity recognition as quickly as if you were building a sklearn classifier."}
{"name": "sevagh/xumx-slicq", "full_name": "sevagh/xumx-sliCQ", "topics": ["demixing", "source-separation", "music", "pytorch", "audio-processing", "cqt"], "description": "music demixing with the sliCQ Transform and PyTorch for the ISMIR 2021 MDX"}
{"name": "wangcongcong123/auto_coding", "full_name": "wangcongcong123/auto_coding", "topics": ["auto-code-generator", "generative-model", "gpt-2", "natural-language-processing", "python-programming"], "description": "A basic and simple tool for code auto completion"}
{"name": "hand10ryo/pytorchcml", "full_name": "hand10ryo/PyTorchCML", "topics": ["recommender-system", "machine-learning", "pytorch", "python", "collaborative-filtering", "metric-learning", "implicit-feedback"], "description": "PyTorchCML is a library of PyTorch implementations of matrix factorization (MF) and collaborative metric learning (CML), algorithms used in recommendation systems and data mining."}
{"name": "megvii-basedetection/lla", "full_name": "Megvii-BaseDetection/LLA", "topics": [], "description": "Official implementation of our paper \"LLA: Loss-aware Label Assignment for Dense Pedestrian Detection\" in Pytorch."}
{"name": "aryankargwal/cap-bot", "full_name": "aryankargwal/cap-bot", "topics": ["tensorflow", "flask", "opencv", "keras", "pandas", "numpy", "matplotlib", "html", "css", "js", "nodejs"], "description": "This is the Project by Team Missing Colon for the HackSRM3.0 2020."}
{"name": "billpwchan/deeptrust", "full_name": "billpwchan/DeepTrust", "topics": ["twitter", "stock-market", "refinitiv", "anomaly-detection", "information-retrieval", "reliability-assessment", "natural-language-processing", "imperial-college-london"], "description": "DeepTrust: A Reliable Financial Knowledge Retrieval Framework For Explaining Extreme Pricing Anomalies"}
{"name": "hairlab/pbsgd", "full_name": "HAIRLAB/pbSGD", "topics": ["deep-learning", "machine-learning", "optimization", "pytorch"], "description": "Powered Stochastic Gradient Descent Methods for AcceleratedNonconvex Optimization"}
{"name": "amirmohammadrostami/keywordsspotting-efficientnet-a0", "full_name": "AmirmohammadRostami/KeywordsSpotting-EfficientNet-A0", "topics": ["pytorch", "keyword-spotting", "footballkeyworddataset", "efficientnet", "absolute-zero", "real-time-systems", "football-analysis"], "description": "EfficientNet-Absolute Zero for Continuous Speech Keyword Spotting"}
{"name": "schmidtdominik/rainbow", "full_name": "schmidtdominik/Rainbow", "topics": ["reinforcement-learning", "machine-learning", "deep-learning"], "description": "Rainbow DQN implementation accompanying the paper \"Fast and Data-Efficient Training of Rainbow\" which reaches 205.7 median HNS after 10M frames. \ud83c\udf08"}
{"name": "qizhipei/smt-dta", "full_name": "QizhiPei/SMT-DTA", "topics": ["deep-learning", "drug-target-affinity", "drug-target-interaction", "drugdiscovery", "protein", "pytorch", "attention-mechanism", "fairseq", "multitask-learning", "semi-supervised-learning"], "description": "SMT-DTA: Improving Drug-Target Affinity Prediction with Semi-supervised Multi-task Training"}
{"name": "icon-lab/syndiff", "full_name": "icon-lab/SynDiff", "topics": ["deep-learning", "medical-imaging", "denoising-diffusion-models", "image-synthesis", "image-to-image-translation"], "description": "Official PyTorch implementation of SynDiff described in the paper (https://arxiv.org/abs/2207.08208)."}
{"name": "darrenzhang01/excon", "full_name": "DarrenZhang01/ExCon", "topics": ["deep-learning", "artificial-intelligence", "python", "representation-learning", "machine-learning-algorithms"], "description": "ExCon: Explanation-driven Supervised Contrastive Learning"}
{"name": "koziev/verslibre", "full_name": "Koziev/verslibre", "topics": ["poetry", "text-generation", "poetry-generator", "gpt", "neural-network", "russian-language"], "description": "Using transformers to generate Russian poetry"}
{"name": "amrelsersy/stereo-3d-detection", "full_name": "AmrElsersy/Stereo-3D-Detection", "topics": [], "description": "Stereo based 3D object detection on KITTI dataset using Pytorch implementing the Pseudo LIDAR pipeline with papers: AnyNet & PointPillars & SFA3D"}
{"name": "zipengxuc/ppe-pytorch", "full_name": "zipengxuc/PPE-Pytorch", "topics": [], "description": "Pytorch Implementation for CVPR'2022 paper \u2728 \"Predict, Prevent, and Evaluate: Disentangled Text-Driven Image Manipulation Empowered by Pre-Trained Vision-Language Model\""}
{"name": "cy-xu/cosmic-conn", "full_name": "cy-xu/cosmic-conn", "topics": ["astronomy-data-reduction", "cosmic-rays", "ccd-observation", "neural-networks", "classification", "deep-learning", "convolutional-neural-networks"], "description": "Cosmic-CoNN: A Cosmic Ray Detection Deep-Learning Framework, Dataset, and Toolkit"}
{"name": "qinyang79/decl", "full_name": "QinYang79/DECL", "topics": [], "description": "Deep Evidential Learning with Noisy Correspondence for Cross-modal Retrieval ( ACM Multimedia 2022, Pytorch Code)"}
{"name": "pvjosue/waveblocks", "full_name": "pvjosue/WaveBlocks", "topics": ["pytorch", "microscopy", "psf-engineering", "optimization-framework", "wave-optics", "calibration"], "description": "Optimization framework developed in Pytorch, allowing calibration, and joint optimization of optics and deep learning models."}
{"name": "timchen0618/pytorch-leo", "full_name": "timchen0618/pytorch-leo", "topics": ["meta-learning", "machine-learning", "pytorch-implementation", "python3", "leo"], "description": "Pytorch Implemtation of Meta-Learning with Latent Embedding Optimization"}
{"name": "thomasverelst/blockcopy-video-processing-pytorch", "full_name": "thomasverelst/blockcopy-video-processing-pytorch", "topics": ["pytorch", "semantic-segmentation", "deep-learning", "segmentation", "videoprocessing", "cuda"], "description": "BlockCopy (ICCV2021) implementation in PyTorch, accelerating neural networks with block-sparse execution"}
{"name": "aamini/chemprop", "full_name": "aamini/chemprop", "topics": ["drug-discovery", "uncertainty", "molecule", "evidential-deep-learning", "chemistry", "active-learning", "bayesian-optimization", "virtual-screening", "neural-network"], "description": "Fast and scalable uncertainty quantification for neural molecular property prediction, accelerated optimization, and guided virtual screening."}
{"name": "yistlin/universal-vocoder", "full_name": "yistLin/universal-vocoder", "topics": ["neural-vocoder", "vocoder", "torchscript", "pytorch"], "description": "A PyTorch implementation of the universal neural vocoder"}
{"name": "minions-kr/legal-document-summarization-competition", "full_name": "MINIONS-KR/Legal-Document-Summarization-Competition", "topics": ["nlp", "text-summarization", "2021-ai-online-competition"], "description": "The 1st Solution of Legal Document Summarization Competition"}
{"name": "lambert-x/video-semisup", "full_name": "lambert-x/video-semisup", "topics": ["action-recognition", "deep-learning", "pytorch"], "description": "Learning from Temporal Gradient for Semi-supervised Action Recognition (CVPR 2022)"}
{"name": "damo-di-ml/cikm22-tfad", "full_name": "DAMO-DI-ML/CIKM22-TFAD", "topics": ["anomaly-detection", "deep-learning", "machine-learning", "signal-processing", "time-series", "timeseries"], "description": "Source code of CIKM'22 paper: TFAD: A Decomposition Time Series Anomaly Detection Architecture with Frequency Analysis"}
{"name": "zianglong/lpcnet_pytorch", "full_name": "ZiangLong/LPCNet_pytorch", "topics": [], "description": "A Pytorch version of LPCNet, including dump weight"}
{"name": "erfaniaa/commit-type-detection", "full_name": "Erfaniaa/commit-type-detection", "topics": ["pytorch", "tf-idf", "deep-learning", "neural-network", "classification", "paper", "python"], "description": "Classify Git commits with deep learning"}
{"name": "the-learning-machines/sbr", "full_name": "The-Learning-Machines/SBR", "topics": ["session-based-recommendation", "attention", "recommender-systems", "graph-neural-networks"], "description": "PyTorch Implementation of Introducing Self-Attention to Target Attentive Graph Neural Networks (AISP '22)"}
{"name": "talkuhulk/realworld-stylegan2-encoder", "full_name": "TalkUHulk/realworld-stylegan2-encoder", "topics": ["openvino", "face-editing", "pytorch", "stylegan", "cartoonify", "art", "ukiyoe", "sketch"], "description": "Various applications based on Stylegan2 Style mixing that can be inference on cpu."}
{"name": "seongminp/transformers-into-vaes", "full_name": "seongminp/transformers-into-vaes", "topics": ["nlp", "transformers", "text-vae"], "description": "Code for \"Finetuning Pretrained Transformers into Variational Autoencoders\""}
{"name": "yule-buaa/dnntsp", "full_name": "yule-BUAA/DNNTSP", "topics": ["data-minig", "deep-learning", "temporal-sets-prediction", "temporal-data"], "description": "codes of DNNTSP model for Temporal Sets Prediction"}
{"name": "uic-liu-lab/cpt", "full_name": "UIC-Liu-Lab/CPT", "topics": ["continual-learning", "few-shot-learning", "language-modeling", "natural-language-processing", "post-training", "catastrophic-forgetting", "transformers", "nlp"], "description": "[EMNLP 2022] Continual Training of Language Models for Few-Shot Learning"}
{"name": "sithu31296/pytorch-onnx-tflite", "full_name": "sithu31296/PyTorch-ONNX-TFLite", "topics": ["onnx-tf", "tflite", "pytorch", "tflite-conversion"], "description": "Conversion of PyTorch Models into TFLite"}
{"name": "readme-generator/alreadyme-ai-research", "full_name": "readme-generator/alreadyme-ai-research", "topics": ["bloom", "codex", "copilot", "deep-learning", "few-shot-learning", "gpt-3", "huggingface", "huggingface-transformers", "language-model", "markdown", "natural-language-processing", "nlp", "pytorch", "readme-generator", "transformers", "black"], "description": "Generate README.md with GPT-3 few-shot learning"}
{"name": "vcl3d/panodr", "full_name": "VCL3D/PanoDR", "topics": ["structured3d", "diminished-reality", "image-inpainting", "image-to-image-translation", "generative-models", "layout-estimation", "spherical-panoramas", "360", "omnidirectional-vision", "empty-rooms", "augmented-reality", "pytorch", "cnn", "deep-learning"], "description": "Code and models for \"PanoDR: Spherical Panorama Diminished Reality for Indoor Scenes\" presented at the OmniCV workshop of CVPR21."}
{"name": "jiequancui/parametric-contrastive-learning", "full_name": "dvlab-research/Parametric-Contrastive-Learning", "topics": ["contrastive-learning", "long-tailed-recognition", "supervised-learning", "image-classification", "imagenet", "supervised-contrastive-learning", "parametric-contrastive-learning", "iccv2021", "class-imbalance", "imbalanced-data", "imbalanced-learning", "pytorch"], "description": "Parametric Contrastive Learning (ICCV2021)"}
{"name": "stephenfang51/image_classification_pytorch", "full_name": "Stephenfang51/image_classification_pytorch", "topics": [], "description": "Pytorch\u5b9e\u8df5\u7b80\u5355\uff0c \u65b9\u4fbf\uff0c \u5feb\u901f\u8bad\u7ec3 \u56fe\u50cf\u5206\u7c7b\u6a21\u578b"}
{"name": "galmetzer/dipole-normal-prop", "full_name": "galmetzer/dipole-normal-prop", "topics": ["point-cloud", "deep-learning", "pytorch"], "description": "Learning Normal Orientation For Point Clouds [SIGGRAPH 2021]"}
{"name": "jerrywei03/covid-q", "full_name": "JerryWei03/COVID-Q", "topics": ["nlp", "covid-19", "question-answering", "questions", "text-classification", "sentence-classification", "bert", "bert-embeddings", "svm", "svm-model", "knn-classification", "few-shot-learning", "triplet-loss"], "description": "COVID-19 Question Dataset from the paper \"What Are People Asking About COVID-19? A Question Classification Dataset\""}
{"name": "lz118/multi-interactive-dual-decoder", "full_name": "lz118/Multi-interactive-Dual-decoder", "topics": [], "description": "The pytorch implementation of Multi-interactive Siamese Decoder for RGBT Salient Object Detection"}
{"name": "foreverps/poer", "full_name": "ForeverPs/PoER", "topics": ["deep-learning", "energy", "out-of-distribution-generalization", "ranking-algorithm"], "description": "Potential energy ranking for domain generalization (DG)"}
{"name": "forgi86/dynonet", "full_name": "forgi86/dynonet", "topics": ["differentiable-transfer-functions", "linear-dynamical-operators", "pytorch", "deep-learning"], "description": "\"dynoNet: A neural network architecture for learning dynamical systems\" by Marco Forgione and Dario Piga"}
{"name": "mandubian/codenets", "full_name": "mandubian/codenets", "topics": ["deep-learning", "nlp", "programming-language", "huggingface", "transformer", "bert", "tokenizer", "ai"], "description": "My own playground for PLP (Programming Language Processing) using DeepLearning techniques"}
{"name": "project-monai/monai-deploy-app-sdk", "full_name": "Project-MONAI/monai-deploy-app-sdk", "topics": ["monai", "healthcare", "medical-imaging", "image-processing", "dicom", "deploy", "workflow", "pipeline", "ai", "ml", "deep-learning", "machine-learning", "model-deployment", "model-serving", "mlops", "ml-platform", "ml-infrastructure", "python", "pytorch"], "description": "MONAI Deploy App SDK offers a framework and associated tools to design, develop and verify AI-driven applications in the healthcare imaging domain."}
{"name": "szq0214/cmc_with_image_mixture", "full_name": "szq0214/CMC_with_Image_Mixture", "topics": [], "description": "pytorch implementation of \"Contrastive Multiview Coding\", \"Momentum Contrast for Unsupervised Visual Representation Learning\", and \"Unsupervised Feature Learning via Non-Parametric Instance-level Discrimination\""}
{"name": "aehrc/cvt2distilgpt2", "full_name": "aehrc/cvt2distilgpt2", "topics": ["image-captioning", "chest-xray-imaging", "mimic-cxr", "gpt-2", "vision-transformer", "multimodal", "pytorch", "pytorch-lightning", "multimodal-deep-learning", "medical-image-analysis", "distilgpt2", "huggingface-transformers"], "description": "Improving Chest X-Ray Report Generation by Leveraging Warm-Starting"}
{"name": "liqian-xc/sctour", "full_name": "LiQian-XC/sctour", "topics": ["deep-learning", "inference", "latent-space", "prediction", "pseudotime-estimation", "single-cell-analysis", "vector-field", "cell-trajectory"], "description": "A deep learning architecture for robust inference and accurate prediction of cellular dynamics"}
{"name": "ajhamdi/mvtorch", "full_name": "ajhamdi/mvtorch", "topics": ["pytorch", "pytorch3d", "deep", "learning", "multi-view", "multi-view-learning", "3d", "3d-deep-learning", "multi-view-geometry", "nerf"], "description": "a Pytorch library for multi-view 3D understanding and generation"}
{"name": "ziweiwangthu/isl", "full_name": "ZiweiWangTHU/ISL", "topics": [], "description": "This is the official pytorch implementation for the paper: Instance Similarity Learning for Unsupervised Feature Representation."}
{"name": "rizavelioglu/challenge-aido_rl-il", "full_name": "rizavelioglu/challenge-aido_RL-IL", "topics": ["reinforcement-learning", "self-driving-cars", "imitation-learning", "pytorch", "keras", "tensorflow", "supervised-learning", "behavioral-cloning"], "description": "Reinforcement Learning + Imitation Learning based approach to AI Driving Olympics"}
{"name": "mianzhang/dialogue_gcn", "full_name": "mianzhang/dialogue_gcn", "topics": [], "description": "Pytorch implementation to paper \"DialogueGCN: A Graph Convolutional Neural Network for Emotion Recognition in Conversation\". "}
{"name": "vita-epfl/detection-attributes-fields", "full_name": "vita-epfl/detection-attributes-fields", "topics": ["computer-vision", "deep-learning", "machine-learning", "multi-task-learning", "object-detection", "attribute-recognition", "autonomous-vehicles", "jaad", "pedestrian-behavior", "road-crossing"], "description": "PyTorch implementation of \"Detecting 32 Pedestrian Attributes for Autonomous Vehicles\""}
{"name": "jwoo5/fairseq-signals", "full_name": "Jwoo5/fairseq-signals", "topics": ["python", "pytorch", "fairseq", "ecg", "ekg"], "description": "A collection of deep learning models for ECG data processing based on fairseq framework"}
{"name": "junqiangchen/pytorchdeeplearing", "full_name": "junqiangchen/PytorchDeepLearing", "topics": ["classification-model", "pytorch-implementation", "segmentation-models", "unet-image-segmentation", "vnet3d"], "description": "Meidcal Image Segmentation Pytorch Version"}
{"name": "walsvid/generation3d", "full_name": "walsvid/Generation3D", "topics": ["3d-reconstruction", "deep-learning", "shape-generation", "3d-deep-learning", "disn", "pixel2mesh"], "description": " 3D Shape Generation Baselines in PyTorch."}
{"name": "eazydammy/violence-detection-with-c3d", "full_name": "eazydammy/violence-detection-with-C3D", "topics": ["c3d", "convolutional-neural-networks", "classification", "deep-learning", "computer-vision", "edge-computing", "intel", "violence-detection"], "description": "Violence Detection using 3D Convolutional Neural Networks"}
{"name": "scheckmedia/centernet-uda", "full_name": "scheckmedia/centernet-uda", "topics": ["centernet", "pytorch", "image-processing", "cnn", "neural-network", "unsupervised-domain-adaptation", "uda"], "description": "This repository holds a small framework to evaluate unsupervised domain adaptation methods in combination with a CenterNet object detection network."}
{"name": "yura52/zero", "full_name": "Yura52/delu", "topics": ["python", "pytorch", "deep-learning", "artificial-intelligence", "neural-networks", "machine-learning", "ai"], "description": "Deep Learning Utilities for PyTorch users (old name: Zero)"}
{"name": "cupidjay/scaled-down-self-supervised-learning", "full_name": "CupidJay/Scaled-down-self-supervised-learning", "topics": [], "description": "official pytorch implementation of Rethining Self-supervised Learning: Small is Beautiful."}
{"name": "clabrugere/pytorch-scarf", "full_name": "clabrugere/pytorch-scarf", "topics": [], "description": "Implementation of SCARF: Self-Supervised Contrastive Learning using Random Feature Corruption in Pytorch, a model learning a representation of tabular data using contrastive learning. It is inspired from SimCLR and uses a similar architecture and loss."}
{"name": "lucidrains/phasic-policy-gradient", "full_name": "lucidrains/phasic-policy-gradient", "topics": ["artificial-intelligence", "reinforcement-learning", "proximal-policy-optimization"], "description": "An implementation of Phasic Policy Gradient, a proposed improvement of Proximal Policy Gradients, in Pytorch"}
{"name": "zinengtang/decembert", "full_name": "zinengtang/DeCEMBERT", "topics": ["video", "video-language", "video-language-understanding", "vision-language"], "description": "Pytorch version of DeCEMBERT: Learning from Noisy Instructional Videos via Dense Captions and Entropy Minimization (NAACL 2021)"}
{"name": "ffiirree/cv-models", "full_name": "ffiirree/cv-models", "topics": ["imageclassification", "models", "pytorch", "resnet", "efficientnet", "mobilenet", "shufflenet"], "description": "Models for Computer Vision"}
{"name": "qs956/latex_ocr_pytorch", "full_name": "qs956/Latex_OCR_Pytorch", "topics": [], "description": "\u57fa\u4e8ePytorch\u5b9e\u73b0\u7684End-to-End\u56fe\u50cfLatex\u516c\u5f0f\u8bc6\u522b inspire by LinXueyuanStdio/LaTeX_OCR_PRO"}
{"name": "sarsbug/smp", "full_name": "sarsbug/SMP", "topics": [], "description": "Pytorch implementation for Deep Self-Learning From Noisy Labels"}
{"name": "akshaygadipatil/layoutgmn-pytorch", "full_name": "akshaygadipatil/LayoutGMN-pytorch", "topics": ["pytorch", "graph-matching", "layouts", "floorplans"], "description": "Pytorch implementation of LayoutGMN. "}
{"name": "mabaorui/neuralpull-pytorch", "full_name": "mabaorui/NeuralPull-Pytorch", "topics": ["3d-reconstruction", "deep-learning", "icml", "point-cloud", "pytorch"], "description": "Implementation of ICML'2021:Neural-Pull: Learning Signed Distance Functions from Point Clouds by Learning to Pull Space onto Surfaces"}
{"name": "z-mahmud22/msgazenet", "full_name": "z-mahmud22/MSGazeNet", "topics": ["deep-learning", "eye-segmentation", "gaze-estimation", "domain-randomization", "transfer-learning", "eye-region-isolation", "multistream-network", "unet-image-segmentation", "pytorch"], "description": "This is the official implementation of our work entitled \"Multistream Gaze Estimation with Anatomical Eye Region Isolation by Synthetic to Real Transfer Learning\" (Currently under review)"}
{"name": "vinesmsuic/white-box-cartoonization-pytorch", "full_name": "vinesmsuic/White-box-Cartoonization-PyTorch", "topics": ["pytorch", "deep-learning", "artificial-intelligence"], "description": "PyTorch implementation of \u201cLearning to Cartoonize Using White-box Cartoon Representations\u201d (CVPR 2020). Now with gradio demo"}
{"name": "ratishsp/data2text-macro-plan-py", "full_name": "ratishsp/data2text-macro-plan-py", "topics": ["data-to-text-generation", "deep-learning", "natural-language-generation"], "description": "Code for TACL 2021 paper on Data-to-text Generation with Macro Planning"}
{"name": "yingtongdou/gcnn", "full_name": "YingtongDou/GCNN", "topics": ["fakenews", "gnn", "pytorch", "fraud-detection", "anomaly-detection"], "description": "The Pytorch Implementation of GCNN model from paper Fake News Detection on Social Media using Geometric Deep Learning"}
{"name": "nayeemrizve/invariance-equivariance", "full_name": "nayeemrizve/invariance-equivariance", "topics": ["few-shot-learning", "equivariant-representations", "invariant-features", "meta-learning", "metric-learning", "pytorch", "deep-learning", "transfer-learning", "representation-learning"], "description": "\"Exploring Complementary Strengths of Invariant and Equivariant Representations for Few-Shot Learning\" by Mamshad Nayeem Rizve, Salman Khan, Fahad Shahbaz Khan, Mubarak Shah (CVPR 2021)"}
{"name": "akash2907/pi-consistency-activity-detection", "full_name": "AKASH2907/pi-consistency-activity-detection", "topics": ["deep-learning", "activity-detection", "semi-supervised-learning", "consistency-regularization", "cvpr2022", "cvpr", "video-understanding"], "description": "End-to-End Semi-Supervised Learning for Video Action Detection [CVPR 2022]"}
{"name": "jintao-huang/efficientdet_pytorch", "full_name": "Jintao-Huang/EfficientDet_PyTorch", "topics": ["efficientdet", "pytorch", "object-detection"], "description": "EfficientDet_PyTorch \u76ee\u6807\u68c0\u6d4b(Object Detection)"}
{"name": "mlforhealth/s2sd", "full_name": "MLforHealth/S2SD", "topics": ["deep-metric-learning", "metric-learning", "deep-learning", "pytorch", "cub200-2011", "cars196", "stanford-online-products", "image-retrieval", "zero-shot-learning"], "description": "(ICML 2021) Implementation for S2SD - Simultaneous Similarity-based Self-Distillation for Deep Metric Learning. Paper Link: https://arxiv.org/abs/2009.08348"}
{"name": "voithru/voice-activity-detection", "full_name": "voithru/voice-activity-detection", "topics": ["voice-activity-detection", "vad"], "description": "Pytorch implementation of SELF-ATTENTIVE VAD, ICASSP 2021"}
{"name": "ciscodevnet/g2p_seq2seq_pytorch", "full_name": "CiscoDevNet/g2p_seq2seq_pytorch", "topics": ["g2p", "g2p-seq2seq", "pytorch", "asr", "grapheme-to-phoneme", "transformer", "transformer-architecture"], "description": "Grapheme to phoneme model for PyTorch"}
{"name": "920232796/bert_seq2seq_ddp", "full_name": "920232796/bert_seq2seq_DDP", "topics": ["bert", "transformer", "ddp", "gpt2", "roberta", "t5", "nezha", "data-parallel", "pytorch"], "description": "bert_seq2seq\u7684DDP\u7248\u672c\uff0c\u652f\u6301bert\u3001roberta\u3001nezha\u3001t5\u3001gpt2\u7b49\u6a21\u578b\uff0c\u652f\u6301seq2seq\u3001ner\u3001\u5173\u7cfb\u62bd\u53d6\u7b49\u4efb\u52a1\uff0c\u65e0\u9700\u6dfb\u52a0\u989d\u5916\u4ee3\u7801\uff0c\u8f7b\u677e\u542f\u52a8DDP\u591a\u5361\u8bad\u7ec3\u3002"}
{"name": "changlee0903/seril", "full_name": "ChangLee0903/SERIL", "topics": [], "description": "Official Implementation of SERIL in Pytorch"}
{"name": "ggjy/cmt.pytorch", "full_name": "ggjy/CMT.pytorch", "topics": [], "description": "CMT Pytorch implementation of our CVPR 2022 paper CMT: Convolutional Neural Networks Meet Vision Transformers (https://arxiv.org/pdf/2107.06263.pdf)."}
{"name": "angelwmab/time-flies", "full_name": "angelwmab/Time-Flies", "topics": ["pytorch", "style-transfer", "cvpr2020"], "description": "Time Flies: Animating a Still Image with Time-Lapse Video as Reference, CVPR2020"}
{"name": "jokieleung/ntrd", "full_name": "jokieleung/NTRD", "topics": ["dialogue-system", "conversational-recommendation", "recommender-system", "pytorch"], "description": "the Pytorch implementation for our EMNLP 2021 paper \"Learning Neural Templates for Recommender Dialogue System\""}
{"name": "bubbliiiing/arcface-pytorch", "full_name": "bubbliiiing/arcface-pytorch", "topics": [], "description": "\u8fd9\u662f\u4e00\u4e2aarcface-pytorch\u7684\u6e90\u7801\uff0c\u53ef\u4ee5\u7528\u4e8e\u8bad\u7ec3\u81ea\u5df1\u7684\u6a21\u578b\u3002"}
{"name": "deligentfool/dqn_zoo", "full_name": "deligentfool/dqn_zoo", "topics": ["dqn", "ddqn", "dueling-dqn", "prioritized-dqn", "noisy-dqn", "categorical-dqn", "n-step-dqn", "rainbow-dqn", "pytorch", "qr-dqn", "iqn", "fqf", "distributional-dqn", "mmddqn", "soft-q-learning"], "description": "The implement of all kinds of dqn reinforcement learning with Pytorch"}
{"name": "ignf/lidar-deep-segmentation", "full_name": "IGNF/myria3d", "topics": ["pytorch", "deep-learning", "semantic-segmentation", "randla-net", "pointnet", "lidar-point-cloud", "geodata"], "description": "Semantic segmentation deep learning for aerial, high density Lidar point clouds."}
{"name": "avivga/zerodim", "full_name": "avivga/zerodim", "topics": ["pytorch", "neurips", "disentanglement", "image-manipulation", "face-manipulation", "generative-models", "stylegan", "stylegan2"], "description": "Official pytorch implementation of \"An Image is Worth More Than a Thousand Words: Towards Disentanglement in the Wild\", NeurIPS 2021."}
{"name": "guopengf/reconformer", "full_name": "guopengf/ReconFormer", "topics": ["mri-reconstruction", "transformer", "pytorch", "deep-learning"], "description": "ReconFormer: Accelerated MRI Reconstruction Using Recurrent Transformer"}
{"name": "e-tony/story_generator", "full_name": "e-tornike/Story_Generator", "topics": ["machine-learning", "natural-language-processing", "streamlit", "huggingface-transformers", "gpt2"], "description": "A Streamlit web app that generates Rick and Morty stories using GPT2."}
{"name": "k-h-ismail/dilated-convolution-with-learnable-spacings-pytorch", "full_name": "K-H-Ismail/Dilated-Convolution-with-Learnable-Spacings-PyTorch", "topics": ["pytorch"], "description": "[ICLR 2023] \"Dilated convolution with learnable spacings\" Ismail Khalfaoui Hassani, Thomas Pellegrini and Timoth\u00e9e Masquelier"}
{"name": "jjccero/pbrl", "full_name": "jjccero/pbrl", "topics": ["reinforcement-learning", "population-based-training", "dqn", "ppo", "pytorch"], "description": "A Population Based Reinforcement Learning Library based on PyTorch"}
{"name": "guhuozhengling/deepsort_yolov4", "full_name": "guhuozhengling/deepsort_yolov4", "topics": ["deepsort", "pytorch", "yolov4"], "description": null}
{"name": "itailang/geometric_adv", "full_name": "itailang/geometric_adv", "topics": ["point-cloud", "adversarial-attacks", "defense-methods", "autoencoder-model", "geometry-processing", "tensorflow", "pytorch", "3dv2021"], "description": "Geometric Adversarial Attacks and Defenses on 3D Point Clouds (3DV 2021)"}
{"name": "sforaidl/playground", "full_name": "SforAiDl/Playground", "topics": ["python", "machine-learning", "deep-learning", "computer-vision", "pytorch", "sports-analytics"], "description": "A python library consisting of pipelines for visual analysis of different sports using Computer Vision and Deep Learning."}
{"name": "rui-qian/badet", "full_name": "rui-qian/BADet", "topics": ["autonomous-driving", "object-detection", "point-cloud", "deep-learning"], "description": "Rui Qian, Xin Lai, Xirong Li: BADet: Boundary-Aware 3D Object Detection from Point Clouds (Pattern Recognition 2022: IF=8.518)"}
{"name": "mb-29/optimal-textures", "full_name": "MB-29/optimal-textures", "topics": ["texture", "deep", "generation", "style", "transfer", "torch", "pytorch", "image", "computer", "vision", "vgg", "autoencoder", "encoder", "decoder", "texture-synthesis", "deep-learning", "vgg19", "style-transfer", "pytorch-implementation"], "description": "Optimal deep texture generation and style transfer based on Eric Risser's paper"}
{"name": "dylan-slack/modeling-uncertainty-local-explainability", "full_name": "dylan-slack/Modeling-Uncertainty-Local-Explainability", "topics": ["deep-learning", "explainability", "explainable-ai", "explanation", "lime", "machine-learning", "neural-network", "neurips-2021", "shap", "uncertainty", "uncertainty-quantification"], "description": "Local explanations with uncertainty \ud83d\udc90! "}
{"name": "menghuanlater/tianchi2020chinesemedicinequestiongeneration", "full_name": "menghuanlater/Tianchi2020ChineseMedicineQuestionGeneration", "topics": ["pytorch", "roberta", "bert", "question-generation", "transformer-xl", "sequence-to-sequence"], "description": "2020 \u963f\u91cc\u4e91\u5929\u6c60\u5927\u6570\u636e\u7ade\u8d5b-\u4e2d\u533b\u836f\u6587\u732e\u95ee\u9898\u751f\u6210\u6311\u6218\u8d5b"}
{"name": "scart97/thunder-speech", "full_name": "scart97/thunder-speech", "topics": ["pytorch", "audio", "speech-recognition", "deep-learning", "python", "speech"], "description": "A Hackable speech recognition library."}
{"name": "si-cim/prototorch", "full_name": "si-cim/prototorch", "topics": ["pytorch", "machine-learning", "python", "lvq", "interpretable-ai"], "description": "ProtoTorch is a PyTorch-based Python toolbox for bleeding-edge research in prototype-based machine learning algorithms. "}
{"name": "loretoparisi/wave2vec-recognize-docker", "full_name": "loretoparisi/wave2vec-recognize-docker", "topics": ["wav2vec", "docker", "asr", "automatic-speech-recognition", "pytorch", "wav2letter", "kenlm"], "description": "Wave2vec 2.0 Recognize pipeline"}
{"name": "nlesc-jcer/qmctorch", "full_name": "NLESC-JCER/QMCTorch", "topics": [], "description": "Pytorch Implementation of Real Space Quantum Monte Carlo Simulations of Molecular Systems"}
{"name": "edisonleeeee/graphwar", "full_name": "EdisonLeeeee/GreatX", "topics": ["adversarial-attacks", "graph-convolutional-networks", "graph-neural-networks", "pytorch", "graph-reliability-toolbox", "distribution-shift", "inherent-noise", "pytorch-geometric"], "description": "A graph reliability toolbox based on PyTorch and PyTorch Geometric (PyG)."}
{"name": "vita-group/audio-lottery", "full_name": "VITA-Group/Audio-Lottery", "topics": ["pytorch", "neural-network-compression", "lottery-ticket-hypothesis", "speech-recognition", "ctc", "conformer"], "description": "[ICLR 2022] \"Audio Lottery: Speech Recognition Made Ultra-Lightweight, Noise-Robust, and Transferable\", by Shaojin Ding, Tianlong Chen, Zhangyang Wang"}
{"name": "pranavphoenix/cxv", "full_name": "pranavphoenix/CXV", "topics": ["deep-learning", "image-classification", "transformer", "attention-mechanism", "linear", "attention", "convolutional-neural-networks", "vision"], "description": "Convolutional Xformers for Vision"}
{"name": "galoisinc/dlkoopman", "full_name": "GaloisInc/dlkoopman", "topics": ["autoencoder", "koopman", "deep-learning", "dynamical-systems"], "description": "A general-purpose Python package for Koopman theory using deep learning."}
{"name": "ai-forever/ocr-model", "full_name": "ai-forever/OCR-model", "topics": ["crnn", "ocr", "pytorch", "text-recognition"], "description": "An easy-to-run OCR model pipeline based on CRNN and CTC loss"}
{"name": "ayaka14732/bart-base-jax", "full_name": "ayaka14732/bart-base-jax", "topics": ["natural-language-processing", "nlp", "nlp-model", "bart", "jax"], "description": "JAX implementation of the bart-base model"}
{"name": "salesforce/taichi", "full_name": "salesforce/TaiChi", "topics": ["few-shot-learning", "nlp", "nli", "intent-classification", "multilingual", "conversational-ai"], "description": "Open source library for few shot NLP"}
{"name": "laitathei/yolov7-pytorch-segmentation", "full_name": "laitathei/YOLOv7-Pytorch-Segmentation", "topics": ["yolov5", "yolov7-segmentation", "pytorch", "realsense-camera", "ros"], "description": "YOLOv7 segmentation pytorch implementation guide"}
{"name": "itchyhiker/iris_landmarks_pytorch", "full_name": "digital-nomad-cheng/Iris_Landmarks_PyTorch", "topics": ["iris-dataset", "iris-recognition", "iris-landmarks", "computer-vision", "deep-learning", "ncnn"], "description": "Iris landmarks localization"}
{"name": "mayurji/social-distancing-using-deep-learning-and-opencv", "full_name": "Mayurji/Social-DIstancing-Using-Deep-Learning-and-OpenCV", "topics": ["social-distancing-detection", "python", "yolov3", "deep-learning", "opencv", "covid-19"], "description": "Considering the unfortunate circumstances due to COVID-19 keeping distance from one person to another is crucial."}
{"name": "qitianwu/fate", "full_name": "qitianwu/FATE", "topics": ["graph-neural-networks", "out-of-distribution-generalization", "pytorch", "tabular-data"], "description": "Codes and datasets for NeurIPS21 paper \u201cTowards Open-World Feature Extrapolation: An Inductive Graph Learning Approach\u201d"}
{"name": "acmi-lab/pu_learning", "full_name": "acmi-lab/PU_learning", "topics": ["pu-learning", "deep-learning", "pytorch", "machine-learning", "domain-adaptation", "unsupervised-learning"], "description": "Code and results accompanying our paper titled Mixture Proportion Estimation and PU Learning: A Modern Approach at Neurips 2021 (Spotlight) "}
{"name": "dsgoficial/pytorch_segmentation_models_trainer", "full_name": "dsgoficial/pytorch_segmentation_models_trainer", "topics": ["semantic-segmentation", "pytorch", "pytorch-lightning", "hydra"], "description": "Framework to train semantic segmentation models on Pytorch using yaml config files"}
{"name": "zyx423/gae_vgae", "full_name": "zyx423/Graph-Embeddding", "topics": ["gae", "graphembedding", "graph-neural-networks"], "description": "Reimplementation of Graph Embedding methods by Pytorch. "}
{"name": "0aqz0/neural-retargeting", "full_name": "0aqz0/neural-retargeting", "topics": ["robotics", "motion-retargeting", "deep-learning"], "description": "Code for the paper \"Kinematic Motion Retargeting via Neural Latent Optimization for Learning Sign Language\", RAL with ICRA 2022"}
{"name": "aia39/sort-multiple-car-tracking-using-yolov5", "full_name": "aia39/SORT-Multiple-Car-Tracking-using-YOLOv5", "topics": ["python", "video", "tracking", "pytorch", "yolov5", "fisheye-camera", "cardetection"], "description": "This is a Multi object tracker. Mainly it was build for tracking car movement in a junction."}
{"name": "tufts-ml/gan-ensemble-for-anomaly-detection", "full_name": "tufts-ml/GAN-Ensemble-for-Anomaly-Detection", "topics": ["anomaly-detection", "generative-adversarial-network", "ensemble-learning"], "description": "This repository is the PyTorch implementation of GAN Ensemble for Anomaly Detection."}
{"name": "hugochan/graph2seq-for-kgqg", "full_name": "hugochan/Graph2Seq-for-KGQG", "topics": ["question-generation", "text-generation", "knowledge-graphs", "graph2seq", "graph-neural-networks", "deep-learning", "pytorch"], "description": "Code & data accompanying the paper \"Toward Subgraph Guided Knowledge Graph Question Generation with Graph Neural Networks\""}
{"name": "maastrichtlawtech/bsard", "full_name": "maastrichtlawtech/bsard", "topics": ["nlp", "information-retrieval", "legaltech", "dataset"], "description": "\u2696\ufe0f A Statutory Article Retrieval Dataset in French. (ACL 2022)"}
{"name": "liangheming/retinanetv1", "full_name": "liangheming/retinanetv1", "topics": [], "description": "pytorch implement of retinanet,37.4 mAp(coco) at 640px(max side) ,44.24fps(RTX2080TI)"}
{"name": "msadat3/scinli", "full_name": "msadat3/SciNLI", "topics": ["dataset", "natural-language-inference", "natural-language-processing", "nli", "scientific-nli"], "description": "The dataset and code for ACL 2022 paper \"SciNLI: A Corpus for Natural Language Inference on Scientific Text\" are released here."}
{"name": "rehg-lab/lowshot-shapebias", "full_name": "rehg-lab/lowshot-shapebias", "topics": ["deep-learning", "point-cloud", "pytorch-implementation", "pytorch", "low-shot", "few-shot-learning", "few-shot", "3d", "convolutional-neural-networks", "computer-vision", "3d-vision"], "description": "Learning low-shot object classification with explicit shape bias learned from point clouds"}
{"name": "pangkun248/faster-rcnn-pytorch", "full_name": "pangkun248/Faster-RCNN-PyTorch", "topics": [], "description": "chenyuntc/simple-faster-rcnn-pytorch \u6ce8\u91ca\u7b80\u5316\u7248"}
{"name": "kaanakan/stretchbev", "full_name": "kaanakan/stretchbev", "topics": ["autonomous-driving", "autonomous-vehicles", "deep-learning", "eccv2022", "future-prediction", "generative-models", "instance-segmentation", "latent-variable-models", "pytorch", "segmentation", "state-space-models", "stochastic", "vae"], "description": "Official implementation of our ECCV paper \"StretchBEV: Stretching Future Instance Prediction Spatially and Temporally\""}
{"name": "lucidrains/esbn-pytorch", "full_name": "lucidrains/ESBN-pytorch", "topics": ["artificial-intelligence", "deep-learning", "memory", "neuro-symbolic-learning", "abstract-reasoning"], "description": "Usable implementation of Emerging Symbol Binding Network (ESBN), in Pytorch"}
{"name": "chrislemke/deep-martin", "full_name": "chrislemke/deep-martin", "topics": ["python", "pytorch", "deep-learning", "nlp", "text-simplification", "huggingface", "transformers"], "description": "Text simplification for a better world: Deep-Martin Transformer \ud83e\udd17"}
{"name": "alibaba-miil/zs_sdl", "full_name": "Alibaba-MIIL/ZS_SDL", "topics": ["multi-label-classification", "zero-shot-learning", "image-text-search"], "description": "Official Pytorch Implementation of: \"Semantic Diversity Learning for Zero-Shot Multi-label Classification\"(ICCV, 2021) paper"}
{"name": "chiahsuan156/dst-as-prompting", "full_name": "chiahsuan156/DST-as-Prompting", "topics": ["dialogue", "dialogue-state-tracking", "natural-language-processing", "prompt-tuning", "prompting", "schema", "seq2seq", "t5", "task-oriented-dialogue"], "description": "Source code for Dialogue State Tracking with a Language Modelusing Schema-Driven Prompting"}
{"name": "bupt-ai-cz/hsa-nrl", "full_name": "bupt-ai-cz/HSA-NRL", "topics": ["deep-learning", "image-classification", "pytorch-implementation", "label-noise", "histopathology-images"], "description": "Hard Sample Aware Noise Robust Learning forHistopathology Image Classification"}
{"name": "xuyunqiu/h2fa_r-cnn", "full_name": "XuYunqiu/H2FA_R-CNN", "topics": ["detectron2", "domain-adaptation-object-detection", "object-detection", "paddledetection", "weakly-supervised-object-detection", "domain-adaptation", "paddlepaddle", "pytorch", "cvpr", "cvpr2022"], "description": "H2FA R-CNN: Holistic and Hierarchical Feature Alignment for Cross-domain Weakly Supervised Object Detection, in CVPR 2022"}
{"name": "him4318/transformer_ocr", "full_name": "him4318/Transformer-ocr", "topics": ["handwritten-text-recognition", "transformer", "google-colab", "ocr-recognition", "deep-learning", "bentham", "pytorch", "detr", "iam", "python", "ocr", "nlp", "htr"], "description": "Handwritten text recognition using transformers."}
{"name": "tanh-wink/ncpqa", "full_name": "Tanh-wink/NCPQA", "topics": ["qa", "pytorch", "datafountain", "epidemic-data", "question-answering"], "description": "Datafountain-Epidemic government affairs quiz assistant competition. We divided this task into two parts: document retrieval and answer extraction. pytorch, Albert, and model fuision"}
{"name": "wuaalb/pytorch_template_audio", "full_name": "wuaalb/pytorch_template_audio", "topics": [], "description": "Basic Pytorch template for audio projects"}
{"name": "zaccharieramzi/tfkbnufft", "full_name": "zaccharieramzi/tfkbnufft", "topics": ["tensorflow", "non-uniform-fourier", "mri", "nfft", "nufft"], "description": "A robust, easy-to-deploy non-uniform Fast Fourier Transform in TensorFlow."}
{"name": "engineeringsoftware/roosterize", "full_name": "EngineeringSoftware/roosterize", "topics": ["coq", "machine-learning", "name-generation", "pytorch", "neural-networks", "serapi", "mathcomp", "deep-learning"], "description": "Tool for suggesting lemma names in Coq verification projects"}
{"name": "dschinagl/occam", "full_name": "dschinagl/occam", "topics": ["3d-object-detection", "autonomous-driving", "explainable-ai", "lidar", "point-cloud", "pytorch", "saliency-map"], "description": "Demo code for the paper: OccAM's Laser"}
{"name": "gaurav104/wss-cmer", "full_name": "gaurav104/WSS-CMER", "topics": ["weakly-supervised-learning", "weakly-supervised-segmentation", "class-activation-map", "class-activation-maps", "grad-cam", "grad-cam-visualization", "self-learning", "multi-modal-learning", "multi-modal-imaging", "transformation-equivariance", "deep-learning", "medical-imaging", "brats", "brats2019"], "description": "Code for the paper : \"Weakly supervised segmentation with cross-modality equivariant constraints\", available at https://arxiv.org/pdf/2104.02488.pdf"}
{"name": "ntt123/pax", "full_name": "NTT123/pax", "topics": ["pytree", "deep-learning", "jax", "opax"], "description": "A stateful pytree library for training neural networks."}
{"name": "tlc121/fsfont", "full_name": "tlc121/FsFont", "topics": ["cvpr2022", "deep-learning", "few-shot-learning", "font-generation", "generative-model", "paddlepaddle", "fsfont"], "description": "Official PaddlePaddle Implementation of Few-Shot Font Generation by Learning Fine-Grained Local Styles (FsFont)"}
{"name": "torresflo/tag-machine", "full_name": "torresflo/Tag-Machine", "topics": ["python", "pytorch", "pytorch-transformers", "pretrained-models", "machine-learning", "computer-vision", "image-classification", "image-tagging", "image-tagger", "auto-tagging", "image-to-text", "photo-tag", "photo-tagging"], "description": "A little Python application to auto tag your photos with the power of machine learning."}
{"name": "guoshnbjtu/astgnn", "full_name": "guoshnBJTU/ASTGNN", "topics": ["pytorch"], "description": "This is a Pytorch implementation of ASTGNN. Now the corresponding paper is available online at https://ieeexplore.ieee.org/document/9346058."}
{"name": "bobo0810/classification", "full_name": "bobo0810/Classification", "topics": ["pytorch", "classification", "metric-learning", "colossal-ai", "face-recognition", "mnn"], "description": "\u89c6\u89c9\u8bad\u7ec3\u6846\u67b6(\u7b80\u5355 / \u6a21\u5757\u5316 / \u9ad8\u6269\u5c55 / \u5206\u5e03\u5f0f / \u81ea\u52a8\u526a\u679d)"}
{"name": "sagnik1511/fractional-gabor-convolutional-network", "full_name": "sagnik1511/Fractional-Gabor-Convolutional-Network", "topics": [], "description": "Pytorch Implementation of FGCN"}
{"name": "mkfmiku/vidm", "full_name": "MKFMIKU/vidm", "topics": ["diffusion-models", "generative-models", "pytorch"], "description": "[AAAI23 Oral] Official implementations of Video Implicit Diffusion Models"}
{"name": "ricardop0/speech2dcnn_lstm", "full_name": "RicardoP0/Speech2dCNN_LSTM", "topics": [], "description": "A pytorch implementation of Speech emotion recognition using deep 1D & 2D CNN LSTM networks"}
{"name": "finn-no/recsys-slates-dataset", "full_name": "finn-no/recsys_slates_dataset", "topics": ["recommender-system", "dataset", "deep-learning", "pytorch"], "description": "FINN.no Slate Dataset for Recommender Systems. A dataset containing all interactions (viewed items + response (clicked item / no click) for users over a longer time horizon."}
{"name": "hpprc/simple-simcse", "full_name": "hppRC/simple-simcse", "topics": ["deep-learning", "pytorch", "sentence-embeddings"], "description": "A simple implementation of SimCSE"}
{"name": "asrafulashiq/dynamic-cdfsl", "full_name": "asrafulashiq/dynamic-cdfsl", "topics": ["deep-learning", "few-shot-learning", "knowledge-distillation", "self-supervised-learning", "semi-supervised-learning", "pytorch-lightning", "hydra-core"], "description": "Pytorch codes for NeurIPS 2021 paper titled \"Dynamic Distillation Network for Cross-Domain Few-Shot Recognition with Unlabeled Data\"."}
{"name": "tianyu0207/fsad-net", "full_name": "tianyu0207/FSAD-Net", "topics": ["anomaly-detection", "deep-learning", "few-shot-learning", "semi-supervised-learning", "pytorch"], "description": "Offical code for 'Few-Shot Anomaly Detection for Polyp Frames from Colonoscopy' [MICCAI 2020]"}
{"name": "vivekkhimani/torchfl", "full_name": "torchfl-org/torchfl", "topics": ["pytorch", "pytorch-lightning", "python3", "federated-learning"], "description": "A Python library for rapid prototyping, experimenting, and logging of federated learning using state-of-the-art models and datasets. Built using PyTorch and PyTorch Lightning."}
{"name": "mohammadkhalifa/fairseq-tagging", "full_name": "mukhal/fairseq-tagging", "topics": ["nlp", "nlp-machine-learning", "fairseq", "machine-learning", "sequence-labeling", "named", "ner", "labeling-tasks", "prediction", "pos-tagging"], "description": "a Fairseq fork for sequence tagging/labeling tasks"}
{"name": "koichiyasuoka/esupar", "full_name": "KoichiYasuoka/esupar", "topics": ["nlp", "japanese", "chinese", "classical-chinese", "thai", "coptic", "english", "german", "natural-language-processing", "serbian"], "description": "Tokenizer POS-Tagger and Dependency-parser with BERT/RoBERTa/DeBERTa models for Japanese and other languages"}
{"name": "yhlleo/mjp", "full_name": "yhlleo/MJP", "topics": [], "description": "A Pytorch implementation of \"Breaking the Chain of Gradient Leakage in Vision Transformers\"."}
{"name": "megagonlabs/ginza-transformers", "full_name": "megagonlabs/ginza-transformers", "topics": ["nlp", "natural-language-processing", "spacy", "spacy-transformers", "transformers", "sudachitra", "tokenizers", "ginza"], "description": "Use custom tokenizers in spacy-transformers"}
{"name": "jiaming-wang/n_sr", "full_name": "jiaming-wang/N_SR", "topics": [], "description": "Some implements of state-of-the-art Super-Resolution architectures with Pytorch."}
{"name": "muhammad-ahmed-ghani/svoice_demo", "full_name": "muhammad-ahmed-ghani/svoice_demo", "topics": ["gradio", "python", "pytorch", "source-separation"], "description": " A PyTorch demo of the paper Voice Separation with an Unknown Number of Multiple Speakers using gradio and Nvidia NEMO ASR model."}
{"name": "adversarial-deep-learning/code-soup", "full_name": "Adversarial-Deep-Learning/code-soup", "topics": ["deep-learning", "adversarial-attacks", "computer-vision", "natural-language-processing", "pytorch", "machine-learning", "hacktoberfest", "python"], "description": "This is a collection of algorithms and approaches used in the book adversarial deep learning"}
{"name": "oliverguhr/spelling", "full_name": "oliverguhr/spelling", "topics": ["neural-network", "transformer", "transformer-models"], "description": "This is a neural spell checker"}
{"name": "haoosz/ffr-net", "full_name": "haoosz/FFR-Net", "topics": ["face-recognition", "pytorch"], "description": "PyTorch code for ICIP 2022 paper \"A Unified Framework for Masked and Mask-Free Face Recognition via Feature Rectification\""}
{"name": "bioinfomachinelearning/dips-plus", "full_name": "BioinfoMachineLearning/DIPS-Plus", "topics": ["deep-learning", "bioinformatics", "datasets", "proteins", "machine-learning"], "description": "The Enhanced Database of Interacting Protein Structures for Interface Prediction"}
{"name": "philipdarke/torchtime", "full_name": "philipdarke/torchtime", "topics": ["pytorch", "time-series", "datasets", "classification", "supervised-learning", "physionet"], "description": "Benchmark time series data sets for PyTorch"}
{"name": "simran-arora/focus", "full_name": "simran-arora/focus", "topics": ["machine-learning", "privacy", "pytorch"], "description": "This repo contains code for the paper: \"Can Foundation Models Help Us Achieve Perfect Secrecy?\""}
{"name": "marco-rudolph/ast", "full_name": "marco-rudolph/AST", "topics": ["anomaly-detection", "deep-learning"], "description": "This is the code to the WACV 2023 paper \"Asymmetric Student-Teacher Networks for Industrial Anomaly Detection\" by Marco Rudolph, Tom Wehrbein, Bodo Rosenhahn and Bastian Wandt."}
{"name": "camma-public/cholect45", "full_name": "CAMMA-public/cholect45", "topics": ["python", "dataset", "python3", "action-recognition", "laparoscopy", "endoscopic-images", "cholect40", "cholect45", "cholect50", "action-triplet", "pytorch", "tensorflow", "tensorflow2"], "description": "Laparoscopic video dataset for surgical action triplet recognition"}
{"name": "nk-cs-zzl/ian", "full_name": "NK-CS-ZZL/IAN", "topics": ["cvprw2021", "deep-learning", "relighting", "pytorch"], "description": "Designing An Illumination-Aware Network for Deep Image Relighting (TIP 2022)"}
{"name": "eli-yili/pmm", "full_name": "Eli-YiLi/PMM", "topics": ["weakly-supervised-segmentation", "pytorch"], "description": "Pseudo-mask Matters in Weakly-supervised Semantic Segmentation"}
{"name": "liuruiyang98/jittor-summary", "full_name": "liuruiyang98/Jittor-summary", "topics": [], "description": "Keras style model.summary() in Jittor, modified from torchsummary."}
{"name": "bminixhofer/gerpt2", "full_name": "bminixhofer/gerpt2", "topics": ["gpt2", "german", "common-crawl", "machine-learning", "language-model", "nlp"], "description": "German small and large versions of GPT2."}
{"name": "minghchen/carl_code", "full_name": "minghchen/CARL_code", "topics": [], "description": "Pytorch code for Frame-wise Action Representations for Long Videos via Sequence Contrastive Learning, CVPR2022."}
{"name": "siwooyong/codalab-microsoft-coco-image-captioning-challenge", "full_name": "siwooyong/Codalab-Microsoft-COCO-Image-Captioning-Challenge", "topics": ["deep-learning", "image-captioning", "gpt2", "transformer", "efficiency", "coco-dataset", "resnet", "decoder", "encoder", "fine-tuning", "codalab", "challenge", "pytorch"], "description": " \ud83e\udd49 Codalab-Microsoft-COCO-Image-Captioning-Challenge 3rd place solution(06.30.21)"}
{"name": "shengfeng233/pinn-for-ns-equation", "full_name": "Shengfeng233/PINN-for-NS-equation", "topics": ["pytorch", "fluid-mechanics", "physics-informed-neural-networks"], "description": "A pytorch implementaion of physics informed neural networks for two dimensional NS equation"}
{"name": "mzhang367/dcdh-pytorch", "full_name": "mzhang367/DCDH-PyTorch", "topics": ["deep-hashing", "face-image-retrieval", "pytorch", "deep-learning"], "description": "Official codes of the paper: Deep Center-Based Dual-Constrained Hashing for Discriminative Face Image Retrieval (DCDH)"}
{"name": "opennyai/opennyai", "full_name": "OpenNyAI/Opennyai", "topics": ["indian-laws", "machine-learning", "natural-language-processing", "nlp", "python", "spacy", "indian-legal-judgements", "legalnlp"], "description": "Opennyai : An efficient NLP Pipeline for Indian Legal documents"}
{"name": "wuminye/nopc", "full_name": "wuminye/NOPC", "topics": [], "description": "Pytorch implementation of Neural Opacity Point Cloud."}
{"name": "romesco/hydra-lightning", "full_name": "romesco/hydra-lightning", "topics": [], "description": "Configuration classes enabling Hydra to configure and manage Pytorch Lightning projects."}
{"name": "shahaf1313/procst", "full_name": "shahaf1313/ProCST", "topics": ["deep-learning", "pytorch", "semantic-segmentation"], "description": "Official implementation of ProCST image-to-image translation for UDA-SS."}
{"name": "hhaandroid/deep_learning_codesegment", "full_name": "hhaAndroid/deep_learning_codesegment", "topics": [], "description": "Code segment are often used in deep learning algorithms(pytorch/numpy)"}
{"name": "frank-zyw/chinese-text-classification", "full_name": "Frank-ZYW/Chinese-Text-Classification", "topics": [], "description": "\u57fa\u4e8ePytorch\u5b9e\u73b0\u7684\u4e00\u4e9b\u7ecf\u5178\u81ea\u7136\u8bed\u8a00\u5904\u7406\u6a21\u578b\u4e2d\u6587\u77ed\u6587\u672c\u5206\u7c7b\u4efb\u52a1\uff0c\u5305\u542bTextCNN\uff0cTextRCNN\uff0cFastText\uff0cBERT\uff0cROBERT\u4ee5\u53caERNIE"}
{"name": "masterhow/eventpointpose", "full_name": "MasterHow/EventPointPose", "topics": ["deep-learning", "event-camera", "human-pose-estimation", "point-cloud", "pose-estimation", "pytorch"], "description": "[3DV2022] pytorch implementation for \u2018Efficient Human Pose Estimation via 3D Event Point Cloud\u2019"}
{"name": "kdhht2334/elim_fer", "full_name": "kdhht2334/ELIM_FER", "topics": ["facial-expression-recognition", "feature-normalization", "human-computer-interaction", "optimal-transport", "valence-arousal", "facial-expressions", "pytorch", "real-time-demo", "domain-shift", "out-of-distribution-generalization"], "description": "[NeurIPS 2022] The official repository of Expression Learning with Identity Matching for Facial Expression Recognition"}
{"name": "hyungting/dgmr-pytorch", "full_name": "hyungting/DGMR-pytorch", "topics": ["precipitation-nowcasting", "machine-learning", "generative-adversarial-network", "pytorch-implementation"], "description": "An implementation of Deep Generative Model of Radars from DeepMind in PyTorch"}
{"name": "lucidrains/ddpm-ipa-protein-generation", "full_name": "lucidrains/ddpm-ipa-protein-generation", "topics": ["artificial-intelligence", "attention-mechanism", "deep-learning", "denoising-diffusion", "protein-generation"], "description": "Implementation of the DDPM + IPA (invariant point attention) for protein generation, as outlined in the paper \"Protein Structure and Sequence Generation with Equivariant Denoising Diffusion Probabilistic Models\""}
{"name": "code-kern-ai/refinery-python-sdk", "full_name": "code-kern-ai/refinery-python-sdk", "topics": ["python", "sdk", "data-centric-ai", "machine-learning", "natural-language-processing", "nlp", "spacy", "supervised-learning", "text-annotation", "text-classification", "transformer", "deep-learning", "labeling", "labeling-tool", "neural-search", "active-learning"], "description": "Official Python SDK for Kern AI refinery."}
{"name": "developer0hye/yolox-backbone", "full_name": "developer0hye/YOLOX-Backbone", "topics": ["yolox", "yolo", "backbone", "deep-neural-networks", "convolutional-neural-networks", "cnn", "object-detection", "backbone-models"], "description": "yolox_backbone is a deep-learning library and a collection of YOLOX Backbone models."}
{"name": "lisennlp/bert_crf_sequence_annotation", "full_name": "Lisennlp/bert_crf_sequence_annotation", "topics": [], "description": "\u57fa\u4e8ePytorch+BERT+CRF\u7684NLP\u5e8f\u5217\u6807\u6ce8\u6a21\u578b\uff0c\u76ee\u524d\u5305\u62ec\u5206\u8bcd\uff0c\u8bcd\u6027\u6807\u6ce8\uff0c\u547d\u540d\u5b9e\u4f53\u8bc6\u522b\u7b49"}
{"name": "alexandra-chron/hierarchical-domain-adaptation", "full_name": "alexandra-chron/hierarchical-domain-adaptation", "topics": ["adapters", "clustering", "domain-adaptation", "gaussian-mixture-models", "nlp", "pretrained-language-model", "pytorch"], "description": "Code of NAACL 2022 \"Efficient Hierarchical Domain Adaptation for Pretrained Language Models\" paper. "}
{"name": "akariasai/unanswerable_qa", "full_name": "AkariAsai/unanswerable_qa", "topics": ["question-answering", "machine-reading-comprehension", "natural-questions", "natural-language-processing"], "description": "The official implementation for ACL 2021 \"Challenges in Information Seeking QA: Unanswerable Questions and Paragraph Retrieval\". "}
{"name": "luigifilippochiara/goal-sar", "full_name": "luigifilippochiara/Goal-SAR", "topics": ["computer-vision", "deep-learning", "trajectory-prediction"], "description": "Official code for the Paper \"Goal-driven Self-Attentive Recurrent Networks for Trajectory Prediction\", CVPRW 2022"}
{"name": "oneapi-src/visual-quality-inspection", "full_name": "oneapi-src/visual-quality-inspection", "topics": ["deep-learning", "pytorch", "ai-starter-kit"], "description": "AI Starter Kit for Quality Visual Inspection using Intel\u00ae Extension for Pytorch"}
{"name": "sxpro/imageenhance_cgan", "full_name": "sxpro/ImageEnhance_cGAN", "topics": [], "description": "Pytorch implementation of \"Enhance Image as You Like with Unpaired Learning\" (IJCAI 2021)"}
{"name": "manojbhat09/trajformer", "full_name": "Manojbhat09/Trajformer", "topics": ["trajectory-prediction", "attentive-contexts", "predictions", "agent-based-modeling", "autonomous-vehicles", "self-driving-car", "robotics", "argoverse", "nuscenes", "deep-learning"], "description": "Trajectory Prediction with Local Self-Attentive Contexts for Autonomous Driving (NeurIPS 2020)"}
{"name": "luyug/gc-dpr", "full_name": "luyug/GC-DPR", "topics": ["dpr", "single-gpu", "deep-learning", "pytorch", "memory-efficient", "dense-retrieval", "retrieval", "question-answering"], "description": "Train Dense Passage Retriever (DPR) with a single GPU "}
{"name": "chulhongsung/time-series-forecasting", "full_name": "chulhongsung/time-series-forecasting", "topics": ["time-series", "time-series-forecasting", "deep-learning", "pytorch", "tensorflow"], "description": "Tensorflow tutorial repository for time series forecasting models"}
{"name": "runxinxu/childtuning", "full_name": "RunxinXu/ChildTuning", "topics": ["nlp", "fine-tuning", "pre-trained-model", "bert"], "description": "Source code for our EMNLP'21 paper \u300aRaise a Child in Large Language Model: Towards Effective and Generalizable Fine-tuning\u300b"}
{"name": "dbtmpl/opmask", "full_name": "dbtmpl/OPMask", "topics": ["instance-segmentation", "partially-supervised", "pytorch", "object-mask-prior", "iccv2021"], "description": "Official implementation of the paper 'Prior to Segment: Foreground Cues for Weakly Annotated Classes in Partially Supervised Instance Segmentation' (ICCV 2021)"}
{"name": "devjwsong/recosa-dialogue-generation-pytorch", "full_name": "devjwsong/recosa-dialogue-generation-pytorch", "topics": ["pytorch", "transformer", "natural-language-processing", "natural-language-generation", "nlp", "nlg", "multiturn", "dialogue-generation"], "description": "The PyTorch implementation of ReCoSa(the Relevant Contexts with Self-attention) for dialogue generation using the multi-head attention and GRU."}
{"name": "huangcongqing/mmdetection3d-note", "full_name": "HuangCongQing/mmdetection3d-note", "topics": ["3d-object-detection", "point-cloud", "pytorch", "object-detection", "object-detection-model"], "description": "mmdetection3d  \u4ee3\u7801\u91cd\u70b9\u6ce8\u89e3\u7b14\u8bb0"}
{"name": "youtalk/iknet-open-manipulator-x", "full_name": "youtalk/iknet", "topics": ["pytorch", "ros2", "robotis", "jetson-nano", "dynamixel", "neural-network"], "description": "Inverse kinematics estimation of ROBOTIS Open Manipulator X with neural networks"}
{"name": "jingranburangyongzhongwen/torchmarl", "full_name": "jingranburangyongzhongwen/torchMARL", "topics": [], "description": "pytorch\u5b9e\u73b0\u7684\u4e00\u4e9bMARL\u7b97\u6cd5"}
{"name": "cognlp/cogktr", "full_name": "CogNLP/CogKTR", "topics": ["knowledge", "nlu", "text", "pytorch"], "description": "CogKTR: A Knowledge-Enhanced Text Representation Toolkit for Natural Language Understanding. EMNLP 2022"}
{"name": "icbcbicc/focuslitenn", "full_name": "icbcbicc/FocusLiteNN", "topics": ["image-processing", "digital-pathology", "deep-learning", "deep-neural-networks", "convolutional-neural-network", "medical-image-processing", "image-quality-assessment", "network-distillation", "pathological-images", "pytorch"], "description": "Official PyTorch and MATLAB implementations of our MICCAI 2020 paper \"FocusLiteNN: High Efficiency Focus Quality Assessment for Digital Pathology\""}
{"name": "dwightfoster/pytorch-tecogan", "full_name": "dwight-foster/Pytorch-TecoGAN", "topics": ["gan", "pytorch", "super-resolution", "tecogan"], "description": "Pytorch implementation of the TecoGan video super resolution model. "}
{"name": "pointcloudyc/respointnet2", "full_name": "PointCloudYC/ResPointNet2", "topics": ["deep-learning", "point-clouds", "segmentation", "semantic-segmentation", "dataset"], "description": "ResPointNet++ for AutoCon journal paper."}
{"name": "martinferianc/quantised-bayesian-nets", "full_name": "martinferianc/quantised-bayesian-nets", "topics": ["bayesian-inference", "neural-network", "quantisation", "deep-learning", "bayesian-neural-networks"], "description": "On the Effects of Quantisation on Model Uncertainty in Bayesian Neural Networks"}
{"name": "davidsvy/neural-scam-artist", "full_name": "davidsvy/Neural-Scam-Artist", "topics": ["deduplication", "fraud", "gpt2", "fine-tuning", "huggingface", "nlp", "dataset", "lsh", "minhash", "pytorch", "readability", "scam", "transformer", "web-scraping"], "description": "Web Scraping, Document Deduplication & GPT-2 Fine-tuning with a newly created scam dataset."}
{"name": "dlite-tools/nlpiper", "full_name": "dlite-tools/NLPiper", "topics": ["nlp", "preprocessing", "text", "text-processing", "text-analysis", "nlp-library", "nlp-parsing", "preprocessing-data"], "description": "NLPiper is a package that agglomerates different NLP tools and applies their transformations in the target document."}
{"name": "cwmok/dirac", "full_name": "cwmok/DIRAC", "topics": [], "description": "This is the official Pytorch implementation of \"Unsupervised Deformable Image Registration with Absent Correspondences in Pre-operative and Post-Recurrence Brain Tumor MRI Scans\" (MICCAI 2022), written by Tony C. W. Mok and Albert C. S. Chung."}
{"name": "hiyouga/amp-regularizer", "full_name": "hiyouga/AMP-Regularizer", "topics": ["machine-learning", "neural-network", "regularization", "deep-learning", "deep-learning-algorithms", "cvpr", "cvpr2021", "computer-vision", "image-classification", "regularizing-neural-networks"], "description": "Code for our paper \"Regularizing Neural Networks via Adversarial Model Perturbation\", CVPR2021"}
{"name": "oap-project/cloudtik", "full_name": "oap-project/cloudtik", "topics": ["aws", "azure", "cloud", "gcp", "ai", "analytics", "deep-learning", "machine-learning"], "description": "Cloud Scale Platform for Distributed Analytics and AI"}
{"name": "roboflow-ai/deploy-models-with-grpc-pytorch-asyncio", "full_name": "roboflow/deploy-models-with-grpc-pytorch-asyncio", "topics": [], "description": "Article about deploying machine learning models using grpc, pytorch and asyncio"}
{"name": "zeroized/deeprec-torch", "full_name": "zeroized/DeepRec-torch", "topics": ["fm", "deepfm", "pnn", "fnn", "pytorch", "ctr", "deep-learning", "afm", "wide-and-deep", "dcn", "flen", "autoint"], "description": "Easy-to-use pytorch-based framework for RecSys models"}
{"name": "ugenteraan/resnet-50-cbam-pytorch", "full_name": "Ugenteraan/ResNet-50-CBAM-PyTorch", "topics": ["resnet-50", "pytorch-implementation", "deep-learning", "image-classification", "cbam-resnet"], "description": "Implementation of Resnet-50 with and without CBAM in PyTorch v1.8. Implementation tested on Intel Image Classification dataset from https://www.kaggle.com/puneet6060/intel-image-classification."}
{"name": "sdpkjc/abcdrl", "full_name": "sdpkjc/abcdrl", "topics": ["python", "deep-reinforcement-learning", "pytorch", "reinfocement-learning", "deep-learning", "machine-learning"], "description": "Modular Single-file Reinfocement Learning Algorithms Library"}
{"name": "sally20921/monodepth-to-manydepth", "full_name": "sally20921/All4Depth", "topics": ["pytorch", "depth-estimation", "pose-estimation"], "description": "Self-Supervised Depth Estimation on Monocular Sequences"}
{"name": "sunwoo76/deep_translation_prior", "full_name": "sunwoo76/Deep_Translation_Prior", "topics": ["deep-learning", "styletransfer"], "description": "Official repository for Deep Translation Prior: Test-time Training for Photorealistic Style Transfer"}
{"name": "shuhanchen/ras-pytorch", "full_name": "ShuhanChen/RAS-pytorch", "topics": [], "description": "Pytorch code for our  TIP20 paper: Reverse Attention Based Residual Network for Salient Object Detection.."}
{"name": "powerlzy/malconv-pytorch", "full_name": "PowerLZY/MalConv-Pytorch", "topics": ["malware", "malware-detection", "deep-learning", "machine-learning", "pytorch"], "description": "\u57fa\u4e8e\u6df1\u5ea6\u5b66\u4e60\u7684\u6076\u610f\u8f6f\u4ef6\u68c0\u6d4b\u7814\u7a76\uff1bMalConv;"}
{"name": "atmacvit/bincrowd", "full_name": "atmacvit/bincrowd", "topics": ["crowd-counting", "pytorch", "deep-learning", "skewed-data", "imbalanced-data", "imbalanced-regression", "binning-analysis", "acm-multimedia-2021", "computer-vision"], "description": "Official Implementation of ACMMM'21 paper \"Wisdom of (Binned) Crowds: A Bayesian Stratification Paradigm for Crowd Counting\""}
{"name": "keke921/gclloss", "full_name": "Keke921/GCLLoss", "topics": [], "description": "official source code for the Paper: **Long-tailed Visual Recognition via Gaussian Clouded Logit Adjustment** based on Pytorch."}
{"name": "renovamen/tinyark", "full_name": "Renovamen/flint", "topics": ["numpy", "deep-learning", "autograd", "neural-network", "autodiff", "autodifferentiation"], "description": "A toy deep learning framework implemented in pure Numpy from scratch. Aka homemade PyTorch lol."}
{"name": "sherlcok314159/pocket-glue", "full_name": "sherlcok314159/Pocket-GLUE", "topics": [], "description": "\u8fd9\u91cc\u662f\u7528torch\u5199\u7684\u7b80\u6d01\u7248\u7684GLUE\u8bc4\u6d4b\u4ee3\u7801\u3002This is the simpler code written by torch in GLUE."}
{"name": "hpcaitech/freqcacheembedding", "full_name": "hpcaitech/CachedEmbedding", "topics": ["colossal-ai", "deep-learning", "dlrm", "embeddings", "nlp", "pytorch", "recommandation-system"], "description": "A memory efficient DLRM training solution using ColossalAI"}
{"name": "jambo6/online-neural-cdes", "full_name": "jambo6/online-neural-cdes", "topics": ["time-series", "machine-learning", "deep-learning", "neural-networks", "signatures", "neural-cdes", "neural-odes", "medical-time-series"], "description": "Code for: \"Neural Controlled Differential Equations for Online Prediction Tasks\""}
{"name": "jojonki/beamsearch", "full_name": "jojonki/BeamSearch", "topics": [], "description": "Beam search decoding with Pytorch"}
{"name": "huangshiyu13/deepfake_detection", "full_name": "huangshiyu13/deepfake_detection", "topics": [], "description": "detect deepfake images(AI\u6362\u8138\u68c0\u6d4b), Pytorch"}
{"name": "krishnadn/attentive-statistics-pooling-for-deep-speaker-embedding", "full_name": "KrishnaDN/Attentive-Statistics-Pooling-for-Deep-Speaker-Embedding", "topics": ["speaker-recognition", "speaker-identification", "speech", "attention-model"], "description": "Implementation of the paper \"Attentive Statistics Pooling for Deep Speaker Embedding\" in Pytorch"}
{"name": "idiap/g2g-transformer", "full_name": "idiap/g2g-transformer", "topics": [], "description": "Pytorch implementation of \u201cRecursive Non-Autoregressive Graph-to-Graph Transformer for Dependency Parsing with Iterative Refinement\u201d"}
{"name": "lixiaotong97/mc-beit", "full_name": "lixiaotong97/mc-BEiT", "topics": ["eccv2022", "masked-image-modeling", "pre-training"], "description": "[ECCV 2022] Official pytorch implementation of \"mc-BEiT: Multi-choice Discretization for Image BERT Pre-training\" in European Conference on Computer Vision (ECCV) 2022."}
{"name": "anita-hu/msaf", "full_name": "anita-hu/MSAF", "topics": ["multimodal-learning", "multimodal-sentiment-analysis", "multimodal-emotion-recognition", "ntu-rgbd", "ravdess", "cmu-mosei", "pytorch", "action-recognition", "multimodal-deep-learning"], "description": "Offical implementation of paper \"MSAF: Multimodal Split Attention Fusion\""}
{"name": "cattidea/bp-ga-pytorch", "full_name": "cattidea/bp-ga-pytorch", "topics": ["bp-ga", "bp", "ga", "pytorch", "mechine-learning"], "description": ":dna: bp-ga algorithm implemented by pytorch"}
{"name": "aispeech-lab/limuse", "full_name": "aispeech-lab/LiMuSE", "topics": ["pytorch", "speaker-extraction"], "description": "PyTorch implementation of LiMuSE"}
{"name": "sally20921/conssl", "full_name": "sally20921/ConSSL", "topics": ["pytorch-ignite", "pytorch-implmention", "latex", "docker", "imagenet-dataset", "cifar-dataset", "pytorch-lightning"], "description": "PyTorch Implementation of SOTA SSL methods "}
{"name": "hengruizhang98/gcmc-pytorch-dgl", "full_name": "hengruizhang98/GCMC-Pytorch-dgl", "topics": [], "description": "A Pytorch implementation of GCMC model with Deep Graph Library (DGL). The user-item bipartite graph is built using dgl-heterogeneouss Graph"}
{"name": "riccardomusmeci/lightning-ssl", "full_name": "riccardomusmeci/lightning-ssl", "topics": ["byol", "byol-pytorch-lightning", "computer-vision", "dino", "pytorch", "pytorch-lightning", "self-supervised-learning"], "description": "Self-Supervised methods implemented with PyTorch Lightning"}
{"name": "runist/torch_maml", "full_name": "Runist/torch_maml", "topics": [], "description": "Very simple pytorch maml implement"}
{"name": "taishan1994/pytorch_bert_chinese_classification", "full_name": "taishan1994/pytorch_bert_chinese_text_classification", "topics": ["bert", "pytorch", "text-classification"], "description": "\u57fa\u4e8epytorch+bert\u7684\u4e2d\u6587\u6587\u672c\u5206\u7c7b"}
{"name": "unibester/age", "full_name": "UniBester/AGE", "topics": ["pytorch", "gan", "deep-learning"], "description": "A implementation of Attribute Group Editing for Reliable Few-shot Image Generation (CVPR 2022)"}
{"name": "sooftware/jasper", "full_name": "sooftware/jasper", "topics": ["asr", "jasper", "automatic-speech-recognition", "cnn", "nvidia", "speech-recognition", "pytorch"], "description": "PyTorch implementation of \"Jasper: An End-to-End Convolutional Neural Acoustic Model\" (INTERSPEECH 2019)"}
{"name": "tk-rusch/unicornn", "full_name": "tk-rusch/unicornn", "topics": ["time-series", "deep-learning", "recurrent-neural-networks", "imdb", "sequential-mnist", "icml-2021", "icml", "cuda", "pytorch"], "description": "Official code for UnICORNN (ICML 2021)"}
{"name": "hpprc/template-pytorch-lightning-hydra-mlflow-poetry", "full_name": "hppRC/template-pytorch-lightning-hydra-mlflow-poetry", "topics": [], "description": "An easy to use ML template project using Pytorch-Lightning, Hydra, Mlflow, and Poetry."}
{"name": "tonylianlong/unsupervisedselectivelabeling", "full_name": "TonyLianLong/UnsupervisedSelectiveLabeling", "topics": ["deep-learning", "semi-supervised-learning", "computer-vision", "data-centric-ai", "labeling-algorithm", "machine-learning"], "description": "[ECCV 2022] Official Implementation for Unsupervised Selective Labeling for More Effective Semi-Supervised Learning"}
{"name": "zhiyuanchen/chanfig", "full_name": "ZhiyuanChen/CHANfiG", "topics": ["config", "deep-learning", "python", "dict", "yaml"], "description": "Easier Configuration"}
{"name": "jywa/overlap_local_sgd", "full_name": "JYWa/Overlap_Local_SGD", "topics": ["pytorch", "distributed-optimization", "sgd-optimizer", "deep-learning"], "description": "Implementation of (overlap) local SGD in Pytorch"}
{"name": "koala9527/faster-rcnn-pytorch", "full_name": "koala9527/faster-rcnn-pytorch", "topics": [], "description": "python pytorch faster-rcnn \u76ee\u6807\u68c0\u6d4b \u7b80\u5355 \u96f6\u57fa\u7840"}
{"name": "dbbbbm/f-anogan-pytorch", "full_name": "dbbbbm/f-AnoGAN-PyTorch", "topics": ["pytorch", "anomalydetection", "anomaly-detection", "deep-learning"], "description": "Unofficial PyTorch implementation for f-AnoGAN: Fast unsupervised anomaly detection with generative adversarial networks."}
{"name": "fdbtrs/mixfacenets", "full_name": "fdbtrs/mixfacenets", "topics": ["face-recognition", "mixfacenets", "face-verification", "lfw", "deep-learning", "pytorch"], "description": "Official repository for MixFaceNets: Extremely Efficient Face Recognition Networks"}
{"name": "houliangict/slimgan", "full_name": "liang-hou/SlimGAN", "topics": ["gan", "pytorch", "aaai2021"], "description": "Slimmable Generative Adversarial Networks (AAAI 2021)"}
{"name": "utcsilab/score-based-channels", "full_name": "utcsilab/score-based-channels", "topics": ["deep-learning", "physical-layer"], "description": "Source code for paper \"MIMO Channel Estimation using Score-Based Generative Models\", published in IEEE Transactions on Wireless Communications."}
{"name": "nishiwen1214/r-at", "full_name": "nishiwen1214/R-AT", "topics": ["pytorch", "bert"], "description": "Regularized Adversarial Training"}
{"name": "tthinking/matr", "full_name": "tthinking/MATR", "topics": ["image-fusion", "pytorch", "computer-vision", "transformers", "image-processing"], "description": "[IEEE TIP 2022] Official implementation of MATR: Multimodal Medical Image Fusion via Multiscale Adaptive Transformer"}
{"name": "xavysp/ldc", "full_name": "xavysp/LDC", "topics": ["boundary-detection", "contour-detection", "edge-detection", "pytorch"], "description": "LDC: Lightweight Dense CNN for Edge Detection"}
{"name": "chaosallen/ipnv2_pytorch", "full_name": "chaosallen/IPNV2_pytorch", "topics": [], "description": "This is an pytorch implementation of \"IPN-V2 and OCTA-500: Methodology and Database for Retinal Image Segmentation\"."}
{"name": "bioshape-lab/pirounet", "full_name": "bioshape-lab/pirounet", "topics": ["art", "dance", "deep-learning", "lstm", "machine-learning", "semi-supervised-learning", "variational-autoencoder"], "description": "Conditional dance generator"}
{"name": "allenai/smashed", "full_name": "allenai/smashed", "topics": ["mappers", "pytorch", "torchdata", "dataset", "datasets", "dict", "huggingface", "in-context-learning", "natural-language-processing", "nlp", "pipeline", "prefix", "prefix-tuning", "preprocessing", "prompting", "text", "transformer", "transformers"], "description": "SMASHED is a toolkit designed to apply transformations to samples in datasets, such as fields extraction, tokenization, prompting, batching, and more. Supports datasets from Huggingface, torchdata iterables, or simple lists of dictionaries."}
{"name": "jcblaisecruz02/filipino-text-benchmarks", "full_name": "jcblaisecruz02/Filipino-Text-Benchmarks", "topics": ["transformer", "transfer-learning", "bert", "tagalog", "filipino", "corpus", "benchmark", "deep-learning", "tagalog-transformers", "text-classification", "electra", "electra-models", "nli", "low-resource-languages"], "description": "Open-source benchmark datasets and pretrained transformer models in the Filipino language."}
{"name": "indyfree/carla", "full_name": "carla-recourse/CARLA", "topics": ["python", "machine-learning", "artificial-intelligence", "explainable-ai", "explainable-ml", "explainability", "counterfactual-explanations", "counterfactuals", "counterfactual", "recourse", "benchmark", "benchmarking", "tensorflow", "tensorflow2", "pytorch"], "description": "CARLA: A Python Library to Benchmark Algorithmic Recourse and Counterfactual Explanation Algorithms"}
{"name": "princeton-nlp/rationale-robustness", "full_name": "princeton-nlp/rationale-robustness", "topics": ["interpretability", "nlp", "robustness"], "description": "NAACL 2022: Can Rationalization Improve Robustness? https://arxiv.org/abs/2204.11790"}
{"name": "banditml/faucetml", "full_name": "banditml/faucetml", "topics": ["machine-learning", "features", "feature-engineering", "bigquery", "preprocessing", "ml", "pytorch"], "description": "High speed mini-batch data reading & preprocessing from BigQuery."}
{"name": "deci-ai/infery-examples", "full_name": "Deci-AI/infery-examples", "topics": ["coreml", "deep-learning", "inference", "onnx", "onnxruntime", "openvino", "python", "pytorch", "tensorflow", "tensorrt", "tflite", "torchscript", "infery", "deci", "profiling", "jetson", "jetson-nano", "jetson-orin", "jetson-xavier", "orin"], "description": "A collection of demo-apps and inference scripts for various deep learning frameworks using infery (Python)."}
{"name": "akanametov/musegan", "full_name": "akanametov/musegan", "topics": ["deep-neural-networks", "musegan", "music", "pytorch", "generative-adversarial-network", "neural-networks", "gan"], "description": "A Pytorch implementation of MuseGAN"}
{"name": "p-ranav/photolab", "full_name": "p-ranav/PhotoLab", "topics": ["animegan", "colorization", "cuda", "human-segmentation", "nuitka", "photo-editor", "portrait-mode", "pyqt6", "pyqt6-desktop-application", "python", "python3", "pytorch", "interactive", "stacking", "spot-removal", "numpy", "opencv", "pillow", "scikit-image"], "description": "AI-Powered Photo Editor (Python, PyQt6, PyTorch)"}
{"name": "yulv-git/awesome-ultrasound-standard-plane-detection", "full_name": "Yulv-git/Awesome-Ultrasound-Standard-Plane-Detection", "topics": ["standard-plane", "detection", "papers", "code", "ultrasound", "python3", "classification", "localization", "anatomical-structure", "public-datasets", "selection", "identification", "extraction", "localisation", "deep-learning", "machine-learning", "recognition"], "description": "A curated list of awesome ultrasound standard plane detection/localization/localisation/extraction/classification/selection/identification/recognition."}
{"name": "rasmushaugaard/surfemb", "full_name": "rasmushaugaard/surfemb", "topics": ["pose-estimation", "correspondence-distributions", "computer-vision", "deep-learning", "object-pose-estimation", "6d-pose-estimation"], "description": "SurfEmb (CVPR 2022)"}
{"name": "dod-advana/gamechanger-ml", "full_name": "dod-advana/gamechanger-ml", "topics": ["dod", "policy-as-code", "ml", "machine-learning", "python", "nlp", "natural-language-processing", "transformer", "mlops"], "description": "GAMECHANGER Machine Learning Repo"}
{"name": "nlesc-dirac/pytorch", "full_name": "nlesc-dirac/pytorch", "topics": ["pytorch", "lbfgs", "optimization", "lbfgs-optimizer", "deep-learning", "nonlinear-optimization"], "description": "Improved LBFGS optimizer in PyTorch."}
{"name": "podidiving/lgsc-for-fas-pytorch", "full_name": "Podidiving/lgsc-for-fas-pytorch", "topics": [], "description": "Learning Generalized Spoof Cues for FaceAnti-spoofing reimplementation in pytorch"}
{"name": "1051003502/cfgan", "full_name": "1051003502/CFGAN", "topics": [], "description": "A pytorch implementation of CFGAN"}
{"name": "rishabhmaheshwary/hard-label-attack", "full_name": "RishabhMaheshwary/hard-label-attack", "topics": ["adversarial-attacks", "bert", "nlp", "classification", "nli", "machine-learning", "deep-learning"], "description": "Natural Language Attacks in a Hard Label Black Box Setting."}
{"name": "bupt-ai-cz/pgdf", "full_name": "bupt-ai-cz/PGDF", "topics": ["computer-vision", "deep-learning", "image-classification", "noisy-labels"], "description": "Sample Prior Guided Robust Model Learning to Suppress Noisy Labels "}
{"name": "sally20921/noisystudent", "full_name": "sally20921/NoisyStudent", "topics": ["pytorch-implementation", "pytorch-ignite", "docker", "latex"], "description": "\"Self-training with Noisy Student improves ImageNet classification\" pytorch implementation"}
{"name": "mzr1996/backbone-example", "full_name": "mzr1996/backbone-example", "topics": ["image-classification", "object-detection", "image-segmentation", "pytorch", "openmmlab"], "description": "An example to implement a new backbone with OpenMMLab framework."}
{"name": "jderobot/rl-studio", "full_name": "JdeRobot/RL-Studio", "topics": ["jderobot", "robotics", "ros", "gazebo", "reinforcement-learning", "artificial-intelligence", "computer-vision", "deep-learning"], "description": "Robotic library for the training of Reinforcement Learning algorithms"}
{"name": "wfondrie/depthcharge", "full_name": "wfondrie/depthcharge", "topics": ["deep-learning", "framework", "mass-spectrometry", "metabolomics", "proteomics", "pytorch"], "description": "A deep learning toolkit for mass spectrometry"}
{"name": "lukewys/dcase_2020_t6", "full_name": "lukewys/dcase_2020_T6", "topics": ["audio-captioning", "deep-learning"], "description": "2nd place solution for 2020 DCASE challenge task 6 audio captioning. http://dcase.community/challenge2020/task-automatic-audio-captioning-results#wuyusong2020_t6"}
{"name": "utahnlp/infotabs-code", "full_name": "utahnlp/infotabs-code", "topics": ["nlp", "nlp-datasets", "nlp-machine-learning", "acl2020", "wikipedia", "tables", "semi-structured-data", "svm", "roberta", "transformer", "nli", "inference", "infotabs"], "description": "Implementation of the semi-structured inference model in our ACL 2020 paper, INFOTABS: Inference on Tables as Semi-structured Data."}
{"name": "jiexiaou/idt", "full_name": "jiexiaou/IDT", "topics": ["deep-learning", "image-deraining", "image-restoration", "pytorch", "transformer"], "description": "Official repository for the paper \"Image Deraining Transformer\"."}
{"name": "pier-maker92/bachsformer", "full_name": "pier-maker92/bachsformer", "topics": ["ai-generation", "bach", "deep-learning", "music-ai", "music-generation-deep-learning", "transformers", "vq-vae"], "description": "A Bach music generator with Artificial Intelligence. This model is made by a VQ-VAE +  Transformer (decoder-only). Sequences of midi 1 quarter length are compressed into 16 codebooks via VQ-VAE and a transformer learns how to generate the codebooks sequence to obtain a midi score. "}
{"name": "skoltech-nlp/rudetoxifier", "full_name": "s-nlp/rudetoxifier", "topics": ["style-transfer", "nlp", "russian-language"], "description": "Code and data of \"Methods for Detoxification of Texts for the Russian Language\" paper"}
{"name": "rahul1-bot/covid-chest-image-classification-from-deep-residual-networks", "full_name": "rahul1-bot/Covid-chest-Image-classification-from-Deep-Residual-Networks", "topics": ["artificial-neural-networks", "image-recognition", "covid-19", "pytorch", "python3"], "description": null}
{"name": "nawnoes/pytorch-gpt-x", "full_name": "nawnoes/pytorch-gpt-x", "topics": ["gpt", "pytorch", "transformer", "pipeline-parallelism", "deepspeed"], "description": "Implementation of autoregressive language model using improved Transformer and DeepSpeed pipeline parallelism."}
{"name": "miguelgondu/minimal_vae_on_mario", "full_name": "miguelgondu/minimal_VAE_on_Mario", "topics": ["pytorch", "super-mario-bros", "vae", "torch-distributions"], "description": "A minimal VAE trained on Super Mario Bros levels."}
{"name": "chenllliang/mls", "full_name": "chenllliang/MLS", "topics": ["machine-translation", "label-smoothing", "nlp"], "description": "Source code of our paper \"Focus on the Target\u2019s Vocabulary: Masked Label Smoothing for Machine Translation\" @ACL-2022 "}
{"name": "larsohne/pvdn", "full_name": "larsOhne/pvdn", "topics": [], "description": "Pytorch implementation of the PVDN dataset."}
{"name": "practical-ai/deep_utils", "full_name": "pooya-mohammadi/deep_utils", "topics": ["pytorch", "deep-learning", "face-detection", "object-detection", "utils", "tensorflow", "python", "machine-learning", "modelcheckpoint", "augmentation", "computer-vision", "nlp", "cutmix", "coco", "yolov5", "face-recognition", "vggface2", "senet"], "description": "An open-source toolkit which is full of handy functions, including the most used models and utilities for deep-learning practitioners!"}
{"name": "phoenix-shen/reinforcementlearning", "full_name": "Phoenix-Shen/ReinforcementLearning", "topics": ["pytorch", "reinforcement-learning", "algorithms", "qlearning-algorithm", "actor-critic-algorithm", "policy-gradient", "proximal-policy-optimization", "deep-qlearning-algorithm", "td3-pytorch", "dppo", "ddpg-pytorch", "prioritized-experience-replay", "deep-reinforcement-learning"], "description": "\u5f3a\u5316\u5b66\u4e60\u7b97\u6cd5\u5e93\uff0c\u5305\u542b\u4e86\u76ee\u524d\u4e3b\u6d41\u7684\u5f3a\u5316\u5b66\u4e60\u7b97\u6cd5(Value based and Policy basd)\u7684\u4ee3\u7801\uff0c\u4ee3\u7801\u90fd\u7ecf\u8fc7\u8c03\u8bd5\u5e76\u53ef\u4ee5\u8fd0\u884c"}
{"name": "elicassion/starformer", "full_name": "elicassion/StARformer", "topics": ["transformer", "reinforcement-learning", "transformer-reinforcement-learning"], "description": "Code for paper StARformer: Transformer with State-Action-Reward Representations."}
{"name": "enghock1/real-time-2d-and-3d-hand-pose-estimation", "full_name": "enghock1/Real-Time-2D-and-3D-Hand-Pose-Estimation", "topics": ["deep-learning", "computer-vision", "3d-hand-pose-estimation", "2d-hand-pose-estimation", "real-time"], "description": "Real-Time 2D and 3D Hand Pose Estimation from RGB Image"}
{"name": "zhangzp9970/mia", "full_name": "zhangzp9970/MIA", "topics": ["ai-security", "model-inversion-attacks", "research", "deep-learning", "machine-learning"], "description": "Unofficial pytorch implementation of paper: Model Inversion Attacks that Exploit Confidence Information and Basic Countermeasures"}
{"name": "govindansriram/cobraml", "full_name": "govindansriram/CobraML", "topics": ["machine-learning", "python3", "pytorch", "cuda"], "description": "AutoML Software designed to give users access to a whole plethora of ML models, some trainable on the GPU."}
{"name": "lihaoxiang1989/tensorrt-cv", "full_name": "col-in-coding/Tensorrt-CV", "topics": ["cuda", "pytorch", "deep-learning", "tensorrt", "onnx", "tensorrt-conversion", "tensorrt-inference", "tensorrt-engine"], "description": "Using TensorRT for Inference Model Deployment. "}
{"name": "wiedersehne/paramixer", "full_name": "wiedersehne/Paramixer", "topics": ["attention", "deep-learning", "machine-learning", "parameterization", "transformer"], "description": "Parameterizing Mixing Links in Sparse Factors Works Better than Dot-Product Self-Attention (CVPR 2022)"}
{"name": "ritchiehuang/magail", "full_name": "RITCHIEHuang/MAGAIL", "topics": ["multiagent", "imita", "gail"], "description": "Pytorch implementation of Multi-Agent Generative Adversarial Imitation Learning"}
{"name": "fdbtrs/self-restrained-triplet-loss", "full_name": "fdbtrs/Self-restrained-Triplet-Loss", "topics": ["covid-19", "mask", "pytorch", "masked-face-recognition", "masked-face", "triplet-loss", "srt"], "description": "Official repository for Self-restrained Triplet Loss for Accurate Masked Face Recognition"}
{"name": "yeliudev/nncore", "full_name": "yeliudev/nncore", "topics": ["machine-learning", "deep-learning", "pytorch"], "description": "\ud83d\udce6 A lightweight machine learning toolkit for researchers, providing common model design & learning functionalities."}
{"name": "tongjinle123/speech-transformer-pytorch_lightning", "full_name": "tongjinle123/speech-transformer-pytorch_lightning", "topics": ["pytorch-lightning", "speech", "asr"], "description": "ASR project with pytorch-lightning"}
{"name": "zaynmi/seada-vqa", "full_name": "zaynmi/seada-vqa", "topics": [], "description": "A pytorch implemetation of data augmentation method for visual question answering"}
{"name": "alstonlo/torch-influence", "full_name": "alstonlo/torch-influence", "topics": ["deep-learning", "influence-functions", "interpretability", "machine-learning"], "description": "A simple PyTorch implementation of influence functions."}
{"name": "declare-lab/identifiable-transformers", "full_name": "declare-lab/identifiable-transformers", "topics": ["attention-weights", "text-classification", "transformer", "explainable-ml", "explainable-artificial-intelligence"], "description": null}
{"name": "transformer-man/yolo-deepsort-flask", "full_name": "Transformer-man/yolo-deepsort-flask", "topics": ["pytorch", "yolo", "yolov3", "deepsort", "flask", "sort", "deep-sort", "cnn-model", "web", "cnn"], "description": "Target detection and multi target tracking platform based on Yolo DeepSort and Flask."}
{"name": "xu-peng-tao/ssd-pruning-and-quantization", "full_name": "xu-peng-tao/SSD-Pruning-and-quantization", "topics": ["ssd", "prune", "pruning", "quantization", "quantification", "compression", "pytorch"], "description": "Pruning and quantization for SSD.  Model compression."}
{"name": "dulaku/progan-for-humans", "full_name": "dulaku/ProGAN-for-Humans", "topics": [], "description": "Pytorch code for ProGAN optimized for human reading over machine execution"}
{"name": "harlen520/chid_bert_baseline", "full_name": "Tanh-wink/Chid_Bert_baseline", "topics": ["chid", "chid-bert-baseline", "pytorch", "bert"], "description": "A based-bert baseline for Chinese idiom cloze test with pytorch."}
{"name": "bshall/hubert", "full_name": "bshall/hubert", "topics": ["pytorch", "representation-learning", "speech", "voice-conversion"], "description": "HuBERT content encoders for: A Comparison of Discrete and Soft Speech Units for Improved Voice Conversion"}
{"name": "mr-talhailyas/segnext", "full_name": "Mr-TalhaIlyas/SegNext", "topics": ["deep-learning", "nmf", "nmf-decomposition", "pytroch", "segmentation", "segnext"], "description": "SegNext Implementation in PyTorch"}
{"name": "thomas-schillaci/simple", "full_name": "thomas-schillaci/SimPLe", "topics": ["pytorch", "reinforcement-learning"], "description": "PyTorch implementation of SimPLe (Simulated Policy Learning) on the Atari 100k benchmark."}
{"name": "eaglew/reviewrobot", "full_name": "EagleW/ReviewRobot", "topics": ["pytorch", "natural-language-generation", "generation", "nlp", "review-generation", "datasets", "score-prediction", "text-generation", "review-pairs"], "description": "Code for ReviewRobot: Explainable Paper Review Generation based on Knowledge Synthesis"}
{"name": "giddyyupp/advsegloss", "full_name": "giddyyupp/AdvSegLoss", "topics": ["pytorch", "gan", "deep-learning", "generative-adversarial-network", "image-colorization", "icip2021", "icip"], "description": "Official Pytorch implementation of Adversarial Segmentation Loss for Sketch Colorization [ICIP 2021]"}
{"name": "bm-k/troll-detector", "full_name": "BM-K/Troll-Detector", "topics": ["natural-language-processing", "troll-detection-nlp"], "description": "Troll Detector"}
{"name": "thu-keg/copen", "full_name": "THU-KEG/COPEN", "topics": ["knowledge-graph", "language-model", "nlp", "probing", "model-analysis"], "description": "The official code and dataset for EMNLP 2022 paper \"COPEN: Probing Conceptual Knowledge in Pre-trained Language Models\"."}
{"name": "ryantd/veloce", "full_name": "ryantd/veloce", "topics": ["ray", "distributed", "pytorch", "distributed-computing", "data-parallelism", "parameter-server", "deep-learning", "model-parallelism", "sparsity", "heterogeneity"], "description": "WIP. Veloce is a low-code Ray-based parallelization library that makes machine learning computation novel, efficient, and heterogeneous."}
{"name": "sea-snell/grokking", "full_name": "Sea-Snell/grokking", "topics": ["artificial-intelligence", "deep-learning", "grokking", "neural-network", "transformer", "transformer-models", "python", "pytorch"], "description": "unofficial re-implementation of \"Grokking: Generalization Beyond Overfitting on Small Algorithmic Datasets\""}
{"name": "ldz666666/style-atk", "full_name": "ldz666666/Style-atk", "topics": ["gans", "adversarial-attacks", "cvpr2021", "image-forensics", "generative-adversarial-network", "style-gan"], "description": "Author implementation of Exploring Adversarial Fake Images on Face Manifold (CVPR 2021 oral)"}
{"name": "cypherousskies/reading-for-listeners", "full_name": "CypherousSkies/reading-for-listeners", "topics": ["tts", "mozilla-tts", "bert", "ocrmypdf", "python", "deep-learning", "pdf", "nlp", "ocr", "transformers"], "description": "A deep-learning powered accessibility application which turns pdfs into audio files. Featuring ocr improvement and tts with inflection!"}
{"name": "easonyesheng/ccs", "full_name": "Easonyesheng/CCS", "topics": ["camera-calibration", "computer-vision", "deep-learning", "pytorch"], "description": "[RA-L&IROS22] A learning-based camera calibration system."}
{"name": "langfield/asta", "full_name": "langfield/asta", "topics": [], "description": "Shape annotations for numpy arrays and pytorch/tensorflow tensors."}
{"name": "shangqigao/bayeseg", "full_name": "shangqigao/BayeSeg", "topics": ["bayesian-deep-learning", "cardiac-segmentation", "image-decomposition", "image-segmentation", "model-generalization", "statistical-modeling", "variational-inference"], "description": "The official implementation of \"Joint Modeling of Image and Label Statistics for Enhancing Model Generalizability of Medical Image Segmentation\" via Pytorch"}
{"name": "houliang1996/slimgan", "full_name": "liang-hou/SlimGAN", "topics": ["gan", "pytorch", "aaai2021"], "description": "Slimmable Generative Adversarial Networks (AAAI 2021)"}
{"name": "karhoutam/per-fedavg", "full_name": "KarhouTam/Per-FedAvg", "topics": ["federated-learning", "meta-learning", "personalized-federated-learning", "pytorch"], "description": "PyTorch Implementation of Personalized federated learning with theoretical guarantees: A model-agnostic meta-learning approach"}
{"name": "balcilar/gnn-spectral-expressive-power", "full_name": "balcilar/gnn-spectral-expressive-power", "topics": ["gnn", "graph", "spectral-analysis", "expressiveness-analysis", "pytorch-geometric", "datasets", "tensorflow"], "description": "Code of \"Analyzing the Expressive Power of Graph Neural Networks in a Spectral Perspective\" paper published in ICLR2021"}
{"name": "gouxiangchen/soft-q-learning", "full_name": "gouxiangchen/soft-Q-learning", "topics": [], "description": "discrete soft Q learning(SQL) and soft Q imitation learning(SQIL) implementation in pytorch, simple!"}
{"name": "chocowu/synfue-paote", "full_name": "ChocoWu/Synfue-PAOTE", "topics": ["aop", "aspect-term-extraction", "pytorch", "opinion-term-extraction"], "description": "Source code for IJCAI 2021 paper: Learn from Syntax: Improving Pair-wise Aspect and Opinion Terms Extraction with Rich Syntactic Knowledge"}
{"name": "wwdkl/aabo", "full_name": "wwdkl/AABO", "topics": ["detection", "pytorch", "anchor-optimization"], "description": "Implementation for ECCV 2020 paper: AABO: Adaptive Anchor Box Optimization for Object Detection via Bayesian Sub-sampling."}
{"name": "vchoutas/torch-trust-ncg", "full_name": "vchoutas/torch-trust-ncg", "topics": [], "description": "Implementation of a Trust Region Newton Conjugate Gradient optimizer in Pytorch"}
{"name": "hansren1024/c-of", "full_name": "HansRen1024/C-OF", "topics": ["pytorch", "face-tracking", "face-detection", "deep-learning", "tracking", "computer-vision", "cnn"], "description": "Official implementation for paper \"A Real-Time and Long-Term Face Tracking Method Using Convolutional Neural Network and Optical Flow for Internet of Things\" using pytorch"}
{"name": "kadirnar/yolov5-deepsort", "full_name": "kadirnar/yolov5-strongsort", "topics": ["deep-learning", "object-detection", "computer-vision", "deep-sort", "object-tracker", "artificial-intelligence", "pytorch", "strongsort"], "description": "Minimal PyTorch implementation of YOLOv5 and StrongSort"}
{"name": "taochx/msnet", "full_name": "taochx/MSNet", "topics": ["deep-learning", "multispectral", "remote-sensing", "semantic-segmentation"], "description": " multispectral semantic segmentation network for remote sensing images"}
{"name": "jiahuei/sparse-image-captioning", "full_name": "jiahuei/sparse-image-captioning", "topics": ["image-captioning", "transformer", "pytorch", "weight-pruning", "up-down-captioner", "self-critical-sequence-training", "relation-transformer"], "description": "Image captioning with weight pruning in PyTorch"}
{"name": "daiquocnguyen/gnn-regvd", "full_name": "daiquocnguyen/GNN-ReGVD", "topics": ["vulnerability-detection", "graph-neural-networks", "graph-representation-learning", "vulnerability-identification", "cyber-security", "software-vulnerability"], "description": "Revisiting Graph Neural Networks for Vulnerability Detection (ICSE 2022) (Pytorch)"}
{"name": "code-kern-ai/embedders", "full_name": "code-kern-ai/embedders", "topics": ["classification", "machine-learning", "named-entity-recognition", "natural-language-processing", "ner", "nlp", "python", "representation-learning", "similarity-search"], "description": "With embedders, you can easily convert your texts into sentence- or token-level embeddings within a few lines of code. Use cases for this include similarity search between texts, information extraction such as named entity recognition, or basic text classification."}
{"name": "ovshake/stable-fashion", "full_name": "ovshake/stable-fashion", "topics": ["fashion", "pytorch", "stable-diffusion", "try-on"], "description": "Stable Fashion: A prompt based virtual try on repository"}
{"name": "cydia2018/vit-cifar10-pruning", "full_name": "Cydia2018/ViT-cifar10-pruning", "topics": ["vision-transformer", "cifar10", "pruning", "visual-transformer-pruning", "vit", "transformer", "vision-visiontransformer-pruning"], "description": "Vision Transformer Pruning"}
{"name": "wuziyi616/multi_part_assembly", "full_name": "Wuziyi616/multi_part_assembly", "topics": ["machine-learning", "point-cloud", "pytorch", "pytorch-lightning", "shapeassembly", "computer-vision"], "description": "Multi-Part Assembly Benchmark Implemented in PyTorch"}
{"name": "lukasstruppek/rickrolling-the-artist", "full_name": "LukasStruppek/Rickrolling-the-Artist", "topics": ["backdoor-attacks", "deep-learning", "generative-model", "security", "stable-diffusion", "text2image"], "description": "Source code for our paper \"Rickrolling the Artist: Injecting Invisible Backdoors into Text-Guided Image Generation Models\"."}
{"name": "jeromerony/augmented_lagrangian_adversarial_attacks", "full_name": "jeromerony/augmented_lagrangian_adversarial_attacks", "topics": ["adversarial-attacks", "pytorch", "adversarial-examples"], "description": "Code for the ICCV 2021 paper \"Augmented Lagrangian Adversarial Attacks\""}
{"name": "leesb7426/cvpr2022-task-discrepancy-maximization-for-fine-grained-few-shot-classification", "full_name": "leesb7426/CVPR2022-Task-Discrepancy-Maximization-for-Fine-grained-Few-Shot-Classification", "topics": ["cvpr2022", "few-shot-learning", "fine-grained-classification", "oral", "deep-learning", "image-classification", "tdm"], "description": "Official PyTorch Repository of \"Task Discrepancy Maximization for Fine-grained Few-Shot Classification\" (TDM, CVPR 2022 Oral Paper)"}
{"name": "facebookresearch/torchrec", "full_name": "pytorch/torchrec", "topics": ["pytorch", "gpu", "deep-learning", "cuda", "recommender-system", "recommendation-system", "sharding"], "description": "Pytorch domain library for recommendation systems"}
{"name": "shgaurav1/dvg", "full_name": "shgaurav1/DVG", "topics": ["ffmpeg", "gaussian-processes", "video", "video-generation", "video-generator", "video-processing", "video-synthesis", "diverse-video-generation", "convolutional-neural-networks", "deep-learning", "deep-neural-networks", "lstm-neural-networks", "machine-learning"], "description": "Diverse Video Generation using a Gaussian Process Trigger"}
{"name": "wulalago/fetalcpseg", "full_name": "wulalago/FetalCPSeg", "topics": ["medical-image-segmentation", "deep-learning", "attention-mechanism", "fetal-mri", "cortical-plate-segmentation"], "description": "A Deep Attentive Convolutional Neural Network for Automatic Cortical Plate Segmentation in Fetal MRI"}
{"name": "kyfafyd/mirrorgan", "full_name": "Kyfafyd/MirrorGAN", "topics": ["text2image", "image-captioning", "mirrorgan", "pytorch"], "description": "Reproduction of the paper MirrorGAN: Learning Text-to-image Generation by Redescription"}
{"name": "jssprz/visual_syntactic_embedding_video_captioning", "full_name": "jssprz/visual_syntactic_embedding_video_captioning", "topics": ["video-captioning", "msvd", "msr-vtt", "wacv2021", "deep-learning", "pos-tagging", "representation-learning", "encoder-decoder", "syntactic-representations", "video-description", "video-to-text"], "description": "Source code of the paper titled *Improving Video Captioning with Temporal Composition of a Visual-Syntactic Embedding*"}
{"name": "adonis-galaxy/dspoint", "full_name": "Adonis-galaxy/DSPoint", "topics": [], "description": "Official pytorch implementation of \"DSPoint: Dual-scale Point Cloud Recognition with High-frequency Fusion\""}
{"name": "liuf1990/cfsm", "full_name": "liuf1990/CFSM", "topics": ["computer-vision", "face-recognition", "face-synthesis", "pytorch"], "description": "Controllable and Guided Face Synthesis for Unconstrained Face Recognition (ECCV 2022)"}
{"name": "namespace-pt/news-recommendation", "full_name": "namespace-Pt/News-Recommendation", "topics": ["news-recommendations", "pytorch"], "description": "An investigation of News Recommendation"}
{"name": "muse1998/mmnet", "full_name": "muse1998/MMNet", "topics": ["computer-vision", "expression", "micro-expression-recognition", "pytorch", "transformer", "video-processing", "ijcai2022"], "description": "a novel two-branch MER paradigm"}
{"name": "seominseok0429/learning-loss-for-active-learning-pytorch", "full_name": "seominseok0429/Learning-Loss-for-Active-Learning-Pytorch", "topics": [], "description": "Learning Loss for Active Learning Pytorch Implementation,(reproduction)"}
{"name": "chanceqz/rooftopsegmatation", "full_name": "ChanceQZ/RoofTopSegmatation", "topics": [], "description": "Roof Top Segmatation project based on Deeplab v3 plus via pytorch"}
{"name": "toriml/dnn-bench", "full_name": "Talmaj/DNN-bench", "topics": ["dnn-bench", "deep-learning", "pytorch", "tensorflow", "onnxruntime", "docker", "optimization", "speedup"], "description": "A library that lets you easily increase efficiency of your deep learning models with no loss of accuracy."}
{"name": "codekgu/bilevel-graph-neural-network", "full_name": "codeKgu/BiLevel-Graph-Neural-Network", "topics": ["graph-convolutional-networks", "graph-attention-networks", "drug-drug-interaction", "icml", "covid-19", "drugbank", "graph-neural-networks", "deep-learning", "representation-learning"], "description": "Bi-Level Graph Neural Networks for Drug-Drug Interaction Prediction. ICML 2020 Graph Representation Learning and Beyond (GRL+) Workshop"}
{"name": "hellowangqian/sganet-crowd-counting", "full_name": "hellowangqian/sganet-crowd-counting", "topics": ["crowdcounting"], "description": "A Pytorch implementation of SGANet for crowd counting"}
{"name": "linjieli222/hero_video_feature_extractor", "full_name": "linjieli222/HERO_Video_Feature_Extractor", "topics": ["pytorch", "slowfast", "resnet", "video-features", "vision-and-language"], "description": "Video Feature Extraction Code for EMNLP 2020 paper \"HERO: Hierarchical Encoder for Video+Language Omni-representation Pre-training\""}
{"name": "ruiking04/coca", "full_name": "ruiking04/COCA", "topics": ["anomaly-detection", "time-series", "pytorch", "deep-learning", "timeseries"], "description": "Deep Contrastive One-Class Time Series Anomaly Detection"}
{"name": "stephanakkerman/tensortrade", "full_name": "StephanAkkerman/TensorTrade", "topics": ["tensortrade", "benchmark", "heatmap", "reinforcement-learning", "python", "tensorflow", "automated-trading", "automated-trading-bot", "binance", "cryptocurrency", "crypto"], "description": "This repository hosts all my code related to TensorTrade. It consists of the main program, its old versions, and some extras for more insights."}
{"name": "arangesh/gpcyclegan", "full_name": "arangesh/GPCycleGAN", "topics": ["gaze-estimation", "generative-adversarial-network", "driver-behavior", "conditional-gans"], "description": "Datasets, code and models from our driver gaze estimation works over the last few years."}
{"name": "andreweiner/flowtorch", "full_name": "FlowModelingControl/flowtorch", "topics": ["machine-learning", "dynamic-mode-decomposition", "proper-orthogonal-decomposition", "pytorch", "jupyter", "openfoam", "netcdf", "tau", "davis", "csv", "hdf5", "ipsp", "dmd", "pod", "cnm"], "description": "flowTorch - a Python library for analysis and reduced-order modeling of fluid flows"}
{"name": "maratsaidov/artificial-text-detection", "full_name": "MaratSaidov/artificial-text-detection", "topics": ["deep-learning", "natural-language-processing", "binary-classification", "machine-translation", "huggingface", "pytorch", "attention-mechanism", "transformers", "machine-learning", "python", "data-version-control", "data-versioning", "poetry", "github-actions", "python-package", "thesis-project", "weights-and-biases", "discriminator", "generator", "generative-model"], "description": "Python framework for artificial text detection: NLP approaches to compare natural text against generated by neural networks."}
{"name": "victorwz/valm", "full_name": "Victorwz/VaLM", "topics": ["deep-learning", "pre-trained-language-models", "vision-language", "visually-grounded-language-learning"], "description": "VaLM: Visually-augmented Language Modeling"}
{"name": "p-lambda/swords", "full_name": "p-lambda/swords", "topics": ["swords", "benchmark", "nlp", "lexical-substitution", "writing-assistant"], "description": "The Stanford Word Substitution (Swords) Benchmark"}
{"name": "joslefaure/hit", "full_name": "joslefaure/HIT", "topics": ["action-detection", "computer-vision", "open-source", "paper", "transformer", "wacv2023"], "description": "Official Implementation of our WACV2023 paper: \u201cHolistic Interaction Transformer Network for Action Detection\u201d"}
{"name": "thuwzy/zhusuan-pytorch", "full_name": "thuwzy/ZhuSuan-PyTorch", "topics": ["pytorch", "bayesian-inference", "deep-learning", "machine-learning", "python", "bayesian", "variational-inference", "ppl", "zhusuan"], "description": "An Elegant Library for Bayesian Deep Learning in PyTorch"}
{"name": "turian/torchsynth", "full_name": "torchsynth/torchsynth", "topics": ["audio", "synthesizers", "gpu", "torch", "machine-learning", "pytorch"], "description": "A GPU-optional modular synthesizer in pytorch, 16200x faster than realtime, for audio ML researchers."}
{"name": "cq615/kt-dynamic-mri-reconstruction", "full_name": "cq615/kt-Dynamic-MRI-Reconstruction", "topics": ["deep-learning", "mri-reconstruction"], "description": "[MRM'21] Complementary Time-Frequency Domain Network for Dynamic Parallel MR Image Reconstruction. [MICCAI'19] k-t NEXT: Dynamic MR Image Reconstruction Exploiting Spatio-Temporal Correlations"}
{"name": "alilotfi92/infomaxvae", "full_name": "AliLotfi92/InfoMaxVAE", "topics": ["vae", "mutual-information", "autoregressive", "representation-learning"], "description": "InfoMax-VAE pytorch implementation"}
{"name": "eagomez2/upf-smc-speech-enhancement-thesis", "full_name": "eagomez2/upf-smc-speech-enhancement-thesis", "topics": ["speech-enhancement", "deep-learning", "speech-quality", "noise-suppression"], "description": "Deep Noise Suppression for Real Time Speech Enhancement in a Single Channel Wide Band Scenario"}
{"name": "rajghugare19/rl-algorithms", "full_name": "RajGhugare19/RL-algorithms", "topics": [], "description": "Pytorch implementations deep RL research papers"}
{"name": "zeke-xie/artificial-neural-variability-for-deep-learning", "full_name": "zeke-xie/artificial-neural-variability-for-deep-learning", "topics": ["optimizer", "deep-learning", "machine-learning", "optimization", "neuroscience", "pytorch", "noise-memorization"], "description": "The PyTorch Implementation of Variable Optimizers/ Neural Variable Risk Minimization proposed in our Neural Computation paper: Artificial Neural Variability for Deep Learning: On overfitting, Noise Memorization, and Catastrophic Forgetting."}
{"name": "kevaday/alphazero-general", "full_name": "kevaday/alphazero-general", "topics": ["reinforcement-learning", "alphazero", "deep-learning", "game", "board-game", "cython"], "description": "A fast, generalized, and modified implementation of Deepmind's distinguished AlphaZero in PyTorch."}
{"name": "prs-eth/odecrop", "full_name": "prs-eth/ODEcrop", "topics": ["differential-equations", "node", "rnn", "ode", "ode-model", "gru", "lstm"], "description": "[TGRS21] Crop Classification under Varying Cloud Cover with Neural Ordinary Differential Equations"}
{"name": "openspyrit/spyrit", "full_name": "openspyrit/spyrit", "topics": ["deep-learning", "pypi", "torch", "image-reconstruction", "medical-imaging", "python", "single-pixel-camera"], "description": "A Python toolbox for deep image reconstruction, with emphasis on single-pixel imaging."}
{"name": "liviniuk/dorn_depth_estimation_pytorch", "full_name": "liviniuk/DORN_depth_estimation_Pytorch", "topics": ["depth-estimation", "monocular-depth-estimation", "pytorch", "deep-learning", "neural-network", "computer-vision"], "description": "Pytorch implementation of \"Deep Ordinal Regression Network for Monocular Depth Estimation\" paper by Fu et. al."}
{"name": "princeton-nlp/calm-textgame", "full_name": "princeton-nlp/calm-textgame", "topics": ["text-based-game", "nlp", "rl", "gpt", "n-gram", "calm"], "description": "[EMNLP 2020] Keep CALM and Explore: Language Models for Action Generation in Text-based Games"}
{"name": "liewjunhao/thin-object-selection", "full_name": "liewjunhao/thin-object-selection", "topics": ["pytorch", "interactive-segmentation"], "description": "Deep Interactive Thin Object Selection"}
{"name": "rongliangzi/marunet", "full_name": "rongliangzi/MARUNet", "topics": ["pytorch", "crowdcounting", "cnn", "crowd-counting"], "description": "Multi-level Attention Refined UNet for crowd counting"}
{"name": "ipc-lab/ndic", "full_name": "ipc-lab/NDIC", "topics": ["compression", "deep-learning", "information-theory", "pytorch", "distributed", "dsc", "image-compression", "kitti", "side-information", "stereo-images", "common-information-model", "cityscapes"], "description": "Neural Distributed Image Compression using Common Information (NDIC) [DCC 2022]"}
{"name": "lucidrains/cross-transformers-pytorch", "full_name": "lucidrains/cross-transformers-pytorch", "topics": ["artificial-intelligence", "deep-learning", "transformers", "attention-mechanism", "few-shot-learning"], "description": "Implementation of Cross Transformer for spatially-aware few-shot transfer, in Pytorch"}
{"name": "ellaampy/croptypemapping", "full_name": "ellaampy/CropTypeMapping", "topics": ["sits", "pse-tsa", "sentinel-1", "sentinel-2", "deep-learning", "cropmapping"], "description": null}
{"name": "omarfoq/knn-per", "full_name": "omarfoq/knn-per", "topics": ["deep-learning", "federated-learning", "machine-learning", "personalized-federated-learning", "pytorch"], "description": "Official code for \"Personalized Federated Learning through Local Memorization\" (ICML'22) "}
{"name": "lliutianc/gan-flow", "full_name": "lliutianc/gan-flow", "topics": ["density-estimation", "generative-adversarial-network", "normalizing-flows"], "description": null}
{"name": "adeelh/pytorch-fpn", "full_name": "AdeelH/pytorch-fpn", "topics": ["semantic-segmentation", "fpn", "feature-pyramid-network", "deep-learning", "deeplearning", "machine-learning", "implementation-of-research-paper", "pytorch", "pytorch-implementation", "neural-network", "pytorch-fpn", "semantic-segmentation-architectures", "computer-vision", "resnet", "efficientnet"], "description": "PyTorch implementations of some FPN-based semantic segmentation architectures: vanilla FPN, Panoptic FPN, PANet FPN; with ResNet and EfficientNet backbones."}
{"name": "anexplore/cnn_for_captcha", "full_name": "anexplore/cnn_for_captcha", "topics": ["captcha", "imagecaptcha", "ocr", "deep-learning", "keras", "tensorflow", "torch"], "description": "\u56fe\u7247\u7c7b\u9a8c\u8bc1\u7801\u8bc6\u522b(\u6570\u5b57\u9a8c\u8bc1\u7801/\u7f3a\u53e3\u9a8c\u8bc1\u7801/\u6587\u5b57\u9a8c\u8bc1\u7801/\u65cb\u8f6c\u9a8c\u8bc1\u7801/\u76f8\u4f3c\u7269\u4f53\u9a8c\u8bc1\u7801)"}
{"name": "neuronflow/blob_loss", "full_name": "neuronflow/blob_loss", "topics": ["computer-vision", "deep-learning", "semantic-segmentation", "instance-imabalance"], "description": "blob loss example implementation"}
{"name": "amazon-research/tubelet-transformer", "full_name": "amazon-science/tubelet-transformer", "topics": ["transformer", "action-detection", "ava", "jhmdb", "tubelet-transformer", "tuber", "ucf"], "description": "This is an official implementation of TubeR: Tubelet Transformer for Video Action Detection"}
{"name": "declare-lab/mime", "full_name": "declare-lab/MIME", "topics": ["dialogue-systems", "conversational-bots", "natural-language-processing", "transformer-encoder", "empathetic-dialogues", "empathetic-responses"], "description": "This repository contains PyTorch implementations of the models from the paper An Empirical Study MIME: MIMicking Emotions for Empathetic Response Generation."}
{"name": "xuanyuan14/ares", "full_name": "xuanyuan14/ARES", "topics": ["pre-trained-language-models", "pretrained-models", "sigir2022", "information-retrieval", "bert", "transformer", "natural-language-processing"], "description": "SIGIR'22 paper: Axiomatically Regularized Pre-training for Ad hoc Search"}
{"name": "caipeide/autorace", "full_name": "caipeide/autorace", "topics": ["deep-learning", "artificial-intelligence", "visual-navigation", "rc-car", "jetson-nano", "robot-race", "hkust"], "description": "Autonomous RC-Car racing competition in HKUST"}
{"name": "yuta-hi/pytorch_bayesian_unet", "full_name": "yuta-hi/pytorch_bayesian_unet", "topics": ["pytorch", "cnn", "unet", "bayesian", "uncertainty", "pix2pix", "adversarial-training"], "description": "Migrate to PyTorch. Re-implementation of Bayesian Convolutional Neural Networks (BCNNs)"}
{"name": "ppashakhanloo/codetrek", "full_name": "ppashakhanloo/CodeTrek", "topics": ["codeql", "deep-learning", "code-representation", "pytorch", "semantic-analysis", "relational-database"], "description": "A powerful relational representation of source code"}
{"name": "njustczr/cspdarknet53", "full_name": "njustczr/cspdarknet53", "topics": ["imagenet", "pytorch"], "description": "csdarknet53/darknet53-pytorch"}
{"name": "ifnspaml/cil_segmentation", "full_name": "ifnspaml/CIL_Segmentation", "topics": ["semantic-segmentation", "incremental-learning", "neural-network", "deep-learning", "erfnet"], "description": "[ITSC 2020] Class-Incremental Learning for Semantic Segmentation Re-Using Neither Old Data Nor Old Labels"}
{"name": "mmalekzadeh/honest-but-curious-nets", "full_name": "mmalekzadeh/honest-but-curious-nets", "topics": ["privacy", "machine-learning", "deep-learning", "deep-neural-networks", "adversarial-machine-learning", "machine-learning-security", "data-privacy", "information-theory", "mutual-information", "entropy", "pytorch", "celeba-dataset", "utkface"], "description": "Honest-but-Curious Nets: Sensitive Attributes of Private Inputs Can Be Secretly Coded into the Classifiers' Outputs (ACM CCS'21)"}
{"name": "tommasocarraro/ltntorch", "full_name": "tommasocarraro/LTNtorch", "topics": ["neural-symbolic-computing", "fuzzy-logic", "machine-learning", "framework", "pytorch"], "description": "PyTorch implementation of Logic Tensor Networks, a Neural-Symbolic framework."}
{"name": "samyuen101234/masked_face_recognition", "full_name": "SamYuen101234/Masked_Face_Recognition", "topics": ["facial-recognition", "masked-face-recognition", "cnn", "pytorch", "arcface", "triplet-loss", "inceptionresnet", "mtcnn", "efficientnet", "se-resnext", "artificial-intelligence", "machine-learning", "computer-vision", "hkust", "online-triplet-mining", "triplet-mining-sampler", "face-alignment", "transfer-learining"], "description": "2020/2021 HKUST CSE FYP Masked Facial Recognition, developer: Sam Yuen, Alex Xie, Tony Cheng"}
{"name": "chanb/rl_sandbox_public", "full_name": "chanb/rl_sandbox_public", "topics": ["reinforcement-learning", "deep-reinforcement-learning", "deep-learning", "pytorch", "gym"], "description": "PyTorch implementation of (Deep) Reinforcement Learning (RL) algorithms"}
{"name": "williamcchuang/graphlime", "full_name": "WilliamCCHuang/GraphLIME", "topics": ["graph-neural-networks", "graph-algorithms", "explainable-ai", "open-source"], "description": "This is a Pytorch implementation of GraphLIME"}
{"name": "jmaces/robust-nets", "full_name": "jmaces/robust-nets", "topics": ["neural-networks", "deep-learning", "inverse-problems", "stability", "robustness", "fastmri", "adversarial-examples"], "description": "Official implementation of the paper \"Solving Inverse Problems With Deep Neural Networks - Robustness Included?\" by M. Genzel, J. Macdonald, and M. M\u00e4rz (2020)."}
{"name": "lxucs/coref-hoi", "full_name": "lxucs/coref-hoi", "topics": ["coreference-resolution", "higher-order", "nlp", "pytorch"], "description": "PyTorch implementation of the end-to-end coreference resolution model with different higher-order inference methods."}
{"name": "lukashedegaard/continual-skeletons", "full_name": "LukasHedegaard/continual-skeletons", "topics": ["machine-learning", "deep-learning", "graph-neural-networks", "online-inference", "continual-inference", "convolutional-neural-networks", "skeleton-based-action-recognition"], "description": "Official codebase for \"Online Skeleton-based Action Recognition with Continual Spatio-Temporal Graph Convolutional Networks\""}
{"name": "nihalsid/deepfillv2-pylightning", "full_name": "nihalsid/deepfillv2-pylightning", "topics": ["pytorch", "python", "image-inpainting", "deep-learning", "pytorch-lightning"], "description": "Clean minimal implementation of Free-Form Image Inpainting with Gated Convolutions in pytorch lightning. Inspired from pytorch implementation by @avalonstrel."}
{"name": "jd730/strg", "full_name": "jd730/STRG", "topics": [], "description": "Pytorch Implementation of  Videos as Space-Time Region Graphs"}
{"name": "dd1github/deepsmote", "full_name": "dd1github/DeepSMOTE", "topics": [], "description": "Pytorch implementation of \"DeepSMOTE: Fusing Deep Learning and SMOTE for Imbalanced Data\"."}
{"name": "sxjyjay/transformer-backbone", "full_name": "SxJyJay/Transformer-backbone", "topics": ["transformer", "encoder", "decoder", "pytorch"], "description": "The reproduce of Transformer architecture in paper \"Attention is all your need\""}
{"name": "kwangka/simcse_unsup", "full_name": "KwangKa/SIMCSE_unsup", "topics": ["nlp", "pytorch", "chinese", "sentence-embeddings"], "description": "\u4e2d\u6587\u65e0\u76d1\u7763SimCSE Pytorch\u5b9e\u73b0"}
{"name": "carlsummer/python_developer_tools", "full_name": "carlsummer/python_developer_tools", "topics": ["deep-learning", "pytorch", "tricks"], "description": "\u8bba\u6587\u590d\u73b0\uff0c\u591a\u673a\u591a\u5361"}
{"name": "yunanzhu/pytorch-testrankiqa", "full_name": "YunanZhu/Pytorch-TestRankIQA", "topics": [], "description": "RankIQA model files in Pytorch. Test RankIQA on TID2013 or LIVE dataset in Pytorch."}
{"name": "deephub-ai/torch-handle", "full_name": "deephub-ai/torch-handle", "topics": ["pytorch", "cross-validation", "tensorboard", "machine-learning", "deep-learning", "python", "gradient-accumulation", "custom-metrics", "gpu", "notebooks", "deep-learning-library", "deep-learning-framework"], "description": "TorchHandle makes your PyTorch development more efficient and make you use PyTorch more comfortable"}
{"name": "tia-lab/tiatoolbox", "full_name": "TissueImageAnalytics/tiatoolbox", "topics": ["python", "computational-pathology", "whole-slide-imaging", "deep-learning", "digital-pathology", "histopathology", "image-analysis", "machine-learning", "tissue-analysis", "tissue-segmentation", "cell-classification", "cell-segmentation", "medical-image-analysis", "stain-normalization"], "description": "Computational Pathology Toolbox developed by TIA Centre, University of Warwick."}
{"name": "dsshim0125/dacl", "full_name": "dsshim0125/dacl", "topics": ["deep-learning", "pytorch", "domain-adaptation", "unsupervised-learning", "depth-estimation", "semantic-segmentation", "contrastive-learning"], "description": "\"DACL: Learning a Domain-Agnostic Contrastive Representation for Dense Prediction beyond Distribution Gap\" (arXiv)"}
{"name": "sviperm/neuro-comma", "full_name": "sviperm/neuro-comma", "topics": ["deep-learning", "pytorch", "bert", "punctuation-marks", "transformer-models", "punctuation-restoration", "ner", "machine-learning", "python", "nlp", "russian"], "description": "\ud83c\uddf7\ud83c\uddfa Punctuation restoration production-ready model for Russian language \ud83c\uddf7\ud83c\uddfa"}
{"name": "uof1745-cmd/pcn", "full_name": "uof1745-cmd/PCN", "topics": [], "description": "[CVPR2021] Pytorch implementation for paper ''Progressively Complementary Network for Fisheye Image Rectification Using Appearance Flow''"}
{"name": "coleygroup/rxn-ebm", "full_name": "coleygroup/rxn-ebm", "topics": ["deep-learning", "graph-neural-networks", "pytorch", "reranking", "retrosynthesis"], "description": "Energy-based modeling of chemical reactions"}
{"name": "basilevh/image-outpainting", "full_name": "basilevh/image-outpainting", "topics": ["image-outpainting", "wikiart", "artwork", "gan", "pytorch", "image-extrapolation", "image-inpainting", "generative-adversarial-network", "machine-learning", "computer-vision", "image-cropping"], "description": "Image Outpainting and Harmonization using GANs - PyTorch Implementation (official)"}
{"name": "kamalkraj/swin-transformer-serve", "full_name": "kamalkraj/Swin-Transformer-Serve", "topics": ["torch", "pytorch", "deploy", "torchserve", "swin-transformer", "microsoft", "eager-load", "torchscript", "docker", "cuda", "python3"], "description": "Deploy Swin Transformer using TorchServe "}
{"name": "affjljoo3581/g2net-detecting-continuous-gravitational-waves", "full_name": "affjljoo3581/G2Net-Detecting-Continuous-Gravitational-Waves", "topics": ["apex", "cnn", "convnext", "gravitational-waves", "kaggle", "pytorch", "timm"], "description": "\ud83e\udd4812th place solution on G2Net Detecting Continuous Gravitational Waves\ud83e\udd48"}
{"name": "linux-cpp-lisp/opt_einsum_fx", "full_name": "Linux-cpp-lisp/opt_einsum_fx", "topics": ["einsum", "pytorch", "pytorch-fx", "optimization"], "description": "Einsum optimization using opt_einsum and PyTorch FX graph rewriting"}
{"name": "fallenshock/sinddm", "full_name": "fallenshock/SinDDM", "topics": ["diffusion", "diffusion-models", "generative-model", "harmonization", "official", "single-image", "style-transfer", "text-guided-image-editing", "text-guided-image-manipulation", "sinddm", "text-guided-generation", "single-image-generation"], "description": "Official pytorch implementation of the paper: \"SinDDM: A Single Image Denoising Diffusion Model\""}
{"name": "ogunlao/saint", "full_name": "ogunlao/saint", "topics": ["transformer", "tabular-data", "semi-supervised-learning"], "description": "Unofficial Pytorch implementation of SAINT: Improved Neural Networks for Tabular Data via Row Attention and Contrastive Pretraining https://arxiv.org/abs/2106.01342"}
{"name": "ai4ce/deepsoro", "full_name": "ai4ce/DeepSoRo", "topics": ["robotics", "softrobot", "perception", "data-driven", "deep-learning", "soft-robotics", "softrobotics"], "description": "[RA-L/ICRA2020] Real-time Soft Body 3D Proprioception via Deep Vision-based Sensing"}
{"name": "beyond-ml-labs/beyondml", "full_name": "Beyond-ML-Labs/BeyondML", "topics": ["deep-learning", "machine-learning", "neural-network", "pytorch", "tensorflow"], "description": "Software for developing sparse, performant, multitask artificial neural networks"}
{"name": "ravoxsg/summareranker-acl-22-", "full_name": "Ravoxsg/SummaReranker-ACL-22", "topics": ["deep-learning", "nlp", "summarization"], "description": "Source code for SummaReranker (ACL 22)"}
{"name": "ovbystrova/instructionner", "full_name": "ovbystrova/InstructionNER", "topics": ["ner", "nlp", "t5", "generative-ner", "natural-language-processing", "pythohn"], "description": "Unofficial implementation of paper \"InstructionNER: A Multi-Task Instruction-Based Generative Framework for Few-shot NER\" (https://arxiv.org/pdf/2203.03903v1.pdf)"}
{"name": "mechanicalsea/sugar", "full_name": "mechanicalsea/sugar", "topics": ["neural-architecture-search", "pytorch", "speaker-recognition", "speaker-verification", "time-delay-neural-network", "efficienttdnn"], "description": "Efficient Speech Processing Tookit for Automatic Speaker Recognition"}
{"name": "mnamysl/nat-acl2020", "full_name": "mnamysl/nat-acl2020", "topics": ["deep-learning", "nlp", "natural-language-processing", "sequence-labeling", "named-entity-recognition", "robustness", "ocr", "optical-character-recognition", "nat", "flair", "typos", "flair-framework", "misspellings", "ner", "data-augmentation", "stability-training"], "description": null}
{"name": "topo-epfl/crossloc", "full_name": "TOPO-EPFL/CrossLoc", "topics": ["computer-vision", "deep-learning", "drone", "robotics", "visual-localization", "sim-to-real"], "description": "[CVPR'22] CrossLoc localization: a cross-modal visual representation learning method for absolute localization"}
{"name": "sparkjiao/self-training-mrc", "full_name": "SparkJiao/Self-Training-MRC", "topics": [], "description": "This is the pytorch implementation of the long paper on ACL 2020: A Self-Training Method for Machine Reading Comprehension with Soft Evidence Extraction."}
{"name": "avacaondata/nlpboost", "full_name": "avacaondata/nlpboost", "topics": ["deep-learning", "nlp", "pytorch", "text-classification", "text-generation", "hyperparameter-optimization", "hyperparameter-tuning", "natural-language-generation", "natural-language-processing", "natural-language-understanding"], "description": "Python library for automatic training, optimization and comparison of Transformer models on most NLP tasks."}
{"name": "rucaibox/recbole-cdr", "full_name": "RUCAIBox/RecBole-CDR", "topics": ["cross-domain", "pytorch", "recbole", "recommendation"], "description": "This is a library built upon RecBole for cross-domain recommendation algorithms"}
{"name": "vita-group/weaknas", "full_name": "VITA-Group/WeakNAS", "topics": ["pytorch", "neural-architecture-search", "nasbench", "nas-bench-101", "nas-bench-201", "mobilenet-space", "deep-learning"], "description": "[NeurIPS 2021] \u201cStronger NAS with Weaker Predictors\u201c, Junru Wu, Xiyang Dai, Dongdong Chen, Yinpeng Chen, Mengchen Liu, Ye Yu, Zhangyang Wang, Zicheng Liu, Mei Chen and Lu Yuan"}
{"name": "neurotorch/neurotorch", "full_name": "NeuroTorch/NeuroTorch", "topics": ["deep-learning", "neuroscience", "pytorch", "neural-networks", "python"], "description": "Biologically based dynamics for machine learning and deep learning tools for neuroscience."}
{"name": "zhiqiangdon/online-augment", "full_name": "zhiqiangdon/online-augment", "topics": ["data-augmentation", "automl", "less-domain-knowledge", "auto-augment", "online-augment", "stn", "autoaugment", "pytorch", "vae", "efficient-training", "generative-adversarial-network", "online-learning"], "description": "Code for \"OnlineAugment: Online Data Augmentation with Less Domain Knowledge\" (ECCV 2020)"}
{"name": "ayaanzhaque/sdcnl", "full_name": "ayaanzhaque/SDCNL", "topics": ["depression", "label-correction", "deep-learning", "scraped-data", "depression-classification", "noisy-labels", "nlp", "suicide", "depression-identification", "reddit", "embeddings", "noise", "icann2021"], "description": "Deep Learning for Suicide and Depression Identification with Unsupervised Label Correction (ICANN 2021)"}
{"name": "dfki-nlp/thermostat", "full_name": "DFKI-NLP/thermostat", "topics": ["explainability", "interpretability", "natural-language-processing", "transformers", "datasets", "feature-attribution", "saliency-maps", "heatmaps", "captum", "explainable-nlp"], "description": "Collection of NLP model explanations and accompanying analysis tools"}
{"name": "mozanunal/sparsect", "full_name": "mozanunal/SparseCT", "topics": ["reconstruction", "computed-tomography", "low-dose", "deep-learning"], "description": "A tool to develop sparse view CT reconstruction algorithms. It offers an interface to develop methods and quickly compare it with baseline methods."}
{"name": "yihuacheng/gaze360", "full_name": "yihuacheng/Gaze360", "topics": [], "description": "Gaze estimatin code. The Pytorch Implementation of \"Gaze360: Physically Unconstrained Gaze Estimation in the Wild\"."}
{"name": "codewithzichao/deepclassifier", "full_name": "codewithzichao/DeepClassifier", "topics": ["pytorch", "text-classification", "torch", "nlp", "deep-learning", "deepclassifier"], "description": "DeepClassifier is aimed at building general text classification model library.It's easy and user-friendly to build any text classification task."}
{"name": "kdmayer/pv_pipeline", "full_name": "kdmayer/PV_Pipeline", "topics": ["computer-vision", "solar-panels", "pv-systems", "earth-observation", "deepsolar", "renewable-energy", "tile-downloader", "tile-processor", "deep-learning", "remote-sensing", "satellite-imagery"], "description": "PyTorch models and pipeline developed for \"DeepSolar for Germany\". For reference, the paper can found at https://ieeexplore.ieee.org/document/9203258"}
{"name": "pengjieren/repeatnet-pytorch", "full_name": "PengjieRen/RepeatNet-pytorch", "topics": [], "description": "This is a pytorch (>=1.3.0) implementation of RepeatNet"}
{"name": "tmdt-buw/karolos", "full_name": "tmdt-buw/karolos", "topics": ["pytorch", "reinforcement-learning"], "description": null}
{"name": "huanghuidmml/texttoy", "full_name": "huanghuidmml/tfbert", "topics": ["tensorflow", "bert", "electra", "albert", "trainer", "xla", "mixed-precision", "ernie", "ernie-gram", "chinesebert"], "description": "\u57fa\u4e8etensorflow1.x\u7684\u9884\u8bad\u7ec3\u6a21\u578b\u8c03\u7528\uff0c\u652f\u6301\u5355\u673a\u591a\u5361\u3001\u68af\u5ea6\u7d2f\u79ef\uff0cXLA\u52a0\u901f\uff0c\u6df7\u5408\u7cbe\u5ea6\u3002\u53ef\u7075\u6d3b\u8bad\u7ec3\u3001\u9a8c\u8bc1\u3001\u9884\u6d4b\u3002"}
{"name": "vnk8071/anomaly-detection-in-industry-manufacturing", "full_name": "vnk8071/anomaly-detection-in-industry-manufacturing", "topics": ["anomaly-detection", "aws-ec2", "flask", "patchcore", "anomalib", "cflow", "deep-learning", "fastflow", "ganomaly", "pytorch", "dfkde", "draem", "padim", "stfpm"], "description": "Pipeline training and inference Anomalib models UI in Anomaly Detection"}
{"name": "daviddmc/nesvor", "full_name": "daviddmc/NeSVoR", "topics": ["3d-reconstruction", "deep-learning", "image-reconstruction", "image-registration", "medical-imaging", "implicit-neural-representation", "neural-network", "transformers", "mri", "pytorch"], "description": "NeSVoR is a package for GPU-accelerated slice-to-volume reconstruction."}
{"name": "separius/simclrv2-pytorch", "full_name": "Separius/SimCLRv2-Pytorch", "topics": ["simclr", "contrastive", "pretrained", "selfsupervised", "resnet", "pytorch"], "description": "Pretrained SimCLRv2 models in Pytorch"}
{"name": "lornatang/real_esrgan-pytorch", "full_name": "Lornatang/Real_ESRGAN-PyTorch", "topics": ["pytorch", "real-esrgan", "super-resolution"], "description": "PyTorch implements `Real-ESRGAN: Training Real-World Blind Super-Resolution with Pure Synthetic Data` paper."}
{"name": "rwth-e3d/ifcnet-models", "full_name": "RWTH-E3D/ifcnet-models", "topics": ["deep-learning", "computer-vision", "dataset", "ifc", "industry-foundation-classes", "bim", "building-information-modelling"], "description": "Code for the EG-ICE 2021 Paper \"IFCNet: A Benchmark Dataset for IFC Entity Classification\""}
{"name": "rlai-lab/regularized-gradienttd", "full_name": "rlai-lab/Regularized-GradientTD", "topics": ["learning-algorithm", "neural-network", "reinforcement-learning", "icml-2020"], "description": "Code repo for Gradient Temporal-Difference Learning with Regularized Corrections paper."}
{"name": "limingxing00/retinal-vessel-segmentation-isbi2022", "full_name": "Limingxing00/Retinal-Vessel-Segmentation-ISBI2022", "topics": ["pytorch", "deep-learning"], "description": "Accepted by ISBI 2022"}
{"name": "dongqifu/sdg", "full_name": "DongqiFu/SDG", "topics": ["graph-neural-networks", "network-embedding", "neural-network"], "description": "SDG: A Simplified and Dynamic Graph Neural Network, SIGIR' 2021"}
{"name": "seungjunlee96/pointnet2_randaugment", "full_name": "seungjunlee96/PointNet2_RandAugment", "topics": ["pointnet2", "pointnet2-pytorch", "pytorch", "randaugment", "pointcloud", "data-augmentation", "classification", "segmentation", "3d"], "description": "Applying RandAugment on PointNet++"}
{"name": "basiralab/multigraphgan", "full_name": "basiralab/MultiGraphGAN", "topics": ["brain-graphs", "graph-generation", "source-graph", "target-graph", "gan", "generative-adversarial-network", "geometric-deep-learning", "brain-connectivity", "morphological-brain-networks", "multimodal-deep-learning", "predictive-learning", "predictive-intelligence", "multi-view-learning"], "description": "MultiGraphGAN for predicting multiple target graphs from a source graph using geometric deep learning."}
{"name": "dsshim0125/gaussian-ram", "full_name": "dsshim0125/gaussian-ram", "topics": ["image-classification", "reinforcement-learning", "ram", "gaussian-distribution", "attention", "iccas2020"], "description": " \"Gaussian RAM: Lightweight Image Classification via Stochastic Retina Inspired Glimpse and Reinforcement Learning\" (ICCAS 2020)"}
{"name": "danieltudosiu/nmpevqvae", "full_name": "danieltudosiu/nmpevqvae", "topics": ["deep-learning", "neuroimaging", "neuroinformatics", "vq-vae", "ignite"], "description": "Neuromorphologicaly Preserving Volumetric Data Encoding Using VQ-VAE"}
{"name": "ha0tang/dpgan", "full_name": "Ha0Tang/DPGAN", "topics": ["gan", "generative-adversarial-network"], "description": "[TIP 2021] Layout-to-Image Translation with Double Pooling Generative Adversarial Networks"}
{"name": "spico197/rex", "full_name": "Spico197/REx", "topics": ["pytorch", "relation-extraction"], "description": "A toolkit for Relation Extraction and more..."}
{"name": "liangheming/free_anchorv1", "full_name": "liangheming/free_anchorv1", "topics": [], "description": "pytorch implement of FreeAnchor(not strict),640 px(max side),39.5mAP on COCO,43.18fps(RTX 2080TI)"}
{"name": "tchaton/lightning-hydra-seed", "full_name": "tchaton/lightning-hydra-seed", "topics": [], "description": "Pytorch Lightning seed project with hydra"}
{"name": "the-ai-summer/gans-in-computer-vision", "full_name": "The-AI-Summer/GANs-in-Computer-Vision", "topics": ["gan", "gans", "computer-vision", "deep-learning", "adverserial", "learning"], "description": "GANs in computer vision AI Summer article series"}
{"name": "zhiyiyo/alpha-gobang-zero", "full_name": "zhiyiYo/Alpha-Gobang-Zero", "topics": ["alphazero", "gobang", "pytorch", "pyqt5", "reinforcement-learning"], "description": "A gobang robot based on reinforcement learning."}
{"name": "elizabethnewman/hessquik", "full_name": "elizabethnewman/hessQuik", "topics": ["neural-network", "derivatives", "gpu-acceleration"], "description": "Computing gradients and Hessians of feed-forward networks with GPU acceleration"}
{"name": "janspiry/distributed-pytorch-template", "full_name": "Janspiry/distributed-pytorch-template", "topics": ["pytorch", "logger", "deep-learning", "template", "distributeddataparallel", "ddp", "seed-project"], "description": "This is a seed project for distributed PyTorch training, which was built to customize your network quickly"}
{"name": "martinxm/tps", "full_name": "MartinXM/TPS", "topics": ["transformer", "video-action-recognition"], "description": "A simple but efficient transformer model for video action recognition"}
{"name": "tbcvcontributor/deephawkeye", "full_name": "cvlzw/DeepHawkeye", "topics": ["pytorch", "tensorrt", "onnx", "faiss"], "description": "image anomaly detection "}
{"name": "ppppps/ann2snnconversion_snm_neuronnorm", "full_name": "ppppps/ANN2SNNConversion_SNM_NeuronNorm", "topics": [], "description": "Pytorch Implementation of Signed Neuron with Memory: Towards Simple, Accurate and High-Efficient ANN-SNN Conversion, IJCAI 2022"}
{"name": "core-ml/coreml", "full_name": "core-ml/coreml", "topics": ["machine-learning", "deep-learning", "classification", "framework", "artificial-intelligence", "neural-network"], "description": "Generic framework for ML projects"}
{"name": "krystalan/k-sportssum", "full_name": "krystalan/K-SportsSum", "topics": ["paper", "nlp", "text-generation", "summarization", "wsdm2022", "paper-list", "sports-game-summarization"], "description": "WSDM\u20182022: Knowledge Enhanced Sports Game Summarization"}
{"name": "linqinliang/ssah-adversarial-attack", "full_name": "LinQinLiang/SSAH-adversarial-attack", "topics": ["pytorch", "adversarial-examples", "adversarial-attacks"], "description": "Code for the paper \"Frequency-driven Imperceptible Adversarial Attack on Semantic Similarity\""}
{"name": "histocleanqub/histoclean", "full_name": "HistoCleanQUB/HistoClean", "topics": ["image-processing", "images", "image-analysis", "deep-learning", "convolutional-neural-networks", "gui", "gui-application", "image-augmentation", "image-augmentation-preprocessing"], "description": "HistoClean is a tool for  the preprocessing and augmentation of images used in deep learning models.  This easy to use application brings together the most popular image processing packages from across the python universe,  meaning no more looking at documentation! HistoClean provides real time feedback to augmentations and preprocessing options.  This allows users to evaluate their steps before implementation. "}
{"name": "liulu1998/jnskr-pytorch", "full_name": "liulu1998/JNSKR-pytorch", "topics": ["recommender-system", "knowledge-graph", "non-sampling", "attention"], "description": "Implementation of JNSKR: Jointly Non-Sampling Learning for Knowledge Graph Enhanced Recommendation (SIGIR 2020) in PyTorch"}
{"name": "vinceecws/segnet_pytorch", "full_name": "vinceecws/SegNet_PyTorch", "topics": ["semantic-segmentation", "segnet-pytorch", "deep-learning", "pytorch", "encoder-decoder"], "description": "PyTorch implementation of SegNet: A Deep Convolutional Encoder-Decoder Architecture for Image Segmentation"}
{"name": "bthyreau/hippodeep_pytorch", "full_name": "bthyreau/hippodeep_pytorch", "topics": [], "description": "quick segmentation of the hippocampus from T1 MRI images. (pytorch version)"}
{"name": "aisari/autofocussar", "full_name": "aisari/AutofocusSAR", "topics": ["deep-learning", "autofocus", "synthetic-aperture-radar", "extreme-learning-machine", "convolutional-neural-network"], "description": "Machine Learning for Synthetic Aperture Radar Autofocus"}
{"name": "zjunlp/relphormer", "full_name": "zjunlp/Relphormer", "topics": ["kg", "transformer", "knowledge-graph", "knowledge-graph-completion", "question-answering", "recommendation-system", "knowledge-graph-representation", "fb15k-237", "link-prediction", "umls", "wn18rr", "relphormer"], "description": "Code for the paper \"Relational Graph Transformer for Knowledge Graph Representation\""}
{"name": "nhtlongcs/liveness-detection", "full_name": "nhtlongcs/liveness-detection", "topics": ["classification", "pytorch", "pytorch-lightning", "zaloai", "deepfake-detection", "liveness-detection", "anti-spoofing"], "description": "Infection team's solution for liveness detection problem"}
{"name": "bhklab/med-imagetools", "full_name": "bhklab/med-imagetools", "topics": ["medical", "python", "deep-learning", "dicom", "pytorch", "torch", "nrrd", "nifti", "machine-learning"], "description": "Transparent and reproducible medical image processing pipelines in Python."}
{"name": "xuchensjtu/etl-master", "full_name": "xuChenSJTU/ETL-master", "topics": [], "description": "This is a pytorch implementation of our paper: \"Towards Equivalent Transformation of User Preferences in Cross Domain Recommendation\""}
{"name": "tianyu0207/weakly-polyp", "full_name": "tianyu0207/weakly-polyp", "topics": ["anomaly-detection", "dataset", "deep-learning", "polyp"], "description": "[MICCAI'22] Contrastive Transformer-based Multiple Instance Learning for Weakly Supervised Polyp Frame Detection. "}
{"name": "zal0302/cii", "full_name": "zal0302/CII", "topics": ["pytorch", "saliency", "saliency-detection", "salient-object-detection", "u-net", "saliency-maps", "object-segmentation", "saliency-prediction"], "description": "The official PyTorch implementation of IEEE Transactions on Image Processing 2021 paper \"Rethinking the U-shape Structure for Salient Object Detection\""}
{"name": "cilame/yidun_icon", "full_name": "cilame/yidun_icon", "topics": [], "description": "\u6613\u76fe\u56fe\u6807\u8bc6\u522b\uff0c\u5305\u542b\u5b9a\u4f4d\u4ee5\u53ca\u70b9\u9009\u987a\u5e8f\u7684\u8bc6\u522b\uff0c\u5b9a\u4f4d pytorch \u6a21\u578b\u5927\u5c0f\u53ea\u67093M\uff0c\u6267\u884c\u901f\u5ea6\u6781\u5feb\u3002\u5185\u9644\u4ee3\u7801\u548c\u6d4b\u8bd5\u7528\u4f8b\uff0c\u76f4\u63a5\u4f7f\u7528\u5373\u53ef\u6d4b\u8bd5\u3002\u5b9a\u4f4d\u51c6\u786e\u7387 95% \u4ee5\u4e0a\uff0c\u8bc6\u522b\u7528\u7684sift\u7b97\u6cd5\uff0c\u6d4b\u8bd5\u901a\u8fc7\u7387\u5927\u6982 50%\u3002"}
{"name": "blueloveth/keras4torch", "full_name": "blueloveTH/keras4torch", "topics": ["pytorch", "keras", "deeplearning"], "description": "A compatible-with-keras wrapper for training PyTorch models\u2728"}
{"name": "yashk2000/sneakysketchers", "full_name": "yashk2000/SneakySketchers", "topics": ["python3", "pyqt5", "pyqt5-desktop-application", "jupyter-notebook", "inpainting", "image-inpainting", "computer-vision", "pytorch", "desktop-application", "sneaky-sketchers", "google-colab", "opencv-python"], "description": "A python desktop application that allows you to do image inpainting by directly drawing on it. "}
{"name": "wiktorlazarski/ai-awesome-project-template", "full_name": "wiktorlazarski/ai-awesome-project-template", "topics": ["ai", "machine-learning", "deep-learning", "artificial-intelligence", "project-template", "natural-language-processing", "computer-vision", "python-template", "pytorch-template", "software-engineering", "best-practices", "pytorch", "pytorch-implementation", "hydra", "pytorch-lightning", "wandb"], "description": "\ud83e\udd16 Project template for your next awesome AI project. \ud83e\uddbe"}
{"name": "tensorlayer/tlxzoo", "full_name": "tensorlayer/TLXZoo", "topics": ["tensorflow", "paddlepaddle", "mindspore", "tensorlayerx", "tensorlayer", "jittor", "oneflow", "pytorch"], "description": "Pre-trained backbones for TensorLayerX"}
{"name": "cambridgeltl/visual-spatial-reasoning", "full_name": "cambridgeltl/visual-spatial-reasoning", "topics": ["computer-vision", "multimodal-deep-learning", "nlp", "vision-and-language"], "description": "VSR: A probing benchmark for spatial undersranding of vision-language models."}
{"name": "seorim0/nunet-tls", "full_name": "seorim0/NUNet-TLS", "topics": ["multi-scale-features", "nested-unet", "pytorch", "skip-connections", "speech-enhancement", "u2net", "unet", "deep-learning", "interspeech2022"], "description": "Nested U-Net with two-level skip connections"}
{"name": "waterhorse1/melu_pytorch", "full_name": "waterhorse1/MELU_pytorch", "topics": [], "description": "An unofficial pytorch implementation of MELU"}
{"name": "jramapuram/simclr", "full_name": "jramapuram/SimCLR", "topics": [], "description": "SimCLR pytorch implementation using DistributedDataParallel."}
{"name": "lornatang/fsrcnn-pytorch", "full_name": "Lornatang/FSRCNN-PyTorch", "topics": ["super-resolution", "pytorch", "cnn"], "description": "Fast implementation of fsrcnn algorithm based on pytorch framework"}
{"name": "luo3300612/image-captioning-dlct", "full_name": "luo3300612/image-captioning-DLCT", "topics": ["image-captioning"], "description": "Official pytorch implementation of paper \"Dual-Level Collaborative Transformer for Image Captioning\" (AAAI 2021)."}
{"name": "zhen-dong/bitpack", "full_name": "Zhen-Dong/BitPack", "topics": ["quantization", "mixed-precision", "pytorch", "model-compression", "memory", "quantized-neural-networks"], "description": "BitPack is a practical tool to efficiently save ultra-low precision/mixed-precision quantized models."}
{"name": "dogyoonlee/rsmix", "full_name": "dogyoonlee/RSMix", "topics": ["data-augmentation", "pointcloud", "deep-learning", "regularization", "modelnet40", "shape-classification", "3d", "3dpointcloud"], "description": "[CVPR 2021] Rigid Subset Mix (RSMix): Regularization Strategy for Point Cloud via Rigidly Mixed Samples"}
{"name": "ustcml/mini-lightning", "full_name": "ustcml/mini-lightning", "topics": ["deep-learning", "python3", "pytorch", "pytorch-lightning", "mini-lightning", "machine-learning"], "description": "The mini version of PyTorch Lightning"}
{"name": "yoshitomo-matsubara/supervised-compression", "full_name": "yoshitomo-matsubara/supervised-compression", "topics": ["pytorch", "imagenet", "coco", "image-classification", "object-detection", "semantic-segmentation", "knowledge-distillation", "supervised-compression", "split-computing"], "description": "[WACV 2022] \"Supervised Compression for Resource-Constrained Edge Computing Systems\""}
{"name": "dinghanshen/cutoff", "full_name": "dinghanshen/Cutoff", "topics": ["nlp-machine-learning", "deep-learning", "huggingface-transformers", "fairseq", "augmentation"], "description": "The source code for the Cutoff data augmentation approach proposed in this paper: \"A Simple but Tough-to-Beat Data Augmentation Approach for Natural Language Understanding and Generation\". "}
{"name": "huffon/semantic-search-faiss", "full_name": "Huffon/semantic-search-faiss", "topics": ["faiss", "semantic-search", "elasticsearch", "natural-language-processing"], "description": "Semantic Search using FAISS & ElasticSearch"}
{"name": "sooftware/jasper-pytorch", "full_name": "sooftware/jasper", "topics": ["asr", "jasper", "automatic-speech-recognition", "cnn", "nvidia", "speech-recognition", "pytorch"], "description": "PyTorch implementation of \"Jasper: An End-to-End Convolutional Neural Acoustic Model\" (INTERSPEECH 2019)"}
{"name": "xiaolongjean/multi-source-pointer-network", "full_name": "xiaolongjean/multi-source-pointer-network", "topics": ["pointer-network", "abstractive-model", "short-title-generation", "product-title-summarization", "transformer"], "description": "\u591a\u6e90\u6307\u9488\u7f51\u7edc (multi source pointer network)"}
{"name": "luzhixing12345/anime-wgan", "full_name": "luzhixing12345/Anime-WGAN", "topics": ["pytorch", "wgan", "anime"], "description": "pytorch implementation of WGAN to generate anime avatar"}
{"name": "dvamossy/emtract", "full_name": "dvamossy/EmTract", "topics": ["text-classification", "text-analysis", "finance", "nlp-finance", "deep-learning-finance", "natural-language-processing"], "description": "Package for extracting emotions from social media text. Tailored for financial data."}
{"name": "sraashis/retinal-fundus-transfer", "full_name": "sraashis/retinal-fundus-transfer", "topics": ["vessel-segmentation", "easy-neural-network-experiments", "biomedical-image-analysis", "pool-image-datasets", "k-fold-cross-validation", "u-net", "u-net-pytorch", "pytorch-k-fold-cross-validation", "transfer-learning", "retinal-vessel-segmentation"], "description": "An example of easytorch implementation on retinal vessel segmentation."}
{"name": "nvlabs/dg-net-pp", "full_name": "NVlabs/DG-Net-PP", "topics": ["pytorch", "re-identification", "person-reidentification", "person-reid", "market-1501", "dukemtmc-reid", "msmt17", "domain-adaptation", "unsupervised"], "description": "Joint Disentangling and Adaptation for Cross-Domain Person Re-Identification. ECCV'20 (Oral)"}
{"name": "toinsson/pysdtw", "full_name": "toinsson/pysdtw", "topics": ["cuda", "deep-learning", "pytorch", "dynamic-time-warping", "soft-dtw"], "description": "Torch implementation of Soft-DTW, supports CUDA."}
{"name": "smart-safety-ocean/haar_deepmodel", "full_name": "Smart-Safety-Ocean/HAAR_DeepModel", "topics": ["ai", "abnormal-behavior-detection", "ai-model", "cctv-detection", "deep-learning", "deep-learning-algorithms", "ocean", "safety", "passengers", "ships", "fall-detection"], "description": "Detects the abnormal behaviors of passengers on a ship so we can prevent accidents from occurring"}
{"name": "hyliush/deep-time-series", "full_name": "hyliush/deep-time-series", "topics": ["deep-learning", "pytorch", "time-series", "informer", "autoformer", "forecasting", "financial-market"], "description": "Deep learning PyTorch library for time series forecasting"}
{"name": "shakex/card-rectification", "full_name": "shakex/card-rectification", "topics": ["edge-detection", "document-scanning", "pytorch", "opencv", "deep-learning"], "description": "A python-based algorithm for id-card rectification"}
{"name": "aditya-grover/climate-learn", "full_name": "aditya-grover/climate-learn", "topics": ["climate-change", "climate-science", "deep-learning", "machine-learning"], "description": "Source code for ClimateLearn"}
{"name": "mayukhdeb/rover", "full_name": "Mayukhdeb/rover", "topics": [], "description": "Reverse engineer your pytorch vision models, in style"}
{"name": "likyoo/multimodal-remote-sensing-toolkit", "full_name": "likyoo/Multimodal-Remote-Sensing-Toolkit", "topics": ["python", "pytorch", "remote-sensing", "multi-modal-learning"], "description": "A python tool to perform deep learning experiments on multimodal remote sensing data."}
{"name": "liguge/1d-grad-cam-for-intelligent-fault-diagnosis", "full_name": "liguge/1D-Grad-CAM-for-interpretable-intelligent-fault-diagnosis", "topics": ["deep-learning", "fault-diagnosis"], "description": "\u667a\u80fd\u6545\u969c\u8bca\u65ad\u4e2d\u4e00\u7ef4\u7c7b\u68af\u5ea6\u6fc0\u6d3b\u6620\u5c04\u53ef\u89c6\u5316\u5c55\u793a   1D-Grad-CAM for interpretable intelligent fault diagnosis"}
{"name": "mbfaria/shufflefacenet_pytorch", "full_name": "mbfaria/ShuffleFaceNet_Pytorch", "topics": ["machine-learning", "neural-networks", "shufflenetv2", "cosface", "face-recognition", "retrieval", "face", "python", "python3", "pytorch", "pytorch-implementation", "casia", "lfw", "casia-dataset", "lfw-dataset"], "description": "A PyTorch Implementation of ShuffleFaceNet."}
{"name": "zhoujx4/dureader-checklist-baseline", "full_name": "zhoujx4/DuReader-Checklist-BASELINE", "topics": [], "description": "\u767e\u5ea62021\u5e74\u8bed\u8a00\u4e0e\u667a\u80fd\u6280\u672f\u7ade\u8d5b\u673a\u5668\u9605\u8bfb\u7406\u89e3torch\u7248baseline"}
{"name": "reml-lab/ursabench", "full_name": "reml-lab/URSABench", "topics": ["pytorch", "bayesian-inference", "deep-learning", "bayesian-deep-learning"], "description": "Codebase for our paper \"URSABench: Comprehensive Benchmarking of Approximate Bayesian Inference Methods for Deep Neural Networks\""}
{"name": "kenneth111/transformerdemo", "full_name": "Kenneth111/TransformerDemo", "topics": [], "description": "Pytorch nn.Transformer Demo"}
{"name": "allenai/embeddingrecycling", "full_name": "allenai/EmbeddingRecycling", "topics": ["machine-learning", "natural-language-processing", "nlp", "transfer-learning-nlp", "efficient-nlp"], "description": "Embedding Recycling for Language models"}
{"name": "helioszhao/m3l", "full_name": "HeliosZhao/M3L", "topics": ["cvpr2021", "personreid"], "description": "Pytorch implementation for M^3L. CVPR 2021"}
{"name": "eubinecto/dekorde", "full_name": "eubinecto/the-clean-transformer", "topics": ["translate", "seq2seq", "transformer", "attention-mechanism", "attention", "pytorch", "clean-code", "weights-and-biases", "wandb"], "description": "A clean and structured implementation of Transformer with wandb and pytorch-lightning"}
{"name": "extreme-classification/galaxc", "full_name": "Extreme-classification/GalaXC", "topics": ["extreme-classification", "python", "machine-learning", "deep-learning", "graph-neural-networks", "multi-label-classification", "galaxc"], "description": "GalaXC: Graph Neural Networks with Labelwise Attention for Extreme Classification"}
{"name": "gariscat/housex", "full_name": "Gariscat/HouseX", "topics": ["music-classification", "music-dataset", "music-visualizer", "pytorch"], "description": "A Fine-Grained House Music Dataset"}
{"name": "engelnico/point-transformer", "full_name": "engelnico/point-transformer", "topics": ["3d-point-cloud", "3d-pointclouds", "3d-classification", "pytorch", "deep-learning", "transformer-architecture", "3d-segmentation", "classification", "segmentation", "modelnet-dataset", "modelnet", "modelnet40", "shapenet-dataset", "shapenetpart", "transformer", "attention-mechanism", "multi-head-attention", "sortnet"], "description": "This is the official repository of the original Point Transformer architecture. "}
{"name": "lizhaoliu-lec/imageaestheticassessmentpytorch", "full_name": "lizhaoliu-Lec/ImageAestheticAssessmentPyTorch", "topics": ["deeplearning", "aesthetic-assessment", "pytorch", "pytorch-implementation", "covolution-neural-network", "transformer"], "description": "Image Aesthetic Assessment in PyTorch with implemented popular datasets and models (possibly providing the pretrained ones)."}
{"name": "hugoycj/incremental-learning-with-weight-aligning", "full_name": "hugoycj/Incremental-Learning-with-Weight-Aligning", "topics": [], "description": "Pytorch implementation of Maintaining Discrimination and Fairness in Class Incremental Learning"}
{"name": "is2ai/chest-x-ray-module", "full_name": "IS2AI/Chest-X-ray-module", "topics": ["deep-learning", "densenet121", "medical-imaging", "machine-learning", "computer-vision", "pytorch", "catalyst"], "description": null}
{"name": "yang-han/p-reg", "full_name": "yang-han/P-reg", "topics": ["graph-neural-networks", "gcn", "gnn", "regularization", "aaai2021"], "description": "Rethinking Graph Regularization for Graph Neural Networks (AAAI2021)"}
{"name": "elemisi/vael", "full_name": "EleMisi/VAEL", "topics": ["deep-learning", "generativemodel", "neurosymbolic"], "description": "Codebase for VAEL: Bridging Variational Autoencoders and Probabilistic Logic Programming"}
{"name": "zhengzangw/doprompt", "full_name": "zhengzangw/DoPrompt", "topics": ["deep-learning", "domain-adaptation", "domain-generalization", "prompt-tuning", "vision-transformer"], "description": "Official implementation of PCS in essay \"Prompt Vision Transformer for Domain Generalization\""}
{"name": "ammesatyajit/videobert", "full_name": "ammesatyajit/VideoBERT", "topics": ["bert", "videobert", "python3", "pytorch"], "description": "Using VideoBERT to tackle video prediction"}
{"name": "nefeliandreou/poserepresentation", "full_name": "nefeliandreou/PoseRepresentation", "topics": ["animation", "deep-learning", "motion-prediction", "motion-modeling"], "description": "Official implementation of dual quaternion transformations as described in the paper \"Pose Representations for Deep Skeletal Animation\"."}
{"name": "weinyn/dietclassifier-pytorch", "full_name": "WeiNyn/DIETClassifier-pytorch", "topics": ["nlu", "transformers-library", "intent-classification", "entity-recognition", "nlp", "huggingface-transformers", "dual-intent-entity"], "description": "DIET Classifier mini implementation on pytorch."}
{"name": "ravoxsg/summareranker-acl-22", "full_name": "Ravoxsg/SummaReranker-ACL-22", "topics": ["deep-learning", "nlp", "summarization"], "description": "Source code for SummaReranker (ACL 22)"}
{"name": "alexa/wqa-contextual-qa", "full_name": "alexa/wqa-contextual-qa", "topics": ["question-answering", "transformers", "natural-language-processing", "passage-reranking"], "description": "Coala is a python package for Contextual Answer Sentence Selection."}
{"name": "lqnew/lwdrlc", "full_name": "LQNew/LWDRLC", "topics": ["ddpg", "sac", "td3", "ppo", "policy-gradient", "continuous-control", "deep-reinforcement-learning", "pytorch"], "description": "Lightweight deep RL Libraray for continuous control."}
{"name": "fcakyon/sahi-benchmark", "full_name": "fcakyon/small-object-detection-benchmark", "topics": ["benchmark", "coco", "fcos", "mmdetection", "object-detection", "pytorch", "sahi", "small-object-detection", "tood", "vfnet", "visdrone", "xview", "icip2022"], "description": "icip2022 paper: sahi benchmark on visdrone and xview datasets using fcos, vfnet and tood detectors"}
{"name": "mpatacchiola/contextual-squeeze-and-excitation", "full_name": "mpatacchiola/contextual-squeeze-and-excitation", "topics": ["image-classification", "meta-learning", "pytorch", "transfer-learning", "deep-learning", "few-shot-learning", "paper", "squeeze-and-excitation", "squeeze-and-excitation-networks"], "description": "Official Pytorch implementation of the paper \"Contextual Squeeze-and-Excitation for Efficient Few-Shot Image Classification\" (NeurIPS 2022)"}
{"name": "kdmayer/pv4ger", "full_name": "kdmayer/3D-PV-Locator", "topics": ["neurips-2020", "solar", "renewable-energy", "pv-systems", "deepsolar", "computer-vision", "inception-v3", "deeplabv3", "network-planning", "solar-panels", "climate-change", "ai", "deep-learning", "remote-sensing", "satellite-imagery"], "description": "Repo for \"3D-PV-Locator: Large-scale detection of rooftop-mounted photovoltaic systems in 3D\" based on Applied Energy publication."}
{"name": "princeton-nlp/semsup", "full_name": "princeton-nlp/semsup", "topics": ["deep-learning", "machine-learning"], "description": "Semantic Supervision: Enabling Generalization over Output Spaces"}
{"name": "astrazeneca/kazu", "full_name": "AstraZeneca/KAZU", "topics": ["biomedical-text-mining", "natural-language-processing", "nlp"], "description": "Fast, world class biomedical NER"}
{"name": "shiningxy/rhf", "full_name": "shiningxy/RHF", "topics": ["pytorch", "object-detection", "faster-rcnn", "computer-vision", "covid-19"], "description": "A deep learning algorithm for real-time object detection is proposed to automatically identify face-mask-wearing status  in high-density crowds."}
{"name": "yingtaoluo/probabilistic-density-network", "full_name": "yingtaoluo/Probabilistic-density-network", "topics": ["python", "botorch", "pytorch", "numpy", "matlab", "comsol", "quantum"], "description": "A Quantum Inspired Deep Probabilistic Learning Model for the Inverse Design of Meta-Structures. Research AAAS & NeurIPS ML4PS."}
{"name": "rasbt/b3-basic-batchsize-benchmark", "full_name": "rasbt/b3-basic-batchsize-benchmark", "topics": ["deep-learning", "deep-neural-networks", "machine-learning", "neural-networks"], "description": "Experiments for the blog post \"No, We Don't Have to Choose Batch Sizes As Powers Of 2\""}
{"name": "kolaszko/haptic_transformer", "full_name": "kolaszko/haptic_transformer", "topics": ["classification", "robotics", "deep-learning", "force-sensor", "neural-network", "transformer"], "description": "Implemenatation of HAPtic TRansformer used in task of terrain classification from force/torque data."}
{"name": "billamihom/rapq", "full_name": "BillAmihom/RAPQ", "topics": [], "description": "Pytorch implementation of RAPQ, IJCAI 2022"}
{"name": "wangwenhao0716/attentive-waveblock", "full_name": "WangWenhao0716/Attentive-WaveBlock", "topics": ["person-reid", "unsupervised-domain-adaptation"], "description": "[TIP 2022] Pytorch implementation of \"Attentive WaveBlock: Complementarity-enhanced Mutual Networks for Unsupervised Domain Adaptation in Person Re-identification and Beyond\""}
{"name": "stefanheng/symbolic-music-generation", "full_name": "StefanHeng/Symbolic-Music-Generation", "topics": ["nlp", "representation-learning", "music-generation", "music-xml", "midi", "melody-generation", "transformer", "transformer-decoder", "transformers-models", "melody-extraction", "autoregressive-models", "transformer-xl", "reformer"], "description": "Symbolic music generation taking inspiration from NLP and human composition process"}
{"name": "ivankunyankin/quartznet-asr", "full_name": "ivankunyankin/quartznet-asr", "topics": ["asr", "automatic-speech-recognition", "quartznet", "jasper", "pytorch"], "description": null}
{"name": "buaabigscity/kddcup2022", "full_name": "BUAABIGSCity/KDDCUP2022", "topics": ["deep-learning", "spatio-temporal-prediction", "wind-power-forecasting", "agcrn", "kddcup2022", "mtgnn"], "description": "[KDD CUP 2022] 11th place solution of Spatial-Temporal Graph Neural Network for Wind Power Forecasting in Baidu KDD CUP 2022"}
{"name": "mrk1992/robust_matching_network_on_remote_sensing_imagery_pytorch", "full_name": "mrk1992/robust_matching_network_on_remote_sensing_imagery_pytorch", "topics": ["image-matching", "remote-sensing", "computer-vision", "deep-learning", "artificial-intelligence"], "description": "A Robust Matching Network for Gradually Estimating Geometric Transformation on Remote Sensing Imagery"}
{"name": "hpcgroup/axonn", "full_name": "hpcgroup/axonn", "topics": ["deep-learning", "neural-networks", "machine-learning", "parallel-computing"], "description": "A parallel framework for training deep neural networks"}
{"name": "biano-ai/serving-compare-middleware", "full_name": "Biano-AI/serving-compare-middleware", "topics": ["tensorflow", "torchserve", "fastapi", "python", "triton-inference-server", "tensorflow-serving", "pytorch"], "description": "FastAPI middleware for comparing different ML model serving approaches"}
{"name": "donken/neuraloc", "full_name": "donken/NeuralOC", "topics": ["neural-networks", "optimal-control", "pytorch"], "description": "A Neural Network Approach for Real-Time High-Dimensional Optimal Control"}
{"name": "vcllab/ifqa", "full_name": "VCLLab/IFQA", "topics": [], "description": "IFQA: Interpretable Face Quality Assessment - Official Pytorch Implementation (WACV 2023)"}
{"name": "smlc-nysbc/target-vae", "full_name": "SMLC-NYSBC/TARGET-VAE", "topics": [], "description": "Source code for \"Unsupervised Object Representation Learning using Translation and Rotation Group Equivariant VAE,\" in pytorch. NeurIPS 2022"}
{"name": "linfeng93/large-unidet", "full_name": "linfeng93/Large-UniDet", "topics": ["mmdetection", "pytorch", "robust-vision", "universal-object-detection"], "description": "A practice for million-scale multi-domain universal object detection"}
{"name": "nianlonggu/local-citation-recommendation", "full_name": "nianlonggu/Local-Citation-Recommendation", "topics": ["citation-recommendation", "ecir", "scibert", "deep-learning", "pytorch", "local-citation-recommendation"], "description": "Code for ECIR 2022 paper Local Citation Recommendation with Hierarchical-Attention Text Encoder and SciBERT-based Reranking"}
{"name": "liaorongfan/deeppersonality", "full_name": "liaorongfan/DeepPersonality", "topics": ["deep-learning", "personality-recognition"], "description": "Banchmark for personality traits prediction  with neural networks "}
{"name": "ducnt9907/colonformer", "full_name": "ducnt9907/ColonFormer", "topics": [], "description": "The official Pytorch implementation of training & evaluation code for ColonFormer"}
{"name": "coincheung/densecl", "full_name": "CoinCheung/DenseCL", "topics": ["deep-learning", "metric-learning", "pretrained", "pytorch", "self-supervised-learning", "regioncl-d"], "description": "DenseCL + regionCL-D"}
{"name": "sungnyun/understanding-cdfsl", "full_name": "sungnyun/understanding-cdfsl", "topics": ["cross-domain", "few-shot-learning", "pytorch", "self-supervised-learning"], "description": "Understanding Cross-Domain Few-Shot Learning Based on Domain Similarity and Few-Shot Difficulty, NeurIPS 2022"}
{"name": "clairecyq/whos-waldo", "full_name": "clairecyq/whos-waldo", "topics": ["deep-learning", "computer-vision", "natural-language-processing", "multimodal-deep-learning"], "description": "Who's Waldo? Linking People Across Text and Images. ICCV 2021."}
{"name": "gao-lab/slat", "full_name": "gao-lab/SLAT", "topics": ["bioinformatics", "single-cell", "spatial-data", "spatial-transcriptomics", "single-cell-analysis", "deep-learning", "gnn"], "description": "Spatially-Linked Alignment Tool"}
{"name": "rbosh/ml-adp", "full_name": "rbosh/ml-adp", "topics": ["machine-learning", "optimal-control", "python", "pytorch", "monte-carlo", "finance"], "description": "Pytorch-Native Approximate Dynamic Programming for Stochastic Optimal Control"}
{"name": "xggnet/steganerf", "full_name": "XGGNet/StegaNeRF", "topics": [], "description": "Official Pytorch implementation of StegaNeRF"}
{"name": "taishan1994/pytorch_globalpointer_triple_extraction", "full_name": "taishan1994/pytorch_GlobalPointer_triple_extraction", "topics": [], "description": "\u57fa\u4e8epytorch\u7684GlobalPointer\u8fdb\u884c\u4e09\u5143\u7ec4\u62bd\u53d6\u3002"}
{"name": "mindlab-ai/mindnlp", "full_name": "mindspore-lab/mindnlp", "topics": ["mindspore", "natural-language-processing", "nlp", "nlp-library", "deep-learning", "python"], "description": "An opensource NLP library based on MindSpore."}
{"name": "taesikgong/metasense_public", "full_name": "TaesikGong/MetaSense_public", "topics": ["dataset", "deep-learning", "human-activity-recognition", "machine-learning", "meta-learning"], "description": "The official PyTorch Implementation of MetaSense (MetaSense: Few-Shot Adaptation to Untrained Conditions in Deep Mobile Sensing, ACM SenSys '19)."}
{"name": "vsainteuf/lightweight-temporal-attention-pytorch", "full_name": "VSainteuf/lightweight-temporal-attention-pytorch", "topics": ["deep-learning", "deep-neural-networks", "deeplearning", "self-attention", "satellite", "satellite-imagery", "satellite-data", "time-series", "classification", "pytorch", "remote-sensing", "time-series-classification", "machine-learning"], "description": "A PyTorch implementation of the Light Temporal Attention Encoder (L-TAE) for satellite image time series. classification"}
{"name": "thammegowda/nllb-serve", "full_name": "thammegowda/nllb-serve", "topics": ["machine-translation", "multilingual", "nlp", "transformers", "translation"], "description": "Meta's \"No Language Left Behind\" models served as web app and REST API"}
{"name": "taishan1994/pytorch_globalpointer_ner", "full_name": "taishan1994/pytorch_GlobalPointer_Ner", "topics": [], "description": "\u57fa\u4e8epytorch\u7684GlobalPointer\u8fdb\u884c\u4e2d\u6587\u547d\u540d\u5b9e\u4f53\u8bc6\u522b\u3002"}
{"name": "leebebeto/pytorch-gan", "full_name": "leebebeto/pytorch-GAN", "topics": ["computer-vision", "pytorch", "gan", "generative-model", "generative-adversarial-network"], "description": "My pytorch implementation for GAN"}
{"name": "iwbn/flow-supervisor", "full_name": "iwbn/flow-supervisor", "topics": ["deep-learning", "optical-flow", "pytorch", "tensorflow2"], "description": "Semi-supervised optical flow network "}
{"name": "aggelos-michael-papadopoulos/mobilevit-impelmentation-and-training-in-tensorlow-and-pytorch", "full_name": "aggelos-michael-papadopoulos/MobileViT-implementation-and-training-in-Tensorlow-and-Pytorch", "topics": [], "description": "MobileViT Implementation in TensorFlow and Pytorch"}
{"name": "sailordiary/m3f.pytorch", "full_name": "sailordiary/m3f.pytorch", "topics": ["emotion-recognition", "affective-computing", "deep-learning"], "description": "PyTorch code for \"M\u00b3T: Multi-Modal Multi-Task Learning for Continuous Valence-Arousal Estimation\""}
{"name": "rapidrabbit76/sketchcolorization", "full_name": "rapidrabbit76/SketchColorization", "topics": ["machine-learning", "gans", "generative-adversarial-network", "paintschainer", "pytorch", "onnx", "deep-learning"], "description": "line drawing colorization using  pytorch"}
{"name": "intelligent-instruments-lab/iil-python-tools", "full_name": "Intelligent-Instruments-Lab/iil-python-tools", "topics": [], "description": "Central repo for python projects including: iipyper (easy OSC and MIDI handling) and notochord (a probabilistic model for real-time MIDI performance built in pytorch)"}
{"name": "amanjain1397/huse", "full_name": "amanjain1397/HUSE", "topics": ["pytorch", "universal-embedding", "huse"], "description": "PyTorch implementation of HUSE: Hierarchical Universal Semantic Embeddings"}
{"name": "alessiacosmos/trashdetection-huaweicloud", "full_name": "Alessiacosmos/TrashDetection-HuaweiCloud", "topics": ["pytorch", "2020huaweicloud", "modelarts"], "description": "\u201c\u534e\u4e3a\u4e91\u676f\u201d2020\u6df1\u5733\u5f00\u653e\u6570\u636e\u5e94\u7528\u521b\u65b0\u5927\u8d5b\u00b7\u751f\u6d3b\u5783\u573e\u56fe\u7247\u5206\u7c7b Pytorch\u7248\u672c\u57fa\u7840\u914d\u7f6e\u6587\u4ef6"}
{"name": "lucidrains/product-key-memory", "full_name": "lucidrains/product-key-memory", "topics": ["artificial-intelligence", "deep-learning", "transformers", "pytorch"], "description": "Standalone Product Key Memory module in Pytorch - for augmenting Transformer models"}
{"name": "astaka-pe/dual-dmp", "full_name": "astaka-pe/Dual-DMP", "topics": ["deep-learning", "eccv2022", "graph-convolutional-network", "mesh-denoising", "3d-models", "geometry-processing", "graph-convolutional-networks", "graph-neural-networks", "mesh-processing"], "description": "Learning Self-prior for Mesh Denoising using Dual Graph Convolutional Networks [ECCV 2022]"}
{"name": "tqch/ddpm-torch", "full_name": "tqch/ddpm-torch", "topics": ["ddpm", "deep-generative-models", "diffusion-models", "pytorch", "denoising-diffusion", "deep-learning"], "description": "Unofficial PyTorch Implementation of Denoising Diffusion Probabilistic Models (DDPM)"}
{"name": "vdutor/sphericalharmonics", "full_name": "vdutor/SphericalHarmonics", "topics": ["spherical-harmonics", "tensorflow", "pytorch", "jax"], "description": "Zonal Spherical Harmonics in d Dimensions in TensorFlow, PyTorch and Jax"}
{"name": "augustwester/transformer-xl", "full_name": "augustwester/transformer-xl", "topics": ["transformer", "transformer-xl", "pytorch", "xlnet"], "description": "A lightweight PyTorch implementation of the Transformer-XL architecture proposed by Dai et al. (2019)"}
{"name": "xai-demonstrator/xai-demonstrator", "full_name": "XAI-Demonstrator/xai-demonstrator", "topics": ["xai", "ai", "explainable-ai", "mobile-first", "pytorch", "huggingface-transformers", "fastapi", "vuejs", "machine-learning", "keras", "tensorflow", "docker"], "description": "The XAI Demonstrator is a modular platform that lets users interact with production-grade Explainable AI (XAI) systems."}
{"name": "imranulashrafi/banner", "full_name": "imranulashrafi/banner", "topics": ["bangla", "bengali", "ner", "bert", "contextualized", "cost-sensitive-learning"], "description": "Pytorch implementation for paper 'BANNER: A Cost-Sensitive Contextualized Model for Bangla Named Entity Recognition'"}
{"name": "landskape-ai/progressive-pruning", "full_name": "landskape-ai/Progressive-Pruning", "topics": ["sparsity", "pruning", "anytime-learning", "neural-networks", "icml-2022", "acml", "slowdnn"], "description": "Official pytorch code for \"APP: Anytime Progressive Pruning\" (DyNN @ ICML, 2022; CLL @ ACML, 2022, SNN @ ICML, 2022 and SlowDNN 2023)"}
{"name": "ramb0a/awesome-quantum-chemistry", "full_name": "twoXes/awesome-quantum-chemistry", "topics": ["neural-network", "electron-schroedinger-equation", "quantum", "ab-initio-solution"], "description": "Quantum Chemistry is awesome. Throw your textbook in the garbage, light the garbage can on fire, and blend the ashes into your cold brew almond milk latte and read this."}
{"name": "xzluo97/mvmm-demo", "full_name": "xzluo97/MvMM-Demo", "topics": ["combined-computing", "medical-image-segmentation", "medical-image-registration", "multivariate-mixture-model", "probabilistic-graphical-models", "pytorch"], "description": "PyTorch implementation for multivariate mixture model on cardiac segmentation from multi-source images"}
{"name": "dohlee/chromoformer", "full_name": "dohlee/chromoformer", "topics": ["bioinformatics", "deep-learning", "transformer", "histone-modifications", "gene-expression", "artificial-intelligence", "genomics", "epigenomics", "transcriptomics"], "description": "The official code implementation for Chromoformer in PyTorch. (Lee et al., Nature Communications. 2022)"}
{"name": "youhe-jiang/optimalshardeddataparallel", "full_name": "Youhe-Jiang/OptimalShardedDataParallel", "topics": ["automatic-parallelization", "distributed-system", "deep-learning"], "description": "An automated parallel training system that combines the advantages from both data and model parallelism. If you have any interests, please visit/star/fork https://github.com/Youhe-Jiang/OptimalShardedDataParallel"}
{"name": "iywie/pl_yolo", "full_name": "Iywie/pl_YOLO", "topics": ["pytorch", "object-detection", "yolox", "yolo", "yolov5", "yolov7", "pytorch-lightning"], "description": "YOLOv7, YOLOX and YOLOv5 are working right now"}
{"name": "mics-lab/scyan", "full_name": "MICS-Lab/scyan", "topics": ["cytometry", "deep-learning", "normalizing-flows", "single-cell-omics", "generative-model"], "description": "Biology-driven deep generative model for cell-type annotation in cytometry. Scyan is an interpretable model that also corrects batch-effect and can be used for debarcoding or population discovery."}
{"name": "graformer/graformer", "full_name": "Graformer/GraFormer", "topics": [], "description": "The Pytorch implementation for \"GraFormer: Graph Convolution Transformer for 3D Pose Estimation\" https://arxiv.org/pdf/2109.08364.pdf"}
{"name": "jiseonghan/super-mario-rl", "full_name": "jiseongHAN/Super-Mario-RL", "topics": ["pytorch", "reinforcement", "reinforcement-learning", "mario", "dqn", "dueling-dqn", "super-mario", "supermario"], "description": "\ud83c\udf44Reinforcement Learning: Super Mario Bros with dueling dqn\ud83c\udf44"}
{"name": "kosuke1701/animecv", "full_name": "kosuke1701/AnimeCV", "topics": ["anime", "deep-learning", "face-detection", "character-identification", "character-recognition"], "description": "Pretrained computer vision tools for illustrations."}
{"name": "chandlerbang/simp-gcn", "full_name": "ChandlerBang/SimP-GCN", "topics": ["graph-neural-networks", "graph-convolutional-networks", "adversarial-attacks", "robustness", "deep-learning", "graph-mining"], "description": "Implementation of the WSDM 2021 paper \"Node Similarity Preserving Graph Convolutional Networks\""}
{"name": "63days/partglot", "full_name": "63days/PartGlot", "topics": ["computer-vision", "deep-learning", "nlp", "vision-and-language"], "description": "Official Implementation of PartGlot (CVPR 2022 Oral)"}
{"name": "alvinwan/nbdt-pytorch-image-models", "full_name": "alvinwan/nbdt-pytorch-image-models", "topics": ["pytorch", "neural-backed-decision-trees", "imagenet", "efficientnet"], "description": "Neural-Backed Decision Tree sample integration with pytorch-image-models"}
{"name": "mephisto405/wcmc-public", "full_name": "Mephisto405/WCMC", "topics": ["deep-learning", "siggraph", "path-tracing", "monte-carlo-ray-tracing", "ray-tracing", "weakly-supervised-learning", "denoising", "image-reconstruction", "acm-tog", "contrastive-learning"], "description": "Weakly-Supervised Contrastive Learning in Path Manifold for Monte Carlo Image Reconstruction [Cho et al. SIGGRAPH 2021]"}
{"name": "runxinxu/git", "full_name": "RunxinXu/GIT", "topics": ["document-level", "event-extraction", "nlp", "information-extraction"], "description": "Source code for ACL-IJCNLP 2021 Long paper: Document-level Event Extraction via Heterogeneous Graph-based Interaction Model with a Tracker."}
{"name": "charliedinh/fedl_pytorch", "full_name": "CharlieDinh/FEDL_pytorch", "topics": ["pytorch", "federated-learning", "second-order-optimization", "fedl"], "description": "This repository implements FEDL using pytorch"}
{"name": "jlcsilva/efficientunetplusplus", "full_name": "jlcsilva/EfficientUNetPlusPlus", "topics": ["pytorch", "deep-learning", "segmentation", "unet", "efficientnet", "unetplusplus", "efficientunetplusplus", "medical-image-segmentation"], "description": "Decoder architecture based on the UNet++. Combining residual bottlenecks with depthwise convolutions and attention mechanisms, it outperforms the UNet++ in a coronary artery segmentation task, while being significantly more computationally efficient."}
{"name": "abhilash1910/clustertransformer", "full_name": "abhilash1910/ClusterTransformer", "topics": ["transformer", "albert", "bert-embeddings", "roberta-model", "pytorch-implementation", "embeddings", "clustering", "distilbert", "pytorch"], "description": "Topic clustering library built on Transformer embeddings and cosine similarity metrics.Compatible with all BERT base transformers from huggingface."}
{"name": "nasib104/video-captioning-models-in-pytorch", "full_name": "nasib-ullah/video-captioning-models-in-Pytorch", "topics": ["video-captioning", "deep-learning", "sequence-to-sequence", "msvd", "msrvtt", "s2vt", "pytorch", "pytorch-implementation", "video-captioning-models", "video", "marn", "recnet"], "description": "A PyTorch implementation of state of the art video captioning models from 2015-2019 on MSVD and MSRVTT datasets."}
{"name": "wukekever/dgm-and-drm", "full_name": "wukekever/DGM-and-DRM", "topics": ["deep-learning", "pde"], "description": "Several code for the paper: A comparison study of deep Galerkin method and deep Ritz method for elliptic problems with different boundary conditions"}
{"name": "hccho2/transformer_dateconversion", "full_name": "hccho2/Transformer_DateConversion", "topics": [], "description": "pytorch.nn.Transformer, torchtext, Tensorflow 2, Keras"}
{"name": "midas-research/dlkp", "full_name": "midas-research/dlkp", "topics": ["deep-learning", "machine-learning", "nlp", "dataset", "keyphrase-extraction", "keyphrase-generation", "information-extraction", "information-retrieval"], "description": "A deep learning library for identifying keyphrases from text"}
{"name": "lifeitech/nce", "full_name": "lifeitech/nce", "topics": ["pytorch", "nce", "energy-based-model", "generative-modeling", "machine-learning"], "description": "Noise Contrastive Estimation (NCE) in PyTorch"}
{"name": "danlou/bert-disambiguation", "full_name": "danlou/bert-disambiguation", "topics": ["nlp", "wsd", "bert", "bert-embeddings"], "description": "Code and CoarseWSD-20 datasets for \"Language Models and Word Sense Disambiguation: An Overview and Analysis\""}
{"name": "reneeye/const", "full_name": "ReneeYe/ConST", "topics": ["contrastive-learning", "machine-translation", "neural-machine-translation", "pytorch", "speec", "speech-translation", "transformer", "translation", "spoken-language-processing", "naacl2022"], "description": "code for paper \"Cross-modal Contrastive Learning for Speech Translation\" (NAACL 2022)"}
{"name": "code-kern-ai/kern-python", "full_name": "code-kern-ai/refinery-python-sdk", "topics": ["python", "sdk", "data-centric-ai", "machine-learning", "natural-language-processing", "nlp", "spacy", "supervised-learning", "text-annotation", "text-classification", "transformer", "deep-learning", "labeling", "labeling-tool", "neural-search", "active-learning"], "description": "Official Python SDK for Kern AI refinery."}
{"name": "bfshi/vars", "full_name": "bfshi/VARS", "topics": ["attention", "icml", "robustness", "transformer"], "description": "Official code for `Visual Attention Emerges from Recurrent Sparse Reconstruction' (ICML 2022)"}
{"name": "cdancette/detect-shortcuts", "full_name": "cdancette/detect-shortcuts", "topics": ["deep-learning", "visual-question-answering", "biases"], "description": "Repo for ICCV 2021 paper: Beyond Question-Based Biases: Assessing Multimodal Shortcut Learning in Visual Question Answering "}
{"name": "pabannier/nanograd", "full_name": "PABannier/nanograd", "topics": ["convolutions", "deep-learning", "neural-networks"], "description": "A lightweight deep learning framework"}
{"name": "tud-ccc/compy-learn", "full_name": "tud-ccc/compy-learn", "topics": ["ml4code", "clang", "llvm", "deep-learning", "graph-neural-networks", "recurrent-neural-networks", "llvm-ir", "abstract-syntax-tree"], "description": "ComPy-Learn is a framework for exploring program representations for ML4CODE tasks."}
{"name": "karlxing/rlcodebase", "full_name": "KarlXing/RLCodebase", "topics": ["reinforcement-learning-algorithms", "procgen", "atari", "pytorch", "td3", "a2c", "sac", "dqn", "prioritized-experience-replay", "pybullet", "mujoco", "reinforcement-learning", "codebase", "ddpg", "ppo"], "description": "RLCodebase: PyTorch Codebase For Deep Reinforcement Learning Algorithms"}
{"name": "dumitrescustefan/ro-sts", "full_name": "dumitrescustefan/RO-STS", "topics": ["ro-sts", "nlp", "sts", "romanian"], "description": "Romanian Semantic Textual Similarity Dataset "}
{"name": "lmbxmu/epruner", "full_name": "lmbxmu/EPruner", "topics": [], "description": "Pytorch implementation of our paper accepted by IEEE TNNLS, 2021 -- Network Pruning using Adaptive Exemplar Filters"}
{"name": "ml-jku/mc-lstm", "full_name": "ml-jku/mc-lstm", "topics": ["deep-learning", "machine-learning", "lstm"], "description": "Experiments with Mass Conserving LSTMs"}
{"name": "micmic123/qmapcompression", "full_name": "micmic123/QmapCompression", "topics": ["compression", "pytorch", "deeplearning", "iccv2021"], "description": "Official implementation of \"Variable-Rate Deep Image Compression through Spatially-Adaptive Feature Transform\", ICCV 2021"}
{"name": "npurson/hello-dian.ai", "full_name": "npurson/hello-dian.ai", "topics": ["neural-network", "deep-learning"], "description": "\ud83d\udc4b Lab assignments for Introduction Course of Dian.ai (Dian AI Group)."}
{"name": "minjunkang/dualpixelface", "full_name": "MinJunKang/DualPixelFace", "topics": ["deep-learning", "depth-estimation", "dual-pixel", "face-reconstruction", "normal-estimation"], "description": "Facial Depth and Normal Estimation using Dual-Pixel Camera (ECCV 22)"}
{"name": "similarityguidedsampling/similarity-guided-sampling", "full_name": "SimilarityGuidedSampling/Similarity-Guided-Sampling", "topics": ["computer-vision", "deep-learning", "cvpr", "cvpr2021", "action-recognition"], "description": "3D CNNs with Adaptive Temporal Feature Resolutions (CVPR2021) https://arxiv.org/abs/2011.08652"}
{"name": "phlippe/citris", "full_name": "phlippe/CITRIS", "topics": ["causality", "deep-learning", "pytorch", "causal-representation-learning"], "description": "Code repository of the paper \"CITRIS: Causal Identifiability from Temporal Intervened Sequences\" and \"iCITRIS: Causal Representation Learning for Instantaneous Temporal Effects\""}
{"name": "neelabhsinha/flame", "full_name": "neelabhsinha/flame", "topics": ["gaze-estimation", "computer-vision", "deep-learning", "paper-implementation", "official"], "description": "Original Pytorch Implementation of FLAME: Facial Landmark Heatmap Activated Multimodal Gaze Estimation"}
{"name": "yifeiacc/costa", "full_name": "yifeiacc/COSTA", "topics": ["contrastive-learning", "deep-learning", "graph", "graph-contrastive-learning", "graph-neural-networks", "pytorch"], "description": "Code for KDD'22 paper, COSTA: Covariance-Preserving Feature Augmentation for Graph Contrastive Learning"}
{"name": "howiema/transfusion-pose", "full_name": "HowieMa/TransFusion-Pose", "topics": ["pose-estimation", "pytorch", "3d-human-pose", "vision-transformer", "epipolar-geometry"], "description": "[BMVC2021] \"TransFusion: Cross-view Fusion with Transformer for 3D Human Pose Estimation\""}
{"name": "oikosohn/compound-loss-pytorch", "full_name": "oikosohn/compound-loss-pytorch", "topics": ["pytorch", "loss-functions"], "description": "Compound loss for PyTorch"}
{"name": "chenghaomou/embeddings", "full_name": "ChenghaoMou/embeddings", "topics": ["nlp", "embeddings", "text-processing", "transformers"], "description": "zero-vocab or low-vocab embeddings"}
{"name": "menghuanlater/tianchi2020chinesemedicinener", "full_name": "menghuanlater/Tianchi2020ChineseMedicineNER", "topics": ["pytorch", "roberta", "machine-reading-comprehension", "named-entity-recognition"], "description": "2020\u963f\u91cc\u4e91\u5929\u6c60\u5927\u6570\u636e\u7ade\u8d5b-\u4e2d\u533b\u836f\u547d\u540d\u5b9e\u4f53\u8bc6\u522b\u6311\u6218\u8d5b"}
{"name": "juliawolleb/descargan", "full_name": "JuliaWolleb/DeScarGAN", "topics": [], "description": "Official Pytorch implementation of the paper DeScarGAN"}
{"name": "milvlg/mt-captioning", "full_name": "MILVLG/mt-captioning", "topics": ["image-captioning", "pytorch", "multimodal-transformer"], "description": "A PyTorch implementation of the paper Multimodal Transformer with Multiview Visual Representation for Image Captioning"}
{"name": "martinwhl/informer-pytorch-lightning", "full_name": "martinwhl/Informer-PyTorch-Lightning", "topics": ["deep-learning", "time-series-forecasting", "time-series-prediction", "informer", "pytorch", "pytorch-lightning"], "description": "A reorganized implementation of Informer based on PyTorch Lightning"}
{"name": "leoluopy/groupfacepytorch", "full_name": "leoluopy/GroupFacePytorch", "topics": [], "description": "none official  pytorch implement of CVPR2020 GroupFace"}
{"name": "ukcheolshin/thermalmonodepth", "full_name": "UkcheolShin/ThermalMonoDepth", "topics": ["deep-learning", "depth-estimation", "infrared-sensors", "monocular-depth", "pose-estimation", "self-supervised-learning", "thermal-camera", "thermal-images", "unsupervised-learning"], "description": "Official implementation of the paper \"Maximizing Self-supervision from Thermal Image for Effective Self-supervised Learning of Depth and Ego-motion\""}
{"name": "habla-liaa/ser-with-w2v2", "full_name": "habla-liaa/ser-with-w2v2", "topics": ["speech-emotion-recognition", "wav2vec2", "deep-learning", "tensorflow", "speech"], "description": "Official implementation of INTERSPEECH 2021 paper 'Emotion Recognition from Speech Using Wav2vec 2.0 Embeddings'"}
{"name": "vloison/handwritten_text_recognition", "full_name": "vloison/Handwritten_Text_Recognition", "topics": ["crnn", "htr", "iam-dataset", "ctcloss", "handwritten-text-recognition", "data-augmentation", "pytorch", "deep-learning", "computer-vision"], "description": null}
{"name": "lucaslie/provable_pruning", "full_name": "lucaslie/torchprune", "topics": ["neural-networks", "filter-pruning", "weight-pruning", "coresets", "deep-learning", "generalization-ability", "pytorch", "machine-learning", "tensor-decomposition", "sparsification", "sparsity", "compression", "neural-architecture-search", "tinyml", "pruning", "pruning-algorithms"], "description": "A research library for pytorch-based neural network pruning, compression, and more."}
{"name": "zerohd4869/slk-ner", "full_name": "zerohd4869/SLK-NER", "topics": ["natural-language-processing", "named-entity-recognition"], "description": "Source code for SEKE 2020 paper \"SLK-NER: Exploiting Second-order Lexicon Knowledge for Chinese NER\""}
{"name": "keio-bioinformatics/mxfold2", "full_name": "mxfold/mxfold2", "topics": ["rna-secondary-structure-prediction", "deep-learning"], "description": "MXfold2: RNA secondary structure prediction using deep learning with thermodynamic integration"}
{"name": "beierzhu/xerm", "full_name": "BeierZhu/xERM", "topics": ["aaai2022", "long-tailed-recognition"], "description": "[AAAI 2022 Oral] This is a Pytorch implementation of the AAAI 2022 paper \"Cross-Domain Empirical Risk Minimization for Unbiased Long-tailed Classification\""}
{"name": "bird-tao/clcrn", "full_name": "BIRD-TAO/CLCRN", "topics": ["aaai2022", "graph-neural-networks", "spatio-temporal", "spherical-geometry", "continuous-convolution", "meteorological-forecasting", "pytorch"], "description": "This is an official Pytorch implementation of Conditional Local Convolution for Spatio-temporal Meteorological Forecasting, AAAI 2022 "}
{"name": "icescentral/mask_public", "full_name": "icescentral/MASK_public", "topics": ["natural-language-processing", "named-entity-recognition", "de-identification", "anonymization"], "description": "Masking identifiable information from health related documents."}
{"name": "pooya-mohammadi/fer", "full_name": "pooya-mohammadi/FER", "topics": ["fer", "fer2013", "pytorch", "deep-learning", "cnn", "classification"], "description": "We present our facial expression recognition models for fer-2013 dataset"}
{"name": "kulbachcedric/deepriver", "full_name": "online-ml/deep-river", "topics": ["data-science", "deep-learning", "incremental-learning", "machine-learning", "neural-network", "online-deep-learning", "online-learning", "outlier-detection", "pytorch", "stream"], "description": null}
{"name": "klarh/geometric_algebra_attention", "full_name": "klarh/geometric_algebra_attention", "topics": [], "description": "Geometric algebra attention mechanism for tensorflow, keras, pytorch, and jax"}
{"name": "bm-k/kobart-summarization-pytorch", "full_name": "BM-K/KoBART-summarization-pytorch", "topics": [], "description": "\ud83e\uddc0 KoBART summarization using pytorch"}
{"name": "seolhokim/mujoco-pytorch", "full_name": "seolhokim/Mujoco-Pytorch", "topics": ["pytorch", "mujoco", "reinforcement-learning", "ppo", "ppo2", "sac", "hopper", "halfcheetah", "ddpg"], "description": "PPO, DDPG, SAC implementation on mujoco environment"}
{"name": "jimin9401/avocado", "full_name": "Jimin9401/avocado", "topics": ["nlp", "tokenization", "domain-adaptation", "pytorch"], "description": "AVocaDo :  Strategy for Adapting Vocabulary to Downstream Domain"}
{"name": "aispeech-lab/advr-avss", "full_name": "aispeech-lab/advr-avss", "topics": ["audio-visual-speech-separation"], "description": "Pytorch implementation of  our paper: Audio-Visual Speech Separation with Visual Features Enhanced by Adversarial Training."}
{"name": "yashsharma/c2c", "full_name": "YashSharma/C2C", "topics": ["deep-learning", "multiple-instance-learning", "weakly-supervised-learning", "whole-slide-imaging", "histopathology"], "description": "Implementation of Cluster-to-Conquer: A Framework for End-to-End Multi-Instance Learning for Whole Slide Image Classification approach."}
{"name": "zjufanlab/bulk2space", "full_name": "ZJUFanLab/bulk2space", "topics": ["bulk-sequencing", "deep-learning", "scrna-seq", "spatial-transcriptomics"], "description": "a spatial deconvolution method based on deep learning frameworks, which converts bulk transcriptomes into spatially resolved single-cell expression profiles"}
{"name": "fupinglee/calculatecaptcha_recognition", "full_name": "fupinglee/CalculateCaptcha_Recognition", "topics": [], "description": "\u4f7f\u7528pytorch\u8bad\u7ec3\u548c\u8bc6\u522b\u8ba1\u7b97\u9a8c\u8bc1\u7801\uff08\u82e5\u4f9d\u9a8c\u8bc1\u7801\uff09"}
{"name": "hi-king/tokyo_photo2geo", "full_name": "Hi-king/tokyo_photo2geo", "topics": ["deeplearning", "python", "pytorch"], "description": "Predict where the photo was taken from single shot image"}
{"name": "faresbs/san", "full_name": "faresbs/san", "topics": ["nlp", "gesture-recognition", "language-learning", "action-recognition", "deep-learning"], "description": "The official PyTorch implementation of \"Context Matters: Self-Attention for sign Language Recognition\""}
{"name": "tencentyouturesearch/basearchitecture-eat", "full_name": "TencentYoutuResearch/BaseArchitecture-EAT", "topics": [], "description": "Official pytorch implementation of the paper \"Analogous to Evolutionary Algorithm: Designing a Unified Sequence Model, NeurIPS'21\"."}
{"name": "tomassosorio/nlpiper", "full_name": "dlite-tools/NLPiper", "topics": ["nlp", "preprocessing", "text", "text-processing", "text-analysis", "nlp-library", "nlp-parsing", "preprocessing-data"], "description": "NLPiper is a package that agglomerates different NLP tools and applies their transformations in the target document."}
{"name": "devzhk/cgds-package", "full_name": "devzhk/cgds-package", "topics": ["pytorch", "optimizers"], "description": "Package for CGD and ACGD optimizers"}
{"name": "decile-team/distil", "full_name": "decile-team/distil", "topics": ["deep-learning", "reducing-labeling-costs", "active-learning"], "description": "DISTIL: Deep dIverSified inTeractIve Learning. An active/inter-active learning library built on py-torch for reducing labeling costs."}
{"name": "developer0hye/pytorch-backbone-benchmark", "full_name": "developer0hye/pytorch-backbone-benchmark", "topics": ["pytorch", "benchmark", "timm"], "description": "Benchmarks for popular neural network models supported by timm"}
{"name": "lqzhao/safnet", "full_name": "lqzhao/SAFNet", "topics": ["semantic-segmentation", "deep-learning", "pytorch", "similarity-measures"], "description": "[IROS 2021] Implementation of \"Similarity-Aware Fusion Network for 3D Semantic Segmentation\""}
{"name": "prismformore/expat", "full_name": "prismformore/expAT", "topics": ["person-reidentification", "computer-vision", "pytorch", "market1501", "dukemtmc-reid-dataset", "sysu-mm01", "classification"], "description": "TIP: Bi-directional Exponential Angular Triplet Loss for RGB-Infrared Person Re-Identification"}
{"name": "nachiket273/pytorch_resnet_rs", "full_name": "nachiket273/pytorch_resnet_rs", "topics": ["pytorch", "deep-learning", "resnet", "imagenet", "python3", "pretrained-models", "computer-vision"], "description": "Pytorch implementation of \"Revisiting ResNets: Improved Training and Scaling Strategies\"(https://arxiv.org/pdf/2103.07579.pdf)"}
{"name": "derek285/yolov4_deep_sort_pytorch", "full_name": "derek285/yolov4_deep_sort_pytorch", "topics": [], "description": "MOT using deepsort and yolov4 with pytorch"}
{"name": "sooftware/transformer-pytorch", "full_name": "sooftware/transformer", "topics": ["transformer", "seq2seq", "attention-is-all-you-need", "attention", "nlp"], "description": "A PyTorch Implementation of \"Attention Is All You Need\""}
{"name": "alexduvalinho/graphsvx", "full_name": "AlexDuvalinho/GraphSVX", "topics": ["gnn", "explainable-ai", "explainer", "graphs"], "description": "Explanation method for Graph Neural Networks (GNNs)"}
{"name": "weiyx16/clip-pytorch", "full_name": "weiyx16/CLIP-pytorch", "topics": ["clip", "pytorch", "image-text-matching"], "description": "A non-JIT version implementation / replication of CLIP of OpenAI in pytorch"}
{"name": "kamino666/video-captioning-transformer", "full_name": "Kamino666/Video-Captioning-Transformer", "topics": ["pytorch", "transformer", "video-captioning"], "description": "\u8fd9\u662f\u4e00\u4e2a\u57fa\u4e8ePytorch\u5e73\u53f0\u3001Transformer\u6846\u67b6\u5b9e\u73b0\u7684\u89c6\u9891\u63cf\u8ff0\u751f\u6210 (Video Captioning) \u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\u3002  \u89c6\u9891\u63cf\u8ff0\u751f\u6210\u4efb\u52a1\u6307\u7684\u662f\uff1a\u8f93\u5165\u4e00\u4e2a\u89c6\u9891\uff0c\u8f93\u51fa\u4e00\u53e5\u63cf\u8ff0\u6574\u4e2a\u89c6\u9891\u5185\u5bb9\u7684\u6587\u5b57\uff08\u524d\u63d0\u662f\u89c6\u9891\u8f83\u77ed\u4e14\u53ef\u4ee5\u7528\u4e00\u53e5\u8bdd\u6765\u63cf\u8ff0\uff09\u3002\u672crepo\u4e3b\u8981\u76ee\u7684\u662f\u5e2e\u52a9\u89c6\u529b\u969c\u788d\u8005\u6b23\u8d4f\u7f51\u7edc\u89c6\u9891\u3001\u611f\u77e5\u5468\u56f4\u73af\u5883\uff0c\u4fc3\u8fdb\u201c\u65e0\u969c\u788d\u89c6\u9891\u201d\u7684\u53d1\u5c55\u3002"}
{"name": "helmholtzai-consultants-munich/ml-pipeline-template", "full_name": "HelmholtzAI-Consultants-Munich/Quicksetup-ai", "topics": ["deep-learning", "pytorch-lightning"], "description": "A flexible template, as a quick setup for deep learning projects in pytorch-lightning "}
{"name": "wenzhu23333/federated-learning", "full_name": "wenzhu23333/Federated-Learning", "topics": ["pytorch", "federated-learning", "deep-learning", "lstm", "cnn"], "description": "An open source FL implement with dataset(Femnist, Shakespeare, MNIST, Cifar-10 and Fashion-Mnist) using pytorch"}
{"name": "nickkaparinos/openai-gym-projects", "full_name": "NickKaparinos/OpenAI-Gym-Projects", "topics": ["gym", "python", "deep-reinforcement-learning", "deep-learning", "tianshou", "stable-baselines3", "dqn", "sac", "mujoco", "mujoco-environments"], "description": "OpenAI Gym environment solutions using Deep Reinforcement Learning."}
{"name": "reafly/acsnet", "full_name": "ReaFly/ACSNet", "topics": [], "description": "MICCAI 2020 : Adaptive Context Selection for Polyp Segmentation (Pytorch implementation)."}
{"name": "kalpeshjp89/usisresnet", "full_name": "kalpeshjp89/USISResNet", "topics": ["single-image-super-resolution", "generative-adversarial-network", "convolutional-neural-networks", "usisresnet"], "description": "This repository includes code of training/testing of our work published in NTIRE-2020 workshop titled \"Unsupervised Single Image Super-Resolution Network (USISResNet) for Real-World Data Using Generative Adversarial Network\"."}
{"name": "tomdbar/naqs-for-quantum-chemistry", "full_name": "tomdbar/naqs-for-quantum-chemistry", "topics": ["neural-network-quantum-states", "quantum-chemistry", "pytorch", "publication"], "description": "Supporting code for \"Autoregressive neural-network wavefunctions for ab initio quantum chemistry\"."}
{"name": "neulab/retomaton", "full_name": "neulab/retomaton", "topics": ["icml-2022", "knn", "language", "modeling", "nearest", "nearest-neighbor", "neuro-symbolic", "neurosymbolic", "pytorch", "retrieval", "knn-lm", "retomaton"], "description": "PyTorch code for the RetoMaton paper: \"Neuro-Symbolic Language Modeling with Automaton-augmented Retrieval\" (ICML 2022)"}
{"name": "york-sdcnlab/ghost-deblurgan", "full_name": "York-SDCNLab/Ghost-DeblurGAN", "topics": ["deblurring", "deep-learning", "gan", "fiducial-markers", "apriltag", "benchmark", "robotics", "motion-blur", "motion-blur-elimination", "pytorch", "pytorch-implementation", "deblurgan", "ghostnet", "deblurganv2", "iros"], "description": "This is a lightweight GAN developed for real-time deblurring. The model has a super tiny size and a rapid inference time. The motivation is to boost marker detection in robotic applications, however, you may use it for other applications definitely. "}
{"name": "soptq/dynamic_load_balance_distributeddnn", "full_name": "Soptq/Dynamic_Load_Balance_DistributedDNN", "topics": [], "description": "Official Pytorch implementation of \"DBS: Dynamic Batch Size for Distributed Deep Neural Network Training\""}
{"name": "saurav-31/vitol", "full_name": "Saurav-31/ViTOL", "topics": ["cvpr-2022", "pytorch", "l3divu"], "description": "ViTOL "}
{"name": "kaist-hcil/deepfisheyenet", "full_name": "KAIST-HCIL/DeepFisheyeNet", "topics": ["fisheye-camera", "deep-learning", "hci", "paper"], "description": "DeepFisheye: Near-Surface Multi-Finger Tracking Technology Using Fisheye Camera (UIST 2020)"}
{"name": "jeremdona/spatiotemporal_variable_separation", "full_name": "JeremDona/spatiotemporal_variable_separation", "topics": ["pytorch", "deep-learning", "predictive-models", "disentanglement"], "description": "Official implementation of the paper *PDE-Driven Spatiotemporal Disentanglement*"}
{"name": "sharifza/schemata", "full_name": "sharifza/schemata", "topics": ["scene-graph-classification", "classification", "schema", "visual-genome", "aaai", "pytorch", "self-supervised", "graphs", "knowledge-graph", "schemata"], "description": "This repository contains code and dataset splits for the paper \"Classification by Attention: Scene Graph Classification with Prior Knowledge\""}
{"name": "lucidrains/metaformer-gpt", "full_name": "lucidrains/metaformer-gpt", "topics": ["artificial-intelligence", "deep-learning", "token-mixing", "autoregressive"], "description": "Implementation of Metaformer, but in an autoregressive manner"}
{"name": "anyuexuan/conditional-self-supervised-learning", "full_name": "anyuexuan/CSS", "topics": ["few-shot-learning", "gnn", "self-supervised-learning"], "description": "Code for \"Conditional Self-Supervised Learning for Few-Shot Classification\" in IJCAI 2021."}
{"name": "taoshuchang/g-nia", "full_name": "TaoShuchang/G-NIA", "topics": ["gnn", "adversarial-attacks", "machine-learning", "pytorch", "graph-data", "data-mining", "graph-neural-networks"], "description": "G-NIA model from \"Single Node Injection Attack against Graph Neural Networks\" (CIKM 2021)"}
{"name": "sapienzanlp/unify-srl", "full_name": "SapienzaNLP/unify-srl", "topics": ["nlp", "deep-learning", "semantics", "cross-lingual", "semantic-role-labeling"], "description": "Unifying Cross-Lingual Semantic Role Labeling with Heterogeneous Linguistic Resources (NAACL-2021)."}
{"name": "somepythonprogrammer/jarvis", "full_name": "N3RDIUM/JARVIS", "topics": ["voice-assistant", "voice-recognition", "voice-chat", "voice-synthesis", "python", "gtts", "silero-models", "speech-recognition", "speech-to-text", "speech", "text-to-speech", "chatterbot", "jarvis", "pytorch", "porcupine", "wake-word", "wake-words"], "description": "J.A.R.V.I.S is an AI personal assistant made in python. (It works offline!)"}
{"name": "junyoungpark/cgs", "full_name": "Junyoungpark/CGS", "topics": ["pytorch", "graph", "graph-neural-networks", "gnn-model"], "description": "The official implementation of Convergent Graph Solvers (CGS)"}
{"name": "ginevracoal/robustbnns", "full_name": "ginevracoal/robustBNNs", "topics": ["deep-learning", "adversarial-attacks", "bayesian-inference"], "description": "Code for paper \"Robustness of Bayesian Neural Networks to Gradient-Based Attacks\""}
{"name": "ola-vish/lung-tumor-segmentation", "full_name": "Ola-Vish/lung-tumor-segmentation", "topics": ["pytorch", "pytorch-lightning", "deep-learning", "semantic-segmentation"], "description": "An attempt at tumor segmentation with UNET and SegNet on the lung tumor dataset from the Medical Decathlon data. "}
{"name": "miemie2013/miemiegan", "full_name": "miemie2013/miemieGAN", "topics": ["stylegan", "stylegan2", "stylegan2-ada"], "description": "Pytorch implementation of StyleGAN2ADA"}
{"name": "isomap/factedit", "full_name": "isomap/factedit", "topics": ["acl2020", "data-to-text", "text-editing", "text-generation", "nlp", "natural-language-generation", "dataset", "table-to-text", "nlg"], "description": ":monocle_face: Code & Data for Fact-based Text Editing (Iso et al; ACL 2020)"}
{"name": "archaic-atom/jackframework", "full_name": "Archaic-Atom/JackFramework", "topics": ["python3", "pytorch"], "description": "This is a training framework based on PyTorch, which is used to rapidly build the model, without caring about the training process (such as DDP or DP, Tensorboard, et al.). The demo can be found in FrameworkTemplate (https://github.com/Archaic-Atom/Template-jf). if you have any questions, please send an e-mail to raoxi36@foxmail.com"}
{"name": "sunwei925/compressedvqa", "full_name": "sunwei925/CompressedVQA", "topics": ["compressed-videos", "video-quality-assessment", "vqa", "ugc-videos", "deep-learning", "pytorch"], "description": "Deep Learning based Full-reference and No-reference Quality Assessment Models for Compressed UGC Videos"}
{"name": "alirezamshi/g2gtr", "full_name": "alirezamshi/G2GTr", "topics": [], "description": "Pytorch implementation of Graph-to-Graph Transformer for Transition-based Dependency Parsing accepted to EMNLP 2020"}
{"name": "utahnlp/structured_tuning_srl", "full_name": "utahnlp/structured_tuning_srl", "topics": ["semantic-role-labeling", "srl", "logic", "loss-functions", "structured", "regularization", "roberta", "pytorch", "finetuning"], "description": "Implementation of our ACL 2020 paper: Structured Tuning for Semantic Role Labeling"}
{"name": "gaussalgo/adaptor", "full_name": "gaussalgo/adaptor", "topics": ["pytorch", "nlp", "transformers", "multi-objective-optimization", "domain-adaptation", "robustness"], "description": "Adaptor can help you to adapt a language model to your own data domain, task, or custom research objective(s)."}
{"name": "c8241998/cv_attention", "full_name": "c8241998/CV_attention", "topics": [], "description": "pytorch-version implementation codes of some CV attention models"}
{"name": "michigannlp/vlog_action_reason", "full_name": "MichiganNLP/vlog_action_reason", "topics": ["causality-analysis", "causal-inference", "human-activity-recognition", "vlogs", "multimodal", "natural-language-processing", "computer-vision", "youtube"], "description": "Identifying reasons for human actions in lifestyle vlogs."}
{"name": "zhangxiaoyu11/omiembed", "full_name": "zhangxiaoyu11/OmiEmbed", "topics": ["multi-omics", "multi-task-learning", "deep-learning", "cancer"], "description": "Multi-task deep learning framework for multi-omics data analysis"}
{"name": "lucidrains/triangle-multiplicative-module", "full_name": "lucidrains/triangle-multiplicative-module", "topics": ["artificial-intelligence", "deep-learning", "protein-folding"], "description": "Implementation of the Triangle Multiplicative module, used in Alphafold2 as an efficient way to mix rows or columns of a 2d feature map, as a standalone package for Pytorch"}
{"name": "netw0rkf10w/crf", "full_name": "netw0rkf10w/CRF", "topics": ["computer-vision", "machine-learning", "deep-learning", "crf", "semantic-segmentation", "graphical-models"], "description": "Conditional Random Fields"}
{"name": "hitlic/torchility", "full_name": "hitlic/torchility", "topics": ["deep-learning", "pytorch", "pytorch-lightning-bolts"], "description": "A pytorch-lightning based tool for training pytorch model more simply"}
{"name": "sungbinlim/neuboots", "full_name": "sungbinlim/NeuBoots", "topics": ["pytorch"], "description": "Neural Bootstrapper (NeuBoots)"}
{"name": "sbelharbi/deep-wsl-histo-min-max-uncertainty", "full_name": "sbelharbi/deep-wsl-histo-min-max-uncertainty", "topics": [], "description": "Pytorch code for the paper \"Deep Interpretable Classification and Weakly-Supervised Segmentation of Histology Images via Max-Min Uncertainty\"."}
{"name": "ternaus/datasouls_antispoof", "full_name": "ternaus/datasouls_antispoof", "topics": ["deep-learning", "neural-network", "antispoofing", "liveness-detection", "computer-vision", "image-classification"], "description": "Code and pre-trained models for detecting spoofing attacks from images."}
{"name": "huangdebo/yolov4-multitask", "full_name": "Huangdebo/YOLOv4-MultiTask", "topics": [], "description": "YOLOv4-MultiTask for Pytorch"}
{"name": "soco-ai/sf-qa", "full_name": "soco-ai/SF-QA", "topics": ["natural-language-processing", "mrc", "squad", "machine-reading-comprehension", "open-domain-qa"], "description": "Evaluation framework for open-domain question answering."}
{"name": "aangelopoulos/conformal-risk", "full_name": "aangelopoulos/conformal-risk", "topics": ["computer-vision", "conformal", "conformal-prediction", "natural-language-processing", "python", "pytorch", "pytorch-implementation", "uncertainty-estimation", "uncertainty-quantification"], "description": "Conformal prediction for controlling monotonic risk functions. Simple accompanying PyTorch code for conformal risk control in computer vision and natural language processing."}
{"name": "lijichang/cvpr2021-ssda", "full_name": "lijichang/CVPR2021-SSDA", "topics": ["domain-adaptation", "semi-supervised-learning"], "description": "A pytorch implementation for \"Cross-Domain Adaptive Clustering for Semi-Supervised Domain Adaptation\", which is accepted by CVPR2021."}
{"name": "alejandrods/cover-letter-generator-gpt2", "full_name": "alejandrods/Cover-Letter-Generator-gpt2", "topics": ["machine-learning", "python", "text-generation", "cover-letter", "gpt2", "artificial-intelligence", "pytorch", "programming", "google-cloud-platform"], "description": "Service for generating cover letter using GPT-2 model, deployed on Google Cloud."}
{"name": "lanyunzhu99/learning-statistical-texture-for-semantic-segmentation", "full_name": "lanyunzhu99/Learning-Statistical-Texture-for-Semantic-Segmentation", "topics": [], "description": "Pytorch code for CVPR2021 paper \"Learning Statistical Texture for Semantic Segmentation\""}
{"name": "jasonfenggit/neural-model-translation", "full_name": "JasonFengGit/Neural-Model-Translation", "topics": ["nmt", "nmt-model", "machine-translation", "machine-translation-models", "nlp", "chinese-english-translator", "natural-language-processing", "pytorch", "seq2seq", "lstm", "gru"], "description": "A Chinese to English Neural Model Translation Project"}
{"name": "perceivelab/hd2s", "full_name": "perceivelab/hd2s", "topics": ["deep-learning", "video-saliency-prediction", "ijcv", "ijcv2021", "dhf1k", "saliency", "s3d", "mobilnet-v2", "deep-supervision"], "description": "The official PyTorch implementation for paper \"Hierarchical Domain-Adapted Feature Learning for Video Saliency Prediction\""}
{"name": "upskyy/contextnet", "full_name": "upskyy/ContextNet", "topics": ["pytorch", "speech-recognition", "asr", "contextnet"], "description": "PyTorch implementation of \"ContextNet: Improving Convolutional Neural Networks for Automatic Speech Recognition with Global Context\" (INTERSPEECH 2020)"}
{"name": "iantaehoonyoo/semantic-segmentation-pytorch", "full_name": "IanTaehoonYoo/semantic-segmentation-pytorch", "topics": ["pytorch", "computer-vision", "semantic-segmentation", "fcn", "fcn8s", "resnet50", "resnet", "unet", "pspnet", "mobileunet", "vgg", "vgg16", "convolutional-networks", "deep-learning"], "description": "Pytorch implementation of FCN, UNet, PSPNet, and various encoder models."}
{"name": "lavieluo/drmea", "full_name": "LavieLuo/DRMEA", "topics": ["domain-adaptation", "manifold-learning", "aaai2020"], "description": "Pytorch code for \u201cUnsupervised Domain Adaptation via Discriminative Manifold Embedding and Alignment \u201d (DRMEA) (AAAI 2020)."}
{"name": "ukplab/useb", "full_name": "UKPLab/useb", "topics": ["sentence-embeddings", "unsupervised-learning", "benchmark", "domain-adaptation", "information-retrieval", "reranking", "paraphrase-identification", "sbert", "transformer", "pytorch", "nlp"], "description": "Heterogenous, Task- and Domain-Specific Benchmark for Unsupervised Sentence Embeddings used in the TSDAE paper: https://arxiv.org/abs/2104.06979."}
{"name": "confusezius/characterizing_generalization_in_deepmetriclearning", "full_name": "Confusezius/Characterizing_Generalization_in_DeepMetricLearning", "topics": ["deep-metric-learning", "generalization", "out-of-distribution", "cub200-2011", "cars196", "stanford-online-products", "pytorch", "deep-learning"], "description": "Implementation and Benchmark Splits to study Out-of-Distribution Generalization in Deep Metric Learning."}
{"name": "1148330040/tensorflow-torch", "full_name": "1148330040/TensorFlow-Torch", "topics": [], "description": "tf&torch about nlp"}
{"name": "omni-us/research-ganwriting", "full_name": "omni-us/research-GANwriting", "topics": ["generative-adversarial-network", "handwriting-synthesis"], "description": "Source code for ECCV20 \"GANwriting: Content-Conditioned Generation of Styled Handwritten Word Images\""}
{"name": "wl-zhao/diml", "full_name": "wl-zhao/DIML", "topics": ["interpretable-deep-learning", "deep-metric-learning", "iccv2021", "computer-vision", "deep-learning"], "description": "[ICCV 2021] Towards Interpretable Deep Metric Learning with Structural Matching"}
{"name": "ink-usc/numersense", "full_name": "INK-USC/NumerSense", "topics": ["nlp", "language-models", "commonsense-extraction", "commonsense-reasoning"], "description": "The data and code for NumerSense (EMNLP2020)"}
{"name": "wilhelmberghammer/pneumonia_detection", "full_name": "wilhelmberghammer/pneumonia_detection", "topics": ["pytorch", "machine-learning", "computer-vision", "ai-health", "healthcare"], "description": "Pneumonia Detection using machine learning - with PyTorch"}
{"name": "rangilyu/efficientnet-lite", "full_name": "RangiLyu/EfficientNet-Lite", "topics": [], "description": "Pytorch implementation of EfficientNet-lite. ImageNet pre-trained models are provided."}
{"name": "fandady/helmet-detection-yolov5", "full_name": "FanDady/Helmet-Detection-YoloV5", "topics": ["yolov5s", "pytorch", "python"], "description": "Safety helmet wearing detection on construction site based on YoloV5s-V5.0 including helmet dataset\uff08\u57fa\u4e8eYoloV5-V5.0\u7684\u5de5\u5730\u5b89\u5168\u5e3d\u68c0\u6d4b\u5e76\u4e14\u5305\u542b\u5f00\u6e90\u7684\u5b89\u5168\u5e3d\u6570\u636e\u96c6\uff09"}
{"name": "mahmoodlab/fish", "full_name": "mahmoodlab/SISH", "topics": ["pathology", "image-retrieval", "wsi-images", "histology", "image-search-engine", "histopathology", "mahmoodlab", "fish", "deep-learning", "vqvae", "bioimage-analysis", "bioimage-informatics"], "description": "Fast and scalable search of whole-slide images via self-supervised deep learning - Nature Biomedical Engineering"}
{"name": "yonghaoxu/crgnet", "full_name": "YonghaoXu/CRGNet", "topics": ["deep-learning", "pytorch", "region-growing", "remote-sensing", "semantic-segmentation", "weakly-supervised-learning", "weakly-supervised-segmentation"], "description": "[IEEE TIP 2022] Consistency-Regularized Region-Growing Network for Semantic Segmentation of Urban Scenes with Point-Level Annotations"}
{"name": "rasbt/coral_pytorch", "full_name": "Raschka-research-group/coral-pytorch", "topics": ["deep-learning", "ordinal-regression", "ordinal-classification"], "description": "CORAL and CORN implementations for ordinal regression with deep neural networks."}
{"name": "vcl3d/singleshotcuboids", "full_name": "VCL3D/SingleShotCuboids", "topics": ["pytorch", "360", "spherical-panoramas", "layout-estimation", "omnidirectional", "computer-vision", "3d-reconstruction", "room-layout", "deep-learning", "geodesics", "geodesic-distance"], "description": "Code accompanying the paper \"Single-Shot Cuboids: Geodesics-based End-to-end Manhattan Aligned Layout Estimation from Spherical Panoramas\"."}
{"name": "nice-future/predict-gender-and-age-from-camera", "full_name": "NICE-FUTURE/predict-gender-and-age-from-camera", "topics": ["deep-learning", "pytorch", "resnet"], "description": "\u3010Demo\u3011\u57fa\u4e8eCNN\u5b9e\u73b0\u5bf9\u6444\u50cf\u5934\u6355\u6349\u7684\u4eba\u8138\u8fdb\u884c\u6027\u522b\u548c\u5e74\u9f84\u7684\u9884\u6d4b\u3010\u4e8e2022.4.7\u66f4\u65b0\u3011"}
{"name": "weifantt/depts", "full_name": "weifantt/DEPTS", "topics": ["deep-learning", "timeseries-forecasting"], "description": null}
{"name": "imed-lab/re-net", "full_name": "iMED-Lab/RE-Net", "topics": ["3d-segmentation", "pytorch", "cnn", "u-net-pytorch", "medical", "medical-imaging", "re-net", "cerebrovascular"], "description": "3D cerebrovascular  volume segmentation in Pytorch."}
{"name": "foryoungyu/classicnet", "full_name": "ForyoungYu/ClassicNet", "topics": ["deep-learning"], "description": "\u7ecf\u5178\u6df1\u5ea6\u5b66\u4e60\u7f51\u7edc\u590d\u73b0"}
{"name": "imkett/pcae", "full_name": "ImKeTT/pcae", "topics": ["controllable-generation", "plug-and-play-language-models", "variational-autoencoder", "bart", "nlp", "deep-learning", "text-generation"], "description": "[KBS] PCAE: A Framework of Plug-in Conditional Auto-Encoder for Controllable Text Generation PyTorch Implementation"}
{"name": "lornatang/vdsr-pytorch", "full_name": "Lornatang/VDSR-PyTorch", "topics": ["pytorch", "super-resolution", "cnn"], "description": "PyTorch implements \"Accurate Image Super-Resolution Using Very Deep Convolutional Networks\""}
{"name": "ayaka14732/transcan", "full_name": "ayaka14732/TransCan", "topics": ["bart", "cantonese", "english", "machine-translation", "natural-language-processing", "neural-machine-translation", "transformer"], "description": "A English-to-Cantonese machine translation model"}
{"name": "neeraj3029/ne2ne-image-denoising", "full_name": "neeraj3029/Ne2Ne-Image-Denoising", "topics": ["image-denoising", "deep-learning", "image-reconstruction", "self-supervised-learning", "neighbour2neighbour", "pytorch", "computer-vision"], "description": "Deep Unsupervised Image Denoising, based on Neighbour2Neighbour training"}
{"name": "forest-snow/alps", "full_name": "forest-snow/alps", "topics": ["activelearning", "emnlp2020", "nlp"], "description": "Code accompanying EMNLP 2020 paper \"Cold-start Active Learning through Self-supervised Language Modeling\"."}
{"name": "virginiaxu/deepmosaic", "full_name": "Virginiaxu/DeepMosaic", "topics": ["bioinformatics", "deep-learning", "human-genetics", "mosaic-mutation"], "description": "DeepMosaic is a deep-learning-based mosaic single nucleotide classification tool without the need of matched control information."}
{"name": "superbrucejia/pytorch-flask-deploy-webapp", "full_name": "SuperBruceJia/pytorch-flask-deploy-webapp", "topics": ["pytorch", "python", "docker", "webapp", "deep-learning", "deep-learning-models", "flask-application", "flagger", "flask-docker", "flask-docker-demo", "pytorch-models", "docker-container", "dockerfile", "named-entity-recognition", "bilstm-crf", "bilstm-crf-model", "medical", "medical-application-webapp", "medical-application"], "description": "This is a Flask + Docker deployment of the PyTorch-based Named Entity Recognition (NER) Model (BiLSTM-CRF) in the Medical AI."}
{"name": "wanghelin1997/nnaudio2", "full_name": "WangHelin1997/nnAudio2", "topics": [], "description": "Audio processing by using pytorch 1D convolution network (based on nnAudio). Gammatone Spectrogram and SpecAugmentation are now available on GPU. "}
{"name": "titu1994/tf_neural_deconvolution", "full_name": "titu1994/tf_neural_deconvolution", "topics": ["tensorflow2", "tensorflow", "keras"], "description": "Neural Deconvolutions in Tensorflow"}
{"name": "juniorrojas/springs-integration-pytorch", "full_name": "juniorrojas/springs-integration-pytorch", "topics": ["pytorch", "simulation", "physics-simulation"], "description": "Numerical integration methods for mass-springs systems"}
{"name": "yshen47/infinitenature-pytorch", "full_name": "yshen47/InfiniteNature-PyTorch", "topics": [], "description": "A pytorch version for infiniteNature"}
{"name": "jhcho99/coformer", "full_name": "jhcho99/CoFormer", "topics": ["deep-learning", "pytorch", "grounded-situation-recognition", "transformers", "scene-understanding", "tranformer", "cvpr", "cvpr2022"], "description": "[CVPR'22] Official PyTorch Implementation of \"Collaborative Transformers for Grounded Situation Recognition\""}
{"name": "relevanceai/relevanceai", "full_name": "RelevanceAI/RelevanceAI", "topics": ["python", "vector-database", "nlp", "search-engine", "embeddings", "vector-search", "clustering", "search", "unstructured-data", "computer-vision", "natural-language-processing"], "description": "Platform for unstructured data analysis"}
{"name": "alpc91/transda", "full_name": "alpc91/TransDA", "topics": ["domain-adaptation", "semantic-segmentation", "transformer", "momentum"], "description": "This is an official implementation for \"Smoothing Matters: Momentum Transformer for Domain Adaptive Semantic Segmentation\""}
{"name": "xiaoxiao-woo/udl", "full_name": "XiaoXiao-Woo/UDL", "topics": [], "description": "a practicable Pytorch framework used in Deep Learning. So far UDL only provide DCFNet implementation for the ICCV paper (Dynamic Cross Feature Fusion for Remote Sensing Pansharpening)"}
{"name": "wisnunugroho21/reinforcement_learning_phasic_policy_gradient", "full_name": "wisnunugroho21/reinforcement_learning_phasic_policy_gradient", "topics": ["reinforcement-learning", "phasic-policy-gradient", "proximal-policy-optimization", "ppo", "pytorch", "tensorflow2", "deep-learning"], "description": "Deep Reinforcement Learning by using Phasic Policy Gradient in Pytorch & Tensorflow"}
{"name": "rshaojimmy/eccv2020-osad", "full_name": "rshaojimmy/OSAD", "topics": ["adversarial-defense", "open-set-recognition"], "description": "[ECCV 2020] Pytorch codes for Open-set Adversarial Defense"}
{"name": "nuriyeyldrm/deep_image_fusion", "full_name": "nuriyeyldrm/deep_image_fusion", "topics": ["deep-learning", "pca", "dwt", "vgg19", "imgae-fusion", "multi-sensor-image-fusion", "multi-layers-strategy"], "description": "Multi-Sensor Image (infrared and visible) Fusion using deep learning framework, Principal Component Analysis, Discrete Wavelet Transform"}
{"name": "312shan/pytorch-seq2seq-beam-search", "full_name": "312shan/Pytorch-seq2seq-Beam-Search", "topics": ["seq2seq", "greedy-search", "beam-search", "nmt", "pytorch"], "description": "PyTorch implementation for Seq2Seq model with attention and Greedy Search / Beam Search for neural machine translation"}
{"name": "archinetai/audio-encoders-pytorch", "full_name": "archinetai/audio-encoders-pytorch", "topics": ["artificial-intelligence", "audio", "deep-learning"], "description": "A collection of audio autoencoders, in PyTorch."}
{"name": "xiaobaicxy/operator_qa_based_kb", "full_name": "xiaobaicxy/Operator_QA_Based_KB", "topics": ["tianchi-competition", "knowledge-base", "qa", "pytorch"], "description": "\u963f\u91cc\u5929\u6c60\u8d5b\uff1aCCKS2021 \u8fd0\u8425\u5546\u77e5\u8bc6\u56fe\u8c31\u63a8\u7406\u95ee\u7b54"}
{"name": "ucuapps/lidchallenge2020-nopeopleallowed", "full_name": "ucuapps/LIDChallenge2020-NoPeopleAllowed", "topics": ["weakly-supervised-segmentation", "lid-challenge", "pytorch", "irnet", "deeplab-v3-plus"], "description": "A 3rd place solution for LID Challenge at CVPR 2020 on Weakly Supervised Semantic Segmentation"}
{"name": "oxai/debias-vision-lang", "full_name": "oxai/debias-vision-lang", "topics": ["deep-learning", "fairness-ml", "fairness", "vision-language"], "description": "A Prompt Array Keeps the Bias Away: Debiasing Vision-Language Models with Adversarial Learning  [AACL 2022]"}
{"name": "maurapintor/pandavision", "full_name": "maurapintor/pandavision", "topics": [], "description": "Security evaluation module with onnx, pytorch, and SecML."}
{"name": "lqnew/deeper_larger_actor-critic_rl", "full_name": "LQNew/Deeper_Larger_Actor-Critic_RL", "topics": ["actor-critic", "sac", "ddpg", "td3", "ppo", "d2rl", "ofenet", "deep-reinforcement-learning"], "description": "Pytorch implementation of large network design in continous control RL. "}
{"name": "uofgravity/glasflow", "full_name": "uofgravity/glasflow", "topics": ["normalizing-flows", "torch", "pytorch"], "description": "Normalising flows implemented using nflows"}
{"name": "lakeraai/onnx_clip", "full_name": "lakeraai/onnx_clip", "topics": ["clip", "deep-learning", "onnx", "onnxruntime", "pytorch"], "description": "An ONNX-based implementation of the CLIP model that doesn't depend on torch or torchvision."}
{"name": "yzheng97/point-transformer-cls", "full_name": "yzheng97/Point-Transformer-Cls", "topics": ["deep-learning", "point-cloud", "transformer", "pytorch"], "description": "My own (unofficial) implementation of the Point Transformer Network, currently for classification tasks. "}
{"name": "snoop2head/klue-rbert", "full_name": "snoop2head/KLUE-RBERT", "topics": ["relation-extraction", "roberta", "pytorch", "klue", "nlp", "deep-learning"], "description": "\u2194\ufe0f Utilizing RBERT model structure for KLUE Relation Extraction task"}
{"name": "harderthenharder/transformers_tasks", "full_name": "HarderThenHarder/transformers_tasks", "topics": ["nlp", "text-classification", "text-matching", "information-extraction", "reinforcement-learning", "transformers", "text-generation"], "description": "\u2b50\ufe0f NLP Algorithms with transformers lib. Supporting Text-Classification, Text-Generation, Information-Extraction, Text-Matching, RLHF etc."}
{"name": "coranholmes/pt_chatbot", "full_name": "coranholmes/pt_chatbot", "topics": [], "description": "A pytorch implemented chatbot which supports Chinese \u4e2d\u6587\u804a\u5929\u673a\u5668\u4eba"}
{"name": "yunqing-me/adam", "full_name": "yunqing-me/AdAM", "topics": ["gan", "pytorch", "transfer-learning", "few-shot-adaptation"], "description": "The Thirty-Sixth Annual Conference on Neural Information Processing Systems (NeurIPS 2022)"}
{"name": "junhocho/hgcae", "full_name": "junhocho/HGCAE", "topics": [], "description": "HGCAE Pytorch implementation. CVPR2021 accepted."}
{"name": "stas00/toolbox", "full_name": "stas00/toolbox", "topics": ["make", "python", "bash", "pytorch", "slurm"], "description": "Essential programming tools in my toolbox"}
{"name": "clear-nus/ocfgan", "full_name": "clear-nus/OCFGAN", "topics": ["generative-adversarial-network", "gan", "probability-metric", "characteristic-functions"], "description": "Pytorch implementation of OCFGAN-GP (CVPR 2020, Oral)."}
{"name": "winci-ai/cw-rgp", "full_name": "winci-ai/CW-RGP", "topics": ["pytorch", "self-supervised-learning", "transfer-learning"], "description": "An official implementation of CW-RGP."}
{"name": "xmodar/invtorch", "full_name": "xmodar/invtorch", "topics": ["pytorch", "reversible", "invertible"], "description": "InvTorch: Memory-Efficient Invertible Functions"}
{"name": "ir-nlp-csui/indonli", "full_name": "ir-nlp-csui/indonli", "topics": ["natural-language-inference", "natural-language-processing"], "description": "IndoNLI"}
{"name": "rquispec/top-dropblock", "full_name": "RQuispeC/top-dropblock", "topics": ["person-reidentification", "person-reid", "reid", "deep-learning", "deep-neural-networks", "pytorch", "image-retrieval", "attention-mechanism", "reidentification", "re-identification"], "description": "Official implementation of \"Top Batch DropBlock for Person Re-Identification\" ICPR 2020"}
{"name": "notai-tech/indicasr", "full_name": "notAI-tech/IndicASR", "topics": ["speech-recognition", "telugu", "transformers", "pytorch", "wav2vec", "wav2vec2", "asr", "indian-language", "speech-to-text"], "description": "Speeech Recognition for Indic languages."}
{"name": "ccinc/3d-ml", "full_name": "CCInc/3d-ml", "topics": ["3d", "3d-deep-learning", "deep-learning", "pytorch", "point-cloud", "s3dis", "segmentation"], "description": "A versatile framework for 3D machine learning built on Pytorch Lightning and Hydra [looking for contributors!]"}
{"name": "rq-wu/underwaterranker", "full_name": "RQ-Wu/UnderwaterRanker", "topics": ["pytorch", "underwater-image-enhancement"], "description": "[AAAI 2023 Oral] | Underwater Ranker: Learn Which Is Better and How to Be Better (underwater image enhancement + underwater image quality assessment)"}
{"name": "anderzzz/monkey_caput", "full_name": "anderzzz/monkey_caput", "topics": ["clustering", "auto-encoder", "pytorch"], "description": "Custom PyTorch model (VGG-16 Auto-Encoder) and custom criterion (Local Aggregation) for image clustering. The repo contains elaborated creation of fungi image data using factory method."}
{"name": "dmangonakis/mlops-lab-example-yelp", "full_name": "Jimaras08/mlops-lab-example-yelp", "topics": ["docker", "fastapi", "pytorch", "serverless", "gcp", "postgresql", "streamlit", "mlflow", "mlops-community", "kubernetes", "model-proxy", "mlops"], "description": "MLOps Lab Example using PyTorch to predict Yelp Reviews"}
{"name": "mlf-core/machine_learning_determinism_evaluation", "full_name": "mlf-core/machine_learning_determinism_evaluation", "topics": ["nextflow", "pytorch", "gpu", "cuda", "deeplearning"], "description": "GPU deterministic machine learning with Nextflow"}
{"name": "devjwsong/transformer-translator-pytorch", "full_name": "devjwsong/transformer-translator-pytorch", "topics": ["pytorch", "transformer", "natural-language-processing", "natural-language-generation", "nlp", "nlg", "machine-translation"], "description": "The PyTorch implementation of the transformer for machine translation."}
{"name": "nawnoes/pytorch-meena", "full_name": "nawnoes/pytorch-meena", "topics": ["meena", "transformer", "seq2seq", "chatbot", "language-model"], "description": "Implementation Google Meena for open domain conversation."}
{"name": "pablovd/halographnet", "full_name": "PabloVD/HaloGraphNet", "topics": ["machine-learning", "deep-learning", "graph-neural-networks"], "description": "Predict halo masses from simulations via graph neural networks"}
{"name": "linyang-zhh/fq-vit", "full_name": "megvii-research/FQ-ViT", "topics": ["vision-transformer", "quantization", "post-training-quantization", "pytorch", "imagenet"], "description": "[IJCAI 2022] FQ-ViT: Post-Training Quantization for Fully Quantized Vision Transformer"}
{"name": "jpcorb20/bet-backtranslation-paraphrase-experiment", "full_name": "jpcorb20/bet-backtranslation-paraphrase-experiment", "topics": ["huggingface-transformers", "pytorch", "nlp", "paraphrase-detection", "backtranslation", "google-translate-api"], "description": "Code for experiments done for EMNLP2020."}
{"name": "naplab/dstrf", "full_name": "naplab/DSTRF", "topics": ["neural-network", "deep-learning", "model-analysis", "neuroscience"], "description": "Dynamic Spectrotemporal Receptive Field (dSTRF) Analysis Toolbox"}
{"name": "theobdt/aerial_pc_classification", "full_name": "theobdt/aerial_pc_classification", "topics": ["point-cloud", "pytorch", "deep-learning", "machine-learning", "pointcloud", "aerial-point-clouds", "artificial-intelligence", "python", "aerial-imagery"], "description": "Segmentation of urban aerial point clouds with Deep Learning in Pytorch."}
{"name": "lehduong/knowledge-distillation-by-replacing-cheap-conv", "full_name": "lehduong/Knowledge-Distillation-by-Replacing-Cheap-Conv", "topics": ["convolutional-neural-networks", "knowledge-distillation", "semantic-segmentation", "deeplabv3", "deeplabv3plus", "pytorch", "low-resource"], "description": "In search of effective and efficient Pipeline for Distillating Knowledge in Convolutional Neural Networks"}
{"name": "rachellea/ct-net-models", "full_name": "rachellea/ct-net-models", "topics": ["python", "machine-learning", "computer-vision", "radiology", "cnn", "convolutional-neural-networks", "pytorch", "ct-scans"], "description": "Machine learning models for multi-organ, multi-disease prediction in chest CT volumes. From paper Draelos et al. \"Machine-Learning-Based Multiple Abnormality Prediction with Large-Scale Chest Computed Tomography Volumes.\""}
{"name": "miracleyoo/pytorch-lightning-template", "full_name": "miracleyoo/pytorch-lightning-template", "topics": ["pytorch", "pytorch-lightning", "pytorch-lightning-template"], "description": "An easy/swift-to-adapt PyTorch-Lighting template. \u5957\u58f3\u6a21\u677f\uff0c\u7b80\u5355\u6613\u7528\uff0c\u7a0d\u6539\u539f\u6765Pytorch\u4ee3\u7801\uff0c\u5373\u53ef\u9002\u914dLightning\u3002You can translate your previous Pytorch code much easier using this template, and keep your freedom to edit all the functions as well. Big-project-friendly as well."}
{"name": "oliverchampion/ivimnet", "full_name": "oliverchampion/IVIMNET", "topics": ["deep-learning", "diffusion-mri", "dwi", "ivim"], "description": "This repository contains the code regarding our publication: Improved unsupervised physics-informed deep learning for intravoxel-incoherent motion modeling and evaluation in pancreatic cancer patients"}
{"name": "sooftware/tacotron2-pytorch", "full_name": "sooftware/tacotron2", "topics": ["tacotron", "tacotron2", "pytorch", "speech-synthesis"], "description": "Pytorch implementation of \"Natural TTS Synthesis by Conditioning WaveNet on Mel Spectrogram Predictions\", ICASSP, 2018."}
{"name": "dome272/projectedgan-pytorch", "full_name": "dome272/ProjectedGAN-pytorch", "topics": ["gan", "pytorch", "generative-adversarial-network", "deep-learning", "projectedgan"], "description": "Pytorch implementation of ProjectedGAN (https://arxiv.org/abs/2111.01007)"}
{"name": "ga642381/robust-vc", "full_name": "ga642381/RobustVC", "topics": ["speech-processing", "deep-learning", "speech-enhancement"], "description": "**ICASSP 2022** \u300aToward Degradation-Robust Voice Conversion\u300bUsing speech enhancement and end-to-end denoising training to improve degradation / adversarial robustness of VC models."}
{"name": "yananren2137/huawei-ai-food-challenge", "full_name": "yananren2137/huawei-ai-food-challenge", "topics": ["image-classification", "pytorch", "auto-augment"], "description": null}
{"name": "prs-eth/film-ensemble", "full_name": "prs-eth/FILM-Ensemble", "topics": ["pytorch", "sub-models", "uncertanity", "neurips", "cifar10", "feature-wise-linear-modulation", "cifar100", "calibration", "ece", "implicit-ensemble", "ensemble", "deep-learning", "probabilistic-deep-learning"], "description": "[NeurIPS 2022] FiLM-Ensemble: Probabilistic Deep Learning via Feature-wise Linear Modulation"}
{"name": "abdullahselek/plant-disease-classification-pytorch", "full_name": "abdullahselek/plant-disease-classification-pytorch", "topics": ["plant-diseases", "disease-classification", "datasets", "pytorch", "convolutional-neural-networks"], "description": "Disease classification on different plants with using Machine Learning and Convolutional Neural Networks."}
{"name": "sooftware/end-to-end-speech-recognition-models", "full_name": "sooftware/End-to-End-Speech-Recognition-Models", "topics": ["deepspeech2", "asr", "las", "vad", "voice-activity-detection", "listen-attend-and-spell", "transformer", "e2e", "end-to-end", "acoustic-model", "pytorch"], "description": "PyTorch implementation of automatic speech recognition models. "}
{"name": "dai08srhg/esmm", "full_name": "dai08srhg/ESMM", "topics": ["esmm", "pytorch", "multitask-learning", "ctr", "cvr"], "description": "PyTorch implementation of Entire Space Multitask Model (ESMM)"}
{"name": "gheyret/uyghur-asr-ctc", "full_name": "gheyret/uyghur-asr-ctc", "topics": ["uyghur", "automatic-speech-recognition", "asr", "ctc", "pytorch"], "description": "Speech Recognition for Uyghur using deep learning"}
{"name": "bmxitalia/ltntorch", "full_name": "tommasocarraro/LTNtorch", "topics": ["neural-symbolic-computing", "fuzzy-logic", "machine-learning", "framework", "pytorch"], "description": "PyTorch implementation of Logic Tensor Networks, a Neural-Symbolic framework."}
{"name": "eeyhsong/eeg-conformer", "full_name": "eeyhsong/EEG-Conformer", "topics": ["eeg", "transformer", "conformer", "activation-map", "eeg-transformer", "eeg-visualization", "attention"], "description": "EEG Transformer 2.0. i. Convolutional Transformer for EEG Decoding. ii. Novel visualization - Class Activation Topography."}
{"name": "sberbank-ai/ocr-model", "full_name": "ai-forever/OCR-model", "topics": ["crnn", "ocr", "pytorch", "text-recognition"], "description": "An easy-to-run OCR model pipeline based on CRNN and CTC loss"}
{"name": "cszyzhang/riconv2", "full_name": "cszyzhang/riconv2", "topics": ["deep-learning", "point-cloud", "rotation-invariant", "cnn", "classification", "segmentation"], "description": "The official source codes for the riconv++ (IJCV2022) paper"}
{"name": "thudm/multilingual-glm", "full_name": "THUDM/Multilingual-GLM", "topics": ["deep-learning", "language-model", "nlp", "pytorch"], "description": "The multilingual variant of GLM, a general language model trained with autoregressive blank infilling objective "}
{"name": "lornatang/cgan-pytorch", "full_name": "Lornatang/CGAN-PyTorch", "topics": [], "description": "Simple implementation of conditional general adverse nets in pytorch machine learning framework"}
{"name": "satoshi-ikehata/universal-ps-cvpr2022", "full_name": "satoshi-ikehata/Universal-PS-CVPR2022", "topics": [], "description": "Official Pytorch Implementation of Universal Photometric Stereo Network using Global Lighting Contexts (CVPR2022)"}
{"name": "anyuexuan/css", "full_name": "anyuexuan/CSS", "topics": ["few-shot-learning", "gnn", "self-supervised-learning"], "description": "Code for \"Conditional Self-Supervised Learning for Few-Shot Classification\" in IJCAI 2021."}
{"name": "aviaefrat/cryptonite", "full_name": "aviaefrat/cryptonite", "topics": ["natural-language-processing", "deep-learning", "datasets"], "description": "The Official Repository of the Cryptonite Dataset"}
{"name": "hezheug/vibration_gan", "full_name": "hezheug/vibration_gan", "topics": ["tensorflow", "gan", "deep-learning", "imbalanced-learning", "fault-classification", "generative-adversarial-network", "keras"], "description": "Implement GANs to generate time-series signals for imbalanced learning problem. The experiments are conducted using CWRU bearing data."}
{"name": "juliagusak/neural-ode-norm", "full_name": "juliagusak/neural-ode-norm", "topics": ["neural-ode", "anode", "normalization", "pytorch", "ordinary-differential-equations", "neural-network"], "description": "Models and code for the ICLR 2020 workshop paper \"Towards Understanding Normalization in Neural ODEs\""}
{"name": "jiaxiang-cheng/pytorch-transformer-for-rul-prediction", "full_name": "jiaxiang-cheng/PyTorch-Transformer-for-RUL-Prediction", "topics": ["transformer", "pytorch", "pytorch-implementation", "remaining-useful-life", "cmapss", "turbofan-engine", "prediction", "predictive-maintenance"], "description": "Transformer implementation with PyTorch for remaining useful life prediction on turbofan engine with NASA CMAPSS data set. Inspired by Mo, Y., Wu, Q., Li, X., & Huang, B. (2021). Remaining useful life estimation via transformer encoder enhanced by a gated convolutional unit. Journal of Intelligent Manufacturing, 1-10."}
{"name": "kaleidophon/nlp-uncertainty-zoo", "full_name": "Kaleidophon/nlp-uncertainty-zoo", "topics": ["deep-learning", "lstm", "nlp", "nlp-machine-learning", "package", "python", "pytorch", "rnn", "transformers", "uncertainty-estimation", "uncertainty-neural-networks", "uncertainty-quantification"], "description": "Model zoo for different kinds of uncertainty quantification methods used in Natural Language Processing, implemented in PyTorch."}
{"name": "basiralab/ggan", "full_name": "basiralab/gGAN", "topics": ["brain-graphs", "brain-evolution", "brain-template", "graph-normalization", "ggan", "adversarial-machine-learning", "generative-adversarial-network", "gan", "geometric-deep-learning", "time-series-prediction", "time-series-forecasting", "time-series-graphs", "dynamic-networks", "dynamic-network-prediction", "predictive-intelligence"], "description": "Generative adversarial network for normalizing and predicting time-dependent graphs with respect to a fixed template."}
{"name": "cambridgeltl/eva", "full_name": "cambridgeltl/eva", "topics": ["nlp", "machine-learning", "knowledge-graph", "information-extraction", "aaai2021", "natural-language-processing", "artificial-intelligence", "entity-alignment"], "description": "[AAAI 2021] Code release for \"Visual Pivoting for (Unsupervised) Entity Alignment\"."}
{"name": "crishy1995/stereopifu_code", "full_name": "CrisHY1995/StereoPIFu_Code", "topics": [], "description": "This repository contains a pytorch implementation of \"StereoPIFu: Depth Aware Clothed Human Digitization via Stereo Vision\"."}
{"name": "awesomelemon/encas", "full_name": "AwesomeLemon/ENCAS", "topics": ["deep-learning", "neural-architecture-search", "automl"], "description": "NAS + Cascades"}
{"name": "oahunc/pyramidscalenetwork", "full_name": "daimuuc/PyramidScaleNetwork", "topics": ["crowd-counting", "pytorch", "pyramid-scale-network", "python"], "description": "To the best of our knowledge, this is the first work to explicitly address feature similarity issue in multi-column design. Extensive experiments on four challenging benchmarks (ShanghaiTech, UCF_CC_50, UCF-QNRF, and Mall) demonstrate the effectiveness of the proposed innovations as well as the superior performance over the state-of-the-art. More remarkably, our method can be easily applied to other existing multi-column models as a plug-in to significantly boost the performance to a large extent. "}
{"name": "elicassion/3dtrl", "full_name": "elicassion/3DTRL", "topics": ["3d-models", "action-recognition", "deep-learning", "image-classification", "pytorch", "video-alignment"], "description": "Code for NeurIPS 2022 paper \"Learning Viewpoint-Agnostic Visual Representations by Recovering Tokens in 3D Space\""}
{"name": "kepsail/shgp", "full_name": "kepsail/SHGP", "topics": ["deep-learning"], "description": "NeurIPS 2022 - SHGP"}
{"name": "ethan00si/instrumental-variables-for-recommendation", "full_name": "Ethan00Si/Instrumental-variables-for-recommendation", "topics": ["deep-learning", "recommender-system", "pytorch"], "description": "The official implementation for WWW 2022 paper \"A Model-Agnostic Causal Learning Framework for Recommendation using Search Data\""}
{"name": "lhx94as/pho-lid", "full_name": "Lhx94As/PHO-LID", "topics": ["interspeech", "pytorch", "spoken-language-identification"], "description": "PHO-LID: A Unified Model to Incorporate Acoustic-Phonetic and Phonotactic Information for Language Identification"}
{"name": "mpi-dortmund/tomotwin-cryoet", "full_name": "MPI-Dortmund/tomotwin-cryoet", "topics": ["cryo-em", "metric-learning", "cryo-et", "deep-learning", "particle-picking"], "description": "cryo-ET particle picking using triplet networks and metric learning"}
{"name": "oxid15/cascade", "full_name": "Oxid15/cascade", "topics": ["machine-learning", "ml", "mlops", "feature-selection", "model-selection", "model-lifecycle", "deep-learning"], "description": "Lightweight ML Engineering library with the aim to standardize the work with data and models"}
{"name": "a-lincui/adversarial_patch_attack", "full_name": "A-LinCui/Adversarial_Patch_Attack", "topics": [], "description": "Pytorch implementation of Adversarial Patch on ImageNet (arXiv: https://arxiv.org/abs/1712.09665)"}
{"name": "dsgiitr/audio-super-resolution", "full_name": "dsgiitr/Audio-Super-Resolution", "topics": ["pytorch", "super-resolution", "deep-learning"], "description": "Enhancment of Audio Quality (Bit-Depth and Sampling-Rate) using Deep Learning. "}
{"name": "ansleliu/mixnet-pytorch", "full_name": "linksense/MixNet-PyTorch", "topics": ["mixnet", "mixnets", "pytorch", "efficient-model", "efficientnet", "image-classification", "mixnet-pytorch", "mixseg", "bifpn", "lightnet"], "description": "Concise, Modular, Human-friendly PyTorch implementation of MixNet with Pre-trained Weights."}
{"name": "tsunghan-mama/redal", "full_name": "tsunghan-wu/ReDAL", "topics": ["active-learning", "pytorch-implementation", "computer-vision", "semantic-segmentation", "3d-vision", "point-cloud"], "description": "\ud83c\udf40 Official pytorch implementation of \"ReDAL: Region-based and Diversity-aware Active Learning for Point Cloud Semantic Segmentation. Wu et al. ICCV 2021.\""}
{"name": "terrytangyuan/public-talks", "full_name": "terrytangyuan/public-talks", "topics": ["machine-learning", "kubernetes", "deep-learning", "cloud-native", "gitops", "mlops", "public-speaking"], "description": "Slides, videos, and supporting files for my public talks"}
{"name": "knight825/models-pytorch", "full_name": "Knight825/models-pytorch", "topics": ["pytorch", "self-attention", "senet", "cbam", "cbam-resnet", "se-resnet", "attention-mechanism", "cnn-model", "crossstagepartial", "csp-resnet", "csp-densenet", "exactfusionmodel"], "description": "This is a torchvision style CNN models collection based on pytorch."}
{"name": "jon-tow/text-sed", "full_name": "jon-tow/text-sed", "topics": ["deep-learning", "diffusion", "pytorch", "text-generation"], "description": "Implementation of Self-conditioned Embedding Diffusion for Text Generation"}
{"name": "sanweiliti/noisyfer", "full_name": "sanweiliti/noisyFER", "topics": ["facial-expression-recognition", "noisy-labels", "adversarial-networks"], "description": "The official pytorch code for paper \"Facial Emotion Recognition with Noisy Multi-task Annotations\" (2021 WACV)"}
{"name": "liang-hou/adcgan", "full_name": "liang-hou/adcgan", "topics": ["cgans", "icml-2022", "pytorch"], "description": "Conditional GANs with Auxiliary Discriminative Classifier (ICML 2022)"}
{"name": "ouening/torchvision-fasterrcnn", "full_name": "ouening/torchvision-FasterRCNN", "topics": [], "description": "torchvision faster-rcnn\u4f8b\u5b50\u4fee\u6539\u7248"}
{"name": "wangtianrui/dccrn", "full_name": "wangtianrui/DCCRN", "topics": [], "description": "implementation of \"DCCRN-Deep Complex Convolution Recurrent Network for Phase-Aware Speech Enhancement\" by pytorch"}
{"name": "i2-multimedia-lab/pcc_patch", "full_name": "I2-Multimedia-Lab/PCC_Patch", "topics": ["point-cloud", "deep-learning", "compression"], "description": "(ACM MM ASIA 2021) Patch-Based Deep Autoencoder for Point Cloud Geometry Compression."}
{"name": "sunweikes/da-rnn", "full_name": "SunWeiKeS/DA-RNN", "topics": [], "description": "\u6839\u636eSeanny123\u590d\u73b0\u8bba\u6587A Dual-Stage Attention-Based Recurrent Neural Network for Time Series Prediction\u7684pytorch\u4ee3\u7801\u8fdb\u884c\u76f8\u5173\u4fee\u6539\uff0c\u9002\u5e94pytorch1.2\u7248\u672c"}
{"name": "vcampsoldiers/swin-transformer-tensorflow", "full_name": "VcampSoldiers/Swin-Transformer-Tensorflow", "topics": ["swin-transformer", "tensorflow", "object-detection", "tf2", "transformer", "tf"], "description": "Unofficial implementation of \"Swin Transformer: Hierarchical Vision Transformer using Shifted Windows\" (https://arxiv.org/abs/2103.14030)"}
{"name": "j911/deeplabv3plus-for-beginners", "full_name": "J911/DeepLabV3Plus-for-Beginners", "topics": ["pytorch", "deeplabv3plus", "cityscapes", "segmentation"], "description": "DeepLabV3Plus for Beginners in Cityscapes Dataset"}
{"name": "gahaalt/pytorch-functional", "full_name": "sjmikler/pytorch-symbolic", "topics": ["deep-learning", "pytorch", "neural-networks"], "description": "Provides symbolic API for model creation in PyTorch."}
{"name": "sachin-chhabra/pytorch-cgan-conditional-gan", "full_name": "s-chh/Pytorch-cGAN-conditional-GAN", "topics": ["cgan", "pytorch-cgan", "conditional-dcgan", "pytorch-cgan-mnist", "conditional-gan", "pytorch-conditional-gan", "conditional-image-generation"], "description": "Pytorch implementation of conditional generative adversarial network (cGAN) using DCGAN architecture for generating 32x32 images of MNIST, SVHN, FashionMNIST, and USPS datasets."}
{"name": "margaritageleta/pixinwav", "full_name": "margaritageleta/PixInWav", "topics": ["steganography", "deep-learning", "pytorch", "digital-signal-processing", "digital-image-processing"], "description": "Hide image in audio. Image in audio steganography with deep learning. Deep learning-based psychoacoustic steganography within earshot."}
{"name": "daveishan/tclr", "full_name": "DAVEISHAN/TCLR", "topics": ["self-supervised-learning", "action-recognition", "learning-with-limited-labeled-data", "pytorch"], "description": "Official code repo for TCLR: Temporal Contrastive Learning for Video Representation [CVIU-2022]"}
{"name": "ukcheolshin/thermalsfmlearner-ms", "full_name": "UkcheolShin/ThermalSfMLearner-MS", "topics": ["deep-learning", "depth-estimation", "pose-estimation", "self-supervised-learning", "thermal-camera"], "description": "Official implementation of the paper \"Self-supervised Depth and Ego-motion Estimation for Monocular Thermal Video using Multi-spectral Consistency Loss\""}
{"name": "kovanostra/message-passing-neural-network", "full_name": "kovanostra/message-passing-neural-network", "topics": ["pytorch", "machine-learning", "rnn", "cuda", "cpp", "cuda-kernels"], "description": "Pytorch implementation of a message passing neural network with RNN sub-units"}
{"name": "dssc-projects/veni", "full_name": "DSSC-projects/veni", "topics": ["deep-learning", "jax", "neural-network", "forward-automatic-differentiation"], "description": "A simple Python package for deep learning using forward automatic differentiation based on JAX."}
{"name": "jone1222/dg-feature-stylization", "full_name": "jone1222/DG-Feature-Stylization", "topics": [], "description": "Official pytorch implementation of \"Feature Stylization and Domain-aware Contrastive Loss for Domain Generalization\" ACMMM 2021 (Oral)"}
{"name": "xiaoboxia/picmm", "full_name": "xiaoboxia/PICMM", "topics": ["pytorch"], "description": "NeurIPS'2022: Pluralistic Image Completion with Gaussian Mixture Models"}
{"name": "shiming-chen/cde-gan", "full_name": "shiming-chen/CDE-GAN", "topics": ["generative-adversarial-network", "evolutionary-computation"], "description": "Official PyTorch Implementation of CDE-GAN (TEVC'21)"}
{"name": "maggie0830/dccrn", "full_name": "maggie0830/DCCRN", "topics": [], "description": "implementation of \"DCCRN-Deep Complex Convolution Recurrent Network for Phase-Aware Speech Enhancement\" by pytorch"}
{"name": "jack-willturner/gymnastics", "full_name": "jack-willturner/gymnastics", "topics": ["neural-architecture-search", "pytorch", "deep-learning"], "description": "A \"gym\" style toolkit for building lightweight NAS systems. "}
{"name": "utahnlp/knowledge_infotabs", "full_name": "utahnlp/knowledge_infotabs", "topics": ["nli", "knowledge", "infotabs", "inference", "tables", "naacl2021", "naacl", "nlp-machine-learning", "nlp", "transformer", "wikipedia", "semi-structured-data"], "description": "Repository containing code for the NAACL 2021 paper (Incorporating External Knowledge to Enhance Tabular Reasoning)"}
{"name": "sooftware/tacotron2", "full_name": "sooftware/tacotron2", "topics": ["tacotron", "tacotron2", "pytorch", "speech-synthesis"], "description": "Pytorch implementation of \"Natural TTS Synthesis by Conditioning WaveNet on Mel Spectrogram Predictions\", ICASSP, 2018."}
{"name": "mrinath123/timmfasterrcnn", "full_name": "mrinath123/timmFasterRcnn", "topics": [], "description": "Adds timm pretrained backbone to pytorch's FasterRcnn model"}
{"name": "sagnik1511/samay_yantra", "full_name": "sagnik1511/samay_yantra", "topics": ["deep-learning", "dvc-for-data-science", "forecasting", "lstm-model", "machine-learning", "mlflow", "weather-forecast", "multivariate-timeseries", "pytorch"], "description": "Stolen programs from Rohit Mehra's Time Machine from Krish(2006) for future weather prediction at Beutenberg"}
{"name": "13952522076/efficient_imagenet_classification", "full_name": "ma-xu/Efficient_ImageNet_Classification", "topics": ["pytorch", "imagenet", "dali", "apex"], "description": "An efficient implementation for ImageNet classification"}
{"name": "zlccccc/3dvg-transformer", "full_name": "zlccccc/3DVG-Transformer", "topics": ["3d-vision", "pytorch", "scanrefer", "visual-grounding", "iccv2021"], "description": "[ICCV2021] 3DVG-Transformer: Relation Modeling for Visual Grounding on Point Clouds"}
{"name": "yester31/tensorrt_ex", "full_name": "yester31/TensorRT_EX", "topics": ["cuda", "tensorrt", "quantization", "ptq", "pytorch", "vgg", "resnet", "unet", "detr", "yolov5", "yolov6"], "description": "Deep Learning Model Optimization Using by TensorRT API, window"}
{"name": "liangheming/auto_assignv2", "full_name": "liangheming/auto_assignv2", "topics": [], "description": "An unofficial pytorch implementation of <<AutoAssign: Differentiable Label Assignment for Dense Object Detection>>"}
{"name": "brendanxwhitaker/asta", "full_name": "langfield/asta", "topics": [], "description": "Shape annotations for numpy arrays and pytorch/tensorflow tensors."}
{"name": "stewy33/pong-with-policy-gradients", "full_name": "stewy33/pong-with-policy-gradients", "topics": ["reinforcement-learning", "policy-gradients", "pong", "pytorch", "rl-workshop", "tensorboard"], "description": "Code for an intro to RL workshop. You'll be training a simple agent to play pong using policy gradients. Adapted from http://karpathy.github.io/2016/05/31/rl/"}
{"name": "justusschock/dl-utils", "full_name": "justusschock/dl-utils", "topics": ["pytorch", "python", "cnn", "deep-learning", "neural-network", "deep-neural-networks", "models", "loss-functions", "metrics"], "description": "Utilities for Deep Learning with PyTorch (models, losses, metrics etc.)"}
{"name": "zhmou/turbofan-engine-rul-prediction", "full_name": "zhmou/Turbofan-engine-RUL-prediction", "topics": ["lstm", "pytorch", "pytorch-implementation", "remaining-useful-life", "remaining-useful-life-prediction", "rul-prediction"], "description": "RUL prediction for C-MAPSS dataset, reproduction of this paper:  https://personal.ntu.edu.sg/xlli/publication/RULAtt.pdf"}
{"name": "lvyufeng/easy_mindspore", "full_name": "lvyufeng/easy_mindspore", "topics": ["mindspore", "deep-learning", "easy-to-use"], "description": null}
{"name": "wilmerwang/scramble4gpu", "full_name": "wilmerwang/GPUSnatcher", "topics": ["pytorch", "tensorflow"], "description": "\u62a2\u5360\u663e\u5361"}
{"name": "lucidrains/memory-transformer-xl", "full_name": "lucidrains/memory-transformer-xl", "topics": ["artificial-intelligence", "deep-learning", "transformer", "attention-mechanism", "memory"], "description": "A variant of Transformer-XL where the memory is updated not with a queue, but with attention"}
{"name": "axelelaldi/equivariant-spherical-deconvolution", "full_name": "AxelElaldi/equivariant-spherical-deconvolution", "topics": [], "description": "Equivariant Spherical Deconvolution: Learning Sparse Orientation Distribution Functions from Spherical Data (Pytorch)"}
{"name": "moein-shariatnia/pix2seq", "full_name": "moein-shariatnia/Pix2Seq", "topics": ["deep-learning", "huggingface", "language-model", "object-detection", "pix2seq", "pytorch", "pytorch-implementation", "timm", "transformer"], "description": "Simple Implementation of Pix2Seq model for object detection in PyTorch"}
{"name": "prasanna1991/latentmixing", "full_name": "Prasanna1991/LatentMixing", "topics": ["semi-supervised", "latent-mixmatch", "manifold-mixmatch", "latent-mixing", "pytorch"], "description": "The implementation of \"Semi-supervised Medical Image Classification with Global Latent Mixing\". [MICCAI2020]"}
{"name": "ucdvision/cgc", "full_name": "UCDvision/CGC", "topics": ["cgc", "deep-learning", "explainable-ai", "explainable-models", "contrastive-learning", "self-supervised-learning"], "description": "Official PyTorch code for the CVPR 2022 paper - Consistent Explanations by Contrastive Learning"}
{"name": "aditeyabaral/calbert", "full_name": "aditeyabaral/calbert", "topics": ["bert", "transformer", "code-mixed", "natural-language-processing", "nlp", "deep-learning", "machine-learning"], "description": "CalBERT - Code-mixed Adaptive Language representations using BERT, published at AAAI-MAKE 2022"}
{"name": "jarvis-mocap/jarvis-hybridnet", "full_name": "JARVIS-MoCap/JARVIS-HybridNet", "topics": ["3d-tracking", "machine-learning", "motion-capture", "markerless-tracking", "3d-pose-estimation", "animal-pose-estimation", "multi-camera-tracking", "pose-estimation"], "description": "JARVIS Markerless 3D Motion Capture Pytorch Library"}
{"name": "maheshkkumar/fscc", "full_name": "maheshkkumar/fscc", "topics": ["crowd-counting", "few-shot-learning", "meta-learning", "pytorch"], "description": "Few-Shot Scene Adaptive Crowd Counting Using Meta-Learning (WACV 2020)"}
{"name": "shuuchen/frelu.pytorch", "full_name": "shuuchen/frelu.pytorch", "topics": ["activation-functions", "cnn"], "description": "A PyTorch implementation of funnel activation https://arxiv.org/pdf/2007.11824.pdf"}
{"name": "daixiangzi/grad_cam-pytorch-resnet50", "full_name": "daixiangzi/Grad_Cam-pytorch-resnet50", "topics": ["pytorch", "grad-cam"], "description": "Class activate map "}
{"name": "nekitmm/funnelact_pytorch", "full_name": "nekitmm/FunnelAct_Pytorch", "topics": ["frelu", "funnel-act", "funnel-activation", "pytorch", "resnet", "deep-learning", "deep-neural-networks"], "description": "pytorch implementation of Funnel Activation (FReLU)"}
{"name": "layer6ai-labs/tafa", "full_name": "layer6ai-labs/TAFA", "topics": ["python", "pytorch", "autoencoder", "recommender-system"], "description": "Code for the RecSys'20 paper \"TAFA: Two-headed Attention Fused Autoencoder for Context-Aware Recommendations\""}
{"name": "donghande/pt_propagation_then_training", "full_name": "DongHande/PT_propagation_then_training", "topics": [], "description": "The official pytorch implementation of Propagation_then_Training for graph (https://arxiv.org/abs/2010.12408)"}
{"name": "bigscience-workshop/distributed-bloom", "full_name": "bigscience-workshop/petals", "topics": ["bloom", "deep-learning", "distributed-systems", "language-models", "large-language-models", "machine-learning", "neural-networks", "pytorch", "volunteer-computing", "pipeline-parallelism", "tensor-parallelism"], "description": "\ud83c\udf38 Run 100B+ language models at home, BitTorrent-style. Fine-tuning and inference up to 10x faster than offloading"}
{"name": "baowentz/advancedeast-pytorch", "full_name": "BaoWentz/AdvancedEAST-PyTorch", "topics": ["pytorch", "advancedeast", "lmdb-dataset"], "description": "\u5c06\u539f\u672cKeras\u7248\u672c\u7684AdvancedEAST\u6539\u5199\u6210PyTorch\u7248\uff0c\u5c06\u6570\u636e\u96c6\u7531.npy\u6587\u4ef6\u6539\u6210\u4e00\u4e2aLMDB\u6587\u4ef6\uff0c\u52a0\u5165Precision\uff0cRecall, F1 score\u65b9\u4fbf\u8bad\u7ec3\u4ee5\u53ca\u8c03\u8bd5\uff0c\u5e95\u5c42\u7f51\u7edc\u4ecd\u7136\u7528VGG16\u3002"}
{"name": "mrkieumy/task-conditioned", "full_name": "mrkieumy/task-conditioned", "topics": ["computer-vision", "object-detection", "pedestrian-detection", "thermal-imaging", "yolov3-kaist", "domain-adaptation", "transfer-learning", "fine-tuning", "cnn", "detector", "deep-learning", "python"], "description": "This source code implements our ECCV paper \"task-conditioned domain adaptation for pedestrian detection in thermal imagery\"."}
{"name": "charbel199/machine-learning-concepts", "full_name": "Charbel199/machine-learning-concepts", "topics": ["artificial-intelligence", "deep-learning", "machine-learning"], "description": "A repository created to keep track of all the useful machine learning concepts  that I learn throughout the years along with some resources."}
{"name": "andreped/fast-stain-normalization", "full_name": "andreped/fast-stain-normalization", "topics": ["histopathology-images", "digital-pathology", "stain-normalization", "deep-learning", "cpp", "python", "computational-pathology", "fast", "torch", "tensorflow", "tensorflow2"], "description": ":star2: GPU-accelerated stain normalization command line tool"}
{"name": "hyoungsungkim/pytorch-tensorboard_tutorial", "full_name": "HyoungsungKim/Pytorch-tensorboard_tutorial", "topics": [], "description": "Pytorch-tensorboard simple tutorial and example for a beginner"}
{"name": "emadeldeen24/adast", "full_name": "emadeldeen24/ADAST", "topics": ["domain-adaptation", "sleep-stage-classification", "self-training", "self-attention", "deep-learning", "eeg", "attention-mechanism", "pseudo-label", "time-series", "transfer-learning"], "description": "[IEEE TETCI] \"ADAST: Attentive Cross-domain EEG-based Sleep Staging Framework with Iterative Self-Training\""}
{"name": "qz-cmd/yolov3-trt-jetson-nano", "full_name": "QZ-cmd/YOLOv3-TRT-jetson-nano", "topics": [], "description": "\u57fa\u4e8epytorch-yolov3\u7684trt\u52a0\u901f\u65b9\u6848"}
{"name": "armanihm/gdc", "full_name": "armanihm/GDC", "topics": ["graphneuralnetwork", "deep-learning", "deep-neural-networks", "gcn", "gcnn", "machine-learning", "bayesian-neural-networks", "bayesian-deep-learning", "graph-deep-learning", "graph-neural-networks", "graph-neural-network", "graph-convolutional-networks"], "description": "Bayesian Graph Neural Networks with Adaptive Connection Sampling - Pytorch"}
{"name": "chenwwweixiang/diagnosis_covid19", "full_name": "ChenWWWeixiang/diagnosis_covid19", "topics": ["covid-19", "pneumonia-detection", "opencoviddetector", "pytorch"], "description": "OpenCovidDetector is an opensource COVID-19 diagnosis system implementing on pytorch, which is also as presented in our paper: Development and evaluation of an artificial intelligence system for COVID-19 diagnosis. Nat Commun 11, 5088 (2020).(https://doi.org/10.1038/s41467-020-18685-1)"}
{"name": "orion-orion/numericalanalysis-python", "full_name": "orion-orion/NumericalAnalysis-Python", "topics": [], "description": "\ud83d\udd28\u7528Python+Numpy+Pytorch\u5b9e\u73b0\u300a\u6570\u503c\u5206\u6790\u300b(Timothy Sauer\u8457)\u7684\u6240\u6709\u7b97\u6cd5"}
{"name": "readme-generator/alreadyme-ai-serving", "full_name": "readme-generator/alreadyme-ai-serving", "topics": ["bloom", "markdown", "nlp", "black", "codex", "copilot", "deep-learning", "docker", "fastapi", "few-shot-learning", "gpt-3", "huggingface", "language-model", "natural-language-processing", "pytorch", "readme-generator", "transformers"], "description": "Serving large language model with transformers"}
{"name": "matyasbohacek/spoter", "full_name": "matyasbohacek/spoter", "topics": ["sign-language-recognition", "slr", "wlasl", "lsa64", "transformer"], "description": "Repository accompanying the \"Sign Pose-based Transformer for Word-level Sign Language Recognition\" paper"}
{"name": "mtliba/atsal", "full_name": "mtliba/ATSal", "topics": ["360-video", "saliency-detection", "cnn", "attention-model", "expert-models", "deeplearning", "computer-vision"], "description": "360 video Head and Eye movement prediction framework with two-stream models "}
{"name": "huang-research-group/contrastive2021", "full_name": "huang-research-group/contrastive2021", "topics": ["contrastive-learning", "self-supervised-learning", "cifar10", "pytorch"], "description": "Implementation for paper \"Towards the Generalization of Contrastive Self-Supervised Learning\" (https://arxiv.org/abs/2111.00743)"}
{"name": "lambert-x/medical_mae", "full_name": "lambert-x/medical_mae", "topics": ["chest-xray-images", "chestxray14", "chexpert", "computer-vision", "convolutional-neural-networks", "pytorch"], "description": "The official implementation of \"Delving into Masked Autoencoders for Multi-Label Thorax Disease Classification\""}
{"name": "jmribeiro/yaaf", "full_name": "jmribeiro/yaaf", "topics": ["autonomous-agents", "reinforcement-learning", "deep-learning"], "description": "Yet Another Agents Framework - An RL research-oriented framework for agent prototyping and evaluation"}
{"name": "wnma3mz/flearn", "full_name": "wnma3mz/flearn", "topics": ["deep-learning", "federated-learning", "ensemble-learning", "privacy-protection", "framework", "pytorch"], "description": "Federated Learning Framework"}
{"name": "rlturkiye/flying-cavalry", "full_name": "rlturkiye/flying-cavalry", "topics": ["reinforcement", "learning", "reinforcement-learning", "deep-learning", "ai", "path-planning", "motion-planning", "yapay-zeka", "derin-ogrenme"], "description": "Flying Cavalry Project - Ucan Kavalye Projesi "}
{"name": "jinseokbae/neural_marionette", "full_name": "jinseokbae/neural_marionette", "topics": [], "description": "Official pytorch implementation of \"Neural Marionette: Unsupervised Learning of Motion Skeleton and Latent Dynamics from Volumetric Video\" (AAAI 2022, Oral)"}
{"name": "llyx97/rosita", "full_name": "llyx97/Rosita", "topics": ["bert", "knowledge-distillation", "model-compression", "pytorch"], "description": "[AAAI 2021] \"ROSITA: Refined BERT cOmpreSsion with InTegrAted techniques\", Yuanxin Liu, Zheng Lin, Fengcheng Yuan"}
{"name": "zyxu1996/hrcnet-high-resolution-context-extraction-network", "full_name": "zyxu1996/HRCNet-High-Resolution-Context-Extraction-Network", "topics": ["pytorch", "segmentation", "remotesensing"], "description": "SOTA method on Potsdam and Vaihingen datasets, based on HRNet."}
{"name": "reml-lab/mtan", "full_name": "reml-lab/mTAN", "topics": ["missing-data", "time-series", "irregular-sampling", "pytorch"], "description": "Code for \"Multi-Time Attention Networks for Irregularly Sampled Time Series\", ICLR 2021."}
{"name": "csccsccsccsc/brpnet", "full_name": "csccsccsccsc/brpnet", "topics": [], "description": "Pytorch Implement of Boundary-assisted Region Proposal Networks for Nucleus Segmentation"}
{"name": "junnyu/gau-alpha-pytorch", "full_name": "JunnYu/GAU-alpha-pytorch", "topics": [], "description": "GAU-alpha-pytorch"}
{"name": "mcspooder/camull_net", "full_name": "McSpooder/camull-net", "topics": ["deep-learning", "machine-learning", "pytorch"], "description": "A 3D convolutional neural network for the classification of Alzheimer's disease and its precursor Mild Cognitive Impairement."}
{"name": "vision-learning-acceleration-lab/i-mae", "full_name": "vision-learning-acceleration-lab/i-mae", "topics": [], "description": "i-mae Pytorch Repo"}
{"name": "shenzheng2000/sapnet-for-image-deraining", "full_name": "ShenZheng2000/SAPNet-for-image-deraining", "topics": [], "description": "Official Pytorch Implementation for \"SAPNet: Segmentation-Aware Progressive Network for Perceptual Contrastive Image Deraining\""}
{"name": "zhaitongqing233/backdoor-attack-against-speaker-verification", "full_name": "zhaitongqing233/Backdoor-attack-against-speaker-verification", "topics": [], "description": "Pytorch implementation of Backdoor Attack against Speaker Verification"}
{"name": "aangelopoulos/im2im-uq", "full_name": "aangelopoulos/im2im-uq", "topics": ["unet", "uncertainty", "uncertainty-quantification", "uncertainty-estimation", "quantile-regression", "image-to-image-translation", "biomedical-image-processing", "biomedical-data-science", "computational-biology", "computational-imaging", "mri", "machine-learning", "microscopy", "pytorch"], "description": "Image-to-image regression with uncertainty quantification in PyTorch. Take any dataset and train a model to regress images to images with rigorous, distribution-free uncertainty quantification."}
{"name": "liu2231665/taan-mtl", "full_name": "yingrliu/TAAN-MTL", "topics": ["multi-task-learning", "deep-neural-networks", "pytorch"], "description": "Adaptive Activation Network and Functional Regularization for Efficient and Flexible Deep Multi-Task Learning"}
{"name": "riccorl/transformer-embedder", "full_name": "Riccorl/transformers-embedder", "topics": ["nlp", "bert", "transformer", "transformers", "allennlp", "huggingface", "huggingface-transformers", "tokenizer", "natural-language-processing", "python", "pytorch", "deep-learning", "transformer-embedder", "embeddings", "sentences", "hidden-states", "preprocess", "pretrained-models", "transformers-embedder", "language-model"], "description": "A Word Level Transformer layer based on PyTorch and \ud83e\udd17 Transformers."}
{"name": "yuk6heo/gui-ivos", "full_name": "yuk6heo/GUI-IVOS", "topics": ["video", "video-object-segmentation"], "description": "Pytorch GUI(demo) implementation of  CVPR2021 paper and ECCV2020 paper, \"Guided Interactive Video Object Segmentation Using Reliability-Based Attention Maps\" and\"Interactive Video Object Segmentation Using Global and Local Transfer Modules\""}
{"name": "sovit-123/fastercnn-pytorch-training-pipeline", "full_name": "sovit-123/fasterrcnn-pytorch-training-pipeline", "topics": ["object-detection", "pytorch", "faster-rcnn", "mobilenet-fasterrcnn", "deep-learning", "fasterrcnn", "darknet-fasterrcnn", "efficientnet-fasterrcnn", "resnet50-fasterrcnn", "squeezenet-fasterrcnn", "fasterrcnn-resnet50-fpn", "fasterrcnn-resnet50-fpn-v2"], "description": "PyTorch Faster R-CNN Object Detection on Custom Dataset"}
{"name": "easycodesniper-afk/siamcsr", "full_name": "easycodesniper-afk/SiamCSR", "topics": [], "description": "Implementation of \"High Speed and Robust RGB-Thermal Tracking via Dual Attentive Stream Siamese Network\" on Pytorch."}
{"name": "slwang9353/mobileformer", "full_name": "slwang9353/MobileFormer", "topics": [], "description": "MobileFormer in torch"}
{"name": "radtorch/radtorch", "full_name": "radtorch/radtorch", "topics": ["machine-learning", "radiology", "medical-imaging", "deep-learning", "pytorch", "pydicom", "sklearn", "gpu", "kit", "radiology-machine-learning", "image-classifier", "machine", "dicom", "ai", "rsna", "classification", "convolutional-neural-networks", "image-classification", "neural-networks", "python"], "description": "Official repository for RADTorch - The Medical Imaging Machine Learning Framework"}
{"name": "feng-lab/pytorch-image-models", "full_name": "feng-lab/pytorch-image-models", "topics": [], "description": "Forked from https://github.com/rwightman/pytorch-image-models"}
{"name": "pmichel31415/p-dro", "full_name": "pmichel31415/P-DRO", "topics": ["machine-learning", "natural-language-processing", "dro"], "description": "Code for the papers \"Modeling the Second Player in Distributionally Robust Optimization\" and \"Distributionally Robust Models with Parametric Likelihood Ratios\""}
{"name": "lhao499/instructrl", "full_name": "lhao499/instructrl", "topics": ["flax", "instruction-following", "instructions", "jax", "machine-learning", "reinforcement-learning", "transformer", "vision-language-transformer"], "description": null}
{"name": "ais-bonn/vp-suite", "full_name": "AIS-Bonn/vp-suite", "topics": ["pytorch", "deep-learning", "neural-networks", "video-prediction", "video-prediction-models", "models", "datasets"], "description": "A general framework for video prediction in PyTorch."}
{"name": "tungedng2710/improved-arcface", "full_name": "tungedng2710/Improved-ArcFace", "topics": ["pytorch", "deep-learning", "face-recognition", "arcface", "face-alignment", "elastic-loss", "hacktoberfest"], "description": "Some improvements on ArcFace model"}
{"name": "jaggbow/magnet", "full_name": "jaggbow/magnet", "topics": ["deep-learning", "graph-neural-networks", "implicit-neural-representation", "partial-differential-equations", "pde", "pde-solver", "super-resolution", "neural-pde-solver"], "description": "This repository contains code for the paper \"MAgNet: Mesh-Agnostic Neural PDE Solver\" https://arxiv.org/abs/2210.05495"}
{"name": "beingjoey/pytorch_openpose_body_25", "full_name": "beingjoey/pytorch_openpose_body_25", "topics": [], "description": "pytorch openpose with body_25 and coco"}
{"name": "deepchainbio/deepchain-apps", "full_name": "DeepChainBio/deepchain-apps", "topics": ["transformers", "bioinformatics-pipeline", "deep-learning"], "description": "A library for deploying App on deepchain.bio"}
{"name": "chenao-phys/pytorch-jacobian", "full_name": "ChenAo-Phys/pytorch-Jacobian", "topics": [], "description": "Implement efficient jacobian method available for most pytorch networks"}
{"name": "julilien/labelrelaxation", "full_name": "julilien/LabelRelaxation", "topics": ["machine-learning", "deep-learning", "label-relaxation", "label-smoothing", "calibration", "regularization"], "description": "Supplementary material and code for the novel label relaxation approach as presented at AAAI21 by Julian Lienen and Eyke H\u00fcllermeier."}
{"name": "jeankaddour/wasam", "full_name": "JeanKaddour/WASAM", "topics": ["optimization", "pytorch", "deep-learning"], "description": "Weight-Averaged Sharpness-Aware Minimization (NeurIPS 2022)"}
{"name": "dki-lab/arcaneqa", "full_name": "dki-lab/ArcaneQA", "topics": ["nlp", "pytorch", "question-answering"], "description": null}
{"name": "alibaba-miil/peta", "full_name": "Alibaba-MIIL/PETA", "topics": [], "description": "Official Pytorch Implementation of \"PETA: Photo Albums Event Recognition using Transformers Attention\" (2021)"}
{"name": "chcaa-edux/nlp-e21", "full_name": "CHCAA-EDUX/NLP-AU", "topics": ["nlp", "deep-learning", "education", "syllabus"], "description": "Primary repository for the NLP course as part of the CogSci masters program at Aarhus University."}
{"name": "torchmd/torchmd-net-legacy", "full_name": "torchmd/torchmd-net-legacy", "topics": ["neural-networks", "pytorch-lightning"], "description": "TorchMD-NET. This is a simple code to train Schnet using pytorch-lighthing."}
{"name": "endywon/microast", "full_name": "EndyWon/MicroAST", "topics": ["arbitrary-style-transfer", "lightweight", "super-fast", "ultra-resolution", "contrastive-learning"], "description": "Official Pytorch code for \"MicroAST: Towards Super-Fast Ultra-Resolution Arbitrary Style Transfer\" (AAAI 2023)"}
{"name": "kachayev/dataclasses-tensor", "full_name": "kachayev/dataclasses-tensor", "topics": ["machine-learning", "ai", "tensor", "numpy", "pytorch"], "description": "Easily serialize dataclasses to and from tensors (PyTorch, NumPy)"}
{"name": "gabeorlanski/stackoverflow-encourages-cheating", "full_name": "gabeorlanski/stackoverflow-encourages-cheating", "topics": ["python", "nlp", "machine-learning", "natural-language-processing", "acl2021", "nlp4prog"], "description": "Code for the NLP4Prog workshop paper \"Reading StackOverflow Encourages Cheating: Adding Question TextImproves Extractive Code Generation\""}
{"name": "cmlab-mira/efficient-and-phase-aware-video-super-resolution-for-cardiac-mri", "full_name": "cmlab-mira/Efficient-and-Phase-aware-Video-Super-resolution-for-Cardiac-MRI", "topics": [], "description": "Official Pytorch implementation of \"Efficient and Phase-aware Video Super-resolution for Cardiac MRI. Lin et al. MICCAI 2020.\""}
{"name": "sangho-vision/acav100m", "full_name": "sangho-vision/acav100m", "topics": ["pytorch"], "description": "ACAV100M: Automatic Curation of Large-Scale Datasets for Audio-Visual Video Representation Learning. In ICCV, 2021."}
{"name": "grsgth/offline-chinese-handwriting-text-page-spotter-with-text-kernel", "full_name": "grsgth/Offline-Chinese-Handwriting-Text-Page-Spotter-with-Text-Kernel", "topics": ["pytorch", "handwriting-recognition", "ocr", "chinese-handwriting-recogniting", "page-recognition"], "description": "Robust End-to-End Offline Chinese Handwriting Text Page Spotter with Text Kernel"}
{"name": "montaellis/framework-of-gan-inversion", "full_name": "MontaEllis/Framework-of-GAN-Inversion", "topics": ["pytorch", "inversion"], "description": "A Simplied Framework of GAN Inversion"}
{"name": "himashi92/duo-segnet", "full_name": "himashi92/Duo-SegNet", "topics": ["medical-image-segmentation", "semi-supervised-learning", "adversarial-learning", "co-training", "multi-view-learning", "pytorch", "dual-view", "segmentation"], "description": "[MICCAI2021] This is an official PyTorch implementation for \"Duo-SegNet: Adversarial Dual-Views for Semi-Supervised Medical Image Segmentation\""}
{"name": "rl-max/deep-reinforcement-learning-pytorch", "full_name": "rl-max/deep-reinforcement-learning-pytorch", "topics": [], "description": "Deep-RL algorithm Implementations using Pytorch"}
{"name": "giannispikoulis/fg2021-bold", "full_name": "GiannisPikoulis/FG2021-BoLD", "topics": ["pytorch", "deep-learning", "emotion-recognition", "in-the-wild"], "description": "[IEEE FG2021] PyTorch code for paper titled \"Leveraging Semantic Scene Characteristics and Multi-Stream Convolutional Architectures in a Contextual Approach for Video-Based Visual Emotion Recognition in the Wild\"."}
{"name": "makgyver/gossipy", "full_name": "makgyver/gossipy", "topics": ["gossip-learning", "gossip-protocol", "federated-learning", "simulation", "pytorch", "distributed-machine-learning", "deep-learning"], "description": "Python module for simulating gossip learning."}
{"name": "coaxsoft/pytorch_bert", "full_name": "coaxsoft/pytorch_bert", "topics": ["python", "pytorch", "bert"], "description": "Tutorial for how to build BERT from scratch"}
{"name": "lgray/triton-torchgeo-gat-example", "full_name": "lgray/triton-torchgeo-gat-example", "topics": [], "description": "An example of running a pytorch-geometric graph attention model in nvidia triton."}
{"name": "rssalessio/nnga", "full_name": "rssalessio/nnGA", "topics": ["genetic-algorithm", "deep-learning", "reinforcement-learning", "machine-learning", "neural-network"], "description": "Neural Network Genetic Algorithm library used for deep learning problems"}
{"name": "ifeherva/optimizer-benchmark", "full_name": "ifeherva/optimizer-benchmark", "topics": [], "description": "Benchmark Suite for Stochastic Gradient Descent Optimization Algorithms in Pytorch"}
{"name": "m3hrdadfi/zabanshenas", "full_name": "m3hrdadfi/zabanshenas", "topics": ["langugage-recognition", "langdetect", "transformer", "attention-is-all-you-need", "pytorch-implementation", "languages", "detected-languages", "language-detector", "transformers", "roberta"], "description": "Zabanshenas is a solution for identifying the most likely language of a piece of written text. Demo (\ud83d\udc47 )"}
{"name": "dcbia-ortholab/slicerautomateddentaltools", "full_name": "DCBIA-OrthoLab/SlicerAutomatedDentalTools", "topics": ["3d-slicer-extension", "3d-images", "3d-models", "deep-learning", "landmark-localization", "machine-learning", "orthodontics", "segmentation", "monai", "pytorch"], "description": "A 3D Slicer extension to use AMASSS, ALI-CBCT and ALI-IOS"}
{"name": "fengziyue/fusiondepth", "full_name": "AutoAILab/FusionDepth", "topics": ["computer-vision", "computer-science", "lidar", "lidar-point-cloud", "depth-estimation", "monocular-depth-estimation", "self-supervised-learning", "self-driving-car", "artificial-intelligence", "convolutional-neural-networks", "sensor-fusion", "pytorch", "kitti", "corl"], "description": "Official implementation for paper \"Advancing Self-supervised Monocular Depth Learning with Sparse LiDAR\""}
{"name": "bitreidgroup/dscnet", "full_name": "bitreidgroup/DSCNet", "topics": ["computer-vision", "cross-modal", "deep-learning", "re-identification", "visible-infrared"], "description": "DSCNet Visible-Infrared Person ReID (TIFS 2022)"}
{"name": "eonurk/sinkaf", "full_name": "eonurk/sinkaf", "topics": ["turkish-language", "turkish-nlp", "nlp", "profanity-detection", "kufur", "turkce-kufur", "turkish", "acikhack2021"], "description": "T\u00fcrk\u00e7e k\u00fcf\u00fcrl\u00fc i\u00e7erikleri bulan bir yapay zeka k\u00fct\u00fcphanesi / An ML library for profanity detection in Turkish sentences"}
{"name": "boomstarcuc/3dsfmfacereconstruction", "full_name": "BoomStarcuc/3DSfMFaceReconstruction", "topics": ["computer-vision", "unsupervised-learning", "structure-from-motion", "landmark-detection", "deep-learning", "3d-face-reconstruction"], "description": "Deep Unsupervised 3D SfM Face Reconstruction Based on Massive Landmark Bundle Adjustment."}
{"name": "kohakublueleaf/bluenet", "full_name": "KohakuBlueleaf/BlueNet", "topics": ["neural-network", "neural-networks", "package", "numpy"], "description": "A simple python package for Neural Network based on numpy"}
{"name": "crowsonkb/mdmm", "full_name": "crowsonkb/mdmm", "topics": ["pytorch", "optimization", "constrained-optimization"], "description": "The Modified Differential Multiplier Method (MDMM) for PyTorch"}
{"name": "cyril-sterling/evflownet-pytorch", "full_name": "Cyril-Sterling/EVFlowNet-pytorch", "topics": [], "description": "EVFlowNet in pytorch"}
{"name": "mehrantaghian/dqn-trading", "full_name": "MehranTaghian/DQN-Trading", "topics": ["reinforcement-learning", "stock-market", "trading-bot", "dqn", "deep-q-learning", "trade", "deep-reinforcement-learning", "pytorch"], "description": "A Deep Reinforcement Learning Framework for Stock Market Trading"}
{"name": "kakaoenterprise/aaai2021_mdr", "full_name": "kakaoenterprise/AAAI2021_MDR", "topics": ["deep-metric-learning", "pytorch", "aaai2021", "image-retrieval"], "description": "Official Code of AAAI 2021 Paper \"Multi-level Distance Regularization for Deep Metric Learning\""}
{"name": "taikiinoue45/padim", "full_name": "taikiinoue45/PaDiM", "topics": ["anomaly-detection", "deep-learning", "mvtec", "pytorch", "unsupervised-learning"], "description": "PaDiM: a Patch Distribution Modeling Framework for Anomaly Detection and Localization"}
{"name": "blackfeatherqq/facerecognition", "full_name": "BlackFeatherQQ/FaceRecognition", "topics": [], "description": "Using pytorch: yolov5+facenet+svm"}
{"name": "zouzhenhong98/sensaturban-bev-seg3d", "full_name": "zouzhenhong98/SensatUrban-BEV-Seg3D", "topics": ["semantic-segmentation", "point-cloud", "pytorch", "urban-scale", "sensaturban", "urban3d", "large-scale", "bev", "projection", "city-modeling", "photogrammetry", "remote-sensing"], "description": "An efficient 3D semantic segmentation framework for Urban-scale point clouds like SensatUrban, Campus3D, etc."}
{"name": "1e100/vovnet_v2", "full_name": "1e100/vovnet_v2", "topics": ["vovnetv2", "deeplearning", "classifier", "vovnet", "checkpoints", "imagenet", "imagenet-classifier", "pytorch"], "description": "VoVNet V2 implementation and checkpoints"}
{"name": "cortical-team/neko", "full_name": "cortical-team/neko", "topics": ["deep-learning", "neuromorphic-computing", "learning-algorithms"], "description": null}
{"name": "tayebiarasteh/pv_defect_detection", "full_name": "tayebiarasteh/PV_defect_detection", "topics": ["resnet", "resnet-18", "resnet-34", "image-classification", "supervised-learning", "solar-cells", "defect-detection", "pytorch", "deep-learning", "deep-neural-networks", "deeplearning", "image-processing", "grayscale", "university-project", "challenge"], "description": "Multi-label defect detection for Solar Cells from Electroluminescence images of the modules, using Deep Learning"}
{"name": "georg-wolflein/chesscog", "full_name": "georg-wolflein/chesscog", "topics": ["computer-vision", "pytorch", "chess", "chess-recognition", "deep-learning"], "description": "Determining chess game state from an image."}
{"name": "xuxy09/rawsr", "full_name": "xuxy09/RawSR", "topics": ["super-resolution", "deep-learning"], "description": "Exploiting raw images for real-scene super-resolution, TPAMI 2021"}
{"name": "brdav/bmtas", "full_name": "brdav/bmtas", "topics": ["computer-vision", "pytorch", "multi-task-learning", "neural-architecture-search"], "description": "Automated Search for Resource-Efficient Branched Multi-Task Networks [BMVC 2020]"}
{"name": "maximkm/stylegan-anime", "full_name": "maximkm/StyleGAN-anime", "topics": ["stylegan", "generative-adversarial-networks", "stylegan-model", "stylegan-pytorch", "stylegan2", "stylegan2-model", "stylegan2-pytorch", "anime", "anime-generation", "pytorch", "computer-vision", "deep-learning", "gans-models", "gans", "gan"], "description": "StyleGAN and StyleGAN2 implementation for generating anime faces."}
{"name": "ginger-io/transformer-embeddings", "full_name": "ginger-io/transformer-embeddings", "topics": ["embeddings", "nlp", "transformers"], "description": "Production-grade embedding generation, for any length of text, for transformer models."}
{"name": "hmakelin/gisnav", "full_name": "hmakelin/gisnav", "topics": ["computer-vision", "drone", "drones", "gis", "maps", "navigation", "px4", "ros", "ros2", "uav", "autopilot", "deep-learning", "neural-network", "neural-networks", "ogc", "wms", "uavs", "visual-navigation", "mavlink", "ardupilot"], "description": "Estimates airborne drone global position by matching video to map retrieved from onboard GIS server."}
{"name": "lmbxmu/dcff", "full_name": "lmbxmu/DCFF", "topics": [], "description": "Pytorch implementation of our paper under review - Training Compact CNNs for Image Classification using Dynamic-coded Filter Fusion"}
{"name": "alison-brie/multipropreg", "full_name": "Alison-brie/MultiPropReg", "topics": ["pytorch"], "description": "Optimization learning for image registration."}
{"name": "dic-iit/adam", "full_name": "ami-iit/ADAM", "topics": ["rigid-body-dynamics", "automatic-differentiation", "casadi", "python", "robotics", "jax", "numpy", "optimization", "urdf", "pytorch", "motion-planning", "reinforcement-learning"], "description": "ADAM implements a collection of algorithms for calculating rigid-body dynamics in Jax, CasADi, PyTorch, and Numpy."}
{"name": "yupeiyu98/drc", "full_name": "yuPeiyu98/DRC", "topics": ["unsupervised-learning", "segmentation", "neurips-2021", "pytorch"], "description": "[NeurIPS 2021] Unsupervised Foreground Extraction via Deep Region Competition"}
{"name": "hlwang1124/aaframework", "full_name": "hlwang1124/AAFramework", "topics": ["pothole-detection", "pytorch", "eccv-2020", "attention-mechanism", "attention"], "description": "Attention Aggregation Framework in PyTorch, ECCV Workshops 2020"}
{"name": "ryanccc/yolo-series", "full_name": "RyanCCC/yolo-series", "topics": ["computer-vision", "deep-learning", "object-detection", "yolo", "object-tracking", "pytorch", "tensorflow"], "description": "YOLO\u7b97\u6cd5\u7684\u5b9e\u73b0"}
{"name": "mourga/variational-lstm", "full_name": "mourga/variational-lstm", "topics": ["python", "pytorch", "neural-networks"], "description": "PyTorch implementation of Variational LSTM and Monte Carlo dropout."}
{"name": "denisbeslic/denovopipeline", "full_name": "denisbeslic/denovopipeline", "topics": ["denovo-assembly", "mass-spectrometry", "machine-learning", "peptide-identification", "pipeline", "pytorch", "tensorflow"], "description": "Pipeline for de novo peptide sequencing (Novor, DeepNovo, SMSNet, PointNovo, Casanovo) and assembly with ALPS."}
{"name": "pooya-mohammadi/pytorch-lightning-image-classification", "full_name": "pooya-mohammadi/pytorch-lightning-image-classification", "topics": ["deep-learning", "image-classification", "python", "pytorch", "pytorch-lightning"], "description": "pytorch lightening image classification"}
{"name": "amirhosseinh77/unet-aerialsegmentation", "full_name": "amirhosseinh77/UNet-AerialSegmentation", "topics": ["unet", "u-net", "semantic-segmentation", "segmentation", "pytorch", "aerial-imagery", "cross-entropy-loss", "focal-loss", "iou-loss"], "description": "A PyTorch implementation of U-Net for aerial imagery semantic segmentation."}
{"name": "pprp/pytorch-cifar-tricks", "full_name": "pprp/PyTorch-CIFAR-Model-Hub", "topics": ["pytorch", "image-classification", "vision-transformer", "cnn-classification", "tricks", "cifar10", "cifar10-classification"], "description": "Implementation of Conv-based and Vit-based networks designed for CIFAR."}
{"name": "lornatang/gan-pytorch", "full_name": "Lornatang/GAN-PyTorch", "topics": [], "description": "A complete implementation of the Pytorch neural network framework for GAN"}
{"name": "a-mos/high_resolution_image_inpainting", "full_name": "a-mos/High_Resolution_Image_Inpainting", "topics": ["deep-learning", "gimp", "high-resolution", "inpainting"], "description": "https://arxiv.org/abs/2104.13464"}
{"name": "airi-institute/probing_framework", "full_name": "AIRI-Institute/Probing_framework", "topics": ["multilinguality", "natural-language-processing", "probing", "transformers", "universal-dependencies"], "description": "Framework for probing tasks"}
{"name": "irohxu/vitasd", "full_name": "IrohXu/ViTASD", "topics": ["children", "deep-learning", "vision-transformer"], "description": "Official Implementation of ViTASD: Robust Vision Transformer Baselines for Autism Spectrum Disorder Facial Diagnosis"}
{"name": "kuroko1t/nne", "full_name": "kuroko1t/nne", "topics": ["pytorch", "onnx", "tensorflow", "tensorrt", "torchscript"], "description": "convert a pytorch model to a model for edge device."}
{"name": "amorehead/dips-plus", "full_name": "BioinfoMachineLearning/DIPS-Plus", "topics": ["deep-learning", "bioinformatics", "datasets", "proteins", "machine-learning"], "description": "The Enhanced Database of Interacting Protein Structures for Interface Prediction"}
{"name": "dmizr/phuber", "full_name": "dmizr/phuber", "topics": ["label-noise", "robust-learning", "gradient-clipping", "pytorch"], "description": "[Re] Can gradient clipping mitigate label noise? (ML Reproducibility Challenge 2020)"}
{"name": "imlhf/se_dcunet", "full_name": "IMLHF/SE_DCUNet", "topics": [], "description": "Deep Complex UNet for speech enhancement, init from \"https://github.com/chanil1218/DCUnet.pytorch\""}
{"name": "ziweiwangthu/gmpq", "full_name": "ZiweiWangTHU/GMPQ", "topics": [], "description": "This is the pytorch implementation for the paper: Generalizable Mixed-Precision Quantization via Attribution Rank Preservation,  which is accepted to ICCV2021."}
{"name": "senmaoy/recurrent-affine-transformation-for-text-to-image-synthesis", "full_name": "senmaoy/RAT-GAN", "topics": ["gan", "generative-adversarial-network", "image-generation", "pytorch", "text-to-image"], "description": "A conditional GAN for text-to-image "}
{"name": "neurai-lab/cls-er", "full_name": "NeurAI-Lab/CLS-ER", "topics": ["continual-learning", "deep-learning", "deep-neural-networks", "incremental-learning", "online-continual-learning", "lifelong-machine-learning"], "description": "The official PyTorch code for ICLR'22 Paper \"Learning Fast, Learning Slow: A General Continual Learning Method based on Complementary Learning System\"\""}
{"name": "idealwei/asanet", "full_name": "idealwei/ASANet", "topics": ["domain-adaptation", "semantic-segmentation", "pixel-affinity", "cityscapes", "gta5", "synthia", "pytorch", "scene-parsing"], "description": "The code and trained models of:  Affinity Space Adaptation for Semantic Segmentation Across Domains."}
{"name": "kinux98/ssl_eln", "full_name": "kinux98/SSL_ELN", "topics": ["semi-supervised-learning", "cvpr2022", "pytorch", "semantic-segmentation"], "description": "This repository contains the official implementation of Semi-supervised Semantic Segmentation with Error Localization Network  that has been accepted to 2022 IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR 2022)."}
{"name": "piesposito/transformers-low-code-experiments", "full_name": "piEsposito/transformers-low-code-experiments", "topics": ["nlp", "pytorch", "transformer", "machine-learning", "deep-learning"], "description": "Low-code pre-built pipelines for experiments with huggingface/transformers for Data Scientists in a rush."}
{"name": "icaros-usc/dqd-rl", "full_name": "icaros-usc/dqd-rl", "topics": ["deep-learning", "optimization", "openai-gym", "artificial-intelligence", "evolutionary-algorithms", "evolutionary-computation", "quality-diversity", "cma-es", "map-elites"], "description": "Official implementation of \"Approximating Gradients for Differentiable Quality Diversity in Reinforcement Learning\""}
{"name": "phborba/pytorch_segmentation_models_trainer", "full_name": "dsgoficial/pytorch_segmentation_models_trainer", "topics": ["semantic-segmentation", "pytorch", "pytorch-lightning", "hydra"], "description": "Framework to train semantic segmentation models on Pytorch using yaml config files"}
{"name": "luo3300612/semantics-assistedvideocaptioning.pytorch", "full_name": "luo3300612/Semantics-AssistedVideoCaptioning.pytorch", "topics": [], "description": "pytorch implementation of Semantics-AssistedVideoCaptioning"}
{"name": "mrfahrenhiet/cracksegmentationdeeplearning", "full_name": "mrFahrenhiet/CrackSegmentationDeepLearning", "topics": ["computer-vision", "deep-learning", "pytorch"], "description": "Multiscale Attention Based Efficient U-Net for Crack Segmentation, segments a RGB image into 2 classes crack and non-crack, this method obtained SOTA results on Crack500 dataset"}
{"name": "basiralab/dgn", "full_name": "basiralab/DGN", "topics": ["brain-networks", "cbt", "brain-connectivity", "geometric-deep-learning", "network-integration", "network-fusion", "network-analysis", "machine-learning-algorithms", "brain-gnn", "graph-integration", "graph-fusion", "graph-neural-networks", "gnn", "atlas-learning"], "description": "How to fuse a population of graphs into a single one using graph neural networks? "}
{"name": "d-cota/covid-monitor", "full_name": "d-cota/covid-monitor", "topics": ["machine-learning", "computer-vision", "covid-19", "covid", "cctv", "deep-learning", "social-distancing", "mask-detection", "counting-people"], "description": "This repo contains the code for the thesis \"Monitoring COVID-19 prevention measures using Deep Learning\""}
{"name": "rtharungowda/lp-ocr", "full_name": "rtharungowda/lp-ocr", "topics": ["license-plate-recognition", "pytorch", "yolov5", "yolo", "object-detection", "autonomous-vehicles", "license-plate-detection", "opencv"], "description": "license plate detection and recognition in unconstrained scenarios"}
{"name": "sheoyon-jhin/ancde", "full_name": "sheoyon-jhin/ANCDE", "topics": ["time-series", "deep-learning"], "description": "Attentive Neural Controlled Differential Equations for Time-series Classification and Forecasting"}
{"name": "mathcrazyy/text_classify", "full_name": "mathCrazyy/text_classify", "topics": [], "description": "\u9488\u5bf9Cnews\u6570\u636e\u96c6\u8fdb\u884c\u5206\u7c7b\uff0c\u4f7f\u7528\u4e86torchtext\u8fdb\u884c\u6587\u672c\u9884\u5904\u7406"}
{"name": "theo2021/onda", "full_name": "theo2021/OnDA", "topics": ["catastrophic-forgetting", "domain-adaptation", "machine-learning", "ml", "online-adaptation", "online-learning", "pytorch", "unsupervised-domain-adaptation"], "description": "Source code for \"Online Unsupervised Domain Adaptation for Semantic Segmentation in Ever-Changing Conditions\", ECCV 2022. This is the code has been implemented to perform training and evaluation of UDA approaches in continuous scenarios. The library has been implemented in PyTorch 1.7.1. Some newer versions should work as well."}
{"name": "krenerd/awesome-modular-pytorch-lightning", "full_name": "sieu-n/awesome-modular-pytorch-lightning", "topics": ["computer-vision", "pytorch", "pytorch-lightning"], "description": "LightCollections\u26a1\ufe0f: Ready-to-use implementations such as `LightningModules` for various computer vision papers."}
{"name": "lexuanhieu131297/torchbox", "full_name": "eric-le-12/torchbox", "topics": ["pytorch", "pytorch-tutorial"], "description": "implement your ideas in an easy, customizable and fast way"}
{"name": "kgcp/mel-tnnt", "full_name": "KGCP/MEL-TNNT", "topics": ["metadata-extraction", "nlp-ner", "pipeline", "nlp", "natural-language-processing", "named-entity-recognition"], "description": "Metadata Extractor & Loader (MEL) \u25a0 The NLP-NER Toolkit (TNNT)"}
{"name": "wngh1187/rawnext", "full_name": "wngh1187/RawNeXt", "topics": ["speaker-recognition", "speaker-verification", "raw-waveforms", "variable-duration-utterances"], "description": "Pytorch implementation of RawNeXt: Speaker verification system for variable-duration utterance with deep layer aggregation and dynamic scaling policies"}
{"name": "igr-ml/glasflow", "full_name": "uofgravity/glasflow", "topics": ["normalizing-flows", "torch", "pytorch"], "description": "Normalising flows implemented using nflows"}
{"name": "rvl-lab-utoronto/video_similarity_search", "full_name": "rvl-lab-utoronto/video_similarity_search", "topics": ["deep-learning", "pytorch", "self-supervised-learning", "representation-learning"], "description": "SLIC: Self-Supervised Learning with Iterative Clustering for Human Action Videos [CVPR 2022]"}
{"name": "mberr/torch-max-mem", "full_name": "mberr/torch-max-mem", "topics": ["torch", "cuda", "pytorch", "python"], "description": "Decorators for maximizing memory utilization with PyTorch & CUDA"}
{"name": "lighterswang/3dunet-brats-pytorch", "full_name": "LightersWang/3DUNet-BraTS-PyTorch", "topics": ["pytorch", "segmentation", "mri-segmentation", "unet", "brats-challenge", "brats-dataset", "brats2021"], "description": "PyTorch 3D U-Net implementation for Multimodal Brain Tumor Segmentation (BraTS 2021) "}
{"name": "scan-nrad/dl-direct", "full_name": "SCAN-NRAD/DL-DiReCT", "topics": ["mri", "morphometry", "deep-learning", "cortical-thickness"], "description": "DL+DiReCT - Direct Cortical Thickness Estimation using Deep Learning-based Anatomy Segmentation and Cortex Parcellation"}
{"name": "oke-aditya/pytorch_paper_implementations", "full_name": "oke-aditya/pytorch_paper_implementations", "topics": ["pytorch", "implementation-of-research-paper", "deep-learning", "deep-learning-papers"], "description": "Deep Learning Paper Implementations in PyTorch"}
{"name": "xiefeng69/epignn", "full_name": "Xiefeng69/EpiGNN", "topics": ["covid-19", "epidemic-modeling", "pytorch", "graph-neural-networks"], "description": "[ECML-PKDD2022] EpiGNN: Exploring Spatial Transmission with Graph Neural Network for Regional Epidemic Forecasting"}
{"name": "nvidia-ai-iot/ros2_torch_trt", "full_name": "NVIDIA-AI-IOT/ros2_torch_trt", "topics": ["ros2", "robotics", "pytorch", "tensorrt", "real-time", "jetson", "deep-learning", "ai-iot", "object-detection", "resnet-18", "classification-model", "ssd-mobilenet"], "description": "ROS 2 packages for PyTorch and TensorRT for real-time classification and object detection on Jetson Platforms"}
{"name": "hanlanqian/car_reidentification_application", "full_name": "hanlanqian/Car_ReIdentification_application", "topics": ["pytorch", "pyqt5", "python"], "description": "A car re-identification app based on multi-feature fusion technique"}
{"name": "jakegrigsby/super_sac", "full_name": "jakegrigsby/super_sac", "topics": ["deep-rl", "control", "sac", "reinforcement-learning", "pytorch"], "description": "A general model-free off-policy actor-critic implementation. Continuous and Discrete Soft Actor-Critic with multimodal observations, data augmentation, offline learning and behavioral cloning."}
{"name": "gau-nernst/vision-toolbox", "full_name": "gau-nernst/vision-toolbox", "topics": ["pytorch", "pytorch-lightning", "imagenet", "darknet", "cspdarknet", "vovnet", "yolov5"], "description": "Toolbox for vision tasks. Pre-trained vision backbones on ImageNet with PyTorch Lightning \ud83d\ude80"}
{"name": "imoneoi/onerl", "full_name": "imoneoi/onerl", "topics": ["reinforcement-learning", "deep-reinforcement-learning", "distributed-systems", "distributed-computing", "pytorch", "torch"], "description": "One RL Platform is all you need -- Event-driven fully distributed reinforcement learning framework"}
{"name": "bingyaohuang/compennest-plusplus", "full_name": "BingyaoHuang/CompenNeSt-plusplus", "topics": ["computer-vision", "deep-learning", "computer-graphics", "projector", "computational-photography", "procam"], "description": "[PAMI] End-to-end Full Projector Compensation"}
{"name": "tanulsingh/emotion-and-its-stimulus-detection", "full_name": "tanulsingh/Emotion-and-its-Stimulus-Detection", "topics": ["nlp", "transformer", "huggingface-library", "t5", "emotion-detection", "question-answering"], "description": "Detection of Emotion and its cause from text"}
{"name": "lukashedegaard/datasetops", "full_name": "LukasHedegaard/datasetops", "topics": ["dataset-combinations", "data-science", "multiple-datasets", "pytorch", "tensorflow", "data-munging", "data-wrangling", "data-cleaning", "data-processing", "deep-learning", "dataset"], "description": "Fluent dataset operations, compatible with your favorite libraries"}
{"name": "ndrwmlnk/critic-guided-segmentation-of-rewarding-objects-in-first-person-views", "full_name": "ndrwmlnk/critic-guided-segmentation-of-rewarding-objects-in-first-person-views", "topics": ["deep-learning", "reinforcement-learning", "image-segmentation", "minerl", "minecraft"], "description": "Critic Guided Segmentation of Rewarding Objects in First-Person Views. Explanatory video:"}
{"name": "alex-golts/pytorch-3d-r2n2", "full_name": "alex-golts/Pytorch-3D-R2N2", "topics": [], "description": "A pytorch implementation of the paper \"3D-R2N2: A Unified Approach for Single and Multi-view 3D Object Reconstruction\" by Choy et al."}
{"name": "tarolangner/ukb_segmentation", "full_name": "tarolangner/ukb_segmentation", "topics": ["segmentation", "mri", "u-net", "kidney", "parenchyma", "pytorch", "deep-learning", "uk-biobank", "neural-networks", "semantic-segmentation"], "description": "PyTorch implementation for 2.5D U-Net segmentation of UK Biobank neck-to-knee body MRI"}
{"name": "sara-nl/2d-vq-ae-2", "full_name": "sara-nl/2D-VQ-AE-2", "topics": ["pytorch", "examode", "pytorch-lightning", "whole-slide-imaging", "vq-vae-2", "neural-image-compression"], "description": "2D Vector-Quantized Auto-Encoder for compression of Whole-Slide Images in Histopathology"}
{"name": "aiwizo/template-nvae", "full_name": "nextml-code/template-nvae", "topics": ["nvae", "pytorch", "generative-model"], "description": "Simple NVAE implementation intended for effective reuse and learning purposes"}
{"name": "hectorpulido/vtuber-framework-unity-and-python", "full_name": "HectorPulido/Vtuber-Framework-Unity-and-Python", "topics": ["deep-learning", "python", "expression-analisis", "unity", "body-tracking"], "description": "Unity BodyTracking, Expression analisis, etc. with Deep learning"}
{"name": "westlake-ai/openbioseq", "full_name": "Westlake-AI/OpenBioSeq", "topics": ["bio-sequences", "pytorch", "self-supervised", "transformer", "classification-regression", "genetic-engineering"], "description": "This repo focuses on supervised and self-supervised bio-sequence representation learning"}
{"name": "yonghaoxu/uae-rs", "full_name": "YonghaoXu/UAE-RS", "topics": ["adversarial-examples", "adversarial-attacks", "remote-sensing", "scene-classification", "semantic-segmentation", "pytorch", "benchmark"], "description": "[IEEE TGRS 2022] Universal Adversarial Examples in Remote Sensing: Methodology and Benchmark"}
{"name": "mcg-nku/fmnet", "full_name": "MCG-NKU/FMNet", "topics": ["acmmm", "paper", "pytorch"], "description": "The official pytorch implemention of the ACM MM paper \"FMNet: Frequency-Aware Modulation Network for SDR-to-HDR Translation\"."}
{"name": "george0828zhang/torch_cif", "full_name": "George0828Zhang/torch_cif", "topics": ["pytorch", "cif", "continuous-integrate-and-fire"], "description": "A fast parallel PyTorch implementation of the \"CIF: Continuous Integrate-and-Fire for End-to-End Speech Recognition\" https://arxiv.org/abs/1905.11235."}
{"name": "feldberlin/timething", "full_name": "feldberlin/timething", "topics": ["audio", "forced-alignment", "alignment", "cli", "huggingface", "nlp", "python", "speech", "speech-recognition", "tts"], "description": "Timething is a library for aligning text transcripts with their audio recordings."}
{"name": "danikiyasseh/clops", "full_name": "danikiyasseh/CLOPS", "topics": ["continual-learning", "physiological-signals", "deep-learning"], "description": "PyTorch code for continual learning of cardiac signals with CLOPS"}
{"name": "echonet/lvh", "full_name": "echonet/lvh", "topics": ["cardiac-amyloidosis", "echocardiography", "deep-learning", "machine-learning"], "description": "EchoNet-LVH is a deep learning model that quantifies ventricular hypertrophy and predicts etiologies of increased wall thickness and LVH (amyloidosis, HCM, etc). "}
{"name": "vicentealex/spiking_resnet", "full_name": "VicenteAlex/Spiking_ResNet", "topics": ["deep-learning", "feature-extraction", "machine-learning", "neural-network", "python", "pytorch", "resnet", "spiking-neural-network", "spiking-neural-networks"], "description": "Official implementation of the paper Keys to Accurate Feature Extraction Using Residual Spiking Neural Networks"}
{"name": "puhsu/tabular-dl-pretrain-objectives", "full_name": "puhsu/tabular-dl-pretrain-objectives", "topics": ["deep-learning", "machine-learning", "pretraining", "python", "pytorch", "research", "tabular-data"], "description": "Revisiting Pretrarining Objectives for Tabular Deep Learning "}
{"name": "vita-group/cadtransformer", "full_name": "VITA-Group/CADTransformer", "topics": ["cad", "pytorch", "symbolspotting"], "description": "[CVPR 2022]\"CADTransformer: Panoptic Symbol Spotting Transformer for CAD Drawings\", Zhiwen Fan, Tianlong Chen, Peihao Wang, Zhangyang Wang"}
{"name": "houliangict/adcgan", "full_name": "liang-hou/adcgan", "topics": ["cgans", "icml-2022", "pytorch"], "description": "Conditional GANs with Auxiliary Discriminative Classifier (ICML 2022)"}
{"name": "allenai/aokvqa", "full_name": "allenai/aokvqa", "topics": ["computer-vision", "dataset", "natural-language-processing", "visual-question-answering"], "description": "Official repository for the A-OKVQA dataset"}
{"name": "20171130/equivariant-nn-zoo", "full_name": "20171130/Equivariant-NN-Zoo", "topics": ["diffusion-models", "equivariant-network", "geometric-deep-learning", "molecular-modeling", "protein-structure", "pytorch", "score-based-generative-models"], "description": "A library for building equivariant neural networks and a zoo of implementations & examples."}
{"name": "pranavphoenix/visionxformer", "full_name": "pranavphoenix/VisionXformer", "topics": ["attention-mechanism", "deep-learning", "transformer", "efficient", "gpu-computing", "performer", "linformer", "nystrom", "image", "classification", "vision"], "description": "Vision Xformers"}
{"name": "gkunnan97/fastgcn_pytorch", "full_name": "Gkunnan97/FastGCN_pytorch", "topics": ["fastgcn", "pytorch", "as-gcn"], "description": "an implementation of FastGCN with pytorch"}
{"name": "joypang123/textmage", "full_name": "JoyPang123/Textmage", "topics": ["pytorch", "website", "flask", "text-to-image", "python", "nlp", "computer-vision"], "description": "A website to generate images from text."}
{"name": "denniscraandijk/dl-abstract-argumentation", "full_name": "DennisCraandijk/DL-abstract-argumentation", "topics": ["argumentation-frameworks", "neural-symbolic-reasoning", "abstract-argumentation", "graph-neural-networks", "deep-learning"], "description": "Neuro-symbolic approaches to reasoning problems from abstract argumentation"}
{"name": "nyxflower/gripnet", "full_name": "NYXFLOWER/GripNet", "topics": ["graph-neural-networks", "link-prediction", "node-classification", "heterogeneous-graph", "interconnected-graph", "data-integration", "pytorch"], "description": "GripNet: Graph Information Propagation on Supergraph for Heterogeneous Graphs (PatternRecognit, 2023)"}
{"name": "stormalytics/hurricane-forecasting", "full_name": "stormalytics/hurricane-forecasting", "topics": ["deep-learning", "machine-learning"], "description": "Deep Learning for Hurricane Forecasting"}
{"name": "sachin-chhabra/pytorch-cgan", "full_name": "s-chh/Pytorch-cGAN-conditional-GAN", "topics": ["cgan", "pytorch-cgan", "conditional-dcgan", "pytorch-cgan-mnist", "conditional-gan", "pytorch-conditional-gan", "conditional-image-generation"], "description": "Pytorch implementation of conditional generative adversarial network (cGAN) using DCGAN architecture for generating 32x32 images of MNIST, SVHN, FashionMNIST, and USPS datasets."}
{"name": "ucsc-real/negative-label-smoothing", "full_name": "UCSC-REAL/negative-label-smoothing", "topics": ["label-noise", "label-smoothing", "noisy-label-learning", "noisy-labels", "robustness", "trustworthy-machine-learning"], "description": "[ICML2022 Long Talk] Official Pytorch implementation of \"To Smooth or Not? When Label Smoothing Meets Noisy Labels\""}
{"name": "manhph2211/vistt", "full_name": "manhph2211/ViSTT", "topics": ["vietnamese-speech-recognition", "vietnames-asr", "rnnt", "speech-to-text", "sst", "tranducer", "vivos", "flask", "nginx", "pytorch", "uwsgi", "pytorch-lightning", "vietnamese-speech-to-text", "aws-deploy", "hydra", "conformer"], "description": "I'm building an end-to-end Vietnamese Speech Recognition System. I'll deploy it into production with the help of Flask, Uwsgi, Nginx, and AWS ..."}
{"name": "ayaka14732/travis", "full_name": "ayaka14732/TrAVis", "topics": ["bert", "natural-language-processing", "nlp", "attention-mechanism", "transformers", "visualization", "bart", "jax", "numpy", "heatmap"], "description": "TrAVis: Visualise BERT attention in-browser"}
{"name": "dart2022/dartset", "full_name": "DART2022/DART", "topics": ["computer-graphics", "mano", "metaverse", "pose-estimation", "pytorch", "rendering-3d-graphics"], "description": "DART: Articulated Hand Model with Diverse Accessories and Rich Textures (NeurIPS 2022 - Datasets and Benchmarks Track)"}
{"name": "gabrielspadon/regenn", "full_name": "gabrielspadon/ReGENN", "topics": ["deep-learning", "neural-network", "evolution", "series-forecasting", "paper", "gse", "artificial-intelligence"], "description": "Recurrent Graph Evolution Neural Network (ReGENN) using Graph Soft Evolution (GSE)"}
{"name": "ktho22/vctts", "full_name": "ktho22/vctts", "topics": [], "description": "pytorch implementation of \"Emotional Voice Conversion using Multitask Learning with Text-to-Speech\", Accepted to ICASSP 2020 "}
{"name": "hongxinxiang/pytorch-multi-gpu-training-tutorial", "full_name": "HongxinXiang/pytorch-multi-GPU-training-tutorial", "topics": ["deep-learning", "distributed-training", "multi-gpu-training", "pytorch", "tutorial", "computer-vision"], "description": null}
{"name": "xmu-xiaoma666/sdatr", "full_name": "xmu-xiaoma666/SDATR", "topics": ["pytorch"], "description": "Official Code for \"Knowing what it is: Semantic-enhanced Dual Attention Transformer\" (TMM2022)"}
{"name": "tomchang25/whisper-auto-transcribe", "full_name": "tomchang25/whisper-auto-transcribe", "topics": ["nlp", "asr", "text-to-speech", "deep-learning", "speech-recognition", "speech-to-text", "language-model", "nlp-machine-learning", "pytorch", "speech-processing", "voice-activity-detection"], "description": "Auto transcribe tool based on whisper"}
{"name": "nrsyed/pytorch-yolov3", "full_name": "nrsyed/pytorch-yolov3", "topics": ["yolov3", "object-detection", "pytorch", "yolo", "python"], "description": "A (mostly from scratch) PyTorch implementation of YOLOv3 for real-time webcam object detection"}
{"name": "oscarshu0719/pytorch-stargan-vc2", "full_name": "Oscarshu0719/pytorch-StarGAN-VC2", "topics": ["pytorch", "python", "python3", "stargan", "stargan-vc", "stargan-vc2", "voice-conversion"], "description": "A PyTorch implementation of StarGAN-VC2."}
{"name": "flc-qu-hep/getting_high", "full_name": "FLC-QU-hep/getting_high", "topics": ["gan", "wgan-gp", "bib-ae", "deep-learning", "machine-learning"], "description": "Modelling electromagnetic showers in the central region of the Silicon-Tungsten calorimeter of the proposed ILD "}
{"name": "mims-harvard/gxai-bench", "full_name": "mims-harvard/GraphXAI", "topics": ["graph-neural-networks", "explainability", "explainable-ai", "explainable-ml", "interpretability", "deep-learning", "embeddings", "graph-machine-learning", "benchmarking"], "description": "GraphXAI: Resource to support the development and evaluation of GNN explainers"}
{"name": "zxpzhong/3d-recgan-pytorch", "full_name": "zxpzhong/3D-RecGAN-pytorch", "topics": ["deep-learning", "3d-reconstruction", "gan", "unet", "pytorch"], "description": "A pytorch implement of 3D-RecGAN"}
{"name": "woodywff/nas_3d_unet", "full_name": "woodywff/nas_3d_unet", "topics": ["neural-architecture-search", "segmentation", "brain-tumor-segmentation", "brats", "pytorch"], "description": "Neural Architecture Search for Gliomas Segmentation on Multimodal Magnetic Resonance Imaging"}
{"name": "jonathancrabbe/label-free-xai", "full_name": "JonathanCrabbe/Label-Free-XAI", "topics": ["artificial-intelligence", "autoencoders", "explainable-ai", "interpretability", "interpretable-deep-learning", "interpretable-machine-learning", "machine-learning", "neural-network", "representation-learning", "unsupervised-learning", "variational-autoencoder"], "description": "This repository contains the implementation of Label-Free XAI, a new framework to adapt explanation methods to unsupervised models. For more details, please read our ICML 2022 paper: 'Label-Free Explainability for Unsupervised Models'."}
{"name": "zqsong1997/avmfn-for-person-verification", "full_name": "ZQSong1997/AVMFN-For-Person-Verification", "topics": ["face-recognition", "feature-fusion", "pytorch", "voiceprint-recognition"], "description": "Bimodal Adaptive Feature Fusion Network for Person Verification"}
{"name": "icml2021-13/kd3a", "full_name": "FengHZ/KD3A", "topics": ["domain-adaptation", "federated-learning", "unsupervised-learning", "transfer-learning", "deep-learning"], "description": "Here is the official implementation of the model KD3A in paper \"KD3A: Unsupervised Multi-Source Decentralized Domain Adaptation via Knowledge Distillation\"."}
{"name": "univiecube/deepnog", "full_name": "univieCUBE/deepnog", "topics": ["protein-sequences", "orthology-inference", "orthology-assignments", "deep-learning", "machine-learning"], "description": "Protein orthologous group assignment with deep learning"}
{"name": "franli/nce", "full_name": "lifeitech/nce", "topics": ["pytorch", "nce", "energy-based-model", "generative-modeling", "machine-learning"], "description": "Noise Contrastive Estimation (NCE) in PyTorch"}
{"name": "fourson/unmodnet", "full_name": "fourson/UnModNet", "topics": ["modulo-camera", "modulo-image", "hdr", "unwrap", "deep-learning", "phase-unwrapping"], "description": "NeurIPS 2020 paper: UnModNet: Learning to Unwrap a Modulo Image for High Dynamic Range Imaging"}
{"name": "jk96491/rl_algorithms", "full_name": "jk96491/RL_Algorithms", "topics": ["ppo", "a2c", "a3c", "ddpg", "dqn", "reinforce", "pytorch", "tensorflow"], "description": "Take the code of the reinforcement learning algorithm here~"}
{"name": "olgachernytska/word2vec-pytorch", "full_name": "OlgaChernytska/word2vec-pytorch", "topics": ["natural-language-processing", "word2vec", "pytorch", "deep-learning"], "description": "Implementation of the first paper on word2vec"}
{"name": "daviddmc/stress", "full_name": "daviddmc/STRESS", "topics": ["deep-learning", "mri", "pytorch", "self-supervised-learning", "super-resolution"], "description": "Implementation of 'Stress: Super-Resolution for Dynamic Fetal MRI using Self-Supervised Learning'"}
{"name": "neurai-lab/bihome", "full_name": "NeurAI-Lab/biHomE", "topics": ["homography-estimation", "unsupervised-learning", "computer-vision", "cvpr", "deep-learning"], "description": "This is the official repo for the CVPR 2021 IMW paper: \"Perceptual Loss for Robust Unsupervised Homography Estimation\""}
{"name": "dlmacedo/robust-deep-learning", "full_name": "dlmacedo/robust-deep-learning", "topics": ["classification", "deep-learning", "deep-neural-networks", "machine-learning", "ood-detection", "open-set", "open-set-recognition", "out-of-distribution-detection", "pytorch", "uncertainty-calibration", "uncertainty-estimation", "uncertainty-neural-networks", "robust-deep-learning", "robust-machine-learning", "trustworthy-ai", "trustworthy-machine-learning", "anomaly-detection", "novelty-detection", "out-of-distribution"], "description": "A project to train your model from scratch or fine-tune a pretrained model using the losses provided in this library to improve out-of-distribution detection and uncertainty estimation performances. Calibrate your model to produce enhanced uncertainty estimations. Detect out-of-distribution data using the defined score type and threshold."}
{"name": "ryoungj/optdom", "full_name": "ryoungj/optdom", "topics": ["python", "self-supervised-learning", "domain-generalization", "distribution-shift", "representation-learning", "pytorch", "machine-learning"], "description": "[ICLR'22] Self-supervised learning optimally robust representations for domain shift."}
{"name": "liuweide01/rpnet-weakly-supervised-segmentation", "full_name": "liuweide01/RPNet-Weakly-Supervised-Segmentation", "topics": ["deep-learning", "segmentation", "weakly-supervised-learning", "pytorch"], "description": "Cross-Image Region Mining with Region Prototypical Network for Weakly Supervised Segmentation"}
{"name": "coperception/star", "full_name": "coperception/star", "topics": ["computer-vision", "deep-learning", "pytorch", "robotics-perception", "collaborative-perception", "multi-robot-systems"], "description": "[CoRL 2022] Multi Robot Scene Completion"}
{"name": "christian-doucette/tolkein_text", "full_name": "christian-doucette/tolkein_text", "topics": ["nlp", "machine-learning", "language-models", "pytorch", "lord-of-the-rings"], "description": "Neural Network Language Model that generates text based off Lord of the Rings. Built with Pytorch."}
{"name": "monologg/enct5", "full_name": "monologg/EncT5", "topics": [], "description": "Pytorch Implementation of EncT5: Fine-tuning T5 Encoder for Non-autoregressive Tasks"}
{"name": "braun-steven/simple-einet", "full_name": "braun-steven/simple-einet", "topics": ["machine-learning", "sum-product-networks", "einsum", "deep-learning"], "description": "A simplified implementation of EinsumNetworks in PyTorch."}
{"name": "jsxlei/scale_v2", "full_name": "jsxlei/SCALEX", "topics": ["single-cell-genomics", "scalex", "single-cell", "deep-learning", "online-integration"], "description": "Online single-cell data integration through projecting heterogeneous datasets into a common cell-embedding space"}
{"name": "hsiaoliwei/chinese-advertisement-board-identification", "full_name": "HsiaoLiWei/Chinese-advertisement-board-identification", "topics": ["pytorch", "deep-learning", "yolov5", "text-recognition", "text-detection"], "description": "Chinese-Advertisement-Board-Identification.  We use YoloV5 to extract the ROI of the location of  the chinese word. Next, we sort the bounding box and recognize every chinese words which we extracted. The methods which we use are Yolov5, ArgMargin and Focal loss."}
{"name": "obss/turkish-question-generation", "full_name": "obss/turkish-question-generation", "topics": ["question-generation", "question-answering", "turkish", "mt5", "t5", "nlp", "transformers", "xquad", "multilingual", "arxiv", "neptune-ai", "wandb"], "description": "Automated question generation and question answering from Turkish texts using text-to-text transformers"}
{"name": "kimmanjin/rsa", "full_name": "KimManjin/RSA", "topics": [], "description": "Official Pytorch Implementation of Relational Self-Attention, NeurIPS 2021"}
{"name": "alga-hopf/drl-graph-partitioning", "full_name": "alga-hopf/drl-graph-partitioning", "topics": ["drl", "graph-partitioning", "matrix-ordering", "gnn"], "description": "DRL models for graph partitioning and sparse matrix ordering."}
{"name": "bramvanroy/astred", "full_name": "BramVanroy/astred", "topics": ["translation", "parallel-corpus", "alignment", "linguistics", "nlp", "parsing", "spacy", "stanza"], "description": "An easy-to-use library to linguistically compare one sentence and its words to another, in the same language or a different one. For instance useful for comparing a translation with the original text, to find differences and similarities between two different translations, or to see how a machine translation differs from a reference translation."}
{"name": "xcmyz/tacotron2.xcmyz", "full_name": "xcmyz/tacotron2.xcmyz", "topics": [], "description": "new version of tacotron2 (old version: https://github.com/xcmyz/Tacotron2-Pytorch)"}
{"name": "xwgeng/rewritenat", "full_name": "xwgeng/RewriteNAT", "topics": ["neural-machine-translation", "non-autoregressive-translation", "pytorch"], "description": "Learning to Rewrite for Non-Autoregressive Neural Machine Translation"}
{"name": "arena-rosnav/arena-bench", "full_name": "Arena-Rosnav/arena-rosnav", "topics": ["ros", "python", "benchmarking", "robotics", "simulation", "drl", "ppo", "pytorch", "navigation"], "description": null}
{"name": "linfeng-tang/superfusion", "full_name": "Linfeng-Tang/SuperFusion", "topics": [], "description": "This is official Pytorch implementation of \"SuperFusion: A Versatile Image Registration and Fusion Network with Semantic Awareness\""}
{"name": "sunset1995/hohonet", "full_name": "sunset1995/HoHoNet", "topics": ["computer-vision", "360-photo", "room-layout", "depth-estimation", "semantic-segmentation", "cvpr2021", "hohonet"], "description": "\"HoHoNet: 360 Indoor Holistic Understanding with Latent Horizontal Features\" official pytorch implementation."}
{"name": "unilight/ldnet", "full_name": "unilight/LDNet", "topics": ["mosnet", "mobilenetv3", "mbnet", "pytorch", "mos-prediction", "vcc2018", "voicemos"], "description": "Official implementation of the paper: \"LDNet: Unified Listener Dependent Modeling in MOS Prediction for Synthetic Speech\""}
{"name": "gszfwsb/artisticcloudblog", "full_name": "gszfwsb/ArtisticCloudBlog", "topics": ["deep-learning", "style-transfer", "pytorch", "pyqt5", "socket-programming"], "description": "Artistic Neural Style Transfer Software for DIY Stylized images and videos creations."}
{"name": "pyro-ppl/pyroed", "full_name": "pyro-ppl/pyroed", "topics": ["bayesian", "optimization", "sequential", "experiment", "design", "pyro", "pytorch", "optimal", "combinatorial"], "description": "Bayesian optimization of discrete sequences"}
{"name": "steve-tod/deformsyncnet", "full_name": "Steve-Tod/DeformSyncNet", "topics": [], "description": "Official pytorch implementation of DeformSyncNet: Deformation Transfer via Synchronized Shape Deformation Spaces"}
{"name": "wireless911/span-aste", "full_name": "wireless911/span-aste", "topics": ["span-aste", "aspect-sentiment-triplet-extraction", "sentiment-analysis"], "description": "a sample pytorch Implementation of ACL 2021 research paper \"Learning Span-Level Interactions for Aspect Sentiment Triplet Extraction\"."}
{"name": "wanghelin1997/dcase-2020-task1a-code", "full_name": "WangHelin1997/DCASE-2020-Task1A-Code", "topics": [], "description": "A pytorch implementation of the paper : Acoustic Scene Classification with Multiple Decision Schemes."}
{"name": "ryanccc/yoloseries", "full_name": "RyanCCC/yolo-series", "topics": ["computer-vision", "deep-learning", "object-detection", "yolo", "object-tracking", "pytorch", "tensorflow"], "description": "YOLO\u7b97\u6cd5\u7684\u5b9e\u73b0"}
{"name": "deligentfool/policy_based_rl", "full_name": "deligentfool/policy_based_RL", "topics": ["reinforce", "actor-critic", "a2c", "trpo", "ppo", "ddpg", "td3", "sac", "pytorch", "acer", "a3c", "icm", "rnd"], "description": "The implement of the policy gradient RL algorithm with pytorch"}
{"name": "pierlj/aaf_framework", "full_name": "pierlj/aaf_framework", "topics": ["few-shot", "object-detection", "computer-vision", "deep-learning", "fcos"], "description": "Alignment Attention Fusion framework for Few-Shot Object Detection"}
{"name": "german-nlp-group/german-transformer-training", "full_name": "German-NLP-Group/german-transformer-training", "topics": ["transformer", "huggingface", "bert", "roberta"], "description": "Plan and train German transformer models."}
{"name": "whgaara/pytorch-roberta", "full_name": "whgaara/pytorch-roberta", "topics": ["pytorch", "bert", "roberta", "ner", "mlm"], "description": null}
{"name": "kinpzz/udasod-upl", "full_name": "Kinpzz/UDASOD-UPL", "topics": ["salient-object-detection", "copy-paste", "unsupervised-domain-adaptation", "segmentation", "pytorch"], "description": "Unsupervised Domain Adaptive Salient Object Detection Through Uncertainty-Aware Pseudo-Label Learning, AAAI Conference on Artificial Intelligence (AAAI), 2022"}
{"name": "koflera/dynamicradcinemri", "full_name": "koflera/DynamicRadCineMRI", "topics": ["deep-learning", "neural-networks", "mri", "image-reconstruction"], "description": "Implementation of an iterative network for image reconstruction in 2D radial cardiac cine MRI."}
{"name": "kdhht2334/avce_fer", "full_name": "kdhht2334/AVCE_FER", "topics": ["facial-expression-recognition", "human-computer-interaction", "valence-arousal", "computer-vision", "contrastive-learning", "deep-learning", "feature-attention", "pytorch", "real-time-demo"], "description": "[ECCV2022] The official repository of Emotion-aware Multi-view Contrastive Learning for Facial Emotion Recognition"}
{"name": "jeevesh8/ghi-prediction", "full_name": "Jeevesh8/GHI-prediction", "topics": ["ghi", "weather", "forecasting", "dhi", "dni", "solar-irradiance", "machine-learning", "time-series-forecasting", "transformer", "lstm-cnn", "lstm", "ghi-prediction", "confidence-intervals", "series-models", "hacktoberfest"], "description": "PyTorch Code for running various time series models for different time stamps and confidence intervals for Solar Irradiance prediction."}
{"name": "cambridgeltl/contrastivebli", "full_name": "cambridgeltl/ContrastiveBLI", "topics": ["bilingual-lexicon-induction", "word-translation", "contrastive-learning", "self-learning", "cross-lingual-word-embeddings", "mbert", "pytorch", "word-alignment", "cross-lingual-embeddings", "bilingual-lexicon-extraction", "bilingual-word-embedding", "word-embeddings", "fasttext-embeddings", "bilingual-dictionary-induction", "cross-lingual-word-embedding", "low-resource-machine-translation"], "description": "Improving Word Translation via Two-Stage Contrastive Learning (ACL 2022). Keywords: Bilingual Lexicon Induction, Word Translation, Cross-Lingual Word Embeddings."}
{"name": "likith012/muleeg", "full_name": "likith012/mulEEG", "topics": ["self-supervised-learning", "representation-learning", "sleep-staging", "deep-learning", "multi-view-learning", "time-series", "electroencephalography", "miccai"], "description": "Official implementation of our MICCAI 2022 paper \"mulEEG: A Multi-View Representation Learning on EEG Signals\""}
{"name": "alireza-nasiri/soundclr", "full_name": "alireza-nasiri/SoundCLR", "topics": [], "description": "Implementation for \"SoundCLR: Contrastive Learning of Representations For Improved Environmental Sound Classification,\" in pytorch."}
{"name": "chen-judge/skt", "full_name": "chen-judge/SKT", "topics": ["crowd-counting", "distillation", "pytorch"], "description": "Efficient Crowd Counting via Structured Knowledge Transfer (SKT, ACM MM 2020)"}
{"name": "vlomonaco/ar1-pytorch", "full_name": "vlomonaco/ar1-pytorch", "topics": ["continual-learning", "continualai", "pytorch", "incremental-learning", "core50", "computer-vision", "deep-learning", "lifelong-learning"], "description": "AR1* with Latent Replay, implemented in PyTorch"}
{"name": "sanghyun-hong/deepsloth", "full_name": "Sanghyun-Hong/DeepSloth", "topics": ["multi-exit-architectures", "slowdown-attacks", "adversarial-examples", "pytorch", "iclr-2021", "spotlight"], "description": "[ICLR 2021: Spotlight] Source code for the paper \"A Panda? No, It's a Sloth: Slowdown Attacks on Adaptive Multi-Exit Neural Network Inference\""}
{"name": "tencentyouturesearch/personreid-cacenet", "full_name": "TencentYoutuResearch/PersonReID-YouReID", "topics": ["person-reid", "identification", "pytorch", "person-reidentification", "baseline", "market1501", "msmt17"], "description": "A Simple, High-efficiency, Strong framework for person re-Identification."}
{"name": "slyautomation/osrs_yolov5", "full_name": "slyautomation/osrs_yolov5", "topics": ["cuda", "pytorch", "yolov5", "python", "pycharm", "osrs", "runescape", "botting", "machine-learning", "mlbot"], "description": "Yolov5 Object Detection In OSRS using Python code, Detecting Cows - Botting"}
{"name": "rice-eic/fractrain", "full_name": "GATECH-EIC/FracTrain", "topics": ["pytorch", "efficient-training", "low-precision-training"], "description": "[NeurIPS 2020] \"FracTrain: Fractionally Squeezing Bit Savings Both Temporally and Spatially for Efficient DNN Training\" by Yonggan Fu, Haoran You, Yang Zhao, Yue Wang, Chaojian Li, Kailash Gopalakrishnan, Zhangyang Wang, Yingyan Lin"}
{"name": "johnleehit/slex-net", "full_name": "JohnleeHIT/SLEX-Net", "topics": ["uncertainty-estimation", "medical-image-segmentation", "context-information-management", "deep-learning", "pytorch"], "description": "[IEEE-JBHI'2022] Hematoma Expansion Context Guided Intracranial Hemorrhage Segmentation and Uncertainty Estimation(Pytorch)"}
{"name": "salesforce/pb-ovd", "full_name": "salesforce/PB-OVD", "topics": [], "description": "A pytorch Implementation of Open Vocabulary Object Detection with Pseudo Bounding-Box Labels"}
{"name": "guanghaoyin/rtcan-1d", "full_name": "guanghaoyin/RTCAN-1D", "topics": [], "description": "Pytorch code for our TOMM2022 paper \"A Multimodal framework for large scale Emotion Recognition by Fusing Music and Electrodermal Activity Signals\" "}
{"name": "stan-hua/cytoimagenet", "full_name": "stan-hua/CytoImageNet", "topics": ["dataset", "transfer-learning", "cytoimagenet", "deep-learning"], "description": "A large-scale pretraining dataset for bioimage transfer learning"}
{"name": "yihaosun1124/pytorch-mopo", "full_name": "yihaosun1124/pytorch-mopo", "topics": ["deep-reinforcement-learning", "pytorch", "offline", "deep-learning", "reinforcement-learning"], "description": "re-implementation of the offline model-based RL algorithm MOPO in pytorch"}
{"name": "zjunlp/promptkgc", "full_name": "zjunlp/PromptKG", "topics": ["knowledge-graph", "genkgc", "prompt-tuning", "relation-extraction", "link-prediction", "retrievalre", "demo-tuning", "pytorch", "promptkg", "retroprompt", "knowledge-informed-prompt-learning", "question-answering", "dialogue", "awsome-list", "paper-list", "retrieval-augmented", "lambdakg", "natural-language-processing", "nlp", "paper"], "description": "PromptKG Family: a Gallery of Prompt Learning & KG-related research works, toolkits, and paper-list."}
{"name": "jac99/radarloc", "full_name": "jac99/RadarLoc", "topics": ["computer-vision", "deep-learning", "metric-learning", "place-recognition", "radar", "mulran-dataset"], "description": "RadarLoc: Large-Scale Topological Radar Localization Using Learned Descriptors"}
{"name": "lr94/abas", "full_name": "lr94/abas", "topics": ["deep-learning", "domain-adaptation", "automl", "neural-architecture-search", "model-selection"], "description": "Code release for Adversarial Branch Architecture Search for Unsupervised Domain Adaptation"}
{"name": "vl-group/natural-color-fool", "full_name": "VL-Group/Natural-Color-Fool", "topics": ["adversarial-attacks", "pytorch", "color-attacks", "unrestricted-attacks"], "description": "This repository is the official implementation of [Natural Color Fool: Towards Boosting Black-box Unrestricted Attacks (NeurIPS'22)](https://arxiv.org/abs/2210.02041). "}
