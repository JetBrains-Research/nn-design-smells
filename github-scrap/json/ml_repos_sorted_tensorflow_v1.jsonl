{"name": "ultralytics/yolov5", "full_name": "ultralytics/yolov5", "topics": ["yolov3", "yolov4", "yolov5", "object-detection", "pytorch", "onnx", "coreml", "ios", "tflite", "yolo", "deep-learning", "machine-learning", "ml"], "description": "YOLOv5 \ud83d\ude80 in PyTorch > ONNX > CoreML > TFLite"}
{"name": "huggingface/datasets", "full_name": "huggingface/datasets", "topics": ["nlp", "datasets", "metrics", "evaluation", "pytorch", "tensorflow", "pandas", "numpy", "natural-language-processing", "computer-vision", "machine-learning", "deep-learning", "speech", "hacktoberfest"], "description": "\ud83e\udd17 The largest hub of ready-to-use datasets for ML models with fast, easy-to-use and efficient data manipulation tools"}
{"name": "microsoft/bringing-old-photos-back-to-life", "full_name": "microsoft/Bringing-Old-Photos-Back-to-Life", "topics": ["image-restoration", "old-photo-restoration", "generative-adversarial-network", "gans", "pytorch", "image-manipulation", "photo-restoration", "photos"], "description": "Bringing Old Photo Back to Life (CVPR 2020 oral)"}
{"name": "microsoft/qlib", "full_name": "microsoft/qlib", "topics": ["quantitative-finance", "machine-learning", "stock-data", "platform", "finance", "algorithmic-trading", "python", "investment", "quant", "quantitative-trading", "quant-dataset", "quant-models", "auto-quant", "fintech", "research-paper", "paper", "research", "deep-learning"], "description": "Qlib is an AI-oriented quantitative investment platform, which aims to realize the potential, empower the research, and create the value of AI technologies in quantitative investment. With Qlib, you can easily try your ideas to create better Quant investment strategies. An increasing number of  SOTA Quant research works/papers are released in Qlib."}
{"name": "microsoft/deepspeed", "full_name": "microsoft/DeepSpeed", "topics": ["deep-learning", "pytorch", "gpu", "machine-learning", "billion-parameters", "data-parallelism", "model-parallelism", "inference", "pipeline-parallelism", "compression", "mixture-of-experts", "trillion-parameters", "zero"], "description": "DeepSpeed is a deep learning optimization library that makes distributed training and inference easy, efficient, and effective."}
{"name": "geohot/tinygrad", "full_name": "geohot/tinygrad", "topics": [], "description": "You like pytorch? You like micrograd? You love tinygrad! \u2764\ufe0f "}
{"name": "eleutherai/gpt-neo", "full_name": "EleutherAI/gpt-neo", "topics": ["language-model", "transformers", "gpt", "gpt-2", "gpt-3"], "description": "An implementation of model parallel GPT-2 and GPT-3-style models using the mesh-tensorflow library."}
{"name": "paddlepaddle/paddlenlp", "full_name": "PaddlePaddle/PaddleNLP", "topics": ["nlp", "seq2seq", "embedding", "bert", "ernie", "paddlenlp", "pretrained-models", "transformers", "information-extraction", "question-answering", "search-engine", "semantic-analysis", "sentiment-analysis", "neural-search", "uie", "image-generation", "document-intelligence", "stable-diffusion", "aigc", "compression"], "description": "\ud83d\udc51 Easy-to-use and powerful NLP library with \ud83e\udd17 Awesome model zoo, supporting wide-range of NLP tasks from research to industrial applications, including \ud83d\uddc2Text Classification,  \ud83d\udd0d Neural Search, \u2753 Question Answering, \u2139\ufe0f Information Extraction, \ud83d\udcc4 Document Intelligence, \ud83d\udc8c Sentiment Analysis and \ud83d\uddbc Diffusion AIGC system etc."}
{"name": "serengil/deepface", "full_name": "serengil/deepface", "topics": ["face-recognition", "vgg-face", "facenet", "openface", "facial-expression-recognition", "age-prediction", "gender-prediction", "race-classification", "emotion-recognition", "deep-learning", "machine-learning", "deepface", "face-analysis", "python", "deepid", "arcface", "facial-recognition"], "description": "A Lightweight Face Recognition and Facial Attribute Analysis (Age, Gender, Emotion and Race) Library for Python"}
{"name": "aladdinpersson/machine-learning-collection", "full_name": "aladdinpersson/Machine-Learning-Collection", "topics": ["pytorch", "pytorch-implementation", "pytorch-tutorial", "pytorch-gan", "pytorch-examples", "tensorflow2", "tensorflow-tutorials", "tensorflow-examples", "machine-learning", "machine-learning-algorithms", "pytorch-tutorials"], "description": "A resource for learning about Machine learning & Deep Learning"}
{"name": "openai/jukebox", "full_name": "openai/jukebox", "topics": ["paper", "audio", "music", "pytorch", "generative-model", "vq-vae", "transformer"], "description": "Code for the paper \"Jukebox: A Generative Model for Music\""}
{"name": "hpcaitech/colossalai", "full_name": "hpcaitech/ColossalAI", "topics": ["deep-learning", "hpc", "large-scale", "data-parallelism", "pipeline-parallelism", "model-parallelism", "ai", "big-model", "distributed-computing", "inference", "heterogeneous-training", "foundation-models"], "description": "Making large AI models cheaper, faster and more accessible"}
{"name": "tianxiaomo/pytorch-yolov4", "full_name": "Tianxiaomo/pytorch-YOLOv4", "topics": ["yolov4", "pytorch", "darknet2pytorch", "darknet2onnx", "tensorrt", "onnx", "pytorch-yolov4", "yolov4-tiny", "yolov3"], "description": "PyTorch ,ONNX and TensorRT implementation of YOLOv4"}
{"name": "maartengr/bertopic", "full_name": "MaartenGr/BERTopic", "topics": ["bert", "transformers", "topic-modeling", "sentence-embeddings", "nlp", "machine-learning", "topic", "ldavis", "topic-modelling", "topic-models"], "description": "Leveraging BERT and c-TF-IDF to create easily interpretable topics. "}
{"name": "systemerrorwang/white-box-cartoonization", "full_name": "SystemErrorWang/White-box-Cartoonization", "topics": [], "description": "Official tensorflow implementation for CVPR2020 paper \u201cLearning to Cartoonize Using White-box Cartoon Representations\u201d"}
{"name": "mikel-brostrom/yolov5_strongsort_osnet", "full_name": "mikel-brostrom/yolov8_tracking", "topics": ["strongsort", "bytetrack", "ocsort", "osnet", "deep-learning", "segmentation", "tensorrt", "tracking-by-detection", "yolo", "botsort"], "description": "Real-time multi-object tracking and segmentation using YOLOv8"}
{"name": "open-mmlab/openpcdet", "full_name": "open-mmlab/OpenPCDet", "topics": ["point-cloud", "3d-detection", "autonomous-driving", "pv-rcnn", "object-detection", "pytorch"], "description": "OpenPCDet Toolbox for LiDAR-based 3D Object Detection."}
{"name": "postech-cvlab/pytorch-studiogan", "full_name": "POSTECH-CVLab/PyTorch-StudioGAN", "topics": ["pytorch", "deep-learning", "generative-adversarial-network", "biggan", "stylegan2", "machine-learning", "stylegan2-ada", "stylegan3", "data-efficient-gan-training", "clean-fid"], "description": "StudioGAN is a Pytorch library providing implementations of representative Generative Adversarial Networks (GANs) for conditional/unconditional image generation."}
{"name": "pair-code/lit", "full_name": "PAIR-code/lit", "topics": ["machine-learning", "natural-language-processing", "visualization"], "description": "The Learning Interpretability Tool: Interactively analyze ML models to understand their behavior in an extensible and framework agnostic interface."}
{"name": "nidhaloff/igel", "full_name": "nidhaloff/igel", "topics": ["machine-learning", "machinelearning", "machine-learning-algorithms", "machine-learning-library", "artificial-intelligence", "neural-network", "neural-networks", "sklearn", "scikit-learn", "scikitlearn-machine-learning", "data-science", "data-analysis", "preprocessing", "automation", "automl", "automl-experiments", "hacktoberfest", "hacktoberfest2021"], "description": "a delightful machine learning tool that allows you to train, test, and use models without writing code"}
{"name": "open-mmlab/mmdetection3d", "full_name": "open-mmlab/mmdetection3d", "topics": ["pytorch", "3d-object-detection", "object-detection", "point-cloud"], "description": "OpenMMLab's next-generation platform for general 3D object detection."}
{"name": "minivision-ai/photo2cartoon", "full_name": "minivision-ai/photo2cartoon", "topics": ["cartoon", "deep-learning", "computer-vision", "gan", "avatar-generator"], "description": "\u4eba\u50cf\u5361\u901a\u5316\u63a2\u7d22\u9879\u76ee (photo-to-cartoon translation project)"}
{"name": "mikel-brostrom/yolov5_deepsort_osnet", "full_name": "mikel-brostrom/yolov8_tracking", "topics": ["strongsort", "bytetrack", "ocsort", "osnet", "deep-learning", "segmentation", "tensorrt", "tracking-by-detection", "yolo", "botsort"], "description": "Real-time multi-object tracking and segmentation using YOLOv8"}
{"name": "neuralchen/simswap", "full_name": "neuralchen/SimSwap", "topics": ["face", "deepfakes", "faceswap", "gan", "swap", "deepfacelab", "image-manipulation", "video", "pytorch"], "description": "An arbitrary face-swapping framework on images and videos with one single trained model!"}
{"name": "princeton-nlp/simcse", "full_name": "princeton-nlp/SimCSE", "topics": ["nlp", "sentence-embeddings"], "description": "EMNLP'2021: SimCSE: Simple Contrastive Learning of Sentence Embeddings https://arxiv.org/abs/2104.08821"}
{"name": "mikel-brostrom/yolov5_deepsort_pytorch", "full_name": "mikel-brostrom/yolov8_tracking", "topics": ["strongsort", "bytetrack", "ocsort", "osnet", "deep-learning", "segmentation", "tensorrt", "tracking-by-detection", "yolo", "botsort"], "description": "Real-time multi-object tracking and segmentation using YOLOv8"}
{"name": "zenml-io/zenml", "full_name": "zenml-io/zenml", "topics": ["mlops", "machine-learning", "data-science", "production-ready", "devops-tools", "zenml", "pipelines", "metadata-tracking", "deep-learning", "pytorch", "tensorflow", "ml", "ai", "automl", "hacktobe", "hacktoberfest", "workflow"], "description": "ZenML \ud83d\ude4f: Build portable, production-ready MLOps pipelines. https://zenml.io."}
{"name": "deepmind/dm-haiku", "full_name": "deepmind/dm-haiku", "topics": ["machine-learning", "neural-networks", "jax", "deep-learning", "deep-neural-networks"], "description": "JAX-based neural network library"}
{"name": "hunglc007/tensorflow-yolov4-tflite", "full_name": "hunglc007/tensorflow-yolov4-tflite", "topics": ["yolov4", "yolov3", "tflite", "object-detection", "tensorflow", "tf2", "tensorrt", "yolov3-tiny", "android"], "description": "YOLOv4, YOLOv4-tiny, YOLOv3, YOLOv3-tiny Implemented in Tensorflow 2.0, Android. Convert YOLO v4 .weights tensorflow, tensorrt and tflite"}
{"name": "google-research/electra", "full_name": "google-research/electra", "topics": ["nlp", "deep-learning", "tensorflow"], "description": "ELECTRA: Pre-training Text Encoders as Discriminators Rather Than Generators"}
{"name": "deepchecks/deepchecks", "full_name": "deepchecks/deepchecks", "topics": ["machine-learning", "ml", "model-validation", "data-validation", "mlops", "data-science", "python", "jupyter-notebook", "model-monitoring", "data-drift", "html-report", "deep-learning", "pytorch", "pandas-dataframe"], "description": "Deepchecks - Tests for Continuous Validation of ML Models & Data. Deepchecks is a Python package for comprehensively validating your machine learning models and data with minimal effort."}
{"name": "voxel51/fiftyone", "full_name": "voxel51/fiftyone", "topics": ["machine-learning", "artificial-intelligence", "deep-learning", "computer-vision", "developer-tools", "data-science", "python", "hacktoberfest"], "description": "The open-source tool for building high-quality datasets and computer vision models"}
{"name": "determined-ai/determined", "full_name": "determined-ai/determined", "topics": ["deep-learning", "machine-learning", "ml-platform", "ml-infrastructure", "hyperparameter-optimization", "hyperparameter-search", "distributed-training", "pytorch", "tensorflow", "hyperparameter-tuning", "kubernetes", "data-science", "mlops"], "description": "Determined: Deep Learning Training Platform"}
{"name": "wzhe06/sparrowrecsys", "full_name": "wzhe06/SparrowRecSys", "topics": ["recommender-system", "deep-learning", "machine-learning"], "description": "A Deep Learning Recommender System"}
{"name": "adap/flower", "full_name": "adap/flower", "topics": ["flower", "federated-learning", "federated-learning-framework", "pytorch-federated-learning", "tensorflow-federated-learning", "keras-federated-learning", "federated-analytics", "fleet-learning", "fleet-intelligence", "deep-learning", "machine-learning", "pytorch", "scikit-learn", "tensorflow"], "description": "Flower: A Friendly Federated Learning Framework"}
{"name": "fedml-ai/fedml", "full_name": "FedML-AI/FedML", "topics": ["federated-learning", "deep-learning", "distributed-training", "blockchain", "edge-ai", "machine-learning", "on-device-training", "inference-engine", "marketplace", "mlops", "privacy", "security"], "description": "FedML - The federated learning and analytics library enabling secure and collaborative machine learning on decentralized data anywhere at any scale. Supporting large-scale cross-silo federated learning, cross-device federated learning on smartphones/IoTs, and research simulation. MLOps and App Marketplace are also enabled (https://open.fedml.ai)."}
{"name": "tju-drl-lab/ai-optimizer", "full_name": "TJU-DRL-LAB/AI-Optimizer", "topics": ["reinforcement-learning", "transfer-learning", "deep-learning"], "description": "The next generation deep reinforcement learning tookit"}
{"name": "lightning-ai/lightning-flash", "full_name": "Lightning-AI/lightning-flash", "topics": ["pytorch-lightning", "deep-learning", "machine-learning", "pytorch", "tasks-flash", "classification", "tabular-data", "object-detection", "icevision", "open3d", "fiftyone", "torch-geometric", "pytorch-video"], "description": "Your PyTorch AI Factory - Flash enables you to easily configure and run complex AI recipes for over 15 tasks across 7 data domains"}
{"name": "open-mmlab/mmclassification", "full_name": "open-mmlab/mmclassification", "topics": ["image-classification", "resnet", "resnext", "mobilenet", "shufflenet", "senet", "regnet", "imagenet", "pytorch", "deep-learning", "swin-transformer"], "description": "OpenMMLab Image Classification Toolbox and Benchmark"}
{"name": "paddlepaddle/research", "full_name": "PaddlePaddle/Research", "topics": ["deep-learning", "computer-vision", "nlp", "knowledge-graph", "spatial-temporal", "data-mining"], "description": "novel deep learning research works with PaddlePaddle"}
{"name": "tensorflow/recommenders", "full_name": "tensorflow/recommenders", "topics": ["tensorflow-recommenders", "tensorflow", "recommender", "recommender-system"], "description": "TensorFlow Recommenders is a library for building recommender system models using TensorFlow."}
{"name": "mindee/doctr", "full_name": "mindee/doctr", "topics": ["ocr", "deep-learning", "document-recognition", "tensorflow2", "text-detection-recognition", "text-detection", "text-recognition", "optical-character-recognition", "pytorch"], "description": "docTR (Document Text Recognition) - a seamless, high-performing & accessible library for OCR-related tasks powered by Deep Learning."}
{"name": "pytorchlightning/lightning-flash", "full_name": "Lightning-AI/lightning-flash", "topics": ["pytorch-lightning", "deep-learning", "machine-learning", "pytorch", "tasks-flash", "classification", "tabular-data", "object-detection", "icevision", "open3d", "fiftyone", "torch-geometric", "pytorch-video"], "description": "Your PyTorch AI Factory - Flash enables you to easily configure and run complex AI recipes for over 15 tasks across 7 data domains"}
{"name": "nebuly-ai/nebullvm", "full_name": "nebuly-ai/nebullvm", "topics": ["deep-learning", "pytorch", "onnx", "machine-learning", "tensorflow", "tvm", "openvino", "tensorrt", "huggingface", "compiler", "computing", "inference", "neural-network", "pypi", "quantization", "edge-computing", "gpu", "optimization", "transformers"], "description": "Plug and play modules to optimize the performances of your AI systems \ud83d\ude80"}
{"name": "vita-group/transgan", "full_name": "VITA-Group/TransGAN", "topics": ["transformer", "transformer-encoder", "transformer-models", "gan", "pytorch"], "description": "[NeurIPS\u20182021] \"TransGAN: Two Pure Transformers Can Make One Strong GAN, and That Can Scale Up\", Yifan Jiang, Shiyu Chang, Zhangyang Wang"}
{"name": "deepcam-cn/yolov5-face", "full_name": "deepcam-cn/yolov5-face", "topics": ["yolov5", "tensorrt", "retinaface", "scrfd", "tinaface", "yolo", "pytorch", "arcface", "shufflenet", "blazeface", "yolov7"], "description": "YOLO5Face: Why Reinventing a Face Detector (https://arxiv.org/abs/2105.12931)       ECCV Workshops 2022)"}
{"name": "ziyaogeng/reclearn", "full_name": "ZiyaoGeng/RecLearn", "topics": ["recommender-system", "python3", "ctr-prediction", "criteo", "neural-network", "factorization-machine", "tensorflow2", "deepfm", "afm", "xdeepfm", "pnn", "widedeep", "nfm", "ncf", "dcn", "deepcross", "fm", "ffm", "matrix-factorization"], "description": "Recommender Learning with Tensorflow2.x"}
{"name": "fundamentalvision/bevformer", "full_name": "fundamentalvision/BEVFormer", "topics": ["deep-learning", "autonomous-driving", "computer-vision", "object-detection"], "description": "[ECCV 2022] This is the official implementation of BEVFormer, a camera-only framework for autonomous driving perception, e.g., 3D object detection and semantic map segmentation."}
{"name": "ziyaogeng/recommender-system-with-tf2.0", "full_name": "ZiyaoGeng/RecLearn", "topics": ["recommender-system", "python3", "ctr-prediction", "criteo", "neural-network", "factorization-machine", "tensorflow2", "deepfm", "afm", "xdeepfm", "pnn", "widedeep", "nfm", "ncf", "dcn", "deepcross", "fm", "ffm", "matrix-factorization"], "description": "Recommender Learning with Tensorflow2.x"}
{"name": "iscyy/yoloair", "full_name": "iscyy/yoloair", "topics": ["yolov5", "attention", "backbone", "pytorch", "transformer", "yolor", "yolov3", "yolov4", "yolov7", "yolox", "deep-learning", "yoloair", "scaledyolov4", "yolov6", "ppyolo", "ppyoloe", "tood", "anchor-based", "anchor-free", "yolo"], "description": "\ud83d\udd25\ud83d\udd25\ud83d\udd25YOLOv5, YOLOv6, YOLOv7, YOLOv8, PPYOLOE, YOLOX, YOLOR, YOLOv4, YOLOv3, Transformer, Attention, TOOD and Improved-YOLOv5-YOLOv7... Support to improve backbone, neck, head, loss, IoU, NMS and other modules\ud83d\ude80"}
{"name": "google-research/big_transfer", "full_name": "google-research/big_transfer", "topics": ["deep-learning", "convolutional-neural-networks", "imagenet", "tensorflow2", "jax", "pytorch", "transfer-learning"], "description": "Official repository for the \"Big Transfer (BiT): General Visual Representation Learning\" paper."}
{"name": "google-research/scenic", "full_name": "google-research/scenic", "topics": ["jax", "computer-vision", "deep-learning", "research", "attention", "transformers", "vision-transformer"], "description": "Scenic: A Jax Library for Computer Vision Research and Beyond"}
{"name": "alibaba/alicemind", "full_name": "alibaba/AliceMind", "topics": ["nlp", "bert", "natural-language-processing", "deep-learning"], "description": "ALIbaba's Collection of Encoder-decoders from MinD (Machine IntelligeNce of Damo) Lab"}
{"name": "neuralmagic/sparseml", "full_name": "neuralmagic/sparseml", "topics": ["pytorch", "keras", "model-sparsification", "sparsification-recipes", "tensorflow", "smaller-models", "deep-learning-library", "deep-learning-algorithms", "deep-learning-models", "automl", "pruning-algorithms", "sparsity", "sparsification", "recipe-driven-approaches", "pruning", "computer-vision-algorithms", "object-detection", "image-classification", "nlp", "onnx"], "description": "Libraries for applying sparsification recipes to neural networks with a few lines of code, enabling faster and smaller models"}
{"name": "datawhalechina/fun-rec", "full_name": "datawhalechina/fun-rec", "topics": ["recommender-system", "tensorflow", "tianchi-competition", "deep-learning", "algorithm-engineering", "interview-questions", "recommendation-algorithms", "machine-learning"], "description": "\u63a8\u8350\u7cfb\u7edf\u5165\u95e8\u6559\u7a0b\uff0c\u5728\u7ebf\u9605\u8bfb\u5730\u5740\uff1ahttps://datawhalechina.github.io/fun-rec/"}
{"name": "airaria/textbrewer", "full_name": "airaria/TextBrewer", "topics": ["bert", "pytorch", "nlp", "knowledge", "distillation"], "description": "A PyTorch-based knowledge distillation toolkit for natural language processing"}
{"name": "lucidrains/lambda-networks", "full_name": "lucidrains/lambda-networks", "topics": ["artificial-intelligence", "deep-learning", "computer-vision", "attention-mechanism", "attention"], "description": "Implementation of LambdaNetworks, a new approach to image recognition that reaches SOTA with less compute"}
{"name": "linkedin/detext", "full_name": "linkedin/detext", "topics": ["ranking", "deep-neural-networks", "detext-framework", "classification", "text-embeddings", "nlp"], "description": "DeText: A Deep Neural Text Understanding Framework for Ranking and Classification Tasks "}
{"name": "maiot-io/zenml", "full_name": "zenml-io/zenml", "topics": ["mlops", "machine-learning", "data-science", "production-ready", "devops-tools", "zenml", "pipelines", "metadata-tracking", "deep-learning", "pytorch", "tensorflow", "ml", "ai", "automl", "hacktobe", "hacktoberfest", "workflow"], "description": "ZenML \ud83d\ude4f: Build portable, production-ready MLOps pipelines. https://zenml.io."}
{"name": "mlech26l/ncps", "full_name": "mlech26l/ncps", "topics": ["ncp", "recurrent-neural-network", "nature-machine-intelligence", "tensorflow", "keras", "cfc"], "description": "PyTorch and TensorFlow implementation of NCP, LTC, and CfC wired neural models"}
{"name": "ymcui/chinese-electra", "full_name": "ymcui/Chinese-ELECTRA", "topics": ["nlp", "bert", "electra", "pre-trained-model", "chinese", "chinese-electra", "language-model", "pytorch", "tensorflow"], "description": "Pre-trained Chinese ELECTRA\uff08\u4e2d\u6587ELECTRA\u9884\u8bad\u7ec3\u6a21\u578b\uff09"}
{"name": "dorarad/gansformer", "full_name": "dorarad/gansformer", "topics": ["transformers", "gans", "generative-adversarial-networks", "image-generation", "scene-generation", "compositionality", "attention"], "description": "Generative Adversarial Transformers"}
{"name": "adapter-hub/adapter-transformers", "full_name": "adapter-hub/adapter-transformers", "topics": ["nlp", "natural-language-processing", "adapters", "transformers", "bert", "pytorch"], "description": "Huggingface Transformers + Adapters = \u2764\ufe0f"}
{"name": "isl-org/open3d-ml", "full_name": "isl-org/Open3D-ML", "topics": ["3d-perception", "datasets", "pretrained-models", "lidar", "rgbd", "tensorflow", "pytorch", "visualization", "semantic-segmentation", "object-detection", "3d-object-detection"], "description": "An extension of Open3D to address 3D Machine Learning tasks"}
{"name": "quic/aimet", "full_name": "quic/aimet", "topics": ["quantization", "deep-learning", "compression", "open-source", "machine-learning", "pruning", "auto-ml", "network-compression", "deep-neural-networks", "network-quantization", "opensource"], "description": "AIMET is a library that provides advanced quantization and compression techniques for trained neural network models."}
{"name": "theaiguyscode/yolov4-deepsort", "full_name": "theAIGuysCode/yolov4-deepsort", "topics": ["yolov4", "yolov4-deepsort", "deep-sort", "object-tracker", "tensorflow", "object-tracking", "object-detection"], "description": "Object tracking implemented with YOLOv4, DeepSort, and TensorFlow."}
{"name": "capitalone/dataprofiler", "full_name": "capitalone/DataProfiler", "topics": ["python", "privacy", "pii", "npi", "nlp", "data-science", "gdpr", "data-analysis", "data-labels", "avro", "dataprofiling", "sensitive-data", "security", "pandas", "csv", "tabular-data", "dataset", "network-data", "graph-data", "machine-learning"], "description": "What's in your data? Extract schema, statistics and entities from datasets"}
{"name": "alibaba/easynlp", "full_name": "alibaba/EasyNLP", "topics": ["transformers", "bert", "nlp", "pretrained-models", "deep-learning", "pytorch", "fewshot-learning", "knowledge-distillation", "knowledge-pretraining", "text-image-retrieval", "text-to-image-synthesis", "machine-learning", "text-classification", "transfer-learning"], "description": "EasyNLP: A Comprehensive and Easy-to-use NLP Toolkit"}
{"name": "google/uncertainty-baselines", "full_name": "google/uncertainty-baselines", "topics": ["bayesian-methods", "deep-learning", "machine-learning", "data-science", "tensorflow", "neural-networks", "statistics", "probabilistic-programming"], "description": "High-quality implementations of standard and SOTA methods on a variety of tasks."}
{"name": "rom1504/img2dataset", "full_name": "rom1504/img2dataset", "topics": ["deep-learning", "dataset", "big-data", "image", "multimodal", "image-dataset", "download-images"], "description": "Easily turn large sets of image urls to an image dataset. Can download, resize and package 100M urls in 20h on one machine."}
{"name": "ildaron/laser_control", "full_name": "Ildaron/Laser_control", "topics": ["galvanometer", "laser", "mosquito", "deep-learning", "kill-mosquito", "triangulation", "machine-vision", "opencv", "darknet-yolo", "raspberry-pi", "weedcontrol"], "description": "Open-Source Laser for control mosquito, weed, and pest"}
{"name": "deepwisdom/autodl", "full_name": "DeepWisdom/AutoDL", "topics": ["autodl", "automl", "nas", "feature-engineering", "model-selection", "full-automl", "artificial-intelligence", "lightgbm", "resnet", "pytorch", "tensorflow", "python", "autodl-challenge", "ai", "deeplearning", "data-science", "machine-learning", "big-data", "multi-label", "automated-machine-learning"], "description": "Automated Deep Learning without ANY human intervention. 1'st Solution for AutoDL challenge@NeurIPS. "}
{"name": "yangxue0827/rotationdetection", "full_name": "yangxue0827/RotationDetection", "topics": [], "description": "This is a tensorflow-based rotation detection benchmark, also called AlphaRotate."}
{"name": "bumble-tech/private-detector", "full_name": "bumble-tech/private-detector", "topics": ["bumble", "efficientnet", "image-classification", "tensorflow"], "description": "Bumble's Private Detector - a pretrained model for detecting lewd images"}
{"name": "as-ideas/transformertts", "full_name": "as-ideas/TransformerTTS", "topics": ["deep-learning", "axelspringerai", "text-to-speech", "python", "tensorflow", "tts"], "description": "\ud83e\udd16\ud83d\udcac Transformer TTS: Implementation of a non-autoregressive Transformer based neural network for text to speech."}
{"name": "patrick-kidger/equinox", "full_name": "patrick-kidger/equinox", "topics": ["deep-learning", "jax", "neural-networks"], "description": "Elegant easy-to-use neural networks in JAX. https://docs.kidger.site/equinox/"}
{"name": "tensorflow/similarity", "full_name": "tensorflow/similarity", "topics": ["similarity-learning", "metric-learning", "similarity-search", "nearest-neighbor-search", "nearest-neighbors", "deep-learning", "tensorflow", "contrastive-learning", "machine-learning", "unsupervised-learning", "clustering", "python", "simclr", "simclr2", "barlow-twins", "simsiam", "cosine-similarity", "knn"], "description": "TensorFlow Similarity is a python package focused on making similarity learning quick and easy."}
{"name": "google/nerfies", "full_name": "google/nerfies", "topics": ["neural-rendering", "nerf", "3d", "neural-network", "machine-learning"], "description": "This is the code for Deformable Neural Radiance Fields, a.k.a. Nerfies."}
{"name": "google-research/tapas", "full_name": "google-research/tapas", "topics": ["nlp-machine-learning", "question-answering", "table-parsing", "tensorflow"], "description": "End-to-end neural table-text understanding models."}
{"name": "julrog/nn_vis", "full_name": "julrog/nn_vis", "topics": ["neural-networks", "visualization", "rendering-engine", "opengl", "neural-network", "virtual-reality", "vr"], "description": "A project for processing neural networks and rendering to gain insights on the architecture and parameters of a model through a decluttered representation."}
{"name": "mit-han-lab/data-efficient-gans", "full_name": "mit-han-lab/data-efficient-gans", "topics": ["gans", "pytorch", "tensorflow", "data-efficient", "generative-adversarial-network", "image-generation", "neurips-2020"], "description": "[NeurIPS 2020] Differentiable Augmentation for Data-Efficient GAN Training"}
{"name": "jina-ai/docarray", "full_name": "docarray/docarray", "topics": ["docarray", "data-structures", "multimodal", "cross-modal", "neural-search", "unstructured-data", "deep-learning", "nested-data", "qdrant", "weaviate", "sqlite", "nearest-neighbor-search", "protobuf", "graphql", "elasticsearch", "dataclass", "multi-modal", "semantic-search", "vector-search"], "description": "\ud83e\uddec The data structure for multimodal data \u00b7 Neural Search \u00b7 Vector Search \u00b7 Document Store"}
{"name": "ayoolaolafenwa/pixellib", "full_name": "ayoolaolafenwa/PixelLib", "topics": ["computer-vision", "machine-learning", "artificial-intelligence", "image-segmentation", "semantic-segmentation", "instance-segmentation", "video-segmentation", "deeplab", "deeplearning", "maskr-cnn", "tensorflow", "deep-learning", "pointrend", "pytorch", "convolutional-neural-networks", "segmentation", "object-detection"], "description": "Visit PixelLib's official documentation  https://pixellib.readthedocs.io/en/latest/"}
{"name": "dengbocong/nlp-paper", "full_name": "DengBoCong/nlp-paper", "topics": ["dialogue", "speech", "nlp-machine-learning", "paper", "tensorflow2", "pytorch", "nlp", "bert"], "description": "\u81ea\u7136\u8bed\u8a00\u5904\u7406\u9886\u57df\u4e0b\u7684\u76f8\u5173\u8bba\u6587\uff08\u9644\u9605\u8bfb\u7b14\u8bb0\uff09\uff0c\u590d\u73b0\u6a21\u578b\u4ee5\u53ca\u6570\u636e\u5904\u7406\u7b49\uff08\u4ee3\u7801\u542bTensorFlow\u548cPyTorch\u4e24\u7248\u672c\uff09"}
{"name": "chonyy/ai-basketball-analysis", "full_name": "chonyy/AI-basketball-analysis", "topics": ["basketball", "machine-learning", "tensorflow", "api", "computer-vision", "object-detection", "artificial-intelligence", "openpose", "deep-learning", "pose-estimation", "yolo", "yolov4"], "description": ":basketball::robot::basketball: AI web app and API to analyze basketball shots and shooting pose."}
{"name": "baguasys/bagua", "full_name": "BaguaSys/bagua", "topics": ["distributed", "pytorch", "rust-lang", "deep-learning", "distributed-systems", "distributed-computing", "machine-learning", "bagua"], "description": "Bagua Speeds up PyTorch"}
{"name": "geekalexis/fastmot", "full_name": "GeekAlexis/FastMOT", "topics": ["jetson", "multi-object-tracking", "tensorrt", "real-time", "reid", "object-detection", "deep-sort", "computer-vision", "yolov4", "ssd", "yolov3", "people-counter", "scaledyolov4", "edge-computing", "lucas-kanade", "video-analysis", "deep-learning"], "description": "High-performance multiple object tracking based on YOLO, Deep SORT, and KLT \ud83d\ude80"}
{"name": "salesforce/lavis", "full_name": "salesforce/LAVIS", "topics": ["deep-learning", "deep-learning-library", "image-captioning", "salesforce", "vision-and-language", "vision-framework", "vision-language-pretraining", "vision-language-transformer", "visual-question-anwsering", "multimodal-datasets", "multimodal-deep-learning"], "description": "LAVIS - A One-stop Library for Language-Vision Intelligence"}
{"name": "enpeizhao/cvprojects", "full_name": "enpeizhao/CVprojects", "topics": ["computer-vision", "machine-learning", "deep-learning", "python"], "description": "computer vision projects |  \u8ba1\u7b97\u673a\u89c6\u89c9\u76f8\u5173\u597d\u73a9\u7684AI\u9879\u76ee"}
{"name": "nvidia-merlin/nvtabular", "full_name": "NVIDIA-Merlin/NVTabular", "topics": ["deep-learning", "feature-engineering", "feature-selection", "gpu", "machine-learning", "nvidia", "preprocessing", "recommendation-system", "recommender-system"], "description": "NVTabular is a feature engineering and preprocessing library for tabular data designed to quickly and easily manipulate terabyte scale datasets used to train deep learning based recommender systems."}
{"name": "n00mkrad/flowframes", "full_name": "n00mkrad/flowframes", "topics": ["video-interpolation", "pytorch", "ncnn", "dain", "rife", "gui"], "description": "Flowframes Windows GUI for video interpolation using DAIN (NCNN) or RIFE (CUDA/NCNN)"}
{"name": "beir-cellar/beir", "full_name": "beir-cellar/beir", "topics": ["nlp", "information-retrieval", "bert", "benchmark", "sentence-transformers", "question-generation", "retrieval", "passage-retrieval", "elasticsearch", "dpr", "sbert", "retrieval-models", "dataset", "ance", "colbert", "zero-shot-retrieval", "use-qa", "deep-learning", "pytorch"], "description": "A Heterogeneous Benchmark for Information Retrieval. Easy to use, evaluate your models across 15+ diverse IR datasets."}
{"name": "sjtuytc/largescalenerfpytorch", "full_name": "sjtuytc/LargeScaleNeRFPytorch", "topics": ["nerf", "nerf-w", "pytorch-implementation", "block-nerf", "city-nerf", "custum-nerf", "mega-nerf", "view-synthesis", "weekly-nerf", "weekly", "classified", "pytorch-implementations", "pytorch", "pytorch-lightning", "chinese-translation", "deep-learning"], "description": "1. Non-official implementation of Block-NeRF and Mega-NeRF in Pytorch. 2. Train your large-scale NeRF in the wild. 3. Weekly classified NeRF literature."}
{"name": "tensorflow/gnn", "full_name": "tensorflow/gnn", "topics": ["tensorflow", "gnn", "deep-learning", "machine-learning"], "description": "TensorFlow GNN is a library to build Graph Neural Networks on the TensorFlow platform."}
{"name": "alibaba/federatedscope", "full_name": "alibaba/FederatedScope", "topics": ["federated-learning", "machine-learning", "pytorch"], "description": "An easy-to-use federated learning platform"}
{"name": "ydataai/ydata-synthetic", "full_name": "ydataai/ydata-synthetic", "topics": ["gan-architectures", "gan", "deep-learning", "synthetic-data", "tensorflow2", "machine-learning", "training-data", "python3", "datagenerator", "datageneration", "timeseries", "generative-adversarial-network", "gans", "pytorch", "time-series"], "description": "Synthetic structured data generators"}
{"name": "calciferzh/minimal-hand", "full_name": "CalciferZh/minimal-hand", "topics": ["computer-vision", "deep-learning", "3d-hand-pose-estimation", "hand-tracking", "hand-motion-capture"], "description": "A minimal solution to hand motion capture from a single color camera at over 100fps. Easy to use, plug to run."}
{"name": "chandrikadeb7/face-mask-detection", "full_name": "chandrikadeb7/Face-Mask-Detection", "topics": ["python", "python-3", "python3", "keras", "keras-tensorflow", "deep-learning", "computer-vision", "face-mask-detection", "covid-19", "ssd-mobilenet", "mobilenetv2", "bing-search", "mask-detection", "facemaskdetect", "facemask-detection", "mask-detection-system", "face-mask", "machine-learning", "caffe", "hacktoberfest"], "description": "Face Mask Detection system based on computer vision and deep learning using OpenCV and Tensorflow/Keras"}
{"name": "dvlab-research/largescalenerfpytorch", "full_name": "sjtuytc/LargeScaleNeRFPytorch", "topics": ["nerf", "nerf-w", "pytorch-implementation", "block-nerf", "city-nerf", "custum-nerf", "mega-nerf", "view-synthesis", "weekly-nerf", "weekly", "classified", "pytorch-implementations", "pytorch", "pytorch-lightning", "chinese-translation", "deep-learning"], "description": "1. Non-official implementation of Block-NeRF and Mega-NeRF in Pytorch. 2. Train your large-scale NeRF in the wild. 3. Weekly classified NeRF literature."}
{"name": "csslab/maia-chess", "full_name": "CSSLab/maia-chess", "topics": ["chess", "chess-engine", "deep-learning", "machine-learning", "computational-social-science"], "description": "Maia is a human-like neural network chess engine trained on millions of human games."}
{"name": "interdigitalinc/compressai", "full_name": "InterDigitalInc/CompressAI", "topics": ["compression", "deep-learning", "python", "pytorch", "machine-learning", "deep-neural-networks", "neural-network"], "description": "A PyTorch library and evaluation platform for end-to-end compression research"}
{"name": "huggingface/optimum", "full_name": "huggingface/optimum", "topics": ["onnx", "pytorch", "inference", "training", "intel", "graphcore", "onnxruntime", "transformers", "quantization", "habana", "optimization"], "description": "\ud83c\udfce\ufe0f Accelerate training and inference of \ud83e\udd17 Transformers with easy to use hardware optimization tools"}
{"name": "xiaomi/minlp", "full_name": "XiaoMi/MiNLP", "topics": ["nlp", "tensorflow", "python3"], "description": "XiaoMi Natural Language Processing Toolkits "}
{"name": "danijar/dreamerv2", "full_name": "danijar/dreamerv2", "topics": ["reinforcement-learning", "world-models", "artificial-intelligence", "robotics", "deep-learning", "video-prediction", "atari", "research", "machine-learning"], "description": "Mastering Atari with Discrete World Models"}
{"name": "nvidia-merlin/transformers4rec", "full_name": "NVIDIA-Merlin/Transformers4Rec", "topics": ["transformer", "pytorch", "tabular-data", "huggingface", "bert", "gtp", "language-model", "xlnet", "nlp", "seq2seq", "recsys", "recommender-system", "session-based-recommendation"], "description": "Transformers4Rec is a flexible and efficient library for sequential and session-based recommendation and works with PyTorch."}
{"name": "visual-layer/fastdup", "full_name": "visual-layer/fastdup", "topics": ["data-curation", "dataset", "deep-learning", "image-duplicate-detection", "machine-learning", "novelty-detection", "object-detection", "outlier-detection", "python", "visual-search", "data-augmentation", "image-classification", "kaggle", "similarity", "image", "image-classfication", "image-processing", "visualization-tools"], "description": "FastDup is a tool for gaining insights from a large image collection. It can find anomalies, duplicate and near duplicate images, clusters of similaritity, learn the normal behavior and temporal interactions between images. It can be used for smart subsampling of a higher quality dataset, outlier removal, novelty detection of new information to be sent for tagging. FastDup scales to millions of images running on CPU only."}
{"name": "google/hypernerf", "full_name": "google/hypernerf", "topics": ["nerf", "neural-network", "neural-rendering", "3d", "novel-view-synthesis", "machine-learning"], "description": "Code for \"HyperNeRF: A Higher-Dimensional Representation for Topologically Varying Neural Radiance Fields\"."}
{"name": "nlp-uoregon/trankit", "full_name": "nlp-uoregon/trankit", "topics": ["nlp", "natural-language-processing", "pytorch", "language-model", "xlm-roberta", "machine-learning", "deeplearning", "artificial-intelligence", "universal-dependencies", "multilingual", "adapters", "sentence-segmentation", "tokenization", "part-of-speech-tagging", "morphological-tagging", "dependency-parsing", "lemmatization"], "description": "Trankit is a Light-Weight Transformer-based Python Toolkit for Multilingual Natural Language Processing"}
{"name": "gaparmar/clean-fid", "full_name": "GaParmar/clean-fid", "topics": ["computer-vision", "deep-learning", "computer-graphics", "pytorch", "generative-adversarial-network", "gan", "image-manipulation", "image-generation", "fid-score", "fid-calculation", "fid", "frechet-inception-distance", "frechet-distance"], "description": "PyTorch - FID calculation with proper image resizing and quantization steps [CVPR 2022]"}
{"name": "intel/neural-compressor", "full_name": "intel/neural-compressor", "topics": ["low-precision", "pruning", "sparsity", "auto-tuning", "knowledge-distillation", "quantization", "quantization-aware-training", "post-training-quantization", "deep-learning"], "description": "Intel\u00ae Neural Compressor (formerly known as Intel\u00ae Low Precision Optimization Tool), targeting to provide unified APIs for network compression technologies, such as low precision quantization, sparsity, pruning, knowledge distillation, across different deep learning frameworks to pursue optimal inference performance."}
{"name": "google-research/maxim", "full_name": "google-research/maxim", "topics": ["image", "architecture", "image-processing", "computer-vision", "transformer", "mlp", "enhancement", "image-restoration", "restoration", "denoising", "deblurring", "dehazing", "deraining", "retouching", "low-level-vision", "image-enhancement"], "description": "[CVPR 2022 Oral] Official repository for \"MAXIM: Multi-Axis MLP for Image Processing\". SOTA for denoising, deblurring, deraining, dehazing, and enhancement."}
{"name": "google/jaxopt", "full_name": "google/jaxopt", "topics": ["jax", "optimization", "deep-learning", "differentiable-programming", "bi-level"], "description": "Hardware accelerated, batchable and differentiable optimizers in JAX."}
{"name": "twentybn/sense", "full_name": "quic/sense", "topics": ["pytorch", "neural-networks", "deep-learning", "computer-vision", "activity-recognition", "gesture-recognition", "fitness-app", "calorie-estimation", "video"], "description": "Enhance your application with the ability to see and interact with humans using any RGB camera."}
{"name": "wtjiang98/psgan", "full_name": "wtjiang98/PSGAN", "topics": ["psgan", "pytorch", "makeup-transfer", "makeup", "generative-adversarial-network", "gan"], "description": "PyTorch code for \"PSGAN: Pose and Expression Robust Spatial-Aware GAN for Customizable Makeup Transfer\" (CVPR 2020 Oral)"}
{"name": "kwotsin/mimicry", "full_name": "kwotsin/mimicry", "topics": ["generative-adversarial-networks", "gans", "reproducibility", "pytorch", "generative-models", "machine-learning", "gan", "sngan", "sngan-projection", "wgan-gp", "ssgan", "dcgan", "infomax-gan", "cgan", "cvpr", "python", "cvpr2020", "cvpr20"], "description": "[CVPR 2020 Workshop] A PyTorch GAN library that reproduces research results for popular GANs."}
{"name": "huggingface/huggingface_hub", "full_name": "huggingface/huggingface_hub", "topics": ["model-hub", "machine-learning", "models", "natural-language-processing", "deep-learning", "pytorch", "pretrained-models", "hacktoberfest"], "description": "All the open source things related to the Hugging Face Hub."}
{"name": "jayleicn/clipbert", "full_name": "jayleicn/ClipBERT", "topics": ["pytorch", "video-retrieval", "video-question-answering", "vqa", "vision-and-language", "cvpr2021"], "description": "[CVPR 2021 Best Student Paper Honorable Mention, Oral] Official PyTorch code for ClipBERT, an efficient framework for end-to-end learning on image-text and video-text tasks. "}
{"name": "tencentmusic/cube-studio", "full_name": "tencentmusic/cube-studio", "topics": ["kubernetes", "inference", "mlops", "workflow", "ai", "pytorch", "spark", "argo", "kubeflow", "automl"], "description": "\u4e91\u539f\u751f\u4e00\u7ad9\u5f0f\u673a\u5668\u5b66\u4e60\u5e73\u53f0\uff0c\u591a\u79df\u6237\uff0c\u6570\u636e\u8d44\u4ea7\uff0cnotebook\u5728\u7ebf\u5f00\u53d1\uff0c\u62d6\u62c9\u62fd\u4efb\u52a1\u6d41\u7f16\u6392\uff0c\u591a\u673a\u591a\u5361\u5206\u5e03\u5f0f\u8bad\u7ec3\uff0c\u8d85\u53c2\u641c\u7d22\uff0c\u63a8\u7406\u670d\u52a1\uff0c\u591a\u96c6\u7fa4\u8c03\u5ea6\uff0c\u591a\u9879\u76ee\u7ec4\u8d44\u6e90\u7ec4\uff0c\u8fb9\u7f18\u8ba1\u7b97\uff0c\u5927\u6a21\u578b\u5b9e\u65f6\u8bad\u7ec3, ai\u5e94\u7528\u5546\u5e97"}
{"name": "idea-ccnl/fengshenbang-lm", "full_name": "IDEA-CCNL/Fengshenbang-LM", "topics": ["chinese-nlp", "pretrained-models", "pytorch", "distributed-training", "transformers", "aigc", "multimodal"], "description": "Fengshenbang-LM(\u5c01\u795e\u699c\u5927\u6a21\u578b)\u662fIDEA\u7814\u7a76\u9662\u8ba4\u77e5\u8ba1\u7b97\u4e0e\u81ea\u7136\u8bed\u8a00\u7814\u7a76\u4e2d\u5fc3\u4e3b\u5bfc\u7684\u5927\u6a21\u578b\u5f00\u6e90\u4f53\u7cfb\uff0c\u6210\u4e3a\u4e2d\u6587AIGC\u548c\u8ba4\u77e5\u667a\u80fd\u7684\u57fa\u7840\u8bbe\u65bd\u3002"}
{"name": "serengil/retinaface", "full_name": "serengil/retinaface", "topics": ["face-detection", "retinaface", "retinaface-detector", "python", "tensorflow", "face-recognition", "face-alignment", "insightface", "face-detector"], "description": "RetinaFace: Deep Face Detection Library for Python"}
{"name": "lucidrains/bottleneck-transformer-pytorch", "full_name": "lucidrains/bottleneck-transformer-pytorch", "topics": ["artificial-intelligence", "deep-learning", "transformers", "attention-mechanism", "image-classification", "vision"], "description": "Implementation of Bottleneck Transformer in Pytorch"}
{"name": "superbrucejia/eeg-dl", "full_name": "SuperBruceJia/EEG-DL", "topics": ["deep-learning", "eeg-classification", "eeg-signals-processing", "tensorflow", "motor-imagery-classification", "eeg-data", "cnn", "rnn", "gcn", "one-shot-learning", "residual-learning", "densenet", "resnet", "graph-convolutional-neural-networks", "lstm", "gru", "attention-mechanism", "fully-convolutional-networks", "transformer", "transformers"], "description": "A Deep Learning library for EEG Tasks (Signals) Classification, based on TensorFlow."}
{"name": "toshas/torch-fidelity", "full_name": "toshas/torch-fidelity", "topics": ["pytorch", "metrics", "gan", "generative-model", "evaluation", "inception-score", "frechet-inception-distance", "kernel-inception-distance", "perceptual-path-length", "precision", "reproducibility", "reproducible-research"], "description": "High-fidelity performance metrics for generative models in PyTorch"}
{"name": "tensorflow/decision-forests", "full_name": "tensorflow/decision-forests", "topics": ["python", "machine-learning", "random-forest", "tensorflow", "ml", "decision-trees", "gradient-boosting", "interpretability", "decision-forest", "keras"], "description": "A collection of state-of-the-art algorithms for the training, serving and interpretation of Decision Forest models in Keras."}
{"name": "monologg/koelectra", "full_name": "monologg/KoELECTRA", "topics": ["electra", "korean-nlp", "pytorch", "transformers", "tensorflow2", "tensorflow", "nlp", "language-model"], "description": "Pretrained ELECTRA Model for Korean"}
{"name": "openvinotoolkit/nncf", "full_name": "openvinotoolkit/nncf", "topics": ["quantization", "pruning", "sparsity", "quantization-aware-training", "mixed-precision-training", "compression", "semantic-segmentation", "object-detection", "classification", "nlp", "bert", "mmdetection", "transformers", "hawq", "pytorch", "tensorflow", "onnx", "openvino", "deep-learning"], "description": "Neural Network Compression Framework for enhanced OpenVINO\u2122 inference"}
{"name": "thunlp/openattack", "full_name": "thunlp/OpenAttack", "topics": ["adversarial-attacks", "nlp", "adversarial-example", "natural-language-processing", "pytorch"], "description": "An Open-Source Package for Textual Adversarial Attack."}
{"name": "relevanceai/vectorhub", "full_name": "RelevanceAI/vectorhub", "topics": ["python", "vector", "embeddings", "encodings", "vector-similarity", "transformers", "tfhub", "machine-learning", "deeplearning", "artificial-intelligence", "neural-network", "deep-learning", "tensorflow", "pytorch", "word2vec", "image2vec", "audio-processing", "video-processing"], "description": "Vector Hub - Library for easy discovery, and consumption of State-of-the-art models to turn data into vectors. (text2vec, image2vec, video2vec, graph2vec, bert, inception, etc)"}
{"name": "aws/deep-learning-containers", "full_name": "aws/deep-learning-containers", "topics": ["aws", "sagemaker", "docker", "tensorflow", "tensorflow2", "mxnet", "pytorch"], "description": "AWS Deep Learning Containers (DLCs) are a set of Docker images for training and serving models in TensorFlow, TensorFlow 2, PyTorch, and MXNet."}
{"name": "zuruoke/watermark-removal", "full_name": "zuruoke/watermark-removal", "topics": ["tensorflow", "deep-learning", "machine-learning", "python", "watermark-image"], "description": "a machine learning image inpainting task that instinctively removes watermarks from image indistinguishable from the ground truth image "}
{"name": "bobo-y/flexible-yolov5", "full_name": "Bobo-y/flexible-yolov5", "topics": ["yolov5", "resnet", "moblienet", "backbone", "neck", "se", "cbam", "efficientnet", "pytorch", "shufflenet", "hrnet", "dcnv2", "tensorrt", "object-detection", "swin-transformer", "gcn", "yolov3"], "description": "More readable and flexible yolov5 with more backbone(gcn, resnet, shufflenet, moblienet, efficientnet, hrnet, swin-transformer, etc) and (cbam\uff0cdcn and so on), and tensorrt"}
{"name": "positive666/yolov5_research", "full_name": "positive666/yolo_research", "topics": ["yolov5", "deepstream", "pytorch", "object-detection", "attention-mechanism", "swintransformer", "custom-networ", "yolov7"], "description": "based on yolov5-high-level project (detect\\pose\\classify\\segment\\):include yolov7 core ,improvement research based on yolov5,SwintransformV2 and Attention Series. training skills, business customization, engineering deployment C"}
{"name": "bubbliiiing/yolov4-keras", "full_name": "bubbliiiing/yolov4-keras", "topics": [], "description": "\u8fd9\u662f\u4e00\u4e2aYoloV4-keras\u7684\u6e90\u7801\uff0c\u53ef\u4ee5\u7528\u4e8e\u8bad\u7ec3\u81ea\u5df1\u7684\u6a21\u578b\u3002"}
{"name": "davidbau/rewriting", "full_name": "davidbau/rewriting", "topics": ["vision", "machine-learning", "graphics", "hci", "gans", "deep-learning", "research"], "description": "Rewriting a Deep Generative Model, ECCV 2020 (oral).  Interactive tool to directly edit the rules of a GAN to synthesize scenes with objects added, removed, or altered.  Change StyleGANv2 to make extravagant eyebrows, or horses wearing hats."}
{"name": "nvidia/nvtabular", "full_name": "NVIDIA-Merlin/NVTabular", "topics": ["deep-learning", "feature-engineering", "feature-selection", "gpu", "machine-learning", "nvidia", "preprocessing", "recommendation-system", "recommender-system"], "description": "NVTabular is a feature engineering and preprocessing library for tabular data designed to quickly and easily manipulate terabyte scale datasets used to train deep learning based recommender systems."}
{"name": "raminmh/cfc", "full_name": "raminmh/CfC", "topics": ["deep-learning", "neural-ode", "pytorch", "recurrent-neural-networks", "sequence-models", "tensorflow"], "description": "Closed-form Continuous-time Neural Networks"}
{"name": "datacanvasio/deeptables", "full_name": "DataCanvasIO/DeepTables", "topics": ["tabular-data", "deep-learning", "deepfm", "fm", "afm", "dcn-model", "ctr-prediction", "pnn", "xdeepfm", "wide-and-deep", "autoint", "fgcnn", "fibinet", "factorization-machines", "structured-data"], "description": "DeepTables:  Deep-learning Toolkit for Tabular data"}
{"name": "alpa-projects/alpa", "full_name": "alpa-projects/alpa", "topics": ["deep-learning", "machine-learning", "compiler", "distributed-training", "high-performance-computing", "alpa", "jax", "distributed-computing", "llm", "auto-parallelization"], "description": "Training and serving large-scale neural networks"}
{"name": "princeton-nlp/densephrases", "full_name": "princeton-nlp/DensePhrases", "topics": ["nlp", "open-domain-qa", "slot-filling", "knowledge-base", "information-retrieval", "passage-retrieval"], "description": "ACL'2021: Learning Dense Representations of Phrases at Scale; EMNLP'2021: Phrase Retrieval Learns Passage Retrieval, Too https://arxiv.org/abs/2012.12624"}
{"name": "google-research/long-range-arena", "full_name": "google-research/long-range-arena", "topics": ["transformers", "nlp", "deep-learning", "attention", "jax", "flax"], "description": "Long Range Arena for Benchmarking Efficient Transformers"}
{"name": "mims-harvard/tdc", "full_name": "mims-harvard/TDC", "topics": ["machine-learning", "therapeutics", "drug-discovery", "datasets", "biology", "chemistry", "biomedicine", "bioinformatics", "cheminformatics", "deep-learning", "benchmarks", "artificial-intelligence", "precision-medicine"], "description": "Therapeutics Data Commons: Artificial Intelligence Foundation for Therapeutic Science"}
{"name": "deepregnet/deepreg", "full_name": "DeepRegNet/DeepReg", "topics": ["image-registration", "medical-image-registration", "image-fusion", "deep-learning", "deep-neural-networks", "neural-network", "convolutional-neural-networks", "tensorflow2", "deepreg"], "description": "Medical image registration using deep learning"}
{"name": "ika-rwth-aachen/cam2bev", "full_name": "ika-rwth-aachen/Cam2BEV", "topics": ["computer-vision", "machine-learning", "deep-learning", "autonomous-vehicles", "ipm", "segmentation", "sim2real", "simulation", "birds-eye-view"], "description": "TensorFlow Implementation for Computing a Semantically Segmented Bird's Eye View (BEV) Image Given the Images of Multiple Vehicle-Mounted Cameras."}
{"name": "ukplab/beir", "full_name": "beir-cellar/beir", "topics": ["nlp", "information-retrieval", "bert", "benchmark", "sentence-transformers", "question-generation", "retrieval", "passage-retrieval", "elasticsearch", "dpr", "sbert", "retrieval-models", "dataset", "ance", "colbert", "zero-shot-retrieval", "use-qa", "deep-learning", "pytorch"], "description": "A Heterogeneous Benchmark for Information Retrieval. Easy to use, evaluate your models across 15+ diverse IR datasets."}
{"name": "brummi/monorec", "full_name": "Brummi/MonoRec", "topics": ["depth-estimation", "deep-learning", "unsupervised-learning", "cvpr2021"], "description": "Official implementation of the paper: MonoRec: Semi-Supervised Dense Reconstruction in Dynamic Environments from a Single Moving Camera (CVPR 2021)"}
{"name": "yatingmusic/remi", "full_name": "YatingMusic/remi", "topics": ["music-generation", "transformer", "tensorflow"], "description": "\"Pop Music Transformer: Beat-based Modeling and Generation of Expressive Pop Piano Compositions\", ACM Multimedia 2020"}
{"name": "intel-isl/open3d-ml", "full_name": "isl-org/Open3D-ML", "topics": ["3d-perception", "datasets", "pretrained-models", "lidar", "rgbd", "tensorflow", "pytorch", "visualization", "semantic-segmentation", "object-detection", "3d-object-detection"], "description": "An extension of Open3D to address 3D Machine Learning tasks"}
{"name": "google-research/bigbird", "full_name": "google-research/bigbird", "topics": ["transformer", "bert", "nlp", "longer-sequences", "deep-learning"], "description": "Transformers for Longer Sequences"}
{"name": "poets-ai/elegy", "full_name": "poets-ai/elegy", "topics": ["deep-learning", "jax"], "description": "A High Level API for Deep Learning in JAX"}
{"name": "scalaconsultants/aspect-based-sentiment-analysis", "full_name": "ScalaConsultants/Aspect-Based-Sentiment-Analysis", "topics": ["aspect-based-sentiment-analysis", "tensorflow", "sentiment-analysis", "machine-learning", "interpretability", "distill", "transformers", "transformer-models", "bert-embeddings", "deep-learning", "explainable-ml", "explainable-ai"], "description": "\ud83d\udcad Aspect-Based-Sentiment-Analysis: Transformer & Explainable ML (TensorFlow)"}
{"name": "theaiguyscode/yolov4-custom-functions", "full_name": "theAIGuysCode/yolov4-custom-functions", "topics": ["yolov4", "yolov3", "object-detection", "tensorflow", "tflite", "custom-yolov4", "yolov4-tiny", "tf2", "tensorrt"], "description": "A Wide Range of Custom Functions for YOLOv4, YOLOv4-tiny, YOLOv3, and YOLOv3-tiny Implemented in TensorFlow, TFLite, and TensorRT."}
{"name": "tensorspeech/tensorflowasr", "full_name": "TensorSpeech/TensorFlowASR", "topics": ["automatic-speech-recognition", "deepspeech2", "speech-recognition", "speech-to-text", "tensorflow2", "rnn-transducer", "conformer", "tflite", "tflite-model", "tflite-convertion", "ctc", "tensorflow", "subword-speech-recognition", "end2end", "contextnet", "jasper", "streaming-transducer"], "description": ":zap: TensorFlowASR: Almost State-of-the-art Automatic Speech Recognition in Tensorflow 2. Supported languages that can use characters or subwords"}
{"name": "yingkaisha/keras-unet-collection", "full_name": "yingkaisha/keras-unet-collection", "topics": ["unet", "attention-unet", "unet-plusplus", "r2u-net", "resunet", "u2net", "unet-threeplus", "pypi", "tensorflow", "vnet", "backbone", "imagenet", "transunet", "swinunet"], "description": "The Tensorflow, Keras implementation of U-net, V-net, U-net++, UNET 3+, Attention U-net, R2U-net, ResUnet-a, U^2-Net, TransUNET, and Swin-UNET with optional ImageNet-trained backbones."}
{"name": "raminmh/liquid_time_constant_networks", "full_name": "raminmh/liquid_time_constant_networks", "topics": ["deep-learning", "liquid-neural-networks", "recurrent-neural-networks", "sequence-modeling", "state-space-models", "time-series"], "description": "Code Repository for Liquid Time-Constant Networks (LTCs)"}
{"name": "tusen-ai/sst", "full_name": "tusen-ai/SST", "topics": ["pytorch", "3d-object-detection", "autonomous-driving"], "description": "Codes for \u201cFully Sparse 3D Object Detection\u201d & \u201cEmbracing Single Stride 3D Object Detector with Sparse Transformer\u201d"}
{"name": "jina-ai/examples", "full_name": "jina-ai/examples", "topics": ["jina", "examples", "tutorials", "onboarding", "neural-search", "python", "deep-learning", "semantic-search", "nlp"], "description": "Jina examples and demos to help you get started"}
{"name": "menyifang/adgan", "full_name": "menyifang/ADGAN", "topics": ["pose-transfer", "generative-adversarial-network", "gan", "pytorch", "virtual-try-on", "image-synthesis"], "description": "The Implementation of paper \"Controllable Person Image Synthesis with Attribute-Decomposed GAN\" CVPR 2020 (Oral); Pose and Appearance Attributes Transfer;"}
{"name": "alibaba/tinyneuralnetwork", "full_name": "alibaba/TinyNeuralNetwork", "topics": ["pytorch", "deep-learning", "model-compression", "pruning", "model-converter", "quantization-aware-training", "deep-neural-networks", "post-training-quantization"], "description": "TinyNeuralNetwork is an efficient and easy-to-use deep learning model compression framework."}
{"name": "prbonn/lidar-mos", "full_name": "PRBonn/LiDAR-MOS", "topics": ["lidar", "point-cloud", "segmentation", "slam", "mapping", "deep-learning", "deep-neural-networks", "moving-object-segmentation", "lidar-slam", "dynamic-slam", "motion-detection"], "description": "(LMNet) Moving Object Segmentation in 3D LiDAR Data: A Learning-based Approach Exploiting Sequential Data (RAL/IROS 2021)"}
{"name": "minqi824/adbench", "full_name": "Minqi824/ADBench", "topics": ["anomaly-detection", "benchmark", "data-mining", "deep-learning", "machine-learning", "outlier-detection", "semi-supervised-learning", "supervised-learning", "unsupervised-learning", "data-sicence", "ensemble-learning", "neural-networks", "python"], "description": "Official Implement of \"ADBench: Anomaly Detection Benchmark\"."}
{"name": "koaning/whatlies", "full_name": "koaning/whatlies", "topics": ["nlp", "embeddings", "visualisations"], "description": "Toolkit to help understand \"what lies\" in word embeddings. Also benchmarking! "}
{"name": "nvlabs/fan", "full_name": "NVlabs/FAN", "topics": ["backbone", "deep-learning", "image-classification", "object-detection", "vision-transformers", "visual-recognition", "semantic-segmentation", "corruption", "imagenet", "out-of-distribution", "pre-train", "cityscapes", "coco", "information-bottleneck", "self-attention", "visual-grouping"], "description": "Official PyTorch implementation of Fully Attentional Networks"}
{"name": "edisonleeeee/graphgallery", "full_name": "EdisonLeeeee/GraphGallery", "topics": ["graph-neural-networks", "models", "graph", "geometric-deep-learning", "pytorch", "graphgallery", "adversarial-machine-learning", "dgl", "pyg"], "description": "GraphGallery is a gallery for benchmarking Graph Neural Networks."}
{"name": "modelscope/modelscope", "full_name": "modelscope/modelscope", "topics": ["nlp", "cv", "speech", "multi-modal", "science", "deep-learning", "machine-learning", "python"], "description": "ModelScope: bring the notion of Model-as-a-Service to life."}
{"name": "xue-pai/fuxictr", "full_name": "xue-pai/FuxiCTR", "topics": ["ctr-prediction", "recommender-systems", "ctr", "cvr", "pytorch"], "description": "A configurable, tunable, and reproducible library for CTR prediction https://fuxictr.github.io/tutorials"}
{"name": "visualdatabase/fastdup", "full_name": "visual-layer/fastdup", "topics": ["data-curation", "dataset", "deep-learning", "image-duplicate-detection", "machine-learning", "novelty-detection", "object-detection", "outlier-detection", "python", "visual-search", "data-augmentation", "image-classification", "kaggle", "similarity", "image", "image-classfication", "image-processing", "visualization-tools"], "description": "FastDup is a tool for gaining insights from a large image collection. It can find anomalies, duplicate and near duplicate images, clusters of similaritity, learn the normal behavior and temporal interactions between images. It can be used for smart subsampling of a higher quality dataset, outlier removal, novelty detection of new information to be sent for tagging. FastDup scales to millions of images running on CPU only."}
{"name": "opendilab/interfuser", "full_name": "opendilab/InterFuser", "topics": ["autonomous-driving", "bird-view-image", "transformer"], "description": "[CoRL 2022] InterFuser: Safety-Enhanced Autonomous Driving Using Interpretable Sensor Fusion Transformer"}
{"name": "vector-ai/vectorhub", "full_name": "RelevanceAI/vectorhub", "topics": ["python", "vector", "embeddings", "encodings", "vector-similarity", "transformers", "tfhub", "machine-learning", "deeplearning", "artificial-intelligence", "neural-network", "deep-learning", "tensorflow", "pytorch", "word2vec", "image2vec", "audio-processing", "video-processing"], "description": "Vector Hub - Library for easy discovery, and consumption of State-of-the-art models to turn data into vectors. (text2vec, image2vec, video2vec, graph2vec, bert, inception, etc)"}
{"name": "intel/openfl", "full_name": "intel/openfl", "topics": ["federated-learning", "secure-computation", "openfl", "distributed-computing", "deep-learning", "collaborative-learning", "privacy-preserving-machine-learning", "machine-learning", "fedprox", "fedavg", "federated-analytics", "python", "federated-learning-framework", "federated-deep-learning", "pytorch-federated-learning", "tensorflow-federated-learning", "keras-federated-learning", "distributed-learning", "fedcurv", "fedopt"], "description": "An open framework for Federated Learning."}
{"name": "microsoft/lora", "full_name": "microsoft/LoRA", "topics": ["gpt-2", "adaptation", "language-model", "gpt-3", "low-rank", "pytorch", "deep-learning", "roberta", "deberta"], "description": "Code for loralib, an implementation of \"LoRA: Low-Rank Adaptation of Large Language Models\""}
{"name": "hkunlp/unifiedskg", "full_name": "HKUNLP/UnifiedSKG", "topics": ["natural-language-processing", "pytorch", "huggingface-transformers", "huggingface-datasets", "structured-knowledge-grounding", "semantic-parsing", "question-answering", "data-to-text", "text-generation", "fact-verification", "multi-task-learning", "prompt-learning"], "description": "[EMNLP 2022] A Unified Framework and Analysis for Structured Knowledge Grounding with Text-to-Text Language Models"}
{"name": "samuela/git-re-basin", "full_name": "samuela/git-re-basin", "topics": ["deep-learning", "deeplearning", "jax", "machine-learning", "neural-networks"], "description": "Code release for \"Git Re-Basin: Merging Models modulo Permutation Symmetries\""}
{"name": "microsoft/archai", "full_name": "microsoft/archai", "topics": ["python", "pytorch", "machine-learning", "deep-learning", "neural-architecture-search", "nas", "automated-machine-learning", "model-compression", "darts", "petridish", "hyperparameter-optimization", "automl"], "description": "Accelerate your Neural Architecture Search (NAS) through fast, reproducible and modular research."}
{"name": "yinboc/few-shot-meta-baseline", "full_name": "yinboc/few-shot-meta-baseline", "topics": ["machine-learning", "few-shot-learning", "pytorch"], "description": "Meta-Baseline: Exploring Simple Meta-Learning for Few-Shot Learning, in ICCV 2021"}
{"name": "xuyige/bert4doc-classification", "full_name": "xuyige/BERT4doc-Classification", "topics": ["natural-language-processing", "bert", "text-classification"], "description": "Code and source for paper ``How to Fine-Tune BERT for Text Classification?``"}
{"name": "hellonlp/classifier-multi-label", "full_name": "hellonlp/classifier-multi-label", "topics": ["multi-label-classification", "text-classification", "tensorflow", "multi-label", "textcnn", "cnn", "bert", "albert", "classifier-multi-label", "text-classifier"], "description": "\u591a\u6807\u7b7e\u6587\u672c\u5206\u7c7b\uff0c\u591a\u6807\u7b7e\u5206\u7c7b\uff0c\u6587\u672c\u5206\u7c7b\uff0cmulti-label\uff0cclassifier\uff0ctext classification\uff0cBERT\uff0cALBERT\uff0cmulti-label-classification"}
{"name": "tongjilibo/bert4torch", "full_name": "Tongjilibo/bert4torch", "topics": ["bert", "nlp", "pytorch", "bert4keras", "named-entity-recognition", "relation-extraction", "seq2seq", "text-classification", "transformers", "bert4torch"], "description": "pytorch implement of transformers refer to bert4keras"}
{"name": "mpolaris/onnx2tflite", "full_name": "MPolaris/onnx2tflite", "topics": ["onnx2keras", "onnx2tflite", "onnx2tensorflow", "yolov5", "yolov6", "yolov7", "deployment", "onnx", "pytorch2tensorflow", "quantization"], "description": "Tool for onnx->keras or onnx->tflite. If tool is useful for you, please star it."}
{"name": "lturing/tacotronv2_wavernn_chinese", "full_name": "lturing/tacotronv2_wavernn_chinese", "topics": [], "description": "tacotronV2 + wavernn \u5b9e\u73b0\u4e2d\u6587\u8bed\u97f3\u5408\u6210(Tensorflow + pytorch) "}
{"name": "hellonlp/classifier_multi_label_textcnn", "full_name": "hellonlp/classifier-multi-label", "topics": ["multi-label-classification", "text-classification", "tensorflow", "multi-label", "textcnn", "cnn", "bert", "albert", "classifier-multi-label", "text-classifier"], "description": "\u591a\u6807\u7b7e\u6587\u672c\u5206\u7c7b\uff0c\u591a\u6807\u7b7e\u5206\u7c7b\uff0c\u6587\u672c\u5206\u7c7b\uff0cmulti-label\uff0cclassifier\uff0ctext classification\uff0cBERT\uff0cALBERT\uff0cmulti-label-classification"}
{"name": "tensorflow/cloud", "full_name": "tensorflow/cloud", "topics": ["tensorflow", "cloud", "gcp", "keras"], "description": "The TensorFlow Cloud repository provides APIs that will allow to easily go from debugging and training your Keras and TensorFlow code in a local environment to distributed training in the cloud."}
{"name": "google-research/ravens", "full_name": "google-research/ravens", "topics": ["deep-learning", "robotics", "manipulation", "pick-and-place", "computer-vision", "artificial-intelligence", "vision", "rearrangement", "reinforcement-learning", "imitation-learning", "tensorflow", "openai-gym", "transporter-nets", "pybullet"], "description": "Train robotic agents to learn pick and place with deep learning for vision-based manipulation in PyBullet. Transporter Nets, CoRL 2020."}
{"name": "nvidia-merlin/merlin", "full_name": "NVIDIA-Merlin/Merlin", "topics": ["deep-learning", "end-to-end", "gpu-acceleration", "machine-learning", "recommendation-system", "recommender-system"], "description": "NVIDIA Merlin is an open source library providing end-to-end GPU-accelerated recommender systems, from feature engineering and preprocessing to training deep learning models and running inference in production."}
{"name": "tensorflow/model-card-toolkit", "full_name": "tensorflow/model-card-toolkit", "topics": ["deep-learning", "machine-learning", "model-cards", "responsible-ai", "responsible-ml", "tensorflow", "transparency"], "description": "A toolkit that streamlines and automates the generation of model cards "}
{"name": "paulgavrikov/visualkeras", "full_name": "paulgavrikov/visualkeras", "topics": [], "description": "Visualkeras is a Python package to help visualize Keras (either standalone or included in TensorFlow) neural network architectures. It allows easy styling to fit most needs. This module supports layered style architecture generation which is great for CNNs (Convolutional Neural Networks), and a graph style architecture, which works great for most models including plain feed-forward networks."}
{"name": "jtl1207/comic-translation", "full_name": "jtl1207/comic-translation", "topics": ["ocr", "deep-learning", "manga", "paddleocr", "chinese-translation", "text-detection"], "description": "\u57fa\u4e8e\u6df1\u5ea6\u5b66\u4e60\u7684\u6f2b\u753b\u7ffb\u8bd1\u8f85\u52a9\u5de5\u5177\uff0c\u5305\u542b\u7ffb\u8bd1\u3001\u6717\u8bfb\u3001\u56fe\u50cf\u53bb\u5b57\u3001\u81ea\u52a8\u5d4c\u5b57\u529f\u80fd\u3002  \u76ee\u7684\u662f\u5e2e\u52a9\u975e\u4e13\u4e1a\u6c49\u5316\u4eba\u5458\u5b8c\u6210\u66f4\u7b80\u5355\uff0c\u5feb\u901f\u7684\u7ffb\u8bd1\u4efb\u52a1\u3002"}
{"name": "yl305237731/flexible-yolov5", "full_name": "Bobo-y/flexible-yolov5", "topics": ["yolov5", "resnet", "moblienet", "backbone", "neck", "se", "cbam", "efficientnet", "pytorch", "shufflenet", "hrnet", "dcnv2", "tensorrt", "object-detection", "swin-transformer", "gcn", "yolov3"], "description": "More readable and flexible yolov5 with more backbone(gcn, resnet, shufflenet, moblienet, efficientnet, hrnet, swin-transformer, etc) and (cbam\uff0cdcn and so on), and tensorrt"}
{"name": "miemie2013/keras-yolov4", "full_name": "miemie2013/Keras-YOLOv4", "topics": ["yolov4", "yolo", "keras", "diou", "ciou", "ppyolo"], "description": "yolov4 42.0% mAP.ppyolo 45.1% mAP."}
{"name": "da-southampton/read_bert_code", "full_name": "DA-southampton/Read_Bert_Code", "topics": [], "description": "Bert\u6e90\u7801\u9605\u8bfb\u4e0e\u8bb2\u89e3(Pytorch\u7248\u672c)-\u4ee5BERT\u6587\u672c\u5206\u7c7b\u4ee3\u7801\u4e3a\u4f8b\u5b50"}
{"name": "mit-han-lab/torchquantum", "full_name": "mit-han-lab/torchquantum", "topics": ["pytorch-quantum", "quantum", "quantum-machine-learning", "neural-network", "machine-learning", "quantum-computing", "pytorch", "deep-learning", "system", "ml-for-systems", "quantum-simulation", "quantum-neural-network", "parameterized-quantum-circuit"], "description": "A PyTorch-based framework for Quantum Simulation, Quantum Machine Learning, Quantum Neural Networks, Parameterized Quantum Circuits with support for easy deployments on real quantum computers."}
{"name": "gretelai/gretel-synthetics", "full_name": "gretelai/gretel-synthetics", "topics": ["differential-privacy", "artificial-intelligence", "tensorflow", "privacy", "synthetic-data"], "description": "Synthetic data generators for structured and unstructured text, featuring differentially private learning."}
{"name": "rasahq/whatlies", "full_name": "koaning/whatlies", "topics": ["nlp", "embeddings", "visualisations"], "description": "Toolkit to help understand \"what lies\" in word embeddings. Also benchmarking! "}
{"name": "microsoft/styleswin", "full_name": "microsoft/StyleSwin", "topics": ["computer-vision", "deep-learning", "deep-neural-networks", "pytorch", "generative-adversarial-network", "gans", "image-generation", "image-synthesis", "styleswin", "transformer"], "description": "[CVPR 2022] StyleSwin: Transformer-based GAN for High-resolution Image Generation"}
{"name": "nupurkmr9/vision-aided-gan", "full_name": "nupurkmr9/vision-aided-gan", "topics": ["computer-vision", "computer-graphics", "pytorch", "generative-adversarial-network", "gans", "pretrained-models", "image-generation"], "description": "Ensembling Off-the-shelf Models for GAN Training (CVPR 2022 Oral)"}
{"name": "leondgarse/keras_cv_attention_models", "full_name": "leondgarse/keras_cv_attention_models", "topics": ["tensorflow", "visualizing", "keras", "attention", "model", "imagenet", "coco", "recognition", "detection", "anchor-free", "tf", "tf2"], "description": "Keras beit,botnet,CMT,CoaT,CoAtNet,convnext,cotnet,davit,efficientdet,edgenext,efficientformer,efficientnet,fbnet,flexivit,gcvit,ghostnet,gmlp,gpvit,halonet,hornet,iformer,lcnet,levit,maxvit,mlp-mixer,mobilevit,nat,nfnets,pvt,regnet,resmlp,resnest,resnext,resnetd,swin,tinynet,uniformer,volo,wavemlp,yolor,yolov7,yolox"}
{"name": "wuba/qa_match", "full_name": "wuba/qa_match", "topics": ["nlp", "machine-learning", "deep-learning", "ai", "58", "tensorflow", "lstm", "dssm", "qabot", "qatools"], "description": "A simple effective ToolKit for short text matching"}
{"name": "dvlab-research/blocknerfpytorch", "full_name": "sjtuytc/LargeScaleNeRFPytorch", "topics": ["nerf", "nerf-w", "pytorch-implementation", "block-nerf", "city-nerf", "custum-nerf", "mega-nerf", "view-synthesis", "weekly-nerf", "weekly", "classified", "pytorch-implementations", "pytorch", "pytorch-lightning", "chinese-translation", "deep-learning"], "description": "1. Non-official implementation of Block-NeRF and Mega-NeRF in Pytorch. 2. Train your large-scale NeRF in the wild. 3. Weekly classified NeRF literature."}
{"name": "clovaai/assembled-cnn", "full_name": "clovaai/assembled-cnn", "topics": ["convolutional-neural-networks", "tensorflow", "image-classification", "deep-learning", "transfer-learning", "computer-vision", "mce", "imagenet", "inference-throughput", "robustness", "food-101"], "description": "Tensorflow implementation of \"Compounding the Performance Improvements of Assembled Techniques in a Convolutional Neural Network\""}
{"name": "westlake-ai/openmixup", "full_name": "Westlake-AI/openmixup", "topics": ["pytorch", "awesome-list", "awesome-mim", "awesome-mixup", "contrastive-learning", "data-augmentation", "image-classifcation", "imagenet", "masked-image-modeling", "mixup", "self-supervised-learning", "semi-supervised-learning", "vision-transformer", "deep-learning", "benchmark", "automix"], "description": "CAIRI Supervised, Semi- and Self-Supervised Visual Representation Learning Toolbox and Benchmark"}
{"name": "danijar/dreamer", "full_name": "danijar/dreamer", "topics": ["reinforcement-learning", "artificial-intelligence", "deep-learning", "robotics", "world-models"], "description": "Dream to Control: Learning Behaviors by Latent Imagination"}
{"name": "breizhn/dtln", "full_name": "breizhn/DTLN", "topics": ["noise-reduction", "deep-learning", "audio", "real-time-audio", "audio-processing", "noise-suppression", "tensorflow", "dns-challenge", "dtln-model", "speech-denoising", "speech-processing", "speech-enhancement", "keras", "tf-lite", "raspberry-pi", "onnx"], "description": "Tensorflow 2.x implementation of the DTLN real time speech denoising model. With TF-lite, ONNX and real-time audio processing support."}
{"name": "bubbliiiing/yolov4-tf2", "full_name": "bubbliiiing/yolov4-tf2", "topics": [], "description": "\u8fd9\u662f\u4e00\u4e2ayolo4-tf2\uff08tensorflow2\uff09\u7684\u6e90\u7801\uff0c\u53ef\u4ee5\u7528\u4e8e\u8bad\u7ec3\u81ea\u5df1\u7684\u6a21\u578b\u3002"}
{"name": "vanderschaarlab/mlforhealthlabpub", "full_name": "vanderschaarlab/mlforhealthlabpub", "topics": ["machine-learning", "healthcare", "deep-learning"], "description": "Machine Learning and Artificial Intelligence for Medicine. "}
{"name": "eleutherai/dalle-mtf", "full_name": "EleutherAI/DALLE-mtf", "topics": ["artificial-intelligence", "transformers", "multimodal", "text-to-image", "variational-autoencoder", "autoregressive"], "description": "Open-AI's DALL-E for large scale training in mesh-tensorflow."}
{"name": "facebookresearch/neuralcompression", "full_name": "facebookresearch/NeuralCompression", "topics": ["python", "machine-learning", "deep-learning", "compression", "neural-compression", "pytorch", "jax"], "description": "A collection of tools for neural compression enthusiasts."}
{"name": "ma-dan/keras-yolo4", "full_name": "Ma-Dan/keras-yolo4", "topics": ["keras", "yolov4", "object-detection"], "description": "A Keras implementation of YOLOv4 (Tensorflow backend)"}
{"name": "angeloucn/dc-unet", "full_name": "AngeLouCN/DC-UNet", "topics": ["dc-unet", "medical-image-segmentation", "keras-tensorflow", "python3", "dcunet", "pytorch", "segmentation"], "description": "We proposed a novel U-Net-based model -- DC-UNet to do medical image segmentation."}
{"name": "jerryji1993/dnabert", "full_name": "jerryji1993/DNABERT", "topics": ["kmer", "dnabert-model", "kmer-format", "gpu", "sequence", "genome", "machine-learning", "deep-learning", "natural-language-processing", "nlp"], "description": "DNABERT: pre-trained Bidirectional Encoder Representations from Transformers model for DNA-language in genome"}
{"name": "katanaml/katana-skipper", "full_name": "katanaml/katana-skipper", "topics": ["katana", "pipeline", "orchestration", "tensorflow", "machine-learning", "kubernetes", "k8s", "docker", "ingress", "docker-compose"], "description": "Simple and flexible ML workflow engine"}
{"name": "microsoft/lmops", "full_name": "microsoft/LMOps", "topics": ["nlp", "agi", "gpt", "llm", "lm", "pretraining", "prompt", "lmops", "promptist", "x-prompt", "language-model"], "description": "General technology for enabling AI capabilities w/ LLMs and MLLMs"}
{"name": "eliahuhorwitz/deepsim", "full_name": "eliahuhorwitz/DeepSIM", "topics": ["single-image", "image-editing", "deep-neural-networks", "generative-adversarial-network", "computer-vision", "computer-graphics", "edge-to-image", "segmantation-to-image", "pytorch", "image-to-image-translation", "deep-learning", "iccv2021"], "description": "Official PyTorch implementation of the paper: \"DeepSIM: Image Shape Manipulation from a Single Augmented Training Sample\" (ICCV 2021 Oral)"}
{"name": "aimagelab/mammoth", "full_name": "aimagelab/mammoth", "topics": ["pytorch", "continual-learning", "neurips2020", "knowledge-distillation", "deep-learning", "der", "experience-replay", "dark-experience-replay"], "description": "An Extendible (General) Continual Learning Framework based on Pytorch - official codebase of Dark Experience for General Continual Learning"}
{"name": "longmaoteamtf/deep_recommenders", "full_name": "LongmaoTeamTf/deep_recommenders", "topics": ["deep-learning", "ranking", "retrieval", "recommendation-system", "multi-task-learning"], "description": "Deep Recommenders"}
{"name": "theaiguyscode/yolov3_deepsort", "full_name": "theAIGuysCode/yolov3_deepsort", "topics": ["yolov3", "object-tracker", "deep-sort", "tensorflow"], "description": "Object tracking implemented with YOLOv3, Deep Sort and Tensorflow."}
{"name": "keras-team/keras-nlp", "full_name": "keras-team/keras-nlp", "topics": ["deep-learning", "keras", "machine-learning", "nlp", "tensorflow"], "description": "Modular Natural Language Processing workflows with Keras"}
{"name": "godweiyang/nn-cuda-example", "full_name": "godweiyang/NN-CUDA-Example", "topics": ["pytorch", "tensorflow", "cuda", "cpp", "python", "neural-network"], "description": "Several simple examples for popular neural network toolkits calling custom CUDA operators."}
{"name": "opendr-eu/opendr", "full_name": "opendr-eu/opendr", "topics": ["deep-learning", "robotics"], "description": "A modular, open and non-proprietary toolkit for core robotic functionalities by harnessing deep learning"}
{"name": "google-research/prompt-tuning", "full_name": "google-research/prompt-tuning", "topics": ["prompt-tuning", "nlp", "machine-learning", "jax", "flax", "language-model"], "description": "Original Implementation of Prompt Tuning from Lester, et al, 2021"}
{"name": "marload/deeprl-tensorflow2", "full_name": "marload/DeepRL-TensorFlow2", "topics": ["tensorflow", "machine-learning", "reinforcement-learning", "a2c", "a3c", "reinforce", "dqn", "trpo", "ppo", "sac", "ddpg", "deep-learning", "deep-reinforcement-learning", "tensorflow2", "dueling-dqn", "double-dqn", "rainbow-dqn"], "description": "\ud83d\udc0b Simple implementations of various popular Deep Reinforcement Learning algorithms using TensorFlow2"}
{"name": "menyifang/dct-net", "full_name": "menyifang/DCT-Net", "topics": ["cartoonization", "gan", "generative-adversarial-network", "portrait", "siggraph2022", "style-transfer"], "description": "Official implementation of \"DCT-Net: Domain-Calibrated Translation for Portrait Stylization\", SIGGRAPH 2022 (TOG); Multi-style cartoonization"}
{"name": "xiangking/ark-nlp", "full_name": "xiangking/ark-nlp", "topics": ["nlp", "transfomer", "bert"], "description": "A private nlp coding package, which quickly implements the SOTA solutions."}
{"name": "openvinotoolkit/datumaro", "full_name": "openvinotoolkit/datumaro", "topics": ["deep-learning", "neural-networks", "openvino-toolkit", "computer-vision", "datasets", "format-converter", "dataset", "coco", "imagenet", "pascal-voc", "yolo"], "description": "Dataset Management Framework, a Python library and a CLI tool to build, analyze and manage Computer Vision datasets."}
{"name": "tusimple/sst", "full_name": "tusen-ai/SST", "topics": ["pytorch", "3d-object-detection", "autonomous-driving"], "description": "Codes for \u201cFully Sparse 3D Object Detection\u201d & \u201cEmbracing Single Stride 3D Object Detector with Sparse Transformer\u201d"}
{"name": "guitarml/guitarlstm", "full_name": "GuitarML/GuitarLSTM", "topics": ["deep-learning", "guitar", "machine-learning", "keras-tensorflow"], "description": "Deep learning models for guitar amp/pedal emulation using LSTM with Keras."}
{"name": "weizhepei/casrel", "full_name": "weizhepei/CasRel", "topics": ["knowledge-graph", "relation-extraction", "relational-triple-extraction", "information-extraction", "keras", "bert"], "description": "A Novel Cascade Binary Tagging Framework for Relational Triple Extraction. Accepted by ACL 2020. "}
{"name": "deci-ai/super-gradients", "full_name": "Deci-AI/super-gradients", "topics": ["deep-learning", "neural-network", "pretrained-weights", "pretrained-models", "pytorch", "object-detection", "image-classification", "computer-vision", "semantic-segmentation", "imagenet", "transfer-learning"], "description": "Easily train or fine-tune SOTA computer vision models with one open source training library"}
{"name": "symbioticlab/fedscale", "full_name": "SymbioticLab/FedScale", "topics": ["benchmark", "dataset", "machine-learning", "federated-learning", "icml", "deep-learning", "mlsys", "osdi", "deployment", "distributed", "pytorch", "tensorflow"], "description": "FedScale is a scalable and extensible open-source federated learning (FL) platform."}
{"name": "yongzhuo/macadam", "full_name": "yongzhuo/Macadam", "topics": ["tensorflow", "keras", "bert", "sequence-labeling", "text-classification", "relation-extraction", "embedding", "ner", "python3"], "description": "Macadam\u662f\u4e00\u4e2a\u4ee5Tensorflow(Keras)\u548cbert4keras\u4e3a\u57fa\u7840\uff0c\u4e13\u6ce8\u4e8e\u6587\u672c\u5206\u7c7b\u3001\u5e8f\u5217\u6807\u6ce8\u548c\u5173\u7cfb\u62bd\u53d6\u7684\u81ea\u7136\u8bed\u8a00\u5904\u7406\u5de5\u5177\u5305\u3002\u652f\u6301RANDOM\u3001WORD2VEC\u3001FASTTEXT\u3001BERT\u3001ALBERT\u3001ROBERTA\u3001NEZHA\u3001XLNET\u3001ELECTRA\u3001GPT-2\u7b49EMBEDDING\u5d4c\u5165;     \u652f\u6301FineTune\u3001FastText\u3001TextCNN\u3001CharCNN\u3001BiRNN\u3001RCNN\u3001DCNN\u3001CRNN\u3001DeepMoji\u3001SelfAttention\u3001HAN\u3001Capsule\u7b49\u6587\u672c\u5206\u7c7b\u7b97\u6cd5;      \u652f\u6301CRF\u3001Bi-LSTM-CRF\u3001CNN-LSTM\u3001DGCNN\u3001Bi-LSTM-LAN\u3001Lattice-LSTM-Batch\u3001MRC\u7b49\u5e8f\u5217\u6807\u6ce8\u7b97\u6cd5\u3002"}
{"name": "kaleidophon/deep-significance", "full_name": "Kaleidophon/deep-significance", "topics": ["significance-testing", "deep-learning", "dl", "hypothesis-testing", "hypothesis-tests", "statistical-significance", "statistical-significance-test", "machine-learning", "ml", "deeplearning", "machinelearning", "compare-scores", "deep-neural-networks"], "description": "Enabling easy statistical significance testing for deep neural networks. "}
{"name": "zsyzzsoft/co-mod-gan", "full_name": "zsyzzsoft/co-mod-gan", "topics": ["image-completion", "image-inpainting", "image-to-image-translation", "iclr2021", "gans", "tensorflow", "generative-adversarial-network"], "description": "[ICLR 2021, Spotlight] Large Scale Image Completion via Co-Modulated Generative Adversarial Networks"}
{"name": "bubbliiiing/faster-rcnn-keras", "full_name": "bubbliiiing/faster-rcnn-keras", "topics": [], "description": "\u8fd9\u662f\u4e00\u4e2afaster-rcnn\u7684keras\u5b9e\u73b0\u7684\u5e93\uff0c\u53ef\u4ee5\u5229\u7528voc\u6570\u636e\u96c6\u683c\u5f0f\u7684\u6570\u636e\u8fdb\u884c\u8bad\u7ec3\u3002"}
{"name": "pinto0309/openvino2tensorflow", "full_name": "PINTO0309/openvino2tensorflow", "topics": ["openvino", "tensorflow", "pytorch", "onnx", "tensorflow-lite", "keras", "coreml", "tf-trt", "tensorrt", "edgetpu", "caffe", "mxnet", "tflite", "tfjs", "tensorflowjs", "converter", "models-converter", "docker"], "description": "This script converts the ONNX/OpenVINO IR model to Tensorflow's saved_model, tflite, h5, tfjs, tftrt(TensorRT), CoreML, EdgeTPU, ONNX and pb. PyTorch (NCHW) -> ONNX (NCHW) -> OpenVINO (NCHW) -> openvino2tensorflow -> Tensorflow/Keras (NHWC/NCHW) -> TFLite (NHWC/NCHW). And the conversion from .pb to saved_model and from saved_model to .pb and from .pb to .tflite and saved_model to .tflite and saved_model to onnx. Support for building environments with Docker. It is possible to directly access the host PC GUI and the camera to verify the operation. NVIDIA GPU (dGPU) support. Intel iHD GPU (iGPU) support."}
{"name": "theaiguyscode/object-detection-api", "full_name": "theAIGuysCode/Object-Detection-API", "topics": ["yolov3", "object-detection", "tensorflow", "yolo", "inference", "deep-learning"], "description": "Yolov3 Object Detection implemented as APIs, using TensorFlow and Flask"}
{"name": "cool-rr/marley", "full_name": "cool-RR/marley", "topics": ["hacktoberfest", "machine-learning", "reinforcement-learning", "ai", "q-learning", "python", "keras", "tensorflow"], "description": "A framework for multi-agent reinforcement learning."}
{"name": "nvlabs/sionna", "full_name": "NVlabs/sionna", "topics": ["communications", "5g", "6g", "machine-learning", "deep-learning", "link-level-simulation", "reproducible-research", "open-source", "gpu-acceleration"], "description": "Sionna: An Open-Source Library for Next-Generation Physical Layer Research"}
{"name": "dazinovic/neural-rgbd-surface-reconstruction", "full_name": "dazinovic/neural-rgbd-surface-reconstruction", "topics": ["3d-reconstruction", "computer-vision", "deep-learning", "computer-graphics"], "description": "Official implementation of the CVPR 2022 Paper \"Neural RGB-D Surface Reconstruction\""}
{"name": "leonlok/deep-sort-yolov4", "full_name": "LeonLok/Deep-SORT-YOLOv4", "topics": ["yolov4", "deep-sort", "deep-sort-tracking", "people-tracker", "people-tracking", "asynchronous", "asynchronous-io", "yolo", "tensorflow", "asynchronous-processing", "tracking-algorithm", "object-detection", "object-tracking", "tensorflow2", "detection-algorithm", "yolov3"], "description": "People detection and optional tracking with Tensorflow backend."}
{"name": "avbuffer/yolov5_tf", "full_name": "avBuffer/Yolov5_tf", "topics": ["yolov5", "yolov4", "yolov3", "tensorflow", "yolo-tiny", "tensorflow2", "mobilenetv2", "mobilenetv3"], "description": "Yolov5/Yolov4/ Yolov3/ Yolo_tiny  in tensorflow"}
{"name": "dsxiangli/ctr", "full_name": "DSXiangLi/CTR", "topics": ["ctr-prediction", "recommendation-algorithms", "wide-and-deep", "fm", "ffm", "tensorflow", "pnn", "fnn", "deepfm", "afm", "nfm", "frappe", "deep-cross", "dcn", "xdeepfm", "fibinet", "deepinterestnetwork"], "description": "CTR\u6a21\u578b\u4ee3\u7801\u548c\u5b66\u4e60\u7b14\u8bb0\u603b\u7ed3"}
{"name": "skylark0924/machine-learning-is-all-you-need", "full_name": "Skylark0924/Machine-Learning-is-ALL-You-Need", "topics": ["deep-reinforcement-learning", "keras", "pytorch", "tensorflow", "convolutional-neural-networks", "lstm", "dqn", "ddpg", "actor-critic", "ppo", "trpo", "qlearning", "logistic-regression", "support-vector-machine", "k-nearest-neighbours", "naive-bayes-classifier", "decision-trees", "random-forest", "gan", "resnet"], "description": "\ud83d\udd25\ud83c\udf1f\u300aMachine Learning \u683c\u7269\u5fd7\u300b: ML + DL + RL basic codes and notes by sklearn, PyTorch, TensorFlow, Keras & the most important, from scratch!\ud83d\udcaa This repository is ALL You Need!"}
{"name": "duanshengliu/end-to-end-for-chinese-plate-recognition", "full_name": "duanshengliu/End-to-end-for-chinese-plate-recognition", "topics": ["tensorflow", "keras", "computer-vision", "image-segmentation", "image-recognition", "opencv", "python"], "description": "\u57fa\u4e8eu-net\uff0ccv2\u4ee5\u53cacnn\u7684\u4e2d\u6587\u8f66\u724c\u5b9a\u4f4d\uff0c\u77eb\u6b63\u548c\u7aef\u5230\u7aef\u8bc6\u522b\u8f6f\u4ef6\uff0c\u5176\u4e2dunet\u548ccv2\u7528\u4e8e\u8f66\u724c\u5b9a\u4f4d\u548c\u77eb\u6b63\uff0ccnn\u8fdb\u884c\u8f66\u724c\u8bc6\u522b\uff0cunet\u548ccnn\u90fd\u662f\u57fa\u4e8etensorflow\u7684keras\u5b9e\u73b0"}
{"name": "apple/ml-gmpi", "full_name": "apple/ml-gmpi", "topics": ["3d", "eccv2022", "generative-adversarial-network", "neural-rendering", "pytorch", "generative-model", "multiplane-images"], "description": "Official PyTorch implementation of GMPI (ECCV 2022, Oral Presentation)"}
{"name": "cool-rr/grid_royale", "full_name": "cool-RR/marley", "topics": ["hacktoberfest", "machine-learning", "reinforcement-learning", "ai", "q-learning", "python", "keras", "tensorflow"], "description": "A framework for multi-agent reinforcement learning."}
{"name": "natooz/miditok", "full_name": "Natooz/MidiTok", "topics": ["midi", "music", "deep-learning", "generative-model", "music-generation", "music-information-retrieval", "machine-learning"], "description": "Convenient MIDI / symbolic music tokenizers for Deep Learning networks \ud83c\udfb6"}
{"name": "peteryux/retinaface-tf2", "full_name": "peteryuX/retinaface-tf2", "topics": ["facedetection", "face-detection", "retinaface", "retinaface-detector", "tensorflow", "tensorflow2", "tf2", "resnet-50", "mobilenetv2", "colab-notebook", "colab"], "description": "RetinaFace (Single-stage Dense Face Localisation in the Wild, 2019) implemented (ResNet50, MobileNetV2 trained on single GPU) in Tensorflow 2.0+. This is an unofficial implementation. With Colab."}
{"name": "hustvl/maptr", "full_name": "hustvl/MapTR", "topics": ["bev", "end-to-end", "real-time", "transformer", "online-hdmap-construction", "shape-representation", "vectorized-hdmap", "autonomous-driving", "iclr2023"], "description": "[ICLR'23 Spotlight] MapTR: Structured Modeling and Learning for Online Vectorized HD Map Construction"}
{"name": "microsoft/nn-meter", "full_name": "microsoft/nn-Meter", "topics": ["python", "deep-neural-networks", "latency", "inference", "edge-computing", "edge-ai", "tensorflow-models", "onnx-models", "pytorch", "machine-learning", "deep-learning", "neural-architecture-search", "efficient-model"], "description": "A DNN inference latency prediction toolkit for accurately modeling and predicting the latency on diverse edge devices. "}
{"name": "muqiujun-ai/bert4pytorch", "full_name": "MuQiuJun-AI/bert4pytorch", "topics": ["pytorch", "bert", "nlp", "transformer"], "description": "\u8d85\u8f7b\u91cf\u7ea7bert\u7684pytorch\u7248\u672c\uff0c\u5927\u91cf\u4e2d\u6587\u6ce8\u91ca\uff0c\u5bb9\u6613\u4fee\u6539\u7ed3\u6784\uff0c\u6301\u7eed\u66f4\u65b0"}
{"name": "we0091234/chinese_license_plate_detection_recognition", "full_name": "we0091234/Chinese_license_plate_detection_recognition", "topics": ["deep-learning", "pytorch", "plate-recognition", "yolov5"], "description": "yolov5 \u8f66\u724c\u68c0\u6d4b   \u8f66\u724c\u8bc6\u522b   \u4e2d\u6587\u8f66\u724c\u8bc6\u522b \u68c0\u6d4b \u652f\u630112\u79cd\u4e2d\u6587\u8f66\u724c \u652f\u6301\u53cc\u5c42\u8f66\u724c"}
{"name": "aiff22/pynet", "full_name": "aiff22/PyNET", "topics": ["pynet", "image-enhancement", "image-processing", "image-reconstruction", "deep-learning", "raw-to-rgb", "computer-vision", "mobile", "photography", "isp", "camera", "image-to-image-translation", "raw", "photos"], "description": "Generating RGB photos from RAW image files with PyNET"}
{"name": "operatorai/modelstore", "full_name": "operatorai/modelstore", "topics": ["python-library", "modelstore", "machine-learning", "data-science", "scikit-learn", "pytorch", "tensorflow", "mlops", "s3-storage", "transformer", "keras"], "description": "\ud83c\udfec modelstore is a Python library that allows you to version, export, and save a machine learning model to your filesystem or a cloud storage provider."}
{"name": "stanislasbertrand/retinaface-tf2", "full_name": "StanislasBertrand/RetinaFace-tf2", "topics": ["face-detection", "retinaface", "tf2", "tensorflow2", "tensorflow", "deep-learning", "insightface"], "description": "RetinaFace (RetinaFace: Single-stage Dense Face Localisation in the Wild, published in 2019) reimplemented in Tensorflow 2.0, with pretrained weights available ! "}
{"name": "ai4bharat/indic-bert", "full_name": "AI4Bharat/indic-bert", "topics": ["indian-languages", "bert", "multilingual-models", "language-model", "nlp"], "description": "BERT-based Multilingual Model for Indian Languages"}
{"name": "galliot-us/neuralet", "full_name": "galliot-us/neuralet", "topics": ["edge-ai", "edgetpu", "deep-learning", "deep-neural-networks", "jetson-nano", "edge-computing", "coral-tpu", "jetsonnano", "jetson-nano-developer-kit", "ros-kinetic", "ros", "ros-melodic", "object-detection", "social-distancing", "social-distancing-detection", "edge-tpu"], "description": "Neuralet is an open-source platform for edge deep learning models on edge TPU, Jetson Nano, and more. "}
{"name": "sangwoomo/freezed", "full_name": "sangwoomo/FreezeD", "topics": ["generative-models", "generative-adversarial-network", "transfer-learning", "gan"], "description": "Freeze the Discriminator: a Simple Baseline for Fine-Tuning GANs (CVPRW 2020)"}
{"name": "gsunshine/enjoy-hamburger", "full_name": "Gsunshine/Enjoy-Hamburger", "topics": ["attention", "differentiable-programming", "implicit", "deq", "matrix-factorization", "optimization"], "description": "[ICLR 2021 top 3%] Is Attention Better Than Matrix Decomposition?"}
{"name": "martinsbruveris/tensorflow-image-models", "full_name": "martinsbruveris/tensorflow-image-models", "topics": ["tensorflow", "imagenet", "vision-transformer"], "description": "TensorFlow port of PyTorch Image Models (timm) - image models with pretrained weights."}
{"name": "fcakyon/yolov5-pip", "full_name": "fcakyon/yolov5-pip", "topics": ["yolo", "yolov5", "object-detection", "pytorch", "python", "pip", "ultralytics", "yolov3", "yolov4", "machine-learning", "deep-learning", "computer-vision", "aws", "coco", "neptune", "neptune-ai", "s3", "pypi", "cli"], "description": "Packaged version of ultralytics/yolov5 + many extra features"}
{"name": "chonyy/ml-auto-baseball-pitching-overlay", "full_name": "chonyy/ML-auto-baseball-pitching-overlay", "topics": ["baseball", "pitch", "machine-learning", "ai", "artificial-intelligence", "data-science", "sport", "object-detection", "pose-estimation", "yolov4", "deep-learning"], "description": "\u26be\ud83e\udd16\u26be Automatic baseball pitching overlay in realtime"}
{"name": "ha0tang/xinggan", "full_name": "Ha0Tang/XingGAN", "topics": ["image-generation", "generation", "eccv-2020", "appearance-features", "shape-features", "feature-fusion", "non-local", "crossing", "eccv2020", "pytorch", "deepfashion", "selectiongan"], "description": "[ECCV 2020] XingGAN for Person Image Generation"}
{"name": "google-research/fast-soft-sort", "full_name": "google-research/fast-soft-sort", "topics": ["differentiable", "sorting", "ranking", "pytorch", "tensorflow", "jax"], "description": "Fast Differentiable Sorting and Ranking"}
{"name": "sisinflab/elliot", "full_name": "sisinflab/elliot", "topics": ["recommender-system", "machine-learning", "collaborative-filtering", "content-based-recommendation", "bprmf", "matrix-factorization", "vae", "svdpp", "funksvd", "slim", "neural-collaborative-filtering", "k-nn", "k-nearest-neighbours", "nfm", "knowledge-graph", "recommendations", "tensorflow2", "keras", "deepfm"], "description": "Comprehensive and Rigorous Framework for Reproducible Recommender Systems Evaluation"}
{"name": "tatp22/multidim-positional-encoding", "full_name": "tatp22/multidim-positional-encoding", "topics": ["tensorflow", "pytorch", "deep-learning"], "description": "An implementation of 1D, 2D, and 3D positional encoding in Pytorch and TensorFlow"}
{"name": "kahst/birdnet-analyzer", "full_name": "kahst/BirdNET-Analyzer", "topics": ["bioacoustics", "birds", "birdsong", "acoustic-monitoring", "deep-learning"], "description": "BirdNET analyzer for scientific audio data processing."}
{"name": "datacanvasio/hypernets", "full_name": "DataCanvasIO/Hypernets", "topics": ["neural-architecture-search", "hyperparameter-optimization", "hyperparameter-tuning", "evolutionary-algorithms", "monte-carlo-tree-search", "automl", "autodl", "reinforcement-learning", "mcts", "nas", "keras", "nasnet", "enas"], "description": "A General Automated Machine Learning framework to simplify the development of End-to-end AutoML toolkits in specific domains."}
{"name": "endlesssora/tsit", "full_name": "EndlessSora/TSIT", "topics": ["generative-adversarial-network", "gan", "image-to-image-translation", "image-generation", "image-manipulation", "two-stream-networks", "versatile", "feature-transformation", "multi-scale", "style-transfer", "multi-modal", "semantic-image-synthesis", "eccv2020"], "description": "[ECCV 2020 Spotlight] A Simple and Versatile Framework for Image-to-Image Translation"}
{"name": "keonlee9420/portaspeech", "full_name": "keonlee9420/PortaSpeech", "topics": ["text-to-speech", "normalizing-flows", "generative-model", "deep-neural-networks", "pytorch", "tts", "speech-synthesis", "neural-tts", "non-autoregressive", "portable-tts", "vae", "fastspeech", "hifi-gan", "non-ar", "mel-gan", "high-quality"], "description": "PyTorch Implementation of PortaSpeech: Portable and High-Quality Generative Text-to-Speech"}
{"name": "liuruoze/mini-alphastar", "full_name": "liuruoze/mini-AlphaStar", "topics": ["mini-alphastar", "supervised-learning", "reinforcement-learning", "starcraft2", "deep-learning", "pytorch", "self-playing-bot", "multi-agent-systems", "gaming", "imitation-learning", "starcraft2-ai", "starcraft-ii-bot", "sc2replay", "deep-reinforcement-learning", "deep-neural-networks"], "description": "A mini-scale reproduction code of the AlphaStar program. Note: the original AlphaStar is the AI proposed by DeepMind to play StarCraft II."}
{"name": "cgarciae/treex", "full_name": "cgarciae/treex", "topics": ["jax", "deep-learning"], "description": "A Pytree Module system for Deep Learning in JAX"}
{"name": "angeloucn/cfpnet-medicine", "full_name": "AngeLouCN/CFPNet-Medicine", "topics": ["medical-image-segmentation", "real-time-semantic-segmentation", "keras", "python3", "pytorch", "segmentation"], "description": "CFPNet-M: A Light-Weight Encoder-Decoder Based Network for Multimodal Biomedical Image Real-Time Segmentation"}
{"name": "ayaka14732/tpu-starter", "full_name": "ayaka14732/tpu-starter", "topics": ["tpu", "deep-learning", "cloud-tpu", "google-cloud-platform", "gcp", "machine-learning", "jax"], "description": "Everything you want to know about Google Cloud TPU"}
{"name": "materialsvirtuallab/maml", "full_name": "materialsvirtuallab/maml", "topics": ["materials-science", "machine-learning", "deep-learning", "machine-learning-force-field", "spectroscopy", "materials-discovery"], "description": "Python for Materials Machine Learning, Materials Descriptors, Machine Learning Force Fields, Deep Learning, etc."}
{"name": "google-research/l2p", "full_name": "google-research/l2p", "topics": ["deep-learning", "continual-learning", "jax"], "description": "Learning to Prompt (L2P) for Continual Learning @ CVPR22 and DualPrompt: Complementary Prompting for Rehearsal-free Continual Learning @ ECCV22"}
{"name": "oneflow-inc/libai", "full_name": "Oneflow-Inc/libai", "topics": ["oneflow", "nlp", "deep-learning", "large-scale", "data-parallelism", "model-parallelism", "distributed-training", "pipeline-parallelism", "transformer", "self-supervised-learning", "vision-transformer"], "description": "LiBai(\u674e\u767d): A Toolbox for Large-Scale Distributed Parallel Training"}
{"name": "allenai/allenact", "full_name": "allenai/allenact", "topics": ["reinforcement-learning", "embodied-agent", "ai", "research", "python", "deep-learning", "ai2", "computer-vision"], "description": "An open source framework for research in Embodied-AI from AI2."}
{"name": "kyzhouhzau/nlpgnn", "full_name": "kyzhouhzau/NLPGNN", "topics": ["tensorflow2", "bert", "gpt2", "albert", "bert-ner", "bert-cls", "textcnn", "bilstm-attention", "albert-ner", "tf2", "message-passing", "gcn", "gin", "gan", "graph-convolutional-networks", "graphsage", "graph-classfication", "textgcn", "nlp", "gnn"], "description": "1. Use BERT, ALBERT and GPT2 as  tensorflow2.0's layer.  2. Implement GCN, GAN, GIN and GraphSAGE based on message passing."}
{"name": "carla-recourse/carla", "full_name": "carla-recourse/CARLA", "topics": ["python", "machine-learning", "artificial-intelligence", "explainable-ai", "explainable-ml", "explainability", "counterfactual-explanations", "counterfactuals", "counterfactual", "recourse", "benchmark", "benchmarking", "tensorflow", "tensorflow2", "pytorch"], "description": "CARLA: A Python Library to Benchmark Algorithmic Recourse and Counterfactual Explanation Algorithms"}
{"name": "longxingtan/tfyolo", "full_name": "LongxingTan/tfyolo", "topics": ["yolov5", "object-detection", "you-only-look-once", "tensorflow"], "description": "tfyolo: Efficient implementation of Yolov5 in TensorFlow2"}
{"name": "smousavi05/eqtransformer", "full_name": "smousavi05/EQTransformer", "topics": ["earthquakes", "detection", "phase-picking", "deep-learning", "neural-network", "lstm-neural-networks", "attention-mechanism", "transformer", "multi-task-learning", "global", "stead"], "description": "EQTransformer, a python package for earthquake signal detection and phase picking using AI."}
{"name": "longxingtan/tf-yolo", "full_name": "LongxingTan/tfyolo", "topics": ["yolov5", "object-detection", "you-only-look-once", "tensorflow"], "description": "tfyolo: Efficient implementation of Yolov5 in TensorFlow2"}
{"name": "jordicorbilla/stock-prediction-deep-neural-learning", "full_name": "JordiCorbilla/stock-prediction-deep-neural-learning", "topics": ["machine-learning", "deep-learning", "deep-neural-networks", "yfinance", "lstm-neural-networks", "lstm-model", "recurrent-neural-networks", "stock-prediction", "stock-prices", "market-data", "finance", "cryptocurrency", "crypto", "lstm", "stock", "time-series", "jupyter-notebook"], "description": "Predicting stock prices using a TensorFlow LSTM (long short-term memory) neural network for times series forecasting"}
{"name": "thudm/graphmae", "full_name": "THUDM/GraphMAE", "topics": ["graph-neural-networks", "self-supervised-learning", "deep-learning", "pytorch"], "description": "GraphMAE: Self-Supervised Masked Graph Autoencoders in KDD'22"}
{"name": "bethgelab/model-vs-human", "full_name": "bethgelab/model-vs-human", "topics": ["pytorch", "tensorflow", "robustness", "benchmark", "toolbox"], "description": "Benchmark your model on out-of-distribution datasets with carefully collected human comparison data (NeurIPS 2021 Oral)"}
{"name": "junnyu/roformer_pytorch", "full_name": "JunnYu/RoFormer_pytorch", "topics": ["pytorch", "roformer-v1", "roformer-v2", "language-model"], "description": "RoFormer V1 & V2 pytorch"}
{"name": "golsun/dialogrpt", "full_name": "golsun/DialogRPT", "topics": ["dialog", "pretrained-models", "transformers", "pytorch", "conversational-ai", "dialogpt", "gpt-2", "human-feedback-data", "dataset", "dialog-datasets"], "description": "EMNLP 2020: \"Dialogue Response Ranking Training with Large-Scale Human Feedback Data\""}
{"name": "gradsflow/chitra", "full_name": "gradsflow/chitra", "topics": ["tensorflow", "image-processing", "object-detection", "deep-learning", "image-dataset", "visualization", "gradcam", "model-interpretation", "model-visualization", "image-classification", "bounding-boxes", "model-deployment", "mlops", "model-serving", "python", "machine-learning", "fastapi", "hacktoberfest", "pytorch"], "description": "A multi-functional library for full-stack Deep Learning. Simplifies Model Building, API development, and Model Deployment."}
{"name": "google-research/ibc", "full_name": "google-research/ibc", "topics": ["reinforcement-learning", "deep-learning", "imitation-learning"], "description": "Official implementation of Implicit Behavioral Cloning, as described in our CoRL 2021 paper, see more at https://implicitbc.github.io/"}
{"name": "pinto0309/tflite2tensorflow", "full_name": "PINTO0309/tflite2tensorflow", "topics": ["tflite", "tensorflow", "tensorflow-lite", "converter", "models-converter", "coreml", "tf-trt", "tfjs", "tensorflowjs", "edgetpu", "models-conver", "tensorflow-models", "mediapipe", "onnx", "openvino", "depthai", "tensorrt", "docker"], "description": "Generate saved_model, tfjs, tf-trt, EdgeTPU, CoreML, quantized tflite, ONNX, OpenVINO, Myriad Inference Engine blob and .pb from .tflite. Support for building environments with Docker. It is possible to directly access the host PC GUI and the camera to verify the operation. NVIDIA GPU (dGPU) support.  Intel iHD GPU (iGPU) support. Supports inverse quantization of INT8 quantization model."}
{"name": "jetrunner/bert-of-theseus", "full_name": "JetRunner/BERT-of-Theseus", "topics": ["bert", "transformers", "nlp", "glue", "model-compression"], "description": "\u26f5\ufe0fThe official PyTorch implementation for \"BERT-of-Theseus: Compressing BERT by Progressive Module Replacing\" (EMNLP 2020)."}
{"name": "maybeshewill-cv/bisenetv2-tensorflow", "full_name": "MaybeShewill-CV/bisenetv2-tensorflow", "topics": ["real-time-semantic-segmentation", "semantic-segmentation", "tensorflow-segmentation", "deep-learning", "cityscapes", "camvid", "bisenetv2", "bisenet"], "description": "Unofficial tensorflow implementation of real-time scene image segmentation model \"BiSeNet V2: Bilateral Network with Guided Aggregation for Real-time Semantic Segmentation\""}
{"name": "mit-han-lab/mcunet", "full_name": "mit-han-lab/mcunet", "topics": ["deep-learning", "neural-architecture-search", "pytorch", "tinyml", "microncontroller"], "description": "[NeurIPS 2020] MCUNet: Tiny Deep Learning on IoT Devices; [NeurIPS 2021] MCUNetV2: Memory-Efficient Patch-based Inference for Tiny Deep Learning"}
{"name": "vngrs-ai/vnlp", "full_name": "vngrs-ai/vnlp", "topics": ["nlp", "turkish-nlp", "stemming", "morphological-analysis", "morphological-disambiguation", "named-entity-recognition", "dependency-parsing", "part-of-speech-tagging", "sentiment-analysis", "spelling-correction", "number-to-words", "deasciifier", "normalization", "stopword-removal", "sentence-tokenizer", "sentence-splitting", "word-embeddings", "word2vec", "fasttext", "deep-learning"], "description": "State-of-the-art, lightweight NLP tools for Turkish language. Developed by VNGRS."}
{"name": "tengfei-wang/implicit-internal-video-inpainting", "full_name": "Tengfei-Wang/Implicit-Internal-Video-Inpainting", "topics": ["video-processing", "video-inpainting", "video-editing", "object-removal", "deeplearning", "computer-vision", "image-inpainting", "deep-learning"], "description": "[ICCV 2021]: IIVI: Internal Video Inpainting by Implicit Long-range Propagation "}
{"name": "jacobjinkelly/easy-neural-ode", "full_name": "jacobjinkelly/easy-neural-ode", "topics": ["neural-ode", "differential-equations", "machine-learning", "jax", "deep-learning", "deep-neural-networks", "dynamical-systems", "neural-differential-equations", "numerical-integration", "ode", "ode-solver"], "description": "Code for the paper \"Learning Differential Equations that are Easy to Solve\""}
{"name": "yale-lily/summertime", "full_name": "Yale-LILY/SummerTime", "topics": ["nlp", "python", "deep-learning", "neural-networks", "text-summarization", "pytorch"], "description": "An open-source text summarization toolkit for non-experts."}
{"name": "crux82/ganbert", "full_name": "crux82/ganbert", "topics": ["generative-adversarial-network", "semi-supervised-learning", "few-shot-learning", "bert", "python"], "description": "Enhancing the BERT training with Semi-supervised Generative Adversarial Networks"}
{"name": "tusimple/centerformer", "full_name": "TuSimple/centerformer", "topics": ["lidar-point-cloud", "transformer"], "description": "Implementation for CenterFormer: Center-based Transformer for 3D Object Detection (ECCV 2022)"}
{"name": "neuralet/neuralet", "full_name": "galliot-us/neuralet", "topics": ["edge-ai", "edgetpu", "deep-learning", "deep-neural-networks", "jetson-nano", "edge-computing", "coral-tpu", "jetsonnano", "jetson-nano-developer-kit", "ros-kinetic", "ros", "ros-melodic", "object-detection", "social-distancing", "social-distancing-detection", "edge-tpu"], "description": "Neuralet is an open-source platform for edge deep learning models on edge TPU, Jetson Nano, and more. "}
{"name": "lightning-ai/tutorials", "full_name": "Lightning-AI/tutorials", "topics": ["tutorials", "jupyter-notebook", "machine-learning", "deep-learning", "notebooks", "python-scripts", "lightning"], "description": "Collection of Pytorch lightning tutorial form as rich scripts automatically transformed to ipython notebooks."}
{"name": "hongsukchoi/tcmr_release", "full_name": "hongsukchoi/TCMR_RELEASE", "topics": ["video", "temporal", "3d-human-mesh", "3d-human-shape-and-pose-estimation", "3d-human-motion", "cvpr2021"], "description": "Official Pytorch implementation of \"Beyond Static Features for Temporally Consistent 3D Human Pose and Shape from a Video\", CVPR 2021"}
{"name": "kazuhito00/naruto-handsigndetection", "full_name": "Kazuhito00/NARUTO-HandSignDetection", "topics": ["tensorflow2", "object-detection", "opencv", "handsign", "naruto", "efficientdet", "mobilenetv2-ssd", "deep-learning", "deep-neural-networks", "tensorflow-lite", "naruto-handsigndetection"], "description": "\u7269\u4f53\u691c\u51fa\u3092\u7528\u3044\u3066NARUTO\u306e\u5370(\u5b50\uff5e\u4ea5\u3001\u58ec\u3001\u5408\u638c)\u3092\u691c\u51fa\u3059\u308b\u30e2\u30c7\u30eb\u3068\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u3059\u3002\u3053\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u3067\u306f\u3001YOLOX\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059(This is a model and sample program that detects NARUTO's hand sign using object detection. This repository use YOLOX.)"}
{"name": "labteral/ernie", "full_name": "labteral/ernie", "topics": ["bert", "roberta", "albert", "distilbert", "tensorflow", "keras", "tensorflow2", "nlp", "sentence-classification", "transformers", "huggingface", "bert-model", "bert-models", "bert-as-service", "bert-embeddings", "huggingface-transformer", "transformer-architecture", "transformer-tensorflow2", "natural-language-processing"], "description": "Simple State-of-the-Art BERT-Based Sentence Classification with Keras / TensorFlow 2. Built with HuggingFace's Transformers."}
{"name": "yanx27/pointasnl", "full_name": "yanx27/PointASNL", "topics": ["point-cloud", "segmentation", "classification", "sample", "tensorflow", "self-driving", "modelnet-dataset", "semantickitti", "scannet-dataset"], "description": "PointASNL: Robust Point Clouds Processing using Nonlocal Neural Networks with Adaptive Sampling \uff08CVPR 2020\uff09"}
{"name": "alibaba/easyparallellibrary", "full_name": "alibaba/EasyParallelLibrary", "topics": ["deep-learning", "data-parallelism", "model-parallelism", "pipeline-parallelism", "memory-efficient", "distributed-training", "gpu"], "description": "Easy Parallel Library (EPL) is a general and efficient deep learning framework for distributed model training."}
{"name": "thinklab-sjtu/pygmtools", "full_name": "Thinklab-SJTU/pygmtools", "topics": ["combinatorial-optimization", "deep-learning", "graph-matching", "python-library"], "description": "Python graph matching solvers & evaluating protocol."}
{"name": "augmentedstartups/as-one", "full_name": "augmentedstartups/AS-One", "topics": ["computer-vision", "opencv", "yolor", "yolov5", "yolov7", "yolox", "deep-learning", "object-detection", "pytorch", "tracking", "ultralytics", "yolov8"], "description": "Easy & Modular Computer Vision Detectors and Trackers - Run YOLOv8,v7,v6,v5,R,X in under 20 lines of code."}
{"name": "yeyupiaoling/voiceprintrecognition-tensorflow", "full_name": "yeyupiaoling/VoiceprintRecognition-Tensorflow", "topics": ["tensorflow", "voice-recognition", "arcface", "speaker-recognition"], "description": "\u4f7f\u7528Tensorflow\u5b9e\u73b0\u58f0\u7eb9\u8bc6\u522b"}
{"name": "allenai/tango", "full_name": "allenai/tango", "topics": ["python", "python3", "machine-learning", "nlp", "ai", "pytorch"], "description": "Organize your experiments into discrete steps that can be cached and reused throughout the lifetime of your research project."}
{"name": "isarandi/metrabs", "full_name": "isarandi/metrabs", "topics": ["human-pose-estimation", "tensorflow2", "deep-learning", "motion-capture", "computer-vision", "machine-learning", "tensorflow", "3d-human-pose"], "description": "Estimate absolute 3D human poses from RGB images."}
{"name": "lucidrains/electra-pytorch", "full_name": "lucidrains/electra-pytorch", "topics": ["artificial-intelligence", "deep-learning", "pre-training", "transformer"], "description": "A simple and working implementation of Electra, the fastest way to pretrain language models from scratch, in Pytorch"}
{"name": "cog-imperial/omlt", "full_name": "cog-imperial/OMLT", "topics": ["optimization", "python", "neural-network", "gradient-boosted-trees", "cnn", "modeling-language", "mathematical-programming", "mathematical-modelling", "nonlinear-programming", "mixed-integer-programming", "relu", "onnx", "keras-neural-networks", "pyomo", "mixed-integer-optimization", "nonlinear-optimization"], "description": "Represent trained machine learning models as Pyomo optimization formulations"}
{"name": "dsxiangli/chinesener", "full_name": "DSXiangLi/ChineseNER", "topics": ["bert-bilstm-crf", "crf", "bert-fine-tuning", "ner", "bilstm-crf", "adversarial-transfer-learning", "multitask-learning", "chinese-ner", "msra", "msr", "people-daily", "muti-task", "tf-serving", "tensorflow-serving", "tensorflow-serving-grpc", "bert", "tensorflow", "chinesener", "data-augmentation", "mrc"], "description": "\u4e2d\u6587NER\u7684\u90a3\u4e9b\u4e8b\u513f"}
{"name": "cap-ntu/ml-model-ci", "full_name": "cap-ntu/ML-Model-CI", "topics": ["serving", "deep-learning", "continuous-integration", "inference", "convert-models", "dispatcher", "profiler", "tensorflow-serving", "onnx", "pytorch", "tensorrt", "tensorrt-inference-server", "mlops"], "description": "MLModelCI is a complete MLOps platform for managing, converting, profiling, and deploying MLaaS (Machine Learning-as-a-Service), bridging the gap between current ML training and serving systems."}
{"name": "unifyai/ivy", "full_name": "unifyai/ivy", "topics": ["python", "machine-learning", "deep-learning", "neural-network", "gpu", "autograd", "ivy", "abstraction", "template", "tensorflow", "pytorch", "mxnet", "numpy", "jax"], "description": "The Unified Machine Learning Framework"}
{"name": "sicara/tf2-yolov4", "full_name": "sicara/tf2-yolov4", "topics": ["tensorflow", "keras", "object-detection", "yolo", "yolov4"], "description": "A TensorFlow 2.0 implementation of YOLOv4: Optimal Speed and Accuracy of Object Detection"}
{"name": "thinklab-sjtu/csl_retinanet_tensorflow", "full_name": "Thinklab-SJTU/CSL_RetinaNet_Tensorflow", "topics": ["object-detection", "tensorflow", "smooth-label", "angle-classification"], "description": "Code for ECCV 2020 paper: Arbitrary-Oriented Object Detection with Circular Smooth Label"}
{"name": "nvidia/transformer-ls", "full_name": "NVIDIA/transformer-ls", "topics": ["efficient-transformers", "long-sequence", "transformer", "vision-transformer"], "description": "Official PyTorch Implementation of Long-Short Transformer (NeurIPS 2021)."}
{"name": "xiao9616/yolo4_tensorflow2", "full_name": "xiao9616/yolo4_tensorflow2", "topics": ["yolov4", "tensorflow2"], "description": "yolo 4th edition  implemented by tensorflow2.0"}
{"name": "nasa/delta", "full_name": "nasa/delta", "topics": ["deep-learning", "machine-learning", "remote-sensing", "usg-artificial-intelligence"], "description": "Deep Learning for Satellite Imagery"}
{"name": "fajieyuan/sigir2020_peterrec", "full_name": "fajieyuan/SIGIR2020_peterrec", "topics": ["transfer-learning", "recommender-system", "cold-start", "user", "profiling", "recommendation", "transfer", "representation-learning", "lifelong-learning", "continual-learning", "collaborative-filtering", "self-supervised-learning", "pretraining", "cross-domain", "bert", "bert-model", "transformer", "universal", "universal-representation", "lifelong-machine-learning"], "description": "Parameter-Efficient Transfer from Sequential Behaviors for User Modeling and Recommendation"}
{"name": "fire717/movenet.pytorch", "full_name": "fire717/movenet.pytorch", "topics": ["deep-learning", "pytorch", "pose-estimation", "light-weight-network"], "description": " A Pytorch implementation of MoveNet from Google. Include training code and pre-trained model."}
{"name": "lukaszahradnik/pyneuralogic", "full_name": "LukasZahradnik/PyNeuraLogic", "topics": ["machine-learning", "deep-learning", "graph-neural-networks", "relational-learning", "python", "geometric-deep-learning", "pytorch", "logic-programming", "differentiable-programming"], "description": "PyNeuraLogic lets you use Python to create Differentiable Logic Programs"}
{"name": "rafiqhasan/auto-tensorflow", "full_name": "rafiqhasan/auto-tensorflow", "topics": ["tensorflow", "deeplearning", "neural-networks", "machinelearning", "tfx", "machine-learning", "automl", "auto-tensorflow", "autotensorflow"], "description": "Build Low Code Automated Tensorflow explainable models in just 3 lines of code. Library created by: Hasan Rafiq - https://www.linkedin.com/in/sam04/"}
{"name": "monologg/kobigbird", "full_name": "monologg/KoBigBird", "topics": ["nlp", "transformers", "pytorch", "bert", "korean-nlp", "bigbird"], "description": "\ud83e\udd85 Pretrained BigBird Model for Korean (up to 4096 tokens)"}
{"name": "asdfjkl/neural_network_chess", "full_name": "asdfjkl/neural_network_chess", "topics": ["deep-learning", "chess", "nnue", "alphazero"], "description": "Free Book about Deep-Learning approaches for Chess (like AlphaZero, Leela Chess Zero and Stockfish NNUE)"}
{"name": "rsanshierli/easybert", "full_name": "rsanshierli/EasyBert", "topics": [], "description": "\u57fa\u4e8ePytorch\u7684Bert\u5e94\u7528\uff0c\u5305\u62ec\u547d\u540d\u5b9e\u4f53\u8bc6\u522b\u3001\u60c5\u611f\u5206\u6790\u3001\u6587\u672c\u5206\u7c7b\u4ee5\u53ca\u6587\u672c\u76f8\u4f3c\u5ea6\u7b49"}
{"name": "nvlabs/centerpose", "full_name": "NVlabs/CenterPose", "topics": ["deep-learning", "object-pose-estimation", "object-pose-tracking", "pytorch", "rgb"], "description": "Single-Stage Keypoint-based Category-level Object Pose Estimation from an RGB Image (ICRA 2022)"}
{"name": "tensorlayer/tensorlayerx", "full_name": "tensorlayer/TensorLayerX", "topics": ["tensorlayerx", "tensorlayer", "tensorflow", "paddlepaddle", "mindspore", "pytorch", "jittor", "oneflow", "deep-learning", "machine-learning", "neural-network", "python"], "description": "TensorLayerX: A Unified Deep Learning and Reinforcement Learning Framework for All Hardwares, Backends and OS."}
{"name": "thuml/flowformer", "full_name": "thuml/Flowformer", "topics": ["deep-learning"], "description": "About Code release for \"Flowformer: Linearizing Transformers with Conservation Flows\" (ICML 2022), https://arxiv.org/pdf/2202.06258.pdf"}
{"name": "github-luffy/pfld_68points_pytorch", "full_name": "github-luffy/PFLD_68points_Pytorch", "topics": ["facial-landmarks"], "description": "Implementation of PFLD For 68 Facial Landmarks By Pytorch"}
{"name": "bubbliiiing/ssd-keras", "full_name": "bubbliiiing/ssd-keras", "topics": [], "description": "\u8fd9\u662f\u4e00\u4e2assd-keras\u7684\u6e90\u7801\uff0c\u53ef\u4ee5\u7528\u4e8e\u8bad\u7ec3\u81ea\u5df1\u7684\u6a21\u578b\u3002"}
{"name": "deepdoctection/deepdoctection", "full_name": "deepdoctection/deepdoctection", "topics": ["document-parser", "document-image-analysis", "table-recognition", "ocr", "document-ai", "document-understanding", "python", "document-layout-analysis", "table-detection", "pytorch", "tensorflow", "publaynet", "pubtabnet", "layoutlm", "nlp"], "description": "A Repo For Document AI"}
{"name": "csebuetnlp/xl-sum", "full_name": "csebuetnlp/xl-sum", "topics": ["abstractive-text-summarization", "text-summarization", "text-summarisation", "abstractive-summarization", "multilingual", "multilinguality", "multilingual-text-summarization", "low-resource-languages", "dataset", "summarization-dataset", "summarization-corpora", "text-summarization-dataset", "text-summarization-model", "low-resource-summarization", "low-resource-text-summarizarion", "multilingual-summarization", "machine-learning", "deep-learning"], "description": "This repository contains the code, data, and models of the paper titled \"XL-Sum: Large-Scale Multilingual Abstractive Summarization for 44 Languages\" published in Findings of the Association for Computational Linguistics: ACL-IJCNLP 2021."}
{"name": "yangyanli/do-conv", "full_name": "yangyanli/DO-Conv", "topics": ["deep-learning", "convolutional-neural-networks", "tensorflow", "pytorch", "gluoncv"], "description": "Depthwise Over-parameterized Convolutional Layer"}
{"name": "megvii-research/sparsebit", "full_name": "megvii-research/Sparsebit", "topics": ["deep-learning", "post-training-quantization", "pruning", "quantization", "quantization-aware-training", "sparse", "tensorrt"], "description": "A model compression and acceleration toolbox based on pytorch."}
{"name": "saic-vul/imvoxelnet", "full_name": "SamsungLabs/imvoxelnet", "topics": ["pytorch", "object-detection", "3d-object-detection", "mmdetection", "imvoxelnet", "sun-rgbd", "nuscenes", "kitti", "scannet"], "description": "[WACV2022] ImVoxelNet: Image to Voxels Projection for Monocular and Multi-View General-Purpose 3D Object Detection"}
{"name": "cgcl-codes/naturalcc", "full_name": "CGCL-codes/naturalcc", "topics": ["natural-language-processing", "programming-language", "deep-learning", "toolkit"], "description": "NaturalCC: An Open-Source Toolkit for Code Intelligence"}
{"name": "imhuay/studies", "full_name": "imhuay/studies", "topics": ["nlp", "python", "pytorch", "leetcode", "deep-learning", "algorithms", "algorithm"], "description": "Notes of Develop/NLP/DeepLearning/Algorithms/LeetCodes"}
{"name": "jiachens/modelnet40-c", "full_name": "jiachens/ModelNet40-C", "topics": ["deep-learning", "point-cloud-processing", "robustness", "computer-vision", "benchmark", "data-augmentation", "regularization", "corruption-robustness", "ml-safety", "pytorch"], "description": "Repo for \"Benchmarking Robustness of 3D Point Cloud Recognition against Common Corruptions\"  https://arxiv.org/abs/2201.12296"}
{"name": "dlr-rm/singleviewreconstruction", "full_name": "DLR-RM/SingleViewReconstruction", "topics": ["deep-learning", "paper", "reconstruction", "eccv2020", "open-source", "singleview", "computer-vision"], "description": "Official Code: 3D Scene Reconstruction from a Single Viewport"}
{"name": "lemonatsu/a-nerf", "full_name": "LemonATsu/A-NeRF", "topics": [], "description": "Pytorch implementation for A-NeRF: Articulated Neural Radiance Fields for Learning Human Shape, Appearance, and Pose"}
{"name": "ar-ray-code/yolox-ros", "full_name": "Ar-Ray-code/YOLOX-ROS", "topics": ["yolox", "object-detection", "opencv", "deep-learning", "pytorch", "ros2", "openvino", "ros", "tensorrt", "onnxruntime", "tflite"], "description": "YOLOX + ROS2 object detection package"}
{"name": "samsunglabs/fcaf3d", "full_name": "SamsungLabs/fcaf3d", "topics": ["pytorch", "object-detection", "3d-object-detection", "scannet", "sun-rgbd", "s3dis", "mmdetection", "fcaf3d"], "description": "[ECCV2022] FCAF3D: Fully Convolutional Anchor-Free 3D Object Detection"}
{"name": "debeshjha/2020-cbms-doubleu-net", "full_name": "DebeshJha/2020-CBMS-DoubleU-Net", "topics": ["semantic-segmentation", "cnn-keras", "u-net", "doubleunet", "unet-image-segmentation", "tensoflow", "doubleu-net", "segmentation-models", "pytorch-implementation", "convolutional-neural-networks", "deep-learning", "image-segmentation", "medical-imaging", "unet"], "description": "DoubleU-Net for Semantic Image Segmentation in TensorFlow & Pytorch (Nominated for Best Paper Award (IEEE CBMS))"}
{"name": "google/tensorflow-recorder", "full_name": "google/tensorflow-recorder", "topics": ["tensorflow-recorder", "tfrecords", "tensorflow", "preprocessing", "image-processing", "apache-beam"], "description": "TFRecorder makes it easy to create TensorFlow records (TFRecords) from Pandas DataFrames and CSVs files containing images or structured data."}
{"name": "bubbliiiing/faster-rcnn-tf2", "full_name": "bubbliiiing/faster-rcnn-tf2", "topics": [], "description": "\u8fd9\u662f\u4e00\u4e2afaster-rcnn\u7684tensorflow2\u5b9e\u73b0\u7684\u5e93\uff0c\u53ef\u4ee5\u5229\u7528voc\u6570\u636e\u96c6\u683c\u5f0f\u7684\u6570\u636e\u8fdb\u884c\u8bad\u7ec3\u3002"}
{"name": "aws-samples/amazon-sagemaker-local-mode", "full_name": "aws-samples/amazon-sagemaker-local-mode", "topics": ["sagemaker", "amazon-sagemaker", "pytorch", "catboost", "lightgbm", "pycharm", "tensorflow-training", "pytorch-training", "sagemaker-processing", "prophet", "scikit-learn", "prophet-model", "hdbscan-clustering-algorithm", "huggingface", "huggingface-transformers", "machine-learning", "delta-lake", "gensim-word2vec", "dask", "tensorflow"], "description": "Amazon SageMaker Local Mode Examples"}
{"name": "krumiaa/mindmaker", "full_name": "krumiaa/MindMaker", "topics": ["reinforcement-learning", "learning-agent", "dqn", "unreal-engine", "ue4", "machine-learning", "artificial-intelligence", "neural-network", "openai", "gym", "wrapper", "deep-learning", "ai"], "description": "MindMaker UE4 Machine Learning Toolkit "}
{"name": "shathe/3d-mininet", "full_name": "Shathe/3D-MiniNet", "topics": [], "description": "Official Implementation in Pytorch and Tensorflow of 3D-MiniNet: Learning a 2D Representation from Point Clouds for Fast and Efficient 3D LIDAR Semantic Segmentation"}
{"name": "alibaba/easyrobust", "full_name": "alibaba/easyrobust", "topics": ["deep-learning", "image-classification", "imagenet", "adversarial-robustness", "robustness", "pretrained-models"], "description": "EasyRobust: an Easy-to-use library for state-of-the-art Robust Computer Vision Research with PyTorch."}
{"name": "aamini/evidential-deep-learning", "full_name": "aamini/evidential-deep-learning", "topics": ["neural-network", "deep-learning", "uncertainty", "confidence", "evidence", "tensorflow", "pytorch", "neurips-2020"], "description": "Learn fast, scalable, and calibrated measures of uncertainty using neural networks! "}
{"name": "mikekeith52/scalecast", "full_name": "mikekeith52/scalecast", "topics": ["python", "time-series", "machine-learning", "data-science", "deep-learning", "forecasting", "keras", "scikit-learn", "mase", "msis", "smape", "auto-ml", "easy-to-use", "scikit-learn-python", "vecm"], "description": "The practitioner's forecasting library"}
{"name": "microsoft/xpretrain", "full_name": "microsoft/XPretrain", "topics": ["multimodal-learning", "pre-training", "multimedia", "computer-vision", "nlp"], "description": "Multi-modality pre-training"}
{"name": "jacopotagliabue/recs-at-resonable-scale", "full_name": "jacopotagliabue/recs-at-resonable-scale", "topics": ["dbt", "deep-learning", "metaflow", "recommender-system", "recsys", "serverless", "reasonable-scale", "reclist"], "description": "Recommendations at \"Reasonable Scale\": joining dataOps with recSys through dbt, Merlin and Metaflow"}
{"name": "longxingtan/yolov5", "full_name": "LongxingTan/tfyolo", "topics": ["yolov5", "object-detection", "you-only-look-once", "tensorflow"], "description": "tfyolo: Efficient implementation of Yolov5 in TensorFlow2"}
{"name": "skypilot-org/skypilot", "full_name": "skypilot-org/skypilot", "topics": ["cloud-computing", "data-science", "deep-learning", "gpu", "hyperparameter-tuning", "machine-learning", "tpu", "job-queue", "job-scheduler", "cloud-management", "distributed-training", "ml-infrastructure", "multicloud", "spot-instances", "ml-platform", "cost-management", "cost-optimization", "finops"], "description": "SkyPilot is a framework for easily running machine learning workloads on any cloud through a unified interface."}
{"name": "matthias-wright/flaxmodels", "full_name": "matthias-wright/flaxmodels", "topics": ["stylegan2", "gpt2", "resnet", "vgg", "jax", "flax", "pretrained-models", "deep-learning"], "description": "Pretrained deep learning models for Jax/Flax: StyleGAN2, GPT2, VGG, ResNet, etc."}
{"name": "aniketmaurya/chitra", "full_name": "gradsflow/chitra", "topics": ["tensorflow", "image-processing", "object-detection", "deep-learning", "image-dataset", "visualization", "gradcam", "model-interpretation", "model-visualization", "image-classification", "bounding-boxes", "model-deployment", "mlops", "model-serving", "python", "machine-learning", "fastapi", "hacktoberfest", "pytorch"], "description": "A multi-functional library for full-stack Deep Learning. Simplifies Model Building, API development, and Model Deployment."}
{"name": "xv44586/ccf_2020_qa_match", "full_name": "xv44586/ccf_2020_qa_match", "topics": ["keras", "bert", "ccf", "top1"], "description": "ccf 2020 qa match competition top1"}
{"name": "escvm/efficient-capsnet", "full_name": "EscVM/Efficient-CapsNet", "topics": ["deep-learning", "computer-vision", "capsule-network", "tensorflow"], "description": "Official TensorFlow code for the paper \"Efficient-CapsNet: Capsule Network with Self-Attention Routing\"."}
{"name": "ivy-dl/ivy", "full_name": "unifyai/ivy", "topics": ["python", "machine-learning", "deep-learning", "neural-network", "gpu", "autograd", "ivy", "abstraction", "template", "tensorflow", "pytorch", "mxnet", "numpy", "jax"], "description": "The Unified Machine Learning Framework"}
{"name": "geekjr/quickai", "full_name": "geekjr/quickai", "topics": ["ai", "dl", "ml", "python", "neural-network", "nlp", "easy-to-use", "fast", "research", "tensorflow2", "pytorch", "huggingface-transformers", "gpt", "gpt-neo", "bert", "artificial-intelligence", "quickai", "yolo", "object-detection", "deep-learning"], "description": "QuickAI is a Python library that makes it extremely easy to experiment with state-of-the-art Machine Learning models."}
{"name": "open-mmlab/mmeval", "full_name": "open-mmlab/mmeval", "topics": ["machine-learning", "metrics", "python", "pytorch", "tensorflow"], "description": "A unified evaluation library for multiple machine learning libraries"}
{"name": "abhijithneilabraham/tableqa", "full_name": "abhijithneilabraham/tableQA", "topics": ["querying-natural-language", "tabular-data", "nlp", "tableqa", "qa", "question-answering", "table-qa", "machine-learning", "sql", "ai", "nl2sql", "sql-query", "sql-generation", "csv", "database"], "description": "AI Tool for querying natural language on tabular data."}
{"name": "terrytangyuan/distributed-ml-patterns", "full_name": "terrytangyuan/distributed-ml-patterns", "topics": ["machine-learning", "distributed-systems", "cloud-computing", "cloud-native", "distributed-machine-learning", "large-scale-machine-learning", "python", "tensorflow", "kubernetes", "argo-workflows", "kubeflow", "machine-learning-pipelines", "manning-publications", "book", "data-science", "devops", "mlops"], "description": "Distributed Machine Learning Patterns (Manning Publications). Now available for early access. Read it online for free!  https://bit.ly/2RKv8Zo"}
{"name": "bubbliiiing/yolov4-tiny-keras", "full_name": "bubbliiiing/yolov4-tiny-keras", "topics": [], "description": "\u8fd9\u662f\u4e00\u4e2aYoloV4-tiny-keras\u7684\u6e90\u7801\uff0c\u53ef\u4ee5\u7528\u4e8e\u8bad\u7ec3\u81ea\u5df1\u7684\u6a21\u578b\u3002"}
{"name": "zengxianyu/crfill", "full_name": "zengxianyu/crfill", "topics": ["inpainting", "image-inpainting", "gan", "generative-adversarial-network", "generative-adversarial-networks", "pytorch", "iccv2021", "image-completion"], "description": "CR-Fill: Generative Image Inpainting with Auxiliary Contextual Reconstruction. ICCV 2021"}
{"name": "google/deepconsensus", "full_name": "google/deepconsensus", "topics": ["bioinformatics", "transformers", "deep-learning", "long-read-sequencing"], "description": "DeepConsensus uses gap-aware sequence transformers to correct errors in Pacific Biosciences (PacBio) Circular Consensus Sequencing (CCS) data."}
{"name": "zlthinker/kfnet", "full_name": "zlthinker/KFNet", "topics": ["kalman-filtering", "uncertainties", "optical-flows", "tensorflow", "7scenes", "localization"], "description": "KFNet: Learning Temporal Camera Relocalization using Kalman Filtering (CVPR 2020 Oral)"}
{"name": "intel/lpot", "full_name": "intel/neural-compressor", "topics": ["low-precision", "pruning", "sparsity", "auto-tuning", "knowledge-distillation", "quantization", "quantization-aware-training", "post-training-quantization", "deep-learning"], "description": "Intel\u00ae Neural Compressor (formerly known as Intel\u00ae Low Precision Optimization Tool), targeting to provide unified APIs for network compression technologies, such as low precision quantization, sparsity, pruning, knowledge distillation, across different deep learning frameworks to pursue optimal inference performance."}
{"name": "dptech-corp/uni-fold-jax", "full_name": "dptech-corp/Uni-Fold-jax", "topics": ["alphafold2", "deep-learning", "jax"], "description": "Trainable AlphaFold implementation in JAX"}
{"name": "ziniuwan/maed", "full_name": "ziniuwan/maed", "topics": ["pytorch", "deep-learning"], "description": "[ICCV 2021] Encoder-decoder with Multi-level Attention for 3D Human Shape and Pose Estimation"}
{"name": "keonlee9420/comprehensive-transformer-tts", "full_name": "keonlee9420/Comprehensive-Transformer-TTS", "topics": ["text-to-speech", "supervised", "unsupervised", "non-autoregressive", "non-ar", "multi-speaker", "ultimate-tts", "tts", "pytorch", "comprehensive", "single-speaker", "fastspeech", "transformer", "neural-tts", "fastspeech2", "hifi-gan", "mel-gan", "sota", "speech-synthesis", "deep-learning"], "description": "A Non-Autoregressive Transformer based Text-to-Speech, supporting a family of SOTA transformers with supervised and unsupervised duration modelings. This project grows with the research community, aiming to achieve the ultimate TTS"}
{"name": "adriangb/scikeras", "full_name": "adriangb/scikeras", "topics": ["scikit-learn", "machine-learning", "python", "data-science", "deep-learning", "deep-neural-networks", "keras", "tensorflow", "wrappers"], "description": "Scikit-Learn API wrapper for Keras."}
{"name": "oneflow-inc/one-yolov5", "full_name": "Oneflow-Inc/one-yolov5", "topics": ["deep-learning", "oneflow", "yolov5"], "description": "A more efficient yolov5 with oneflow backend \ud83c\udf89\ud83c\udf89\ud83c\udf89"}
{"name": "alexklwong/unsupervised-depth-completion-visual-inertial-odometry", "full_name": "alexklwong/unsupervised-depth-completion-visual-inertial-odometry", "topics": ["ucla", "depth-completion", "3d-reconstruction", "unsupervised-learning", "machine-learning", "sensor-fusion", "deep-learning", "self-supervised-learning", "depth", "icra", "ral", "tensorflow", "computer-vision", "kitti", "void", "3d-vision", "depth-estimation"], "description": "Tensorflow implementation of Unsupervised Depth Completion from Visual Inertial Odometry (in RA-L January 2020 & ICRA 2020)"}
{"name": "tanjeffreyz/auto-maple", "full_name": "tanjeffreyz/auto-maple", "topics": ["ai", "python", "deep-learning", "maplestory", "computer-vision", "bot"], "description": "Artificial intelligence software for MapleStory that uses various machine learning and computer vision techniques to navigate challenging in-game environments"}
{"name": "graphsignal/graphsignal", "full_name": "graphsignal/graphsignal-python", "topics": ["machine-learning", "data-science", "deep-learning", "huggingface", "inference", "jax", "keras", "onnxruntime", "pytorch", "tensorflow", "inference-optimization", "debugging", "monitoring", "python"], "description": "Graphsignal Python agent"}
{"name": "jh-jeong/contrad", "full_name": "jh-jeong/ContraD", "topics": ["deep-learning", "generative-adversarial-network", "gan", "contrastive-learning", "unsupervised-learning", "data-augmentation", "iclr2021", "pytorch"], "description": "Code for the paper \"Training GANs with Stronger Augmentations via Contrastive Discriminator\" (ICLR 2021)"}
{"name": "toni-sm/skrl", "full_name": "Toni-SM/skrl", "topics": ["reinforcement-learning", "python", "openai-gym", "isaac-gym", "pytorch", "deep-learning", "deepmind", "gym", "isaac-sim", "nvidia-omniverse", "skrl", "rl", "gymnasium", "machine-learning", "robosuite", "robotics", "isaac-orbit"], "description": "Modular and flexible reinforcement learning library with support for Isaac Gym and Omniverse Isaac Gym environments"}
{"name": "hellonlp/sentiment-analysis", "full_name": "hellonlp/sentiment-analysis", "topics": ["text-classification", "tensorflow", "text-cnn", "sentiment-analysis", "bert", "cnn", "textcnn", "bayes", "dict"], "description": "\u60c5\u611f\u5206\u6790\u3001\u6587\u672c\u5206\u7c7b\u3001\u8bcd\u5178\u3001bayes\u3001sentiment analysis\u3001TextCNN\u3001classification\u3001tensorflow\u3001BERT\u3001CNN\u3001text classification"}
{"name": "pytorchlightning/lightning-tutorials", "full_name": "Lightning-AI/tutorials", "topics": ["tutorials", "jupyter-notebook", "machine-learning", "deep-learning", "notebooks", "python-scripts", "lightning"], "description": "Collection of Pytorch lightning tutorial form as rich scripts automatically transformed to ipython notebooks."}
{"name": "tntwen/openvino-yolov4", "full_name": "TNTWEN/OpenVINO-YOLOV4", "topics": ["openvino", "yolov4", "yolov4-relu", "yolov4-tiny", "tensorflow", "yolov4-tiny-3l", "scaledyolov4"], "description": "This is implementation of YOLOv4,YOLOv4-relu,YOLOv4-tiny,YOLOv4-tiny-3l,Scaled-YOLOv4 and INT8 Quantization in OpenVINO2021.3"}
{"name": "prasunroy/stefann", "full_name": "prasunroy/stefann", "topics": ["stefann", "fannet", "colornet", "scene-text-editor", "font-generation", "color-transfer", "computer-vision", "deep-learning", "cvpr", "cvpr2020"], "description": ":fire: [CVPR 2020] STEFANN: Scene Text Editor using Font Adaptive Neural Network @ The IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR) 2020."}
{"name": "mabaorui/neuralpull", "full_name": "mabaorui/NeuralPull", "topics": ["3d-reconstruction", "deep-learning", "icml", "point-cloud", "tensorflow"], "description": "Implementation of ICML'2021:Neural-Pull: Learning Signed Distance Functions from Point Clouds by Learning to Pull Space onto Surfaces"}
{"name": "tui-nicr/esanet", "full_name": "TUI-NICR/ESANet", "topics": ["semantic-segmentation", "rgbd", "deep-learning", "deep-neural-networks", "machine-learning", "mobile-robotics", "real-time", "pytorch"], "description": "ESANet: Efficient RGB-D Semantic Segmentation for Indoor Scene Analysis"}
{"name": "mabaorui/onsurfaceprior", "full_name": "mabaorui/OnSurfacePrior", "topics": ["3d-reconstruction", "deep-learning", "point-cloud", "cvpr"], "description": "Implementation of CVPR'2022:Reconstructing Surfaces for Sparse Point Clouds with On-Surface Priors"}
{"name": "antonior92/automatic-ecg-diagnosis", "full_name": "antonior92/automatic-ecg-diagnosis", "topics": ["deep-learning", "convolutional-neural-networks", "ecg", "ecg-signal", "ecg-classification", "atrial-fibrillation", "atrial-fibrillation-detection"], "description": "Scripts and modules for training and testing neural network for ECG automatic classification. Companion code to the paper  \"Automatic diagnosis of the 12-lead ECG using a deep neural network\". "}
{"name": "blobcity/autoai", "full_name": "blobcity/autoai", "topics": ["automl", "codegen", "ai", "ml", "autoai", "machine-learning", "deep-learning", "python"], "description": "Python based framework for Automatic AI for Regression and Classification over numerical data. Performs model search, hyper-parameter tuning, and high-quality Jupyter Notebook code generation."}
{"name": "bm-k/kosentencebert-etri", "full_name": "BM-K/KoSentenceBERT-ETRI", "topics": ["sentence-bert", "sentence-similarity", "natural-language-processing", "korean-sentence-bert"], "description": "Sentence Embeddings using Siamese ETRI KoBERT-Networks"}
{"name": "txsun1997/black-box-tuning", "full_name": "txsun1997/Black-Box-Tuning", "topics": ["black-box-optimization", "deep-learning", "few-shot-learning", "language-model", "natural-language-processing", "pytorch"], "description": "ICML'2022: Black-Box Tuning for Language-Model-as-a-Service & EMNLP'2022: BBTv2: Towards a Gradient-Free Future with Large Language Models"}
{"name": "zjunlp/knowprompt", "full_name": "zjunlp/KnowPrompt", "topics": ["relation-extraction", "prompt-tuning", "few-shot-learning", "tacred", "dialogre", "semeval", "prompt", "knowprompt", "prompt-learning", "re", "knowledge-informed-prompt-learning", "pytorch", "dataset", "text-classification"], "description": "Code and datasets for the WWW2022 paper \"KnowPrompt: Knowledge-aware Prompt-tuning with Synergistic Optimization for Relation Extraction.\""}
{"name": "jittor/jdet", "full_name": "Jittor/JDet", "topics": ["deep-learning", "object-detection", "oriented-object-detection", "aerial-image-detection", "jittor"], "description": "JDet is an object detection benchmark based on Jittor. Mainly focus on aerial image object detection (oriented object detection)."}
{"name": "lonepatient/nezha_chinese_pytorch", "full_name": "lonePatient/NeZha_Chinese_PyTorch", "topics": ["chinese", "pytorch", "language-model", "nezha"], "description": "NEZHA: Neural Contextualized Representation for Chinese Language Understanding"}
{"name": "nvidia-merlin/models", "full_name": "NVIDIA-Merlin/models", "topics": ["deep-learning", "machine-learning", "pytorch", "recommendation-system", "recommender-system", "tensorflow", "dask", "gpu", "rapidsai", "recsys"], "description": "Merlin Models is a collection of deep learning recommender system model reference implementations"}
{"name": "natanielruiz/disrupting-deepfakes", "full_name": "natanielruiz/disrupting-deepfakes", "topics": ["adversarial-attacks", "disrupting-deepfakes", "deepfakes", "deep-learning", "machine-learning", "computer-vision", "deepfake-detection", "face-swap", "faceswap", "fake-news", "defending", "defending-deepfakes"], "description": "\ud83d\udd25\ud83d\udd25Defending Against Deepfakes Using Adversarial Attacks on Conditional Image Translation Networks"}
{"name": "moving-ai/virtual-walk", "full_name": "Moving-AI/virtual-walk", "topics": ["lstm-model", "google-street", "posenet", "webcam", "tensorflow", "virtual-reality", "google-maps"], "description": "Virtual walks in Google Street View using PoseNet and applying Deep Learning models to recognize actions."}
{"name": "ziweiwangthu/bidet", "full_name": "ZiweiWangTHU/BiDet", "topics": [], "description": "This is the official pytorch implementation for paper: BiDet: An Efficient Binarized Object Detector, which is accepted by CVPR2020. "}
{"name": "twni2016/pomdp-baselines", "full_name": "twni2016/pomdp-baselines", "topics": ["pomdp", "recurrent-neural-networks", "meta-rl", "robust-rl", "generalization", "deep-reinforcement-learning", "pytorch", "td3", "sac", "discrete-sac", "credit-assignment"], "description": "Simple (but often Strong) Baselines for POMDPs in PyTorch - ICML 2022"}
{"name": "jittor/jgan", "full_name": "Jittor/JGAN", "topics": ["gan", "generative-adversarial-network", "deep-learning", "gans", "jittor"], "description": "JGAN model zoo supports 27 kinds of mainstream GAN models with high speed for jittor."}
{"name": "datacanvasio/hyperts", "full_name": "DataCanvasIO/HyperTS", "topics": ["classification", "forecasting", "regression", "prophet", "covariates", "multivariate", "time-series", "lstnet", "meta-features", "nbeats", "neural-architecture-search", "hyperparameter-optimization", "autots", "tensorflow", "automl", "inceptiontime", "anomaly-detection", "iforest", "autodl"], "description": "A Full-Pipeline Automated Time Series (AutoTS) Analysis Toolkit."}
{"name": "ximilar-com/xcenternet", "full_name": "Ximilar-com/xcenternet", "topics": ["object-detection", "detection-model", "tensorflow", "python", "machine-learning", "computer-vision", "centernet", "deep-learning", "keras"], "description": "Fast anchor free Object Detection based on CenterNet (Objects As Points) and TTFNet (Training-Time-Friendly Network). Implemented in TensorFlow 2.4+."}
{"name": "jacobkrantz/vln-ce", "full_name": "jacobkrantz/VLN-CE", "topics": ["ai", "computer-vision", "robotics", "deep-learning", "research", "python"], "description": "Vision-and-Language Navigation in Continuous Environments using Habitat"}
{"name": "grigorisg9gr/polynomial_nets", "full_name": "grigorisg9gr/polynomial_nets", "topics": ["polynomial-neural-networks", "pi-nets", "image-generation", "mesh-representation-learning", "face-verification", "image-classification", "deep-learning", "deep-neural-networks"], "description": "Official Implementation of the CVPR'20 paper '\u03a0-nets: Deep Polynomial Neural Networks' and its T-PAMI-21 extension."}
{"name": "nimbleedge/envisedge", "full_name": "NimbleEdge/EnvisEdge", "topics": ["recommender-system", "privacy", "machine-learning", "edge-computing", "pytorch", "deep-learning", "python"], "description": "Deploy recommendation engines with Edge Computing"}
{"name": "yangnaruto/fq-gan", "full_name": "YangNaruto/FQ-GAN", "topics": ["biggan", "gans", "pytorch", "tensorflow", "image-translation", "image-generation", "stylegan"], "description": "Official implementation of FQ-GAN"}
{"name": "ylsung/vl_adapter", "full_name": "ylsung/VL_adapter", "topics": ["vision-and-language", "adapters", "transformers", "prompt-tuning", "pytorch", "vl-adapter"], "description": "PyTorch code for \"VL-Adapter: Parameter-Efficient Transfer Learning for Vision-and-Language Tasks\" (CVPR2022)"}
{"name": "hku-bal/clair3", "full_name": "HKU-BAL/Clair3", "topics": ["deep-learning", "variant-calling", "computational-biology", "nanopore", "long-reads", "genomics", "ont-data", "ont-models"], "description": "Clair3 - Symphonizing pileup and full-alignment for high-performance long-read variant calling"}
{"name": "obss/jury", "full_name": "obss/jury", "topics": ["natural-language-processing", "evaluation", "huggingface", "transformers", "datasets", "metrics", "pytorch", "python", "nlp", "machine-learning", "evaluate", "nlp-evaluation"], "description": "Comprehensive NLP Evaluation System"}
{"name": "adapt-python/adapt", "full_name": "adapt-python/adapt", "topics": ["domain-adaptation", "transfer-learning", "few-shot-learning", "zero-shot-learning", "adversarial-learning", "adversarial-networks", "feature-selection", "importance-sampling", "regularization-parameters", "machine-learning", "deep-learning", "generalization", "python", "tensorflow", "scikit-learn", "dann"], "description": "Awesome Domain Adaptation Python Toolbox"}
{"name": "compvis/net2net", "full_name": "CompVis/net2net", "topics": ["inn", "pytorch", "lightning", "autoencoders", "gans", "normalizing-flows", "generative-model", "streamlit", "pytorch-lightning"], "description": "Network-to-Network Translation with Conditional Invertible Neural Networks"}
{"name": "zhugekongan/torch-template-for-deep-learning", "full_name": "ZhugeKongan/torch-template-for-deep-learning", "topics": [], "description": "Pytorch Implementations of large number  classical backbone CNNs, data enhancement, torch loss, attention, visualization and  some common algorithms."}
{"name": "kevinnan-teen/intelligent-traffic-based-on-cv", "full_name": "Kevinnan-teen/Intelligent-Traffic-Based-On-CV", "topics": ["yolov3", "pytorch", "srs", "python"], "description": "\u672c\u9879\u76ee\u662f\u57fa\u4e8e\u8ba1\u7b97\u673a\u89c6\u89c9\u7684\u7aef\u5230\u7aef\u4ea4\u901a\u8def\u53e3\u667a\u80fd\u76d1\u63a7\u7cfb\u7edf\uff0e\u91c7\u7528\u7684\u8bbe\u8ba1\u67b6\u6784\u7531SRS\u6d41\u5a92\u4f53\u670d\u52a1\u5668\u3001GPU\u670d\u52a1\u5668\u3001Local\u5ba2\u6237\u7aef\u4e09\u90e8\u5206\u7ec4\u6210\uff0e\u53ef\u5c06\u8fdc\u7aef\u89c6\u9891\u6d41\u901a\u8fc7rtmp\u534f\u8bae\u4f20\u8f93\u5230\u6d41\u5a92\u4f53\u670d\u52a1\u5668\uff0c\u7136\u540e\u7ecf\u8fc7\u76ee\u6807\u68c0\u6d4b\u7b49\u4e00\u4e9b\u5217\u7b97\u6cd5\u5bf9\u89c6\u9891\u8fdb\u884c\u5206\u6790\uff0c\u6700\u540e\u5728\u672c\u5730\u5ba2\u6237\u7aef\u67e5\u770b\u5206\u6790\u7ed3\u679c\uff0e\u9879\u76ee\u4e3b\u8981\u7528Python\u5b9e\u73b0\uff0c\u6d41\u5a92\u4f53\u670d\u52a1\u5668\u91c7\u7528\u5f00\u6e90\u7684SRS\u5b9e\u65f6\u89c6\u9891\u670d\u52a1\u5668\u642d\u5efa\uff0cGPU\u670d\u52a1\u5668\u4f7f\u7528YOLO\u6a21\u578b\u5b9e\u73b0\u9053\u8def\u76ee\u6807\u5982\u4eba\u3001\u8f66\u3001\u4ea4\u901a\u706f\u7b49\u7269\u4f53\u7684\u8bc6\u522b\uff0c\u540c\u65f6\u8fd8\u652f\u6301\u5e76\u53d1\u8fde\u63a5\uff0e\u5ba2\u6237\u7aef\u57fa\u4e8ePyQt5\u8fdb\u884c\u5f00\u53d1\uff0e"}
{"name": "isl-org/deeplagrangianfluids", "full_name": "isl-org/DeepLagrangianFluids", "topics": ["deeplearning", "fluids", "simulation", "convolutional-neural-networks", "convnet", "cnn"], "description": "Code repository for \"Lagrangian Fluid Simulation with Continuous Convolutions\", ICLR 2020."}
{"name": "falkonml/falkon", "full_name": "FalkonML/falkon", "topics": ["kernel-methods", "machine-learning", "large-scale-learning", "kernel", "pytorch", "ai", "python"], "description": "Large-scale, multi-GPU capable, kernel solver"}
{"name": "microsoft/molecule-generation", "full_name": "microsoft/molecule-generation", "topics": ["deep-learning", "graph-neural-networks", "generative-model", "molecule-generation"], "description": "Implementation of MoLeR: a generative model of molecular graphs which supports scaffold-constrained generation"}
{"name": "mit-han-lab/pytorch-quantum", "full_name": "mit-han-lab/torchquantum", "topics": ["pytorch-quantum", "quantum", "quantum-machine-learning", "neural-network", "machine-learning", "quantum-computing", "pytorch", "deep-learning", "system", "ml-for-systems", "quantum-simulation", "quantum-neural-network", "parameterized-quantum-circuit"], "description": "A PyTorch-based framework for Quantum Simulation, Quantum Machine Learning, Quantum Neural Networks, Parameterized Quantum Circuits with support for easy deployments on real quantum computers."}
{"name": "tianheyu927/pcgrad", "full_name": "tianheyu927/PCGrad", "topics": ["multi-task-learning", "deep-learning", "deep-reinforcement-learning"], "description": "Code for \"Gradient Surgery for Multi-Task Learning\""}
{"name": "zhangqianhui/gazeanimation", "full_name": "zhangqianhui/GazeAnimation", "topics": ["gaze-estimation", "generative-adversarial-network", "gaze-correction", "gaze-redirection", "facial-attribute-editing"], "description": "Give a portrait face, move the gaze up"}
{"name": "mabaorui/predictablecontextprior", "full_name": "mabaorui/PredictableContextPrior", "topics": ["3d-reconstruction", "deep-learning", "cvpr", "point-cloud"], "description": "Implementation of CVPR'2022:Surface Reconstruction from Point Clouds by Learning Predictive Context Priors"}
{"name": "spokestack/spokestack-python", "full_name": "spokestack/spokestack-python", "topics": ["text-to-speech", "nlu", "voice-recognition", "tts", "nlp", "natural-language-processing", "natural-language-understanding", "speech-recognition", "speech-to-text", "speech-synthesis", "raspberry-pi", "keyword-spotting", "bot", "tensorflow", "embedded", "deep-learning", "machine-learning", "smart-home"], "description": "Spokestack is a library that allows a user to easily incorporate a voice interface into any Python application with a focus on embedded systems."}
{"name": "stefandenn3r/unsupervised_anomaly_detection_brain_mri", "full_name": "StefanDenn3r/Unsupervised_Anomaly_Detection_Brain_MRI", "topics": ["deep-learning", "unsupervised-learning", "anomaly-detection", "segmentation", "mri", "gan", "autoencoder", "variational-autoencoder"], "description": "Autoencoders for Unsupervised Anomaly Segmentation in Brain MR Images: A Comparative Study"}
{"name": "alibabaresearch/damo-convai", "full_name": "AlibabaResearch/DAMO-ConvAI", "topics": ["conversational-ai", "deep-learning", "natural-language-processing", "dialog"], "description": "DAMO-ConvAI: The official repository which contains the codebase for Alibaba DAMO Conversational AI."}
{"name": "stevewongv/instanceshadowdetection", "full_name": "stevewongv/InstanceShadowDetection", "topics": ["cvpr2020", "computer-vision", "deep-learning", "shadow-detection", "detectron2", "instance-shadow-detection", "instance-detection"], "description": "Instance Shadow Detection (CVPR 2020)"}
{"name": "allanyiin/yolov4", "full_name": "AllanYiin/YoloV4", "topics": ["yolo", "pytorch"], "description": "Yolo v4 in pytorch, tensorflow and onnx"}
{"name": "fangvv/uav-ddpg", "full_name": "fangvv/UAV-DDPG", "topics": ["ddpg", "reinforcement-learning-algorithms", "tensorflow", "unmanned-aerial-vehicle", "deep-deterministic-policy-gradient", "reinforcement-learning", "dqn", "actor-critic-algorithm", "uav", "computation-offloading"], "description": "Code for paper \"Computation Offloading Optimization for UAV-assisted Mobile Edge Computing: A Deep Deterministic Policy Gradient Approach\""}
{"name": "ha0tang/bigraphgan", "full_name": "Ha0Tang/BiGraphGAN", "topics": ["bmvc", "image-generation", "graph", "bipartite-graphs", "person", "person-image-generation", "selectiongan", "pytorch", "deepfashion", "bmvc20"], "description": "[BMVC 2020 Oral] Bipartite Graph Reasoning GANs for Person Image Generation"}
{"name": "aisingapore/peekingduck", "full_name": "aisingapore/PeekingDuck", "topics": ["computer-vision", "deep-learning", "pose-estimation", "object-detection", "object-tracking", "python", "pipeline", "nodes"], "description": "A modular framework built to simplify Computer Vision inference workloads."}
{"name": "servicenow/azimuth", "full_name": "ServiceNow/azimuth", "topics": ["data-analysis", "error-analysis", "explainability", "machine-learning", "nlp", "text-classification", "saliency-map", "similarity-analysis", "uncertainty-quantification", "explainable-ai", "xai"], "description": "Helping AI practitioners better understand their datasets and models in text classification. From ServiceNow."}
{"name": "alibaba-nlp/kb-ner", "full_name": "Alibaba-NLP/KB-NER", "topics": ["named-entity-recognition", "ner", "semeval-2022", "multimodal", "nlp", "semeval", "naacl2022"], "description": "Winner system (DAMO-NLP) of SemEval 2022 MultiCoNER shared task over 10 out of 13 tracks."}
{"name": "bubbliiiing/ssd-tf2", "full_name": "bubbliiiing/ssd-tf2", "topics": [], "description": "\u8fd9\u662f\u4e00\u4e2assd-tf2\uff08tensorflow2\uff09\u7684\u6e90\u7801\uff0c\u53ef\u4ee5\u7528\u4e8e\u8bad\u7ec3\u81ea\u5df1\u7684\u6a21\u578b\u3002"}
{"name": "qiaoranc/tf_resnest_regnet_model", "full_name": "QiaoranC/tf_ResNeSt_RegNet_model", "topics": [], "description": "tensorflow 2.x version of ResNeSt,RegNet,DETR"}
{"name": "materialsvirtuallab/m3gnet", "full_name": "materialsvirtuallab/m3gnet", "topics": ["deep-learning", "graph", "machine-learning", "materials-science", "neural-network"], "description": "Materials graph network with 3-body interactions featuring a DFT surrogate crystal relaxer and a state-of-the-art property predictor."}
{"name": "karel911/tracer", "full_name": "Karel911/TRACER", "topics": ["pytorch", "aaai2022", "aaai-2022", "pytorch-implementation", "image-segmentation", "salient-object-detection", "attention", "attention-mechanism", "background-removal"], "description": "TRACER: Extreme Attention Guided Salient Object Tracing Network (AAAI 2022) implementation in PyTorch"}
{"name": "jonasschult/mask3d", "full_name": "JonasSchult/Mask3D", "topics": ["3d-computer-vision", "computer-vision", "deep-learning", "deep-neural-networks", "pytorch"], "description": "Mask3D predicts accurate 3D semantic instances achieving state-of-the-art on ScanNet, ScanNet200, S3DIS and STPLS3D."}
{"name": "tum-daml/gemnet_pytorch", "full_name": "TUM-DAML/gemnet_pytorch", "topics": ["paper", "gnn", "pytorch", "graph-neural-networks"], "description": "GemNet model in PyTorch, as proposed in \"GemNet: Universal Directional Graph Neural Networks for Molecules\" (NeurIPS 2021)"}
{"name": "jittor/gan-jittor", "full_name": "Jittor/JGAN", "topics": ["gan", "generative-adversarial-network", "deep-learning", "gans", "jittor"], "description": "JGAN model zoo supports 27 kinds of mainstream GAN models with high speed for jittor."}
{"name": "ink-usc/commongen", "full_name": "INK-USC/CommonGen", "topics": ["natural-language-processing", "commonsense-reasoning", "nlg-dataset", "natural-language-generation", "language-generation-dataset", "machine-reasoning", "deep-learning", "text-generation", "nlp-datasets"], "description": "A Constrained Text Generation Challenge Towards Generative Commonsense Reasoning"}
{"name": "rayhane-mamah/efficient-vdvae", "full_name": "Rayhane-mamah/Efficient-VDVAE", "topics": ["python", "jax", "pytorch", "paper", "vae", "image-generation", "representation-learning", "unsupervised-learning"], "description": "Official Pytorch and JAX implementation of \"Efficient-VDVAE: Less is more\""}
{"name": "cluebenchmark/dataclue", "full_name": "CLUEbenchmark/DataCLUE", "topics": ["data-centric", "nlp", "chinese", "classification-algorithm", "ai", "human-in-the-loop"], "description": "DataCLUE: \u6570\u636e\u4e3a\u4e2d\u5fc3\u7684NLP\u57fa\u51c6\u548c\u5de5\u5177\u5305"}
{"name": "yifanzhang713/ia-ssd", "full_name": "yifanzhang713/IA-SSD", "topics": ["point-cloud", "pytorch", "object-detection", "autonomous-driving", "3d-object-detection", "ia-ssd"], "description": "Not All Points Are Equal: Learning Highly Efficient Point-based Detectors for 3D LiDAR Point Clouds (CVPR 2022, Oral)"}
{"name": "zjunlp/promptkg", "full_name": "zjunlp/PromptKG", "topics": ["knowledge-graph", "genkgc", "prompt-tuning", "relation-extraction", "link-prediction", "retrievalre", "demo-tuning", "pytorch", "promptkg", "retroprompt", "knowledge-informed-prompt-learning", "question-answering", "dialogue", "awsome-list", "paper-list", "retrieval-augmented", "lambdakg", "natural-language-processing", "nlp", "paper"], "description": "PromptKG Family: a Gallery of Prompt Learning & KG-related research works, toolkits, and paper-list."}
{"name": "zilliztech/phantoscope", "full_name": "zilliztech/phantoscope", "topics": ["deep-learning", "deep-neural-networks", "machine-learning", "cloud-native", "image-search", "microservices", "milvus"], "description": "Open Source, Cloud Native, RESTful Search Engine Powered by Neural Networks  "}
{"name": "mdhmz1/auto-annotate", "full_name": "mdhmz1/Auto-Annotate", "topics": ["hacktoberfest", "deep-learning", "image-processing", "machine-learning", "object-detection"], "description": "Auto-Annotate - Automatically annotate your entire image directory by a single command.  As simple as saying - \"Annotate all the street sign (label) in the autonomous car dataset (directory)\" and BAM! DONE. Each and every image with a street sign in the diverse dataset directory containing images of all sorts which have a street sign are filtered and the segmentation annotation is performed in a single command.  The Auto-Annotate tool provides auto annotation of segmentation masks for the objects in the images inside some directory based on the labels. Auto-Annotate is able to provide automated annotations for the labels defined in the COCO Dataset and also supports Custom Labels. "}
{"name": "tencent-quantum-lab/tensorcircuit", "full_name": "tencent-quantum-lab/tensorcircuit", "topics": ["machine-learning", "quantum", "quantum-algorithms", "quantum-circuit", "quantum-computing", "quantum-simulation", "automatic-differentiation", "tensor-network", "neural-network", "tensorflow", "jax", "nisq", "pytorch", "quantum-noise", "matrix-product-states", "open-quantum-systems", "quantum-machine-learning", "variational-quantum-algorithms", "quantum-error-mitigation"], "description": "Tensor network based quantum software framework for the NISQ era"}
{"name": "jayleicn/tvretrieval", "full_name": "jayleicn/TVRetrieval", "topics": ["video-retrieval", "dataset", "pytorch", "tvr", "tvc"], "description": "[ECCV 2020] PyTorch code for XML on TVRetrieval dataset - TVR: A Large-Scale Dataset for Video-Subtitle Moment Retrieval"}
{"name": "tensorflow/recommenders-addons", "full_name": "tensorflow/recommenders-addons", "topics": ["tensorflow-recommenders-addons", "sig-recommenders", "machine-learning", "recommender-system", "tensorflow", "deep-learning", "dynamic-embedding"], "description": "Additional utils and helpers to extend TensorFlow when build recommendation systems, contributed and maintained by SIG Recommenders."}
{"name": "yerfor/syntaspeech", "full_name": "yerfor/SyntaSpeech", "topics": ["gan", "pytorch", "speech-synthesis", "tts"], "description": "SyntaSpeech: Syntax-aware Generative Adversarial Text-to-Speech; IJCAI 2022; Official code"}
{"name": "jonasgeiping/breaching", "full_name": "JonasGeiping/breaching", "topics": ["security", "machine-learning", "pytorch", "federated-learning", "decentralized-learning", "privacy-audit"], "description": "Breaching privacy in federated learning scenarios for vision and text"}
{"name": "faustomorales/vit-keras", "full_name": "faustomorales/vit-keras", "topics": ["keras", "computer-vision"], "description": "Keras implementation of ViT (Vision Transformer)"}
{"name": "alibaba/hybridbackend", "full_name": "alibaba/HybridBackend", "topics": ["deep-learning", "recommender-system", "parquet", "gpu", "hybrid-parallelism"], "description": "A high-performance framework for training wide-and-deep recommender systems on heterogeneous cluster"}
{"name": "tonyngjichun/solar", "full_name": "tonyngjichun/SOLAR", "topics": ["image-retrieval", "global-descriptors", "local-descriptors", "second-order", "non-local-block", "eccv-2020", "eccv2020", "eccv", "computer-vision", "deep-learning", "pytorch", "cnn"], "description": "PyTorch code for \"SOLAR: Second-Order Loss and Attention for Image Retrieval\". In ECCV 2020"}
{"name": "gyunggyung/kogpt2-finetuning", "full_name": "gyunggyung/KoGPT2-FineTuning", "topics": ["nlp", "gpt2", "kogpt2", "finetuning", "korean-nlp", "fine-tuning", "korean", "text-generation", "lyrics-generator", "language-model"], "description": "\ud83d\udd25 Korean GPT-2, KoGPT2 FineTuning cased. \ud55c\uad6d\uc5b4 \uac00\uc0ac \ub370\uc774\ud130 \ud559\uc2b5 \ud83d\udd25"}
{"name": "kieranjwood/slow-momentum-fast-reversion", "full_name": "kieranjwood/slow-momentum-fast-reversion", "topics": ["deep-learning", "machine-learning", "trading", "change-point-detection", "trading-strategies", "quantum-mechanics", "momentum-trading-strategy"], "description": "This code accompanies the the paper Slow Momentum with Fast Reversion: A Trading Strategy Using Deep Learning and Changepoint Detection (https://arxiv.org/pdf/2105.13727.pdf)."}
{"name": "alshedivat/meta-blocks", "full_name": "alshedivat/meta-blocks", "topics": ["learning-to-learn", "meta-learning", "deep-learning", "benchmark", "toolbox", "tensorflow", "python", "api"], "description": "A modular toolbox for meta-learning research with a focus on speed and reproducibility."}
{"name": "keonlee9420/cross-speaker-emotion-transfer", "full_name": "keonlee9420/Cross-Speaker-Emotion-Transfer", "topics": ["emotion-transfer", "cross-speaker", "global-style-tokens", "conditional-layer-normalization", "text-to-speech", "deep-neural-networks", "pytorch", "tts", "speech-synthesis", "generative-model", "parallel-tacotron", "neural-tts", "non-ar", "non-autoregressive", "semi-supervised-learning"], "description": "PyTorch Implementation of ByteDance's Cross-speaker Emotion Transfer Based on Speaker Condition Layer Normalization and Semi-Supervised Training in Text-To-Speech"}
{"name": "thuml/anomaly-transformer", "full_name": "thuml/Anomaly-Transformer", "topics": ["anomaly-detection", "deep-learning", "time-series"], "description": "About Code release for \"Anomaly Transformer: Time Series Anomaly Detection with Association Discrepancy\" (ICLR 2022 Spotlight), https://openreview.net/forum?id=LzQQ89U1qm_"}
{"name": "martinomensio/spacy-universal-sentence-encoder", "full_name": "MartinoMensio/spacy-universal-sentence-encoder", "topics": ["nlp", "use", "spacy", "tensorflow-hub", "models"], "description": "Google USE (Universal Sentence Encoder) for spaCy"}
{"name": "lhwcv/mlsd_pytorch", "full_name": "lhwcv/mlsd_pytorch", "topics": [], "description": "Pytorch implementation of \"M-LSD: Towards Light-weight and Real-time Line Segment Detection\""}
{"name": "neuralet/smart-social-distancing", "full_name": "galliot-us/smart-social-distancing", "topics": ["edge-ai", "edge-tpu", "deep-learning", "deep-neural-networks", "edge-computing", "coral-dev-board", "coral-tpu", "jetson-nano", "jetson-tx2", "jetson", "nvidia-jetson-tx2", "nvidia-jetson-nano", "nvidia-jetson", "social-distancing", "social-distancing-detection", "social-distance-monitoring"], "description": "Social Distancing Detector using deep learning and capable to run on edge AI devices such as NVIDIA Jetson, Google Coral, and more."}
{"name": "jiangxiluning/master-tf", "full_name": "jiangxiluning/MASTER-TF", "topics": ["ocr", "ocr-recognition", "transformer", "deep-learning", "cv", "scene-text-recognition"], "description": "MASTER"}
{"name": "vztu/maxim-pytorch", "full_name": "vztu/maxim-pytorch", "topics": ["architecture", "computer-vision", "deblurring", "dehazing", "denoising", "deraining", "enhancement", "image", "image-enhancement", "image-processing", "image-restoration", "low-level-vision", "mlp", "restoration", "retouching", "transformer"], "description": "[CVPR 2022 Oral] PyTorch re-implementation for \"MAXIM: Multi-Axis MLP for Image Processing\", with *training code*. Official Jax repo: https://github.com/google-research/maxim"}
{"name": "vsmolyakov/ml_algo_in_depth", "full_name": "vsmolyakov/ml_algo_in_depth", "topics": ["bayesian-inference", "deep-learning", "machine-learning"], "description": "ML algorithms in depth"}
{"name": "changlin31/bossnas", "full_name": "changlin31/BossNAS", "topics": ["nas", "neural-architecture-search", "transformer", "automl", "hybrid-neural-network", "self-supervised-learning"], "description": "(ICCV 2021) BossNAS: Exploring Hybrid CNN-transformers with Block-wisely Self-supervised Neural Architecture Search"}
{"name": "geyingli/unif", "full_name": "geyingli/unif", "topics": ["nlp", "tensorflow", "language-modeling", "mrc", "classification", "transformer", "distillation", "gpu-training", "bert", "deep-learning"], "description": "\u57fa\u4e8e Tensorflow\uff0c\u4eff Scikit-Learn \u8bbe\u8ba1\u7684\u6df1\u5ea6\u5b66\u4e60\u81ea\u7136\u8bed\u8a00\u5904\u7406\u6846\u67b6\u3002\u652f\u6301 40 \u4f59\u79cd\u6a21\u578b\u7c7b\uff0c\u6db5\u76d6\u8bed\u8a00\u6a21\u578b\u3001\u6587\u672c\u5206\u7c7b\u3001NER\u3001MRC\u3001\u77e5\u8bc6\u84b8\u998f\u7b49\u5404\u4e2a\u9886\u57df"}
{"name": "xwinxu/bayesde", "full_name": "xwinxu/bayeSDE", "topics": ["sde-solvers", "stochastic-differential-equations", "pytorch", "bayesian-layers", "jax", "neural-sde", "neural-ode", "bayesian-neural-networks", "deep-learning", "deep-neural-networks"], "description": "Code for \"Infinitely Deep Bayesian Neural Networks with Stochastic Differential Equations\""}
{"name": "didi/dlflow", "full_name": "didi/dlflow", "topics": ["deeplearning", "tensorflow", "deeplearning-framework"], "description": "DLFlow is a deep learning framework."}
{"name": "shilrley6/faster-r-cnn-with-model-pretrained-on-visual-genome", "full_name": "shilrley6/Faster-R-CNN-with-model-pretrained-on-Visual-Genome", "topics": [], "description": "Faster RCNN model in Pytorch version, pretrained on the Visual Genome with ResNet 101"}
{"name": "bubbliiiing/retinanet-keras", "full_name": "bubbliiiing/retinanet-keras", "topics": [], "description": "\u8fd9\u662f\u4e00\u4e2aretinanet-keras\u7684\u6e90\u7801\uff0c\u53ef\u4ee5\u7528\u4e8e\u8bad\u7ec3\u81ea\u5df1\u7684\u6a21\u578b\u3002"}
{"name": "adamdad/dery", "full_name": "Adamdad/DeRy", "topics": ["neural-networks", "neurips-2022", "transfer-learning", "deep-learning", "deep-neural-networks", "ai", "machine-learning"], "description": "[NeurIPS2022] Deep Model Reassembly"}
{"name": "tech-srl/how_attentive_are_gats", "full_name": "tech-srl/how_attentive_are_gats", "topics": ["how", "attentive", "are", "graph", "attention", "networks", "graph-neural-networks", "pytorch", "graph-attention-networks", "gat", "gatv2"], "description": "Code for the paper \"How Attentive are Graph Attention Networks?\" (ICLR'2022)"}
{"name": "bm-k/kosentencebert_etri", "full_name": "BM-K/KoSentenceBERT-ETRI", "topics": ["sentence-bert", "sentence-similarity", "natural-language-processing", "korean-sentence-bert"], "description": "Sentence Embeddings using Siamese ETRI KoBERT-Networks"}
{"name": "wangle1218/deep_text_matching", "full_name": "wangle1218/deep_text_matching", "topics": [], "description": "implementation several deep text match (text similarly) models for keras . cdssm, arc-ii,match_pyramid, mvlstm ,esim, drcn ,bimpm, bert, albert, raberta"}
{"name": "chriswu1997/pq-net", "full_name": "ChrisWu1997/PQ-NET", "topics": ["paper", "3d-shapes", "deep-learning", "cvpr2020"], "description": "code for our CVPR 2020 paper \"PQ-NET: A Generative Part Seq2Seq Network for 3D Shapes\""}
{"name": "rishit-dagli/gradient-centralization-tensorflow", "full_name": "Rishit-dagli/Gradient-Centralization-TensorFlow", "topics": ["tensorflow", "tensorflow2", "machine-learning", "gradient-centralization", "python", "python3", "pip", "python-package", "deep-learning", "neural-network", "deep-neural-networks", "optimizers", "optimization-technique"], "description": "Instantly improve your training performance of TensorFlow models with just 2 lines of code!"}
{"name": "andrewzlee/neuralblock", "full_name": "andrewzlee/NeuralBlock", "topics": ["video-youtube-sponsorships", "neural-network", "sponsorships"], "description": "Neural Network that detects in-video YouTube sponsorships."}
{"name": "liusongxiang/efficient_tts", "full_name": "liusongxiang/efficient_tts", "topics": [], "description": "Pytorch implementation of \"Efficienttts: an efficient and high-quality text-to-speech architecture\""}
{"name": "liuruiyang98/jittor-mlp", "full_name": "liuruiyang98/Jittor-MLP", "topics": ["deep-learning", "pytorch", "jittor", "papers"], "description": "Unofficial Implementation of MLP-Mixer, gMLP, resMLP, Vision Permutator, S2MLP, S2MLPv2, RaftMLP, HireMLP, ConvMLP, AS-MLP, SparseMLP, ConvMixer, SwinMLP, RepMLPNet, WaveMLP, MorphMLP, DynaMixer, MS-MLP, Sequencer2D in Jittor and PyTorch! Now, Rearrange and Reduce in einops.layers.jittor are support!! trunc_normal_ is supported for Jittor!! MLP Paper is uploaded!"}
{"name": "autoviml/deep_autoviml", "full_name": "AutoViML/deep_autoviml", "topics": ["tensorflow", "keras", "automl", "autokeras", "pycaret", "tpot", "mljar", "gcp", "mlflow", "deep-learning", "machine-learning", "python", "tensorflow2", "data-science"], "description": "Build tensorflow keras model pipelines in a single line of code. Now with mlflow tracking. Created by Ram Seshadri. Collaborators welcome. Permission granted upon request."}
{"name": "willi-menapace/playablevideogeneration", "full_name": "willi-menapace/PlayableVideoGeneration", "topics": [], "description": "Official Pytorch implementation of \"Playable Video Generation\", CVPR 2022 (Oral)"}
{"name": "chou141253/fgvc-pim", "full_name": "chou141253/FGVC-PIM", "topics": ["fine-grained-visual-categorization", "fgvc", "swin-transformer", "efficientnet", "resnet", "vision-transformer"], "description": "Pytorch implementation for \"A Novel Plug-in Module for Fine-Grained Visual Classification\". fine-grained visual classification task."}
{"name": "alibaba/curvature-learning-framework", "full_name": "alibaba/Curvature-Learning-Framework", "topics": ["non-euclidean-deep-learning", "geometric-deep-learning", "tensorflow", "hyperbolic"], "description": "Curvlearn, a Tensorflow based non-Euclidean deep learning framework."}
{"name": "microsoft/astra", "full_name": "microsoft/ASTRA", "topics": ["weak-supervision", "nlp", "machine-learning", "weakly-supervised-learning"], "description": "Self-training with Weak Supervision (NAACL 2021)"}
{"name": "aiff22/pynet-bokeh", "full_name": "aiff22/PyNET-Bokeh", "topics": ["pynet", "bokeh", "bokeh-effect", "shallow-depth-of-field", "blur", "blurred-background", "aperture", "image-processing", "image-reconstruction", "image-to-image-translation", "deep-learning", "computer-vision", "mobile", "photography", "smartphones", "camera", "photos", "inference"], "description": "Rendering Realistic Bokeh Images with PyNET"}
{"name": "janmarcelkezmann/tensorflow-advanced-segmentation-models", "full_name": "JanMarcelKezmann/TensorFlow-Advanced-Segmentation-Models", "topics": ["segmentation-models", "tensorflow", "computer-vision", "semantic-segmentation", "segmentation-model", "unet", "segmentation", "pspnet", "fpn", "fcn", "deeplab", "danet", "ocnet", "cfnet", "acfnet", "ocrnet", "hrnet", "image-segmentation", "tensorflow-macos"], "description": "A Python Library for High-Level Semantic Segmentation Models based on TensorFlow and Keras with pretrained backbones."}
{"name": "bubbliiiing/mobilenet-ssd-keras", "full_name": "bubbliiiing/mobilenet-ssd-keras", "topics": [], "description": "\u8fd9\u662f\u4e00\u4e2amobilenet-ssd-keras\u7684\u6e90\u7801\uff0c\u53ef\u4ee5\u7528\u4e8e\u8bad\u7ec3\u81ea\u5df1\u7684\u8f7b\u91cf\u7ea7ssd\u6a21\u578b\u3002"}
{"name": "danielzuegner/code-transformer", "full_name": "danielzuegner/code-transformer", "topics": ["deep-learning", "machine-learning", "ml4code", "transformers", "iclr2021"], "description": "Implementation of the paper \"Language-agnostic representation learning of source code from structure and context\". "}
{"name": "danan0755/bert_classifier", "full_name": "danan0755/Bert_Classifier", "topics": [], "description": "bert\u6587\u672c\u5206\u7c7b\uff0cner, albert\uff0ckeras_bert\uff0cbert4keras\uff0ckashgari\uff0cfastbert\uff0cflask + uwsgi + keras\u90e8\u7f72\u6a21\u578b\uff0c\u65f6\u95f4\u5b9e\u4f53\u8bc6\u522b\uff0ctfidf\u5173\u952e\u8bcd\u62bd\u53d6\uff0ctfidf\u6587\u672c\u76f8\u4f3c\u5ea6\uff0c\u7528\u6237\u60c5\u611f\u5206\u6790"}
{"name": "taipingeric/yolo-v4-tf.keras", "full_name": "taipingeric/yolo-v4-tf.keras", "topics": ["yolo", "keras-model", "keras", "tensorflow", "tensorflow2", "object-detection", "computer-vision", "python", "yolov4"], "description": "A simple tf.keras implementation of YOLO v4"}
{"name": "nlp-love/model_log", "full_name": "NLP-LOVE/Model_Log", "topics": ["machine-learning", "deep-learning", "model", "log", "tensorflow", "pytorch", "metric"], "description": "Model Log \u662f\u4e00\u6b3e\u57fa\u4e8e Python3 \u7684\u8f7b\u91cf\u7ea7\u673a\u5668\u5b66\u4e60(Machine Learning)\u3001\u6df1\u5ea6\u5b66\u4e60(Deep Learning)\u6a21\u578b\u8bad\u7ec3\u8bc4\u4f30\u6307\u6807\u53ef\u89c6\u5316\u5de5\u5177\uff0c\u53ef\u4ee5\u8bb0\u5f55\u6a21\u578b\u8bad\u7ec3\u8fc7\u7a0b\u5f53\u4e2d\u7684\u8d85\u53c2\u6570\u3001Loss\u3001Accuracy\u3001Precision\u3001F1\u503c\u7b49\uff0c\u5e76\u4ee5\u66f2\u7ebf\u56fe\u7684\u5f62\u5f0f\u8fdb\u884c\u5c55\u73b0\u5bf9\u6bd4\uff0c\u8f7b\u677e\u4e09\u6b65\u5373\u53ef\u5b9e\u73b0\u3002"}
{"name": "bm-k/kosentencebert-skt", "full_name": "BM-K/KoSentenceBERT-SKT", "topics": ["sentence-bert", "sentence-similarity", "natural-language-processing", "korean-sentence-bert"], "description": "Sentence Embeddings using Siamese SKT KoBERT-Networks"}
{"name": "christopher-thornton/hmni", "full_name": "Christopher-Thornton/hmni", "topics": ["natural-language-processing", "fuzzy-matching", "nlp", "machine-learning", "data-science", "python", "artificial-intelligence", "ai"], "description": "\ud83d\udcdb Fuzzy Name Matching with Machine Learning"}
{"name": "tencent/tencentpretrain", "full_name": "Tencent/TencentPretrain", "topics": ["albert", "bart", "bert", "chinese", "classification", "clue", "elmo", "fine-tuning", "gpt", "gpt-2", "model-zoo", "natural-language-processing", "ner", "pegasus", "pre-training", "pytorch", "roberta", "t5", "unilm", "xlm-roberta"], "description": "Tencent Pre-training framework in PyTorch & Pre-trained Model Zoo "}
{"name": "hellonlp/sentiment_analysis_albert", "full_name": "hellonlp/sentiment-analysis", "topics": ["text-classification", "tensorflow", "text-cnn", "sentiment-analysis", "bert", "cnn", "textcnn", "bayes", "dict"], "description": "\u60c5\u611f\u5206\u6790\u3001\u6587\u672c\u5206\u7c7b\u3001\u8bcd\u5178\u3001bayes\u3001sentiment analysis\u3001TextCNN\u3001classification\u3001tensorflow\u3001BERT\u3001CNN\u3001text classification"}
{"name": "xv44586/toolkit4nlp", "full_name": "xv44586/toolkit4nlp", "topics": ["keras", "bert", "nlp"], "description": "transformers implement (architecture, task example, serving and more)"}
{"name": "petuum/autodist", "full_name": "petuum/autodist", "topics": ["deep-learning", "distributed-systems", "machine-learning", "distributed-computing", "tensorflow", "aws", "cloud", "on-premise"], "description": "Simple Distributed Deep Learning on TensorFlow"}
{"name": "bhky/opennsfw2", "full_name": "bhky/opennsfw2", "topics": ["nsfw-classifier", "tensorflow2", "image-classification", "keras", "image-preprocessing"], "description": "TensorFlow 2 implementation of the Yahoo Open-NSFW model"}
{"name": "heiheiyoyo/uie_pytorch", "full_name": "heiheiyoyo/uie_pytorch", "topics": ["information-extraction", "pytorch", "transformers", "uie"], "description": "PaddleNLP UIE\u6a21\u578b\u7684PyTorch\u7248\u5b9e\u73b0"}
{"name": "thuiar/textoir", "full_name": "thuiar/TEXTOIR", "topics": ["open-classification", "natural-language-processing", "dialogue-systems", "intent-recognition", "clustering", "deep-neural-networks", "bert", "intent-discovery", "artificial-intelligence", "acl2021"], "description": "TEXTOIR is a flexible toolkit for open intent detection and discovery. (ACL 2021) "}
{"name": "google-research/dads", "full_name": "google-research/dads", "topics": ["reinforcement-learning", "skill-discovery", "unsupervised-learning", "model-based-rl", "deep-learning"], "description": "Code for 'Dynamics-Aware Unsupervised Discovery of Skills' (DADS). Enables skill discovery without supervision, which can be combined with model-based control. "}
{"name": "cripac-dig/texting", "full_name": "CRIPAC-DIG/TextING", "topics": ["text-classification", "graph-neural-networks", "natural-language-processing", "inductive-learning"], "description": "[ACL 2020] Tensorflow implementation for \"Every Document Owns Its Structure: Inductive Text Classification via Graph Neural Networks\""}
{"name": "dingkeyan93/dists", "full_name": "dingkeyan93/DISTS", "topics": ["dists", "iqa", "texture", "structure", "similarity", "optimization", "loss-functions", "pytorch", "quality-metrics", "image-quality-assessment"], "description": "IQA: Deep Image Structure and Texture Similarity Metric"}
{"name": "alanli1997/slim-neck-by-gsconv", "full_name": "AlanLi1997/slim-neck-by-gsconv", "topics": ["lightweight-framework", "objectdetection", "pytorch", "yolo", "yolov4", "yolov5", "gsconv"], "description": "Pytorch implementation of the 'Slim-neck by GSConv: A better design paradigm of detector architectures for autonomous vehicles'"}
{"name": "snunlp/kr-bert", "full_name": "snunlp/KR-BERT", "topics": ["nlp"], "description": "KoRean based BERT pre-trained models (KR-BERT) for Tensorflow and PyTorch"}
{"name": "openvisionapi/ova-server", "full_name": "openvisionapi/ova-server", "topics": ["computer-vision", "tensorflow", "tensorflow-lite", "flask", "yolov4", "machine-learning", "python", "api", "object-detection"], "description": " OpenVisionAPI server "}
{"name": "mimbres/neural-audio-fp", "full_name": "mimbres/neural-audio-fp", "topics": ["audio-fingerprinting", "music-information-retrieval", "deep-learning", "fingerprint", "audio-search"], "description": null}
{"name": "zhangyuanhan-ai/noah", "full_name": "ZhangYuanhan-AI/NOAH", "topics": ["prompt-tuning", "transfer-learning", "domain-generalization", "visual-prompting", "pre-trained-model", "pytorch", "deep-learning"], "description": "Searching prompt modules for parameter-efficient transfer learning."}
{"name": "layerai/sdk", "full_name": "layerai-archive/sdk", "topics": ["machine-learning", "collaboration", "data-science", "data-versioning", "deep-learning", "experiment-tracking", "hyperparameter-optimization", "hyperparameter-tuning", "keras", "mlops", "model-versioning", "python", "pytorch", "reinforcement-learning", "sklearn", "tensorflow"], "description": "Metadata store for Production ML"}
{"name": "think989/real-time-stock-market-prediction-using-ensemble-dl-and-rainbow-dqn", "full_name": "THINK989/Real-Time-Stock-Market-Prediction-using-Ensemble-DL-and-Rainbow-DQN", "topics": ["real-time-prediction", "rainbow-dqn", "stock-price-forecasting", "lstm", "gru", "ensemble", "keras", "trade-bot", "tensorflow"], "description": null}
{"name": "thunlp/re-context-or-names", "full_name": "thunlp/RE-Context-or-Names", "topics": ["relation-extraction", "pytorch", "bert", "contrastive-learning", "pretrain"], "description": "Bert-based models(BERT, MTB, CP) for relation extraction. "}
{"name": "jina-ai/jina-hub", "full_name": "jina-ai/jina-hub", "topics": ["jina", "neural-search", "jina-hub", "containerization", "marketplace", "neural-network", "deep-learning", "machine-learning", "cloud-native", "microservice"], "description": "An open-registry for hosting Jina executors via container images"}
{"name": "google/balloon-learning-environment", "full_name": "google/balloon-learning-environment", "topics": ["reinforcement-learning", "deep-learning", "machine-learning"], "description": "The Balloon Learning Environment - flying stratospheric balloons with deep reinforcement learning."}
{"name": "sradc/smallpebble", "full_name": "sradc/SmallPebble", "topics": ["autodiff", "numpy", "cupy", "deep-learning", "neural-network", "python", "machine-learning"], "description": "Minimal deep learning library written from scratch in Python, using NumPy/CuPy."}
{"name": "bubbliiiing/unet-keras", "full_name": "bubbliiiing/unet-keras", "topics": [], "description": "\u8fd9\u662f\u4e00\u4e2aunet-keras\u7684\u6e90\u7801\uff0c\u53ef\u4ee5\u7528\u4e8e\u8bad\u7ec3\u81ea\u5df1\u7684\u6a21\u578b\u3002"}
{"name": "dali92002/de-gan", "full_name": "dali92002/DE-GAN", "topics": ["deblurring", "deep-learning", "gan", "generative-adversarial-network", "image-binarization", "watermark-remover"], "description": "Document Image Enhancement with GANs - TPAMI journal"}
{"name": "xuhongzuo/outlier-interpretation", "full_name": "xuhongzuo/outlier-interpretation", "topics": ["anomaly-detection", "deep-learning", "explanability", "outlier-detection", "outlier-aspect-mining", "outlier-interpretation"], "description": "(WWW'21) ATON - an Outlier Interpreation / Outlier explanation method"}
{"name": "kartik4949/tensorpipe", "full_name": "kartik4949/TensorPipe", "topics": ["tensorflow", "datapipeline", "computer-vision"], "description": "High Performance Tensorflow Data Pipeline with State of Art Augmentations and low level optimizations."}
{"name": "vicco-group/thingsvision", "full_name": "ViCCo-Group/thingsvision", "topics": ["pytorch", "neural-networks", "computer-vision", "tensorflow", "deep-learning", "representations"], "description": "Python package for extracting and analyzing image representations from state-of-the-art neural networks for computer vision"}
{"name": "bubbliiiing/efficientdet-keras", "full_name": "bubbliiiing/efficientdet-keras", "topics": [], "description": "\u8fd9\u662f\u4e00\u4e2aefficientdet-keras\u7684\u6e90\u7801\uff0c\u53ef\u4ee5\u7528\u4e8e\u8bad\u7ec3\u81ea\u5df1\u7684\u6a21\u578b\u3002"}
{"name": "lonepatient/torchblocks", "full_name": "lonePatient/TorchBlocks", "topics": ["pytorch", "nlp", "text-classification", "triplet-loss", "siamese-network", "text-similarity", "multilabel-classification", "advertising", "bert", "transformers", "relation-classification", "named-entity-recognition"], "description": "A PyTorch-based toolkit for natural language processing"}
{"name": "davidzhangyuanhan/noah", "full_name": "ZhangYuanhan-AI/NOAH", "topics": ["prompt-tuning", "transfer-learning", "domain-generalization", "visual-prompting", "pre-trained-model", "pytorch", "deep-learning"], "description": "Searching prompt modules for parameter-efficient transfer learning."}
{"name": "eliahuhorwitz/conffusion", "full_name": "eliahuhorwitz/Conffusion", "topics": ["computer-vision", "conformal-prediction", "image-generation", "image-to-image", "inpainting", "quantile-regression", "super-resolution", "diffusion-models", "generative-model", "deep-learning", "prediction-intervals", "pytorch", "uncertainty-estimation", "uncertainty-quantification", "diffusion"], "description": "Official Implementation for the \"Conffusion: Confidence Intervals for Diffusion Models\" paper."}
{"name": "clovaai/frostnet", "full_name": "clovaai/frostnet", "topics": ["deep-learning", "pytorch", "quantization", "quantization-aware-training", "classification", "object-detection", "semantic-segmentation", "style-transfer", "optimizers", "computer-vision", "post-quantization", "quantization-efficient-network", "network-architecture", "int8-quantization"], "description": "FrostNet: Towards Quantization-Aware Network Architecture Search"}
{"name": "sicara/gpumonitor", "full_name": "sicara/gpumonitor", "topics": ["tensorflow", "pytorch-lightning", "gpu-monitoring"], "description": "TF 2.x and PyTorch Lightning Callbacks for GPU monitoring"}
{"name": "wenzhu23333/differential-privacy-based-federated-learning", "full_name": "wenzhu23333/Differential-Privacy-Based-Federated-Learning", "topics": ["federated-learning", "differential-privacy", "privacy", "pytorch", "deep-learning", "laplace", "gaussian"], "description": "Everything you want about DP-Based Federated Learning, including Papers and Code. (Mechanism: Laplace or Gaussian, Dataset: femnist, shakespeare, mnist, cifar-10 and fashion-mnist. )"}
{"name": "google/etils", "full_name": "google/etils", "topics": ["python", "numpy", "tensorflow", "jax", "utils"], "description": "Collection of eclectic utils for python."}
{"name": "yashsmehta/personality-prediction", "full_name": "yashsmehta/personality-prediction", "topics": ["language-model", "personality-predicting", "pytorch", "bert-fine-tuning", "personality-detection"], "description": "Experiments for automated personality detection using Language Models and psycholinguistic features on various famous personality datasets including the Essays dataset (Big-Five)"}
{"name": "ytongbai/vits-vs-cnns", "full_name": "ytongbai/ViTs-vs-CNNs", "topics": ["transformer", "robustness"], "description": "[NeurIPS 2021]: Are Transformers More Robust Than CNNs? (Pytorch implementation & checkpoints)"}
{"name": "j3soon/tbparse", "full_name": "j3soon/tbparse", "topics": ["tensorboard", "tensorflow", "pytorch", "tensorboardx", "parser", "plot", "python", "reader", "machine-learning"], "description": "Load tensorboard event logs as pandas DataFrames for scientific plotting; Supports both PyTorch and TensorFlow"}
{"name": "aimakerspace/peekingduck", "full_name": "aisingapore/PeekingDuck", "topics": ["computer-vision", "deep-learning", "pose-estimation", "object-detection", "object-tracking", "python", "pipeline", "nodes"], "description": "A modular framework built to simplify Computer Vision inference workloads."}
{"name": "declare-lab/dialogue-understanding", "full_name": "declare-lab/dialogue-understanding", "topics": ["dialogue-systems", "dialogue-understanding", "emotion-recognition-in-conversation", "dialogue-act", "conversational-ai", "conversational-agents", "bert-embeddings", "bert", "pretrained-models", "emotion-recognition", "emotion-analysis", "natural-language-processing", "natural-language-understanding", "lstm", "pytorch", "sentiment-analysis", "adversarial-attacks", "explainable-ai", "utterance-level-dialogue", "dialogue"], "description": "This repository contains PyTorch implementation for the baseline models from the paper Utterance-level Dialogue Understanding: An Empirical Study"}
{"name": "maryamboneh/vehicle-detection", "full_name": "MaryamBoneh/Vehicle-Detection", "topics": ["deep-learning", "yolov5", "image-processing", "fine-tuning", "object-detection", "python", "dataset", "car-counting", "vehicle-counting", "yolo"], "description": "Vehicle Detection Using Deep Learning and YOLO Algorithm"}
{"name": "intuit/fawkes", "full_name": "intuit/fawkes", "topics": ["user-reviews", "categorization", "deep-learning", "machine-learning", "sentiment-analysis", "summarization", "python", "hacktoberfest", "fawkes", "tensorflow"], "description": "\ud83d\ude80\ud83d\ude80  Fetch, parse, categorize, summarize user reviews \ud83d\ude80\ud83d\ude80"}
{"name": "mlrichter/receptive_field_analysis_toolbox", "full_name": "MLRichter/receptive_field_analysis_toolbox", "topics": ["pytorch", "visualization", "deep-learning", "neural-networks", "machine-learning", "neural-architecture-optimization", "neural-architecture-search", "tensorflow", "receptive-field", "receptive-field-analysis", "hacktoberfest"], "description": "A toolbox for receptive field analysis and visualizing neural network architectures"}
{"name": "sony/model_optimization", "full_name": "sony/model_optimization", "topics": ["deep-learning", "quantization", "network-compression", "network-quantization", "deep-neural-networks", "machine-learning", "edge-ai", "neural-network", "optimizer", "ptq", "pytorch", "qat", "tensorflow"], "description": "Model Compression Toolkit (MCT) is an open source project for neural network model optimization under efficient, constrained hardware. This project provides researchers, developers, and engineers advanced quantization and compression tools for deploying state-of-the-art neural networks."}
{"name": "google/vizier", "full_name": "google/vizier", "topics": ["vizier", "hyperparameter-optimization", "tuning", "tuning-parameters", "blackbox-optimization", "hyperparameter-tuning", "bayesian-optimization", "evolutionary-algorithms", "distributed-systems", "distributed-computing", "grpc", "open-source", "google", "algorithm", "deep-learning", "machine-learning", "optimization"], "description": "Python-based research interface for blackbox and hyperparameter optimization, based on the internal Google Vizier Service."}
{"name": "debeshjha/resunetplusplus", "full_name": "DebeshJha/ResUNetPlusPlus", "topics": ["unet", "tensorflow", "image-segmentation", "medical-image-segmentation", "unet-model", "resunet-architecture", "resunet", "resunet-plus-plus", "aspp", "attention", "residual-networks", "squeeze-and-excitation", "conv2d", "pytorch", "pytorch-implementation"], "description": "Official code for ResUNetplusplus for medical image segmentation (TensorFlow & Pytorch implementation) (IEEE ISM)"}
{"name": "bm-k/kosentencebert", "full_name": "BM-K/KoSentenceBERT-ETRI", "topics": ["sentence-bert", "sentence-similarity", "natural-language-processing", "korean-sentence-bert"], "description": "Sentence Embeddings using Siamese ETRI KoBERT-Networks"}
{"name": "origamidream/gato", "full_name": "OrigamiDream/gato", "topics": ["gato", "neural-network", "tensorflow", "transformer", "generalist-agent"], "description": "Unofficial Gato: A Generalist Agent"}
{"name": "zcemycl/tf2deepfloorplan", "full_name": "zcemycl/TF2DeepFloorplan", "topics": ["tensorflow2", "keras-tensorflow", "image-processing", "image-recognition", "attention-network", "python3", "deep-learning", "deep-neural-networks", "flask", "docker", "google-colab", "jupyter-notebook", "curl", "github-actions", "tflite", "quantization", "tensorboard", "flask-api", "github-release", "pypi-package"], "description": "TF2 Deep FloorPlan Recognition using a Multi-task Network with Room-boundary-Guided Attention. Enable tensorboard, quantization, flask, tflite, docker, github actions and google colab."}
{"name": "nmichlo/disent", "full_name": "nmichlo/disent", "topics": ["pytorch", "pytorch-lightning", "vae", "disentanglement", "disentangled-representations", "metrics", "configurable", "datasets", "python", "python3", "autoencoders", "representation-learning", "metric-learning"], "description": "\ud83e\uddf6 Modular VAE disentanglement framework for python built with PyTorch Lightning \u25b8 Including metrics and datasets \u25b8 With strongly supervised, weakly supervised and unsupervised methods \u25b8 Easily configured and run with Hydra config \u25b8 Inspired by disentanglement_lib"}
{"name": "rishit-dagli/fast-transformer", "full_name": "Rishit-dagli/Fast-Transformer", "topics": ["machine-learning", "transformers", "attention-mechanism", "deep-learning", "artificial-intelligence", "tensorflow", "keras"], "description": "An implementation of Fastformer: Additive Attention Can Be All You Need, a Transformer Variant in TensorFlow"}
{"name": "nyx-ai/stylegan2-flax-tpu", "full_name": "nyx-ai/stylegan2-flax-tpu", "topics": ["artificial-intelligence", "generative-adversarial-network", "generative-model", "jax", "tpu"], "description": "\ud83d\uddbc Training StyleGAN2 on TPUs in JAX"}
{"name": "spotify/realbook", "full_name": "spotify/realbook", "topics": ["audio", "cqt", "librosa", "machine-learning", "mel-spectrogram", "spectrograms", "stft", "tensorflow"], "description": "Easier audio-based machine learning with TensorFlow."}
{"name": "barisyazici/deep-rl-grasping", "full_name": "BarisYazici/deep-rl-grasping", "topics": ["reinfrocement-learning", "robotics", "kuka", "pybullet", "open-ai", "deep-learning", "machine-learning"], "description": "Train deep reinforcement learning model for robotics grasping. Choose from different perception layers raw Depth, RGBD and autoencoder. Test the learned models in different scenes and object datasets"}
{"name": "asyml/vision-transformer-pytorch", "full_name": "asyml/vision-transformer-pytorch", "topics": ["vision-transformer", "pytorch"], "description": "Pytorch version of Vision Transformer (ViT) with pretrained models. This is part of CASL (https://casl-project.github.io/) and ASYML project."}
{"name": "google-research/hit-gan", "full_name": "google-research/hit-gan", "topics": ["vision-transformer", "generative-adversarial-network", "tensorflow"], "description": "Tensorflow implementation for \"Improved Transformer for High-Resolution GANs\" (NeurIPS 2021)."}
{"name": "intel-isl/deeplagrangianfluids", "full_name": "isl-org/DeepLagrangianFluids", "topics": ["deeplearning", "fluids", "simulation", "convolutional-neural-networks", "convnet", "cnn"], "description": "Code repository for \"Lagrangian Fluid Simulation with Continuous Convolutions\", ICLR 2020."}
{"name": "snap-research/mmvid", "full_name": "snap-research/MMVID", "topics": ["deep-learning", "video-generation", "multimodal-learning", "text-to-video", "multimodal-video-generation", "transformer", "bert"], "description": "[CVPR 2022] Show Me What and Tell Me How: Video Synthesis via Multimodal Conditioning"}
{"name": "svjan5/kg-reeval", "full_name": "svjan5/kg-reeval", "topics": ["acl2020", "knowledge-graph", "knowledge-graph-completion", "deep-learning"], "description": "ACL 2020: A Re-evaluation of Knowledge Graph Completion Methods"}
{"name": "novemberchopin/rl_tutorial", "full_name": "NovemberChopin/RL_Tutorial", "topics": ["tensorflow", "reinforcement-learning-algorithms"], "description": "Tutorial for Reinforcement Learning"}
{"name": "theislab/ncem", "full_name": "theislab/ncem", "topics": ["tensorflow", "gnn", "glm", "cvae", "encoder-decoder-model", "scanpy", "squidpy", "cell-cell-communication", "cell-cell-interaction"], "description": "Learning cell communication from spatial graphs of cells"}
{"name": "xrenaa/disco", "full_name": "xrenaa/DisCo", "topics": ["deep-learning", "generative-adversarial-network", "generative-model", "disentangled-representations", "gan", "pytorch", "unsupervised-learning", "gans", "pytorch-implementation"], "description": "[ICLR2022] Code for \"Learning Disentangled Representation by Exploiting Pretrained Generative Models: A Contrastive Learning View\""}
{"name": "bupt-gamma/gammagl", "full_name": "BUPT-GAMMA/GammaGL", "topics": ["graph", "deep-learning", "framework-agnostic", "tensorlayerx", "pytorch", "tensorflow", "paddlepaddle", "mindspore"], "description": "A multi-backend graph learning library."}
{"name": "robvanvolt/dalle-datasets", "full_name": "robvanvolt/DALLE-datasets", "topics": [], "description": "This is a summary of easily available datasets for generalized DALLE-pytorch training."}
{"name": "yanndubs/lossyless", "full_name": "YannDubs/lossyless", "topics": ["pytorch", "machine-learning", "python", "deep-learning", "compression", "self-supervised-learning"], "description": "Generic image compressor for machine learning. Pytorch code for our paper \"Lossy compression for lossless prediction\"."}
{"name": "iterative/dvclive", "full_name": "iterative/dvclive", "topics": ["machine-learning", "visualization", "developer-tools", "deep-learning", "dvc", "logger"], "description": "Log and track ML metrics, parameters, models with Git and/or DVC"}
{"name": "mhso/bombsolver", "full_name": "mhso/BombSolver", "topics": ["machine-learning", "python", "neural-network", "image-recognition"], "description": "Defusing bombs in Keep Talking and Nobody Explodes"}
{"name": "whyisyoung/cade", "full_name": "whyisyoung/CADE", "topics": ["drebin", "concept-drift", "explainable-ai", "contrastive-learning", "ids", "ids2018", "interpretability", "xai", "machine-learning", "machine-learning-security", "autoencoder", "artificial-intelligence", "mlp", "explainable-ml", "keras", "tensorflow", "self-supervised-learning", "explanation"], "description": "Code for our USENIX Security 2021 paper -- CADE: Detecting and Explaining Concept Drift Samples for Security Applications"}
{"name": "shaofengzeng/superpoint-pytorch", "full_name": "shaofengzeng/SuperPoint-Pytorch", "topics": ["image", "keypoint"], "description": "Pytorch Implementation of rpautrat/SuperPoint"}
{"name": "henghuiding/vision-language-transformer", "full_name": "henghuiding/Vision-Language-Transformer", "topics": ["vision-language", "transformer", "referring-segmentation", "tensorflow", "keras", "iccv2021", "vision-language-transformer", "tpami"], "description": "Vision-Language Transformer and Query Generation for Referring Segmentation (ICCV 2021 & TPAMI)"}
{"name": "glam-imperial/emotionalconversionstargan", "full_name": "glam-imperial/EmotionalConversionStarGAN", "topics": ["generative-adversarial-network", "stargan", "stargan-vc", "data-augmentation", "emotion-recognition", "speech-synthesis", "deep-learning", "deep-neural-networks", "icassp-2020", "icassp", "imperial-college-london", "augsburg-university", "imperial-glam"], "description": "This repository contains code to replicate results from the ICASSP 2020 paper \"StarGAN for Emotional Speech Conversion: Validated by Data Augmentation of End-to-End Emotion Recognition\"."}
{"name": "nlpaueb/greek-bert", "full_name": "nlpaueb/greek-bert", "topics": ["natural-language-processing", "language-model", "transformers", "bert"], "description": "A Greek edition of BERT pre-trained language model"}
{"name": "michael-fonder/m4depth", "full_name": "michael-fonder/M4Depth", "topics": ["uav", "drone", "depth-estimation", "depth", "deep-learning"], "description": "Official implementation of the network presented in the paper \"Parallax Inference for Robust Temporal Monocular Depth Estimation in Unstructured Environments\""}
{"name": "kohulan/decimer-image_transformer", "full_name": "Kohulan/DECIMER-Image_Transformer", "topics": ["chemical-image-recognition", "image-data-mining", "transformers", "decimer", "tpu", "deep-learning", "python", "tensorflow"], "description": "DECIMER: Deep Learning for Chemical Image Recognition using Efficient-Net V2 + Transformer"}
{"name": "yeyupiaoling/voiceprintrecognition-keras", "full_name": "yeyupiaoling/VoiceprintRecognition-Keras", "topics": ["speaker-recognition", "kersa", "tensorflow", "deep-learning", "voice-recognition"], "description": "\u57fa\u4e8eKersa\u5b9e\u73b0\u7684\u58f0\u7eb9\u8bc6\u522b\u6a21\u578b"}
{"name": "developers-cosmos/meme-generator", "full_name": "developers-cosmos/Meme-Generator", "topics": ["cnn-classification", "image-augmentation", "chef-cookbook", "flask-server", "gcp", "image-classification", "gcp-auto-ml", "balanced-data", "meme-generator", "artificial-intelligence", "neural-networks", "memegen", "cnn", "memes", "projects", "automated"], "description": "MemeGen is a web application where the user gives an image as input and our tool generates a meme at one click for the user."}
{"name": "songweige/tats", "full_name": "SongweiGe/TATS", "topics": ["pytorch", "text-to-video", "video-generation", "video-manipulation", "video-synthesizer", "audio-to-video", "long-video-generation"], "description": "Official PyTorch implementation of TATS: A Long Video Generation Framework with Time-Agnostic VQGAN and Time-Sensitive Transformer (ECCV 2022)"}
{"name": "alekseykorshuk/optimum-transformers", "full_name": "AlekseyKorshuk/optimum-transformers", "topics": ["nlp", "pipeline", "huggingface", "transformers", "onnx", "onnxruntime", "optimum", "natural-language-processing", "benchmark", "infinity"], "description": "Accelerated NLP pipelines for fast inference on CPU and GPU. Built with Transformers, Optimum and ONNX Runtime."}
{"name": "pooya-mohammadi/deep_utils", "full_name": "pooya-mohammadi/deep_utils", "topics": ["pytorch", "deep-learning", "face-detection", "object-detection", "utils", "tensorflow", "python", "machine-learning", "modelcheckpoint", "augmentation", "computer-vision", "nlp", "cutmix", "coco", "yolov5", "face-recognition", "vggface2", "senet"], "description": "An open-source toolkit which is full of handy functions, including the most used models and utilities for deep-learning practitioners!"}
{"name": "jackaduma/las_mandarin_pytorch", "full_name": "jackaduma/LAS_Mandarin_PyTorch", "topics": ["asr", "chinese-speech-recognition", "speech-recognition", "listen-attend-and-spell", "pytorch-implementation", "speech-to-text", "deeplearning", "deep-learning", "mandarin"], "description": "Listen, attend and spell Model and a Chinese Mandarin Pretrained model  (\u4e2d\u6587-\u666e\u901a\u8bdd ASR\u6a21\u578b)"}
{"name": "thudm/proteinlm", "full_name": "THUDM/ProteinLM", "topics": ["protein-language-model", "deep-learning", "transfer-learning", "pretrained-models"], "description": "Protein Language Model"}
{"name": "ymcui/lert", "full_name": "ymcui/LERT", "topics": ["bert", "nlp", "plm", "pre-train", "pytorch", "tensorflow", "lert", "transformer"], "description": "LERT: A Linguistically-motivated Pre-trained Language Model\uff08\u8bed\u8a00\u5b66\u4fe1\u606f\u589e\u5f3a\u7684\u9884\u8bad\u7ec3\u6a21\u578bLERT\uff09"}
{"name": "deepmind/dm_nevis", "full_name": "deepmind/dm_nevis", "topics": ["benchmark", "continual-learning", "efficient-learning", "jax", "pytorch"], "description": "NEVIS'22: Benchmarking the next generation of never-ending learners"}
{"name": "jasonkks/pttr", "full_name": "Jasonkks/PTTR", "topics": ["point-cloud", "pytorch", "tracking", "autonomous-driving"], "description": "Pytorch Implementation of PTTR: Relational 3D Point Cloud Object Tracking with Transformer"}
{"name": "chriswu1997/multimodal-shape-completion", "full_name": "ChrisWu1997/Multimodal-Shape-Completion", "topics": ["eccv-2020", "shape-completion", "computer-vision", "deep-learning", "computer-graphics"], "description": "code for our ECCV 2020 spotlight paper \"Multimodal Shape Completion via Conditional Generative Adversarial Networks\""}
{"name": "pokaxpoka/sunrise", "full_name": "pokaxpoka/sunrise", "topics": ["reinforcement-learning", "rl", "deep-learning", "mujoco", "dm-control", "codebase", "model-free", "off-policy", "deep-reinforcement-learning", "deep-neural-networks", "deep-q-learning", "deep-q-network", "soft-actor-critic", "sac", "rainbow"], "description": "SUNRISE: A Simple Unified Framework for Ensemble Learning in Deep Reinforcement Learning"}
{"name": "lonepatient/electra_pytorch", "full_name": "lonePatient/electra_pytorch", "topics": ["electra", "pytorch", "bert", "nlp", "deeplearning", "glue", "language-model"], "description": " ELECTRA: Pre-training Text Encoders as Discriminators Rather Than Generators "}
{"name": "negu93/cvnn", "full_name": "NEGU93/cvnn", "topics": ["neural-networks", "tensorflow", "complex-networks", "complex-neural-networks", "complex-numbers", "deep-learning", "machine", "machine-learning", "python"], "description": "Library to help implement a complex-valued neural network (cvnn) using tensorflow as back-end"}
{"name": "jingtaozhan/drhard", "full_name": "jingtaozhan/DRhard", "topics": ["information-retrieval", "pytorch", "web-search"], "description": "SIGIR'21: Optimizing DR with hard negatives and achieving SOTA first-stage retrieval performance on TREC DL Track."}
{"name": "na-z/sess", "full_name": "Na-Z/sess", "topics": ["pytorch", "semi-supervised-learning", "3d-object-detection", "point-cloud"], "description": "[CVPR2020 Oral] SESS: Self-Ensembling Semi-Supervised 3D Object Detection"}
{"name": "ertis-research/kafka-ml", "full_name": "ertis-research/kafka-ml", "topics": ["kafka", "machine-learning", "kubernetes", "tensorflow", "docker", "data-stream", "iot", "keras-tensorflow", "gpu-acceleration", "deep-learning", "keras", "pytorch"], "description": "Kafka-ML: connecting the data stream with ML/AI frameworks (now TensorFlow and PyTorch!)"}
{"name": "ustc-jialunpeng/diverse-structure-inpainting", "full_name": "USTC-JialunPeng/Diverse-Structure-Inpainting", "topics": ["tensorflow", "inpainting", "vq-vae", "autoregressive-neural-networks", "multimodal", "attention", "generative-adversarial-networks"], "description": "CVPR 2021: \"Generating Diverse Structure for Image Inpainting With Hierarchical VQ-VAE\""}
{"name": "marstechhan/keras2ncnn", "full_name": "MarsTechHAN/keras2ncnn", "topics": ["ncnn", "keras", "tensorflow", "model-converter", "deep-learning", "python3", "python"], "description": "A keras h5df to ncnn model converter"}
{"name": "yinguobing/facial-landmark-detection-hrnet", "full_name": "yinguobing/facial-landmark-detection-hrnet", "topics": ["tensorflow", "deep-learning", "facial-landmarks", "hrnet"], "description": "A TensorFlow implementation of HRNet for facial landmark detection."}
{"name": "ryansaxe/mtg", "full_name": "RyanSaxe/mtg", "topics": ["machine-learning", "python", "data-science", "deep-learning"], "description": "State of the Art Magic: the Gathering Draft and DeckBuilder AI."}
{"name": "foivospar/ned", "full_name": "foivospar/NED", "topics": ["3dmm", "emotion", "cvpr2022", "pytorch", "deepfakes", "gan", "expression-manipulation", "face-edit", "image-generation", "talking-head", "face"], "description": "PyTorch implementation for NED (CVPR 2022). It can be used to manipulate the facial emotions of actors in videos based on emotion labels or reference styles."}
{"name": "kinivi/tello-gesture-control", "full_name": "kinivi/tello-gesture-control", "topics": ["python", "mediapipe", "tello", "tello-drone", "tello-sdk", "gesture-recognition", "gesture-control", "notebook-jupyter", "tensorflow", "dji-tello", "dji-tello-edu", "gesture-recognizer", "gesture-controller"], "description": "Control  DJI Tello \ud83d\udef8 using hand gesture recognition on drone`s camera video-stream. Feel free to contribute!"}
{"name": "hellonlp/classifier_multi_label", "full_name": "hellonlp/classifier_multi_label", "topics": ["multi-label-classification", "multi-label", "tensorflow", "text-classification", "text-classifier", "bert", "albert", "classifier-multi-label"], "description": "multi-label\uff0cclassifier\uff0ctext classification\uff0c\u591a\u6807\u7b7e\u6587\u672c\u5206\u7c7b\uff0c\u6587\u672c\u5206\u7c7b\uff0cBERT\uff0cALBERT\uff0cmulti-label-classification"}
{"name": "iigroup/maniqa", "full_name": "IIGROUP/MANIQA", "topics": ["nr-iqa", "swintransformer", "vision-transformer", "cvpr2022", "pytorch-implementation", "deep-learning", "csiq", "kadid-10k", "live", "pipal"], "description": "[CVPRW 2022] MANIQA: Multi-dimension Attention Network for No-Reference Image Quality Assessment"}
{"name": "aws-deepracer-community/deepracer-simapp", "full_name": "aws-deepracer-community/deepracer-simapp", "topics": ["deepracer", "tensorflow"], "description": "Extract from AWS DeepRacer Robomaker Bundle"}
{"name": "imirzadeh/stable-continual-learning", "full_name": "imirzadeh/stable-continual-learning", "topics": ["continual-learning", "catastrophic-forgetting", "pytorch", "lifelong-learning", "deep-learning"], "description": "Towards increasing stability of neural networks for continual learning: https://arxiv.org/abs/2006.06958.pdf (NeurIPS'20)"}
{"name": "dengbocong/nlp-dialogue", "full_name": "DengBoCong/nlp-dialogue", "topics": ["nlp", "bot", "machine-learning", "deep-learning", "bots", "natural-language-processing", "chatbot", "nlu", "conversational-ai"], "description": "A full-process dialogue system that can be deployed online"}
{"name": "wmcnally/evopose2d", "full_name": "wmcnally/evopose2d", "topics": ["pose-estimation", "deep-learning", "human-pose-estimation", "tensorflow", "tpu", "tensorflow2"], "description": "EvoPose2D is a two-stage human pose estimation model that was designed using neuroevolution. It achieves state-of-the-art accuracy on COCO."}
{"name": "applied-ai-lab/genesis", "full_name": "applied-ai-lab/genesis", "topics": ["machine-learning", "pytorch", "vae", "generative-model", "object-centric"], "description": "Official PyTorch implementation of GENESIS and GENESIS-V2"}
{"name": "sea-snell/implicit-language-q-learning", "full_name": "Sea-Snell/Implicit-Language-Q-Learning", "topics": ["implicit-q-learning", "iql", "language-model", "nlp", "offline-rl", "python", "pytorch", "q-learning", "reinforcement-learning"], "description": "Official code from the paper \"Offline RL for Natural Language Generation with Implicit Language Q Learning\""}
{"name": "jhyuklee/densephrases", "full_name": "princeton-nlp/DensePhrases", "topics": ["nlp", "open-domain-qa", "slot-filling", "knowledge-base", "information-retrieval", "passage-retrieval"], "description": "ACL'2021: Learning Dense Representations of Phrases at Scale; EMNLP'2021: Phrase Retrieval Learns Passage Retrieval, Too https://arxiv.org/abs/2012.12624"}
{"name": "cerebroai/reformers", "full_name": "cerebroai/reformers", "topics": ["reformers", "pytorch", "tensorflow"], "description": "Efficient Transformers for research, PyTorch and Tensorflow using Locality Sensitive Hashing"}
{"name": "tatigabru/kaggle-rsna", "full_name": "tatigabru/kaggle-rsna", "topics": ["object-detection", "python", "machine-learning", "deep-learning", "detection", "image-processing", "image-augmentation", "pneumonia-detection", "retinanet", "neural-networks", "classification", "medical-imaging", "computer-assisted-diagnosis"], "description": "Deep Learning for Automatic Pneumonia Detection, RSNA challenge"}
{"name": "bluemirrors/cvu", "full_name": "BlueMirrors/cvu", "topics": ["computer-vision", "object-detection", "yolov5", "tensorrt", "tensorflow2", "pytorch", "onnxruntime"], "description": "Computer Vision deployment tools for dummies and experts. CVU  aims at making CV pipelines easier to build and consistent around platforms, devices, and models."}
{"name": "jianghaojun/condensenetv2", "full_name": "jianghaojun/CondenseNetV2", "topics": ["deep-learning", "computer-vision", "cvpr2021", "mobile-networks", "pytorch"], "description": "[CVPR 2021] CondenseNet V2: Sparse Feature Reactivation for Deep Networks"}
{"name": "ameraner/dsen2-cr", "full_name": "ameraner/dsen2-cr", "topics": ["sar", "cloud-removal", "optical", "satellite-imagery", "satellite-data", "sentinel", "sentinel-2", "sentinel-1", "deep-learning", "residual-neural-network", "satellite"], "description": "DSen2-CR: A network for removing clouds from Sentinel-2 images. This repo contains the model code, written in Python/Keras, as well as links to pre-trained checkpoints and the SEN12MS-CR dataset."}
{"name": "xingyu-lin/mbpo_pytorch", "full_name": "Xingyu-Lin/mbpo_pytorch", "topics": [], "description": "A pytorch reprelication of the model-based reinforcement learning algorithm MBPO"}
{"name": "zfturbo/classification_models_3d", "full_name": "ZFTurbo/classification_models_3D", "topics": ["keras", "deep-learning", "image-classification"], "description": "Set of models for classifcation of 3D volumes"}
{"name": "marload/aquvitae", "full_name": "marload/aquvitae", "topics": ["tensorflow", "pytorch", "light-weight", "deep-learning", "machine-learning", "knowledge-distillation", "model-compression"], "description": "Knowledge Distillation Toolkit"}
{"name": "master/tensorflow-riemopt", "full_name": "master/tensorflow-riemopt", "topics": ["tensorflow", "optimization", "non-euclidean-geometry", "manifold", "neural-networks", "machine-learning"], "description": "A library for optimization on Riemannian manifolds"}
{"name": "allanyiin/trident", "full_name": "AllanYiin/trident", "topics": ["pytorch", "tensorflow", "deep-learning", "neural-network", "convolutional-networks"], "description": "Make pytorch and tensorflow two become one."}
{"name": "tanishqgautam/ml-from-scratch", "full_name": "tanishqgautam/ML-from-Scratch", "topics": ["deep-learning", "machine-learning", "numpy", "regression", "classification", "neural-network", "clustering", "svm"], "description": "ML From Scratch"}
{"name": "amazon-research/meta-q-learning", "full_name": "amazon-science/meta-q-learning", "topics": ["deep-learning", "meta-learning", "reinforcement-learning", "multi-task-learning"], "description": "Code for the paper \"Meta-Q-Learning\"( ICLR 2020)"}
{"name": "liu-nlper/dialogue-utterance-rewriter", "full_name": "liu-nlper/dialogue-utterance-rewriter", "topics": ["transformer", "rewriter", "bert", "pointer", "pointer-networks"], "description": "ACL 2019\u8bba\u6587\u590d\u73b0\uff1aImproving Multi-turn Dialogue Modelling with Utterance ReWriter"}
{"name": "hsword/hetu", "full_name": "Hsword/Hetu", "topics": ["deep-learning", "distributed-systems"], "description": "A high-performance distributed deep learning system targeting large-scale and automated distributed training. If you have any interests, please visit/star/fork https://github.com/PKU-DAIR/Hetu"}
{"name": "google-research/jestimator", "full_name": "google-research/jestimator", "topics": ["deep-learning", "flax", "jax", "language-model", "machine-learning", "mnist", "optimization", "optimization-algorithms", "optimizer", "transformer"], "description": "Amos optimizer with JEstimator lib."}
{"name": "wesleyhsieh0806/c3-sl", "full_name": "WesleyHsieh0806/C3-SL", "topics": ["communication-efficient", "computer-vision", "deep-learning", "machine-learning", "split-learning"], "description": "C3-SL: Circular Convolution-Based Batch-Wise Compression for Communication-Efficient Split Learning (IEEE MLSP 2022)"}
{"name": "triton-inference-server/model_navigator", "full_name": "triton-inference-server/model_navigator", "topics": ["deep-learning", "gpu", "inference"], "description": "The Triton Model Navigator is a tool that provides the ability to automate the process of model deployment on the Triton Inference Server."}
{"name": "graykode/matorage", "full_name": "graykode/matorage", "topics": ["deep-learning", "storage-manager", "pytorch", "tensorflow"], "description": "Matorage is tensor(multidimensional matrix) object storage manager for deep learning framework(Pytorch, Tensorflow V2, Keras)"}
{"name": "clovaai/symmetrical-synthesis", "full_name": "clovaai/symmetrical-synthesis", "topics": ["metric-learning", "image-retrieval", "image-clustering", "deep-learning", "synthesis", "cars196", "stanford-online-products", "cub200-2011", "aaai2020", "tensorflow"], "description": "Official Tensorflow implementation of \"Symmetrical Synthesis for Deep Metric Learning\" (AAAI 2020)"}
{"name": "longmaoteamtf/deeprecsys", "full_name": "LongmaoTeamTf/deep_recommenders", "topics": ["deep-learning", "ranking", "retrieval", "recommendation-system", "multi-task-learning"], "description": "Deep Recommenders"}
{"name": "radekd91/emoca", "full_name": "radekd91/emoca", "topics": ["computer-vision", "face-reconstruction", "emotion-recognition", "cvpr", "pytorch", "pytorch-lightning", "deep-learning", "3d-reconstruction", "3d-graphics", "3d-vision", "face-alignment", "morphable-model", "face-model", "flame-fitting", "face", "3d-face-alignment", "3d-face-reconstruction"], "description": "Official repository accompanying a CVPR 2022 paper EMOCA: Emotion Driven Monocular Face Capture And Animation. EMOCA takes a single image of a face as input and produces a 3D reconstruction. EMOCA sets the new standard on reconstructing highly emotional images in-the-wild"}
{"name": "troublemaker-r/chinese_coreference_resolution", "full_name": "troublemaker-r/Chinese_Coreference_Resolution", "topics": ["python", "pytorch", "chinese-coreference-resolution", "natural-language-processing", "spanbert"], "description": "\u57fa\u4e8eSpanBert\u7684\u4e2d\u6587\u6307\u4ee3\u6d88\u89e3\uff0cpytorch\u5b9e\u73b0"}
{"name": "rayguan97/m3detr", "full_name": "rayguan97/M3DETR", "topics": ["point-cloud", "object-detection", "3d-object-detection", "transformer", "deep-learning", "waymo-open-dataset", "kitti-dataset"], "description": "Code base for M3DeTR: Multi-representation, Multi-scale, Mutual-relation 3D Object Detection with Transformers"}
{"name": "esa/torchquad", "full_name": "esa/torchquad", "topics": ["python", "gpu", "pytorch", "torchquad", "numerical-integration", "multidimensional-integration", "integration", "automatic-differentiation", "high-performance-computing", "monte-carlo-integration", "vegas", "vegas-enhanced", "machine-learning"], "description": "Numerical integration in arbitrary dimensions on the GPU using PyTorch / TF / JAX"}
{"name": "zjunlp/mkgformer", "full_name": "zjunlp/MKGformer", "topics": ["mkgformer", "kg", "knowledge-graph", "multimodal", "mkg", "relation-extraction", "kgc", "link-prediction", "ner", "transformer", "mnre", "sigir2022", "pytorch", "former", "dataset"], "description": "Code for the SIGIR 2022 paper \"Hybrid Transformer with Multi-level Fusion for Multimodal Knowledge Graph Completion.\""}
{"name": "xionghuichen/rlassistant", "full_name": "xionghuichen/RLAssistant", "topics": ["reinforcement-learning", "pytorch", "tensorflow", "experiment-tracker", "training-tracking"], "description": "RLA is a tool for managing your RL experiments automatically"}
{"name": "microsoft/adamix", "full_name": "microsoft/AdaMix", "topics": ["adapter", "nlp", "pytorch", "parameter-efficient", "bert", "glue", "nlu", "roberta", "dart", "gpt-2", "nlg", "webnlg"], "description": "This is the implementation of the paper AdaMix: Mixture-of-Adaptations for Parameter-efficient Model Tuning (https://arxiv.org/abs/2205.12410). "}
{"name": "vineeths96/spoken-keyword-spotting", "full_name": "vineeths96/Spoken-Keyword-Spotting", "topics": ["keyword-spotting", "kws", "speech-recognition", "cnn", "svm", "deep-learning", "sklearn", "tensorflow"], "description": "In this repository, we explore using a hybrid system consisting of a Convolutional Neural Network and a Support Vector Machine for Keyword Spotting task."}
{"name": "huzongxiang/matdgl", "full_name": "huzongxiang/MatDGL", "topics": ["machine-learning", "deep-learning", "neural-networks", "graph", "transformer", "massagepassing", "tensorflow", "materials", "pretrain"], "description": "MatDGL is a neural network package that allows researchers to train custom models for crystal modeling tasks. It aims to accelerate the research and application of material science."}
{"name": "huzongxiang/crystalnetwork", "full_name": "huzongxiang/MatDGL", "topics": ["machine-learning", "deep-learning", "neural-networks", "graph", "transformer", "massagepassing", "tensorflow", "materials", "pretrain"], "description": "MatDGL is a neural network package that allows researchers to train custom models for crystal modeling tasks. It aims to accelerate the research and application of material science."}
{"name": "xiayouran/visutvm", "full_name": "xiayouran/VisuTVM", "topics": ["cpp", "python3", "tvm", "visualization", "visualization-tools", "relay-ir", "tvm-relay-ir", "visu-relay-ir", "visu-tvm", "neural-network", "neural-network-visualization"], "description": "TVM Relay IR Visualization Tool (TVM \u53ef\u89c6\u5316\u5de5\u5177)"}
{"name": "imdeep2905/neural-network-sandbox", "full_name": "imdeep2905/Neural-Network-Sandbox", "topics": ["machine-learning", "deep-learning", "neural-networks", "python", "gui", "kivy", "tensorflow", "keras", "matplotlib"], "description": "This is a source code of Software called Neural Network Sandbox.Neural Network Sandbox makes making and training basic feed forward neural networks easy."}
{"name": "abdelrahman-gaber/tf2-object-detection-api-tutorial", "full_name": "abdelrahman-gaber/tf2-object-detection-api-tutorial", "topics": ["tf2", "tensorflow2", "tensorflow", "object-detection", "object-detection-api", "tensorflow2-models", "keras-tensorflow", "tf2-tutorial", "object-detection-api-tutorial", "tensorflow-object-detection-api", "tf2-object-detection-api", "detection-models"], "description": "Tensorflow 2 Object Detection API Tutorial. This tutorial will take you from installation, to running pre-trained detection model, and training your model with a custom dataset, then exporting it for inference."}
{"name": "nju-websoft/mukg", "full_name": "nju-websoft/muKG", "topics": ["entity-alignment", "entity-typing", "link-prediction", "representation-learning", "multi-source-knowledge-graphs", "deep-learning", "pytorch"], "description": "\u03bcKG: A Library for Multi-source Knowledge Graph Embeddings and Applications, ISWC 2022"}
{"name": "unifyai/vision", "full_name": "unifyai/vision", "topics": ["python", "machine-learning", "deep-learning", "vision", "tensorflow", "pytorch", "mxnet", "numpy", "jax", "sdf", "depth", "rendering", "point-cloud", "ivy", "voxel", "3d"], "description": "3D Vision functions with end-to-end support for deep learning developers, written in Ivy."}
{"name": "tlkh/tf-metal-experiments", "full_name": "tlkh/tf-metal-experiments", "topics": ["gpu", "deep-learning", "tensorflow", "m1", "m1-max", "benchmark", "bert"], "description": "TensorFlow Metal Backend on Apple Silicon Experiments (just for fun)"}
{"name": "feymanpriv/pymetric", "full_name": "feymanpriv/pymetric", "topics": ["metric-learning", "classification", "pytorch", "retrieval"], "description": "pytorch metric learning tools and pycls"}
{"name": "eezkni/uegan", "full_name": "eezkni/UEGAN", "topics": ["enhancement-and-restoration", "gan", "unsupervised-learning", "generative-adversarial-network", "compter-vision", "image-manipulation"], "description": "[TIP2020] Pytorch implementation of \"Towards Unsupervised Deep Image Enhancement with Generative Adversarial Network\""}
{"name": "slientge/sequential_recommendation_tensorflow", "full_name": "slientGe/Sequential_Recommendation_Tensorflow", "topics": ["recommendation", "tensorflow", "python", "caser", "gru4rec", "attrec", "fpmc", "transrec", "sequential-recommendation", "sasrec"], "description": "Several sequential recommended models implemented by tenosrflow1.x"}
{"name": "jelifysh/100daysofmlcode", "full_name": "tanishqgautam/ML-from-Scratch", "topics": ["deep-learning", "machine-learning", "numpy", "regression", "classification", "neural-network", "clustering", "svm"], "description": "ML From Scratch"}
{"name": "vita-group/ultra-data-efficient-gan-training", "full_name": "VITA-Group/Ultra-Data-Efficient-GAN-Training", "topics": ["gan", "generative-adversarial-network", "lottery-ticket-hypothesis", "data-efficient", "augmentation", "data-efficient-gan-training"], "description": "[NeurIPS'21] \"Ultra-Data-Efficient GAN Training: Drawing A Lottery Ticket First, Then Training It Toughly\", Tianlong Chen, Yu Cheng, Zhe Gan, Jingjing Liu, Zhangyang Wang "}
{"name": "tvs-ai/pytorch_rppgs", "full_name": "remotebiosensing/rppg", "topics": ["deepphys", "mtts", "physnet", "pytorch", "deep-learning", "rppg", "remote-ppg", "blood-pressure", "bp", "ppg2abp"], "description": "implement remote-ppg (rppg;fppg) & PPG 2 ABP model  using pytorch"}
{"name": "mihawkhu/dcase2020_task1", "full_name": "MihawkHu/DCASE2020_task1", "topics": ["dcase2020", "audio-scene-classification", "audio-processing", "keras", "keras-tensorflow", "cnn", "resnets"], "description": "Code for DCASE 2020 task 1a and task 1b."}
{"name": "octoml/apple-m1-bert", "full_name": "octoml/Apple-M1-BERT", "topics": ["machine-learning", "m1-mac", "tensorflow"], "description": "3X speedup over Apple\u2019s TensorFlow plugin by using Apache TVM on M1"}
{"name": "bubbliiiing/yolox-keras", "full_name": "bubbliiiing/yolox-keras", "topics": [], "description": "\u8fd9\u662f\u4e00\u4e2ayolox-keras\u7684\u6e90\u7801\uff0c\u53ef\u4ee5\u7528\u4e8e\u8bad\u7ec3\u81ea\u5df1\u7684\u6a21\u578b\u3002"}
{"name": "noachache/textboxgan", "full_name": "NoAchache/TextBoxGAN", "topics": ["generative-adversarial-network", "ocr", "text-box", "computer-vision", "gan"], "description": "Generate text boxes from input words with a GAN."}
{"name": "deel-ai/deel-lip", "full_name": "deel-ai/deel-lip", "topics": ["tensorflow", "tensorflow2", "lipschitz-functions", "lipschitz-regularization", "keras", "keras-tensorflow", "lipschitz", "wasserstein-distance-estimation", "spectral-normalization"], "description": "Tensorflow 2 implementation of k-Lipschitz layers."}
{"name": "bubbliiiing/centernet-keras", "full_name": "bubbliiiing/centernet-keras", "topics": [], "description": "\u8fd9\u662f\u4e00\u4e2acenternet-keras\u7684\u6e90\u7801\uff0c\u53ef\u4ee5\u7528\u4e8e\u8bad\u7ec3\u81ea\u5df1\u7684\u6a21\u578b\u3002"}
{"name": "frankkramer-lab/covid19.miscnn", "full_name": "frankkramer-lab/covid19.MIScnn", "topics": ["covid-19", "medical-image-analysis", "covid-19-ct", "segmentation", "pneumonia", "lung-disease", "infection", "3d-unet", "lung-segmentation", "medical-imaging", "lung-lobes", "computer-vision", "u-net", "healthcare-imaging", "deep-learning", "tensorflow", "medical-image-processing"], "description": "Robust Chest CT Image Segmentation of COVID-19 Lung Infection based on limited data"}
{"name": "yuzhiyizhan/bearcat_captcha", "full_name": "yuzhiyizhan/Bearcat_captcha", "topics": ["tensorflow2", "train-dataset", "pack-dataset", "captcha", "gpu", "test-dataset", "cpu"], "description": "\u718a\u732b\u8bc6\u522b\u4e0d\u5b9a\u957f\u9a8c\u8bc1\u7801,\u57fa\u4e8etensorflow2.2(tensorflow2.3\u4e5f\u53ef\u4ee5\u8fd0\u884c)\u8f7b\u677e\u5c31\u80fd\u7ec3\u51fa\u4e0d\u9519\u7684\u6a21\u578b"}
{"name": "etnguyen03/photomanager", "full_name": "etnguyen03/photomanager", "topics": ["google-photos", "django", "python", "tensorflow", "self-hosted", "keras"], "description": "Self hosted Google Photos alternative"}
{"name": "compvis/brushstroke-parameterized-style-transfer", "full_name": "CompVis/brushstroke-parameterized-style-transfer", "topics": ["deep-learning", "computer-vision", "style-transfer", "differentiable-rendering"], "description": "TensorFlow implementation of our CVPR 2021 Paper \"Rethinking Style Transfer: From Pixels to Parameterized Brushstrokes\"."}
{"name": "nadeemlab/deepliif", "full_name": "nadeemlab/DeepLIIF", "topics": ["multiplex", "immunohistochemical-images", "immunohistochemistry", "deep-learning", "multitask-learning", "pathology", "pathology-image", "pathology-gan", "segmentation", "cell-segmentation", "cell-biology", "cloud-native-applications", "pytorch"], "description": "Deep Learning Inferred Multiplex ImmunoFluorescence for IHC Image Quantification (https://deepliif.org) [Nature Machine Intelligence'22, CVPR'22]"}
{"name": "mczhi/dipp", "full_name": "MCZhi/DIPP", "topics": ["deep-learning", "prediction-model"], "description": "Differentiable Integrated Prediction and Planning Framework for Urban Autonomous Driving  https://mczhi.github.io/DIPP/"}
{"name": "nimbleedge/recoedge", "full_name": "NimbleEdge/EnvisEdge", "topics": ["recommender-system", "privacy", "machine-learning", "edge-computing", "pytorch", "deep-learning", "python"], "description": "Deploy recommendation engines with Edge Computing"}
{"name": "uds-lsv/bert-stable-fine-tuning", "full_name": "uds-lsv/bert-stable-fine-tuning", "topics": ["nlp", "bert", "fine-tuning"], "description": "On the Stability of Fine-tuning BERT: Misconceptions, Explanations, and Strong Baselines"}
{"name": "suoivy/lpd-net", "full_name": "Suoivy/LPD-net", "topics": ["computer-vision", "point-cloud", "deep-learning", "place-recognition"], "description": "LPD-Net: 3D Point Cloud Learning for Large-Scale Place Recognition and Environment Analysis, ICCV 2019, Seoul, Korea"}
{"name": "westgarthb/style-transfer-video-processor", "full_name": "westgarthb/style-transfer-video-processor", "topics": ["neural-network", "style-transfer", "video"], "description": "This code extends the neural style transfer image processing technique to video by generating smooth transitions between several reference style images"}
{"name": "buxihuo/ow-yolo", "full_name": "buxihuo/OW-YOLO", "topics": ["yolov5", "pytorch", "yolo", "object-detection", "deep-learning", "unknown", "autolabel", "open-world-detection", "open-world", "yolov8"], "description": "Detect known and unknown objects in the open world\uff08\u5177\u6709\u533a\u5206\u5df2\u77e5\u4e0e\u672a\u77e5\u80fd\u529b\u7684\u5168\u65b0\u68c0\u6d4b\u5668\uff09\uff09"}
{"name": "youngkyunjang/gpq", "full_name": "youngkyunJang/GPQ", "topics": ["semi-supervised-learning", "metric-learning", "deep-learning", "cvpr2020", "tensorflow", "image-retrieval", "product-quantization", "hashing"], "description": "Generalized Product Quantization Network For Semi-supervised Image Retrieval - CVPR 2020"}
{"name": "klauspa/yolov4-tensorflow", "full_name": "klauspa/Yolov4-tensorflow", "topics": [], "description": "tensorflow implementation for Yolo v4"}
{"name": "chenmnz/cf-vit", "full_name": "ChenMnZ/CF-ViT", "topics": ["computer-vision", "vision-transformer", "image-classification", "dynamic", "efficiency"], "description": "Pytorch implementation of \"CF-ViT: A General Coarse-to-Fine Method for Vision Transformer\""}
{"name": "canturan10/satellighte", "full_name": "canturan10/satellighte", "topics": ["image-classification", "satellite", "pytorch", "pytorch-lightning", "computer-vision", "state-of-the-art", "deep-learning"], "description": "\ud83d\udce1 PyTorch Lightning Implementations of Recent Satellite Image Classification !"}
{"name": "dvlab-research/scgan", "full_name": "dvlab-research/SCGAN", "topics": ["deep-learning", "gan", "image-synthesis", "iccv2021", "pytorch", "conditional-gan", "image-rendering", "dynamic-networks"], "description": "The implementation of 'Image synthesis via semantic composition', ICCV2021."}
{"name": "joffery/m-ada", "full_name": "joffery/M-ADA", "topics": [], "description": "The Pytorch implementation for \"Learning to Learn Single Domain Generalization\" (CVPR 2020)"}
{"name": "bytedance/largebatchctr", "full_name": "bytedance/LargeBatchCTR", "topics": ["ctr", "deep-learning", "recommendation-system"], "description": "Large batch training of CTR models based on DeepCTR with CowClip."}
{"name": "zhangzhiqiangccm/nlp-project", "full_name": "zhangzhiqiangccm/NLP-project", "topics": [], "description": "\u81ea\u7136\u8bed\u8a00\u5904\u7406\u4e2d\u7684\u57fa\u7840\u4efb\u52a1\uff0c\u5305\u542b\u4f46\u4e0d\u9650\u4e8e\u6587\u672c\u8868\u793a\uff0c\u6587\u672c\u5206\u7c7b\uff0c\u547d\u540d\u5b9e\u4f53\u8bc6\u522b\uff0c\u5173\u7cfb\u62bd\u53d6\uff0c\u6587\u672c\u751f\u6210\uff0c\u6587\u672c\u6458\u8981\u7b49\uff0c\u57fa\u4e8etensorflow2\u6216Pytorch\uff0c\u6240\u6709\u4ee3\u7801\u5747\u7ecf\u8fc7\u6d4b\u8bd5\uff0c\u9879\u76ee\u4e2d\u4e5f\u5305\u542b\u76f8\u5173\u6570\u636e\u3002"}
{"name": "xuxingya/tf2crf", "full_name": "xuxingya/tf2crf", "topics": [], "description": "CRF layer for tensorflow 2 keras"}
{"name": "edouardelasalles/srvp", "full_name": "edouardelasalles/srvp", "topics": ["pytorch", "deep-learning", "video-prediction", "vae", "stochastic", "latent-variable-models", "generative-model", "icml-2020"], "description": "Official implementation of the paper Stochastic Latent Residual Video Prediction"}
{"name": "ritvik19/pyradox", "full_name": "Ritvik19/pyradox", "topics": ["python3", "tensorflow2", "neural-networks", "deep-learning", "artificial-neural-networks", "deep-neural-networks", "convolutional-neural-networks", "feedforward-neural-network", "recurrent-neural-networks"], "description": "State of the Art Neural Networks for Deep Learning"}
{"name": "nod-ai/shark", "full_name": "nod-ai/SHARK", "topics": ["deep-learning", "machine-learning", "mlir", "pytorch", "amd", "apple-silicon", "nvidia"], "description": "SHARK - High Performance Machine Learning Distribution"}
{"name": "thunlp/sememepso-attack", "full_name": "thunlp/SememePSO-Attack", "topics": ["nlp", "adversarial-examples", "adversarial-attacks", "sememe", "pso"], "description": "Code and data of the ACL 2020 paper \"Word-level Textual Adversarial Attacking as Combinatorial Optimization\""}
{"name": "mims-harvard/raindrop", "full_name": "mims-harvard/Raindrop", "topics": ["time-series", "representation-learning", "deep-learning", "graph-neural-networks", "embeddings", "irregular-time-series", "machine-learning"], "description": "Graph Neural Networks for Irregular Time Series"}
{"name": "tensordiffeq/tensordiffeq", "full_name": "tensordiffeq/TensorDiffEq", "topics": ["pinns", "scientific-machine-learning", "tensorflow", "tensorflow2", "physics-informed-learning", "physics-informed-neural-networks", "gpu", "gpu-computing", "gpu-acceleration", "multi-gpu", "multi-gpu-training", "neural-networks", "differential-equations", "neural-pde", "collocation", "distributed-systems"], "description": "Efficient and Scalable Physics-Informed Deep Learning and Scientific Machine Learning on top of Tensorflow for multi-worker distributed computing"}
{"name": "project-agml/agml", "full_name": "Project-AgML/AgML", "topics": ["deep-learning", "agriculture", "pytorch", "dataset", "image-classification", "object-detection", "semantic-segmentation", "computer-vision", "synthetic-data"], "description": "AgML is a centralized framework for agricultural machine learning. AgML provides access to public agricultural datasets for common agricultural deep learning tasks, with standard benchmarks and pretrained models, as well the ability to generate synthetic data and annotations."}
{"name": "horoiwa/deep_reinforcement_learning_gallery", "full_name": "horoiwa/deep_reinforcement_learning_gallery", "topics": ["deep-reinforcement-learning", "tensorflow2"], "description": "Deep reinforcement learning with tensorflow2"}
{"name": "jiaweihe1996/gmtracker", "full_name": "jiaweihe1996/GMTracker", "topics": ["pytorch", "deep-learning", "tracking-by-detection"], "description": "Official PyTorch implementation of \"Learnable Graph Matching: Incorporating Graph Partitioning with Deep Feature Learning for Multiple Object Tracking\" (CVPR 2021). "}
{"name": "bubbliiiing/efficientdet-tf2", "full_name": "bubbliiiing/efficientdet-tf2", "topics": [], "description": "\u8fd9\u662f\u4e00\u4e2aefficientdet-tf2\uff08tensorflow2\uff09\u7684\u6e90\u7801\uff0c\u53ef\u4ee5\u7528\u4e8e\u8bad\u7ec3\u81ea\u5df1\u7684\u6a21\u578b\u3002"}
{"name": "clovaai/embedding-expansion", "full_name": "clovaai/embedding-expansion", "topics": ["metric-learning", "image-retrieval", "image-clustering", "deep-learning", "synthesis", "cars196", "stanford-online-products", "cub200-2011", "cvpr2020", "mxnet"], "description": "Official MXNet implementation of \"Embedding Expansion: Augmentation in Embedding Space for Deep Metric Learning\" (CVPR 2020)"}
{"name": "maximintegratedai/ai8x-training", "full_name": "MaximIntegratedAI/ai8x-training", "topics": ["max78000", "maxim", "machine-learning", "maxim-integrated", "ai", "artificial-intelligence", "deep-learning", "analog-devices", "max78002"], "description": "Model Training for ADI's MAX78000 and MAX78002 AI Devices"}
{"name": "meijieru/yet_another_mobilenet_series", "full_name": "meijieru/yet_another_mobilenet_series", "topics": [], "description": "Yet Another Pytorch Distributed MobileNetV2-based Networks Implementation"}
{"name": "instadeepai/catx", "full_name": "instadeepai/catx", "topics": ["contextual-bandits", "jax", "deep-learning", "python"], "description": "\ud83d\udc08\u200d\u2b1b Contextual bandits library for continuous action trees with smoothing in JAX"}
{"name": "rom1504/clip-retrieval", "full_name": "rom1504/clip-retrieval", "topics": ["semantic-search", "deep-learning", "multimodal", "ai", "clip", "knn"], "description": "Easily compute clip embeddings and build a clip retrieval system with them"}
{"name": "furkanom/tf-faster-rcnn", "full_name": "FurkanOM/tf-faster-rcnn", "topics": ["faster-rcnn", "object-detection", "tensorflow2", "keras-tensorflow", "deep-learning", "batch-processing", "tf2", "mobilenetv2"], "description": "Tensorflow 2 Faster-RCNN implementation from scratch supporting to the batch processing with MobileNetV2 and VGG16 backbones"}
{"name": "ibaigorordo/hitnet-stereo-depth-estimation", "full_name": "ibaiGorordo/HITNET-Stereo-Depth-estimation", "topics": ["google-research", "tensorflow", "tensorflow2", "hitnet", "stereo-vision", "stereo-matching", "depth-estimation", "deep-learning", "driving-stereo-dataset", "driving-stereo"], "description": "Python scripts for performing stereo depth estimation using the HITNET Tensorflow model."}
{"name": "uvipen/quickdraw-airgesture-tensorflow", "full_name": "uvipen/QuickDraw-AirGesture-tensorflow", "topics": ["tensorflow", "quickdraw-dataset", "air-gestures", "python3", "deep-learning", "neural-network", "object-detection"], "description": "Implementation of QuickDraw - an online game developed by Google, combined with AirGesture - a simple gesture recognition application"}
{"name": "densechen/arelu", "full_name": "densechen/AReLU", "topics": ["pytorch", "activation-functions", "deep-learning", "attention-mechanism", "transfer-learning", "ai", "python", "attention", "meta-learning"], "description": "AReLU: Attention-based-Rectified-Linear-Unit"}
{"name": "alasdairtran/fourierflow", "full_name": "alasdairtran/fourierflow", "topics": ["simulation", "navier-stokes", "fourier-transform", "pytorch"], "description": "[ICLR 2023] Factorized Fourier Neural Operators"}
{"name": "freshairtonight/af2complex", "full_name": "FreshAirTonight/af2complex", "topics": ["bioinformatics", "deep-learning", "alphafold2", "protein-complexes", "protein-protein-interaction", "protein-structure-prediction", "protein-protein-docking"], "description": "Predicting direct protein-protein interactions with AlphaFold deep learning neural network models."}
{"name": "bubbliiiing/retinaface-keras", "full_name": "bubbliiiing/retinaface-keras", "topics": [], "description": "\u8fd9\u662f\u4e00\u4e2aretinaface-keras\u7684\u6e90\u7801\uff0c\u53ef\u4ee5\u7528\u4e8e\u8bad\u7ec3\u81ea\u5df1\u7684\u6a21\u578b\u3002"}
{"name": "l0sg/nanoflow", "full_name": "L0SG/NanoFlow", "topics": ["normalizing-flows", "deep-generative-model", "density-estimation", "speech-synthesis", "pytorch", "probabilistic-models", "generative-models"], "description": "PyTorch implementation of the paper \"NanoFlow: Scalable Normalizing Flows with Sublinear Parameter Complexity.\" (NeurIPS 2020)"}
{"name": "eidoslab/torchstain", "full_name": "EIDOSLAB/torchstain", "topics": ["pytorch", "histopathology", "stain-normalization", "computational-pathology", "medical-imaging", "python", "digital-pathology", "numpy", "tensorflow"], "description": "Stain normalization tools for histological analysis and computational pathology"}
{"name": "hailo-ai/hailo_model_zoo", "full_name": "hailo-ai/hailo_model_zoo", "topics": ["deep-learning", "computer-vision", "ai-accelerators", "edge-ai", "hailo8", "quantized-neural-networks", "hailo", "quantization"], "description": "The Hailo Model Zoo includes pre-trained models and a full building and evaluation environment"}
{"name": "peterouzh/omni-gan-pytorch", "full_name": "PeterouZh/Omni-GAN-PyTorch", "topics": ["pytorch", "deep-learning", "generative-adversarial-network"], "description": "ICCV2021 (poster)"}
{"name": "pavankunchala/work-showcase", "full_name": "Pavankunchala/Work-Showcase", "topics": ["streamlit", "streamlit-applications", "edge", "opencv", "computer-vision", "deep-learning", "yolov4", "face-detection", "faceswap", "mediapipe", "vr", "workout-tracker"], "description": "Deep Learning and Computer Vision Applications using Streamlit"}
{"name": "cdjhz/multigen", "full_name": "cdjhz/multigen", "topics": ["pytorch", "kg", "nlg"], "description": "EMNLP2020 - Language Generation with Multi-hop Reasoning on Commonsense Knowledge Graph"}
{"name": "je-santos/poreflow-net", "full_name": "je-santos/PoreFlow-Net", "topics": ["cnn", "3d", "keras-tensorflow", "porous-media-flow", "3d-images", "lbm", "surrogate-models", "convolutional-neural-networks", "digital-rockphysics", "digital-rocks", "permeability", "poreflow-net", "convolutional-neural-network", "single-phase", "lattice-boltzmann", "neural-networks", "machine-learning", "keras", "tensorflow", "gpu"], "description": "3D CNN to predict single-phase flow velocity fields"}
{"name": "ranking666/yolov5-processing", "full_name": "Ranking666/Yolov5-Processing", "topics": ["ghostnet-yolov5", "eagleeye", "pytorch", "pruning", "backbone", "efficientnetv2", "shufflenetv2"], "description": "Multi-backbone, Prune,  Quantization,  KD"}
{"name": "ma7555/kerasgen", "full_name": "ma7555/kerasgen", "topics": ["triplet", "triplet-loss", "triplet-neural-network", "keras", "keras-tensorflow", "data-science", "data-generator", "data-generators", "data-generation", "tensorflow"], "description": "A Keras/Tensorflow compatible image data generator for TripletLoss"}
{"name": "avalon-benchmark/avalon", "full_name": "Avalon-Benchmark/avalon", "topics": ["deep-learning", "machine-learning", "python", "pytorch", "reinforcement-learning", "simulator"], "description": "A 3D video game environment and benchmark designed from scratch for reinforcement learning research"}
{"name": "cluebenchmark/lightlm", "full_name": "CLUEbenchmark/LightLM", "topics": ["nlpcc", "nlpcc2020", "nlp", "languagemodel", "bert", "chinese", "chinese-language-model"], "description": "\u9ad8\u6027\u80fd\u5c0f\u6a21\u578b\u6d4b\u8bc4 Shared Tasks in NLPCC 2020. Task 1 - Light Pre-Training Chinese Language Model for NLP Task"}
{"name": "gouthamvgk/facemesh_coreml_tf", "full_name": "gouthamvgk/facemesh_coreml_tf", "topics": [], "description": "This repository contains the code for converting tflite model of Real-time Facial Surface Geometry from Monocular Video on Mobile GPUs and Blazeface to tensorflow and coreml."}
{"name": "hltchkust/xpersona", "full_name": "HLTCHKUST/Xpersona", "topics": ["crosslingual", "dataset", "bert", "chatbot", "transformer", "dialog"], "description": "XPersona: Evaluating Multilingual Personalized Chatbot"}
{"name": "henry-prior/jax-rl", "full_name": "henry-prior/jax-rl", "topics": ["jax", "td3", "reinforcement-learning", "deep-learning", "actor-critic", "deep-reinforcement-learning", "mujoco", "sac", "soft-actor-critic", "maximum-a-posteriori-estimation", "deepmind", "flax", "mpo"], "description": "JAX implementations of core Deep RL algorithms"}
{"name": "georgian-io/pyoats", "full_name": "georgian-io/pyoats", "topics": ["anomaly", "anomaly-detection", "data-science", "time-series", "timeseries", "machine-learning", "deep-learning"], "description": "Quick and Easy Time Series Outlier Detection"}
{"name": "owlting/ai_basketball_games_video_editor", "full_name": "OwlTing/AI_basketball_games_video_editor", "topics": ["basketball", "machine-learning", "ai", "computer-vision", "artificial-intelligence", "deep-learning", "yolov4", "pytorch", "pytorch-yolov4", "tensorrt", "objection-detection"], "description": "AI Basketball Games Video Editor is a program to get basketball highlight video by PyTorch YOLOv4 object detection"}
{"name": "hypergol/hypergol", "full_name": "hypergol/hypergol", "topics": ["machine-learning", "data-science", "performance", "code-generation", "parallel-processing", "data-modelling", "deep-learning", "deployment"], "description": "Hypergol is a Data Science/Machine Learning productivity toolkit to accelerate any projects into production with autogenerated code, standardised structure for data and ML and parallel processing out-of-the-box."}
{"name": "nikp06/subwai", "full_name": "nikp06/subwAI", "topics": ["cnn", "game", "endless-runner", "ai", "machine-learning", "supervised-learning", "image-classification", "computer-vision"], "description": "Scripts for training an AI to play the endless runner Subway Surfers using a supervised machine learning approach by imitation and a convolutional neural network (CNN) for image classification"}
{"name": "borgwardtlab/set_functions_for_time_series", "full_name": "BorgwardtLab/Set_Functions_for_Time_Series", "topics": ["time-series-analysis", "set-functions", "deep-learning", "icml-2020"], "description": "Repository of the ICML 2020 paper \"Set Functions for Time Series\""}
{"name": "mourga/contrastive-active-learning", "full_name": "mourga/contrastive-active-learning", "topics": ["active-learning", "natural-language-processing", "acquisition-functions", "deep-learning"], "description": "Code for the EMNLP 2021 Paper \"Active Learning by Acquiring Contrastive Examples\" & the ACL 2022 Paper \"On the Importance of Effectively Adapting Pretrained Language Models for Active Learning\""}
{"name": "d0352276/csl-yolo", "full_name": "D0352276/CSL-YOLO", "topics": ["lightweight", "object-detection", "yolo", "yolov4-tiny", "yolov3-tiny", "peleenet", "tensorflow2", "state-of-the-art", "tensorflow"], "description": "A state of the art of new lightweight YOLO model implemented by TensorFlow 2. This project is the official code for the paper \"CSL-YOLO: A Cross-Stage Lightweight Object Detector with Low FLOPs\"in IEEE ISCAS 2022."}
{"name": "zlinao/mintl", "full_name": "zlinao/MinTL", "topics": ["task-oriented-dialogue", "transfer-learning", "language-model", "transformer"], "description": "MinTL: Minimalist Transfer Learning for Task-Oriented Dialogue Systems"}
{"name": "sharifamit/rvgan", "full_name": "SharifAmit/RVGAN", "topics": ["keras", "tensorflow", "retinal-vessel-segmentation", "vessel-segmentation", "gan", "generative-adversarial-network", "generative-adversarial-networks", "conditional-gan", "medical-imaging", "medical-image-analysis", "medical-image-segmentation", "retinal-diseases", "fundus", "fundus-image-analysis", "miccai"], "description": "[MICCAI'21] [Tensorflow] Retinal Vessel Segmentation using a Novel Multi-scale Generative Adversarial Network"}
{"name": "tteepe/gaitgraph", "full_name": "tteepe/GaitGraph", "topics": ["gait-recognition", "gcn", "hrnet", "pose-estimation", "pytorch", "deep-learning"], "description": "Official repository for \"GaitGraph: Graph Convolutional Network for Skeleton-Based Gait Recognition\" (ICIP'21)"}
{"name": "kywen1119/dsran", "full_name": "kywen1119/DSRAN", "topics": ["pytorch", "image-text-matching", "tcsvt", "cross-modal", "computer-vision"], "description": "Code for journal paper \"Learning Dual Semantic Relations with Graph Attention for Image-Text Matching\", TCSVT, 2020."}
{"name": "siyuhuang/posestylizer", "full_name": "siyuhuang/PoseStylizer", "topics": ["person-image-generation", "pytorch"], "description": "PyTorch implementation of Generating Person Images with Appearance-aware Pose Stylizer (IJCAI 2020)"}
{"name": "rishit-dagli/perceiver", "full_name": "Rishit-dagli/Perceiver", "topics": ["deep-learning", "artificial-intelligence", "neural-network", "transformers", "attention-mechanism", "python", "tensorflow", "attention", "transformer", "machine-learning"], "description": "Implementation of Perceiver, General Perception with Iterative Attention in TensorFlow"}
{"name": "apapiu/guided-diffusion-keras", "full_name": "apapiu/guided-diffusion-keras", "topics": ["deep-learning", "diffusion-models", "generative-model", "keras", "text-to", "text-to-image", "stable-diffusion"], "description": "Text to Image Diffusion Models in Keras"}
{"name": "nvidia-merlin/systems", "full_name": "NVIDIA-Merlin/systems", "topics": ["deep-learning", "gpu", "recommender-system", "recommendation-system", "ensemble", "machine-learning", "python", "tensorflow"], "description": "Merlin Systems provides tools for combining recommendation models with other elements of production recommender systems (like feature stores, nearest neighbor search, and exploration strategies) into end-to-end recommendation pipelines that can be served with Triton Inference Server."}
{"name": "google-research/plur", "full_name": "google-research/plur", "topics": ["machine-learning", "deep-learning", "program-synthesis", "software-engineering", "research"], "description": "PLUR (Programming-Language Understanding and Repair) is a collection of source code datasets suitable for graph-based machine learning. We provide scripts for downloading, processing, and loading the datasets. This is done by offering a unified API and data structures for all datasets."}
{"name": "janosh/tensorboard-reducer", "full_name": "janosh/tensorboard-reducer", "topics": ["tensorboard", "pytorch", "tensorboard-pytorch", "reducer", "machine-learning", "averaging", "csv", "tensorboard-reducer"], "description": "Reduce multiple PyTorch TensorBoard runs to new event (or CSV) files."}
{"name": "anirudh257/strm", "full_name": "Anirudh257/strm", "topics": ["few-shot", "few-shot-learning", "few-shot-recognition", "cvpr2022", "cvpr", "action-recognition", "spatio-temporal"], "description": "[CVPR 2022] Official Pytorch Implementation for \"Spatio-temporal Relation Modeling for Few-shot Action Recognition\". SOTA Results for Few-shot Action Recognition"}
{"name": "juliawolleb/diffusion-based-segmentation", "full_name": "JuliaWolleb/Diffusion-based-Segmentation", "topics": [], "description": "This is the official Pytorch implementation of the paper \"Diffusion Models for Implicit Image Segmentation Ensembles\"."}
{"name": "hkunlp/icl-selective-annotation", "full_name": "HKUNLP/icl-selective-annotation", "topics": ["active-learning", "language-model", "nlp", "sample-selection", "in-context-learning", "natural-language-processing"], "description": "[ICLR 2023] Code for our paper \"Selective Annotation Makes Language Models Better Few-Shot Learners\""}
{"name": "howardyclo/clcc-cvpr21", "full_name": "howardyclo/CLCC-CVPR21", "topics": ["color-checker", "color-constancy", "deep-learning", "contrastive-learning", "illuminant-estimation", "white-balance", "mediatek", "cvpr2021"], "description": "An official TensorFlow implementation of \u201cCLCC: Contrastive Learning for Color Constancy\u201d accepted at CVPR 2021."}
{"name": "edisonleeeee/greatx", "full_name": "EdisonLeeeee/GreatX", "topics": ["adversarial-attacks", "graph-convolutional-networks", "graph-neural-networks", "pytorch", "graph-reliability-toolbox", "distribution-shift", "inherent-noise", "pytorch-geometric"], "description": "A graph reliability toolbox based on PyTorch and PyTorch Geometric (PyG)."}
{"name": "openmined/threepio", "full_name": "OpenMined/Threepio", "topics": ["pytorch", "tensorflow", "tensorflowjs", "hacktoberfest"], "description": "A multi-language library for translating commands between PyTorch, TensorFlow, and TensorFlow.js"}
{"name": "dmis-lab/gener", "full_name": "dmis-lab/GeNER", "topics": ["named-entity-recognition", "ner", "dataset", "nlp"], "description": "Simple Questions Generate Named Entity Recognition Datasets (EMNLP 2022)"}
{"name": "gewelsji/dgnet", "full_name": "GewelsJI/DGNet", "topics": ["deep-learning", "jittor", "pytorch", "camouflage", "camouflaged-object-detection", "concealed-object-detection", "ascend"], "description": "Deep Gradient Network for Camouflaged Object Detection (MIR 2023). Code using PyTorch & Jittor & Huawei-Ascend frameworks are available."}
{"name": "ghosthamlet/gpt2-ml-torch", "full_name": "ghosthamlet/gpt2-ml-torch", "topics": [], "description": "Pytorch model for https://github.com/imcaspar/gpt2-ml"}
{"name": "610265158/mobilenetv3_centernet", "full_name": "610265158/mobilenetv3_centernet", "topics": ["centernet", "tensorflow", "mnn", "coreml", "mscoco", "mobilenetv3-centernet"], "description": "A tensorflow implement mobilenetv3 centernet, which can be easily deployeed on android(MNN) and ios(CoreML)."}
{"name": "leonardo-blanger/detr_tensorflow", "full_name": "Leonardo-Blanger/detr_tensorflow", "topics": ["detr", "object-detection", "tensorflow"], "description": "A Tensorflow implementation of the DETR object detection architecture."}
{"name": "chirag126/vog", "full_name": "chirag126/VOG", "topics": ["interpretability", "atypical-examples", "human-in-the-loop-auditing", "deep-learning", "explainability"], "description": "Estimating Example Difficulty using Variance of Gradients"}
{"name": "bubbliiiing/yolov5-tf2", "full_name": "bubbliiiing/yolov5-tf2", "topics": [], "description": "\u8fd9\u662f\u4e00\u4e2aYoloV5-tensorflow2\u7684\u6e90\u7801\uff0c\u53ef\u4ee5\u7528\u4e8e\u8bad\u7ec3\u81ea\u5df1\u7684\u6a21\u578b\u3002"}
{"name": "pytorch-lumo/lumo", "full_name": "pytorch-lumo/lumo", "topics": ["pytorch", "deep-learning"], "description": "More light-weight pytorch experiment library!"}
{"name": "davidalami/convert", "full_name": "davidalami/ConveRT", "topics": ["nlp", "natural-language-processing", "natural-language-understanding", "tensorflow"], "description": "Dual Encoders for State-of-the-art Natural Language Processing."}
{"name": "bubbliiiing/pspnet-keras", "full_name": "bubbliiiing/pspnet-keras", "topics": [], "description": "\u8fd9\u662f\u4e00\u4e2apspnet-keras\u7684\u6e90\u7801\uff0c\u53ef\u4ee5\u7528\u4e8e\u8bad\u7ec3\u81ea\u5df1\u7684\u6a21\u578b\u3002"}
{"name": "rajammanabrolu/q-bert", "full_name": "rajammanabrolu/Q-BERT", "topics": ["interactive-fiction", "text-games", "reinforcement-learning", "knowledge-graphs", "natural-language-processing", "exploration"], "description": "Agents that build knowledge graphs and explore textual worlds by asking questions"}
{"name": "pedrolarben/timeseriesforecasting-deeplearning", "full_name": "pedrolarben/TimeSeriesForecasting-DeepLearning", "topics": ["series-forecasting", "deep-learning", "deep-neural-networks"], "description": "An experiemtal review on deep learning architectures for time series forecasting"}
{"name": "mit-acl/nn_robustness_analysis", "full_name": "mit-acl/nn_robustness_analysis", "topics": ["robustness-verification", "robustness-analysis", "neural-networks", "control-systems", "adversarial-attacks", "reachability-analysis", "deep-learning", "robotics"], "description": "Python tools for analyzing the robustness properties of neural networks (NNs) from MIT ACL"}
{"name": "searchableai/kitanaqa", "full_name": "searchableai/KitanaQA", "topics": ["nlp", "natural-language-processing", "pytorch", "adversarial-attacks", "adversarial-training", "data-augmentation", "ml-automation", "question-answering", "bert", "transformer"], "description": "KitanaQA: Adversarial training and data augmentation for neural question-answering models"}
{"name": "bubbliiiing/efficientnet-yolo3-keras", "full_name": "bubbliiiing/efficientnet-yolo3-keras", "topics": [], "description": "\u8fd9\u662f\u4e00\u4e2aefficientnet-yolo3-keras\u7684\u6e90\u7801\uff0c\u5c06yolov3\u7684\u4e3b\u5e72\u7279\u5f81\u63d0\u53d6\u7f51\u7edc\u4fee\u6539\u6210\u4e86efficientnet"}
{"name": "xiongma/roberta-wwm-base-distill", "full_name": "xiongma/roberta-wwm-base-distill", "topics": ["bert", "pretrained-models", "roberta", "tensorflow", "natural-language-processing", "distillation"], "description": "this is roberta wwm base distilled model which was distilled from roberta wwm  by roberta wwm large"}
{"name": "akash2907/deepfakes_video_classification", "full_name": "AKASH2907/deepfakes_video_classification", "topics": ["deepfakes", "video-classification", "keras", "deep-learning", "cnn", "rnn", "triplet-loss", "faceforensics", "deepfakes-classification", "face-forensics", "celeb-df", "tsne-plot", "facenet", "transfer-learning"], "description": "Deepfakes Video classification via CNN, LSTM, C3D and triplets [IWBF'20]"}
{"name": "muyuuuu/e-commerce-search-recall", "full_name": "muyuuuu/E-commerce-Search-Recall", "topics": ["huggingface", "cosent", "dssm", "simcse", "pytorch", "tensorflow", "keras", "nsp", "unilm", "simbertv2"], "description": "\u5929\u6c60\u963f\u91cc\u7075\u6770\u95ee\u5929\u5f15\u64ce\u7535\u5546\u641c\u7d22\u7b97\u6cd5\u8d5b\u975e\u5b98\u65b9 baseline\uff0c\u53c8\u540d NLP  \u4ece\u5165\u95e8\u5230 22/2771\u3002"}
{"name": "tanjeffreyz02/auto-maple", "full_name": "tanjeffreyz/auto-maple", "topics": ["ai", "python", "deep-learning", "maplestory", "computer-vision", "bot"], "description": "Artificial intelligence software for MapleStory that uses various machine learning and computer vision techniques to navigate challenging in-game environments"}
{"name": "mihdalal/raps", "full_name": "mihdalal/raps", "topics": ["deep-learning", "reinforcement-learning", "robotics", "primitives", "artificial-intelligence"], "description": "[NeurIPS 2021] PyTorch Code for Accelerating Robotic Reinforcement Learning with Parameterized Action Primitives"}
{"name": "xharlie/btcdet", "full_name": "Xharlie/BtcDet", "topics": ["pytorch", "deep-learning", "point-cloud", "object-detection", "3d", "3d-object-detection", "lidar-point-cloud", "lidar", "autonomous-vehicles", "autonomous-driving", "occlusion-handling", "occlusion", "generative-model", "aaai2022", "aaai-2022", "self-driving-car", "self-driving", "computer-vision"], "description": "Behind the Curtain: Learning Occluded Shapes for 3D Object Detection"}
{"name": "zjunlp/hvpnet", "full_name": "zjunlp/HVPNeT", "topics": ["entity-extraction", "relation-extraction", "multimodal", "kg", "prefix", "hvpnet", "ner", "re", "naacl", "dataset", "multimodal-knowledge-graph", "multimodal-learning", "pytorch", "bert", "information-extraction"], "description": "Code for the NAACL2022 paper \"Good Visual Guidance Makes A Better Extractor: Hierarchical Visual Prefix for Multimodal Entity and Relation Extraction\""}
{"name": "roman-vygon/triplet_loss_kws", "full_name": "roman-vygon/triplet_loss_kws", "topics": ["pytorch", "deep-learning", "keyword-spotting", "speech-recognition"], "description": "Learning Efficient Representations for Keyword Spotting with Triplet Loss"}
{"name": "chail/gan-ensembling", "full_name": "chail/gan-ensembling", "topics": ["image-synthesis", "image-classfication", "generative-adversarial-network", "pytorch"], "description": "Invert and perturb GAN images for test-time ensembling"}
{"name": "rootlu/l2p-gnn", "full_name": "rootlu/L2P-GNN", "topics": ["pre-train", "gnn", "meta-learning", "aaai2021"], "description": "Codes and datasets for AAAI-2021 paper \"Learning to Pre-train Graph Neural Networks\""}
{"name": "unc-optics/deepcgh", "full_name": "UNC-optics/DeepCGH", "topics": ["holography", "algorithm", "deep-learning"], "description": "A Python/TensorFlow implementation of DeepCGH, a framework for unsupervised deep learning-based computer-generated holography."}
{"name": "nrel/phygnn", "full_name": "NREL/phygnn", "topics": ["machine-learning", "neural-networks", "deep-learning"], "description": "physics-guided neural networks (phygnn)"}
{"name": "naoto0804/synshadow", "full_name": "naoto0804/SynShadow", "topics": ["shadow-removal", "shadow-detection", "pytorch"], "description": "Learning from Synthetic Shadows for Shadow Detection and Removal [Inoue and Yamasaki, IEEE TCSVT 2021]."}
{"name": "denfed/leaf-audio-pytorch", "full_name": "denfed/leaf-audio-pytorch", "topics": [], "description": "Pytorch port of Google Research's LEAF Audio paper"}
{"name": "leondgarse/keras_efficientnet_v2", "full_name": "leondgarse/keras_efficientnet_v2", "topics": ["keras", "efficientnetv2", "progressive-train", "tf", "tf2", "tensorflow", "tensorflow2"], "description": "self defined efficientnetV2 according to official version. Including converted ImageNet/21K/21k-ft1k weights."}
{"name": "nikolai10/scrabble-gan", "full_name": "Nikolai10/scrabble-gan", "topics": ["scrabblegan", "deep-learning", "tensorflow2", "gan", "hwr"], "description": "Adversarial Generation of Handwritten Text\u00a0Images"}
{"name": "firyuza/graphsage", "full_name": "Firyuza/GraphSAGE", "topics": ["graphsage", "gat", "tensorflow"], "description": "Graph Neural Networks"}
{"name": "perseus784/vehicle_collision_prediction_using_cnn-lstms", "full_name": "perseus784/Vehicle_Collision_Prediction_Using_CNN-LSTMs", "topics": ["carla-simulator", "carla", "tensorflow", "cnn", "lstm", "cnn-lstm", "collision-detection", "python", "tensorflow-examples", "time-distributed", "image-series-prediction", "scene-understanding", "autopilot-script", "lstms", "vehicle-collision-prediction", "action-recognition"], "description": "Predict Vehicle collision moments before it\u00a0happens in Carla!. CNN and LSTM hybrid architecture is used to understand a series of images."}
{"name": "thunlp/prompt-transferability", "full_name": "thunlp/Prompt-Transferability", "topics": ["nlp", "parameter-efficient-learning", "pretrained-language-model", "pretrained-language-models", "pretrained-models", "prompt", "prompt-tuning", "pytorch", "transfer-learning", "parameter-efficient-tuning"], "description": "On Transferability of Prompt Tuning for Natural Language Processing"}
{"name": "criteo/deepr", "full_name": "criteo/deepr", "topics": ["tensorflow", "deep-learning"], "description": "The deepr module provide abstractions (layers, readers, prepro, metrics, config) to help build tensorflow models on top of tf estimators"}
{"name": "pinto0309/headposeestimation-whenet-yolov4-onnx-openvino", "full_name": "PINTO0309/HeadPoseEstimation-WHENet-yolov4-onnx-openvino", "topics": ["tensorflow", "onnx", "tensorrt", "edgetpu", "coreml", "tfjs", "tflite"], "description": "WHENet - ONNX, OpenVINO, TFLite, TensorRT, EdgeTPU, CoreML, TFJS, YOLOv4/YOLOv4-tiny-3L"}
{"name": "maxmekiska/imbrium", "full_name": "maxmekiska/Imbrium", "topics": ["deep-learning", "deep-neural-networks", "forecasting", "machienlearning", "time-series", "bidirectional-lstm", "bidirectional-rnn", "cnn", "cnnbilstm", "gru", "keras", "lstm", "mlp", "rnn", "tensorflow", "tensorflow2", "scikit-learn", "encoder-decoder-architecture"], "description": "Standard and Hybrid Deep Learning Multivariate-Multi-Step & Univariate-Multi-Step Time Series Forecasting."}
{"name": "ostamand/tensorflow-tabnet", "full_name": "ostamand/tensorflow-tabnet", "topics": ["tensorflow2", "tabnet", "keras"], "description": "Improved TabNet for TensorFlow"}
{"name": "dirtyharrylyl/symnet", "full_name": "DirtyHarryLYL/SymNet", "topics": ["attribute-object", "compositional-zero-shot-learning", "deep-learning", "object-recognition"], "description": "As a part of the HAKE project (HAKE-Object), code for SymNet (CVPR'20 and TPAMI'21)."}
{"name": "bestburning/mhxy", "full_name": "BestBurning/mhxy", "topics": ["tensorflow2", "python", "kmclass", "opencv", "tensorflow"], "description": "tensorflow\u5b9e\u8df5\uff1a\u68a6\u5e7b\u897f\u6e38\u4eba\u7269\u5f39\u7a97\u8bc6\u522b"}
{"name": "sek788432/custom_object_tracking", "full_name": "sek788432/Custom_Object_Tracking", "topics": ["object-detection", "deep-learning", "object-tracking", "opencv", "tensorflow", "open-source"], "description": "This repo provides function call to track multi-objects in videos"}
{"name": "kaleidophon/token2index", "full_name": "Kaleidophon/token2index", "topics": ["indexing", "token", "nlp", "pytorch", "tensorflow", "numpy", "w2i", "t2i", "stoi", "itos", "i2t", "i2w", "deeplearning", "seq2seq", "deep-learning", "python", "transformers", "rnn", "rnns", "transformer"], "description": "A lightweight but powerful library to build token indices for NLP tasks, compatible with major Deep Learning frameworks like PyTorch and Tensorflow."}
{"name": "xiaosanchez/cv-facial_expression_recognition", "full_name": "XiaoSanchez/CV-Facial_Expression_Recognition", "topics": ["deep-learning", "machine-learning", "neural-network", "opencv", "realtime"], "description": "Convolutional Neural Network in Keras Recognize Facial Expressions"}
{"name": "junshutang/3dfaceshop", "full_name": "junshutang/3DFaceShop", "topics": [], "description": "3DFaceShop: Explicitly Controllable 3D-Aware Portrait Generation (Official Pytorch Implementation)"}
{"name": "jianzhnie/autotabular", "full_name": "jianzhnie/AutoTabular", "topics": ["automl", "structured-data", "pytorch-lightning", "hpo", "tabular-data", "scikit-learn", "xgboost", "lightgbm", "catboost", "machine-learning", "data-science", "feature-engineering", "deep-learning"], "description": "Automatic machine learning for tabular data. \u26a1\ud83d\udd25\u26a1"}
{"name": "multimodal/multimodal", "full_name": "multimodal/multimodal", "topics": ["visual-features", "datasets", "embeddings", "vision-and-language", "reasoning", "deep-learning"], "description": "A collection of multimodal datasets, and visual features for VQA and captionning in pytorch. Just run \"pip install multimodal\""}
{"name": "jw9730/hot", "full_name": "jw9730/hot", "topics": ["transformer", "graph", "equivariance", "pytorch", "self-attention", "gnn", "hypergraph"], "description": "[NeurIPS'21] Higher-order Transformers for sets, graphs, and hypergraphs, in PyTorch"}
{"name": "moono/stylegan2-tf-2.x", "full_name": "moono/stylegan2-tf-2.x", "topics": [], "description": "stylegan2, tensorflow 2, keras subclassing"}
{"name": "pliang279/sent_debias", "full_name": "pliang279/sent_debias", "topics": ["machine-learning", "natural-language-processing", "fairness-ai", "representation-learning"], "description": "[ACL 2020] Towards Debiasing Sentence Representations"}
{"name": "ashutosh1919/neuro-symbolic-sudoku-solver", "full_name": "ashutosh1919/neuro-symbolic-sudoku-solver", "topics": ["neurosymboliccomputing", "machine-learning", "deep-learning", "reinforcement-learning", "neural-network", "neural-logic-machines", "sudoku-solver", "sudoku", "artificial-intelligence", "artificial-neural-networks", "reinforcement-learning-agent", "explainable-ai", "solving-sudoku-puzzles"], "description": "\u2699\ufe0f Solving sudoku using Deep Reinforcement learning in combination with powerful symbolic representations."}
{"name": "cdj0311/dssm", "full_name": "cdj0311/dssm", "topics": [], "description": "A BiGRU-Attention DSSM implementation with tensorflow estimator."}
{"name": "allegroai/clearml-serving", "full_name": "allegroai/clearml-serving", "topics": ["machine-learning", "mlops", "devops", "deep-learning", "kubernetes", "ai", "clearml", "model-serving", "serving", "serving-pytorch-models", "serving-ml", "tensorflow-serving", "triton", "triton-inference-server"], "description": "ClearML - Model-Serving Orchestration and Repository Solution"}
{"name": "rishit-dagli/nystromformer", "full_name": "Rishit-dagli/Nystromformer", "topics": ["artificial-intelligence", "attention-mechanism", "deep-learning", "machine-learning", "nystrom", "nystromformer", "tensorflow", "transformer", "keras"], "description": "An implementation of the Nystr\u00f6mformer, using Nystrom method to approximate standard self attention"}
{"name": "marload/convnets-tensorflow2", "full_name": "marload/ConvNets-TensorFlow2", "topics": ["tensorflow", "machine-learning", "deep-learning", "resnet", "googlenet", "vgg", "inception-v3", "inception-v4", "mobilenet", "mobilenet-v2", "shufflenet", "shufflenet-v2"], "description": "\u26f5\ufe0f Implementation a variety of popular Image Classification Models using TensorFlow2. [ResNet, GoogLeNet, VGG, Inception-v3, Inception-v4, MobileNet, MobileNet-v2, ShuffleNet, ShuffleNet-v2, etc...]"}
{"name": "qc17-thu/dl-sr", "full_name": "qc17-THU/DL-SR", "topics": [], "description": "Tensorflow/keras implementation for image transformation from low-resolution (LR) image to super-resolved one, including single wide-field (WF) image super-resolution prediction and SIM reconstruction."}
{"name": "yurongyou/modest", "full_name": "YurongYou/MODEST", "topics": ["point-cloud", "pytorch", "object-detection", "autonomous-driving", "3d-detection", "unlabeled-data"], "description": "Code release for \"Learning to Detect Mobile Objects from LiDAR Scans Without Labels\" [CVPR 2022]"}
{"name": "andreped/livermask", "full_name": "andreped/livermask", "topics": ["livermask", "unet", "segmentation", "pretrained-models", "deep-learning", "liver", "liver-segmentation", "command-line-tool", "free-to-use", "open", "ct", "parenchyma", "vessels", "liver-vessels", "hepatic-veins", "portal-veins"], "description": "\ud83d\udca5 Command line tool for automatic liver parenchyma and liver vessel segmentation in CT using a pretrained deep learning model"}
{"name": "sailist/lumo", "full_name": "pytorch-lumo/lumo", "topics": ["pytorch", "deep-learning"], "description": "More light-weight pytorch experiment library!"}
{"name": "zekeriyyaa/maskrcnn-modanet-fashion-segmentation-and-classification", "full_name": "zekeriyyaa/MaskRCNN-Modanet-Fashion-Segmentation-and-Classification", "topics": ["maskrcnn", "fashion", "segmentation", "classification", "model", "annotati", "modanet", "season", "season-classification", "python", "computer-vision", "deep-learning", "kera", "pytorch"], "description": "Using modanet fashion dataset, the clothes images were classified under 5 season (summer,winter,spring,autumn,all). "}
{"name": "bm-k/kosentencebert_skt", "full_name": "BM-K/KoSentenceBERT-SKT", "topics": ["sentence-bert", "sentence-similarity", "natural-language-processing", "korean-sentence-bert"], "description": "Sentence Embeddings using Siamese SKT KoBERT-Networks"}
{"name": "venkanna37/label-pixels", "full_name": "venkanna37/Label-Pixels", "topics": ["semantic-segmentation", "deep-learning", "fully-convolutional-networks", "keras", "tensorflow", "road-extraction", "pixel-labeling", "artificial-intelligence", "msc-project", "label-pixels", "unet", "segnet", "resunet", "satellite-image-segmentation", "gdal", "machine-learning", "remote-sensing", "satellite-imagery", "segmentation"], "description": "Label-Pixels is the tool for semantic segmentation of remote sensing images using Fully Convolutional Networks. Initially, it is designed for extracting the road network from remote sensing imagery and now, it can be used to extract different features from remote sensing imagery."}
{"name": "filippoaleotti/reversing", "full_name": "FilippoAleotti/Reversing", "topics": ["stereo-matching", "monocular-depth-estimation", "computer-vision", "deep-learning", "eccv-2020"], "description": "Code for \"Reversing the cycle: self-supervised deep stereo through enhanced monocular distillation\""}
{"name": "emla2805/vision-transformer", "full_name": "emla2805/vision-transformer", "topics": ["vision-transformer", "transformer", "computer-vision", "tensorflow"], "description": "Tensorflow implementation of the Vision Transformer (An Image is Worth 16x16 Words: Transformers for Image Recognition at Scale)"}
{"name": "simonrennotte/data-efficient-reinforcement-learning-with-probabilistic-model-predictive-control", "full_name": "SimonRennotte/Data-Efficient-Reinforcement-Learning-with-Probabilistic-Model-Predictive-Control", "topics": ["reinforcement-learning", "pytorch", "pytorch-implementation", "gpytorch", "gaussian-processes", "model-predictive-control", "model-based-reinforcement-learning", "paper", "control-animation", "uncertainty"], "description": "Unofficial Implementation of the paper \"Data-Efficient Reinforcement Learning with Probabilistic Model Predictive Control\", applied to gym environments"}
{"name": "messi-q/amevuldetector", "full_name": "Messi-Q/AMEVulDetector", "topics": ["smart-contracts", "vulnerability-detection", "expert-knowledge", "deep-learning"], "description": "Smart Contract Vulnerability Detection From Pure Neural Network to Interpretable Graph Feature and Expert Pattern Fusion (IJCAI-21 Accepted)"}
{"name": "toon-it/cartoonizer", "full_name": "Toon-It/Cartoonizer", "topics": ["hacktoberfest", "tensorflow", "webapp"], "description": "A web-app to white box cartoonize your images!"}
{"name": "huanghuidmml/tfbert", "full_name": "huanghuidmml/tfbert", "topics": ["tensorflow", "bert", "electra", "albert", "trainer", "xla", "mixed-precision", "ernie", "ernie-gram", "chinesebert"], "description": "\u57fa\u4e8etensorflow1.x\u7684\u9884\u8bad\u7ec3\u6a21\u578b\u8c03\u7528\uff0c\u652f\u6301\u5355\u673a\u591a\u5361\u3001\u68af\u5ea6\u7d2f\u79ef\uff0cXLA\u52a0\u901f\uff0c\u6df7\u5408\u7cbe\u5ea6\u3002\u53ef\u7075\u6d3b\u8bad\u7ec3\u3001\u9a8c\u8bc1\u3001\u9884\u6d4b\u3002"}
{"name": "shahules786/twitter-sentiment", "full_name": "shahules786/Twitter-Sentiment", "topics": ["sentiment-analyzer", "twitter-domain", "natural-language-processing", "pytorch", "embedding-vectors"], "description": "Sentiment analyzer for your tweets."}
{"name": "mboudiaf/pytorch-meta-dataset", "full_name": "mboudiaf/pytorch-meta-dataset", "topics": ["few-shot-learning", "few-shot-classifcation", "meta-dataset", "pytorch", "tfrecorddataset"], "description": "A non-official 100% PyTorch implementation of META-DATASET benchmark for few-shot classification"}
{"name": "ruckbreasoning/subgraphretrievalkbqa", "full_name": "RUCKBReasoning/SubgraphRetrievalKBQA", "topics": [], "description": "The pytorch implementation of Subgraph Retrieval Enhanced Model for Multi-hop Knowledge Base Question Answering "}
{"name": "islem-esi/deepmalwaredetector", "full_name": "islem-esi/DeepMalwareDetector", "topics": ["deep-learning", "malware-detection", "neural-networks", "cnn", "rnn", "feature-extraction", "python3", "fnn", "convolutional-neural-networks", "recurrent-neural-networks", "feedforward-neural-network", "machine-learning", "lstm", "sae", "yara"], "description": "A Deep Learning framework that analyses Windows PE files to detect malicious Softwares. "}
{"name": "smoke-trees/voice-synthesis", "full_name": "smoke-trees/Voice-synthesis", "topics": ["voice-synthesis", "voice-cloning", "sv2tts", "pytorch-implementation", "tensorflow", "keras", "speech-to-text"], "description": "This repository is an implementation of Transfer Learning from Speaker Verification to Multispeaker Text-To-Speech Synthesis (SV2TTS) with a vocoder that works in real-time. SV2TTS is a three-stage deep learning framework that allows to create a numerical representation of a voice from a few seconds of audio, and to use it to condition a text-to-speech model trained to generalize to new voices."}
{"name": "satya77/transformer_temporal_tagger", "full_name": "satya77/Transformer_Temporal_Tagger", "topics": ["bert-model", "temporal-tagger", "encoder-decoder", "token-classification", "seq2seq", "transformer", "pytorch", "huggingface"], "description": "Code and data form the paper BERT Got a Date: Introducing Transformers to Temporal Tagging"}
{"name": "logintelligence/neurallog", "full_name": "LogIntelligence/NeuralLog", "topics": ["deep-learning", "log-based-anomaly-detection", "log-parsing", "transformer"], "description": "Log-based Anomaly Detection Without Log Parsing (ASE 2021, Research Track)"}
{"name": "qq44642754a/yolov5_ros", "full_name": "qq44642754a/Yolov5_ros", "topics": ["yolov5", "pytorch", "ros"], "description": "Real-time object detection with ROS, based on YOLOv5 and PyTorch (\u57fa\u4e8e YOLOv5\u7684ROS\u5b9e\u65f6\u5bf9\u8c61\u68c0\u6d4b)"}
{"name": "ganjinzero/kebiolm", "full_name": "GanjinZero/KeBioLM", "topics": ["language-model", "pre-training", "nlp", "biomedical"], "description": "Improving Biomedical Pretrained Language Models with Knowledge [BioNLP 2021]"}
{"name": "chrhenning/hypnettorch", "full_name": "chrhenning/hypnettorch", "topics": ["pytorch", "deep-learning", "hypernetworks", "hypernets", "python", "hypernet", "hypernetwork", "neural-network", "torch"], "description": "Package for working with hypernetworks in PyTorch."}
{"name": "noshluk2/ros2-self-driving-car-ai-using-opencv", "full_name": "noshluk2/ROS2-Self-Driving-Car-AI-using-OpenCV", "topics": ["computer-vision", "deep-learning", "gazebo", "object-detection", "opencv", "ros2", "self-driving-car"], "description": "ROS2 Self Driving Car using Deeplearning and Object Tracking through openCV"}
{"name": "plai-group/simple-cnaps", "full_name": "plai-group/simple-cnaps", "topics": ["deep-learning", "metric-learning", "meta-learning", "few-shot-learning", "few-shot-recognition", "mini-imagenet", "tiered-imagenet", "meta-dataset", "conditional-neural-process", "few-shot-classifcation"], "description": "Source codes for \"Improved Few-Shot Visual Classification\" (CVPR 2020), \"Enhancing Few-Shot Image Classification with Unlabelled Examples\" (WACV 2022), and \"Beyond Simple Meta-Learning: Multi-Purpose Models for Multi-Domain, Active and Continual Few-Shot Learning\" (Neural Networks 2022 - in submission)"}
{"name": "lolrudy/gpv_pose", "full_name": "lolrudy/GPV_Pose", "topics": [], "description": "pytorch implementation of GPV-Pose"}
{"name": "qingyonghu/sqn", "full_name": "QingyongHu/SQN", "topics": ["annotations", "computer-vision", "deep-learning", "point-cloud", "weakly-supervised-segmentation"], "description": "SQN in Tensorflow (ECCV'2022)"}
{"name": "alejandrobarrera/birdnet2", "full_name": "AlejandroBarrera/birdnet2", "topics": ["deep-learning", "object-detection", "point-cloud", "pytorch", "neural-network", "autonomous-driving"], "description": "Official Pytorch implementation of Birdnet+"}
{"name": "dadmatech/dadmatools", "full_name": "Dadmatech/DadmaTools", "topics": ["natural-language-processing", "persian", "nlptoolkit", "tokenizer", "lemmatizer", "postagger", "dependency-parser", "persian-nlp", "ner", "spacy", "constituency-parser", "chunker", "dataset-loader", "embedding-vectors", "embeddings"], "description": "DadmaTools is a Persian NLP tools developed by Dadmatech Co."}
{"name": "evandez/neuron-descriptions", "full_name": "evandez/neuron-descriptions", "topics": ["interpretability", "machine-learning", "research", "computer-vision", "pytorch", "deep-learning"], "description": "Natural Language Descriptions of Deep Visual Features, ICLR 2022"}
{"name": "gkeechin/vizgradcam", "full_name": "gkeechin/vizgradcam", "topics": ["deep-learning", "gradcam", "keras", "tensorflow", "visualization"], "description": "vizgradcam is the fastest way to visualize GradCAM with your Keras models. "}
{"name": "princeton-nlp/webshop", "full_name": "princeton-nlp/WebShop", "topics": ["decision-making", "language", "language-grounding", "ml", "nlp", "rl", "rl-environment", "shopping", "sim-to-real", "web-based"], "description": "[NeurIPS 2022] \ud83d\uded2WebShop: Towards Scalable Real-World Web Interaction with Grounded Language Agents"}
{"name": "s-nlp/rudetoxifier", "full_name": "s-nlp/rudetoxifier", "topics": ["style-transfer", "nlp", "russian-language"], "description": "Code and data of \"Methods for Detoxification of Texts for the Russian Language\" paper"}
{"name": "yiconghong/discrete-continuous-vln", "full_name": "YicongHong/Discrete-Continuous-VLN", "topics": ["cvpr2022", "vision-and-language-navigation", "vision-and-language", "embodied-ai", "computer-vision", "deep-learning", "visual-navigation"], "description": "Code and Data of the CVPR 2022 paper: Bridging the Gap Between Learning in Discrete and Continuous Environments for Vision-and-Language Navigation"}
{"name": "teapoly/ctc-optimizedloss", "full_name": "TeaPoly/CTC-OptimizedLoss", "topics": ["mwer", "tensorflow", "speech-recognition", "ctc-beam-search", "ctc-mwer", "knowdis", "knowledge-distillation"], "description": "Computes the MWER (minimum WER) Loss with CTC beam search. Knowledge distillation for CTC loss."}
{"name": "lucid1ty/yolov5forcsgo", "full_name": "Lucid1ty/Yolov5ForCSGO", "topics": ["csgo", "detection", "yolov5", "auto-aim", "english", "aimbot", "autoaim", "chinese", "computer-vision", "object-detection", "python", "python3", "pytorch"], "description": "CSGO character detection and auto aim"}
{"name": "hltchkust/ke-dialogue", "full_name": "HLTCHKUST/ke-dialogue", "topics": ["dialogue", "dialogue-system", "pytorch", "gpt", "gpt-2", "knowledge-graph", "knowledge", "mwoz", "smd", "kvr", "opendialkg"], "description": "KE-Dialogue: Injecting knowledge graph into a fully end-to-end dialogue system."}
{"name": "bubbliiiing/facenet-keras", "full_name": "bubbliiiing/facenet-keras", "topics": [], "description": "\u8fd9\u662f\u4e00\u4e2afacenet-keras\u7684\u6e90\u7801\uff0c\u53ef\u4ee5\u7528\u4e8e\u8bad\u7ec3\u81ea\u5df1\u7684\u6a21\u578b\u3002"}
{"name": "kohulan/decimer-image-to-smiles", "full_name": "Kohulan/DECIMER-Image-to-SMILES", "topics": ["decimer", "chemical-image-recognition", "tensorflow", "smiles", "decimer-image"], "description": "The repository contains the network and the related scripts for encoder-decoder based Chemical Image Recognition "}
{"name": "testingautomated-usi/uncertainty-wizard", "full_name": "testingautomated-usi/uncertainty-wizard", "topics": ["testing", "keras-tensorflow", "keras", "uncertainty-quantification", "uncertainty-neural-networks", "uncertainty"], "description": "Uncertainty-Wizard is a plugin on top of tensorflow.keras, allowing to easily and efficiently create uncertainty-aware deep neural networks. Also useful if you want to train multiple small models in parallel."}
{"name": "msu-mlsys-lab/deepaa", "full_name": "AIoT-MLSys-Lab/DeepAA", "topics": ["deep-learning", "data-augmentation", "automl"], "description": "[ICLR 2022] \"Deep AutoAugment\" by Yu Zheng, Zhi Zhang,  Shen Yan, Mi Zhang"}
{"name": "persiannlp/parsinlu", "full_name": "persiannlp/parsinlu", "topics": ["query-paraphrasing", "machine-translation", "sentiment-analysis", "persian-language", "persian", "natural-language-processing", "farsi", "reading-comprehension", "textual-entailment", "natural-language-inference", "sentiment-analysis-dataset", "mt5-models"], "description": "A comprehensive suite of high-level NLP tasks for Persian language"}
{"name": "hayeonlee/metad2a", "full_name": "HayeonLee/MetaD2A", "topics": ["neural-architecture-search", "pytorch", "meta-learning", "efficient-deep-learning", "machine-learning"], "description": "Official PyTorch implementation of  \"Rapid Neural Architecture Search by Learning to Generate Graphs from Datasets\" (ICLR 2021)"}
{"name": "jakewalter/easyquake", "full_name": "jakewalter/easyQuake", "topics": ["earthquake-detection", "obspy", "tensorflow", "earthquake", "seismology"], "description": "Simplified machine-learning driven earthquake detection, location, and analysis."}
{"name": "luca96/carla-driving-rl-agent", "full_name": "Luca96/carla-driving-rl-agent", "topics": ["reinforcement-learning", "carla-driving-simulator", "autonomous-driving", "deep-reinforcement-learning", "proximal-policy-optimization", "deep-learning"], "description": "Code for the paper \"Reinforced Curriculum Learning for Autonomous Driving in CARLA\" (ICIP 2021)"}
{"name": "socret360/object-detection-in-keras", "full_name": "Socret360/object-detection-in-keras", "topics": ["keras", "object-detection", "single-shot-detectors"], "description": null}
{"name": "ahmdtaha/constrained_attention_filter", "full_name": "ahmdtaha/constrained_attention_filter", "topics": ["tensorflow", "deep-neural-networks", "attention-visualization", "python-3", "python3", "imagenet", "convolutional-neural-networks", "weakly-supervised-localization", "autonomous-vehicles", "autonomous-driving", "classification", "retrieval", "feature-embedding"], "description": "(ECCV2020) Tensorflow implementation of A Generic Visualization Approach for Convolutional Neural Networks"}
{"name": "dusty-nv/jetson-voice", "full_name": "dusty-nv/jetson-voice", "topics": ["speech-recognition", "nlp", "text-to-speech", "jetson", "jetson-nano", "deep-learning", "pytorch", "tensorrt"], "description": "ASR/NLP/TTS deep learning inference library for NVIDIA Jetson using PyTorch and TensorRT"}
{"name": "xcmyz/fastspeech2", "full_name": "xcmyz/FastSpeech2", "topics": ["fastspeech", "fastspeech2", "speech-synthesis", "pytorch", "tts"], "description": "The Implementation of FastSpeech2 Based on Pytorch."}
{"name": "gt-ripl/robo-vln", "full_name": "GT-RIPL/robo-vln", "topics": ["deep-learning", "deep-neural-networks", "supervised-learning", "artificial-intelligence", "robotics", "computer-vision", "language", "transformers", "bert", "pytorch", "python", "habitat-api", "habitat-sim", "vision-and-language", "navigation", "vision-and-language-navigation"], "description": "Pytorch code for ICRA'21 paper: \"Hierarchical Cross-Modal Agent for Robotics Vision-and-Language Navigation\""}
{"name": "yzd-v/cls_kd", "full_name": "yzd-v/cls_KD", "topics": ["image-classification", "knowledge-distillation", "vision-transformer", "pytorch"], "description": "'Rethinking Knowledge Distillation via Cross-Entropy' and 'ViTKD: Practical Guidelines for ViT Feature Knowledge Distillation'"}
{"name": "pvlachas/rnn-rc-chaos", "full_name": "pvlachas/RNN-RC-Chaos", "topics": ["rnn", "rc", "chaos", "echo-state-networks", "recurrent-neural-networks", "kuramoto-sivashinsky", "lorenz-96", "lorenz-3d", "reservoir-computing", "reservoir-computer", "backpropagation", "forecasting", "esn", "rnn-tensorflow", "rnn-gru", "rnn-lstm"], "description": "RNN architectures trained with Backpropagation and Reservoir Computing (RC) methods for forecasting high-dimensional chaotic dynamical systems."}
{"name": "isarandi/metro-pose3d", "full_name": "isarandi/metro-pose3d", "topics": ["human-pose-estimation", "3d-human-pose", "computer-vision", "tensorflow", "python", "deep-learning"], "description": "Metric-Scale Truncation-Robust Heatmaps for 3D Human Pose Estimation"}
{"name": "xwhan/proqa", "full_name": "xwhan/ProQA", "topics": ["natural-language-processing", "question-answering", "pytorch", "information-retrieval"], "description": "Progressively Pretrained Dense Corpus Index for Open-Domain QA and Information Retrieval"}
{"name": "jerrodparker20/adaptive-transformers-in-rl", "full_name": "jerrodparker20/adaptive-transformers-in-rl", "topics": ["rl", "pomdp", "transformer", "attention-mechanism", "stabilizing-transformers-for-rl", "adaptive-attention", "transformers-in-rl", "torchbeast", "impala", "monobeast"], "description": "Adaptive Attention Span for Reinforcement Learning"}
{"name": "placeforyiming/cvpr21-deep-lucas-kanade-homography", "full_name": "placeforyiming/CVPR21-Deep-Lucas-Kanade-Homography", "topics": ["lucas-kanade", "homography", "deep-learning"], "description": "A generic pipeline to align multimodal image pairs from different sensors by extending Lucas-Kanade on feature maps. CVPR2021"}
{"name": "loretoparisi/hf-experiments", "full_name": "loretoparisi/hf-experiments", "topics": ["huggingface", "huggingface-transformer", "deep-learning", "nlp", "python", "python3", "summarization", "emotions", "sentiment", "translation", "speech-recognition", "automatic-speech-recognition", "topic-detection", "topic-modeling", "question-answering"], "description": "Experiments with Hugging Face \ud83d\udd2c \ud83e\udd17"}
{"name": "diagnijmegen/pathology-he-auto-augment", "full_name": "DIAGNijmegen/pathology-he-auto-augment", "topics": ["data-augmentation", "histopathology", "deep-learning"], "description": "H&E tailored Randaugment: automatic data augmentation policy selection for H&E-stained histopathology."}
{"name": "mloptpsu/fedtorch", "full_name": "MLOPTPSU/FedTorch", "topics": ["federated-learning", "distributed-optimization", "distributed", "pytorch", "mpi"], "description": "FedTorch is a generic repository for benchmarking different federated and distributed learning algorithms using PyTorch Distributed API."}
{"name": "zensors/datatap-python", "full_name": "zensors/datatap-python", "topics": ["dataset", "machine-learning", "datastructures", "data-pipeline", "deep", "deeplearning", "python", "pytorch", "tensorflow", "training", "trainsets", "testset", "cross-validation", "resnet", "dataloader"], "description": "Focus on Algorithm Design, Not on Data Wrangling"}
{"name": "rishit-dagli/tf-watcher", "full_name": "Rishit-dagli/TF-Watcher", "topics": ["tf-watcher", "python", "tensorflow", "machine-learning", "firebase", "react", "python-package", "chakra-ui", "recharts", "pyrebase", "python-packages", "pypi", "sphinx", "devtools", "deep-learning"], "description": "Monitor your ML jobs on mobile devices\ud83d\udcf1, especially for Google Colab / Kaggle"}
{"name": "ise-uiuc/freefuzz", "full_name": "ise-uiuc/FreeFuzz", "topics": ["fuzzing", "mining", "pytorch", "tensorflow"], "description": "Free Lunch for Testing: Fuzzing Deep-Learning Libraries from Open Source (ICSE'22)"}
{"name": "nantu-io/ntcore", "full_name": "nantu-io/ntcore", "topics": ["machine-learning", "python", "deep-learning", "pytorch", "tensorflow", "kubernetes", "docker", "ai", "sklearn", "ml", "mlops"], "description": "Deploy and Monitor ML Model in Any Cloud"}
{"name": "omar-mohamed/gpt2-chest-x-ray-report-generation", "full_name": "omar-mohamed/GPT2-Chest-X-Ray-Report-Generation", "topics": ["deep-learning", "transformer", "gpt2", "transfer-learning", "medical-imaging", "chest-xrays", "report-generation", "radiology"], "description": "This is the implementation of the CDGPT2 model mentioned in our paper 'Automated Radiology Report Generation using Conditioned Transformers'"}
{"name": "erksch/fnet-pytorch", "full_name": "erksch/fnet-pytorch", "topics": ["transformer", "fnet", "language-model", "pytorch"], "description": "Unofficial PyTorch implementation of Google's FNet: Mixing Tokens with Fourier Transforms. With checkpoints."}
{"name": "christophalt/pytorch-ie", "full_name": "ChristophAlt/pytorch-ie", "topics": ["information-extraction", "pytorch", "pytorch-lightning", "named-entity-recognition", "relation-extraction", "relation-classification", "datasets", "transformers"], "description": "PyTorch-IE: State-of-the-art Information Extraction in PyTorch"}
{"name": "cdj0311/two_tower_recommendation_system", "full_name": "cdj0311/two_tower_recommendation_system", "topics": [], "description": "A two tower recommendation system  implementation with tensorflow estimator, for CTR or Recall."}
{"name": "dengbocong/text-similarity", "full_name": "DengBoCong/text-similarity", "topics": ["nlp", "deep-learning", "mechine-learing", "similarity", "model", "text-classification", "pytorch", "bert", "transformer"], "description": "\u6587\u672c\u76f8\u4f3c\u5ea6\uff08\u5339\u914d\uff09\u8ba1\u7b97\uff0c\u63d0\u4f9bBaseline\u3001\u8bad\u7ec3\u3001\u63a8\u7406\u3001\u6307\u6807\u5206\u6790...\u4ee3\u7801\u5305\u542bTensorFlow/Pytorch\u53cc\u7248\u672c"}
{"name": "tgisaturday/dalle-lightning", "full_name": "tgisaturday/dalle-lightning", "topics": [], "description": "Refactoring dalle-pytorch and taming-transformers for TPU VM"}
{"name": "runist/maml-keras", "full_name": "Runist/MAML-keras", "topics": ["deep-learning", "keras"], "description": "Using keras and tf build MAML"}
{"name": "lucidrains/progen", "full_name": "lucidrains/progen", "topics": ["artificial-intelligence", "deep-learning", "proteins"], "description": "Implementation and replication of ProGen, Language Modeling for Protein Generation, in Jax"}
{"name": "mftnakrsu/automatic_number_plate_recognition_yolo_ocr", "full_name": "mftnakrsu/Automatic_Number_Plate_Recognition_YOLO_OCR", "topics": ["detection", "easyocr", "object", "object-detection", "ocr", "yolo", "yolov5", "csv", "database", "flask", "paddleocr", "realtime", "ai", "artificial-intelligence", "computer-vision", "deep-learning", "machine-learning", "opencv", "python"], "description": "Automatic number plate recognition using tech:  Yolo, OCR, Scene text detection, scene text recognation, flask, torch"}
{"name": "zj-zhang/amber", "full_name": "zj-zhang/AMBER", "topics": ["automl", "biomedicine", "deep-learning", "genomics", "keras", "pytorch"], "description": "Automated Modelling for Biological Evidence-based Research"}
{"name": "microsoft/simxns", "full_name": "microsoft/SimXNS", "topics": ["dense-retrieval", "information-retrieval", "natural-language-processing", "negative-mining", "negative-sampling"], "description": "SimXNS, a research project for information retrieval, containing official implementations, by MSRA NLC IR team."}
{"name": "jonathandunn/text_analytics", "full_name": "jonathandunn/text_analytics", "topics": ["computational-linguistics", "natural-language-processing", "nlp", "teaching-tools", "text-analytics", "text-classification", "nlp-teaching"], "description": "Basic text analytics and natural language processing in Python"}
{"name": "amanchadha/iperceive", "full_name": "amanchadha/iPerceive", "topics": ["python", "python3", "video", "captioning", "captioning-videos", "dense-captioning", "convolutional-neural-networks", "resnets", "videoqa", "question-answering", "common-sense", "causality", "distilling-the-knowledge", "multi-modal", "transformers", "reasoning", "lstm", "self-attention", "attention", "pytorch"], "description": "Applying Common-Sense Reasoning to Multi-Modal Dense Video Captioning and Video Question Answering | Python3 | PyTorch | CNNs | Causality | Reasoning | LSTMs | Transformers | Multi-Head Self Attention | Published in IEEE Winter Conference on Applications of Computer Vision (WACV) 2021"}
{"name": "keonlee9420/daft-exprt", "full_name": "keonlee9420/Daft-Exprt", "topics": ["text-to-speech", "style", "pytorch", "tts", "speech-synthesis", "english", "speaker", "prosody", "prosody-transfer", "gaussian-upsampling", "neural-tts", "non-autoregressive"], "description": "PyTorch Implementation of Daft-Exprt: Robust Prosody Transfer Across Speakers for Expressive Speech Synthesis"}
{"name": "arcchang1236/ca-noisegan", "full_name": "arcchang1236/CA-NoiseGAN", "topics": ["denoisers", "noise-models", "camera-sensors", "eccv2020", "eccv", "gan", "pytorch", "sidd-dataset"], "description": "The official implementation of our ECCV 2020 paper \"Learning Camera-Aware Noise Models\"."}
{"name": "aimodelshare/aimodelshare", "full_name": "AIModelShare/aimodelshare", "topics": ["machine-learning", "data-science", "deep-learning", "python", "mlops"], "description": null}
{"name": "nlp-suite/nlp-suite", "full_name": "NLP-Suite/NLP-Suite", "topics": ["nlp-suite", "nlp", "research"], "description": "CLICK ON WIKI LINK BELOW OR ON Wiki TAB AT TOP BANNER FOR DOWNLOAD INSTRUCTIONS AND  INFORMATION ON THE NLP SUITE."}
{"name": "emekaborisama/textgen", "full_name": "Emekaborisama/textgen", "topics": ["text-gen", "tensorflow", "pytorch", "python", "text-generation", "text-analysis", "lstm-neural-networks"], "description": "Almost state of art text generation library"}
{"name": "laughing-q/yolov5-q", "full_name": "Laughing-q/yolov5-q", "topics": ["pytorch", "segmentation", "deep-learning", "detection"], "description": "This repo is planning for instance segmentation based on yolov5-6.0 and yolact."}
{"name": "dayyass/muse-as-service", "full_name": "dayyass/muse-as-service", "topics": ["python", "nlp", "embeddings", "universal-sentence-encoder", "api", "rest-api", "text", "sentence-embeddings", "machine-learning", "deep-learning", "bert", "tensorflow", "service", "web-server", "flask", "gunicorn", "docker", "hacktoberfest"], "description": "REST API for sentence tokenization and embedding using Multilingual Universal Sentence Encoder."}
{"name": "raocp/pinn-elastodynamics", "full_name": "Raocp/PINN-elastodynamics", "topics": ["physics-simulation", "elasticity", "physics-informed-learning", "neural-network", "tensorflow"], "description": "physics-informed neural network for elastodynamics problem"}
{"name": "ipapakis/gcnnmatch", "full_name": "IPapakis/GCNNMatch", "topics": ["multi-object-tracking", "graph-neural-networks", "deep-learning", "computer-vision"], "description": "This repository is the official code implementation of the paper GCNNMatch: Graph Convolutional Neural Networks for Multi-Object Tracking via Sinkhorn Normalization."}
{"name": "akshitac8/biam", "full_name": "akshitac8/BiAM", "topics": ["multi-label-zsl", "nus-wide", "openimages-v4", "iccv2021", "self-attention", "channel-attention", "generalized-zero-shot-learning", "zero-shot-learning", "multi-label-learning"], "description": "[ICCV 2021]  Official Pytorch implementation for Discriminative Region-based Multi-Label Zero-Shot Learning SOTA results on NUS-WIDE and OpenImages"}
{"name": "tuvovan/nhdrrnet", "full_name": "tuvovan/NHDRRNet", "topics": ["low-light-image-enhancement", "keras", "keras-tensorflow"], "description": "Keras Implementation of the paper Deep HDR Imaging via A Non-Local Network - TIP 2020"}
{"name": "zyang1580/pda", "full_name": "zyang1580/PDA", "topics": [], "description": "This is an implemention for our SIGIR 2021 paper \"Causal Intervention for Leveraging Popularity Bias inRecommendation\" based on tensorflow.."}
{"name": "marrlab/instantdl", "full_name": "marrlab/InstantDL", "topics": ["deep-learning", "semantic-segmentation", "instance-segmentation", "pixel-wise-regression", "classification", "gpu", "docker", "image-segmentation", "regression"], "description": "InstantDL: An easy and convenient deep learning pipeline for image segmentation and classification"}
{"name": "iesl/box-embeddings", "full_name": "iesl/box-embeddings", "topics": ["box-embedding", "deep-learning", "machine-learning"], "description": "Box Embeddings as Modules"}
{"name": "chagmgang/distributed_reinforcement_learning", "full_name": "chagmgang/distributed_reinforcement_learning", "topics": ["distributed-reinforcement-learning", "tensorflow", "distributed-tensorflow", "reinforcement-learning", "distributed-rl", "impala", "r2d2", "apex", "scalable-reinforcement-learning"], "description": "implementation of distributed reinforcement learning with distributed tensorflow"}
{"name": "iceclear/mw-gan", "full_name": "IceClear/MW-GAN", "topics": ["mw-gan", "pytorch"], "description": "Official PyTorch implements for Multi-level Wavelet-Based Generative Adversarial Network for Perceptual Quality Enhancement of Compressed Video (ECCV, 2020) and MW-GAN+ for Perceptual Quality Enhancement on Compressed Video (IEEE TCSVT)."}
{"name": "pavankunchala/streamlit-applications", "full_name": "Pavankunchala/Work-Showcase", "topics": ["streamlit", "streamlit-applications", "edge", "opencv", "computer-vision", "deep-learning", "yolov4", "face-detection", "faceswap", "mediapipe", "vr", "workout-tracker"], "description": "Deep Learning and Computer Vision Applications using Streamlit"}
{"name": "skywalker023/focused-empathy", "full_name": "skywalker023/focused-empathy", "topics": ["nlp", "conference-paper", "empathy", "dialogue-systems", "chatbot", "pragmatics", "perspective-taking", "dataset", "deep-learning", "pytorch", "emotion", "emotion-cause"], "description": "\ud83e\udd17 Code and Dataset for our EMNLP 2021 paper: \"Perspective-taking and Pragmatics for Generating Empathetic Responses Focused on Emotion Causes\""}
{"name": "i-hope-peace/dsmscn", "full_name": "ChenHongruixuan/DSMSCN", "topics": ["deep-learning", "tensorflow", "change-detection", "remote-sensing", "convolutional-neural-network"], "description": "[MultiTemp 2019] Official Tensorflow implementation for Change Detection in Multi-temporal VHR Images Based on Deep Siamese Multi-scale Convolutional Neural Networks."}
{"name": "cuge1995/pointcutmix", "full_name": "cuge1995/PointCutMix", "topics": ["point-cloud", "deep-learning", "3d-deep-learning", "data-augmentation"], "description": "our code for paper 'PointCutMix: Regularization Strategy for Point Cloud Classification'"}
{"name": "vita-group/sandwich-batch-normalization", "full_name": "VITA-Group/Sandwich-Batch-Normalization", "topics": ["neural-architecture-search", "gan", "style-transfer", "adversarial-training", "batch-normalization", "normalization", "sandwich-batch-normalization", "sabn", "nas", "pytorch"], "description": "[WACV 2022] \"Sandwich Batch Normalization: A Drop-In Replacement for Feature Distribution Heterogeneity\" by Xinyu Gong, Wuyang Chen, Tianlong Chen and Zhangyang Wang"}
{"name": "yyccr/yolov3_in_tf2_keras", "full_name": "yyccR/yolov3_in_tf2_keras", "topics": [], "description": "tf2-keras implement yolov3"}
{"name": "tachibanayoshino/remote-sensing-image-semantic-segmentation-tf2", "full_name": "TachibanaYoshino/Remote-sensing-image-semantic-segmentation-tf2", "topics": ["remote-sensing-image", "semantic-segmentation", "naic2020", "deeplabv3plus"], "description": "The remote sensing image semantic segmentation repository based on tf.keras includes backbone networks such as resnet, densenet, mobilenet, and segmentation networks such as deeplabv3+, pspnet, panet, and refinenet."}
{"name": "russellsb/tt-vae-gan", "full_name": "RussellSB/tt-vae-gan", "topics": ["voice-conversion-gan", "speech", "timbre", "timbre-transfer", "music", "variational-autoencoder", "generative-adversarial-network"], "description": "Timbre transfer with variational autoencoding and cycle-consistent adversarial networks. Able to transfer the timbre of an audio source to that of another. "}
{"name": "waking95/easy-bert", "full_name": "waking95/easy-bert", "topics": ["bert", "torch", "transformers", "nlp", "classification", "sequence-labelling", "knowledge-distillation", "chinese-nlp", "chinese", "deep-learning", "nlp-library"], "description": "easy-bert\u662f\u4e00\u4e2a\u4e2d\u6587NLP\u5de5\u5177\uff0c\u63d0\u4f9b\u8bf8\u591abert\u53d8\u4f53\u8c03\u7528\u548c\u8c03\u53c2\u65b9\u6cd5\uff0c\u6781\u901f\u4e0a\u624b\uff1b\u6e05\u6670\u7684\u8bbe\u8ba1\u548c\u4ee3\u7801\u6ce8\u91ca\uff0c\u4e5f\u5f88\u9002\u5408\u5b66\u4e60"}
{"name": "jomariya23156/face-recognition-with-liveness-web-login", "full_name": "jomariya23156/face-recognition-with-liveness-web-login", "topics": ["flask", "face-recognition", "face-detection", "opencv", "python", "liveness-detection", "website", "login", "deep-learning", "cnn", "computer-vision", "application", "tensorflow"], "description": "Face Recognition Web application Login with liveness detection for Anti-Spoofing"}
{"name": "omerferhatt/torch2tflite", "full_name": "omerferhatt/torch2tflite", "topics": ["pytorch", "tensorflow2", "onnx", "tflite", "tensorflowlite", "onnx-tf", "model-converter"], "description": "PyTorch to TensorFlow Lite converter"}
{"name": "oss-pole-emploi/gabarit", "full_name": "OSS-Pole-Emploi/gabarit", "topics": ["data-science", "deep-learning", "machine-learning", "python"], "description": "Gabarit : kickstart your data science project from scratch "}
{"name": "deeppsp/torch_ecg", "full_name": "DeepPSP/torch_ecg", "topics": ["deep-learning", "ecg", "pytorch"], "description": "Deep learning ECG models implemented using PyTorch"}
{"name": "aliprf/asmnet", "full_name": "aliprf/ASMNet", "topics": ["deep-learning", "computer-vision", "pose-estimation", "cnn", "face-alignment", "facial-landmarks", "cvpr2021", "face-points-detection", "face-pose-estimators"], "description": "a Lightweight Deep Neural Network for Face Alignment and Pose Estimation"}
{"name": "buxihuo/luck-yolo", "full_name": "buxihuo/OW-YOLO", "topics": ["yolov5", "pytorch", "yolo", "object-detection", "deep-learning", "unknown", "autolabel", "open-world-detection", "open-world", "yolov8"], "description": "Detect known and unknown objects in the open world\uff08\u5177\u6709\u533a\u5206\u5df2\u77e5\u4e0e\u672a\u77e5\u80fd\u529b\u7684\u5168\u65b0\u68c0\u6d4b\u5668\uff09\uff09"}
{"name": "slseanwu/jazz_transformer", "full_name": "slSeanWU/jazz_transformer", "topics": ["ai-music", "jazz", "transformer", "python3", "tensorflow"], "description": "Transformer-XL for Jazz music composition. Paper: \"The Jazz Transformer on the Front Line: Exploring the Shortcomings of AI-Composed Music through Quantitative Measures\", ISMIR 2020"}
{"name": "sebastian-sz/efficientnet-lite-keras", "full_name": "sebastian-sz/efficientnet-lite-keras", "topics": ["tensorflow", "tensorflow-lite", "keras", "keras-tensorflow", "keras-models", "keras-application", "onnx", "onnxruntime", "tflite", "ml", "deep-learning"], "description": "Keras reimplementation of EfficientNet Lite."}
{"name": "akanyaani/ranknet-tensorflow2.0", "full_name": "akanyaani/ranknet-tensorflow2.0", "topics": ["ranknet", "lambdarank", "ltr", "learning-to-rank", "tensorflow", "tensorflow2"], "description": "Implementation of RankNet to LambdaRank in TensorFlow 2.0"}
{"name": "shantanugupta1118/social-distancing-and-face-mask-detection", "full_name": "Shantanugupta1118/Social-Distancing-and-Face-Mask-Detection", "topics": ["machine", "machinelearning", "python", "python3", "machinelearning-python", "deep-neural-networks", "ssd-mobilenet", "facemask-detection", "socialdistancinganalyzer", "tensorflow", "cuda", "cudnn", "face-mask-detection", "mask"], "description": "Social Distancing and Face Mask Detection using TensorFlow. Install all required Libraries and GPU drivers as well. Refer to README.md or REPORT for know to installation requirement"}
{"name": "atrcheema/ai4water", "full_name": "AtrCheema/AI4Water", "topics": ["machine-learning", "deep-learning", "tabular-data", "time-series"], "description": "framework for developing machine (and deep) learning models for structured data"}
{"name": "yyccr/mask_rcnn_in_tf2_keras", "full_name": "yyccR/mask_rcnn_in_tf2_keras", "topics": [], "description": "tf2-keras implement mask-rcnn"}
{"name": "sarus-tech/tf2-published-models", "full_name": "sarus-tech/tf2-published-models", "topics": ["ai", "tensorflow", "tensorflow2", "keras", "generative-model"], "description": "Sarus implementation of classical ML models. The models are implemented using the Keras API of tensorflow 2. Vizualization are implemented and can be seen in tensorboard."}
{"name": "sjenni/temporal-ssl", "full_name": "sjenni/temporal-ssl", "topics": ["self-supervised-learning", "action-recognition", "tensorflow", "ucf101", "hmdb51", "unsupervised-learning", "c3d", "transfer-learning"], "description": "Video Representation Learning by Recognizing Temporal Transformations. In ECCV, 2020."}
{"name": "zfturbo/efficientnet_3d", "full_name": "ZFTurbo/efficientnet_3D", "topics": [], "description": "EfficientNets in 3D variant for keras and TF.keras"}
{"name": "inhwanbae/enet-sad_pytorch", "full_name": "InhwanBae/ENet-SAD_Pytorch", "topics": ["lane-detection", "enet", "self-attention-distillation", "pytorch-implementation", "deep-learning", "semantic-segmentation", "pytorch", "python"], "description": "Pytorch implementation of \"Learning Lightweight Lane Detection CNNs by Self Attention Distillation (ICCV 2019)\""}
{"name": "ivy-dl/vision", "full_name": "unifyai/vision", "topics": ["python", "machine-learning", "deep-learning", "vision", "tensorflow", "pytorch", "mxnet", "numpy", "jax", "sdf", "depth", "rendering", "point-cloud", "ivy", "voxel", "3d"], "description": "3D Vision functions with end-to-end support for deep learning developers, written in Ivy."}
{"name": "bubbliiiing/dcgan-keras", "full_name": "bubbliiiing/dcgan-keras", "topics": [], "description": "\u8fd9\u662f\u4e00\u4e2adcgan-keras\u7684\u6e90\u7801\uff0c\u53ef\u4ee5\u7528\u4e8e\u8bad\u7ec3\u81ea\u5df1\u7684\u6a21\u578b\u3002"}
{"name": "isl-org/adaptive-surface-reconstruction", "full_name": "isl-org/adaptive-surface-reconstruction", "topics": ["3d-reconstruction", "3d", "pointcloud", "tensorflow", "pytorch"], "description": "Adaptive Surface Reconstruction for 3D Data Processing"}
{"name": "liguge/1d-grad-cam-for-interpretable-intelligent-fault-diagnosis", "full_name": "liguge/1D-Grad-CAM-for-interpretable-intelligent-fault-diagnosis", "topics": ["deep-learning", "fault-diagnosis"], "description": "\u667a\u80fd\u6545\u969c\u8bca\u65ad\u4e2d\u4e00\u7ef4\u7c7b\u68af\u5ea6\u6fc0\u6d3b\u6620\u5c04\u53ef\u89c6\u5316\u5c55\u793a   1D-Grad-CAM for interpretable intelligent fault diagnosis"}
{"name": "bmazoure/ppo_jax", "full_name": "bmazoure/ppo_jax", "topics": ["reinforcement-learning", "gym", "machine-learning", "deep-learning", "ppo", "procgen", "proximal-policy-optimization"], "description": "Jax implementation of Proximal Policy Optimization (PPO) specifically tuned for Procgen, with benchmarked results and saved model weights on all environments."}
{"name": "janghunhyeon/pcloc", "full_name": "JanghunHyeon/PCLoc", "topics": ["visual-localization", "deep-learning", "indoor-localization", "iccv2021", "image-retrieval", "pose-estimation", "feature-matching"], "description": "Pose Correction for Highly Accurate Visual Localization in Large-scale Indoor Spaces (ICCV 2021)"}
{"name": "youshaamurhij/fmfnet", "full_name": "YoushaaMurhij/FMFNet", "topics": ["deep-learning", "object-detection", "pytorch", "tracking", "computer-vision"], "description": "Official Pytorch implementation for the paper: \"FMFNet: Improve the 3D Object Detection and Tracking via Feature Map Flow\" [IJCNN-2022] "}
{"name": "daquincy/deepmusicvstyle", "full_name": "daQuincy/DeepMusicvStyle", "topics": ["variational-autoencoder", "deep-learning", "music-composition", "vae", "music-generation"], "description": "Code repo for ICME 2020 paper \"Style-Conditioned Music Generation\". VAE model that allows style-conditioned music generation."}
{"name": "nicozwy/cofced", "full_name": "Nicozwy/CofCED", "topics": ["fake-news-detection", "explainable-fake-news-detection", "dataset", "deep-learning"], "description": "COLING 2022: A Coarse-to-fine Cascaded Evidence-Distillation Neural Network for Explainable Fake News Detection.    "}
{"name": "teapoly/conformer-athena", "full_name": "TeaPoly/Conformer-Athena", "topics": ["tensorflow2", "conformer", "transformer", "asr", "aishell", "tensorflow", "asr-tasks", "speech-recognition"], "description": "Dynamic Chunk Streaming and Offline Conformer based on  athena-team/Athena."}
{"name": "google-research/pisac", "full_name": "google-research/pisac", "topics": ["reinforcement-learning", "robotics", "deep-learning", "machine-learning", "deep-reinforcement-learning", "information-theory", "vision"], "description": "Tensorflow 2 source code for the PI-SAC agent from \"Predictive Information Accelerates Learning in RL\" (NeurIPS 2020)"}
{"name": "zhengyima/ncov_sentiment", "full_name": "zhengyima/ncov_sentiment", "topics": ["tensorflow", "bert", "fine-tuning", "nlp", "python", "sentiment-analysis", "sentiment-classification", "bert-chinese", "deep-learning", "datafountain", "machine-learning", "nerual-network"], "description": "\u75ab\u60c5\u671f\u95f4\u7f51\u6c11\u60c5\u7eea\u8bc6\u522b\u6bd4\u8d5bbaseline\uff0c\u4f7f\u7528BERT\u8fdb\u884c\u7aef\u5230\u7aef\u7684fine-tuning\uff0cdatafountain\u5e73\u53f0\uff0c\u5e73\u53f0\u8bc4\u6d4bF1\u503c0.716\u3002"}
{"name": "hulk66/timeline", "full_name": "hulk66/timeline", "topics": ["google-photos", "photos", "photography", "face-recognition", "face-detection", "object-detection", "tensorflow", "python", "vue", "vuetify", "face", "recognition", "object", "detection", "organize-photos", "timeline", "amazon-photos"], "description": "Timeline - A photo organizer"}
{"name": "parkseobin/mlsr", "full_name": "parkseobin/MLSR", "topics": ["super-resolution", "meta-learning", "deep-learning", "tensorflow"], "description": "Source code for ECCV2020 \"Fast Adaptation to Super-Resolution Networks via Meta-Learning\""}
{"name": "sailist/thexp", "full_name": "pytorch-lumo/lumo", "topics": ["pytorch", "deep-learning"], "description": "More light-weight pytorch experiment library!"}
{"name": "instadeepai/manyfold", "full_name": "instadeepai/manyfold", "topics": ["bioinformatics", "deep-learning", "jax", "protein-folding", "protein-structure", "python", "research"], "description": "\ud83e\uddec ManyFold: An efficient and flexible library for training and validating protein folding models"}
{"name": "deepmind/dks", "full_name": "deepmind/dks", "topics": ["neural-networks", "machine-learning", "deep-learning", "jax", "pytorch", "tensorflow", "artificial-intelligence", "neural-tangent-kernel"], "description": "Multi-framework implementation of Deep Kernel Shaping and Tailored Activation Transformations, which are methods that modify neural network models (and their initializations) to make them easier to train."}
{"name": "junction4nako/mvp_pytorch", "full_name": "Junction4Nako/mvp_pytorch", "topics": [], "description": "pytorch implementation of mvp: a multi-stage vision-language pre-training framework"}
{"name": "fajieyuan/sigir2021_conure", "full_name": "fajieyuan/SIGIR2021_Conure", "topics": ["lifelong-learning", "continual-learning", "transfer-learning", "recommender-system", "user-representation", "user-profile", "pruning", "catastrophic-forgetting", "lifelong-machine-learning", "recommendation", "universal-representation", "transformer", "transformer-architecture", "bert", "bert-model", "self-supervised-learning", "pre-training", "general-purpose", "user"], "description": " One Person, One Model, One World: Learning Continual User Representation without Forgetting "}
{"name": "alexfromapex/tensorexperiments", "full_name": "alexfromapex/tensorexperiments", "topics": ["gpu", "gpu-acceleration", "gpu-computing", "gpu-programming", "m1", "m1-mac", "python", "python3", "pytorch", "tensorflow", "tensorflow2"], "description": "Boilerplate for GPU-Accelerated TensorFlow and PyTorch code on M1 Macbook"}
{"name": "lemonatsu/danbo-pytorch", "full_name": "LemonATsu/DANBO-pytorch", "topics": [], "description": "Pytorch implementation for DANBO: Disentangled Articulated Neural Body Representations via Graph Neural Networks"}
{"name": "richardobi/medigan", "full_name": "RichardObi/medigan", "topics": ["medical", "generation", "gans", "toolbox", "python", "deep-learning", "machine-learning", "model", "computer-vision", "dataset", "endoscopy", "generative-adversarial-network", "generative-ai", "generative-model", "medical-image-analysis", "medical-image-dataset", "medical-imaging", "radiology", "synthesis", "synthetic-data"], "description": "medigan - A Python Library of Pretrained Generative Models for Medical Image Synthesis"}
{"name": "fdbtrs/cr-fiqa", "full_name": "fdbtrs/CR-FIQA", "topics": ["face-image-quality-assessment", "biometrics", "face-recognition", "cr-fiqa", "pytorch"], "description": "Official repository for CR-FIQA: Face Image Quality Assessment by Learning Sample Relative Classifiability"}
{"name": "khanld/asr-wav2vec-finetune", "full_name": "khanld/ASR-Wav2vec-Finetune", "topics": ["asr", "pytorch", "speech-recognition", "wav2vec2", "finetune-wav2vec", "huggingface", "speech-to-text", "vietnamese-speech-recognition"], "description": ":zap: Finetune Wa2vec 2.0 For Speech Recognition"}
{"name": "rishit-dagli/cppe-dataset", "full_name": "Rishit-dagli/CPPE-Dataset", "topics": ["machine-learning", "dataset", "vision", "computer-vision", "artificial-intelligence", "object-detection", "deep-learning", "pytorch", "tensorflow", "pretrained-models", "models", "data", "cppe5"], "description": "Code for our paper CPPE - 5 (Medical Personal Protective Equipment), a new challenging object detection dataset"}
{"name": "doyosae/phase_aware_deep_complex_unet", "full_name": "russellgeum/Phase-aware-Deep-Complex-UNet", "topics": ["deep-learning", "speech-enhancement", "complex-networks"], "description": "(NOT Official) Implementation DC-UNet (ICLR 2019)"}
{"name": "bellman-devs/bellman", "full_name": "Bellman-devs/bellman", "topics": ["reinforcement-learning", "machine-learning", "tensorflow", "mbrl", "mujoco", "deep-learning", "deep-reinforcement-learning", "model-based-reinforcement-learning"], "description": "Model-based reinforcement learning in TensorFlow"}
{"name": "vibashan/image-fusion-transformer", "full_name": "Vibashan/Image-Fusion-Transformer", "topics": [], "description": "Official Pytorch Code base for  Image-Fusion-Transformer"}
{"name": "johansamir/revisiting_rainbow", "full_name": "JohanSamir/revisiting_rainbow", "topics": ["rl", "ai", "ml", "jax", "tensorflow", "rainbow", "deep-reinforcement-learning"], "description": "Revisiting Rainbow"}
{"name": "jamesgleave/dd_protocol", "full_name": "jamesgleave/DD_protocol", "topics": ["docking", "virtual-screening", "drug-discovery", "deep-learning"], "description": "Official repository for the Deep Docking protocol"}
{"name": "kssteven418/ltp", "full_name": "kssteven418/LTP", "topics": ["natural-language-processing", "transformer", "bert", "pruning", "model-compression", "efficient-model", "efficient-neural-networks"], "description": "[KDD'22] Learned Token Pruning for Transformers "}
{"name": "gusb3ll/tsuki", "full_name": "Gusb3ll/Tsuki", "topics": ["python", "tensorflow", "pytorch", "deepcreampy", "hent-ai", "anime", "decensoring"], "description": "Manga uncensoring scripts using DeepCreamPy & HentAI combined with custom scripts"}
{"name": "paritybit-ai/xfl", "full_name": "paritybit-ai/XFL", "topics": ["federated-learning", "machine-learning", "python", "federated-learning-framework", "paritybit", "paritybit-ai", "deep-learning"], "description": "An Efficient and Easy-to-use Federated Learning Framework."}
{"name": "yamonc/new-pytorch-chinese", "full_name": "yamonc/New-Pytorch-Chinese", "topics": [], "description": "\u4e2d\u6587\u6587\u672c\u6458\u8981\uff0c\u57fa\u4e8epytorch\uff0c\u91c7\u7528LCSTS\u6570\u636e\u96c6"}
{"name": "szzexpoi/air", "full_name": "szzexpoi/AiR", "topics": ["saliency-maps", "attention-supervision", "attention", "machine-attention"], "description": "Official Repository for ECCV 2020 paper \"AiR: Attention with Reasoning Capability\""}
{"name": "xuarehere/yolovx_deepsort_pytorch", "full_name": "xuarehere/yolo_series_deepsort_pytorch", "topics": ["pytorch", "sort", "yolo", "yolov3", "yolov4", "yolov4-deepsort", "yolov5", "yolov5-deepsort", "yolov5-deepsort-pytorch", "yolov6", "yolov7", "yolov6-deepsort", "yolov7-deepsort", "deepsort", "deep-sort", "deep-sort-tracking", "mot-tracking", "object-tracking", "mot", "yolov8-deepsort"], "description": "Deepsort with yolo series. This project support the existing yolo detection model algorithm (YOLOV8,  YOLOV7,  YOLOV6,  YOLOV5,  YOLOV4Scaled,  YOLOV4, YOLOv3', PPYOLOE,  YOLOR,  YOLOX )."}
{"name": "orion-ai-lab/efficientbigearthnet", "full_name": "Orion-AI-Lab/EfficientBigEarthNet", "topics": ["big-earth-data", "deep-learning", "land-use"], "description": "Code and models for efficient training on the BigEarthNet dataset for Land Use Land Cover classification"}
{"name": "salu133445/arranger", "full_name": "salu133445/arranger", "topics": ["music", "machine-learning", "tensorflow", "music-information-retrieval"], "description": "An AI for Automatic Instrumentation"}
{"name": "bm-k/kominilm", "full_name": "BM-K/KoMiniLM", "topics": ["distillation", "language-model", "natural-language-processing"], "description": "Korean Light Weight Language Model"}
{"name": "homebrewnlp/olmax", "full_name": "HomebrewNLP/Olmax", "topics": ["jax", "tpu", "attention", "transformer", "gpt", "hpc"], "description": "HomebrewNLP in JAX flavour for maintable TPU-Training"}
{"name": "doublez0108/mvs", "full_name": "doubleZ0108/MVS", "topics": ["mvs", "multi-view-stereo", "3d-reconstruction", "deep-learning"], "description": "Multi-View Stereo based on deep learning. | Learning notes, codes and more."}
{"name": "rsanchezgarc/deepemhancer", "full_name": "rsanchezgarc/deepEMhancer", "topics": ["deep-learning", "cryo-em"], "description": "Deep learning for cryo-EM maps post-processing"}
{"name": "czczup/block-shuffle", "full_name": "czczup/block-shuffle", "topics": ["fast-style-transfer", "high-resolution", "tensorflow"], "description": "A method for high-resolution Fast Style Transfer with limited memory"}
{"name": "mmsir/gainedvae", "full_name": "mmSir/GainedVAE", "topics": ["compression"], "description": "A Pytorch Implementation of a continuously rate adjustable learned image compression framework."}
{"name": "bupt-ai-cz/llvip", "full_name": "bupt-ai-cz/LLVIP", "topics": ["computer-vision", "visible-infrared", "low-light-image", "image-fusion", "object-detection", "cnn", "gan", "deep-learning", "low-light-vision", "image-to-image-translation", "iccv2021"], "description": "LLVIP: A Visible-infrared Paired Dataset for Low-light Vision"}
{"name": "p-ranav/merged_depth", "full_name": "p-ranav/merged_depth", "topics": ["depth-prediction", "neural-networks", "pytorch", "python3", "torch", "torchvision", "image-processing", "prediction", "average", "mit-license", "open-source", "academic", "depth-estimation", "camera", "youtube", "images", "average-calculator", "machine-learning", "deep-learning"], "description": "Monocular Depth Estimation - Weighted-average prediction from multiple pre-trained depth estimation models"}
{"name": "kazuhito00/movenet-python-example", "full_name": "Kazuhito00/MoveNet-Python-Example", "topics": ["movenet", "tensorflow", "tensorflow-lite", "onnx", "movenet-lightning", "movenet-thunder", "singlepose", "multipose"], "description": "MoveNet\u3092\u7528\u3044\u305fPython\u3067\u306e\u59ff\u52e2\u63a8\u5b9a\u306e\u30c7\u30e2"}
{"name": "abdullah-abuolaim/recurrent-defocus-deblurring-synth-dual-pixel", "full_name": "Abdullah-Abuolaim/recurrent-defocus-deblurring-synth-dual-pixel", "topics": ["defocus-blur", "defocus-deblurring", "dual-pixel", "depth-of-field", "autofocus", "deep-neural-networks", "recurrent-neural-networks", "deeplearning", "dataset", "synthetic-data", "synthetic-dataset-generation", "computational-photography", "deep-learning", "datasets", "computer-vision"], "description": "Reference github repository for the paper \"Learning to Reduce Defocus Blur by Realistically Modeling Dual-Pixel Data\". We propose a procedure to generate realistic DP data synthetically. Our synthesis approach mimics the optical image formation found on DP sensors and can be applied to virtual scenes rendered with standard computer software. Leveraging these realistic synthetic DP images, we introduce a new recurrent convolutional network (RCN) architecture that can improve defocus deblurring results and is suitable for use with single-frame and multi-frame data captured by DP sensors."}
{"name": "jannoshh/simple-sam", "full_name": "Jannoshh/simple-sam", "topics": ["sam", "optimizer", "tensorflow", "sharpness-aware", "training", "sharpness", "topology"], "description": "Sharpness-Aware Minimization for Efficiently Improving Generalization"}
{"name": "tensorflow/model-remediation", "full_name": "tensorflow/model-remediation", "topics": ["tensorflow", "machine-learning"], "description": "Model Remediation is a library that provides solutions for machine learning practitioners working to create and train models in a way that reduces or eliminates user harm resulting from underlying performance biases."}
{"name": "qq456cvb/ukpgan", "full_name": "qq456cvb/UKPGAN", "topics": ["tensorflow", "unsupervised-learning", "local-features", "rotation-invariant-features", "keypoint-detection", "cvpr2022", "computer-vision", "pytorch"], "description": "UKPGAN: A General Self-Supervised Keypoint Detector (CVPR2022)"}
{"name": "bojone/keras_recompute", "full_name": "bojone/keras_recompute", "topics": [], "description": "saving memory by recomputing for keras"}
{"name": "wangcongcong123/ttt", "full_name": "wangcongcong123/ttt", "topics": ["transformers", "tpus", "tensorflow2", "nlp", "t5"], "description": "A package for fine-tuning Transformers with TPUs, written in Tensorflow2.0+"}
{"name": "yeyupiaoling/audioclassification-tensorflow", "full_name": "yeyupiaoling/AudioClassification-Tensorflow", "topics": ["tensorflow", "urbansound8k", "audioclassification"], "description": "\u57fa\u4e8eTensorflow\u5b9e\u73b0\u58f0\u97f3\u5206\u7c7b\uff0c\u535a\u5ba2\u5730\u5740\uff1a"}
{"name": "yfletberliac/adversarially-guided-actor-critic", "full_name": "yfletberliac/adversarially-guided-actor-critic", "topics": ["adversarially-guided-actor-critic", "tensorflow", "pytorch"], "description": "AGAC: Adversarially Guided Actor-Critic"}
{"name": "davisyoshida/tf2-gradient-checkpointing", "full_name": "davisyoshida/tf2-gradient-checkpointing", "topics": ["tensorflow", "tensorflow2", "python", "gradient-checkpointing", "ml", "deep-learning", "deep-neural-networks"], "description": "Simple gradient checkpointing for eager mode execution"}
{"name": "r4j4n/face-recognition-using-facenet-on-tensorflow-2.x", "full_name": "R4j4n/Face-recognition-Using-Facenet-On-Tensorflow-2.X", "topics": ["python-face-recognition", "tensorflow-face-recognition", "facenet", "keras", "mtcnn", "l2-distances"], "description": null}
{"name": "thu-coai/sentilare", "full_name": "thu-coai/SentiLARE", "topics": ["sentiment-polarity", "sentiment-analysis", "sentiment-classification", "pretrained-models", "bert", "linguistic-features", "part-of-speech", "pytorch"], "description": "Codes for our paper \"SentiLARE: Sentiment-Aware Language Representation Learning with Linguistic Knowledge\" (EMNLP 2020)"}
{"name": "aligokalppeker/hypelcnn", "full_name": "aligokalppeker/hypelcnn", "topics": ["deep-neural-networks", "hsi", "lidar", "fusion", "tensorflow", "gan"], "description": "A Deep Learning Classification Framework with Spectral and Spatial Feature Fusion Layers for Hyperspectral and Lidar Sensor Data"}
{"name": "hltchkust/vg-gplms", "full_name": "HLTCHKUST/VG-GPLMs", "topics": ["deep-learning", "summarization", "nlp", "multimodal-deep-learning"], "description": "The code repository for EMNLP 2021 paper \"Vision Guided Generative Pre-trained Language Models for Multimodal Abstractive Summarization\"."}
{"name": "kniter1/tailor", "full_name": "kniter1/TAILOR", "topics": [], "description": "Pytorch implementation for Tailor Versatile Multi-modal Learning for Multi-label Emotion Recognition"}
{"name": "nengo/keras-spiking", "full_name": "nengo/keras-spiking", "topics": ["python", "tensorflow", "deep-learning", "spiking-neural-networks", "keras"], "description": "Spiking neuron integration for Keras"}
{"name": "xuyuan/waymo_2d_tracking", "full_name": "xuyuan/waymo_2d_tracking", "topics": ["autonomous-driving", "deep-learning", "object-detection", "tracking", "pytorch"], "description": "3rd place solution of Waymo open dataset challenge 2D tracking track"}
{"name": "anguyen8/deepface-emd", "full_name": "anguyen8/deepface-emd", "topics": ["computer-vision", "face-identification", "earth-movers-distance", "deep-learning"], "description": "Code for CVPR 2022 https://arxiv.org/abs/2112.04016 DeepFace-EMD Re-ranking Using Patch-wise Earth Movers Distance Improves Out-Of-Distribution Face Identification"}
{"name": "jahongir7174/yolov5-tf", "full_name": "jahongir7174/YOLOv5-tf", "topics": ["yolov5", "tf2", "tensorflow2", "object-detection", "tensorflow"], "description": "YOLOv5 implementation using TensorFlow 2"}
{"name": "bubbliiiing/deeplabv3-plus-keras", "full_name": "bubbliiiing/deeplabv3-plus-keras", "topics": [], "description": "\u8fd9\u662f\u4e00\u4e2adeeplabv3-plus-keras\u7684\u6e90\u7801\uff0c\u53ef\u4ee5\u7528\u4e8e\u8bad\u7ec3\u81ea\u5df1\u7684\u6a21\u578b\u3002"}
{"name": "samuelkim314/deepsymreg", "full_name": "samuelkim314/DeepSymReg", "topics": ["deep-learning", "equation-discovery", "neural-network", "symbolic-regression"], "description": "Official repository for the paper \"Integration of Neural Network-Based Symbolic Regression in Deep Learning for Scientific Discovery\""}
{"name": "saareliad/ftpipe", "full_name": "saareliad/FTPipe", "topics": ["pipeline-parallelism", "fine-tuning", "nlp", "t5", "deep-neural-networks", "distributed-training"], "description": "FTPipe and related pipeline model parallelism research."}
{"name": "tuvovan/vision_transformer_keras", "full_name": "tuvovan/Vision_Transformer_Keras", "topics": ["transformer", "computer-vision", "image-recognition", "vision", "keras", "tensorflow"], "description": "Keras Implementation of Vision Transformer (An Image is Worth 16x16 Words: Transformers for Image Recognition at Scale)"}
{"name": "aimat-lab/gcnn_keras", "full_name": "aimat-lab/gcnn_keras", "topics": ["graph-convolution", "ragged-tensors", "graph-networks", "graph-algorithms", "graphs", "tensorflow2", "keras-tensorflow", "molecules", "networks", "machine-learning", "neural-networks"], "description": "Graph convolution with tf.keras"}
{"name": "gaborvecsei/sle-gan", "full_name": "gaborvecsei/SLE-GAN", "topics": ["gan", "lighweight-gan", "image-synthesis", "tensorflow", "tensorflow2", "few-shot-image-generation"], "description": "Towards Faster and Stabilized GAN Training for High-fidelity Few-shot Image Synthesis"}
{"name": "chenchongthu/ensfm", "full_name": "chenchongthu/ENSFM", "topics": ["recommender-system", "neural-network", "efficient-algorithm", "non-sampling", "recommendation", "context", "feature"], "description": "This is our implementation of ENSFM: Efficient Non-Sampling Factorization Machines (WWW 2020)"}
{"name": "pclubiitk/model-zoo", "full_name": "pclubiitk/model-zoo", "topics": ["model-zoo", "cnn-model", "cnn", "classification", "video", "3d-vision", "object-detection", "gans", "vae-gan", "pytorch", "tensorflow", "super-resolution", "nlp", "machine-learning", "deep-learning"], "description": "Implementations of various Deep Learning models in PyTorch and TensorFlow."}
{"name": "yeyupiaoling/kersa-speaker-recognition", "full_name": "yeyupiaoling/VoiceprintRecognition-Keras", "topics": ["speaker-recognition", "kersa", "tensorflow", "deep-learning", "voice-recognition"], "description": "\u57fa\u4e8eKersa\u5b9e\u73b0\u7684\u58f0\u7eb9\u8bc6\u522b\u6a21\u578b"}
{"name": "jingtaozhan/jpq", "full_name": "jingtaozhan/JPQ", "topics": ["information-retrieval", "web-search", "dense-retrieval", "product-quantization", "compression", "efficiency", "deep-learning", "pytorch"], "description": "CIKM'21: JPQ substantially improves the efficiency of Dense Retrieval with 30x compression ratio, 10x CPU speedup and 2x GPU speedup."}
{"name": "yiqinyang/icq", "full_name": "YiqinYang/ICQ", "topics": ["deep-reinforcement-learning", "deep-rl", "multi-agent-reinforcement-learning", "mutli-agent", "offline", "pytorch", "reinforcement-learning"], "description": "Codes accompanying the paper \"Believe What You See: Implicit Constraint Approach for Offline Multi-Agent Reinforcement Learning\" (NeurIPS 2021 Spotlight https://arxiv.org/abs/2106.03400)"}
{"name": "ximilar-com/tf-metric-learning", "full_name": "Ximilar-com/tf-metric-learning", "topics": ["metric-learning", "computer-vision", "similarity-search", "image-retrieval", "machine-learning", "python", "tensorflow", "deep-learning", "deep-metric-learning", "visual-search"], "description": "Minimalistic TensorFlow2+ deep metric/similarity learning library with loss functions, miners, and utils as embedding projector."}
{"name": "cdancette/multimodal", "full_name": "multimodal/multimodal", "topics": ["visual-features", "datasets", "embeddings", "vision-and-language", "reasoning", "deep-learning"], "description": "A collection of multimodal datasets, and visual features for VQA and captionning in pytorch. Just run \"pip install multimodal\""}
{"name": "ylhz/tf_to_pytorch_model", "full_name": "ylhz/tf_to_pytorch_model", "topics": [], "description": "Convert tensorflow model to pytorch model via [MMdnn](https://github.com/microsoft/MMdnn) for adversarial attacks."}
{"name": "pietrobarbiero/logic_explained_networks", "full_name": "pietrobarbiero/logic_explained_networks", "topics": ["xai", "explainable-ai", "deep-learning", "neural-networks", "machine-learning", "logic"], "description": "Logic Explained Networks is a python repository implementing explainable-by-design deep learning models."}
{"name": "soloist-v/autostrike", "full_name": "soloist-v/AutoStrike", "topics": ["cf", "crossfire", "yolo", "yolov5", "screenshot", "ai", "pytorch", "mouse", "game", "csgo", "cheat"], "description": null}
{"name": "yurongyou/hindsight", "full_name": "YurongYou/Hindsight", "topics": ["point-cloud", "pytorch", "autonomous-driving", "object-detection", "3d-detection", "hindsight"], "description": "Code release for \"Hindsight is 20/20: Leveraging Past Traversals to Aid 3D Perception\" [ICLR 2022]"}
{"name": "nauyan/segmentation", "full_name": "nauyan/Segmentation", "topics": ["segmentation", "medical-imaging", "deep-learning", "keras", "tensorflow", "segnet", "u-net", "deeplabv3"], "description": "Contains code for Semantic Segmentation of MoNuSeg 2018 challenge."}
{"name": "ahmedfgad/kerasga", "full_name": "ahmedfgad/KerasGA", "topics": ["genetic-algorithm", "keras-tensorflow", "keras", "pygad", "python", "python3", "neural-network", "convolutional-neural-networks", "deep-learning", "machine-learning", "numpy"], "description": "Training Keras Models by the Genetic Algorithm using PyGAD"}
{"name": "yanbeic/val", "full_name": "yanbeic/VAL", "topics": ["image-search", "vision-and-language", "attention", "cvpr2020", "tensorflow", "retrieval"], "description": "Tensorflow Implementation on Paper [CVPR2020]Image Search with Text Feedback by Visiolinguistic Attention Learning"}
{"name": "kieranjwood/trading-momentum-transformer", "full_name": "kieranjwood/trading-momentum-transformer", "topics": ["deep-learning", "machine-learning", "quantitative-finance", "trading-strategies", "momentum-trading-strategy", "transformer"], "description": "This code accompanies the the paper Trading with the Momentum Transformer: An Intelligent and Interpretable Architecture (https://arxiv.org/pdf/2112.08534.pdf)."}
{"name": "tuvovan/rfdnet-imagesuperresolution", "full_name": "tuvovan/RFDNet-ImageSuperResolution", "topics": ["image-super-resolution", "keras", "tensorflow", "tensorflow2", "computational-imaging", "image-enhancement", "computer-vision", "deep-learning", "convolutional-neural-networks"], "description": "Keras Implementation of the paper Residual Feature Distillation Network for Lightweight Image Super-Resolution"}
{"name": "fidelity/textwiser", "full_name": "fidelity/textwiser", "topics": ["natural-language-processing", "nlp", "bert", "text-featurization"], "description": "[AAAI 2021] TextWiser: Text Featurization Library"}
{"name": "coolephemeroptera/aesrc2020", "full_name": "coolEphemeroptera/AESRC2020", "topics": ["ctc", "resnet", "keras", "mtl", "interspeech", "accent-recognition", "asr", "cosface", "arcface", "circle-loss", "netvlad", "ghostvlad", "speaker-recognition", "crnn"], "description": "a deep accent recognition network"}
{"name": "wellcometrust/wellcomeml", "full_name": "wellcometrust/WellcomeML", "topics": ["deep-learning", "scibert", "transformers", "nlp", "datascience"], "description": "Repository for Machine Learning utils at the Wellcome Trust"}
{"name": "luka-group/lattice", "full_name": "luka-group/Lattice", "topics": ["attention-mechanism", "equivariance", "equivariant-network", "equivariant-representations", "table-to-text", "transformer"], "description": "[NAACL 2022] Robust (Controlled) Table-to-Text Generation with Structure-Aware Equivariance Learning. "}
{"name": "itmo-nss-team/torch_de_solver", "full_name": "ITMO-NSS-team/torch_DE_solver", "topics": ["equation-solver", "differential-equations", "numerical-methods"], "description": "Combines power of torch, numerical methods to conquer and solve ALL {O,P}DEs"}
{"name": "aj-naik/emotion-music-recommendation", "full_name": "aj-naik/Emotion-Music-Recommendation", "topics": ["flask", "computer-vision", "spotify", "tkinter", "neumorphic-ui", "neumorphism", "deep-learning", "keras", "opencv", "music-recommendation", "emotion-recognition", "spotify-api", "spotify-web-api", "python"], "description": "Flask web app for recommending music based on your facial expressions using FER 2013 dataset and Spotify api"}
{"name": "biosystemsum/deepmol", "full_name": "BioSystemsUM/DeepMol", "topics": ["machine-learning", "deep-learning", "chemoinformatics"], "description": "DeepMol: a python-based machine and deep learning framework for drug discovery"}
{"name": "daiquocnguyen/qgnn", "full_name": "daiquocnguyen/QGNN", "topics": ["graph-classification", "node-classification", "graph-representation-learning", "quaternion", "graph-neural-networks", "graph-embeddings", "node-embeddings", "text-classification", "hamilton-product", "quaternion-algebra"], "description": "Quaternion Graph Neural Networks (ACML 2021) (Pytorch and Tensorflow)"}
{"name": "monaen/lightfieldreconstruction", "full_name": "monaen/LightFieldReconstruction", "topics": ["light-field-reconstruction", "high-dimensional-convolution", "view-synthesis", "super-resolution", "spatio-angular-features", "light-field-processing", "image-processing", "tensorflow", "image-restoration", "computer-vision", "deep-learning", "light-field-super-resolution"], "description": "High-Dimensional Dense Residual Convolutional Neural Network for Light Field Reconstruction"}
{"name": "nikitadurasov/masksembles", "full_name": "nikitadurasov/masksembles", "topics": ["uncertainty-estimation", "deep-learning", "computer-vision", "tensorflow", "torch", "uncertainty-quantification", "uncertainty-neural-networks", "paper", "out-of-distribution-detection"], "description": "Official repository for the paper \"Masksembles for Uncertainty Estimation\" (CVPR2021)."}
{"name": "menon92/banglatranslator", "full_name": "menon92/BanglaTranslator", "topics": ["tensorflow", "attention", "encoder-decoder", "lstm", "translators", "bangla", "bangla-nlp", "bangla-machine-translation"], "description": "Bangla Machine Translator"}
{"name": "duongttr/vehicles-counting-yolov4-deepsort", "full_name": "duongttr/vehicles-counting-yolov4-deepsort", "topics": ["vehicle-counting", "yolov4", "deepsort", "flask", "ngrok", "darknet", "tensorflow", "tf2", "google-colab"], "description": "A project for counting vehicles using YOLOv4 + DeepSORT + Flask + Ngrok + TF2"}
{"name": "sshane/konverter", "full_name": "sshane/Konverter", "topics": ["keras-tensorflow", "neural-networks", "model-converter", "keras", "python", "tensorflow"], "description": "Convert simple Keras models to pure Python \ud83d\udc0d+ NumPy"}
{"name": "fetchai/colearn", "full_name": "fetchai/colearn", "topics": ["machine-learning", "deep-learning", "python", "blockchain", "priv"], "description": "Colearn is a collection of protocols for running multi-stakeholder machine learning that preserve data privacy"}
{"name": "tum-daml/synthetic_coordinates", "full_name": "TUM-DAML/synthetic_coordinates", "topics": ["paper", "pytorch", "gnn", "graph-neural-networks"], "description": "Synthetic coordinates for GNNs, as proposed in \"Directional Message Passing on Molecular Graphs via Synthetic Coordinates\" (NeurIPS 2021)"}
{"name": "panjinquan/pytorch-base-trainer", "full_name": "PanJinquan/Pytorch-Base-Trainer", "topics": ["distributed-training", "pytorch-prune", "pytorch-training", "deep-learning"], "description": "Pytorch\u5206\u5e03\u5f0f\u8bad\u7ec3\u6846\u67b6"}
{"name": "hasanirtiza/pedesformer-transformer-networks-for-pedestrian-detection", "full_name": "hasanirtiza/PedesFormer-Transformer-Networks-For-Pedestrian-Detection", "topics": ["transformer", "transformers", "pedestrian-detection"], "description": "Transformer Networks for Pedestrian Detection"}
{"name": "davidmallasen/livechess2fen", "full_name": "davidmallasen/LiveChess2FEN", "topics": ["onnx", "onnxruntime", "tensorrt", "chess", "computer-vision", "convolutional-neural-networks", "deep-learning", "nvidia-jetson-nano", "fen", "chessboard", "chessboard-recognition", "chessboard-detection"], "description": "Predict live chess games into FEN notation."}
{"name": "uoft-ecosystem/hfta", "full_name": "UofT-EcoSystem/hfta", "topics": ["deep-learning", "machine-learning", "pytorch", "gpu", "tpu", "neural-network", "hardware-utilization"], "description": "Boost hardware utilization for ML training workloads via Inter-model Horizontal Fusion"}
{"name": "indolem/indolem", "full_name": "indolem/indolem", "topics": ["indolem", "indobert", "bert", "indonesian-language", "summarization", "dependency-parsing", "glue", "discourse", "sentiment-analysis", "ner", "pos-tagging", "indonesian", "bahasa", "natural-language-processing"], "description": "IndoLEM is a comprehensive Indonesian NLU benchmark, comprising three pillars NLP task: morpho-syntax, semantic, and discourse. Presented in COLING 2020."}
{"name": "pavankunchala/deep-learning", "full_name": "Pavankunchala/Deep-Learning", "topics": ["deep-learning", "tensorflow2", "recurrent-neural-networks", "lstm-neural-networks", "stockprediction", "pytorch", "opencv", "feature-extraction", "face-detection", "augementedreality", "color-quantization", "qrcode-scanner", "face-tracking", "tensorflow", "alex-net", "lstm-model", "localization", "robotics", "kalman-filter"], "description": "This repo provides projects on deep-learning mainly using Tensorflow 2.0"}
{"name": "sparks-baird/mat_discover", "full_name": "sparks-baird/mat_discover", "topics": ["materials-discovery", "machine-learning", "materials-science", "materials-screening", "materials-informatics", "pytorch", "numba", "predict-materials-properties", "crabnet", "wasserstein-distance", "wasserstein-metric", "wasserstein", "earth-movers-distance", "earth-mover-distance", "materials-discoveries", "materials-project", "adaptive-design", "bayesian-optimization", "matdiscover", "python"], "description": "A materials discovery algorithm geared towards exploring high-performance candidates in new chemical spaces."}
{"name": "ardauzunoglu/rte-speech-generator", "full_name": "ardauzunoglu/rte-speech-generator", "topics": ["python", "tensorflow", "natural-language-processing", "nlp", "politics", "speech-processing", "turkish", "turkce", "turkish-nlp"], "description": "Natural Language Processing to generate new speeches for the President of Turkey."}
{"name": "meatssauce/scinet", "full_name": "Meatssauce/SCINet", "topics": ["machine-learning", "tensorflow", "time-series", "forecasting", "python", "scinet", "state-of-the-art"], "description": "Forecast time series and stock prices with SCINet "}
{"name": "smaranjitghose/artcv", "full_name": "smaranjitghose/ArtCV", "topics": ["python", "opencv", "image-processing", "art", "slop-20", "slop", "deep-learning", "hacktoberfest", "jwoc", "swoc2021", "dwoc2020"], "description": "Randomly Exploring Computer Vision techniques to create eye catching art out of plain boring images!"}
{"name": "alirezashamsoshoara/fire-detection-uav-aerial-image-classification-segmentation-unmannedaerialvehicle", "full_name": "AlirezaShamsoshoara/Fire-Detection-UAV-Aerial-Image-Classification-Segmentation-UnmannedAerialVehicle", "topics": ["fire", "uav", "imagery", "classification", "segmentation", "keras", "tensorflow", "dataset", "dnn"], "description": "Aerial Imagery dataset for fire detection: classification and segmentation (Unmanned Aerial Vehicle (UAV))"}
{"name": "doodleverse/segmentation_gym", "full_name": "Doodleverse/segmentation_gym", "topics": ["segmentation", "deep-learning", "aerial-imagery", "satellite-imagery", "earth-observation"], "description": "A neural gym for training deep learning models to carry out geoscientific image segmentation. Works best with labels generated using https://github.com/Doodleverse/dash_doodler"}
{"name": "jaehwlee/tf2-harmonic-cnn", "full_name": "jaehwlee/tf2-harmonic-cnn", "topics": ["audio-representation", "tensorflow", "state-of-the-art", "music-auto-tagging", "keyword-spotting", "audio-event-classification"], "description": "Tensorflow2 implementation of Data-driven Harmonic Filters for Audio Representation Learning"}
{"name": "elttaes/revisiting-plms", "full_name": "elttaes/Revisiting-PLMs", "topics": ["alphafold", "function-prediction", "fitness-prediction", "alphafold2", "benchmark", "contact-prediction", "multiple-sequence-alignment", "protein-annotation", "protein-classification", "protein-language-model", "pytorch", "stability", "esm1b", "metal-ion-binding", "msa-construction", "msa-transformer", "remote-homology-detection", "zero-shot-prediction"], "description": "Exploring Evolution-aware & free protein language models as protein function predictors"}
{"name": "dbetm/handwritten-flowchart-with-cnn", "full_name": "dbetm/handwritten-flowchart-with-cnn", "topics": ["artificial-vision", "handwritten-flowcharts", "graphs", "object-detection", "convolutional-neural-networks", "flowchart2code", "deep-learning", "flowchart", "handwritten"], "description": "Recognition of handwritten flowcharts using convolutional neural networks to generate C source code and reconstructed digital flowchart."}
{"name": "nocoolsandwich/iamqa", "full_name": "nocoolsandwich/iamQA", "topics": ["question-answering", "nlp", "bert"], "description": "\u4e2d\u6587wiki\u767e\u79d1QA\u9605\u8bfb\u7406\u89e3\u95ee\u7b54\u7cfb\u7edf\uff0c\u4f7f\u7528\u4e86CCKS2016\u6570\u636e\u7684NER\u6a21\u578b\u548cCMRC2018\u7684\u9605\u8bfb\u7406\u89e3\u6a21\u578b\uff0c\u8fd8\u6709W2V\u8bcd\u5411\u91cf\u641c\u7d22,\u4f7f\u7528torchserve\u90e8\u7f72"}
{"name": "astha-chem/mvts-ano-eval", "full_name": "astha-chem/mvts-ano-eval", "topics": ["anomaly-detection", "deep-learning", "time-series"], "description": "A repository for code accompanying the manuscript 'An Evaluation of Anomaly Detection and Diagnosis in Multivariate Time Series' (published at TNNLS)"}
{"name": "clorverccy/gedloss_pytorch", "full_name": "ViEm-ccy/GEDLoss_pytorch", "topics": [], "description": "a pytorch  implementation of Google GEDLoss"}
{"name": "guangyizhangbci/eeg_riemannian", "full_name": "guangyizhangbci/EEG_Riemannian", "topics": ["eeg-analysis", "riemannian-geometry", "affective", "motor-imagery-classification", "vigilance-estimation", "deep-learning", "long-short-term-memory", "feature-engineering"], "description": "Paper Under Review"}
{"name": "cmpute/d3d", "full_name": "cmpute/d3d", "topics": ["pytorch", "3d-deep-learning", "visualization", "dataset", "object-detection", "object-tracking"], "description": "Devkit for 3D -- Some utils for 3D object detection based on Numpy and Pytorch"}
{"name": "zhangkaifang/cbam-tensorflow2.0", "full_name": "zhangkaifang/CBAM-TensorFlow2.0", "topics": ["cbam", "resnet", "tf2", "cbam-resnet", "tensorflow", "attention", "tf", "attention-mechanism"], "description": "CBAM(Convolutional Block Attention Module) implementation on TensowFlow2.0"}
{"name": "nqbinhcs/ai4vn2022-air-quality-forecasting-challenge", "full_name": "nqbinhcs/AI4VN2022-Air-Quality-Forecasting-Challenge", "topics": ["air-quality", "deep-learning", "extrapolation", "forcasting", "machine-learning", "ai4vn"], "description": "Runner-up team (2nd place) in AI4VN2022: Air Quality Forcasting Challenge "}
{"name": "samson6460/tf_keras_gradcamplusplus", "full_name": "samson6460/tf_keras_gradcamplusplus", "topics": ["tensorflow2", "tensorflow", "keras", "tensorflow-keras", "gradcam", "gradcam-plus-plus", "deep-learning", "deeplearning", "neural-network", "neural-networks"], "description": "tensorflow.keras implementation of gradcam and gradcam++"}
{"name": "darrenjkt/see-mtda", "full_name": "darrenjkt/SEE-MTDA", "topics": ["object-detection", "3d-object-detection", "autonomous-driving", "surface-completion", "unsupervised-domain-adaptation", "computer-vision", "deep-learning"], "description": "(RA-L 2022) See Eye to Eye: A Lidar-Agnostic 3D Detection Framework for Unsupervised Multi-Target Domain Adaptation."}
{"name": "yumoxu/marge", "full_name": "yumoxu/marge", "topics": ["query-focused-summarization", "summarization", "nlp", "question-answering", "generation"], "description": "Code for ACL 21: Generating Query Focused Summaries from Query-Free Resources"}
{"name": "google/qhbm-library", "full_name": "google/qhbm-library", "topics": ["quantum-computing", "tensorflow", "quantum-machine-learning", "python"], "description": "Quantum Hamiltonian-Based Models built on TensorFlow Quantum"}
{"name": "deeplabcut/deeplabcut-core", "full_name": "DeepLabCut/DeepLabCut-core", "topics": ["deeplabcut", "deep-learning", "pose-estimation", "pose-tracking", "behavior-analysis"], "description": "Headless DeepLabCut (no GUI support)"}
{"name": "mauriceqch/pcc_geo_cnn_v2", "full_name": "mauriceqch/pcc_geo_cnn_v2", "topics": ["compression", "tensorflow", "machine-learning", "deep-learning", "python", "point-cloud", "geometry"], "description": "Improved Deep Point Cloud Geometry Compression"}
{"name": "adambyerly/bmcnnwhfcs", "full_name": "AdamByerly/BMCNNwHFCs", "topics": ["homogeneous-vector-capsules", "cnn", "convolutional-neural-network", "mnist", "state-of-the-art", "capsules", "capsule-network"], "description": "The code for \"No Routing Needed Between Capsules\".  This repository contains the code used for the experiments detailed in a forthcoming paper. The paper is available pre-published at arXiv: http://arxiv.org/abs/2001.09136"}
{"name": "karnwatcharasupat/latte", "full_name": "karnwatcharasupat/latte", "topics": ["machine-learning", "python", "deep-learning"], "description": "Latte: Cross-framework Python Package for Evaluation of Latent-based Generative Models"}
{"name": "zengxianyu/co-mod-gan-pytorch", "full_name": "zengxianyu/co-mod-gan-pytorch", "topics": ["pytorch", "deep-learning", "gan", "generative-adversarial-network", "inpainting", "image-inpainting", "iclr2021", "image-completion"], "description": "pytorch implementation of the paper ``Large Scale Image Completion via Co-Modulated Generative Adversarial Networks\""}
{"name": "tensorflow/tfx-addons", "full_name": "tensorflow/tfx-addons", "topics": ["tensorflow", "tfx", "special-interest-group", "machine-learning", "mlops", "neural-network", "python"], "description": "Developers helping developers.  TFX-Addons is a collection of community projects to build new components, examples, libraries, and tools for TFX.  The projects are organized under the auspices of the special interest group, SIG TFX-Addons.  Join  the group at http://goo.gle/tfx-addons-group"}
{"name": "tuvuumass/task-transferability", "full_name": "tuvuumass/task-transferability", "topics": ["transfer-learning", "natural-language-processing", "bert", "task-transferability", "nlp-tasks", "emnlp2020"], "description": "Data and code for our paper \"Exploring and Predicting Transferability across NLP Tasks\", to appear at EMNLP 2020. "}
{"name": "alexklwong/learning-topology-synthetic-data", "full_name": "alexklwong/learning-topology-synthetic-data", "topics": ["machine-learning", "computer-vision", "deep-learning", "tensorflow", "depth", "depth-estimation", "depth-completion", "unsupervised-learning", "sensor-fusion", "3d-vision", "3d-reconstruction", "kitti", "void", "self-supervised-learning", "ral", "icra", "ucla"], "description": "Tensorflow implementation of Learning Topology from Synthetic Data for Unsupervised Depth Completion (RAL 2021 & ICRA 2021)"}
{"name": "anisha2102/docvqa", "full_name": "anisha2102/docvqa", "topics": ["visual-question-answering", "computer-vision", "deep-learning", "document-analysis"], "description": "Document Visual Question Answering"}
{"name": "deanhazineh/dflat", "full_name": "DeanHazineh/DFlat", "topics": ["autodifferentiation", "end-to-end", "fourier-optics", "metasurface", "tensorflow", "diffraction", "metalens"], "description": "D-Flat is a forward and inverse design framework for flat optics, specially geared to the design of metasurface optics for imaging and sensing."}
{"name": "shanesmiskol/konverter", "full_name": "sshane/Konverter", "topics": ["keras-tensorflow", "neural-networks", "model-converter", "keras", "python", "tensorflow"], "description": "Convert simple Keras models to pure Python \ud83d\udc0d+ NumPy"}
{"name": "peteryux/pcdarts-tf2", "full_name": "peteryuX/pcdarts-tf2", "topics": ["neural-architecture-search", "darts", "pc-darts", "pcdarts", "tensorflow", "tf2", "tensorflow2", "cifar10", "cifar-10", "iclr2020"], "description": "PC-DARTS (PC-DARTS: Partial Channel Connections for Memory-Efficient Differentiable Architecture Search, published in ICLR 2020) implemented in Tensorflow 2.0+. This is an unofficial implementation."}
{"name": "retarfi/language-pretraining", "full_name": "retarfi/language-pretraining", "topics": ["nlp", "natural-language-processing", "pytorch", "transformer", "implementation", "language-models", "language-model", "bert", "electra"], "description": "Pre-training Language Models for Japanese"}
{"name": "keonlee9420/robust_fine_grained_prosody_control", "full_name": "keonlee9420/Robust_Fine_Grained_Prosody_Control", "topics": ["speech-synthesis", "pytorch", "robust", "prosody", "tts", "expressive-speech-synthesis", "expressive-tts", "text-to-speech", "controllable-tts", "controllable-speech-synthesis"], "description": "PyTorch Implementation of Robust and fine-grained prosody control of end-to-end speech synthesis"}
{"name": "shivangi-aneja/cosmos", "full_name": "sanonymous22/COSMOS", "topics": ["dataset", "misinformation", "cheapfakes", "fake-news", "deepfakes", "deepfake-detection", "computer-vision", "deep-learning", "pytorch", "machine-learning", "nlp"], "description": "COSMOS: Catching Out-of-Context Misinformation using Self Supervised Learning (AAAI 2023)"}
{"name": "xindongzhang/simpleir", "full_name": "xindongzhang/SimpleIR", "topics": ["pytorch", "super-resolution", "efficient", "mobile"], "description": "A Simple framework for image restoration, it includes ECBSR, ELAN and other SOTAs."}
{"name": "dayyass/muse_as_service", "full_name": "dayyass/muse-as-service", "topics": ["python", "nlp", "embeddings", "universal-sentence-encoder", "api", "rest-api", "text", "sentence-embeddings", "machine-learning", "deep-learning", "bert", "tensorflow", "service", "web-server", "flask", "gunicorn", "docker", "hacktoberfest"], "description": "REST API for sentence tokenization and embedding using Multilingual Universal Sentence Encoder."}
{"name": "debeshjha/resunetplusplus-with-crf-and-tta", "full_name": "DebeshJha/ResUNetPlusPlus-with-CRF-and-TTA", "topics": ["semantic-segmentation", "convolutional-neural-networks", "computer-vision", "image-segmentation", "unet-image-segmentation", "deep-learning", "unet", "resunet", "resunet-architecture", "medical-imaging", "pytorch", "pytorch-implementation", "segmentation", "tensorflow", "image-segmantation"], "description": "ResUNet++, CRF, and TTA  for segmentation of medical images  (IEEE JBIHI)"}
{"name": "marload/gans-tensorflow2", "full_name": "marload/GANs-TensorFlow2", "topics": ["tensorflow2", "deeplearning", "gan", "dcgan", "lsgan", "wgan", "wgan-gp", "ssgan", "generative-adversarial-network", "tf2", "tf", "tensorflow"], "description": "\ud83d\ude80 Variants of GANs most easily implemented as TensorFlow2. GAN, DCGAN, LSGAN, WGAN, WGAN-GP, DRAGAN, ETC..."}
{"name": "naszilla/nas-encodings", "full_name": "naszilla/nas-encodings", "topics": ["automl", "nas", "nasbench", "deep-learning", "automl-algorithms", "automl-experiments", "neural-architecture-search", "tensorflow", "pytorch"], "description": "Encodings for neural architecture search"}
{"name": "sebastian-sz/resnet-rs-keras", "full_name": "sebastian-sz/resnet-rs-keras", "topics": ["keras", "tensorflow", "tensorflow2", "tensorflow-models", "tensorflow-lite", "onnx", "deep-learning", "deep-neural-networks", "image-classification"], "description": "ResNet-RS models rewritten in Tensorflow / Keras functional API."}
{"name": "zzdyyy/patho-gan", "full_name": "zzdyyy/Patho-GAN", "topics": ["deep-learning", "gan", "medical-image-processing", "data-augmentation", "medical-imaging", "retinal-images", "lesion-segmentation", "lesion-detection", "fundus", "microaneurysm-detection", "diabetic-retinopathy", "exudates", "interpretability", "image-synthesis", "explainable-ai"], "description": "Patho-GAN: interpretation + medical data augmentation. Code for paper work \"Explainable Diabetic Retinopathy Detection and Retinal Image Generation\""}
{"name": "gvalvano/multiscale-adversarial-attention-gates", "full_name": "gvalvano/multiscale-adversarial-attention-gates", "topics": ["cnn", "deep-learning", "weakly-supervised-learning", "semantic-segmentation", "segmentation", "gan", "generative-adversarial-network", "attention"], "description": "Code for the paper: Valvano G. et al. (2021), Learning to Segment from Scribbles using Multi-scale Adversarial Attention Gates  "}
{"name": "jgkwak95/au-gan", "full_name": "jgkwak95/AU-GAN", "topics": ["deep-learning", "generative-adversarial-network", "gan", "tensorflow", "adverse-weather-condition", "image-to-image-translation", "python", "night-to-day", "weather-translation"], "description": "Official Tensorflow implementation for \"Adverse Weather Image Translation with Asymmetric and Uncertainty aware GAN\", BMVC2021"}
{"name": "markusrosen/keras-efficientnet-regression", "full_name": "MarkusRosen/keras-efficientnet-regression", "topics": ["deep-learning", "tutorial", "keras", "transfer-learning", "tensorflow2"], "description": "Apply transfer learning of EfficientNet to a custom regression problem with Keras and TensorFlow 2."}
{"name": "habout632/stargan2", "full_name": "habout632/StarGAN2", "topics": [], "description": "Unofficial Pytorch version StarGAN v2"}
{"name": "tatevkaren/recurrent-neural-network-pricing-model", "full_name": "TatevKaren/recurrent-neural-network-pricing-model", "topics": ["deep-learning", "recurrent-neural-networks", "lstm", "tensorflow", "keras", "stock-price-prediction", "scikit-learn", "pandas", "machine-learning", "google", "bitcoin", "bitcoin-price", "google-stock-prices", "stock-prices", "price-prediction", "case-study-paper", "rnn-model"], "description": "Price Prediction Case Study predicting the Bitcoin price and the Google stock price using Deep Learning, RNN with LSTM layers with TensorFlow and Keras in Python. (Includes: Data, Case Study Paper, Code)"}
{"name": "kaylode/theseus", "full_name": "kaylode/theseus", "topics": ["template", "pytorch", "classification", "segmentation", "computer-vision", "natural-language-processing", "object-detection", "structured-data"], "description": "General template for most Pytorch projects"}
{"name": "homebrewnlp/homebrewnlp-jax", "full_name": "HomebrewNLP/Olmax", "topics": ["jax", "tpu", "attention", "transformer", "gpt", "hpc"], "description": "HomebrewNLP in JAX flavour for maintable TPU-Training"}
{"name": "iteal/wormpose", "full_name": "iteal/wormpose", "topics": ["python", "machine-learning", "deep-learning", "pose-estimation", "animal-pose-estimation", "tensorflow", "tensorflow2", "c-elegans", "worm", "synthetic-dataset-generation", "synthetic-images", "neural-network", "tierpsy", "behavior-analysis", "elegans", "wormpose", "computer-vision"], "description": "WormPose: Image synthesis and convolutional networks for pose estimation in C. elegans"}
{"name": "taufikxu/triple-gan", "full_name": "taufikxu/Triple-GAN", "topics": [], "description": "Pytorch for Triple-GAN"}
{"name": "ki-ljl/fedavg-numpy-pytorch-tff", "full_name": "ki-ljl/FedAvg-numpy-pytorch-tff", "topics": ["federated-learning", "fedavg", "numpy", "pytorch", "tff"], "description": "Three implementations of FedAvg: numpy, pytorch and tensorflow federated."}
{"name": "bborja/wasr_network", "full_name": "bborja/wasr_network", "topics": ["semantic", "segmentation", "convolutional-neural-networks", "neural-network", "deep-neural-networks", "deep-learning", "computer-vision", "semantic-segmentation", "autonomous-navigation", "autonomous-vehicles", "unmanned-surface-vehicles", "marine", "maritime", "robotic-boats", "visual-object-detection", "water-obstacle-separation", "imu", "water-edge", "icra2020", "tensorflow"], "description": "WaSR Segmentation Network for Unmanned Surface Vehicles v0.5"}
{"name": "qxde01/gastric-cancer-detect", "full_name": "qxde01/gastric-cancer-detect", "topics": ["unet", "tf2", "u2net", "unet3plus", "keras"], "description": "\u80c3\u764c\u6076\u6027\u75c5\u53d8\u7ec4\u7ec7\u68c0\u6d4b"}
{"name": "thunlp/cokebert", "full_name": "thunlp/CokeBERT", "topics": ["bert", "knowledge-graph", "nlp", "pretrained-language-model", "pytorch"], "description": "CokeBERT: Contextual Knowledge Selection and Embedding towards Enhanced Pre-Trained Language Models"}
{"name": "haibo-qiu/synface", "full_name": "haibo-qiu/SynFace", "topics": ["pytorch", "face-recognition", "synthetic-data"], "description": "[ICCV 2021] SynFace: Face Recognition with Synthetic Data"}
{"name": "aiaudit-org/raw2logit", "full_name": "aiaudit-org/raw2logit", "topics": ["distribution", "shift", "drift", "camera", "optics", "machine-learning", "deep-learning", "deep-neural-networks", "robustness", "pytorch"], "description": "In order to control processing-induced dataset drift we require two ingredients: raw sensor data and an image processing model. This code repository contains the materials for the second ingredient, the image processing models, as well as scripts to load data and run experiments. https://arxiv.org/abs/2211.02578"}
{"name": "aboerzel/german_license_plate_recognition", "full_name": "aboerzel/German_License_Plate_Recognition", "topics": ["machine-learning", "deep-learning", "tensorflow2", "udacity-machine-learning-nanodegree", "computer-vision", "android-app", "capstone-project", "tflite", "number-plate-recognition", "plate-detection", "detection-api", "udacity"], "description": "Android camera app for automatic recognition of German license plates using TensorFlow / TensorFlow Lite 2.4.1"}
{"name": "thomasmbury/deep-early-warnings-pnas", "full_name": "ThomasMBury/deep-early-warnings-pnas", "topics": ["critical-transitions", "deep-learning", "early-warning-signals", "dynamical-systems", "bifurcation", "machine-learning"], "description": "Repository to accompany the publication 'Deep learning for early warning signals of tipping points', PNAS (2021)"}
{"name": "wxdang/mscred", "full_name": "wxdang/MSCRED", "topics": [], "description": "tensorflow implement the paper A Deep Neural Network for Unsupervised Anomaly Detection and Diagnosis in Multivariate Time Series Data "}
{"name": "wangermeng2021/scaled-yolov4-tensorflow2", "full_name": "wangermeng2021/Scaled-YOLOv4-tensorflow2", "topics": ["tensorflow2", "scaledyolov4", "yolov4", "object-detection", "yolo", "tf2", "tensorflow", "tensorflow-serving"], "description": "A Tensorflow2.x implementation of Scaled-YOLOv4 as described in Scaled-YOLOv4: Scaling Cross Stage Partial Network"}
{"name": "cognizant-ai-labs/autoinit", "full_name": "cognizant-ai-labs/autoinit", "topics": ["deep-learning", "python", "tensorflow", "weight-initialization"], "description": "AutoInit: Analytic Signal-Preserving Weight Initialization for Neural Networks"}
{"name": "cps-tuwien/racing_dreamer", "full_name": "CPS-TUWien/racing_dreamer", "topics": ["model-based-reinforcement-learning", "autonomous-driving", "deep-learning", "deep-reinforcement-learning", "reinforcement-learning"], "description": "Latent Imagination Facilitates Zero-Shot Transfer in Autonomous Racing"}
{"name": "yangrui2015/sparse-reward-algorithms", "full_name": "YangRui2015/Sparse-Reward-Algorithms", "topics": ["sparse-reward-algorithms", "hindsight-experience-replay", "ddpg", "curriculum-learning", "imitation-learning", "tensorflow"], "description": "Implement many Sparse Reward algorithms in Gym Fetch environment"}
{"name": "tuvovan/ml_in_production", "full_name": "tuvovan/ml_in_production", "topics": ["mlops", "machine-learning", "deep-learning", "docker", "nginx", "uwsgi-nginx-docker", "tfserving", "fastapi", "rest-api"], "description": "A set of demo of deploying a Machine Learning Model in production using various methods"}
{"name": "getcontrol/kyc-train-model", "full_name": "getcontrol/KYC-train-model", "topics": ["midv-500", "python", "tensorflow", "tensorflow-examples", "tensorflow-models", "kyc"], "description": "Train TensorFlow model for KYC"}
{"name": "bubbliiiing/yolov5-keras", "full_name": "bubbliiiing/yolov5-keras", "topics": [], "description": "\u8fd9\u662f\u4e00\u4e2aYoloV5-keras\u7684\u6e90\u7801\uff0c\u53ef\u4ee5\u7528\u4e8e\u8bad\u7ec3\u81ea\u5df1\u7684\u6a21\u578b\u3002"}
{"name": "nguyenvo09/eacl2021", "full_name": "nguyenvo09/EACL2021", "topics": ["fact-checking", "fake-news-detection", "pytorch", "nlp", "fact-verification", "eacl2021"], "description": "This is the PyTorch code + data repository for paper \"Hierarchical Multi-head Attentive Network for Evidence-aware Fake News Detection\", EACL 2021"}
{"name": "610265158/face_landmark_pytorch", "full_name": "610265158/face_landmark_pytorch", "topics": [], "description": "pytorch face_landmark"}
{"name": "incognite-lab/mygym", "full_name": "incognite-lab/myGym", "topics": ["reinforcement-learning", "multi-step-rl", "pick-and-place", "robotic-manipulation", "robotics", "deep-learning", "simulator", "real-time", "robotics-simulation", "simulators", "vision", "multi-network", "semantic-segmentation"], "description": "myGym enables fast prototyping of RL in the area of robotic manipulation and navigation.You can train different robots, in several environments on various tasks. There is automatic evaluation and benchmark tool. From version 2.1 there is support for multi-step tasks, multi-reward training and multi-network architectures."}
{"name": "umutkcbs/hope-autonomous-driving", "full_name": "umutkcbs/hope-autonomous-driving", "topics": ["python", "computer-vision", "keras", "supervised-learning", "euro-truck-simulator-2", "tensorflow"], "description": "Autonomous Driving project for Euro Truck Simulator 2"}
{"name": "keonlee9420/comprehensive-tacotron2", "full_name": "keonlee9420/Comprehensive-Tacotron2", "topics": ["text-to-speech", "tts", "tacotron", "tacotron2", "pytorch", "speech-synthesis", "autoregressive", "single-speaker", "multi-speaker", "robustness", "efficiency", "comprehensive", "neural-tts", "mel-gan", "hifi-gan", "reduction-factor", "diagonal-guided-attention", "deep-learning"], "description": "PyTorch Implementation of Google's Natural TTS Synthesis by Conditioning WaveNet on Mel Spectrogram Predictions. This implementation supports both single-, multi-speaker TTS and several techniques to enforce the robustness and efficiency of the model."}
{"name": "david8862/tf-keras-deeplabv3p-model-set", "full_name": "david8862/tf-keras-deeplabv3p-model-set", "topics": [], "description": "end-to-end DeepLab V3+ semantic segmentation pipeline, implemented with tf.keras"}
{"name": "abishekvashok/rep-counter", "full_name": "abishekvashok/Rep-Counter", "topics": ["tensorflow", "deep-learning", "machine-learning", "repetition", "repetion-counter", "artificial-intelligence", "neural-networks", "rnn", "rnn-tensorflow", "posenet"], "description": "AI Exercise Rep Counter based on Google's Human Pose Estimation Library (Posenet)"}
{"name": "lucko515/cnn-raccoon", "full_name": "lucko515/cnn-raccoon", "topics": ["convolutional-neural-networks", "deep-learning", "explainable-ml", "tensorflow", "keras", "pytorch", "dashboards", "visualization-tools"], "description": "Create interactive dashboards for your Convolutional Neural Networks with a single line of code!"}
{"name": "mps-net/mps-net_release", "full_name": "MPS-Net/MPS-Net_release", "topics": ["3d-human-motion", "3d-human-shape-and-pose-estimation", "cvpr2022", "pytorch"], "description": "Official implementation of CVPR2022 paper \"Capturing Humans in Motion: Temporal-Attentive 3D Human Pose and Shape Estimation from Monocular Video\""}
{"name": "chang-chia-chi/tracknet-badminton-tracking-tensorflow2", "full_name": "Chang-Chia-Chi/TrackNet-Badminton-Tracking-tensorflow2", "topics": ["tensorflow2", "image-segmentation", "object-tracking", "resnet", "full-convolutional-networks", "badminton"], "description": "TrackNet for badminton tracking using tensorflow2"}
{"name": "ruhyadi/yolo3d", "full_name": "ruhyadi/YOLO3D", "topics": ["yolo", "self-driving-car", "3d-object-detection", "pytorch", "deep-learning"], "description": "YOLO 3D Object Detection for Autonomous Driving Vehicle"}
{"name": "disi-unibo-nlp/nlg-metricverse", "full_name": "disi-unibo-nlp/nlg-metricverse", "topics": ["natural-language-processing", "natural-language-generation", "metrics", "python", "pytorch", "language-models", "visualization", "nlg-evaluation"], "description": "[COLING22] An End-to-End Library for Evaluating Natural Language Generation"}
{"name": "zyjacya-in-love/pedestrian-detection-on-yolov3_research-and-app", "full_name": "Zyjacya-In-love/Pedestrian-Detection-on-YOLOv3_Research-and-APP", "topics": ["keras-train", "model-evaluation", "data-convert", "detection", "yolov3", "model-weights", "flask"], "description": ":mortar_board: 2020 Undergraduate Graduation Project in Jiangnan University ALL codes including Data-convert, keras-Train, model-Evaluate and Web-App"}
{"name": "kamlesh364/mask-rcnn-tf2.7.0-keras2.7.0", "full_name": "Kamlesh364/Mask-RCNN-TF2.7.0-keras2.7.0", "topics": ["artificial-intelligence", "computer-vision", "deep-learning", "image-processing", "image-segmentation", "instance-segmentation", "object-detection", "semantic-segmentation", "tensorflow"], "description": "Mask R-CNN for object detection and instance segmentation on Keras==2.7.0 and TensorFlow==2.7.0"}
{"name": "mrtkp9993/deeplearningexamples", "full_name": "mrtkp9993/DeepLearningExamples", "topics": ["deep-learning", "deep-neural-networks", "machine-learning", "artificial-intelligence", "data-science", "regression", "classification", "python3", "dense-neural-network", "convolutional-neural-networks", "deep-learning-example", "deeplearningexamples", "colab", "python", "tensorflow", "keras"], "description": "Deep learning examples with Python and Tensorflow & Keras."}
{"name": "serre-lab/harmonization", "full_name": "serre-lab/Harmonization", "topics": ["deep-learning", "explainability", "explainable-ai", "interpretability", "machine-learning", "neuroscience"], "description": "\ud83d\udc4b Aligning Human & Machine Vision using explainability"}
{"name": "sharifamit/vtgan", "full_name": "SharifAmit/VTGAN", "topics": ["fluorescein-angiography", "generative-adversarial-network", "fundus-image-analysis", "vision-transformers", "vision-transformer", "semi-supervised-learning", "disease-prediction", "diabetic-retinopathy-detection"], "description": "[ICCV'21] [Tensorflow] Semi-supervised Retinal Image Synthesis and Disease Prediction using Vision Transformers"}
{"name": "erfanmhi/deep-reinforcement-learning-cs285-pytorch", "full_name": "erfanMhi/Deep-Reinforcement-Learning-CS285-Pytorch", "topics": ["pytorch", "reinforcement-learning", "deep-learning", "berkeley", "python", "deep-reinforcement-learning", "neural-networks", "openai-gym", "mujoco", "deep-q-learning", "policy-gradient", "actor-critic-algorithm", "model-based-rl", "model-free-rl"], "description": "Solutions of assignments of Deep Reinforcement Learning course presented by the University of California, Berkeley (CS285) in Pytorch framework"}
{"name": "karimkohel/potato", "full_name": "karimkohel/potato", "topics": ["ai", "keras", "pyttsx3", "sockets", "pyqt5-desktop-application", "tensorflow2", "nltk"], "description": "Centralized AI powered voice activated virtual assistant as a Networking project"}
{"name": "rmlin/comhe", "full_name": "rmlin/CoMHE", "topics": ["mhe", "hyperspherical", "energy", "sphereface", "regularization", "neural-network", "deep-learning", "comhe", "cvpr2020"], "description": "Implementation for <Regularizing Neural Networks via Minimizing Hyperspherical Energy> in CVPR'20."}
{"name": "shaoshengsong/quarkdet", "full_name": "shaoshengsong/quarkdet", "topics": ["object-detection", "efficientdet", "ghostnet", "mobilenetv3", "shufflenetv2", "fpn", "pan", "bifpn", "quarkdet", "nanodet", "fcos", "mosaic", "pytorch"], "description": "QuarkDet  lightweight object detection in PyTorch .Real-Time Object Detection on Mobile Devices."}
{"name": "thinklab-sjtu/dcl_retinanet_tensorflow", "full_name": "Thinklab-SJTU/DCL_RetinaNet_Tensorflow", "topics": ["object-detection", "tensorflow", "remote-sensing"], "description": "Code for CVPR 2021 paper: Dense Label Encoding for Boundary Discontinuity Free Rotation Detection"}
{"name": "zjuter0126/resnest_in_tensorflow2.2", "full_name": "Holidays1999/ResNest_in_tensorflow2.2", "topics": [], "description": "ResNest_in_tensorflow.2.2"}
{"name": "mediatek-neuropilot/mai22-real-time-video-sr", "full_name": "MediaTek-NeuroPilot/mai22-real-time-video-sr", "topics": ["computer-vision", "cvpr2022", "deep-learning", "low-level-vision", "mediatek", "python", "tensorflow-lite", "tensorflow2", "video-super-resolution", "eccv2022"], "description": "The official codebase for the Real-Time Video Super-Resolution Challenge in Mobile AI (MAI) Workshop@ CVPR 2022 & Advances in Image Manipulation (AIM) Workshop @ ECCV 2022  "}
{"name": "yingkaisha/keras-vision-transformer", "full_name": "yingkaisha/keras-vision-transformer", "topics": ["transformer", "vision-transformer", "tensorflow", "keras", "swinunet"], "description": "The Tensorflow, Keras implementation of Swin-Transformer and Swin-UNET"}
{"name": "neclow/serab", "full_name": "Neclow/SERAB", "topics": ["benchmark", "byol", "byol-a", "deep-learning", "emotion-recognition", "pytorch", "scikit-learn", "self-supervised-learning", "speech-processing", "icassp"], "description": "SERAB: a multi-lingual benchmark for speech emotion recognition"}
{"name": "yigitgunduc/spectrum", "full_name": "YigitGunduc/Spectrum", "topics": ["lstm", "keras", "tensorflow", "text-generation", "languange-model", "nlp", "machine-learning", "deep-learning", "neural-network", "ai", "python3", "flask", "tensorflow2"], "description": "Spectrum is an AI that uses machine learning to generate Rap song lyrics"}
{"name": "smaranjitghose/img_ai_app_boilerplate", "full_name": "smaranjitghose/img_ai_app_boilerplate", "topics": ["streamlit", "webapp", "python", "deeplearning", "tensorflow", "keras", "convolutional-neural-networks", "artificial-intelligence", "heroku", "slop20", "slop", "hacktoberfest", "heroku-deployment", "gcp", "aws-ec2", "aws", "azure", "digitalocean", "swoc2021"], "description": "An image classification app boilerplate to serve your deep learning models asap!"}
{"name": "manhph2211/bkai-challenge-vietnamese-ocr", "full_name": "manhph2211/BKAI-Challenge-Vietnamese-OCR", "topics": ["text-detection", "dbnet", "dbnetplus", "transocr", "vietnamese-ocr", "ensemble-text-detection", "scene-text-generator", "bkai", "text-recognition", "pytorch", "ocr", "scene-text-detection-recognition"], "description": "This is our solution dealing with BKAI challenge :smile: "}
{"name": "jtchen0528/pcl-i2g", "full_name": "jtchen0528/PCL-I2G", "topics": ["deepfake-detection", "consistency", "self-supervision", "pytorch", "deepfakes", "faceforensics"], "description": "Unofficial Implementation: Learning Self-Consistency for Deepfake Detection"}
{"name": "zhaofang0627/hpbtt", "full_name": "zhaofang0627/HPBTT", "topics": [], "description": "HPBTT-Pytorch"}
{"name": "anyleopeace/durleca", "full_name": "AnyLeoPeace/DURLECA", "topics": ["reinforcement-learning", "deep-learning"], "description": "The released code for DUal-objective Reinforcement-Learning Epidemic Control Agent."}
{"name": "codingchaozhang/yolov3_keras", "full_name": "CodingChaozhang/yolov3_keras", "topics": [], "description": "yolo3-keras\u7684\u6e90\u7801"}
{"name": "by256/icsg3d", "full_name": "by256/icsg3d", "topics": ["computational-physics", "computational-chemistry", "cheminformatics", "representation-learning", "deep-learning", "crystallography"], "description": "3-D Inorganic Crystal Structure Generation and Property Prediction via Representation Learning (JCIM 2020)"}
{"name": "lmbxmu/supervit", "full_name": "lmbxmu/SuperViT", "topics": [], "description": "Official Pytorch implementation of Super Vision Transformer"}
{"name": "pelletierlab/noise2fast", "full_name": "pelletierlab/Noise2Fast", "topics": ["deep-learning", "image", "image-denoising", "image-processing", "self-supervised-learning"], "description": null}
{"name": "google-research/dataclass_array", "full_name": "google-research/dataclass_array", "topics": ["dataclass", "dataclasses", "jax", "numpy", "tensorflow"], "description": "Dataclasses which can be manipulated as numpy arrays (with batching, reshape, slicing,...)"}
{"name": "cosmoquester/transformers-bart-pretrain", "full_name": "cosmoquester/transformers-bart-pretrain", "topics": ["bart", "tensorflow", "pretraining"], "description": "Script to pre-train hugginface transformers BART with Tensorflow 2"}
{"name": "yuuho/stylegans-pytorch", "full_name": "yuuho/stylegans-pytorch", "topics": ["pytorch", "stylegan2", "stylegan"], "description": "PyTorch StyleGAN2, StyleGAN\u306e\u518d\u73fe\u5b9f\u88c5"}
{"name": "nahidebrahimian/cars-detection-using-yolov5", "full_name": "NahidEbrahimian/Cars-Detection-using-Yolov5", "topics": ["detection", "pytorch", "yolov5"], "description": "Iranian Cars Detection using Yolov5s, PyTorch "}
{"name": "twni2016/f-irl", "full_name": "twni2016/f-IRL", "topics": ["imitation-learning", "deep-reinforcement-learning", "inverse-reinforcement-learning", "maxent", "pytorch", "mujoco"], "description": "Inverse Reinforcement Learning via State Marginal Matching - CoRL 2020"}
{"name": "hippylib/hippyflow", "full_name": "hippylib/hippyflow", "topics": ["neural-networks", "dimension-reduction", "dimensionality-reduction", "reduced-order-surrogate-model", "reduced-order-modeling", "reduced-basis", "active-subspace", "karhunen-loeve", "proper-orthogonal-decomposition", "parametric-pde", "parametric-pdes", "surrogate-models", "deep-learning"], "description": "Dimension reduced surrogate construction for parametric PDE maps"}
{"name": "logintelligence/logadempirical", "full_name": "LogIntelligence/LogADEmpirical", "topics": ["deep-learning", "log-analysis", "log-based-anomaly-detection"], "description": "Log-based Anomaly Detection with Deep Learning: How Far Are We? (ICSE 2022, Technical Track)"}
{"name": "aryaaftab/light-sernet", "full_name": "AryaAftab/LIGHT-SERNET", "topics": ["speech-emotion-recognition", "lightweight", "fully-convolutional-networks", "tflite", "deep-learning", "tensorflow2"], "description": "Light-SERNet: A lightweight fully convolutional neural network for speech emotion recognition "}
{"name": "mdciri/vox2vox", "full_name": "mdciri/Vox2Vox", "topics": ["brain-tumour-segmentation", "tensorflow", "3d-gan", "medical-image-analysis", "deep-learning", "machine-learning", "segmentation", "image-segmentation", "python", "keras-tensorflow"], "description": "Vox2Vox: 3D GAN for image segmentation using tensorflow-keras"}
{"name": "joennlae/halutmatmul", "full_name": "joennlae/halutmatmul", "topics": ["machine-learning", "matrix-multiplication", "pytorch", "amm", "cuda", "cuda-kernels"], "description": "Hashed Lookup Table based Matrix Multiplication (halutmatmul) built on MADDness/bolt"}
{"name": "zuxinqi/nlp_tasks", "full_name": "zuxinqi/nlp_tasks", "topics": ["tensorflow", "nlp"], "description": "nlp\u57fa\u7840\u4efb\u52a1"}
{"name": "ximilar-com/tf-image", "full_name": "Ximilar-com/tf-image", "topics": ["tensorflow", "computer-vision", "image-augmentation", "image-processing", "python", "tensorflow2", "machine-learning"], "description": "TensorFlow2+ graph image augmentation library optimized for tf.data.Dataset."}
{"name": "youmebangbang/tts-dataset-tools", "full_name": "youmebangbang/TTS-dataset-tools", "topics": ["google-speech", "deep-learning", "deepvoice", "aeneas", "tts"], "description": "Automatically generates TTS dataset using audio and associated text. Make cuts under a custom length. Uses Google Speech to text API to perform diarization and transcription or aeneas to force align text to audio."}
{"name": "audreycui/relighting", "full_name": "audreycui/relighting", "topics": ["computational-photography", "computer-vision", "deep-learning", "gans", "lighting", "research"], "description": "Local Relighting of Real Scenes"}
{"name": "aryan-jadon/regression-loss-functions-in-time-series-forecasting-tensorflow", "full_name": "aryan-jadon/Regression-Loss-Functions-in-Time-Series-Forecasting-Tensorflow", "topics": ["deep-learning", "forecasting", "keras", "python", "tensorflow", "time-series", "time-series-forecasting", "transformers", "loss-functions", "machine-learning"], "description": "This repository contains the implementation of paper Temporal Fusion Transformers for Interpretable  Multi-horizon Time Series Forecasting with different loss functions in Tensorflow.  We have compared 14 regression loss functions performance on 4 different datasets. "}
{"name": "younggyoseo/cadm", "full_name": "younggyoseo/CaDM", "topics": ["reinforcement-learning", "rl", "deep-learning", "mujoco", "codebase", "model-based", "deep-reinforcement-learning", "ppo", "deep-learning-algorithms"], "description": "CaDM: Context-aware Dynamics Model for Generalization in Model-based Reinforcement Learning"}
{"name": "bubbliiiing/srgan-keras", "full_name": "bubbliiiing/srgan-keras", "topics": [], "description": "\u8fd9\u662f\u4e00\u4e2asrgan-keras\u7684\u6e90\u7801\uff0c\u53ef\u4ee5\u7528\u4e8e\u8bad\u7ec3\u81ea\u5df1\u7684\u6a21\u578b\u3002"}
{"name": "saminens/medi-coqa", "full_name": "saminens/Medi-CoQA", "topics": ["conversational-ai", "pytorch", "question-answering", "dockerfile", "coqa", "squad", "albert", "clinicalbert", "bert"], "description": "Conversational Question Answering on Clinical Text"}
{"name": "bbquercus/deepblink", "full_name": "BBQuercus/deepBlink", "topics": ["deep-learning", "blob-detection", "python", "diffraction-limited-spots", "spot-detection", "publication"], "description": "Threshold independent detection and localization of diffraction-limited spots."}
{"name": "chenchongthu/jnskr", "full_name": "chenchongthu/JNSKR", "topics": ["recommender-system", "neural-network", "efficient-algorithm", "non-sampling"], "description": "This is our implementation of JNSKR: Jointly Non-Sampling Learning for Knowledge Graph Enhanced Recommendation (SIGIR 2020)"}
{"name": "flaviagiammarino/deep-tcn-tensorflow", "full_name": "flaviagiammarino/deep-tcn-tensorflow", "topics": ["python", "deep-learning", "tensorflow", "temporal-convolutional-networks", "time-series-forecasting", "machine-learning"], "description": "TensorFlow implementation of DeepTCN model for probabilistic time series forecasting with temporal convolutional networks."}
{"name": "bangoc123/transformer", "full_name": "bangoc123/transformer", "topics": ["transformer", "tensorflow2", "machine-translation"], "description": "Build English-Vietnamese machine translation with ProtonX Transformer. :D"}
{"name": "junqiangchen/tn-scui2020-challenge", "full_name": "junqiangchen/TN-SCUI2020-Challenge", "topics": ["vnet2d", "python3", "tensorflow", "segmentation", "classification", "nodule", "challenge-project", "attention-mechanism", "attentiongatedmodel"], "description": "TN-SCUI2020-Challenge"}
{"name": "wkhademi/imageenhancement", "full_name": "wkhademi/ImageEnhancement", "topics": ["image-enhancement", "cyclegan", "deshadownet", "enlightengan", "tensorflow", "generative-adversarial-network", "deep-learning", "srgan", "shadow-removal", "super-resolution"], "description": "Various models for handling underexposure, overexposure, super-resolution, shadow removal, etc."}
{"name": "kochlisgit/prophitbet-soccer-bets-predictor", "full_name": "kochlisGit/ProphitBet-Soccer-Bets-Predictor", "topics": ["soccer", "statistics", "feature-analysis", "deep-neural-networks", "feature-importance", "imbalanced-learning", "interpretability-methods", "machine-learning-algorithms", "neural-network", "random-forest", "soccer-betting", "soccer-matches", "football-data", "predictions", "upcoming-games", "imbalanced-learn", "data-visualization", "pandas-dataframe", "seaborn", "optuna"], "description": "ProphitBet is a Machine Learning Soccer Bet prediction application. It analyzes the form of teams, computes match statistics and predicts the outcomes of a match using Advanced Machine Learning (ML) methods. The supported algorithms in this application are Neural Networks, Random Forests & Ensembl Models."}
{"name": "mrrobot2211/pytorch-deep-photo-enhancer", "full_name": "MrRobot2211/pytorch-deep-photo-enhancer", "topics": ["deep-photo-enhancer", "pytorch", "gans"], "description": "pytorch implementation of deep photo enhancer"}
{"name": "mascerade/supervised-product-matching", "full_name": "Mascerade/supervised-product-matching", "topics": ["python", "machine-learning", "neural-network", "product-matching", "bert", "pytorch", "nlp", "natural-language-processing", "transformer", "characterbert"], "description": "\u2696\ufe0f Neural network for product matching, aka classifying whether two product titles represent the same entity"}
{"name": "guoyi0/alphafive", "full_name": "GuoYi0/alphaFive", "topics": ["alphago", "alphago-zero", "alphazero", "gomoku", "reinforcement-learning", "tensorflow", "gobang"], "description": "alphaGo\u7248\u672c\u7684\u4e94\u5b50\u68cb(gobang, gomoku)"}
{"name": "developers-cosmos/covid-race-game", "full_name": "developers-cosmos/COVID-Race-Game", "topics": ["artificial-intelligence", "pygame", "deep-learning", "covid-19", "python-game-development", "game", "covid-race-game", "2d-game"], "description": "A Game is developed with pygame and AI where the user can control the actions through his hands (gestures)"}
{"name": "atrcheema/dl4seq", "full_name": "AtrCheema/AI4Water", "topics": ["machine-learning", "deep-learning", "tabular-data", "time-series"], "description": "framework for developing machine (and deep) learning models for structured data"}
{"name": "easylearn-fmri/easylearn_dev", "full_name": "easylearn-fmri/easylearn_dev", "topics": ["resting-state-fmri", "machine-learning", "radiomics", "deep-learning", "neuroimaging", "graphic-user-interface"], "description": "Easylearn is designed for machine learning mainly in resting-state fMRI, radiomics and other fields (such as EEG). Easylearn is built on top of scikit-learn, pytorch and other packages. Easylearn can assist doctors and researchers who have limited coding experience to easily realize machine learning, e.g., (MR/CT/PET/EEG)imaging-marker- or other biomarker-based disease diagnosis and prediction, treatment response prediction,  disease subtyping, dimensional decoding for transdiagnostic psychiatric diseases or other diseases, disease mechanism exploration and etc.  "}
{"name": "bm-k/kosentencebert_sktbert", "full_name": "BM-K/KoSentenceBERT-SKT", "topics": ["sentence-bert", "sentence-similarity", "natural-language-processing", "korean-sentence-bert"], "description": "Sentence Embeddings using Siamese SKT KoBERT-Networks"}
{"name": "shreyas-jk/baby-action-detection-safety-system-prototype", "full_name": "shreyas-jk/Baby-Action-Detection-for-Safety-System-Prototype", "topics": ["computer-vision", "deep-learning", "lstm", "neural-network", "safety-monitoring"], "description": "Prototype for Baby Action Detection and Classification"}
{"name": "bojone/cdial-gpt-tf", "full_name": "bojone/CDial-GPT-tf", "topics": [], "description": "\u7528bert4keras\u52a0\u8f7dCDial-GPT"}
{"name": "vita-group/gan-lth", "full_name": "VITA-Group/GAN-LTH", "topics": ["gan", "generative-adversarial-network", "lottery-ticket-hypothesis", "transfer", "pruning"], "description": "[ICLR 2021] \"GANs Can Play Lottery Too\" by Xuxi Chen, Zhenyu Zhang, Yongduo Sui, Tianlong Chen "}
{"name": "tk-rusch/lem", "full_name": "tk-rusch/LEM", "topics": ["recurrent-neural-networks", "time-series", "keyword-spotting", "google12", "dynamical-systems", "iclr2022", "iclr", "deep-learning", "lem"], "description": "Official code for Long Expressive Memory (ICLR 2022, Spotlight)"}
{"name": "alvinchangw/cocon_iclr2021", "full_name": "alvinchangw/COCON_ICLR2021", "topics": [], "description": "Pytorch implementation of CoCon: A Self-Supervised Approach for Controlled Text Generation "}
{"name": "leviborodenko/dgcnn", "full_name": "LeviBorodenko/dgcnn", "topics": ["deep-learning", "deep-neural-networks", "graphical-models", "graph-embedding", "graph-classification", "paper-implementations", "gnn", "attention-mechanism", "graph-signals", "dgcnn", "graph-convolutions"], "description": "Clean & Documented TF2  implementation of \"An end-to-end deep learning architecture for graph classification\" (M. Zhang et al., 2018)."}
{"name": "rowanz/turingadvice", "full_name": "rowanz/turingadvice", "topics": ["natural-language-understanding", "natural-language-processing", "natural-language-generation"], "description": "Evaluating Machines by their Real-World Language Use"}
{"name": "abdullah-abuolaim/multi-task-defocus-deblurring-dual-pixel-nimat", "full_name": "Abdullah-Abuolaim/multi-task-defocus-deblurring-dual-pixel-nimat", "topics": ["deep-neural-networks", "computer-vision", "deep-learning", "dataset", "deeplearning", "datasets", "computational-photography", "autofocus", "synthetic-data", "depth-of-field", "synthetic-dataset-generation", "defocus-blur", "defocus-deblurring", "dual-pixel", "image-motion", "nimat-effect"], "description": "Reference github repository for the paper \"Improving Single-Image Defocus Deblurring: How Dual-Pixel Images Help Through Multi-Task Learning\". We propose a single-image deblurring network that incorporates the two sub-aperture views into a multitask framework. Specifically, we show that jointly learning to predict the two DP views from a single blurry input image improves the network\u2019s ability to learn to deblur the image. Our experiments show this multi-task strategy achieves +1dB PSNR improvement over state-of-the-art defocus deblurring methods. In addition, our multi-task framework allows accurate DP-view synthesis (e.g., ~ 39dB PSNR) from the single input image. These high-quality DP views can be used for other DP-based applications, such as reflection removal. As part of this effort, we have captured a new dataset of 7,059 high-quality images to support our training for the DP-view synthesis task."}
{"name": "bojone/cpm_lm_bert4keras", "full_name": "bojone/CPM_LM_bert4keras", "topics": [], "description": "\u5728bert4keras\u4e0b\u52a0\u8f7dCPM_LM\u6a21\u578b"}
{"name": "alexklwong/subpixel-embedding-segmentation", "full_name": "alexklwong/subpixel-embedding-segmentation", "topics": ["deep-learning", "computer-vision", "machine-learning", "pytorch", "mri", "medical-imaging", "segmentation", "stroke-lesion", "atlas", "ischemic-stroke", "lesion-segmentation", "ucla"], "description": "PyTorch Implementation of Small Lesion Segmentation in Brain MRIs with Subpixel Embedding (ORAL, MICCAIW 2021)"}
{"name": "h-deep/trans-svsr", "full_name": "H-deep/Trans-SVSR", "topics": [], "description": "Pytorch implementation for \"A New Dataset and Transformer for Stereoscopic Video Super-Resolution\""}
{"name": "linzichuan/admrl", "full_name": "LinZichuan/AdMRL", "topics": ["meta-reinforcement-learning", "model-based-rl", "adversarial-training", "tensorflow"], "description": "Code for paper \"Model-based Adversarial Meta-Reinforcement Learning\" (https://arxiv.org/abs/2006.08875)"}
{"name": "harshshah03325/ai-for-healthcare", "full_name": "HarshShah03325/AI-for-healthcare", "topics": ["deep-learning", "machine-learning", "data-visualization", "medical-imaging", "image-segmentation", "risk-models"], "description": "The impact of Artificial Intelligence in improving healthcare facilities is increasing significantly. This repository provides implementation of different Deep Learning and Machine Learning techniques used in Healthcare."}
{"name": "midasverse/rmidas", "full_name": "MIDASverse/rMIDAS", "topics": ["imputation-methods", "tensorflow", "reticulate", "neural-network", "deep-learning", "r"], "description": "R package for missing-data imputation with deep learning"}
{"name": "robertklee/coco-human-pose", "full_name": "robertklee/COCO-Human-Pose", "topics": ["human-pose-estimation", "coco-dataset", "human-pose", "pose-estimation", "computer-vision", "deep-learning"], "description": "Train a stacked hourglass deep neural network for human pose estimation on the COCO 2017 dataset."}
{"name": "zonasw/dbnet", "full_name": "zonasw/DBNet", "topics": [], "description": "This is a tensorflow2.x implementation of \"Real-time Scene Text Detection with Differentiable Binarization\""}
{"name": "jeongukjae/tfds-korean", "full_name": "jeongukjae/tfds-korean", "topics": ["tensorflow-datasets", "tensorflow", "datasets"], "description": "A collection of Korean Text Datasets ready to use using Tensorflow-Datasets."}
{"name": "hellonlp/classifier_multi_label_seq2seq_attention", "full_name": "hellonlp/classifier_multi_label_seq2seq_attention", "topics": ["text-classification", "tensorflow", "multi-class-classification", "albert", "bert", "multi-label", "text-classifier", "classifier-multi-label", "seq2seq", "attention", "beamsearch"], "description": "multi-label\uff0cclassifier\uff0ctext classification\uff0c\u591a\u6807\u7b7e\u6587\u672c\u5206\u7c7b\uff0c\u6587\u672c\u5206\u7c7b\uff0cBERT\uff0cALBERT\uff0cmulti-label-classification\uff0cseq2seq\uff0cattention\uff0cbeam search"}
{"name": "grohith327/simplegan", "full_name": "grohith327/simplegan", "topics": ["deep-learning", "gan", "tensorflow", "python-library", "computer-vision", "generative-adversarial-network", "generative-model", "python3", "neural-networks"], "description": "Tensorflow-based framework to ease training of generative models"}
{"name": "fnangle/text_classfication-with-bert-pytorch-", "full_name": "fnangle/text_classfication-with-bert-pytorch", "topics": [], "description": "nlp text classification task with bert and pytorch on IMDB dataset"}
{"name": "dsxiangli/embedding", "full_name": "DSXiangLi/Embedding", "topics": ["embedding", "word2vec", "hierarchical-softmax", "negative-sampling", "fasttext", "tf-estimator", "doc2vec", "genism", "bookcorpus", "skip-thoughts", "encoder-decoder", "cnn-lstm", "seq2seq", "quick-thought", "transformer"], "description": "Embedding\u6a21\u578b\u4ee3\u7801\u548c\u5b66\u4e60\u7b14\u8bb0\u603b\u7ed3"}
{"name": "wwmark/meshgraphnets", "full_name": "wwMark/meshgraphnets", "topics": [], "description": "Rewrite deepmind/meshgraphnets into pytorch"}
{"name": "andreped/gradientaccumulator", "full_name": "andreped/GradientAccumulator", "topics": ["tensorflow", "accumulated-gradients", "tensorflow2", "tf2", "batch-size", "memory-constraints", "gradient-accumulation", "distributed-training", "float16", "mixed-precision", "deep-learning", "keras", "adaptive-gradient-clipping", "saved-model", "gpu", "tpu"], "description": ":dart: Accumulated Gradients for TensorFlow 2"}
{"name": "qiqihaer/3dssd-pytorch-openpcdet", "full_name": "qiqihaer/3DSSD-pytorch-openPCDet", "topics": [], "description": "The successful implementation of 3DSSD in Pytorch"}
{"name": "yoonseok312/watch-out", "full_name": "yoonseok312/watch-out", "topics": ["ios", "tensorflow"], "description": "Watch Out: Apple Watch App to detect dangerous sounds for people with hearing disablities."}
{"name": "fnangle/text_classfication-with-bert-pytorch", "full_name": "fnangle/text_classfication-with-bert-pytorch", "topics": [], "description": "nlp text classification task with bert and pytorch on IMDB dataset"}
{"name": "laugh12321/3d-attention-keras", "full_name": "laugh12321/3D-Attention-Keras", "topics": ["3d-attention", "cbam", "attention-model", "channel-attention", "spatial-attention", "position-attention", "attention"], "description": "This repo contains the 3D implementation of the commonly used attention mechanism for imaging."}
{"name": "fire717/fireclassification", "full_name": "fire717/FireClassification", "topics": [], "description": "\u57fa\u4e8ePytorch\u7684\u56fe\u50cf\u5206\u7c7b\u6846\u67b6"}
{"name": "hellonlp/classifier_multi_label_denses", "full_name": "hellonlp/classifier_multi_label_denses", "topics": ["multi-label-classification", "multi-label", "tensorflow", "text-classification", "text-classifier", "bert", "albert", "classifier-multi-label"], "description": "multi-label\uff0cclassifier\uff0ctext classification\uff0c\u591a\u6807\u7b7e\u6587\u672c\u5206\u7c7b\uff0c\u6587\u672c\u5206\u7c7b\uff0cBERT\uff0cALBERT\uff0cmulti-label-classification"}
{"name": "dygrec/asrep", "full_name": "DyGRec/ASReP", "topics": ["augmented-sequences", "item-prediction", "transformer", "recommender-system", "sequential-recommendation"], "description": "Released code of SIGIR2021 Augmenting Sequential Recommendation with Pseudo-Prior Items via Reversely Pre-training Transformer."}
{"name": "zincware/mdsuite", "full_name": "zincware/MDSuite", "topics": ["python", "molecular-dynamics", "particle-simulation", "tensorflow", "hdf5"], "description": "A post-processing engine for particle simulations"}
{"name": "itsuki8914/voice-morphing-relgan", "full_name": "itsuki8914/Voice-morphing-RelGAN", "topics": [], "description": "A implementation voice morphing using relgan with tensorflow"}
{"name": "andrescasado/pergamo", "full_name": "AndresCasado/pergamo", "topics": ["python", "pytorch", "deformable-model", "differentiable-rendering", "machine-learning"], "description": "Code for PERGAMO, a two step approach to learn deformable models"}
{"name": "hari-sikchi/offline_rl", "full_name": "hari-sikchi/offline_rl", "topics": ["reinforcement-learning", "offline-reinforcement", "offline-rl"], "description": "Pytorch implementation of state-of-the-art offline reinforcement learning algorithms."}
{"name": "jeffwang0325/image-identification-for-self-driving-cars", "full_name": "JeffWang0325/Image-Identification-for-Self-Driving-Cars", "topics": ["computer-vision", "yolo", "yolov5", "deep-learning", "self-driving-car", "deep-neural-networks", "tensorflow", "pytorch", "convolutional-neural-networks", "traffic-light-classification", "traffic-sign-classification", "tkinter", "tkinter-gui", "tkinter-python", "real-time-detection", "droidcam", "webcam", "webcam-capture", "dr", "python"], "description": "\ud83d\udd8d\ufe0f This project achieves some functions of image identification for Self-Driving Cars. First, use yolov5 for object detection. Second, image classification for traffic light and traffic sign. Furthermore, the GUI of this project makes it more user-friendly for users to realize the image identification for Self-Driving Cars."}
{"name": "raulmurillo/deep-pensieve", "full_name": "RaulMurillo/deep-pensieve", "topics": ["posit", "floating-point", "convolutional-neural-networks", "posit-arithmetic", "deep-learning", "neural-network", "tensorflow", "python"], "description": "A Deep Learning Framework for the Posit Number System"}
{"name": "denbergvanthijs/imbdrl", "full_name": "Denbergvanthijs/imbDRL", "topics": ["rl", "reinforcement-learning", "dqn", "tensorflow", "tfagents", "deep-learning"], "description": "Imbalanced Classification with Deep Reinforcement Learning"}
{"name": "darshandeshpande/tf-madgrad", "full_name": "DarshanDeshpande/tf-madgrad", "topics": ["optimization-algorithms", "tensorflow", "facebookai"], "description": "A tf.keras implementation of Facebook AI's MadGrad optimization algorithm"}
{"name": "marload/distrl-tensorflow2", "full_name": "marload/DistRL-TensorFlow2", "topics": ["machine-learning", "deep-learning", "tensorflow", "tensorflow2", "c51", "qr-dqn", "dqn", "rainbow-dqn", "distributional-rl"], "description": "\ud83d\udc33 Implementation of various Distributional Reinforcement Learning Algorithms using TensorFlow2."}
{"name": "eqtpartners/pause", "full_name": "EQTPartners/pause", "topics": ["nlp", "sentence-embeddings", "positive-unlabeled-learning", "document-embedding", "classification-algorithm", "similarity-search", "motherbrain"], "description": "\ud83c\udf4a PAUSE (Positive and Annealed Unlabeled Sentence Embedding), accepted by EMNLP'2021 \ud83c\udf34"}
{"name": "akaraspt/tinysleepnet", "full_name": "akaraspt/tinysleepnet", "topics": ["deep-learning", "neural-networks", "sleep-stage-scoring", "sleep-analysis", "cnn", "rnn", "tensorflow", "biosignals", "eeg"], "description": "TinySleepNet: An Efficient Deep Learning Model for Sleep Stage Scoring based on Raw Single-Channel EEG by Akara Supratak and Yike Guo from The Faculty of ICT, Mahidol University and Imperial College London respectively"}
{"name": "megagonlabs/t5-japanese", "full_name": "megagonlabs/t5-japanese", "topics": ["nlp", "natural-language-processing", "transformer", "t5"], "description": "Codes to pre-train Japanese T5 models"}
{"name": "lonepatient/bert-attribute-value-extract", "full_name": "lonePatient/BERT-Attribute-Value-Extract", "topics": ["pytorch", "bert", "attribute-value-extract", "lstm", "crf", "attention"], "description": "A Pytorch implementation of \"Scaling Up Open Tagging from Tens to Thousands: Comprehension Empowered Attribute Value Extraction from Product Title\" (ACL 2019)."}
{"name": "google-research/compressive-visual-representations", "full_name": "google-research/compressive-visual-representations", "topics": ["self-supervised-learning", "deep-learning", "machine-learning", "visual-representation", "tensorflow"], "description": "Tensorflow 2 implementations of the C-SimCLR and C-BYOL self-supervised visual representation methods from \"Compressive Visual Representations\" (NeurIPS 2021)"}
{"name": "navassherif98/recipe-generation-from-food-image", "full_name": "navassherif98/Recipe-Generation-from-Food-Image", "topics": ["deep-learning", "machine-learning", "recipe-generation", "food", "food-images", "final-year-project", "final-project", "recipes", "ingredients", "flask-application", "flask", "project", "development", "application", "inverse-cooking", "facebook", "html", "css", "cooking", "dishes"], "description": "An Application for Generating a cooking recipe consist of title, ingredients and instructions from an food image using Deep Learning."}
{"name": "qznan/qiznlp", "full_name": "Qznan/QizNLP", "topics": ["nlp", "chinese", "classification", "match", "sequence-labeling", "sequence-to-sequence", "tensorflow", "horovod", "beam-search"], "description": "Quick run NLP in many task     \u5feb\u901f\u8fd0\u884c\u5206\u7c7b\u3001\u5e8f\u5217\u6807\u6ce8\u3001\u5339\u914d\u3001\u751f\u6210\u7b49NLP\u4efb\u52a1\u7684Tensorflow\u6846\u67b6  (\u4e2d\u6587 NLP \u652f\u6301\u5206\u5e03\u5f0f\uff09"}
{"name": "longmaoteamtf/keras_ernie", "full_name": "LongmaoTeamTf/keras_ernie", "topics": ["ernie", "keras", "machine-learning"], "description": "Pre-trained ERNIE models could be loaded with Keras for feature extraction and prediction."}
{"name": "thunlp/hiddenkiller", "full_name": "thunlp/HiddenKiller", "topics": ["nlp", "backdoor-attacks", "nlproc"], "description": "Code and data of the ACL-IJCNLP 2021 paper \"Hidden Killer: Invisible Textual Backdoor Attacks with Syntactic Trigger\""}
{"name": "praful932/tf-rec", "full_name": "Praful932/Tf-Rec", "topics": ["svd", "svdplusplus", "tensorflow", "keras", "machine-learning", "deep-learning", "machine-learning-algorithms", "recommender-system", "recommendation-system", "python", "python-library", "svdpp", "matrix-factorization"], "description": "Tf-Rec is a python\ud83d\udcbb package for building\u2692 Recommender Systems. It is built on top of Keras and Tensorflow 2 to utilize GPU Acceleration during training."}
{"name": "ml4ai/mliis", "full_name": "ml4ai/mliis", "topics": ["meta-learning", "image-segmentation", "maml", "tensorflow", "machine-learning"], "description": "Code for meta-learning initializations for image segmentation"}
{"name": "rishabh-karmakar/facial-recognition-based-attendance-system", "full_name": "rishabh-karmakar/Facial-Recognition-Based-Attendance-System", "topics": ["python-3", "python", "python3", "facial-recognition", "attendance", "attendance-system", "attendance-management-system", "attendance-record", "tensorflow", "keras", "keras-tensorflow", "sqlite3", "tkinter", "tkinter-graphic-interface", "opencv"], "description": "Facial Recognition Based Attendance System using Python, Tensorflow, Keras, SqlLite3, Tkinter, OpenCV"}
{"name": "by-liu/mbls", "full_name": "by-liu/MbLS", "topics": ["calibration", "pytorch", "deep-learning", "label-smoothing"], "description": "Code of our method MbLS (Margin-based Label Smoothing) for network calibration. To Appear at CVPR 2022. Paper : https://arxiv.org/abs/2111.15430"}
{"name": "dilawarm/federated", "full_name": "dilawarm/federated", "topics": ["federated-learning", "homomorphic-encryption", "differential-privacy", "tensorflow", "privacy-preserving-machine-learning", "security"], "description": "Bachelor's Thesis in Computer Science: Privacy-Preserving Federated Learning Applied to Decentralized Data"}
{"name": "choiw-public/crack-segmentation", "full_name": "choiw-public/Crack-segmentation", "topics": ["tensorflow", "segmentation", "crack-segmentation", "crack-detection", "python"], "description": "This repo contains customized deep learning models for segmenting cracks."}
{"name": "ksvbka/face-mask-detector", "full_name": "ksvbka/face-mask-detector", "topics": ["tensorflow", "dataset", "face-detection", "face-mask-detection", "face-mask-dataset", "opencv", "python3"], "description": "Detecting face mask with OpenCV and TensorFlow. Using simple CNN or model provided by TensorFlow as MobileNetV2, VGG16, Xception."}
{"name": "aioz-ai/cfr_vqa", "full_name": "aioz-ai/CFR_VQA", "topics": ["vqa", "computer-vision", "deep-learning", "reasoning", "reasoning-machine"], "description": "Coarse-to-Fine Reasoning for Visual Question Answering"}
{"name": "narasimha1997/wavenet-stt", "full_name": "Narasimha1997/wavenet-stt", "topics": ["cplusplus-11", "pybind", "python3", "python", "wavenet", "tensorflow", "tensorflow2", "tensorflowlite", "speech-recognition"], "description": "An end-to-end speech recognition system with Wavenet. Built using C++ and python."}
{"name": "crissherban/brainpad", "full_name": "CrisSherban/BrainPad", "topics": ["openbci-hardware", "deep-learning", "eeg", "keras", "brainwaves"], "description": "Classification of EEG signals from the brain \ud83e\udde0 through OpenBCI hardware and Tensorflow-Keras API"}
{"name": "andrewtavis/wikirec", "full_name": "andrewtavis/wikirec", "topics": ["wikipedia", "recommender-system", "recommendation-engine", "python", "books", "lda", "bert", "bert-embeddings", "unsupervised-learning", "multilingual", "wikipedia-data", "machine-learning", "tfidf", "doc2vec", "nlp", "natural-language-processing", "neural-network", "open-source", "text-mining", "python3"], "description": "Recommendation engine framework based on Wikipedia data"}
{"name": "connectomicslab/aneurysm_detection", "full_name": "connectomicslab/Aneurysm_Detection", "topics": ["deep-learning", "detection", "segmentation", "tof-mra", "weakly-supervised-detection", "anatomical-knowledge", "aneurysm"], "description": "This repository contains the code used for the paper \"Towards automated brain aneurysm detection in TOF-MRA: open data, weak labels, and anatomical knowledge \""}
{"name": "qiqihaer/3dssd-pytorch", "full_name": "qiqihaer/3DSSD-pytorch", "topics": [], "description": "3DSSD's implementation with Pytorch"}
{"name": "nipponjo/deepfillv2-pytorch", "full_name": "nipponjo/deepfillv2-pytorch", "topics": ["inpainting", "pytorch", "deepfill", "image-inpainting", "generative-adversarial-network"], "description": "A PyTorch reimplementation of the paper Free-Form Image Inpainting with Gated Convolution (DeepFill v2) (https://arxiv.org/abs/1806.03589) "}
{"name": "sulaimanvesal/pointcloududa", "full_name": "sulaimanvesal/PointCloudUDA", "topics": ["domain-adaptation", "segmentation", "cardiac-segmentation", "deep-learning", "point-cloud", "unsupervised-learning"], "description": "[IEEE-TMI 2021] This is our PyTorch implementation for Adapt Everywhere paper on unsupervised domain adaptation using entropy and point-cloud paper. "}
{"name": "monologuesmw/bearing-fault-diagnosis-cnn", "full_name": "monologuesmw/bearing-fault-diagnosis-cnn", "topics": ["fault-diagnosis", "siamese-neural-network", "tensorflow", "bearing-fault-diagnosis"], "description": "Siamese network for bearing fault diagnosis"}
{"name": "prathimacode-hub/pyalgo-tree", "full_name": "prathimacode-hub/PyAlgo-Tree", "topics": ["data-structures-and-algorithms", "python3", "machine-learning-algorithms", "computer-vision", "deep-learning", "dynamic-programming", "data-structures", "cryptography", "searching-algorithms", "sorting-algorithms", "scheduling-algorithms", "pathfinding", "backtracking-algorithm", "bit-manipulation", "ciphers", "arithmetic", "hacktoberfest", "open-source", "contributions-welcome", "hacktoberfest2022"], "description": "\ud83d\udc4dThis project aims to be a finest hub of various data structures and algorithms using python. Feel free to contribute and show your support by \u2728 this repository. "}
{"name": "akash-rajak/real-time-human-detection-counting", "full_name": "akash-rajak/Real-Time-Human-Detection-Counting", "topics": ["python3", "opencv", "pil", "tkinter", "cv2", "matplotlib", "tensorflow", "numpy", "os", "time", "human-detection", "counting", "deep-learning", "python", "machine-learning", "computer-vision", "video", "faster-rcnn-inception-v2"], "description": "Real Time Human Detection and Counting using OpenCv & Tensorflow, in image, video and in camera."}
{"name": "davidfegyver/szabadfogasu-maszk", "full_name": "davidfegyver/szabadfogasu-maszk", "topics": ["python", "python3", "python-3", "keras-tensorflow", "deep-learning", "computer-vision", "image-processing", "face-mask", "face-mask-detection", "face-detection", "mask-detection", "classification", "real-time", "machine-learning", "caffe", "covid-19", "covid19", "coronavirus", "ssd-mobilenetv2", "competition"], "description": "A face mask detection system using Tensorflow/Keras and OpenCV, for the \"<19 Szabadfog\u00e1s\u00fa Sz\u00e1m\u00edt\u00f3g\u00e9p\" competition in 2020."}
{"name": "marius-juston/autocnn", "full_name": "Marius-Juston/AutoCNN", "topics": ["machine-learning-algorithms", "cnn", "genetic-algorithm", "automatic-design", "python", "tensorflow2"], "description": "This project is the implementation of the \"Automatically Designing CNN Architectures Using Genetic Algorithm for Image Classification\" paper"}
{"name": "xuchensjtu/sat-master-online", "full_name": "xuChenSJTU/SAT-master-online", "topics": [], "description": "This is a Pytorch implementation of our \"Learning on Attribute-Missing Graphs\"."}
{"name": "mediatek-neuropilot/mai21-learned-smartphone-isp", "full_name": "MediaTek-NeuroPilot/mai21-learned-smartphone-isp", "topics": ["cvpr2021", "deep-learning", "smartphone-isp", "computer-vision", "tensorflow", "cvpr", "low-level-vision", "python", "tflite", "mediatek"], "description": "The official codebase for the Learned Smartphone ISP Challenge in MAI @ CVPR 2021"}
{"name": "hltchkust/caire-covid", "full_name": "HLTCHKUST/CAiRE-COVID", "topics": ["question-answering", "qa", "summarization", "search-engine", "nlp", "kaggle"], "description": "A machine learning-based system that uses state-of-the-art natural language processing (NLP) question answering (QA) techniques combined with summarization for mining the available scientific literature"}
{"name": "smaranjitghose/auto_vaidya", "full_name": "smaranjitghose/auto_vaidya", "topics": ["python", "deeplearning", "tensorflow", "medical-imaging", "streamlit", "slop20", "slop", "ch-20", "hacktoberfest"], "description": "An open-source project for applying deep learning to medical scenarios"}
{"name": "dymaxionlabs/unetseg", "full_name": "dymaxionlabs/unetseg", "topics": ["satellite-imagery", "remote-sensing", "unet", "segmentation", "keras"], "description": "U-Net semantic segmentation for satellite imagery"}
{"name": "wqt2019/tacotron-2_melgan", "full_name": "wqt2019/tacotron-2_melgan", "topics": [], "description": "tacotron-2(tensorflow) + melgan(pytorch) chinese TTS"}
{"name": "sjmoran/sidgan", "full_name": "sjmoran/SIDGAN", "topics": ["eccv", "iccv", "cvpr", "computer-vision", "generative-adversarial-network", "low-light-image-enhancement", "video-enhancement"], "description": "Repository for the ECCV 2020 paper: \"Low Light Video Enhancement using Synthetic Data Produced with an Intermediate Domain Mapping\""}
{"name": "konfuzio-ai/konfuzio-sdk", "full_name": "konfuzio-ai/konfuzio-sdk", "topics": ["python", "nlp", "computer-vision", "ocr", "document-extraction", "text-classification", "text-processing", "document-annotate", "document-annotation", "document-annotation-tool"], "description": "OCR, extract and classify documents. In addition, annotate documents and build your own NLP and Computer Vision models using Python by downloading the data. Find examples in our Colab Notebooks, e. g. how to fine-tune Flair."}
{"name": "oniani/covid-19-chatbot", "full_name": "oniani/covid-19-chatbot", "topics": ["covid-19", "coronavirus", "gpt-2", "artificial-intelligence", "natural-language-processing"], "description": "Code for the Paper \"A Qualitative Evaluation of Language Models on Automatic Question-Answering for COVID-19\""}
{"name": "chunjingxiao/deepseg", "full_name": "ChunjingXiao/DeepSeg", "topics": ["activity-segmentation", "activity-recognition", "wifi-channel-state-information", "deep-learning"], "description": "A deep learning-based activity segmentation framework for activity recognition using WiFi  Channel State Information (CSI)."}
{"name": "dusandinho/prefab", "full_name": "Dusandinho/PreFab", "topics": ["deep-learning", "machine-learning", "nanofabrication", "photonics", "tensorflow"], "description": "Prediction of fabrication variations in integrated photonic devices using deep learning"}
{"name": "tibhannover/cross-modal_entity_consistency", "full_name": "TIBHannover/cross-modal_entity_consistency", "topics": ["cross-modal-consistency", "cross-modal-entity-verification", "multimodal-retrieval", "image-repurposing-detection", "deep-learning"], "description": "This repository contains the dataset and source files to reproduce the results in the publication M\u00fcller-Budack et al. 2021: \"Multimodal news analytics using measures of cross-modal entity and context consistency\", In: International Journal on Multimedia Information Retrieval (IJMIR), Vol. 10, Art. no. 2, 2021."}
{"name": "atelili/2bivqa", "full_name": "atelili/2BiVQA", "topics": ["deep-learning", "video-quality-assessment", "ugc", "bi-lstm", "quality-assessment", "blind-video-quality-assessment", "user-generated-content", "bvqa-model", "video"], "description": "2BiVQA is a no-reference deep learning based video quality assessment metric."}
{"name": "joseprsm/rexify", "full_name": "joseprsm/rexify", "topics": ["tensorflow-recommenders", "recommender-system", "rexify", "tensorflow"], "description": "\ud83e\udd96 Streamlined Recommender Systems with TensorFlow and KubeFlow"}
{"name": "gist-csbl/hots", "full_name": "GIST-CSBL/HoTS", "topics": ["deep-learning", "keras"], "description": "HoTS: Sequence-based prediction of binding regions and drug-target interactions."}
{"name": "iobt-vistec/min2net", "full_name": "IoBT-VISTEC/MIN2Net", "topics": ["brain-computer-interface", "multi-task-learning", "deep-metric-learning", "dml", "autoencoder", "ae", "eeg", "bci", "deep-learning", "machine-learning", "eeg-classification"], "description": "End-to-End Multi-Task Learning for Subject-Independent Motor Imagery EEG Classification (IEEE Transactions on Biomedical Engineering)"}
{"name": "edwardyehuang/car", "full_name": "edwardyehuang/CAR", "topics": ["deep-learning", "semantic-segmentation", "tensorflow"], "description": "CAR: Class-aware Regularizations for Semantic Segmentation (ECCV-2022)"}
{"name": "sabari205/equation-solver", "full_name": "sabari205/Equation-Solver", "topics": ["ocr", "deep-learning", "tensorflow", "reactjs", "convolutional-neural-networks"], "description": "Solving handwritten mathematical equations using OCR and CNN"}
{"name": "auto-vaidya/auto_vaidya", "full_name": "smaranjitghose/auto_vaidya", "topics": ["python", "deeplearning", "tensorflow", "medical-imaging", "streamlit", "slop20", "slop", "ch-20", "hacktoberfest"], "description": "An open-source project for applying deep learning to medical scenarios"}
{"name": "shyamblast/koogu", "full_name": "shyamblast/Koogu", "topics": ["bioacoustics", "machine-learning", "data-mining", "detection", "classification", "cnn"], "description": "Koogu is a Python package for developing and using Machine Learning (ML) solutions in Animal Bioacoustics."}
{"name": "miemie2013/keras-solo", "full_name": "miemie2013/Keras-SOLO", "topics": ["keras", "solo", "solov2", "solov1"], "description": "Keras-SOLO(Segmenting Objects by Locations)"}
{"name": "gaozhongpai/paiconvmesh", "full_name": "Gaozhongpai/LSAConvMesh", "topics": ["3d-reconstruction", "graph-convolutional-networks", "mesh-generation", "pytorch", "3d-vision"], "description": "Official repository for the paper \"Learning Local Neighboring Structure for Robust 3D Shape Representation\" "}
{"name": "parthnatekar/pgdl", "full_name": "parthnatekar/pgdl", "topics": ["deep-learning", "generalization", "representation-learning", "neurips-2020"], "description": "Winning Solution of the NeurIPS 2020 Competition on Predicting Generalization in Deep Learning"}
{"name": "viktorc/pararealml", "full_name": "ViktorC/PararealML", "topics": ["differential-equations", "machine-learning", "parareal", "parallel-in-time", "hpc", "ode-solver", "pde-solver", "parallel-computing", "scientific-computing", "physics", "numerical-methods", "physics-informed-neural-networks", "finite-difference-method", "deep-learning"], "description": "A machine learning boosted parallel-in-time differential equation solver framework."}
{"name": "fissoreg/relative-gradient-jacobian", "full_name": "fissoreg/relative-gradient-jacobian", "topics": ["deep-learning", "pytorch", "normalizing-flows", "relative-gradient"], "description": "Relative gradient optimization of the Jacobian term in unsupervised deep learning, NeurIPS 2020"}
{"name": "pubkey/fashion-segmentation", "full_name": "pubkey/fashion-segmentation", "topics": ["computer-vision", "deep-learning", "segmentation", "pix2pix", "pix2pix-tensorflow", "fashionai", "fashion", "fashion-mnist", "clothes-retrieval", "fashion-ai", "image-segmentation", "vision-for-fashion"], "description": "A tensorflow model for segmentation of fashion items out of multiple product images"}
{"name": "chrisdrymon/angel", "full_name": "chrisdrymon/angel", "topics": ["morphology", "classics", "ancient-greek", "ancient-languages", "bible", "bible-study", "linguistics", "computational-linguistics", "new-testament", "pos-tagging", "pos-tagger", "nlp", "nlp-machine-learning", "natural-language-processing", "nlp-parsing"], "description": "An Ancient Greek Morphology Tagger"}
{"name": "levimcclenny/sa-pinns", "full_name": "levimcclenny/SA-PINNs", "topics": ["adaptive-pinns", "neural-network", "pdes", "stiff-pdes", "scientific-computing", "sciml", "physics-informed-learning", "pinns", "deep-learning", "neural-networks", "tensorflow"], "description": "Implementation of the paper \"Self-Adaptive Physics-Informed Neural Networks using a Soft Attention Mechanism\" [AAAI-MLPS 2021]"}
{"name": "srihari-humbarwadi/retinanet-tensorflow2.x", "full_name": "srihari-humbarwadi/retinanet-tensorflow2.x", "topics": ["tensorflow", "retinanet", "object-detection"], "description": "TensorFlow2.x implementation of RetinaNet"}
{"name": "jabb0/fastflow3d", "full_name": "Jabb0/FastFlow3D", "topics": ["point-cloud", "pytorch-lightning", "pytorch", "scene-flow"], "description": "Implementation of the FastFlow3D architecture for scene flow estimation from LiDAR point clouds in PyTorch using PyTorch Lightning."}
{"name": "sushant097/devnagari-handwritten-word-recongition-with-deep-learning", "full_name": "sushant097/Devnagari-Handwritten-Word-Recongition-with-Deep-Learning", "topics": ["cnn", "blstm", "handwritten-text-recognition", "tensorflow", "nepali-handwritten-recognition", "deep-learning", "devnagari-handwritten-recognition", "crnn-ocr"], "description": "Use Convolutional Recurrent Neural Network to recognize the Handwritten Word text image without pre segmentation into words or characters. Use CTC loss Function to train."}
{"name": "silentmoebuta/simple_bert_for_tf2", "full_name": "SilentMoebuta/simple_bert_for_tf2", "topics": [], "description": "Build bert as a keras layer using TF2.0 ."}
{"name": "nboulle/greenlearning", "full_name": "NBoulle/greenlearning", "topics": ["deep-learning", "machine-learning", "green-functions", "rational-neural-networks", "tensorflow", "partial-differential-equations"], "description": "Learning Green's functions of partial differential equations with deep learning."}
{"name": "billpwchan/deeptrust", "full_name": "billpwchan/DeepTrust", "topics": ["twitter", "stock-market", "refinitiv", "anomaly-detection", "information-retrieval", "reliability-assessment", "natural-language-processing", "imperial-college-london"], "description": "DeepTrust: A Reliable Financial Knowledge Retrieval Framework For Explaining Extreme Pricing Anomalies"}
{"name": "amirmohammadrostami/keywordsspotting-efficientnet-a0", "full_name": "AmirmohammadRostami/KeywordsSpotting-EfficientNet-A0", "topics": ["pytorch", "keyword-spotting", "footballkeyworddataset", "efficientnet", "absolute-zero", "real-time-systems", "football-analysis"], "description": "EfficientNet-Absolute Zero for Continuous Speech Keyword Spotting"}
{"name": "tatevkaren/tatevkaren-data-science-portfolio", "full_name": "TatevKaren/TatevKaren-data-science-portfolio", "topics": ["data-science", "portfolio-website", "portfolio", "case-study", "blog", "papers", "statistics", "econometrics", "machine-learning", "deep-learning", "computer-science", "data-analysis"], "description": "Data Science Portfolio of Tatev Karen Aslanyan including Case Studies and Research Projects that I have completed that solve business problems or introduce new products. Case Study papers, codes, and additional resources are all included."}
{"name": "icon-lab/syndiff", "full_name": "icon-lab/SynDiff", "topics": ["deep-learning", "medical-imaging", "denoising-diffusion-models", "image-synthesis", "image-to-image-translation"], "description": "Official PyTorch implementation of SynDiff described in the paper (https://arxiv.org/abs/2207.08208)."}
{"name": "darrenzhang01/excon", "full_name": "DarrenZhang01/ExCon", "topics": ["deep-learning", "artificial-intelligence", "python", "representation-learning", "machine-learning-algorithms"], "description": "ExCon: Explanation-driven Supervised Contrastive Learning"}
{"name": "koziev/verslibre", "full_name": "Koziev/verslibre", "topics": ["poetry", "text-generation", "poetry-generator", "gpt", "neural-network", "russian-language"], "description": "Using transformers to generate Russian poetry"}
{"name": "canokaue/immunolynk", "full_name": "canokaue/ImmunoLynk", "topics": ["covid-19", "immune-testing", "blockchain", "ipfs-blockchain", "infura", "python3", "flask-server", "http-api", "trustless", "healthcare-service", "covid-tracking", "mit-hack", "ipfs-api", "ipfs-gateway", "private-blockchain", "bigchaindb", "tensorflow", "keras-tensorflow", "opencv", "image-recognition"], "description": "[Lumiata COVID-19 Winner] COVID Immunity testing results registered to the Blockchain for healthcare safety."}
{"name": "evergrow/gdn_inpainting", "full_name": "Evergrow/GDN_Inpainting", "topics": ["image-inpainting", "deep-learning", "artifacts-detection", "image-synthesis"], "description": "Pixel-wise Dense Detector for Image Inpainting (PG 2020)"}
{"name": "natetsang/open-rl", "full_name": "natetsang/open-rl", "topics": ["reinforcement-learning", "deep-reinforcement-learning", "python", "tensorflow", "deep-learning", "gym-environments", "neural-networks", "artificial-intelligence", "keras", "machine-learning"], "description": "Implementations of a large collection of reinforcement learning algorithms."}
{"name": "littlemesie/recommend-tf2.0", "full_name": "littlemesie/recommend-tf2.0", "topics": [], "description": "\u63a8\u8350\u7cfb\u7edf\u4e4b\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\uff0c\u6846\u67b6\u91c7\u7528tensorflow2"}
{"name": "xionghuichen/maple", "full_name": "xionghuichen/MAPLE", "topics": ["reinforcement-learning", "tensorflow", "offline-rl", "offline-reinforcement-learning", "paper"], "description": "The Official Code for Offline Model-based Adaptable Policy Learning"}
{"name": "furkanom/tf-ssd", "full_name": "FurkanOM/tf-ssd", "topics": ["ssd", "object-detection", "ssd300", "trained-models", "tensorflow", "tensorflow2", "tf2", "deep-learning", "mobilenet-ssd", "mobilenetv2", "vgg16"], "description": "Tensorflow 2 single shot multibox detector (SSD) implementation from scratch with MobileNetV2 and VGG16 backbones"}
{"name": "mjfadeaway/das", "full_name": "MJfadeaway/DAS", "topics": ["adaptive-sampling", "deep-generative-models", "physics-informed-neural-networks", "scientific-machine-learning", "partial-differential-equations", "pde", "deep-learning"], "description": "DAS-PINNs:  A deep adaptive sampling method for solving high-dimensional partial differential equations"}
{"name": "sithu31296/pytorch-onnx-tflite", "full_name": "sithu31296/PyTorch-ONNX-TFLite", "topics": ["onnx-tf", "tflite", "pytorch", "tflite-conversion"], "description": "Conversion of PyTorch Models into TFLite"}
{"name": "tanakitint/srcnn-anime", "full_name": "TanakitInt/SRCNN-anime", "topics": ["deep-learning", "super-resolution", "machine-learning", "tensorflow", "python", "computer-vision", "keras", "convolutional-neural-networks", "cnn", "image-processing", "srcnn", "upscaling", "denoising", "waifu2x", "anime"], "description": "A Super-Resolution Convolutional Neural Network builds for artwork, anime, and illustration. Senior Project - Artwork Enlargement and Quality Improvement using Machine Learning. ICITEE 2021 - Enhancement of Anime Imaging Enlargement Using Modified Super-Resolution CNN."}
{"name": "google-research/maxvit", "full_name": "google-research/maxvit", "topics": ["architecture", "classification", "cnn", "computer-vision", "image", "image-processing", "mlp", "object-detection", "transformer", "transformer-architecture", "vision-transformer", "segmentation", "resnet"], "description": "[ECCV 2022] Official repository for \"MaxViT: Multi-Axis Vision Transformer\". SOTA foundation models for classification, detection, segmentation, image quality, and generative modeling..."}
{"name": "frankkramer-lab/riadd.aucmedi", "full_name": "frankkramer-lab/riadd.aucmedi", "topics": ["retinal-disease-detection", "ensemble-learning", "class-imbalance", "multi-label-image-classification", "deep-learning", "medical-image-analysis", "healthcare-imaging", "retinal-images"], "description": "Multi-Disease Detection in Retinal Imaging based on Ensembling Heterogeneous Deep Learning Models"}
{"name": "ngoquanghuy99/pos-tagging-bilstm-crf", "full_name": "ngoquanghuy99/POS-Tagging-BiLSTM-CRF", "topics": ["sequence-labeling", "part-of-speech-tagging", "bidirectional-lstm", "conditional-random-fields", "word-embeddings", "glove-embeddings", "tensorflow2", "keras", "penn-treebank"], "description": "A Tensorflow 2, Keras implementation of POS tagging using Bidirectional LSTM-CRF on Penn Treebank corpus (WSJ)"}
{"name": "junqi-zhang/aetn", "full_name": "Junqi-Zhang/AETN", "topics": ["python", "tensorflow", "estimator", "transformer"], "description": "The implementation of the AutoEncoder-coupled Transformer Network by TensorFlow"}
{"name": "philipperemy/keras-sde-net", "full_name": "philipperemy/keras-sde-net", "topics": ["sde-net", "keras", "keras-tensorflow", "tensorflow", "neural-networks"], "description": "Keras implementation of SDE-Net (ICML 2020)."}
{"name": "bi-graph/emgraph", "full_name": "bi-graph/Emgraph", "topics": ["deep-learning", "embedding", "graph", "graph-algorithms", "knowledge-graph", "knowledge-graph-embedding", "link-prediction", "machine-learning"], "description": "A Python library for knowledge graph representation learning (graph embedding)."}
{"name": "rizavelioglu/challenge-aido_rl-il", "full_name": "rizavelioglu/challenge-aido_RL-IL", "topics": ["reinforcement-learning", "self-driving-cars", "imitation-learning", "pytorch", "keras", "tensorflow", "supervised-learning", "behavioral-cloning"], "description": "Reinforcement Learning + Imitation Learning based approach to AI Driving Olympics"}
{"name": "andreariba/deepcycle", "full_name": "andreariba/DeepCycle", "topics": ["deep-learning", "cell-biology", "single-cell", "rna-seq"], "description": "Cell cycle inference in single-cell RNA-seq"}
{"name": "scagin/neurallogicreasoning", "full_name": "Scagin/NeuralLogicReasoning", "topics": ["paper", "neural-network", "reasoning"], "description": "An Implementation of NLR: Neural Collaborative Reasoning, paper: https://arxiv.org/abs/2005.08129"}
{"name": "walsvid/generation3d", "full_name": "walsvid/Generation3D", "topics": ["3d-reconstruction", "deep-learning", "shape-generation", "3d-deep-learning", "disn", "pixel2mesh"], "description": " 3D Shape Generation Baselines in PyTorch."}
{"name": "iamyajat/hypelinks-api", "full_name": "iamyajat/HypeLinks-API", "topics": ["fastapi", "tensorflow", "python", "machine-learning", "nlp"], "description": "A Smart Bookmark API that can classify websites into 10 different categories built using FastAPI and Tensorflow 2.0"}
{"name": "ashishpapanai/stockdl", "full_name": "ashishpapanai/stockDL", "topics": ["finace", "financial-analysis", "stocks", "stocks-api", "stocks-predictor", "pip", "python3", "deep-learning", "lstm", "pip-package"], "description": "A financial deep learning library for stocks price prediction and comparison with traditional investment strategies. The Library is based on LSTM-Neural Networks and Conv1D + LSTM Neural Networks. Investments are subject to market risks, The AUTHOR HOLDS NO RESPONSIBILITY for any financial loss. "}
{"name": "soumik12345/point-cloud-segmentation", "full_name": "soumik12345/point-cloud-segmentation", "topics": ["point-cloud", "segmentation", "tensorflow2", "keras", "tpu", "deep-learning"], "description": "TF2 implementation of PointNet for segmenting point clouds"}
{"name": "sarsbug/smp", "full_name": "sarsbug/SMP", "topics": [], "description": "Pytorch implementation for Deep Self-Learning From Noisy Labels"}
{"name": "matheushent/covid-19-detector", "full_name": "matheushent/covid-19-detector", "topics": ["tensorflow", "deep-learning", "covid-19", "grad-cam", "occlusion-sensitivity", "keras", "python3", "vgg16", "vgg19", "resnet-50", "resnet-152", "machine-learning-algorithms", "transfer-learning", "cuda", "gpu-tensorflow", "convolutional-neural-networks", "efficientnet"], "description": "Repository containing scripts to train and test a neural network whose goal is to detect presence of COVID-19"}
{"name": "iamyajat/smart-bookmark-api", "full_name": "iamyajat/HypeLinks-API", "topics": ["fastapi", "tensorflow", "python", "machine-learning", "nlp"], "description": "A Smart Bookmark API that can classify websites into 10 different categories built using FastAPI and Tensorflow 2.0"}
{"name": "ltiao/bore", "full_name": "ltiao/bore", "topics": ["machine-learning", "bayesian-optimization", "neural-networks", "automl", "hyperparameter-optimization", "python", "tensorflow"], "description": "Bayesian Optimization with Density-Ratio Estimation"}
{"name": "kazuhito00/person-detection-using-raspberrypi-cpu", "full_name": "Kazuhito00/Person-Detection-using-RaspberryPi-CPU", "topics": ["raspberry-pi", "raspberry-pi-4", "tensorflow", "object-detection", "onnx", "person-detection", "tensorflow-lite"], "description": "Raspberry Pi 4\u306eCPU\u52d5\u4f5c\u3092\u60f3\u5b9a\u3057\u305f\u4eba\u691c\u51fa\u30e2\u30c7\u30eb\u3068\u30c7\u30e2\u30b9\u30af\u30ea\u30d7\u30c8"}
{"name": "itailang/geometric_adv", "full_name": "itailang/geometric_adv", "topics": ["point-cloud", "adversarial-attacks", "defense-methods", "autoencoder-model", "geometry-processing", "tensorflow", "pytorch", "3dv2021"], "description": "Geometric Adversarial Attacks and Defenses on 3D Point Clouds (3DV 2021)"}
{"name": "tuvovan/mirnet---keras", "full_name": "tuvovan/MIRNet-Keras", "topics": ["image-processing", "denoising", "super-resolution", "sota", "deep-learning", "neural-network", "computer-vision", "low-light-image-enhancement", "resolution", "artificial-intelligence"], "description": "Keras Implementation of MIRNet - SoTA in Image Denoising, Super Resolution and Image Enhancement - CVPR 2020"}
{"name": "jiangyi15/tf-pwa", "full_name": "jiangyi15/tf-pwa", "topics": ["partial-wave-analysis", "tensorflow", "gpu", "python", "particle-physics"], "description": "Partial Wave Analysis using TensorFlow."}
{"name": "msrocean/mockingbird", "full_name": "msrocean/mockingbird", "topics": ["deep-learning", "adversarial-machine-learning", "privacy-enhancing-technologies", "website-fingerprinting", "defense", "adversarial-training"], "description": "Keras with Tensorflow implementation of our paper \"Mockingbird: Defending Against Deep-Learning-Based Website Fingerprinting Attacks with Adversarial Traces\" which is published in IEEE Transactions on Information Forensics and Security (TIFS)."}
{"name": "nimadorostkar/human-detection", "full_name": "nimadorostkar/human-detection", "topics": ["yolo", "yolov3", "tensorflow", "object-detection", "opencv", "human-detection", "persian-language"], "description": "yolov3 tensorflow object detection and report human movements in persian"}
{"name": "edisonleeeee/graphwar", "full_name": "EdisonLeeeee/GreatX", "topics": ["adversarial-attacks", "graph-convolutional-networks", "graph-neural-networks", "pytorch", "graph-reliability-toolbox", "distribution-shift", "inherent-noise", "pytorch-geometric"], "description": "A graph reliability toolbox based on PyTorch and PyTorch Geometric (PyG)."}
{"name": "kmdsy/dtcr", "full_name": "KMdsy/DTCR", "topics": ["time-series", "clustering", "deep-learning", "nips-2019"], "description": "Tensorflow implementation of paper 'Learning Representations for Time Series Clustering' (NIPS 2019 accept paper)."}
{"name": "muxamilian/wysiwyh", "full_name": "muxamilian/wysiwyh", "topics": ["autoencoder", "neural-network", "computer-vision", "video", "audio", "visual-impairment-aid", "seeing-aid"], "description": "A neural net to transform a video into audio in real time."}
{"name": "laitathei/yolov7-pytorch-segmentation", "full_name": "laitathei/YOLOv7-Pytorch-Segmentation", "topics": ["yolov5", "yolov7-segmentation", "pytorch", "realsense-camera", "ros"], "description": "YOLOv7 segmentation pytorch implementation guide"}
{"name": "itchyhiker/iris_landmarks_pytorch", "full_name": "digital-nomad-cheng/Iris_Landmarks_PyTorch", "topics": ["iris-dataset", "iris-recognition", "iris-landmarks", "computer-vision", "deep-learning", "ncnn"], "description": "Iris landmarks localization"}
{"name": "chiahsuan156/dst-as-prompting", "full_name": "chiahsuan156/DST-as-Prompting", "topics": ["dialogue", "dialogue-state-tracking", "natural-language-processing", "prompt-tuning", "prompting", "schema", "seq2seq", "t5", "task-oriented-dialogue"], "description": "Source code for Dialogue State Tracking with a Language Modelusing Schema-Driven Prompting"}
{"name": "zhangqianhui/swapping-autoencoder-tf", "full_name": "zhangqianhui/Swapping-Autoencoder-tf", "topics": ["generative-adversarial-network", "gans", "image-editing", "facial-attribute-editing"], "description": "The unofficial  tensorflow implementation of Swapping Autoencoder for Deep Image Manipulation"}
{"name": "elkinmt19/computer-vision-dojo", "full_name": "Elkinmt19/computer-vision-dojo", "topics": ["python", "cpp", "cmake", "opencv", "tensorflow", "sckit-learn", "yolov3", "image-processing", "computer-vision"], "description": "This is a repository to learn and get more computer vision skills, make robotics projects integrating the computer vision as a perception tool and create a lot of awesome advanced controllers for the robots of the future.  "}
{"name": "zaccharieramzi/tfkbnufft", "full_name": "zaccharieramzi/tfkbnufft", "topics": ["tensorflow", "non-uniform-fourier", "mri", "nfft", "nufft"], "description": "A robust, easy-to-deploy non-uniform Fast Fourier Transform in TensorFlow."}
{"name": "dschinagl/occam", "full_name": "dschinagl/occam", "topics": ["3d-object-detection", "autonomous-driving", "explainable-ai", "lidar", "point-cloud", "pytorch", "saliency-map"], "description": "Demo code for the paper: OccAM's Laser"}
{"name": "ntt123/pax", "full_name": "NTT123/pax", "topics": ["pytree", "deep-learning", "jax", "opax"], "description": "A stateful pytree library for training neural networks."}
{"name": "julian-theis/pydream", "full_name": "Julian-Theis/PyDREAM", "topics": ["processmining", "petri-nets", "eventlogs", "python3", "pm4py", "processmodels", "process-mining", "data-science", "machine-learning", "deep-learning", "data-mining", "decay-replay", "xes", "prediction", "discrete-event", "events"], "description": "Python Implementation of Decay Replay Mining (DREAM)"}
{"name": "leewise9/segmentation-based-surface-defect-detection", "full_name": "LeeWise9/Segmentation-Based-Surface-Defect-Detection", "topics": [], "description": "This is a deep learning application project in the industrial field, intended to detect defects on the workpiece surface. The code is based on keras and runs on GPU."}
{"name": "leiwang1999/vehicleflowdetection", "full_name": "LeiWang1999/VehicleFlowDetection", "topics": [], "description": "Implement of vehicle flow statistics based on tensorflow and yolo3 with pyqt5 GUI."}
{"name": "qlinhta/mlp-mixer-implementation", "full_name": "qlinhta/MLP-Mixer", "topics": ["mlp-mixer", "computervision", "deep-learning", "neural-network"], "description": "Implementation for paper MLP-Mixer: An all-MLP Architecture for Vision. MLP-Mixer, an architecture based exclusively on multi-layer perceptrons (MLPs). MLP-Mixer contains two types of layers: one with MLPs applied independently to image patches (i.e. \"mixing\" the per-location features), and one with MLPs applied across patches (i.e. \"mixing\" spatial information)."}
{"name": "camma-public/cholect45", "full_name": "CAMMA-public/cholect45", "topics": ["python", "dataset", "python3", "action-recognition", "laparoscopy", "endoscopic-images", "cholect40", "cholect45", "cholect50", "action-triplet", "pytorch", "tensorflow", "tensorflow2"], "description": "Laparoscopic video dataset for surgical action triplet recognition"}
{"name": "slientge/attrec", "full_name": "slientGe/AttRec", "topics": ["python", "tensorflow", "recommender-system"], "description": "TensorFlow simple implemenation of AttRec model in paper \"Next Item Recommendation with Self-Attention\""}
{"name": "frankkramer-lab/aucmedi", "full_name": "frankkramer-lab/aucmedi", "topics": ["automl", "clinical-decision-support", "computer-vision", "deep-learning", "docker", "framework", "healthcare-imaging", "medical-image-analysis", "medical-image-classification", "pip", "tensorflow", "explainable-ai", "research", "python", "image-classification"], "description": "a framework for Automated Classification of Medical Images"}
{"name": "minghchen/carl_code", "full_name": "minghchen/CARL_code", "topics": [], "description": "Pytorch code for Frame-wise Action Representations for Long Videos via Sequence Contrastive Learning, CVPR2022."}
{"name": "frank-zyw/chinese-text-classification", "full_name": "Frank-ZYW/Chinese-Text-Classification", "topics": [], "description": "\u57fa\u4e8ePytorch\u5b9e\u73b0\u7684\u4e00\u4e9b\u7ecf\u5178\u81ea\u7136\u8bed\u8a00\u5904\u7406\u6a21\u578b\u4e2d\u6587\u77ed\u6587\u672c\u5206\u7c7b\u4efb\u52a1\uff0c\u5305\u542bTextCNN\uff0cTextRCNN\uff0cFastText\uff0cBERT\uff0cROBERT\u4ee5\u53caERNIE"}
{"name": "lisennlp/bert_crf_sequence_annotation", "full_name": "Lisennlp/bert_crf_sequence_annotation", "topics": [], "description": "\u57fa\u4e8ePytorch+BERT+CRF\u7684NLP\u5e8f\u5217\u6807\u6ce8\u6a21\u578b\uff0c\u76ee\u524d\u5305\u62ec\u5206\u8bcd\uff0c\u8bcd\u6027\u6807\u6ce8\uff0c\u547d\u540d\u5b9e\u4f53\u8bc6\u522b\u7b49"}
{"name": "alexandra-chron/hierarchical-domain-adaptation", "full_name": "alexandra-chron/hierarchical-domain-adaptation", "topics": ["adapters", "clustering", "domain-adaptation", "gaussian-mixture-models", "nlp", "pretrained-language-model", "pytorch"], "description": "Code of NAACL 2022 \"Efficient Hierarchical Domain Adaptation for Pretrained Language Models\" paper. "}
{"name": "akariasai/unanswerable_qa", "full_name": "AkariAsai/unanswerable_qa", "topics": ["question-answering", "machine-reading-comprehension", "natural-questions", "natural-language-processing"], "description": "The official implementation for ACL 2021 \"Challenges in Information Seeking QA: Unanswerable Questions and Paragraph Retrieval\". "}
{"name": "cyrilzakka/stylegan2-tpu", "full_name": "cyrilzakka/stylegan2-tpu", "topics": ["deep-learning", "tensorflow"], "description": "StyleGAN2 but rewritten for TPUs."}
{"name": "chulhongsung/time-series-forecasting", "full_name": "chulhongsung/time-series-forecasting", "topics": ["time-series", "time-series-forecasting", "deep-learning", "pytorch", "tensorflow"], "description": "Tensorflow tutorial repository for time series forecasting models"}
{"name": "rozumden/fmodetect", "full_name": "rozumden/FMODetect", "topics": ["fast-moving-objects", "object-detection", "deep-learning", "dataset-generation", "iccv2021"], "description": "[ICCV 2021] FMODetect: Robust Detection of Fast Moving Objects"}
{"name": "huangcongqing/mmdetection3d-note", "full_name": "HuangCongQing/mmdetection3d-note", "topics": ["3d-object-detection", "point-cloud", "pytorch", "object-detection", "object-detection-model"], "description": "mmdetection3d  \u4ee3\u7801\u91cd\u70b9\u6ce8\u89e3\u7b14\u8bb0"}
{"name": "dorukkarinca/keras-buoy", "full_name": "dorukkarinca/keras-buoy", "topics": ["keras", "checkpointing", "autosave", "data-science", "machine-learning", "colab-notebook", "colaboratory", "colab", "colab-automation"], "description": "Keras wrapper that autosaves what ModelCheckpoint cannot."}
{"name": "cognlp/cogktr", "full_name": "CogNLP/CogKTR", "topics": ["knowledge", "nlu", "text", "pytorch"], "description": "CogKTR: A Knowledge-Enhanced Text Representation Toolkit for Natural Language Understanding. EMNLP 2022"}
{"name": "oap-project/cloudtik", "full_name": "oap-project/cloudtik", "topics": ["aws", "azure", "cloud", "gcp", "ai", "analytics", "deep-learning", "machine-learning"], "description": "Cloud Scale Platform for Distributed Analytics and AI"}
{"name": "luozhouyang/keras-crf", "full_name": "luozhouyang/keras-crf", "topics": ["crf", "keras", "tensorflow2", "tensorflow-addons"], "description": "A more elegant and convenient CRF built on tensorflow-addons."}
{"name": "sdpkjc/abcdrl", "full_name": "sdpkjc/abcdrl", "topics": ["python", "deep-reinforcement-learning", "pytorch", "reinfocement-learning", "deep-learning", "machine-learning"], "description": "Modular Single-file Reinfocement Learning Algorithms Library"}
{"name": "bhky/targetran", "full_name": "bhky/targetran", "topics": ["machine-learning", "object-detection", "image-classification", "data-augmentation", "tensorflow2", "pytorch"], "description": "Python library for data augmentation in object detection or image classification model training"}
{"name": "licksylick/facemaskrecognitionwithflask", "full_name": "licksylick/FaceMaskRecognitionWithFlask", "topics": ["deep-learning", "face-mask-detection", "flask", "keras", "machine-learning", "transfer-learning", "webapp"], "description": "Face-mask recognition project"}
{"name": "huangshiyu13/deepfake_detection", "full_name": "huangshiyu13/deepfake_detection", "topics": [], "description": "detect deepfake images(AI\u6362\u8138\u68c0\u6d4b), Pytorch"}
{"name": "sally20921/conssl", "full_name": "sally20921/ConSSL", "topics": ["pytorch-ignite", "pytorch-implmention", "latex", "docker", "imagenet-dataset", "cifar-dataset", "pytorch-lightning"], "description": "PyTorch Implementation of SOTA SSL methods "}
{"name": "sanjaymarreddi/facial-expression-recognition-classifier-model", "full_name": "SanjayMarreddi/Emotion-Investigator", "topics": ["cnn", "deep-learning", "flask", "opencv", "python", "wintercoding", "dwoc2020", "open-source", "facial-expression-recognition", "emotion-detection", "emotion", "facial-expressions"], "description": "An Exciting Deep Learning-based Flask web app that predicts the Facial Expressions of users and also does Graphical Visualization of the Expressions."}
{"name": "bojone/adafactor", "full_name": "bojone/adafactor", "topics": [], "description": "adafactor optimizer for keras"}
{"name": "victorbai2/tfpackagetext", "full_name": "victorbai2/TFpackageText", "topics": ["deep-learning", "machine-learning", "nlp", "pytorch", "tensorflow", "fastapi"], "description": "mini-framework for model training and deployment"}
{"name": "houliangict/slimgan", "full_name": "liang-hou/SlimGAN", "topics": ["gan", "pytorch", "aaai2021"], "description": "Slimmable Generative Adversarial Networks (AAAI 2021)"}
{"name": "nishiwen1214/r-at", "full_name": "nishiwen1214/R-AT", "topics": ["pytorch", "bert"], "description": "Regularized Adversarial Training"}
{"name": "neuralchen/coogan", "full_name": "neuralchen/CooGAN", "topics": [], "description": "The official tensorflow implementation of \"CooGAN: A Memory-Efficient Framework for High-Resolution Facial Attribute Editing\" (Accepted in ECCV2020)"}
{"name": "indyfree/carla", "full_name": "carla-recourse/CARLA", "topics": ["python", "machine-learning", "artificial-intelligence", "explainable-ai", "explainable-ml", "explainability", "counterfactual-explanations", "counterfactuals", "counterfactual", "recourse", "benchmark", "benchmarking", "tensorflow", "tensorflow2", "pytorch"], "description": "CARLA: A Python Library to Benchmark Algorithmic Recourse and Counterfactual Explanation Algorithms"}
{"name": "princeton-nlp/rationale-robustness", "full_name": "princeton-nlp/rationale-robustness", "topics": ["interpretability", "nlp", "robustness"], "description": "NAACL 2022: Can Rationalization Improve Robustness? https://arxiv.org/abs/2204.11790"}
{"name": "ankushmalaker/huse", "full_name": "AnkushMalaker/HUSE", "topics": ["tensorflow", "huse", "tf2", "keras", "universal-embedding"], "description": "Tensorflow implimentation of HUSE: Hierarchical Universal Semantic Embeddings"}
{"name": "purseclab/dnd", "full_name": "purseclab/DnD", "topics": ["decompiler", "deep-learning", "neural-network", "program-analysis", "symbolic-execution", "angr", "reverse-engineering"], "description": "A decompiler to automatically reverse-engineer the DNN semantics from its compiled binary using program analysis"}
{"name": "yulv-git/awesome-ultrasound-standard-plane-detection", "full_name": "Yulv-git/Awesome-Ultrasound-Standard-Plane-Detection", "topics": ["standard-plane", "detection", "papers", "code", "ultrasound", "python3", "classification", "localization", "anatomical-structure", "public-datasets", "selection", "identification", "extraction", "localisation", "deep-learning", "machine-learning", "recognition"], "description": "A curated list of awesome ultrasound standard plane detection/localization/localisation/extraction/classification/selection/identification/recognition."}
{"name": "asjidkalam/scrawl", "full_name": "Asjidkalam/Scrawl", "topics": ["ocr", "machine-learning", "keras", "deep-learning", "lstm"], "description": "Reverse OCR using DeepLearning"}
{"name": "shotadeguchi/pinn_tf2", "full_name": "ShotaDeguchi/PINN_TF2", "topics": ["deep-learning", "neural-network", "tensorflow", "machine-learning"], "description": "Implementation of PINNs in TensorFlow 2"}
{"name": "dod-advana/gamechanger-ml", "full_name": "dod-advana/gamechanger-ml", "topics": ["dod", "policy-as-code", "ml", "machine-learning", "python", "nlp", "natural-language-processing", "transformer", "mlops"], "description": "GAMECHANGER Machine Learning Repo"}
{"name": "rishabhmaheshwary/hard-label-attack", "full_name": "RishabhMaheshwary/hard-label-attack", "topics": ["adversarial-attacks", "bert", "nlp", "classification", "nli", "machine-learning", "deep-learning"], "description": "Natural Language Attacks in a Hard Label Black Box Setting."}
{"name": "ntvuongg/vnese-id-extractor", "full_name": "ntvuongg/vnese-id-extractor", "topics": ["yolov4", "keras", "id-card-extraction", "object-detection", "content-recognition"], "description": "A tool using Keras models which is implementation of YOLOv4 (Tensorflow backend) for detection and VietOCR for recognizion."}
{"name": "jderobot/rl-studio", "full_name": "JdeRobot/RL-Studio", "topics": ["jderobot", "robotics", "ros", "gazebo", "reinforcement-learning", "artificial-intelligence", "computer-vision", "deep-learning"], "description": "Robotic library for the training of Reinforcement Learning algorithms"}
{"name": "jesseyule/objectdetection-yolov3", "full_name": "JesseYule/ObjectDetection-YOLOv3", "topics": [], "description": "\u9762\u5411\u534e\u4e3aAtlas500\u7684\u5b9e\u65f6\u76ee\u6807\u68c0\u6d4b\uff08YOLOv3\uff0ctensorflow\u5b9e\u73b0\uff09"}
{"name": "akensert/molgraph", "full_name": "akensert/molgraph", "topics": ["cheminformatics", "graph-neural-networks", "keras", "molecular-graphs", "tensorflow", "deep-learning"], "description": "Graph neural networks for molecular machine learning. Implemented and compatible with TensorFlow and Keras."}
{"name": "jiexiaou/idt", "full_name": "jiexiaou/IDT", "topics": ["deep-learning", "image-deraining", "image-restoration", "pytorch", "transformer"], "description": "Official repository for the paper \"Image Deraining Transformer\"."}
{"name": "aliprf/acr-loss", "full_name": "aliprf/ACR-Loss", "topics": ["computer-vision", "deep-learning", "face-alignment", "face-localization", "facial-landmarks", "facial-landmarks-detection", "icpr2022", "machine-learning", "acr-loss"], "description": "ACR Loss: Adaptive Coordinate-based Regression Loss for Face Alignment"}
{"name": "skoltech-nlp/rudetoxifier", "full_name": "s-nlp/rudetoxifier", "topics": ["style-transfer", "nlp", "russian-language"], "description": "Code and data of \"Methods for Detoxification of Texts for the Russian Language\" paper"}
{"name": "shahruk10/kaldi-tflite", "full_name": "shahruk10/kaldi-tflite", "topics": ["tensorflow", "kaldi", "speech", "tflite", "x-vector", "diarization"], "description": "Convert kaldi feature extraction and nnet3 models into Tensorflow Lite models. Currently aimed at converting kaldi's x-vector models and diarization pipelines to tensorflow models."}
{"name": "practical-ai/deep_utils", "full_name": "pooya-mohammadi/deep_utils", "topics": ["pytorch", "deep-learning", "face-detection", "object-detection", "utils", "tensorflow", "python", "machine-learning", "modelcheckpoint", "augmentation", "computer-vision", "nlp", "cutmix", "coco", "yolov5", "face-recognition", "vggface2", "senet"], "description": "An open-source toolkit which is full of handy functions, including the most used models and utilities for deep-learning practitioners!"}
{"name": "phoenix-shen/reinforcementlearning", "full_name": "Phoenix-Shen/ReinforcementLearning", "topics": ["pytorch", "reinforcement-learning", "algorithms", "qlearning-algorithm", "actor-critic-algorithm", "policy-gradient", "proximal-policy-optimization", "deep-qlearning-algorithm", "td3-pytorch", "dppo", "ddpg-pytorch", "prioritized-experience-replay", "deep-reinforcement-learning"], "description": "\u5f3a\u5316\u5b66\u4e60\u7b97\u6cd5\u5e93\uff0c\u5305\u542b\u4e86\u76ee\u524d\u4e3b\u6d41\u7684\u5f3a\u5316\u5b66\u4e60\u7b97\u6cd5(Value based and Policy basd)\u7684\u4ee3\u7801\uff0c\u4ee3\u7801\u90fd\u7ecf\u8fc7\u8c03\u8bd5\u5e76\u53ef\u4ee5\u8fd0\u884c"}
{"name": "elicassion/starformer", "full_name": "elicassion/StARformer", "topics": ["transformer", "reinforcement-learning", "transformer-reinforcement-learning"], "description": "Code for paper StARformer: Transformer with State-Action-Reward Representations."}
{"name": "ajayk-01/ktu-notifier", "full_name": "AJAYK-01/KTU-Notifier", "topics": ["telegram-bot", "ktu-announcements", "python", "firebase", "webscraping", "ktu-notifier", "ktu", "bot", "nlp", "machine-learning", "university", "education", "hacktoberfest", "hacktoberfest2021"], "description": "An NLP based Telegram Bot that pushes KTU Announcements Notifications"}
{"name": "wiedersehne/paramixer", "full_name": "wiedersehne/Paramixer", "topics": ["attention", "deep-learning", "machine-learning", "parameterization", "transformer"], "description": "Parameterizing Mixing Links in Sparse Factors Works Better than Dot-Product Self-Attention (CVPR 2022)"}
{"name": "fdbtrs/self-restrained-triplet-loss", "full_name": "fdbtrs/Self-restrained-Triplet-Loss", "topics": ["covid-19", "mask", "pytorch", "masked-face-recognition", "masked-face", "triplet-loss", "srt"], "description": "Official repository for Self-restrained Triplet Loss for Accurate Masked Face Recognition"}
{"name": "theankurgoswami/human-violence-detection", "full_name": "TheAnkurGoswami/Human-Violence-Detection", "topics": ["deep-learning", "reccurent-neural-network", "rnn", "keras", "violence-detection", "yolov3"], "description": "A human violence  detection & classification system using recurrent neural networks(RNN)."}
{"name": "transformer-man/yolo-deepsort-flask", "full_name": "Transformer-man/yolo-deepsort-flask", "topics": ["pytorch", "yolo", "yolov3", "deepsort", "flask", "sort", "deep-sort", "cnn-model", "web", "cnn"], "description": "Target detection and multi target tracking platform based on Yolo DeepSort and Flask."}
{"name": "shaonbhattashuvo/deep-learning-workshop", "full_name": "ShaonBhattaShuvo/Deep-Learning-Workshop", "topics": ["deep-learning", "deep-neural-networks", "convolutional-neural-networks", "transfer-learning", "machine-learning", "regression-models", "classification-model"], "description": "The repository contains python codes, which I have developed as the facilitator of the two consecutive Deep Learning Workshops (I and II) for the master's students of computer science, University of Windsor."}
{"name": "stefaniafresca/pod-dl-rom", "full_name": "stefaniafresca/POD-DL-ROM", "topics": ["reduced-order-modeling", "deep-learning", "proper-orthogonal-decomposition", "dimensionality-reduction", "parametrized-pdes"], "description": "Source code for POD-DL-ROM: enhancing deep learning-based reduced order models for nonlinear parametrized PDEs by proper orthogonal decomposition. Available on doi.org/10.1016/j.cma.2021.114181."}
{"name": "xzluo97/mvmm-regnet", "full_name": "xzluo97/MvMM-RegNet", "topics": ["medical-image-registration", "groupwise-registration", "deep-learning", "tensorflow", "probabilistic-graphical-models"], "description": "Code for paper: MvMM-RegNet: A new image registration framework based on multivariate mixture model and neural network estimation"}
{"name": "thu-keg/copen", "full_name": "THU-KEG/COPEN", "topics": ["knowledge-graph", "language-model", "nlp", "probing", "model-analysis"], "description": "The official code and dataset for EMNLP 2022 paper \"COPEN: Probing Conceptual Knowledge in Pre-trained Language Models\"."}
{"name": "ika-rwth-aachen/pclsegmentation", "full_name": "ika-rwth-aachen/PCLSegmentation", "topics": ["squeezesegv2", "point-cloud", "segmentation", "machine-learning", "computer-vision", "lidar", "lidar-point-cloud", "autonomous-vehicles", "semantic-segmentation", "tensorflow"], "description": "Tensorflow 2.9 Pipeline for Semantic Point Cloud Segmentation with SqueezeSeqV2, Darknet21 and Darknet53."}
{"name": "langfield/asta", "full_name": "langfield/asta", "topics": [], "description": "Shape annotations for numpy arrays and pytorch/tensorflow tensors."}
{"name": "houliang1996/slimgan", "full_name": "liang-hou/SlimGAN", "topics": ["gan", "pytorch", "aaai2021"], "description": "Slimmable Generative Adversarial Networks (AAAI 2021)"}
{"name": "balcilar/gnn-spectral-expressive-power", "full_name": "balcilar/gnn-spectral-expressive-power", "topics": ["gnn", "graph", "spectral-analysis", "expressiveness-analysis", "pytorch-geometric", "datasets", "tensorflow"], "description": "Code of \"Analyzing the Expressive Power of Graph Neural Networks in a Spectral Perspective\" paper published in ICLR2021"}
{"name": "dimitreoliveira/hf_tf_serving_examples", "full_name": "dimitreOliveira/hf_tf_serving_examples", "topics": ["tensorflow", "tf-serving", "huggingface", "huggingface-transformers", "nlp", "tensorflow-serving", "huggingface-examples", "deep-learning", "transformers", "gradio"], "description": "Simple examples of serving HuggingFace models with TensorFlow Serving"}
{"name": "priyansh42/lung-cancer-detection", "full_name": "Priyansh42/Lung-Cancer-Detection", "topics": ["cancer-detection", "lung-cancer-detection", "machine-learning-project", "cnn-model", "python-tkinter-application", "cnn", "cnn-classification", "python", "deep-learning"], "description": "This application aims to early detection of lung cancer to give patients the best chance at recovery and survival using CNN Model."}
{"name": "sun1638650145/crnn", "full_name": "sun1638650145/CRNN", "topics": ["keras", "ctc", "ocr", "captcha-solver", "crnn", "pipeline", "tensorflow"], "description": "An AutoML for CRNN, you can perform captcha recognition  with just a few lines of code."}
{"name": "shgaurav1/dvg", "full_name": "shgaurav1/DVG", "topics": ["ffmpeg", "gaussian-processes", "video", "video-generation", "video-generator", "video-processing", "video-synthesis", "diverse-video-generation", "convolutional-neural-networks", "deep-learning", "deep-neural-networks", "lstm-neural-networks", "machine-learning"], "description": "Diverse Video Generation using a Gaussian Process Trigger"}
{"name": "yaxan/naruto_handsign_classification", "full_name": "yaxan/Naruto_Handsign_Classification", "topics": ["computer-vision", "deep-learning", "deep-neural-networks", "hand-gesture-recognition", "hand-tracking", "inception-resnet", "mobilenetv2", "naruto", "opencv", "python", "resnet", "tensorflow", "transfer-learning", "vgg16"], "description": "Naruto Hand Gesture Recognition with OpenCV and Transfer Learning"}
{"name": "toriml/dnn-bench", "full_name": "Talmaj/DNN-bench", "topics": ["dnn-bench", "deep-learning", "pytorch", "tensorflow", "onnxruntime", "docker", "optimization", "speedup"], "description": "A library that lets you easily increase efficiency of your deep learning models with no loss of accuracy."}
{"name": "tuvovan/attsf", "full_name": "tuvovan/ATTSF", "topics": ["defocus-deblurring-challenge", "tensorflow", "cvpr2021"], "description": "Code for CVPR Workshop 2021 Paper"}
{"name": "stephanakkerman/tensortrade", "full_name": "StephanAkkerman/TensorTrade", "topics": ["tensortrade", "benchmark", "heatmap", "reinforcement-learning", "python", "tensorflow", "automated-trading", "automated-trading-bot", "binance", "cryptocurrency", "crypto"], "description": "This repository hosts all my code related to TensorTrade. It consists of the main program, its old versions, and some extras for more insights."}
{"name": "xuyingjie521/xbert", "full_name": "xuyingjie521/xbert", "topics": ["tensorflow2", "bert", "variants", "albert", "albert-chinese", "roberta"], "description": "\u57fa\u4e8etensorflow2.x\u5b9e\u73b0bert\u53ca\u5176\u53d8\u4f53\u7684\u9884\u8bad\u7ec3\u6a21\u578b\u52a0\u8f7d\u67b6\u6784"}
{"name": "bk-modding/fake-currency-identification", "full_name": "BK-Modding/fake-currency-identification", "topics": ["currency-detection", "currency-images", "opencv", "deep-learning", "cnn-keras", "convolutional-neural-networks", "mobilenetv2", "mobilenet", "vgg16", "vgg16-model", "keras", "tensorflow", "fake-currency"], "description": "Uses retrained MobileNetV2 classification models to determine whether an Indian currency note is fake or real (based on watermark and fluorescent strip)"}
{"name": "youjiazhang/alphago-zero-gobang", "full_name": "YoujiaZhang/AlphaGo-Zero-Gobang", "topics": ["gobang", "gui", "mcts", "deep-learning", "residual-networks", "alphazero", "alphago", "tensorflow", "ai", "gomuku"], "description": "Meta-Zeta\u662f\u4e00\u4e2a\u57fa\u4e8e\u5f3a\u5316\u5b66\u4e60\u7684\u4e94\u5b50\u68cb(Gobang)\u6a21\u578b\uff0c\u4e3b\u8981\u7528\u4ee5\u4e86\u89e3AlphaGo Zero\u7684\u8fd0\u884c\u539f\u7406\u7684Demo\uff0c\u5373\u795e\u7ecf\u7f51\u7edc\u662f\u5982\u4f55\u6307\u5bfcMCTS\u505a\u51fa\u51b3\u7b56\u7684\uff0c\u4ee5\u53ca\u5982\u4f55\u81ea\u6211\u5bf9\u5f08\u5b66\u4e60\u3002\u6e90\u7801+\u6559\u7a0b"}
{"name": "rishit-dagli/glom-tensorflow", "full_name": "Rishit-dagli/GLOM-TensorFlow", "topics": ["machine-learning", "tensorflow", "tensorflow2", "deep-learning", "glom", "neural-network", "geoffrey-hinton", "keras", "keras-tensorflow", "representation-learning", "convolutional-neural-networks", "embedding", "capsule-neural-networks"], "description": "An attempt at the implementation of GLOM, Geoffrey Hinton's paper for emergent part-whole hierarchies from data"}
{"name": "mylesagray/anpr-knative", "full_name": "mylesagray/anpr-knative", "topics": ["tensorflow", "knative", "knative-serving", "knative-eventing", "anpr"], "description": "A research project on running ML inferencing on KNative"}
{"name": "linfeng-tang/piafusion", "full_name": "Linfeng-Tang/PIAFusion", "topics": [], "description": "This is official tensorflow implementation of \u201cPIAFusion: A Progressive Infrared and Visible Image Fusion Network Based on Illumination Aware\u201d"}
{"name": "princeton-nlp/calm-textgame", "full_name": "princeton-nlp/calm-textgame", "topics": ["text-based-game", "nlp", "rl", "gpt", "n-gram", "calm"], "description": "[EMNLP 2020] Keep CALM and Explore: Language Models for Action Generation in Text-based Games"}
{"name": "anexplore/cnn_for_captcha", "full_name": "anexplore/cnn_for_captcha", "topics": ["captcha", "imagecaptcha", "ocr", "deep-learning", "keras", "tensorflow", "torch"], "description": "\u56fe\u7247\u7c7b\u9a8c\u8bc1\u7801\u8bc6\u522b(\u6570\u5b57\u9a8c\u8bc1\u7801/\u7f3a\u53e3\u9a8c\u8bc1\u7801/\u6587\u5b57\u9a8c\u8bc1\u7801/\u65cb\u8f6c\u9a8c\u8bc1\u7801/\u76f8\u4f3c\u7269\u4f53\u9a8c\u8bc1\u7801)"}
{"name": "ppashakhanloo/codetrek", "full_name": "ppashakhanloo/CodeTrek", "topics": ["codeql", "deep-learning", "code-representation", "pytorch", "semantic-analysis", "relational-database"], "description": "A powerful relational representation of source code"}
{"name": "lionelmessi6410/ntga", "full_name": "lionelmessi6410/ntga", "topics": ["deep-learning", "machine-learning", "privacy", "tensorflow2"], "description": "Code for \"Neural Tangent Generalization Attacks\" (ICML 2021)"}
{"name": "carlos-gg/dl4ds", "full_name": "carlos-gg/dl4ds", "topics": ["deep-learning", "downscaling", "super-resolution", "earth-science", "earth-observation", "python", "tensorflow"], "description": "Deep Learning for empirical DownScaling. Python package with state-of-the-art and novel deep learning algorithms for empirical/statistical downscaling of gridded data"}
{"name": "samson6460/tf2_segmentation", "full_name": "samson6460/tf2_Segmentation", "topics": ["segmentation", "semantic-segmentation", "tensorflow", "tensorflow2", "keras", "unet", "u-net", "deeplabv3", "deeplab", "deep-learning", "python"], "description": "Segmentation framework implemented in tensorflow 2 (tf.keras)."}
{"name": "carlsummer/python_developer_tools", "full_name": "carlsummer/python_developer_tools", "topics": ["deep-learning", "pytorch", "tricks"], "description": "\u8bba\u6587\u590d\u73b0\uff0c\u591a\u673a\u591a\u5361"}
{"name": "tangxianfeng/pa-gnn", "full_name": "tangxianfeng/PA-GNN", "topics": ["machine-learning", "meta-learning", "graph-mining", "adversarial-defense", "deep-learning", "neural-networks", "graph-neural-networks"], "description": "Implementation of paper \"Transferring Robustness for Graph Neural Network Against Poisoning Attacks\"."}
{"name": "decisionforce/mairl", "full_name": "decisionforce/MAIRL", "topics": ["imitation-learning", "reinforcement-learning", "robotics", "icra2021", "inverse-reinforcement-learning", "self-attention", "transformer"], "description": "[RA-L & ICRA 2021] Adversarial Inverse Reinforcement Learning with Self-attention Dynamics Model"}
{"name": "beyond-ml-labs/beyondml", "full_name": "Beyond-ML-Labs/BeyondML", "topics": ["deep-learning", "machine-learning", "neural-network", "pytorch", "tensorflow"], "description": "Software for developing sparse, performant, multitask artificial neural networks"}
{"name": "aye-saac/aye-saac", "full_name": "Aye-saac/aye-saac", "topics": ["python", "natural-language-processing", "data-science", "pipeline", "microservices", "rabbitmq"], "description": "A modular conversational assistant for those with visual impairments."}
{"name": "vita-group/weaknas", "full_name": "VITA-Group/WeakNAS", "topics": ["pytorch", "neural-architecture-search", "nasbench", "nas-bench-101", "nas-bench-201", "mobilenet-space", "deep-learning"], "description": "[NeurIPS 2021] \u201cStronger NAS with Weaker Predictors\u201c, Junru Wu, Xiyang Dai, Dongdong Chen, Yinpeng Chen, Mengchen Liu, Ye Yu, Zhangyang Wang, Zicheng Liu, Mei Chen and Lu Yuan"}
{"name": "ayaanzhaque/sdcnl", "full_name": "ayaanzhaque/SDCNL", "topics": ["depression", "label-correction", "deep-learning", "scraped-data", "depression-classification", "noisy-labels", "nlp", "suicide", "depression-identification", "reddit", "embeddings", "noise", "icann2021"], "description": "Deep Learning for Suicide and Depression Identification with Unsupervised Label Correction (ICANN 2021)"}
{"name": "apockill/creepycrawlai", "full_name": "apockill/CreepyCrawlAI", "topics": ["godot-python", "tensorflow", "reinforcement-learning", "genetic-algorithm", "godot"], "description": "A deep neural network evolutionary sim, built with Godot, godot-python, and tensorflow."}
{"name": "huanghuidmml/texttoy", "full_name": "huanghuidmml/tfbert", "topics": ["tensorflow", "bert", "electra", "albert", "trainer", "xla", "mixed-precision", "ernie", "ernie-gram", "chinesebert"], "description": "\u57fa\u4e8etensorflow1.x\u7684\u9884\u8bad\u7ec3\u6a21\u578b\u8c03\u7528\uff0c\u652f\u6301\u5355\u673a\u591a\u5361\u3001\u68af\u5ea6\u7d2f\u79ef\uff0cXLA\u52a0\u901f\uff0c\u6df7\u5408\u7cbe\u5ea6\u3002\u53ef\u7075\u6d3b\u8bad\u7ec3\u3001\u9a8c\u8bc1\u3001\u9884\u6d4b\u3002"}
{"name": "am1tyadav/teal", "full_name": "am1tyadav/teal", "topics": ["tensorflow", "data-augmentation", "keras", "data-preprocessing", "machine-learning", "audio-data-augmentation", "audio-processing", "deep-learning", "python"], "description": "Library of TensorFlow layers for audio data processing and data augmentation"}
{"name": "separius/simclrv2-pytorch", "full_name": "Separius/SimCLRv2-Pytorch", "topics": ["simclr", "contrastive", "pretrained", "selfsupervised", "resnet", "pytorch"], "description": "Pretrained SimCLRv2 models in Pytorch"}
{"name": "nauyan/nucleisegmentation", "full_name": "nauyan/NucleiSegmentation", "topics": ["deep-learning", "medical-imaging", "histology", "histological-images", "histopathology-images", "histopathological-biopsy-images", "keras", "u-net", "tensorflow", "wsis"], "description": "The repository contains a simple pipeline for training Nuclei Segmentation Datasets of Histopathology Images."}
{"name": "hahn-schickard/automatic-structured-pruning", "full_name": "Hahn-Schickard/Automatic-Structured-Pruning", "topics": ["structured-pruning", "prune", "pruning", "tensorflow", "neuralnetworks"], "description": "We have implemented a framework that supports developers to structured prune neural networks of Tensorflow Models"}
{"name": "joshi-bharat/deep_underwater_localization", "full_name": "joshi-bharat/deep_underwater_localization", "topics": ["pose-estimation", "tensorflow", "marine-robotics", "localization"], "description": "Source Code for \"DeepURL: Deep Pose Estimation Framework for Underwater Relative Localization\",  IROS 2020"}
{"name": "yixiangd/accuratebg", "full_name": "yixiangD/AccurateBG", "topics": ["deep-learning", "ohiot1dm", "glucose-prediction"], "description": "Patient-specific blood glucose prediction using deep learning, considering the challenges of \"small dataset\" and \"data imbalance\""}
{"name": "danieltudosiu/nmpevqvae", "full_name": "danieltudosiu/nmpevqvae", "topics": ["deep-learning", "neuroimaging", "neuroinformatics", "vq-vae", "ignite"], "description": "Neuromorphologicaly Preserving Volumetric Data Encoding Using VQ-VAE"}
{"name": "ha0tang/dpgan", "full_name": "Ha0Tang/DPGAN", "topics": ["gan", "generative-adversarial-network"], "description": "[TIP 2021] Layout-to-Image Translation with Double Pooling Generative Adversarial Networks"}
{"name": "kazuhito00/object-detection-bbox-art", "full_name": "Kazuhito00/object-detection-bbox-art", "topics": ["detection-bbox-art", "opencv", "tensorflow", "bbox", "hand-detection", "bounding-box"], "description": "OpenCV\u3092\u7528\u3044\u305f\u30d0\u30a6\u30f3\u30c7\u30a3\u30f3\u30b0\u30dc\u30c3\u30af\u30b9\u88c5\u98fe\u306e\u4f5c\u4f8b\u96c6\u3002"}
{"name": "foreverps/content-aware-rotation", "full_name": "ForeverPs/content-aware-rotation", "topics": ["formula-derivation", "reproduction", "tensorflow", "image-warping", "image-rotation", "content-aware-rotation"], "description": "Implementation of Kaiming He's Paper Content-Aware Rotation on ICCV 2013"}
{"name": "zjunlp/relphormer", "full_name": "zjunlp/Relphormer", "topics": ["kg", "transformer", "knowledge-graph", "knowledge-graph-completion", "question-answering", "recommendation-system", "knowledge-graph-representation", "fb15k-237", "link-prediction", "umls", "wn18rr", "relphormer"], "description": "Code for the paper \"Relational Graph Transformer for Knowledge Graph Representation\""}
{"name": "wjddn279/deeplearning_mimo-noma", "full_name": "wjddn279/DeepLearning_MIMO-NOMA", "topics": ["mimo", "noma", "deep-learning", "communication"], "description": "Realization of MIMO-NOMA signal detection system based on **C. Lin et al., \u201cA deep learning approach for MIMO-NOMA downlink signal detection,\u201d MDPI Sensors, vol. 19, no. 11, pp. 2526, 2019."}
{"name": "pritamqu/ppg2ecg-cardiogan", "full_name": "pritamqu/ppg2ecg-cardiogan", "topics": ["gan", "generative-adversarial-network", "python", "ecg", "ppg"], "description": "CardioGAN - AAAI 2021"}
{"name": "lorenanda/speech-emotion-recognition", "full_name": "lorenanda/speech-emotion-recognition", "topics": ["python", "panda", "librosa", "tensorflow", "keras", "emotion-recognition", "speech-processing", "neural-networks", "deep-learning"], "description": "A program that uses neural networks to detect emotions from pre-recorded and real-time speech "}
{"name": "tensorlayer/tlxzoo", "full_name": "tensorlayer/TLXZoo", "topics": ["tensorflow", "paddlepaddle", "mindspore", "tensorlayerx", "tensorlayer", "jittor", "oneflow", "pytorch"], "description": "Pre-trained backbones for TensorLayerX"}
{"name": "sforaidl/decepticonlp", "full_name": "SforAiDl/decepticonlp", "topics": ["natural-language-processing", "adversarial-attacks", "deep-learning", "robust-optimization", "text-processing", "python"], "description": "Python Library for Robustness Monitoring and Adversarial Debugging of NLP models"}
{"name": "a-lucic/focus", "full_name": "a-lucic/focus", "topics": ["tensorflow", "tree-ensembles", "random-forest", "decision-tree"], "description": null}
{"name": "dogyoonlee/rsmix", "full_name": "dogyoonlee/RSMix", "topics": ["data-augmentation", "pointcloud", "deep-learning", "regularization", "modelnet40", "shape-classification", "3d", "3dpointcloud"], "description": "[CVPR 2021] Rigid Subset Mix (RSMix): Regularization Strategy for Point Cloud via Rigidly Mixed Samples"}
{"name": "dinghanshen/cutoff", "full_name": "dinghanshen/Cutoff", "topics": ["nlp-machine-learning", "deep-learning", "huggingface-transformers", "fairseq", "augmentation"], "description": "The source code for the Cutoff data augmentation approach proposed in this paper: \"A Simple but Tough-to-Beat Data Augmentation Approach for Natural Language Understanding and Generation\". "}
{"name": "0zgur0/star_network", "full_name": "0zgur0/STAckable-Recurrent-network", "topics": ["rnn", "rnn-tensorflow", "deep-learning", "lstm", "gru", "lstm-neural-network", "gru-neural-networks", "pami-2021"], "description": "[PAMI 2021] Gating Revisited: Deep Multi-layer RNNs That Can Be Trained"}
{"name": "liguge/1d-grad-cam-for-intelligent-fault-diagnosis", "full_name": "liguge/1D-Grad-CAM-for-interpretable-intelligent-fault-diagnosis", "topics": ["deep-learning", "fault-diagnosis"], "description": "\u667a\u80fd\u6545\u969c\u8bca\u65ad\u4e2d\u4e00\u7ef4\u7c7b\u68af\u5ea6\u6fc0\u6d3b\u6620\u5c04\u53ef\u89c6\u5316\u5c55\u793a   1D-Grad-CAM for interpretable intelligent fault diagnosis"}
{"name": "sthalles/simclr-tensorflow", "full_name": "sthalles/SimCLR-tensorflow", "topics": ["tensorflow", "contrastive-loss", "contrastive-learning", "simclr", "representation-learning", "unsupervised-learning", "self-supervised-learning"], "description": "TensorFlow Implementation of SimCLR: A Simple Framework for Contrastive Learning of Visual Representations"}
{"name": "allenai/embeddingrecycling", "full_name": "allenai/EmbeddingRecycling", "topics": ["machine-learning", "natural-language-processing", "nlp", "transfer-learning-nlp", "efficient-nlp"], "description": "Embedding Recycling for Language models"}
{"name": "lizhaoliu-lec/imageaestheticassessmentpytorch", "full_name": "lizhaoliu-Lec/ImageAestheticAssessmentPyTorch", "topics": ["deeplearning", "aesthetic-assessment", "pytorch", "pytorch-implementation", "covolution-neural-network", "transformer"], "description": "Image Aesthetic Assessment in PyTorch with implemented popular datasets and models (possibly providing the pretrained ones)."}
{"name": "ammesatyajit/videobert", "full_name": "ammesatyajit/VideoBERT", "topics": ["bert", "videobert", "python3", "pytorch"], "description": "Using VideoBERT to tackle video prediction"}
{"name": "snehankekre/streamlit-tensorboard", "full_name": "snehankekre/streamlit-tensorboard", "topics": ["streamlit", "tensorboard", "tensorflow"], "description": "Streamlit component for TensorBoard, TensorFlow's visualization toolkit"}
{"name": "lukethehecker/esinet", "full_name": "LukeTheHecker/esinet", "topics": ["eeg", "inverse", "solutions", "neural-network", "inverse-solutions", "anns", "convdip", "esinet", "mne-python", "meg", "simulate-data"], "description": "EEG inverse solution with artificial neural networks. This package works with MNE-Python data structures for easy integration into your MNE-based M/EEG code"}
{"name": "hirune924/imgaug-tf", "full_name": "hirune924/imgaug-tf", "topics": [], "description": "An image augmentation library for tensorflow."}
{"name": "bm777/object_detection", "full_name": "bm777/object_detection", "topics": ["object-detection", "python", "tensorflow", "opencv", "detection", "absl", "yolov3", "transfer-learning", "darknet", "graph-mode"], "description": "Implementatoin of object detection using Tensorflow 2.1.0 | this can be use in a car for object detection"}
{"name": "mpatacchiola/contextual-squeeze-and-excitation", "full_name": "mpatacchiola/contextual-squeeze-and-excitation", "topics": ["image-classification", "meta-learning", "pytorch", "transfer-learning", "deep-learning", "few-shot-learning", "paper", "squeeze-and-excitation", "squeeze-and-excitation-networks"], "description": "Official Pytorch implementation of the paper \"Contextual Squeeze-and-Excitation for Efficient Few-Shot Image Classification\" (NeurIPS 2022)"}
{"name": "yeyupiaoling/tensorflow-facerecognition", "full_name": "yeyupiaoling/Tensorflow-FaceRecognition", "topics": ["face-recognition", "tensorflow", "mtcnn", "mobilefacenet"], "description": "\u57fa\u4e8eMTCNN\u548cMobileFaceNet\u5b9e\u73b0\u7684\u4eba\u8138\u8bc6\u522b\uff0c\u63d0\u4f9b\u4e09\u79cd\u9884\u6d4b\u65b9\u5f0f\uff0c\u6ee1\u8db3\u5404\u79cd\u9700\u6c42 \u3002"}
{"name": "it4innovations/ercnn-drs_urban_change_monitoring", "full_name": "It4innovations/ERCNN-DRS_urban_change_monitoring", "topics": ["deep-learning", "remote-sensing", "satellite-imagery"], "description": "Neural Network based Urban Change Detection with Deep-Temporal Multispectral and SAR Remote Sensing Data."}
{"name": "stefanheng/symbolic-music-generation", "full_name": "StefanHeng/Symbolic-Music-Generation", "topics": ["nlp", "representation-learning", "music-generation", "music-xml", "midi", "melody-generation", "transformer", "transformer-decoder", "transformers-models", "melody-extraction", "autoregressive-models", "transformer-xl", "reformer"], "description": "Symbolic music generation taking inspiration from NLP and human composition process"}
{"name": "biano-ai/serving-compare-middleware", "full_name": "Biano-AI/serving-compare-middleware", "topics": ["tensorflow", "torchserve", "fastapi", "python", "triton-inference-server", "tensorflow-serving", "pytorch"], "description": "FastAPI middleware for comparing different ML model serving approaches"}
{"name": "arnavkj1995/vsg", "full_name": "arnavkj1995/VSG", "topics": ["deep-reinforcement-learning", "model-based-reinforcement-learning", "world-models", "deep-learning", "machine-learning", "research", "video-prediction"], "description": "Learning Robust Dynamics Through Variational Sparse Gating"}
{"name": "felixopolka/deep-gaussian-process", "full_name": "FelixOpolka/Deep-Gaussian-Process", "topics": ["bayesian-inference", "gpflow", "tensorflow", "deep-gaussian-processes", "gaussian-processes", "machine-learning"], "description": "\ud83e\udd3f Implementation of doubly stochastic deep Gaussian Process using GPflow and TensorFlow 2.0"}
{"name": "nrel/sup3r", "full_name": "NREL/sup3r", "topics": ["generative-adversarial-network", "machine-learning", "renewable-energy", "deep-learning", "climate-change", "climate-data", "solar-energy", "tensorflow", "wind-energy"], "description": "The Super Resolution for Renewable Resource Data (sup3r) software uses generative adversarial networks to create synthetic high-resolution wind and solar spatiotemporal data from coarse low-resolution inputs. "}
{"name": "andrew-zzz/tree-based-deep-model", "full_name": "andrew-zzz/tree-based-deep-model", "topics": [], "description": "it's the realization of Tree-based Deep Model with tensorflow"}
{"name": "linfeng93/large-unidet", "full_name": "linfeng93/Large-UniDet", "topics": ["mmdetection", "pytorch", "robust-vision", "universal-object-detection"], "description": "A practice for million-scale multi-domain universal object detection"}
{"name": "junqiangchen/lunglobesegmentation", "full_name": "junqiangchen/LungLobeSegmentation", "topics": ["tensorflow", "python", "lung", "lung-segmentation", "lobe", "vnet", "focal"], "description": "Lobe Segmentation"}
{"name": "ilias-ant/tf-notify", "full_name": "ilias-ant/tf-notify", "topics": ["callback", "keras", "notifications", "slack", "tensoflow", "telegram"], "description": "Want to get notified on the progress of your TensorFlow model training? Enter, a TensorFlow Keras callback to send notifications on the messaging app of your choice."}
{"name": "taesikgong/metasense_public", "full_name": "TaesikGong/MetaSense_public", "topics": ["dataset", "deep-learning", "human-activity-recognition", "machine-learning", "meta-learning"], "description": "The official PyTorch Implementation of MetaSense (MetaSense: Few-Shot Adaptation to Untrained Conditions in Deep Mobile Sensing, ACM SenSys '19)."}
{"name": "tensorops/transformerx", "full_name": "tensorops/TransformerX", "topics": ["attention", "attention-mechanism", "deep-learning", "transfomers", "vit", "xformers", "multihead-attention", "nlp", "self-attention", "transformers"], "description": "Flexible Python library providing building blocks (layers) for reproducible Transformers research (Tensorflow \u2705, Pytorch \ud83d\udd1c, and Jax \ud83d\udd1c)"}
{"name": "iwbn/flow-supervisor", "full_name": "iwbn/flow-supervisor", "topics": ["deep-learning", "optical-flow", "pytorch", "tensorflow2"], "description": "Semi-supervised optical flow network "}
{"name": "aggelos-michael-papadopoulos/mobilevit-impelmentation-and-training-in-tensorlow-and-pytorch", "full_name": "aggelos-michael-papadopoulos/MobileViT-implementation-and-training-in-Tensorlow-and-Pytorch", "topics": [], "description": "MobileViT Implementation in TensorFlow and Pytorch"}
{"name": "bszek213/cryptoml", "full_name": "bszek213/CryptoML", "topics": ["cryptocurrency", "deep-learning", "time-series-forecasting"], "description": "deep learning for time series cryptocurrency trading"}
{"name": "tillbeemelmanns/tfops-aug", "full_name": "TillBeemelmanns/tfops-aug", "topics": ["augmentation-policy", "google-autoaugment", "augmentation-methods", "augmentation-operation", "tf2", "augmentation-libraries", "keras"], "description": "TFOps-Aug: Implementation of policy-based image augmentation techniques based on TF2 Operations. All augmentations as efficient Tensorflow 2.11.0 operations. Easy integration into a tf.data API pipeline."}
{"name": "ytarazona/scikit-eo", "full_name": "ytarazona/scikit-eo", "topics": ["remote-sensing", "change-detection", "image-classification-algorithms", "time-series-analysis", "optical-imaging", "radar-imagery", "satellite-imagery", "earth-observation", "spectral-mixture-analysis", "deep-learning"], "description": "A Python package for Remote Sensing Tools"}
{"name": "tqch/ddpm-torch", "full_name": "tqch/ddpm-torch", "topics": ["ddpm", "deep-generative-models", "diffusion-models", "pytorch", "denoising-diffusion", "deep-learning"], "description": "Unofficial PyTorch Implementation of Denoising Diffusion Probabilistic Models (DDPM)"}
{"name": "vdutor/sphericalharmonics", "full_name": "vdutor/SphericalHarmonics", "topics": ["spherical-harmonics", "tensorflow", "pytorch", "jax"], "description": "Zonal Spherical Harmonics in d Dimensions in TensorFlow, PyTorch and Jax"}
{"name": "xai-demonstrator/xai-demonstrator", "full_name": "XAI-Demonstrator/xai-demonstrator", "topics": ["xai", "ai", "explainable-ai", "mobile-first", "pytorch", "huggingface-transformers", "fastapi", "vuejs", "machine-learning", "keras", "tensorflow", "docker"], "description": "The XAI Demonstrator is a modular platform that lets users interact with production-grade Explainable AI (XAI) systems."}
{"name": "kaist-dmlab/mg-tar", "full_name": "kaist-dmlab/MG-TAR", "topics": ["deep-learning", "graph-neural-networks", "traffic-accident-prediction", "data-mining", "dangerous-driving-offences"], "description": "[IEEE T-ITS] MG-TAR: Multi-view Graph Convolutional Networks for Traffic Accident Risk Prediction"}
{"name": "ramb0a/awesome-quantum-chemistry", "full_name": "twoXes/awesome-quantum-chemistry", "topics": ["neural-network", "electron-schroedinger-equation", "quantum", "ab-initio-solution"], "description": "Quantum Chemistry is awesome. Throw your textbook in the garbage, light the garbage can on fire, and blend the ashes into your cold brew almond milk latte and read this."}
{"name": "birdowl21/face-liveness-detection-anti-spoofing-web-app", "full_name": "birdowl21/Face-Liveness-Detection-Anti-Spoofing-Web-App", "topics": ["computer-vision", "deep-learning", "face-anti-spoofing", "face-antispoofing", "face-detection", "face-liveness-detection", "opencv", "streamlit", "streamlit-webapp", "tensorflow", "web-application", "webrtc"], "description": "An open-source Python web app to distinguish real faces from fake ones based on live camera feed"}
{"name": "alvinwan/nbdt-pytorch-image-models", "full_name": "alvinwan/nbdt-pytorch-image-models", "topics": ["pytorch", "neural-backed-decision-trees", "imagenet", "efficientnet"], "description": "Neural-Backed Decision Tree sample integration with pytorch-image-models"}
{"name": "hccho2/transformer_dateconversion", "full_name": "hccho2/Transformer_DateConversion", "topics": [], "description": "pytorch.nn.Transformer, torchtext, Tensorflow 2, Keras"}
{"name": "nikolasmarkou/blind_image_denoising", "full_name": "NikolasMarkou/blind_image_denoising", "topics": ["computer-vision", "deep-learning", "deep-neural-networks", "tensorflow", "machine-learning", "keras", "keras-tensorflow", "keras-neural-networks", "python", "denoise", "denoise-images", "denoising", "denoising-network", "neural-network", "convolutional-neural-networks", "denoiser", "denoiser-network", "bfcnn"], "description": "Implementing CVPR 2020 paper \"ROBUST AND INTERPRETABLE BLIND IMAGE DENOISING VIA BIAS - FREE CONVOLUTIONAL NEURAL NETWORKS\" "}
{"name": "osamhack2020/iot_covid19-detector_co-vision", "full_name": "osamhack2020/IoT_COVID19-Detector_CO-vision", "topics": ["iot", "osam", "raspberry-pi", "deep-learning", "opencv", "python", "flir-lepton", "tensorflow", "keras", "face-mask-detection", "telegram-bot"], "description": " Identify and Alert people at risk of COVID-19 infection in REAL-TIME using raspberry-pi."}
{"name": "deepraj1729/tchatbot", "full_name": "deepraj1729/TChatBot", "topics": ["machine-learning", "nlp", "nltk", "python3", "tensorflow", "pypi", "deep-learning", "artificial-intelligence", "neural-networks", "speech-recognition", "numpy", "virtual-environment", "pip", "conda", "sklearn", "git", "github", "framework", "chatbot-framework"], "description": "A ChatBot framework to create customizable all purpose Chatbots using NLP, Tensorflow, Speech Recognition "}
{"name": "tud-ccc/compy-learn", "full_name": "tud-ccc/compy-learn", "topics": ["ml4code", "clang", "llvm", "deep-learning", "graph-neural-networks", "recurrent-neural-networks", "llvm-ir", "abstract-syntax-tree"], "description": "ComPy-Learn is a framework for exploring program representations for ML4CODE tasks."}
{"name": "akhilesh64/image-segmentation-u-2-net", "full_name": "Akhilesh64/Image-Segmentation-U-2-Net", "topics": ["tensorflow", "keras", "convolutional-neural-networks", "object-detection", "segmentation", "salient-object-detection", "deep-learning", "u-2-net", "u2net", "image-segmentation"], "description": "Implementation of the paper \"U^2-Net: Going Deeper with Nested U-Structure for Salient Object Detection\" in TensorFlow."}
{"name": "minjunkang/dualpixelface", "full_name": "MinJunKang/DualPixelFace", "topics": ["deep-learning", "depth-estimation", "dual-pixel", "face-reconstruction", "normal-estimation"], "description": "Facial Depth and Normal Estimation using Dual-Pixel Camera (ECCV 22)"}
{"name": "jianningli/autoimplant", "full_name": "Jianningli/autoimplant", "topics": ["autoimplant", "skull", "cranioplasty", "shape-analysis", "deep-learning", "cranial-implant-design", "volumetric-shape-completion", "skull-reconstruction", "craniotomy"], "description": "A Baseline Approach for the AutoImplant Challenge"}
{"name": "keillernogueira/remote_sensing_segmentation", "full_name": "keillernogueira/remote_sensing_segmentation", "topics": ["neural-network", "convolutional-neural-networks", "segmentation", "semantic-segmentation", "remote-sensing"], "description": "Semantic segmentation for remote sensing images"}
{"name": "zxz7/zfundpredictor", "full_name": "ZxZ7/ZFundPredictor", "topics": ["lstm", "fund", "stock", "price-prediction", "web-scraping", "deep-learning"], "description": "A Fund Price Prediction Framework (LSTM-based, web scraping included) \u5929\u5929\u57fa\u91d1\u7f51\u722c\u866b+\u57fa\u91d1\u9884\u6d4b"}
{"name": "genbing99/softnet-spotme", "full_name": "genbing99/SoftNet-SpotME", "topics": ["deep-learning", "micro-expression", "spotting", "shallow-network", "optical-flow"], "description": "Shallow Optical Flow Three-Stream CNN For Macro and Micro-Expression Spotting From Long Videos"}
{"name": "habla-liaa/ser-with-w2v2", "full_name": "habla-liaa/ser-with-w2v2", "topics": ["speech-emotion-recognition", "wav2vec2", "deep-learning", "tensorflow", "speech"], "description": "Official implementation of INTERSPEECH 2021 paper 'Emotion Recognition from Speech Using Wav2vec 2.0 Embeddings'"}
{"name": "ghaiszaher/foggy-cyclegan", "full_name": "ghaiszaher/Foggy-CycleGAN", "topics": ["deep-learning", "cyclegan", "cyclegan-tensorflow", "image-processing", "generative-adversarial-network", "gan", "fog", "simulating-weather-conditions", "dissertation", "msc-thesis"], "description": "Fog Simulation using Generative Adversarial Networks (GAN). This code is the implementation of the master thesis Simulating Weather Conditions on Digital Images. It uses a modified CycleGAN model to synthesize fog on clear images."}
{"name": "zerohd4869/slk-ner", "full_name": "zerohd4869/SLK-NER", "topics": ["natural-language-processing", "named-entity-recognition"], "description": "Source code for SEKE 2020 paper \"SLK-NER: Exploiting Second-order Lexicon Knowledge for Chinese NER\""}
{"name": "bird-tao/clcrn", "full_name": "BIRD-TAO/CLCRN", "topics": ["aaai2022", "graph-neural-networks", "spatio-temporal", "spherical-geometry", "continuous-convolution", "meteorological-forecasting", "pytorch"], "description": "This is an official Pytorch implementation of Conditional Local Convolution for Spatio-temporal Meteorological Forecasting, AAAI 2022 "}
{"name": "icescentral/mask_public", "full_name": "icescentral/MASK_public", "topics": ["natural-language-processing", "named-entity-recognition", "de-identification", "anonymization"], "description": "Masking identifiable information from health related documents."}
{"name": "rahulmadanahalli/manifold_mixup", "full_name": "rahulmadanahalli/manifold_mixup", "topics": ["machine-learning", "research", "tensorflow", "deep-neural-networks", "regularization", "data-augmentation", "deep-learning"], "description": "Tensorflow implementation of the Manifold Mixup machine learning research paper"}
{"name": "klarh/geometric_algebra_attention", "full_name": "klarh/geometric_algebra_attention", "topics": [], "description": "Geometric algebra attention mechanism for tensorflow, keras, pytorch, and jax"}
{"name": "milmor/transgan", "full_name": "milmor/TransGAN", "topics": ["transformer", "gan", "transgan"], "description": " Implementation of Transformer-based GAN Model in Tensorflow"}
{"name": "sintefmedtek/gsi-rads", "full_name": "SINTEFMedtek/GSI-RADS", "topics": ["deep-learning", "image-registration", "atlas", "computer-aided-design", "software", "free-to-use", "radiology", "radiology-report"], "description": "Glioblastoma Surgery Imaging - Reporting And Data System (GSI-RADS)."}
{"name": "faresbs/san", "full_name": "faresbs/san", "topics": ["nlp", "gesture-recognition", "language-learning", "action-recognition", "deep-learning"], "description": "The official PyTorch implementation of \"Context Matters: Self-Attention for sign Language Recognition\""}
{"name": "tencentyouturesearch/basearchitecture-eat", "full_name": "TencentYoutuResearch/BaseArchitecture-EAT", "topics": [], "description": "Official pytorch implementation of the paper \"Analogous to Evolutionary Algorithm: Designing a Unified Sequence Model, NeurIPS'21\"."}
{"name": "russellsb/vc-vae-cycle-gan", "full_name": "RussellSB/tt-vae-gan", "topics": ["voice-conversion-gan", "speech", "timbre", "timbre-transfer", "music", "variational-autoencoder", "generative-adversarial-network"], "description": "Timbre transfer with variational autoencoding and cycle-consistent adversarial networks. Able to transfer the timbre of an audio source to that of another. "}
{"name": "nickkaparinos/openai-gym-projects", "full_name": "NickKaparinos/OpenAI-Gym-Projects", "topics": ["gym", "python", "deep-reinforcement-learning", "deep-learning", "tianshou", "stable-baselines3", "dqn", "sac", "mujoco", "mujoco-environments"], "description": "OpenAI Gym environment solutions using Deep Reinforcement Learning."}
{"name": "stefanpantic/asr", "full_name": "stefanpantic/asr", "topics": ["machine-learning", "automatic-speech-recognition", "jasper", "quartznet", "asr", "neural-networks", "python", "tensorflow", "librispeech", "common-voice"], "description": "Automatic speech recognition using neural networks"}
{"name": "isomap/factedit", "full_name": "isomap/factedit", "topics": ["acl2020", "data-to-text", "text-editing", "text-generation", "nlp", "natural-language-generation", "dataset", "table-to-text", "nlg"], "description": ":monocle_face: Code & Data for Fact-based Text Editing (Iso et al; ACL 2020)"}
{"name": "tpaul1611/python_tflite_for_amazonlinux", "full_name": "tpaul1611/python_tflite_for_amazonlinux", "topics": ["tensorflow-lite", "aws-lambda-python", "amazonlinux", "tflite", "tensorflow", "tensorflow-python", "dockerfile"], "description": "Python TensorFlow Lite (tflite) for amazonlinux/aws lambda."}
{"name": "csiro-robotics/locus", "full_name": "csiro-robotics/locus", "topics": ["slam", "place-recognition", "lidar", "point-cloud", "spatio-temporal", "deep-learning", "3d", "robotics"], "description": "This repository contains the code implementation used in the paper \"Locus: LiDAR-based Place Recognition using Spatiotemporal Higher-Order Pooling\". ICRA 2021."}
{"name": "muratali016/minecraft_ai_assistant", "full_name": "muratali016/Minecraft_AI_assistant", "topics": ["artificial-intelligence", "deep-learning", "machine-learning"], "description": "AI based assitant for minecarft"}
{"name": "startonai/cerbo", "full_name": "StartOnAI/Cerbo", "topics": ["deep-learning", "machine-learning", "python", "cerbo", "neural-network", "machine-learning-algorithms"], "description": "Perform Efficient ML/DL Modelling easily"}
{"name": "4ai/agn", "full_name": "4AI/AGN", "topics": ["bert", "nlp", "text-classification", "deep-learning"], "description": "Official Code for Merging Statistical Feature via Adaptive Gate for Improved Text Classification (AAAI2021)"}
{"name": "doyosae/deep_complex_unet", "full_name": "russellgeum/Phase-aware-Deep-Complex-UNet", "topics": ["deep-learning", "speech-enhancement", "complex-networks"], "description": "(NOT Official) Implementation DC-UNet (ICLR 2019)"}
{"name": "tatevkaren/convolutional-neural-network-image_recognition_case_study", "full_name": "TatevKaren/convolutional-neural-network-image_recognition_case_study", "topics": ["computer-vision", "image-recognition", "keras", "tensorflow", "cnn", "cnn-for-visual-recognition", "tensorflow-tutorials", "deep-learning", "machine-learning", "convolutional-neural-networks", "cnn-model", "python", "case-study", "prediction"], "description": "Computer Vision Case Study in image recognition to classify an image to a binary class, based on Convolutional Neural Networks (CNN), with TensorFlow and Keras in Python, to identify from an image whether it is an image of a dog or cat. (Includes: Data, Case Study Paper, Code)"}
{"name": "adumrewal/imagematting", "full_name": "adumrewal/imageMatting", "topics": ["deep-image-matting", "deep-learning", "deep-neural-networks", "model-training", "flexible-code", "foreground-segmentation", "foreground-detection", "foreground-background", "background-image", "foreground-extraction", "foreground-segmentation-network", "image-segmentation", "image-matting", "matting", "computer-vision", "background-subtraction", "background-removal"], "description": "Simplified Deep Image Matting training code with keras on tensorflow"}
{"name": "burnpiro/farm-animal-tracking", "full_name": "burnpiro/farm-animal-tracking", "topics": ["computer-vision", "tracking", "machine-learning", "tensorflow2", "siamese-network", "recognition", "detection", "deep-learning"], "description": "Farm Animal Tracking (FAT) "}
{"name": "ika-rwth-aachen/point-cloud-compression", "full_name": "ika-rwth-aachen/Point-Cloud-Compression", "topics": ["compression", "deep-compression", "pointcloud", "recurrent-neural-networks", "ros", "tensorflow"], "description": "Implements a deep RNN based Point Cloud Compression approach for Velodyne Point Clouds. Reference implementation of corresponding IEEE IV22 paper."}
{"name": "elmar999/snake-reinforcement-dnn", "full_name": "Elmar999/snake-reinforcement-DNN", "topics": ["neural-network", "snake-game", "deep-reinforcement-learning", "machine-learning", "deep-learning"], "description": "Developing a deep neural network to play a snake game"}
{"name": "1148330040/tensorflow-torch", "full_name": "1148330040/TensorFlow-Torch", "topics": [], "description": "tf&torch about nlp"}
{"name": "mr-talhailyas/tensorflow-keras-model-profiler", "full_name": "Mr-TalhaIlyas/Tensorflow-Keras-Model-Profiler", "topics": ["gpu", "tensorflow", "model-flops", "model-params", "gpu-memory-profiler"], "description": "Tensorflow-Keras Model Profiler: Tells you model's memory requirement, no. of parameters, flops etc."}
{"name": "hoangthang1607/nfnets-tensorflow-2", "full_name": "hoangthang1607/nfnets-Tensorflow-2", "topics": ["tensorflow2", "keras", "pretrained-weights", "deepmind", "image-classification", "nfnets", "sgd-adc", "weight-standardization"], "description": "Pre-trained NFNets with 99% of the accuracy of the official paper \"High-Performance Large-Scale Image Recognition Without Normalization\". "}
{"name": "abd-shoumik/face-mask-detector", "full_name": "abd-shoumik/Face-Mask-detector", "topics": ["mask", "facemask-detection", "deep-learning", "computer-vision", "face-mask", "face-mask-detector", "real-time-detection", "image-classification", "opencv", "keras"], "description": "It can detect face mask from images and real time videos.(VGG 16,OPENCV & KERAS)"}
{"name": "smousavi05/cred", "full_name": "smousavi05/CRED", "topics": ["deep-neural-networks", "lstm", "cnn", "earthquake", "detection", "stft", "resnet"], "description": "CRED: A deep residual network of convolutional and recurrent units for earthquake signal detection"}
{"name": "massanishi/document_similarity_algorithms_experiments", "full_name": "massanishi/document_similarity_algorithms_experiments", "topics": ["tf-idf", "jaccard", "algorithm", "universal-sentence-encoder", "bert", "document-similarity", "new-york-times", "deep-learning"], "description": "Document similarity algorithms experiment - Jaccard, TF-IDF, Doc2vec, USE, and BERT."}
{"name": "sakshi-choudhary/voice4rural", "full_name": "sakshi-choudhary/Voice4Rural", "topics": ["machine-learning", "artificial-intelligence", "deep-learning", "reactjs", "fastapi", "chartjs", "hackathon", "natural-language-processing", "tensorflow", "scikit-learn", "decision-trees", "mongodb", "pandas", "python", "javascript"], "description": "A complete one stop solution for all the problems of Rural area people. \ud83d\udc69\ud83c\udffb\u200d\ud83c\udf3e"}
{"name": "ameyajagtap/locally-adaptive-activation-functions-neural-networks-", "full_name": "AmeyaJagtap/Locally-Adaptive-Activation-Functions-Neural-Networks-", "topics": ["deep-learning"], "description": "Python codes for Locally Adaptive Activation Function (LAAF) used in deep neural networks.  Please cite this work as  \"A D Jagtap, K Kawaguchi, G E Karniadakis, Locally adaptive activation functions with slope recovery for deep and physics-informed neural networks, Proceedings of the Royal Society A: Mathematical, Physical and Engineering Sciences, 20200334, 2020. (http://dx.doi.org/10.1098/rspa.2020.0334)\". "}
{"name": "markub3327/rl-toolkit", "full_name": "markub3327/rl-toolkit", "topics": ["openai-gym", "tensorflow2", "sac", "reinforcement-learning", "rl-agents", "docker", "gsde", "rl-algorithms", "rl-toolkit", "ml", "soft-actor-critic", "wandb", "rl", "pybullet", "reverb", "truncated-quantile-critics", "tensorflow", "deep-learning"], "description": "RL-Toolkit: A Research Framework for Robotics"}
{"name": "kaist-dmlab/df-tar", "full_name": "kaist-dmlab/DF-TAR", "topics": ["deep-learning", "traffic-accident-prediction", "dangerous-driving-offences", "data-mining"], "description": "[WWW-21] DF-TAR: A Deep Fusion Network for Citywide Traffic Accident Risk Prediction with Dangerous Driving Behavior"}
{"name": "zhuty16/ges", "full_name": "zhuty16/GES", "topics": ["tensorflow", "gcn", "recommender-system", "sequential-recommendation"], "description": "This is our Tensorflow implementation for \"Graph-based Embedding Smoothing for Sequential Recommendation\" (GES) (TKDE, 2021)."}
{"name": "titu1994/tf_neural_deconvolution", "full_name": "titu1994/tf_neural_deconvolution", "topics": ["tensorflow2", "tensorflow", "keras"], "description": "Neural Deconvolutions in Tensorflow"}
{"name": "coder-nlper/gpt2-chinese-tf2", "full_name": "Coder-nlper/gpt2-chinese-tf2", "topics": [], "description": "chinese gpt2 for tensorflow2.0"}
{"name": "yudidong/channel_estimation_cgan", "full_name": "YudiDong/Channel_Estimation_cGAN", "topics": ["channel-estimation", "cgan", "generative-adversarial-network", "massive-mimo", "deep-learning", "one-bit"], "description": "Channel Estimation for One-Bit Multiuser Massive MIMO Using Conditional GAN"}
{"name": "yshen47/infinitenature-pytorch", "full_name": "yshen47/InfiniteNature-PyTorch", "topics": [], "description": "A pytorch version for infiniteNature"}
{"name": "relevanceai/relevanceai", "full_name": "RelevanceAI/RelevanceAI", "topics": ["python", "vector-database", "nlp", "search-engine", "embeddings", "vector-search", "clustering", "search", "unstructured-data", "computer-vision", "natural-language-processing"], "description": "Platform for unstructured data analysis"}
{"name": "thehunk1206/zero-dce", "full_name": "Thehunk1206/Zero-DCE", "topics": ["deep-curve-estimation", "low-light-image-enhancement", "zero-dce", "deep-neural-networks", "tensorflow", "keras", "zero-dce-lite", "depthwise-convolutions", "pointwise-convolution", "deep-learning"], "description": "Implementation of Research Paper \"Learning to Enhance Low-Light Image via Zero-Reference Deep Curve Estimation\""}
{"name": "meiyor/deep-learning-emotion-decoding-using-eeg-data-from-autism-individuals", "full_name": "meiyor/Deep-Learning-Emotion-Decoding-using-EEG-data-from-Autism-individuals", "topics": ["autism", "autism-spectrum-disorder", "cnn", "convolutional-neural-networks", "deep-learning"], "description": "Code for processing and managing data for EEG-based emotion recognition of individuals with and without Autism. EEG and other clinical data were collected in StonyBrook Social Competence Treatment Lab, for data request evaluation please contact professor Matthew D. Lerner matthew.lerner@stonybrook.edu"}
{"name": "xiaoxiao-woo/udl", "full_name": "XiaoXiao-Woo/UDL", "topics": [], "description": "a practicable Pytorch framework used in Deep Learning. So far UDL only provide DCFNet implementation for the ICCV paper (Dynamic Cross Feature Fusion for Remote Sensing Pansharpening)"}
{"name": "daixiangzi/mask-detection", "full_name": "daixiangzi/Mask-Detection", "topics": ["no-mask-dataset", "keras", "mask-detection", "unet", "segmentation"], "description": "we don't use any face maks dataset to complete face mask Detection"}
{"name": "wisnunugroho21/reinforcement_learning_phasic_policy_gradient", "full_name": "wisnunugroho21/reinforcement_learning_phasic_policy_gradient", "topics": ["reinforcement-learning", "phasic-policy-gradient", "proximal-policy-optimization", "ppo", "pytorch", "tensorflow2", "deep-learning"], "description": "Deep Reinforcement Learning by using Phasic Policy Gradient in Pytorch & Tensorflow"}
{"name": "shizenglin/unsharp-mask-guided-filtering", "full_name": "shizenglin/Unsharp-Mask-Guided-Filtering", "topics": ["filtering-algorithm", "deep-learning", "guided-image-filtering", "upsampling", "denoising"], "description": "Code for \"Unsharp Mask Guided Filtering, IEEE Transactions on Image Processing, 2021\""}
{"name": "aibharata/medicalai", "full_name": "aibharata/medicalAI", "topics": ["tensorflow2", "medical-imaging", "ai-framework", "medical-applications", "keras", "tensorflow", "pdf-report", "prediction"], "description": "Medical-AI is a AI framework specifically for Medical Applications https://aibharata.github.io/medicalAI/"}
{"name": "sicara/tf2-evonorm", "full_name": "sicara/tf2-evonorm", "topics": ["tensorflow", "keras", "deep-learning"], "description": "TensorFlow 2.0 implementation of Evonorm"}
{"name": "heytanay/nadl", "full_name": "heytanay/nadl", "topics": ["machine-learning", "deep-learning", "automatic-differentiation", "python"], "description": "A small framework that can perform automatic differentiation to calculate first-order gradients of numpy arrays."}
{"name": "cryu854/faststyle", "full_name": "cryu854/FastStyle", "topics": ["neural-networks", "style-transfer", "tensorflow2", "deep-learning", "keras", "tensorflow"], "description": "Fast-Style-Transfer in TensorFlow 2  :art:"}
{"name": "stas00/toolbox", "full_name": "stas00/toolbox", "topics": ["make", "python", "bash", "pytorch", "slurm"], "description": "Essential programming tools in my toolbox"}
{"name": "monatis/trfaq", "full_name": "monatis/trfaq", "topics": ["bert", "turkish", "faq", "semantic-search", "transformer", "answer-retrieval"], "description": "Question and answer retrieval in Turkish with BERT"}
{"name": "mlf-core/machine_learning_determinism_evaluation", "full_name": "mlf-core/machine_learning_determinism_evaluation", "topics": ["nextflow", "pytorch", "gpu", "cuda", "deeplearning"], "description": "GPU deterministic machine learning with Nextflow"}
{"name": "innovation-skyline-2020/gameinshape", "full_name": "Innovation-Skyline-2020/GameInShape", "topics": ["django", "python", "online-games", "deep-learning", "opencv", "aws", "js", "innovation"], "description": "An Innovative Gaming Platform that Integrates Digital Games with Physical Fitness."}
{"name": "dtischer/trdesign-motif", "full_name": "dtischer/trdesign-motif", "topics": ["protein-design", "deep-learning"], "description": "Codebase for our preprint using trRosetta to design proteins with discontinuous functional sites, found here: https://www.biorxiv.org/content/10.1101/2020.11.29.402743v1.abstract"}
{"name": "snehitvaddi/yolov3-object-tracking", "full_name": "snehitvaddi/YOLOv3-Object-Tracking", "topics": ["yolov3", "deep-learning", "machine-learning", "project", "btech", "final-year-project", "btech-project", "cse", "python", "programming", "object-detection"], "description": "Object tracking with YOLOv3, YOLOv3-tiny, Deep Sort and Tensorflow. This repository implements YOLOv3 and Deep SORT in order to perfrom real-time object tracking. "}
{"name": "zchuning/latco", "full_name": "zchuning/latco", "topics": ["reinforcement-learning", "deep-learning", "robotics"], "description": "Model-Based Reinforcement Learning via Latent-Space Collocation."}
{"name": "thudm/multilingual-glm", "full_name": "THUDM/Multilingual-GLM", "topics": ["deep-learning", "language-model", "nlp", "pytorch"], "description": "The multilingual variant of GLM, a general language model trained with autoregressive blank infilling objective "}
{"name": "cc-hpc-itwm/tarantella", "full_name": "cc-hpc-itwm/tarantella", "topics": ["deep-learning", "keras", "tensorflow"], "description": "An Open-Source Distributed Deep Learning Framework"}
{"name": "hezheug/vibration_gan", "full_name": "hezheug/vibration_gan", "topics": ["tensorflow", "gan", "deep-learning", "imbalanced-learning", "fault-classification", "generative-adversarial-network", "keras"], "description": "Implement GANs to generate time-series signals for imbalanced learning problem. The experiments are conducted using CWRU bearing data."}
{"name": "wangermeng2021/scaledyolov4-tensorflow2", "full_name": "wangermeng2021/Scaled-YOLOv4-tensorflow2", "topics": ["tensorflow2", "scaledyolov4", "yolov4", "object-detection", "yolo", "tf2", "tensorflow", "tensorflow-serving"], "description": "A Tensorflow2.x implementation of Scaled-YOLOv4 as described in Scaled-YOLOv4: Scaling Cross Stage Partial Network"}
{"name": "jerryschonenberg/cloudgan", "full_name": "JerrySchonenberg/CloudGAN", "topics": ["cloud-removal", "cloud-detection", "image-inpainting", "generative-adversarial-network", "tensorflow", "encoder-decoder"], "description": "CloudGAN: Detecting and removing clouds from satellite RGB-images"}
{"name": "oahunc/pyramidscalenetwork", "full_name": "daimuuc/PyramidScaleNetwork", "topics": ["crowd-counting", "pytorch", "pyramid-scale-network", "python"], "description": "To the best of our knowledge, this is the first work to explicitly address feature similarity issue in multi-column design. Extensive experiments on four challenging benchmarks (ShanghaiTech, UCF_CC_50, UCF-QNRF, and Mall) demonstrate the effectiveness of the proposed innovations as well as the superior performance over the state-of-the-art. More remarkably, our method can be easily applied to other existing multi-column models as a plug-in to significantly boost the performance to a large extent. "}
{"name": "xggiou/tensorflow_keras_to_caffe", "full_name": "xggIoU/tensorflow_keras_to_caffe", "topics": [], "description": "This script implements the tensorflow1.x and keras model into a caffe inference model."}
{"name": "terrytangyuan/public-talks", "full_name": "terrytangyuan/public-talks", "topics": ["machine-learning", "kubernetes", "deep-learning", "cloud-native", "gitops", "mlops", "public-speaking"], "description": "Slides, videos, and supporting files for my public talks"}
{"name": "jbris/time_series_anomaly_detection_examples", "full_name": "JBris/time_series_anomaly_detection_examples", "topics": ["time-series", "time-series-analysis", "anomaly-detection", "anomaly-detection-algorithm", "machine-learning", "machine-learning-algorithms", "python", "statistics", "docker", "telegraf", "influxdb", "grafana-influxdb", "grafana", "data-science", "tensorflow", "tensorflow-examples", "tensorflow-tutorials", "influxdb-grafana", "r", "rstudio"], "description": "Several examples of anomaly detection algorithms for time series data."}
{"name": "liang-hou/adcgan", "full_name": "liang-hou/adcgan", "topics": ["cgans", "icml-2022", "pytorch"], "description": "Conditional GANs with Auxiliary Discriminative Classifier (ICML 2022)"}
{"name": "domyounglee/transformer-summarization", "full_name": "domyounglee/Transformer-Summarization", "topics": ["summarization", "tensorflow", "abstractive-summarization", "abstractive-text-summarization", "transformer", "transformer-models"], "description": "An optimized Transformer based abstractive summarization model with Tensorflow"}
{"name": "tamannanazmin/face-mask-detection-based-door-lock-system", "full_name": "tamannanazmin/Face-Mask-Detection-Based-Door-Lock-System", "topics": ["cnn", "mobilenetv2", "arduino", "keras", "tensorflow", "imagenet", "imutils", "buzzer", "lcd", "opencv", "servo-motor"], "description": "A real time mask detection system to open and close the door"}
{"name": "vcampsoldiers/swin-transformer-tensorflow", "full_name": "VcampSoldiers/Swin-Transformer-Tensorflow", "topics": ["swin-transformer", "tensorflow", "object-detection", "tf2", "transformer", "tf"], "description": "Unofficial implementation of \"Swin Transformer: Hierarchical Vision Transformer using Shifted Windows\" (https://arxiv.org/abs/2103.14030)"}
{"name": "brianhill11/abpimputation", "full_name": "brianhill11/ABPImputation", "topics": ["blood-pressure", "physiological-signals", "physiological-waveforms", "waveforms", "deep-learning", "v-net", "machine-learning", "ecg", "ppg", "abp", "cnn", "physionet", "signal-processing", "photoplethysmogram", "arterial-blood-pressure"], "description": "Package for imputing the arterial blood pressure (ABP) waveform from non-invasive physiological waveforms (PPG & ECG) using a deep neural network "}
{"name": "covao/tatamiracer", "full_name": "covao/TatamiRacer", "topics": ["autonomous-vehicles", "autonomous-car", "autonomous-vehicle", "donkey-car", "self-driving-car", "raspberry-pi", "raspberrypi", "mini4wd", "tamiya-mini4wd", "deep-learning"], "description": "TatamiRacer is tiny autonomous driving car. It is based on TAMIYA MINI 4WD kit."}
{"name": "adalbertocq/adversarial-learning-of-cancer-tissue-representations", "full_name": "AdalbertoCq/Adversarial-learning-of-cancer-tissue-representations", "topics": ["histopathology", "gans", "representation-learning", "pathology-gan", "generative-adversarial-network"], "description": "Corresponding code of 'Quiros, A. C., Coudray, N., Yeaton, A., Sunhem, W., Murray-Smith, R., Tsirigos, A., Yuan, K. Adversarial learning of cancer tissue representations.  The 24th International Conference on Medical Image Computing and Computer-Assisted Intervention (MICCAI) 2021'"}
{"name": "shiming-chen/cde-gan", "full_name": "shiming-chen/CDE-GAN", "topics": ["generative-adversarial-network", "evolutionary-computation"], "description": "Official PyTorch Implementation of CDE-GAN (TEVC'21)"}
{"name": "bubbliiiing/yolact-keras", "full_name": "bubbliiiing/yolact-keras", "topics": [], "description": "\u8fd9\u662f\u4e00\u4e2ayolact-keras\u7684\u5e93\uff0c\u53ef\u7528\u4e8e\u8bad\u7ec3\u81ea\u5df1\u7684\u6570\u636e\u96c6"}
{"name": "jack-willturner/gymnastics", "full_name": "jack-willturner/gymnastics", "topics": ["neural-architecture-search", "pytorch", "deep-learning"], "description": "A \"gym\" style toolkit for building lightweight NAS systems. "}
{"name": "realvnf/deepcoord", "full_name": "RealVNF/DeepCoord", "topics": ["service-coordination", "deep-reinforcement-learning", "self-learning", "multi-objective", "optimization", "networking", "coordination", "ddpg", "tensorflow", "keras", "python", "research"], "description": "DeepCoord: Self-Learning Network and Service Coordination Using Deep Reinforcement Learning"}
{"name": "taehooie/cgchoicemodel", "full_name": "Taehooie/CGChoiceModel", "topics": ["graph-neural-networks", "machine-learning", "tensorflow"], "description": "Computational graph-based discrete choice models"}
{"name": "yester31/tensorrt_ex", "full_name": "yester31/TensorRT_EX", "topics": ["cuda", "tensorrt", "quantization", "ptq", "pytorch", "vgg", "resnet", "unet", "detr", "yolov5", "yolov6"], "description": "Deep Learning Model Optimization Using by TensorRT API, window"}
{"name": "dgriffiths3/finding-your-center", "full_name": "dgriffiths3/finding-your-center", "topics": ["deep-learning", "3d", "point-cloud", "3d-vision"], "description": "Public repository for paper \"Finding Your (3D) Center: 3D object detection using a learned loss\""}
{"name": "brendanxwhitaker/asta", "full_name": "langfield/asta", "topics": [], "description": "Shape annotations for numpy arrays and pytorch/tensorflow tensors."}
{"name": "stewy33/pong-with-policy-gradients", "full_name": "stewy33/pong-with-policy-gradients", "topics": ["reinforcement-learning", "policy-gradients", "pong", "pytorch", "rl-workshop", "tensorboard"], "description": "Code for an intro to RL workshop. You'll be training a simple agent to play pong using policy gradients. Adapted from http://karpathy.github.io/2016/05/31/rl/"}
{"name": "daigo0927/tf-raft", "full_name": "daigo0927/tf-raft", "topics": [], "description": "RAFT (Recurrent All Pairs Field Transforms for Optical Flow) implementation via tf.keras"}
{"name": "wilmerwang/scramble4gpu", "full_name": "wilmerwang/GPUSnatcher", "topics": ["pytorch", "tensorflow"], "description": "\u62a2\u5360\u663e\u5361"}
{"name": "zaccharieramzi/tf-slice-assign", "full_name": "zaccharieramzi/tf-slice-assign", "topics": ["tensorflow"], "description": "A tool for assignment to a slice in TensorFlow"}
{"name": "luuleitner/deepmtj", "full_name": "luuleitner/deepMTJ", "topics": ["gait-analysis", "deep-learning", "locomotion", "ultrasound-images", "feature-detection", "deepmtj"], "description": "Automatic muscle tendon junction tracking using deep learning \ud83e\uddb5\ud83c\udffc"}
{"name": "andreped/fast-stain-normalization", "full_name": "andreped/fast-stain-normalization", "topics": ["histopathology-images", "digital-pathology", "stain-normalization", "deep-learning", "cpp", "python", "computational-pathology", "fast", "torch", "tensorflow", "tensorflow2"], "description": ":star2: GPU-accelerated stain normalization command line tool"}
{"name": "includeamin/covid-19", "full_name": "includeamin/COVID-19", "topics": ["covid-19", "classification", "coronavirus", "covid-virus", "covid-data", "x-ray", "coronavirus-analysis", "tensorflow", "keras", "deep-learning", "docker", "python3", "python", "fastapi", "xray-image", "detection", "dataset", "label", "ct", "computer-vision"], "description": "detection of covid-19 from X-ray images Using keras and tensorflow"}
{"name": "sebastian-sz/efficientnet-v2-keras", "full_name": "sebastian-sz/efficientnet-v2-keras", "topics": ["tensorflow", "keras", "keras-application", "tensorflow-lite", "onnx", "onnxruntime", "tensorflow-models"], "description": "Efficientnet V2 adapted to Keras functional API."}
{"name": "kuangcaomvp/speech-recognize", "full_name": "kuangcaomvp/speech-recognize", "topics": [], "description": "transformer\u7684 encoder-decoder\u7ed3\u6784\u57fa\u4e8etensorflow\u5b9e\u73b0\u7684\u4e2d\u6587\u8bed\u97f3\u8bc6\u522b\u9879\u76ee"}
{"name": "jmribeiro/yaaf", "full_name": "jmribeiro/yaaf", "topics": ["autonomous-agents", "reinforcement-learning", "deep-learning"], "description": "Yet Another Agents Framework - An RL research-oriented framework for agent prototyping and evaluation"}
{"name": "wnma3mz/flearn", "full_name": "wnma3mz/flearn", "topics": ["deep-learning", "federated-learning", "ensemble-learning", "privacy-protection", "framework", "pytorch"], "description": "Federated Learning Framework"}
{"name": "rlturkiye/flying-cavalry", "full_name": "rlturkiye/flying-cavalry", "topics": ["reinforcement", "learning", "reinforcement-learning", "deep-learning", "ai", "path-planning", "motion-planning", "yapay-zeka", "derin-ogrenme"], "description": "Flying Cavalry Project - Ucan Kavalye Projesi "}
{"name": "llyx97/rosita", "full_name": "llyx97/Rosita", "topics": ["bert", "knowledge-distillation", "model-compression", "pytorch"], "description": "[AAAI 2021] \"ROSITA: Refined BERT cOmpreSsion with InTegrAted techniques\", Yuanxin Liu, Zheng Lin, Fengcheng Yuan"}
{"name": "junnyu/gau-alpha-pytorch", "full_name": "JunnYu/GAU-alpha-pytorch", "topics": [], "description": "GAU-alpha-pytorch"}
{"name": "nikolai10/swint-charm", "full_name": "Nikolai10/SwinT-ChARM", "topics": ["attention", "computer-vision", "neural-image-compression", "swin-transformer", "tensorflow"], "description": "TensorFlow implementation of SwinT-ChARM (Transformer-Based Transform Coding, ICLR 2022)"}
{"name": "liu2231665/taan-mtl", "full_name": "yingrliu/TAAN-MTL", "topics": ["multi-task-learning", "deep-neural-networks", "pytorch"], "description": "Adaptive Activation Network and Functional Regularization for Efficient and Flexible Deep Multi-Task Learning"}
{"name": "simeonedef/time-series_imaging_forecasting", "full_name": "Simeonedef/Time-Series_Imaging_Forecasting", "topics": ["time-series-forecasting", "tensorflow2", "conv-lstm", "holt-winter", "conv-mlp", "lstm-architecture", "series", "predictions", "convolutional-layers", "convolutional-lstm", "matplotlib", "deep-learning", "eth-zurich", "ethz"], "description": "In this project we have explored the use of imaging time series to enhance forecasting results with Neural Networks. The approach has revealed itself to be extremely promising as, both in combination with an LSTM architecture and without, it has out-performed the pure LSTM architecture by a solid margin within our test datasets."}
{"name": "coder-nlper/chinese-ner-tf2", "full_name": "Coder-nlper/chinese-ner-tf2", "topics": [], "description": "\u4e2d\u6587ner\u6a21\u578b\u4f7f\u7528tensorflow2.1\u6784\u5efa"}
{"name": "three0-s/mae-keras", "full_name": "three0-s/MAE-keras", "topics": [], "description": "Unofficial keras(tensorflow) implementation of MAE model from Masked Autoencoders Are Scalable Vision Learners "}
{"name": "kibromberihu/ai4elife", "full_name": "KibromBerihu/ai4elife", "topics": ["ai", "biomarkers", "data-analysis", "data-centric-ai", "deep-learning", "fdg-pet", "image-segmentation", "lymphoma", "medical-imaging", "pet", "survival-analysis", "whole-body-segmentation", "automated-pet-segmentation", "pet-ct-segmentation", "pet-segmentation"], "description": "This data-centric AI repository implements a robust deep learning method (LFBNet) for fully automated tumor segmentation in whole-body [18]F-FDG PET/CT images. "}
{"name": "feng-lab/pytorch-image-models", "full_name": "feng-lab/pytorch-image-models", "topics": [], "description": "Forked from https://github.com/rwightman/pytorch-image-models"}
{"name": "pmichel31415/p-dro", "full_name": "pmichel31415/P-DRO", "topics": ["machine-learning", "natural-language-processing", "dro"], "description": "Code for the papers \"Modeling the Second Player in Distributionally Robust Optimization\" and \"Distributionally Robust Models with Parametric Likelihood Ratios\""}
{"name": "lhao499/instructrl", "full_name": "lhao499/instructrl", "topics": ["flax", "instruction-following", "instructions", "jax", "machine-learning", "reinforcement-learning", "transformer", "vision-language-transformer"], "description": null}
{"name": "shamim-hussain/egt", "full_name": "shamim-hussain/egt", "topics": ["transformer", "graphs", "attention", "gnns", "graph-learning", "self-attention"], "description": "Edge-Augmented Graph Transformer"}
{"name": "julilien/labelrelaxation", "full_name": "julilien/LabelRelaxation", "topics": ["machine-learning", "deep-learning", "label-relaxation", "label-smoothing", "calibration", "regularization"], "description": "Supplementary material and code for the novel label relaxation approach as presented at AAAI21 by Julian Lienen and Eyke H\u00fcllermeier."}
{"name": "sagnik1511/u-net-reduced-with-tf-keras", "full_name": "sagnik1511/U-Net-Reduced-with-TF-keras", "topics": ["unet-image-segmentation", "keras-tensorflow", "biomedical-image-processing", "gpu-acceleration", "python3", "x-ray-images"], "description": "Complete U-net Implementation with keras"}
{"name": "dfki-av/pwoc-3d", "full_name": "dfki-av/pwoc-3d", "topics": ["tensorflow2", "computer-vision", "motion-estimation", "deep-learning", "stereo-vision"], "description": "Implementation of PWOC-3D network for end-to-end stereo scene flow estimation"}
{"name": "pocinnovation/sharkticon", "full_name": "PoCInnovation/Sharkticon", "topics": ["ids", "transformers", "tensorflow", "network", "ips", "anomaly-detection", "attention-mechanism", "http", "udp", "ai"], "description": "Sharkticon is an anomaly detection system, it analyzes your network using a Transformers model adapted to the anomaly detection."}
{"name": "ozora-ogino/lcnn", "full_name": "ozora-ogino/LCNN", "topics": ["deep-learning", "asvspoof"], "description": "Light CNN for ASVSpoof 2019 implemented on Tensorflow and Keras"}
{"name": "desklop/stressrnn", "full_name": "Desklop/StressRNN", "topics": ["nlp", "russian", "russian-stress", "russian-accent", "stress", "accent", "emphasis", "linguistics", "rnn", "lstm", "bilstm", "rustress", "russtress", "linguistic"], "description": "Modified version of RusStress (https://github.com/MashaPo/russtress) \u2014 python package for placing stress in Russian text using RNN (BiLSTM) and the \"Grammatical Dictionary\" by A. A. Zaliznyak (from http://odict.ru/)."}
{"name": "tatevkaren/artificial-neural-network-business_case_study", "full_name": "TatevKaren/artificial-neural-network-business_case_study", "topics": ["churn-analysis", "deep-learning", "ann-model", "artificial-neural-network", "case-study", "predictive-analytics", "prediction-model", "machine-learning", "data-science", "python3", "tensorflow-tutorials", "artificial-neural-networks", "ann", "bank-customers"], "description": "Business Case Study to predict customer churn rate based on Artificial Neural Network (ANN), with TensorFlow and Keras in Python. This is a customer churn analysis that contains training, testing, and evaluation of an ANN model. (Includes: Case Study Paper, Code)"}
{"name": "jlian2/cnn-lstm_wind_power_prediction", "full_name": "jlian2/Tensorflow-Wind-Power-Prediction", "topics": ["lstm", "cnn", "tensorflow", "deep-learning"], "description": "Release a public wind power dataset"}
{"name": "blackfeatherqq/facerecognition", "full_name": "BlackFeatherQQ/FaceRecognition", "topics": [], "description": "Using pytorch: yolov5+facenet+svm"}
{"name": "cortical-team/neko", "full_name": "cortical-team/neko", "topics": ["deep-learning", "neuromorphic-computing", "learning-algorithms"], "description": null}
{"name": "xuxy09/rawsr", "full_name": "xuxy09/RawSR", "topics": ["super-resolution", "deep-learning"], "description": "Exploiting raw images for real-scene super-resolution, TPAMI 2021"}
{"name": "ykotseruba/pedestrianactionbenchmark", "full_name": "ykotseruba/PedestrianActionBenchmark", "topics": ["action-prediction", "deep-learning", "benchmark", "jaad", "pie", "attention", "wacv2021"], "description": "Code and models for the WACV 2021 paper \"Benchmark for evaluating pedestrian action prediction\""}
{"name": "modelstreaming/ams", "full_name": "modelstreaming/ams", "topics": ["video-inference", "edge-inference", "real-time", "semantic-segmentation", "tensorflow", "knowledge-distillation"], "description": "Adaptive Model Streaming for real-time video inference on edge devices"}
{"name": "debbiemarkslab/mue", "full_name": "debbiemarkslab/MuE", "topics": ["biological-sequences", "probabilistic-programming", "proteins", "machine-learning", "tensorflow"], "description": "A package for making MuE observation models in Edward2."}
{"name": "yupeiyu98/drc", "full_name": "yuPeiyu98/DRC", "topics": ["unsupervised-learning", "segmentation", "neurips-2021", "pytorch"], "description": "[NeurIPS 2021] Unsupervised Foreground Extraction via Deep Region Competition"}
{"name": "ryanccc/yolo-series", "full_name": "RyanCCC/yolo-series", "topics": ["computer-vision", "deep-learning", "object-detection", "yolo", "object-tracking", "pytorch", "tensorflow"], "description": "YOLO\u7b97\u6cd5\u7684\u5b9e\u73b0"}
{"name": "denisbeslic/denovopipeline", "full_name": "denisbeslic/denovopipeline", "topics": ["denovo-assembly", "mass-spectrometry", "machine-learning", "peptide-identification", "pipeline", "pytorch", "tensorflow"], "description": "Pipeline for de novo peptide sequencing (Novor, DeepNovo, SMSNet, PointNovo, Casanovo) and assembly with ALPS."}
{"name": "gyunggyung/albert-text-classification", "full_name": "gyunggyung/ALBERT-Text-Classification", "topics": ["tensorflow", "tensorflow2", "bert", "bert-model", "bert-classifier", "classification", "albert", "text-classification"], "description": "ALBERT Text Classification Tensorflow, Resume Classification"}
{"name": "kuroko1t/nne", "full_name": "kuroko1t/nne", "topics": ["pytorch", "onnx", "tensorflow", "tensorrt", "torchscript"], "description": "convert a pytorch model to a model for edge device."}
{"name": "sagnik1511/u-net-reduced-with-keras", "full_name": "sagnik1511/U-Net-Reduced-with-TF-keras", "topics": ["unet-image-segmentation", "keras-tensorflow", "biomedical-image-processing", "gpu-acceleration", "python3", "x-ray-images"], "description": "Complete U-net Implementation with keras"}
{"name": "jrice15/physics-informed-autoencoders", "full_name": "JRice15/physics-informed-autoencoders", "topics": ["machine-learning", "physics-informed", "artificial-intelligence", "neural-network", "deep-learning"], "description": "Research project conducted at Pacific Northwest National Laboratory, exploring the use of physics-informed autoencoders to predict fluid flow dynamics"}
{"name": "nikhilroxtomar/retina-blood-vessel-segmentation-using-unet-in-tensorflow", "full_name": "nikhilroxtomar/Retina-Blood-Vessel-Segmentation-using-UNET-in-TensorFlow", "topics": ["tensorflow", "unet-image-segmentation", "unet-tensorflow", "unet-segmentation", "tensorflow-models"], "description": "This repository contains the code for the Retina Vessel Segmentation (DRIVE) using the UNET architecture in TensorFlow 2.0  "}
{"name": "sanjana7395/grape-disease-classification", "full_name": "Sanjana7395/Grape-disease-classification", "topics": ["ensemble-models", "majority-voting", "cnn", "augment-data", "random-forest", "svm", "stacked-prediction", "vgg16"], "description": "This project classifies diseases in grape plant using various Machine Learning classification algorithms."}
{"name": "pierresegonne/vinf", "full_name": "pierresegonne/VINF", "topics": ["variational-inference", "python3", "tensorflow", "distributions"], "description": "Repository for DTU Special Course, focusing on Variational Inference using Normalizing Flows (VINF). Supervised by Michael Riis Andersen"}
{"name": "georgeslabreche/opssat-smartcam", "full_name": "georgeslabreche/opssat-smartcam", "topics": ["spacecraft", "tensorflow2", "esa", "space", "ai", "artificial-intelligence", "neural-networks", "machine-learning", "kmeans", "k-means", "k-means-clustering", "kmeans-clustering", "image-classification", "image-clustering", "tensorflow-lite", "neural-network"], "description": "Artificial intelligence image classifier for the European Space Agency's OPS-SAT spacecraft. Neural network image classification model trained with TensorFlow2. Unsupervised learning with k-means for image clustering and image segmentation (feature extration). Geospatial awareness with the GEOS library."}
{"name": "cvxtz/sudoku_solver", "full_name": "CVxTz/sudoku_solver", "topics": ["sudoku-grid", "detector-model", "recognizer-model", "streamlit", "9x9-grids", "computer-vision", "keras"], "description": "Solving a Sudoku Puzzle from a screenshot"}
{"name": "bubbliiiing/yolov7-keras", "full_name": "bubbliiiing/yolov7-keras", "topics": [], "description": "\u8fd9\u662f\u4e00\u4e2ayolov7-keras\u7684\u6e90\u7801\uff0c\u53ef\u4ee5\u7528\u4e8e\u8bad\u7ec3\u81ea\u5df1\u7684\u6a21\u578b\u3002"}
{"name": "oke-aditya/pytorch_paper_implementations", "full_name": "oke-aditya/pytorch_paper_implementations", "topics": ["pytorch", "implementation-of-research-paper", "deep-learning", "deep-learning-papers"], "description": "Deep Learning Paper Implementations in PyTorch"}
{"name": "bluebrain/atlas-alignment", "full_name": "BlueBrain/atlas-alignment", "topics": ["machine-learning", "deep-learning", "computer-vision", "image-registration"], "description": "Blue Brain multi-modal registration and alignment toolbox"}
{"name": "aniketmaurya/tensorflow-fastapi-starter-pack", "full_name": "aniketmaurya/tensorflow-fastapi-starter-pack", "topics": ["fastapi", "tensorflow-web", "tensorflow", "machine-learning", "machinelearning", "swaggerui"], "description": "tensorflow web app starter pack"}
{"name": "lukashedegaard/datasetops", "full_name": "LukasHedegaard/datasetops", "topics": ["dataset-combinations", "data-science", "multiple-datasets", "pytorch", "tensorflow", "data-munging", "data-wrangling", "data-cleaning", "data-processing", "deep-learning", "dataset"], "description": "Fluent dataset operations, compatible with your favorite libraries"}
{"name": "radrumond/timehetnet", "full_name": "radrumond/timehetnet", "topics": ["deep-learning", "few-shot-learning", "machine-learning", "meta-learning", "paper", "time-series"], "description": "Learning complex time series forecasting models usually requires a large amount of data, as each model is trained from scratch for each task/data set. Leveraging learning experience with similar datasets is a well-established technique for classification problems called few-shot classification. However, existing approaches cannot be applied to time-series forecasting because i) multivariate time-series datasets have different channels and ii) forecasting is principally different from classification. In this paper we formalize the problem of few-shot forecasting of time-series with heterogeneous channels for the first time. Extending recent work on heterogeneous attributes in vector data, we develop a model composed of permutation-invariant deep set-blocks which incorporate a temporal embedding. We assemble the first meta-dataset of 40 multivariate time-series datasets and show through experiments that our model provides a good generalization, outperforming baselines carried over from simpler scenarios that either fail to learn across tasks or miss temporal information."}
{"name": "ma7555/nndpi", "full_name": "ma7555/nnDPI", "topics": ["deep-learning", "deep-neural-networks", "deep-packet-inspection", "tensorflow2", "tensorflow", "keras-tensorflow", "network-security"], "description": "High performance deep packet inspection AI model using neural networks with an embedding layer, 1D Convolution layers and bidirectional gated recurrent unit."}
{"name": "puneesh00/cs-mri-gan", "full_name": "puneesh00/cs-mri-gan", "topics": ["mri", "reconstruction", "compressive-sensing", "gan", "cvpr2020", "cvprw", "inverse-problems", "deep-learning", "cvpr"], "description": "Structure preserving Compressive Sensing MRI Reconstruction using Generative Adversarial Networks (CVPRW 2020)"}
{"name": "fk128/sarcopenia-ai", "full_name": "fk128/sarcopenia-ai", "topics": ["medical-image-analysis", "deep-learning", "ct-slice-detection", "muscle-estimation", "sarcopenia-assessment"], "description": "Code for paper Kanavati, F. et al. (2020). Fully-automated deep learning slice-based muscle estimation from CT images for sarcopenia assessment. arXiv preprint arXiv:2006.06432."}
{"name": "houliangict/adcgan", "full_name": "liang-hou/adcgan", "topics": ["cgans", "icml-2022", "pytorch"], "description": "Conditional GANs with Auxiliary Discriminative Classifier (ICML 2022)"}
{"name": "zhaogangthu/keras-yolo3-ocr-tensorrt", "full_name": "zhaogangthu/keras-yolo3-ocr-tensorrt", "topics": [], "description": "ocr with yolo3 as feature extractor, implemented by keras, and accelerated by tensorrt"}
{"name": "citlabrostock/citlab-article-separation-new", "full_name": "CITlabRostock/citlab-article-separation-new", "topics": ["article-separation", "image-segmentation", "gnn"], "description": "Modules used for separating articles in (historical) newspapers and similar documents. This repository is part of the European Union's Horizon 2020 project NewsEye. For more information about the project see https://www.newseye.eu/."}
{"name": "cyber-physical-systems/solarfinder", "full_name": "cyber-physical-systems/SolarFinder", "topics": ["deep-learning", "machine-learning", "solar-photovoltaic-arrays", "smart-home", "smart-cities", "solar-energy"], "description": "SolarFinder: Automatic Detection of Solar Photovoltaic Arrays."}
{"name": "paulaharder/hackathon-ci-2020", "full_name": "paulaharder/hackathon-ci-2020", "topics": ["deep-learning", "gans", "night-vision", "satellite-imagery"], "description": "Code from Hackathon CI2020"}
{"name": "franneck94/tensorcross", "full_name": "franneck94/TensorCross", "topics": ["cross-validation", "grid-search", "tensorflow-datasets", "tensorflow2", "random-search", "validation", "tensorflow", "gridsearchcv", "dataset", "python", "gridsearch"], "description": "Cross Validation, Grid Search and Random Search for TensorFlow 2 Datasets"}
{"name": "leputa/mann-meta-learning", "full_name": "Leputa/MANN-meta-learning", "topics": ["tensorflow", "meta-learning", "few-shot-learning", "neural-turing-machines", "memory-augmented-neural-networks"], "description": "A tensorflow implement of Memory-Augmented Neural Network"}
{"name": "debeshjha/nanonet", "full_name": "DebeshJha/NanoNet", "topics": ["unet", "medical-image-segmentation", "nanonets", "polyp-segmentation", "residual-networks", "squeeze-and-excitation", "python", "segmentation", "tensorflow", "capsule-endoscopy", "image-segmentation-tensorflow", "lightweight-framework", "lightweight-neural-network", "open-source-datasets", "semantic-segmentation"], "description": "NanoNet: Real-time medical Image segmentation architecture (IEEE CBMS)"}
{"name": "aim-harvard/deepcontrast", "full_name": "AIM-Harvard/DeepContrast", "topics": ["deep-learning", "cnn", "ct", "contrast-enhancement", "keras-tensorflow"], "description": "A deep learning-based fully-automatic intravenous contrast detection tool for head-and-neck and chest CT scans."}
{"name": "zqsong1997/avmfn-for-person-verification", "full_name": "ZQSong1997/AVMFN-For-Person-Verification", "topics": ["face-recognition", "feature-fusion", "pytorch", "voiceprint-recognition"], "description": "Bimodal Adaptive Feature Fusion Network for Person Verification"}
{"name": "chansoopark98/tensorflow-keras-semantic-segmentation", "full_name": "chansoopark98/Tensorflow-Keras-Semantic-Segmentation", "topics": ["binary-segmentation", "data-labeling", "keras", "keras-tensorflow", "lightweight", "opencv", "opencv-python", "realtime", "ros-melodic", "salient-object-detection", "semantic-segmentation", "tensorflow", "tensorflow2", "cityscapes", "ddrnet", "deeplabv3plus", "resnet", "pytorch"], "description": "Tensorflow-Keras semantic segmentation"}
{"name": "darkbiologist/retinal-vessel-segmentation-using-variants-of-unet", "full_name": "arkanivasarkar/Retinal-Vessel-Segmentation-using-variants-of-UNET", "topics": ["retinal-vessel-segmentation", "retinal-fundus-images", "computer-vision", "image-processing", "unet", "residual-unet", "attention-unet", "residual-attention-unet", "keras-tensorflow", "keras", "intersection-over-union", "jaccard-coefficient", "jaccard-loss", "patchwise-training"], "description": "Retinal vessel segmentation using U-NET, Res-UNET, Attention U-NET, and Residual Attention U-NET (RA-UNET)"}
{"name": "univiecube/deepnog", "full_name": "univieCUBE/deepnog", "topics": ["protein-sequences", "orthology-inference", "orthology-assignments", "deep-learning", "machine-learning"], "description": "Protein orthologous group assignment with deep learning"}
{"name": "milesgrey/emd", "full_name": "MilesGrey/emd", "topics": ["neural-networks", "earth-movers-distance", "loss-functions", "deep-learning"], "description": "An implementation of Squared Earth-Mover's Distance loss for Neural Networks."}
{"name": "jk96491/rl_algorithms", "full_name": "jk96491/RL_Algorithms", "topics": ["ppo", "a2c", "a3c", "ddpg", "dqn", "reinforce", "pytorch", "tensorflow"], "description": "Take the code of the reinforcement learning algorithm here~"}
{"name": "olgachernytska/super-resolution-with-fsrcnn", "full_name": "OlgaChernytska/Super-Resolution-with-FSRCNN", "topics": ["super-resolution", "deep-learning", "cnn", "tensorflow"], "description": "Implementation of the paper on Fast Super Resolution CNN"}
{"name": "rohith04mvk/brain-tumor-segmentation-and-classification", "full_name": "Rohith04MVK/Brain-Tumor-Segmentation-And-Classification", "topics": ["segmentation", "image-segmentation", "deep-learning", "medical-imaging", "hacktoberfest", "resunet"], "description": "Brain Tumor Segmentation And Classification using artificial intelligence"}
{"name": "ryoungj/optdom", "full_name": "ryoungj/optdom", "topics": ["python", "self-supervised-learning", "domain-generalization", "distribution-shift", "representation-learning", "pytorch", "machine-learning"], "description": "[ICLR'22] Self-supervised learning optimally robust representations for domain shift."}
{"name": "hsiaoliwei/chinese-advertisement-board-identification", "full_name": "HsiaoLiWei/Chinese-advertisement-board-identification", "topics": ["pytorch", "deep-learning", "yolov5", "text-recognition", "text-detection"], "description": "Chinese-Advertisement-Board-Identification.  We use YoloV5 to extract the ROI of the location of  the chinese word. Next, we sort the bounding box and recognize every chinese words which we extracted. The methods which we use are Yolov5, ArgMargin and Focal loss."}
{"name": "jamesdolezal/biscuit", "full_name": "jamesdolezal/biscuit", "topics": ["computational-pathology", "deep-learning", "histology", "machine-learning", "pathology", "whole-slide-imaging", "uncertainty-quantification"], "description": "Bayesian Inference of Slide-level Confidence via Uncertainty Index Thresholding"}
{"name": "benyaminzojaji/image_processing", "full_name": "BenyaminZojaji/image_processing", "topics": ["python", "opencv-python", "opencv", "numpy", "face-detection", "cnn", "image-processing", "matplotlib-pyplot", "computer-vision"], "description": "image-processing exercises."}
{"name": "momotoculteur/tooth-decay-semantic-segmentation", "full_name": "Momotoculteur/Tooth-decay-semantic-segmentation", "topics": ["tooth", "caries", "decay", "dental", "keras", "tensorflow", "image", "segmentation", "semantic", "health", "xray", "radio", "radiography", "unet", "unetplusplus", "bordeaux", "university", "chu", "numpy", "pandas"], "description": "Logiciel de d\u00e9tection, localisation & segmentation de carries sur des radiographies dentaires.  "}
{"name": "goruck/edge-tpu-train", "full_name": "goruck/edge-tpu-train", "topics": ["object-detection", "coral-tpu", "tensorflow"], "description": "Use the TensorFlow Object Detection API to train models for the Google Coral Edge TPU."}
{"name": "ptrckhmmr/deal", "full_name": "ptrckhmmr/DEAL", "topics": ["active-learning", "image-classification", "cnn", "uncertainty-neural-networks"], "description": "Code for \"Deal: Deep Evidential Active Learning for Image Classification\" (ICMLA 2020)"}
{"name": "ryanccc/yoloseries", "full_name": "RyanCCC/yolo-series", "topics": ["computer-vision", "deep-learning", "object-detection", "yolo", "object-tracking", "pytorch", "tensorflow"], "description": "YOLO\u7b97\u6cd5\u7684\u5b9e\u73b0"}
{"name": "dcharatan/point2mesh-reimplementation", "full_name": "dcharatan/point2mesh-reimplementation", "topics": ["reimplementation", "point2mesh", "tensorflow", "graphics", "mesh-processing", "meshes"], "description": "A reimplementation of Hanocka et al.'s paper Point2Mesh: A Self-Prior for Deformable Meshes for CSCI 1470: Deep Learning at Brown University."}
{"name": "akshaydnicator/twitter-sentiment-analysis-nlp-hackathon", "full_name": "akshaydnicator/Twitter-Sentiment-Analysis-NLP-Hackathon", "topics": ["twitter", "nlp", "hackathon", "analytics-vidhya", "pre-processing", "punctuation-marks", "lemmetization", "sentiment-analysis", "spacy", "bert-embeddings", "elmo-vectors", "features-extraction", "sklearn-library", "keras-tensorflow", "neural-networks", "machine-learning", "deep-learning", "cnn-classification", "cross-validation", "wordvectors"], "description": "Problem Statement: Given the tweets from customers about various tech firms who manufacture and sell mobiles, computers, laptops, etc, the task is to identify if the tweets have a negative sentiment towards such companies or products."}
{"name": "ngoquanghuy99/sentiment-classification-of-amazon-fine-food-reviews", "full_name": "ngoquanghuy99/Sentiment-classification-of-Amazon-fine-food-reviews", "topics": ["natural-language-processing", "deep-learning", "tensorflow", "sentiment-analysis", "text-classification", "keras", "glove"], "description": "A deep learning model (Bidirectional LSTM) using pretrained word embeddings to do sentiment analysis on Amazon fine food reviews dataset."}
{"name": "ahatamiz/dals", "full_name": "ahatamiz/dals", "topics": ["dals-framework", "lesion", "levelset", "dals", "tensorflow", "deep-active-lesion-segmentation", "deeplearning", "activecontours", "segmentation"], "description": "Official Repository for Deep Active Lesion Segmentation (DALS)"}
{"name": "slyautomation/osrs_yolov5", "full_name": "slyautomation/osrs_yolov5", "topics": ["cuda", "pytorch", "yolov5", "python", "pycharm", "osrs", "runescape", "botting", "machine-learning", "mlbot"], "description": "Yolov5 Object Detection In OSRS using Python code, Detecting Cows - Botting"}
{"name": "salesforce/pb-ovd", "full_name": "salesforce/PB-OVD", "topics": [], "description": "A pytorch Implementation of Open Vocabulary Object Detection with Pseudo Bounding-Box Labels"}
{"name": "rrbluke/cdec", "full_name": "rrbluke/CDEC", "topics": ["echocancellation", "speechenhancement", "tensorflow", "postfilter"], "description": "Cross-Domain Echo Controller"}
{"name": "stan-hua/cytoimagenet", "full_name": "stan-hua/CytoImageNet", "topics": ["dataset", "transfer-learning", "cytoimagenet", "deep-learning"], "description": "A large-scale pretraining dataset for bioimage transfer learning"}
{"name": "mehrdad-noori/cagnet", "full_name": "Mehrdad-Noori/CAGNet", "topics": ["tensorflow2", "keras", "deeplearning", "salient-object-detection", "saliency-detection", "segmentation"], "description": "CAGNet: Content-Aware Guidance for Salient Object Detection"}
{"name": "yihaosun1124/pytorch-mopo", "full_name": "yihaosun1124/pytorch-mopo", "topics": ["deep-reinforcement-learning", "pytorch", "offline", "deep-learning", "reinforcement-learning"], "description": "re-implementation of the offline model-based RL algorithm MOPO in pytorch"}
{"name": "zjunlp/promptkgc", "full_name": "zjunlp/PromptKG", "topics": ["knowledge-graph", "genkgc", "prompt-tuning", "relation-extraction", "link-prediction", "retrievalre", "demo-tuning", "pytorch", "promptkg", "retroprompt", "knowledge-informed-prompt-learning", "question-answering", "dialogue", "awsome-list", "paper-list", "retrieval-augmented", "lambdakg", "natural-language-processing", "nlp", "paper"], "description": "PromptKG Family: a Gallery of Prompt Learning & KG-related research works, toolkits, and paper-list."}
{"name": "benyaminzojaji/snake-ai", "full_name": "BenyaminZojaji/Snake-AI", "topics": ["snake-game", "tensorflow", "mlp", "python", "arcade-python"], "description": "An Artificial Intelligence snake game written in Python using Arcade library."}
