{"name":"wzhe06\/sparrowrecsys","full_name":"wzhe06\/SparrowRecSys","topics":["recommender-system","deep-learning","machine-learning"],"description":"A Deep Learning Recommender System"}
{"name":"zqpei\/dssd","full_name":"ZQPei\/DSSD","topics":["dssd","object-detection","one-stage","one-shot-object-detection"],"description":"Pytorch implementation of DSSD (Deconvolutional Single Shot Detector)"}
{"name":"guoshnbjtu\/astgcn-r-pytorch","full_name":"guoshnBJTU\/ASTGCN-r-pytorch","topics":[],"description":"Attention Based Spatial-Temporal Graph Convolutional Networks for Traffic Flow Forecasting, AAAI 2019, pytorch version"}
{"name":"seominseok0429\/label-smoothing-visualization-pytorch","full_name":"seominseok0429\/label-smoothing-visualization-pytorch","topics":[],"description":"When Does Label Smoothing Help?_pytorch_implementationimp"}
{"name":"suicao\/pytorch-audio-emotion-recognition","full_name":"suicao\/Pytorch-Audio-Emotion-Recognition","topics":["audio","sentiment-classification","cnn","pytorch"],"description":"1st Place Public Leaderboard Solution for ERC2019"}
{"name":"wxdang\/mscred","full_name":"wxdang\/MSCRED","topics":[],"description":"tensorflow implement the paper A Deep Neural Network for Unsupervised Anomaly Detection and Diagnosis in Multivariate Time Series Data "}
{"name":"kevinzakka\/torchsdf-fusion","full_name":"kevinzakka\/torchsdf-fusion","topics":["tsdf-fusion","pytorch","robotics","computer-vision"],"description":"Benchmarking PyTorch variants of TSDF fusion."}
{"name":"silentmoebuta\/simple_bert_for_tf2","full_name":"SilentMoebuta\/simple_bert_for_tf2","topics":[],"description":"Build bert as a keras layer using TF2.0 ."}
{"name":"liu-nlper\/dialogue-utterance-rewriter","full_name":"liu-nlper\/dialogue-utterance-rewriter","topics":["transformer","rewriter","bert","pointer","pointer-networks"],"description":"ACL 2019\u8bba\u6587\u590d\u73b0\uff1aImproving Multi-turn Dialogue Modelling with Utterance ReWriter"}
{"name":"monologuesmw\/bearing-fault-diagnosis-cnn","full_name":"monologuesmw\/bearing-fault-diagnosis-cnn","topics":["fault-diagnosis","siamese-neural-network","tensorflow","bearing-fault-diagnosis"],"description":"Siamese network for bearing fault diagnosis"}
{"name":"etetteh\/sota-data-augmentation-and-optimizers","full_name":"etetteh\/sota-data-augmentation-and-optimizers","topics":[],"description":"This repository contains some of the latest data augmentation techniques and optimizers for image classification using pytorch and the CIFAR10 dataset"}
{"name":"seominseok0429\/learning-loss-for-active-learning-pytorch","full_name":"seominseok0429\/Learning-Loss-for-Active-Learning-Pytorch","topics":[],"description":"Learning Loss for Active Learning Pytorch Implementation,(reproduction)"}
{"name":"cerebroai\/reformers","full_name":"cerebroai\/reformers","topics":["reformers","pytorch","tensorflow"],"description":"Efficient Transformers for research, PyTorch and Tensorflow using Locality Sensitive Hashing"}
{"name":"maciejczyzewski\/batchboost","full_name":"maciejczyzewski\/batchboost","topics":["deep-learning","machine-learning","pytorch"],"description":"batchboost is a variation on MixUp that instead of mixing just two images, mixes many images together."}
{"name":"leviborodenko\/dgcnn","full_name":"LeviBorodenko\/dgcnn","topics":["deep-learning","deep-neural-networks","graphical-models","graph-embedding","graph-classification","paper-implementations","gnn","attention-mechanism","graph-signals","dgcnn","graph-convolutions"],"description":"Clean & Documented TF2  implementation of \"An end-to-end deep learning architecture for graph classification\" (M. Zhang et al., 2018)."}
{"name":"banditml\/faucetml","full_name":"banditml\/faucetml","topics":["machine-learning","features","feature-engineering","bigquery","preprocessing","ml","pytorch"],"description":"High speed mini-batch data reading & preprocessing from BigQuery."}
{"name":"j911\/deeplabv3plus-for-beginners","full_name":"J911\/DeepLabV3Plus-for-Beginners","topics":["pytorch","deeplabv3plus","cityscapes","segmentation"],"description":"DeepLabV3Plus for Beginners in Cityscapes Dataset"}
{"name":"jingzhaozhang\/why-clipping-accelerates","full_name":"JingzhaoZhang\/why-clipping-accelerates","topics":[],"description":"A pytorch implementation for the LSTM experiments in the paper: Why Gradient Clipping Accelerates Training: A Theoretical Justification for Adaptivity"}
{"name":"leewise9\/segmentation-based-surface-defect-detection","full_name":"LeeWise9\/Segmentation-Based-Surface-Defect-Detection","topics":[],"description":"This is a deep learning application project in the industrial field, intended to detect defects on the workpiece surface. The code is based on keras and runs on GPU."}
{"name":"fmahoudeau\/shelfnet-human-pose-estimation","full_name":"fmahoudeau\/ShelfNet-Human-Pose-Estimation","topics":["human-pose-estimation","deep-learning","ms-coco","shelfnet","real-time","pytorch","keypoint-detection","keypoint-localization","ms-coco-keypoints","hrnet","human-pose-tracking"],"description":"Fast and accurate Human Pose Estimation using ShelfNet with PyTorch"}
{"name":"opium-sh\/prl","full_name":"opium-sh\/prl","topics":["reinforcement-learning","machine-learning","artificial-intelligence","deep-learning","neural-networks","openai-gym","opium-sh","python"],"description":"Open-source library for a reinforcement learning research."}
{"name":"sailordiary\/m3f.pytorch","full_name":"sailordiary\/m3f.pytorch","topics":["emotion-recognition","affective-computing","deep-learning"],"description":"PyTorch code for \"M\u00b3T: Multi-Modal Multi-Task Learning for Continuous Valence-Arousal Estimation\""}
{"name":"nlp-love\/introduction-nlp","full_name":"NLP-LOVE\/Introduction-NLP","topics":["nlp","mechine-learing","deep-learning","ai"],"description":"HanLP\u4f5c\u8005\u7684\u65b0\u4e66\u300a\u81ea\u7136\u8bed\u8a00\u5904\u7406\u5165\u95e8\u300b\u8be6\u7ec6\u7b14\u8bb0\uff01\u4e1a\u754c\u826f\u5fc3\u4e4b\u4f5c\uff0c\u4e66\u4e2d\u4e0d\u662f\u67af\u71e5\u65e0\u5473\u7684\u516c\u5f0f\u7f57\u5217\uff0c\u800c\u662f\u7528\u767d\u8bdd\u9610\u8ff0\u7684\u901a\u4fd7\u6613\u61c2\u7684\u7b97\u6cd5\u6a21\u578b\u3002\u4ece\u57fa\u672c\u6982\u5ff5\u51fa\u53d1\uff0c\u9010\u6b65\u4ecb\u7ecd\u4e2d\u6587\u5206\u8bcd\u3001\u8bcd\u6027\u6807\u6ce8\u3001\u547d\u540d\u5b9e\u4f53\u8bc6\u522b\u3001\u4fe1\u606f\u62bd\u53d6\u3001\u6587\u672c\u805a\u7c7b\u3001\u6587\u672c\u5206\u7c7b\u3001\u53e5\u6cd5\u5206\u6790\u8fd9\u51e0\u4e2a\u70ed\u95e8\u95ee\u9898\u7684\u7b97\u6cd5\u539f\u7406\u4e0e\u5de5\u7a0b\u5b9e\u73b0\u3002"}
{"name":"jia-zhuang\/pytorch-multi-gpu-training","full_name":"jia-zhuang\/pytorch-multi-gpu-training","topics":["pytorch","multi-gpu-training"],"description":"\u6574\u7406 pytorch \u5355\u673a\u591a GPU \u8bad\u7ec3\u65b9\u6cd5\u4e0e\u539f\u7406"}
{"name":"midasklr\/ssd.pytorch","full_name":"midasklr\/SSD.Pytorch","topics":[],"description":"Pytorch implementation of SSD512"}
{"name":"hibugs\/centernet","full_name":"HiBugs\/CenterNet","topics":["pytorch","centernet","face-detection","seaships-detection","centerface"],"description":"pytorch \u4f7f\u7528centernet\u8fdb\u884c \u4eba\u8138\u68c0\u6d4bFace Detection (bbox + landmark)\u3001 \u8239\u53ea\u68c0\u6d4bSeaShips Detection"}
{"name":"abishekvashok\/rep-counter","full_name":"abishekvashok\/Rep-Counter","topics":["tensorflow","deep-learning","machine-learning","repetition","repetion-counter","artificial-intelligence","neural-networks","rnn","rnn-tensorflow","posenet"],"description":"AI Exercise Rep Counter based on Google's Human Pose Estimation Library (Posenet)"}
{"name":"ansleliu\/efficientnet.pytorch","full_name":"linksense\/EfficientNet.PyTorch","topics":["efficientnet","efficient-model","efficient-inference","pytorch","efficientnet-pytorch","efficientnet-pretrained","efficientseg","imagenet","pretrained-weights"],"description":"Concise, Modular, Human-friendly PyTorch implementation of EfficientNet with Pre-trained Weights."}
{"name":"lonepatient\/bert-attribute-value-extract","full_name":"lonePatient\/BERT-Attribute-Value-Extract","topics":["pytorch","bert","attribute-value-extract","lstm","crf","attention"],"description":"A Pytorch implementation of \"Scaling Up Open Tagging from Tens to Thousands: Comprehension Empowered Attribute Value Extraction from Product Title\" (ACL 2019)."}
{"name":"pengjieren\/repeatnet-pytorch","full_name":"PengjieRen\/RepeatNet-pytorch","topics":[],"description":"This is a pytorch (>=1.3.0) implementation of RepeatNet"}
{"name":"imlhf\/se_dcunet","full_name":"IMLHF\/SE_DCUNet","topics":[],"description":"Deep Complex UNet for speech enhancement, init from \"https:\/\/github.com\/chanil1218\/DCUnet.pytorch\""}
{"name":"zzz1515151\/self-supervised_learning_sketch","full_name":"zzz1515151\/self-supervised_learning_sketch","topics":["self-supervised-learning","self-supervised","deep-learning","representation-learning","free-hand-sketch","sketch-recognition","sketch-retrieval","sketch-classificaton","temporal-convolutional-network","temporal-convolutions","rotnet"],"description":"self-supervised learning, deep learning, representation learning, RotNet, temporal convolutional network(TCN), deformation transformation, sketch pre-train, sketch classification, sketch retrieval, free-hand sketch,  official code of paper \"Deep Self-Supervised Representation Learning for Free-Hand Sketch\""}
{"name":"codingchaozhang\/yolov3_keras","full_name":"CodingChaozhang\/yolov3_keras","topics":[],"description":"yolo3-keras\u7684\u6e90\u7801"}
{"name":"slientge\/attrec","full_name":"slientGe\/AttRec","topics":["python","tensorflow","recommender-system"],"description":"TensorFlow simple implemenation of AttRec model in paper \"Next Item Recommendation with Self-Attention\""}
{"name":"antoinetheb\/rnn-rl","full_name":"AntoineTheb\/RNN-RL","topics":["reinforcement-learning","pytorch","recurrent-neural-networks"],"description":"Experiments with reinforcement learning and recurrent neural networks"}
{"name":"tangxianfeng\/pa-gnn","full_name":"tangxianfeng\/PA-GNN","topics":["machine-learning","meta-learning","graph-mining","adversarial-defense","deep-learning","neural-networks","graph-neural-networks"],"description":"Implementation of paper \"Transferring Robustness for Graph Neural Network Against Poisoning Attacks\"."}
{"name":"andrew-zzz\/tree-based-deep-model","full_name":"andrew-zzz\/tree-based-deep-model","topics":[],"description":"it's the realization of Tree-based Deep Model with tensorflow"}
{"name":"oelesin\/autogluon-tabular-sagemaker-container","full_name":"OElesin\/autogluon-tabular-sagemaker-container","topics":["sagemaker","autogluon","autogluon-mxnet","algorithm","ecr","deep-learning","automl"],"description":"Deploy automl models for tabular tasks on AWS Sagemaker with AutoGluon"}
{"name":"liu2231665\/taan-mtl","full_name":"yingrliu\/TAAN-MTL","topics":["multi-task-learning","deep-neural-networks","pytorch"],"description":"Adaptive Activation Network and Functional Regularization for Efficient and Flexible Deep Multi-Task Learning"}
{"name":"cluebenchmark\/cluedatasetsearch","full_name":"CLUEbenchmark\/CLUEDatasetSearch","topics":["nlp","datasets","chinese","ner","qa","match","text-classification","machine-translation","knowledge-graph","corpus","machine-reading-comprehension","sentiment-analysis","text-similarity","text-summarization"],"description":"\u641c\u7d22\u6240\u6709\u4e2d\u6587NLP\u6570\u636e\u96c6\uff0c\u9644\u5e38\u7528\u82f1\u6587NLP\u6570\u636e\u96c6"}
{"name":"whu-wxy\/non-local-u-nets-2d-block","full_name":"Whu-wxy\/Non-local-U-Nets-2D-block","topics":[],"description":"Inplement 2D global aggregation block of Non-local-U-Nets. Written in pytorch."}
{"name":"ainrichman\/peppa-facial-landmark-pytorch","full_name":"ainrichman\/Peppa-Facial-Landmark-PyTorch","topics":["face","landmark","landmarks","alignment","onnx","mnn","facial","pytorch"],"description":"Facial Landmark Detection based on PyTorch"}
{"name":"hanlard\/transformer-based-pretrained-model-for-event-extraction","full_name":"Hanlard\/Transformer-based-pretrained-model-for-event-extraction","topics":["event-extraction","transformer","bert","ace2005","muti-task"],"description":"\u4f7f\u7528\u57fa\u4e8eTransformer\u7684\u9884\u8bad\u7ec3\u6a21\u578b\u5728ACE2005\u6570\u636e\u96c6\u4e0a\u8fdb\u884c\u4e8b\u4ef6\u62bd\u53d6\u4efb\u52a1"}
{"name":"rick-mccoy\/reformer-pytorch","full_name":"Rick-McCoy\/Reformer-pytorch","topics":[],"description":"Implements Reformer: The Efficient Transformer in pytorch."}
{"name":"wangwenhao0716\/adapted-center-and-scale-prediction","full_name":"WangWenhao0716\/Adapted-Center-and-Scale-Prediction","topics":[],"description":"Pytorch implementation of \"Adapted Center and Scale Prediction: More stable and More Accurate\""}
{"name":"pputzky\/irim_fastmri","full_name":"pputzky\/irim_fastMRI","topics":["fastmri","inverse-problems","large-scale-learning","deep-learning","mri"],"description":"i-RIM applied to the fastMRI challenge data."}
{"name":"wangbq18\/distillation_model_keras_bert","full_name":"wangbq18\/distillation_model_keras_bert","topics":[],"description":"CNN\u3001BiLSTM\u3001Bert(3layers)\u5bf9Bert(12layers)\u6a21\u578b\u7684\u84b8\u998f\u7684keras\u5b9e\u73b0"}
{"name":"aiff22\/pynet-pytorch","full_name":"aiff22\/PyNET-PyTorch","topics":["pynet","pytorch-implementation","image-enhancement","image-processing","image-reconstruction","deep-learning","raw-to-rgb","computer-vision","mobile","photography","isp","camera","image-to-image-translation","raw","photos"],"description":"Generating RGB photos from RAW image files with PyNET (PyTorch)"}
{"name":"waterzxj\/unf","full_name":"waterzxj\/UNF","topics":["pytorch","text-classification","sequence-labeling","torchtext"],"description":"UNF(Universal NLP Framework)"}
{"name":"snakers4\/russian_stt_text_normalization","full_name":"snakers4\/russian_stt_text_normalization","topics":["speech","russian-language","python3","pytorch","torchscript","text-normalization","speech-to-text"],"description":"Russian text normalization pipeline for speech-to-text and other applications based on tagging s2s networks"}
{"name":"zhengyima\/ncov_sentiment","full_name":"zhengyima\/ncov_sentiment","topics":["tensorflow","bert","fine-tuning","nlp","python","sentiment-analysis","sentiment-classification","bert-chinese","deep-learning","datafountain","machine-learning","nerual-network"],"description":"\u75ab\u60c5\u671f\u95f4\u7f51\u6c11\u60c5\u7eea\u8bc6\u522b\u6bd4\u8d5bbaseline\uff0c\u4f7f\u7528BERT\u8fdb\u884c\u7aef\u5230\u7aef\u7684fine-tuning\uff0cdatafountain\u5e73\u53f0\uff0c\u5e73\u53f0\u8bc4\u6d4bF1\u503c0.716\u3002"}
{"name":"fmu2\/gradfeat20","full_name":"fmu2\/gradfeat20","topics":["deep-learning","representation-learning","transfer-learning"],"description":"Gradients as Features for Deep Representation Learning"}
{"name":"sfme\/rvae_mixedtypes","full_name":"sfme\/RVAE_MixedTypes","topics":["outlier-detection","robust-variational-autoencoders","repair","tabular-data","deep-learning","generative-model","data-analysis","unsupervised-learning","pytorch","python"],"description":"Repository for code release of paper \"Robust Variational Autoencoders for Outlier Detection and Repair of Mixed-Type Data\" (AISTATS 2020)"}
{"name":"hiredscorelabs\/seqtolang","full_name":"hiredscorelabs\/seqtolang","topics":["machine-learning","deep-learning","natural-language-processing","language-identification"],"description":"Multi-Langauge Identification"}
{"name":"eazydammy\/violence-detection-with-c3d","full_name":"eazydammy\/violence-detection-with-C3D","topics":["c3d","convolutional-neural-networks","classification","deep-learning","computer-vision","edge-computing","intel","violence-detection"],"description":"Violence Detection using 3D Convolutional Neural Networks"}
{"name":"walsvid\/generation3d","full_name":"walsvid\/Generation3D","topics":["3d-reconstruction","deep-learning","shape-generation","3d-deep-learning","disn","pixel2mesh"],"description":" 3D Shape Generation Baselines in PyTorch."}
{"name":"daixiangzi\/mask-detection","full_name":"daixiangzi\/Mask-Detection","topics":["no-mask-dataset","keras","mask-detection","unet","segmentation"],"description":"we don't use any face maks dataset to complete face mask Detection"}
{"name":"jhultman\/vision3d","full_name":"jhultman\/vision3d","topics":["3d-deep-learning","object-detection","lidar","point-cloud","pytorch","voxel","detection","codebase","perception","autonomous-vehicles","real-time"],"description":"Research platform for 3D object detection in PyTorch."}
{"name":"shilrley6\/faster-r-cnn-with-model-pretrained-on-visual-genome","full_name":"shilrley6\/Faster-R-CNN-with-model-pretrained-on-Visual-Genome","topics":[],"description":"Faster RCNN model in Pytorch version, pretrained on the Visual Genome with ResNet 101"}
{"name":"alldbi\/supermix","full_name":"alldbi\/SuperMix","topics":["pytorch","augmentation","supervised","deep-learning","saliency-detection","distillation","cvpr2021"],"description":"Pytorch implementation of CVPR2021 paper: SuperMix: Supervising the Mixing Data Augmentation"}
{"name":"mohammadkhalifa\/xlm-roberta-ner","full_name":"mukhal\/xlm-roberta-ner","topics":["named-entity-recognition","roberta","nlp","nlp-machine-learning","transfer-learning","sequence-labeling","part-of-speech-tagging"],"description":"Named Entity Recognition with Pretrained XLM-RoBERTa"}
{"name":"hexops\/azure-kinect-python","full_name":"hexops\/Azure-Kinect-Python","topics":["python","python3","azure","kinect","k4a","k4abt","azure-kinect","azure-kinect-sdk","opencv","deep-learning","azure-kinect-dk","body-tracking","mocap"],"description":"Python 3 bindings for the Azure Kinect SDK"}
{"name":"610265158\/face_landmark_pytorch","full_name":"610265158\/face_landmark_pytorch","topics":[],"description":"pytorch face_landmark"}
{"name":"kenneth111\/transformerdemo","full_name":"Kenneth111\/TransformerDemo","topics":[],"description":"Pytorch nn.Transformer Demo"}
{"name":"sthalles\/simclr-tensorflow","full_name":"sthalles\/SimCLR-tensorflow","topics":["tensorflow","contrastive-loss","contrastive-learning","simclr","representation-learning","unsupervised-learning","self-supervised-learning"],"description":"TensorFlow Implementation of SimCLR: A Simple Framework for Contrastive Learning of Visual Representations"}
{"name":"fendouai\/opencvtutorials","full_name":"fendouai\/OpenCVTutorials","topics":["opencv","machine-learning","computer-vision","deep-learning","object-detection","opencv-python","python"],"description":"OpenCV-Python4.1 \u4e2d\u6587\u6587\u6863"}
{"name":"majumderb\/rezero","full_name":"majumderb\/rezero","topics":["pytroch","transformer","resnet","language-modeling","deep-neural-networks"],"description":"Official PyTorch Repo for \"ReZero is All You Need: Fast Convergence at Large Depth\""}
{"name":"zhaogaofeng611\/textmatch","full_name":"zhaogaofeng611\/TextMatch","topics":[],"description":"\u57fa\u4e8ePytorch\u7684\uff0c\u4e2d\u6587\u8bed\u4e49\u76f8\u4f3c\u5ea6\u5339\u914d\u6a21\u578b\uff08ABCNN\u3001Albert\u3001Bert\u3001BIMPM\u3001DecomposableAttention\u3001DistilBert\u3001ESIM\u3001RE2\u3001Roberta\u3001SiaGRU\u3001XlNet\uff09"}
{"name":"peijiyang\/bert-bilstm-crf-ner-pytorch","full_name":"hertz-pj\/BERT-BiLSTM-CRF-NER-pytorch","topics":["named-entity-recognition","chinese","pytorch","bert","bilstm-crf"],"description":"Pytorch BERT-BiLSTM-CRF For NER"}
{"name":"lbin\/centernet-better-plus","full_name":"lbin\/CenterNet-better-plus","topics":["centernet","detectron2","pytorch"],"description":"centernet"}
{"name":"bestburning\/mhxy","full_name":"BestBurning\/mhxy","topics":["tensorflow2","python","kmclass","opencv","tensorflow"],"description":"tensorflow\u5b9e\u8df5\uff1a\u68a6\u5e7b\u897f\u6e38\u4eba\u7269\u5f39\u7a97\u8bc6\u522b"}
{"name":"hysts\/pytorch_mpiigaze_demo","full_name":"hysts\/pytorch_mpiigaze_demo","topics":["computer-vision","gaze-estimation","gaze","pytorch"],"description":"Gaze estimation using MPIIGaze and MPIIFaceGaze"}
{"name":"simon3dv\/frustum_pointnets_pytorch","full_name":"simon3dv\/frustum_pointnets_pytorch","topics":[],"description":"A pytorch version of frustum-pointnets"}
{"name":"prunetruong\/glampoints_pytorch","full_name":"PruneTruong\/GLAMpoints_pytorch","topics":[],"description":"Official Pytorch implementation of GLAMpoints "}
{"name":"guoyi0\/alphafive","full_name":"GuoYi0\/alphaFive","topics":["alphago","alphago-zero","alphazero","gomoku","reinforcement-learning","tensorflow","gobang"],"description":"alphaGo\u7248\u672c\u7684\u4e94\u5b50\u68cb(gobang, gomoku)"}
{"name":"hanyoseob\/pytorch-noise2void","full_name":"hanyoseob\/pytorch-noise2void","topics":["deep-learning","deep-neural-networks","unsupervised-learning","noise2void","cnn","pytorch-gan"],"description":"Noise2Void - Learning Denoising from Single Noisy Images"}
{"name":"longmaoteamtf\/keras_ernie","full_name":"LongmaoTeamTf\/keras_ernie","topics":["ernie","keras","machine-learning"],"description":"Pre-trained ERNIE models could be loaded with Keras for feature extraction and prediction."}
{"name":"mxl1990\/tsne-pytorch","full_name":"mxl1990\/tsne-pytorch","topics":["tsne","tsne-algorithm","tsne-cuda","tsne-visualization","pytorch"],"description":"Pytorch implementation for t-SNE with cuda to accelerate"}
{"name":"junqi-zhang\/aetn","full_name":"Junqi-Zhang\/AETN","topics":["python","tensorflow","estimator","transformer"],"description":"The implementation of the AutoEncoder-coupled Transformer Network by TensorFlow"}
{"name":"szq0214\/cmc_with_image_mixture","full_name":"szq0214\/CMC_with_Image_Mixture","topics":[],"description":"pytorch implementation of \"Contrastive Multiview Coding\", \"Momentum Contrast for Unsupervised Visual Representation Learning\", and \"Unsupervised Feature Learning via Non-Parametric Instance-level Discrimination\""}
{"name":"xggiou\/tensorflow_keras_to_caffe","full_name":"xggIoU\/tensorflow_keras_to_caffe","topics":[],"description":"This script implements the tensorflow1.x and keras model into a caffe inference model."}
{"name":"ansleliu\/mixnet-pytorch","full_name":"linksense\/MixNet-PyTorch","topics":["mixnet","mixnets","pytorch","efficient-model","efficientnet","image-classification","mixnet-pytorch","mixseg","bifpn","lightnet"],"description":"Concise, Modular, Human-friendly PyTorch implementation of MixNet with Pre-trained Weights."}
{"name":"dsgiitr\/audio-super-resolution","full_name":"dsgiitr\/Audio-Super-Resolution","topics":["pytorch","super-resolution","deep-learning"],"description":"Enhancment of Audio Quality (Bit-Depth and Sampling-Rate) using Deep Learning. "}
{"name":"a-lincui\/adversarial_patch_attack","full_name":"A-LinCui\/Adversarial_Patch_Attack","topics":[],"description":"Pytorch implementation of Adversarial Patch on ImageNet (arXiv: https:\/\/arxiv.org\/abs\/1712.09665)"}
{"name":"dongwuuu\/covid-19-classification","full_name":"dongwuuu\/COVID-19-Classification","topics":["ncp","covid-19","classification","cnn","deep-learning","medical-images"],"description":"COVID-19  NCP CNN classification medical image"}
{"name":"jlian2\/cnn-lstm_wind_power_prediction","full_name":"jlian2\/Tensorflow-Wind-Power-Prediction","topics":["lstm","cnn","tensorflow","deep-learning"],"description":"Release a public wind power dataset"}
{"name":"cheind\/pytorch-debayer","full_name":"cheind\/pytorch-debayer","topics":["debayer","demosaicing","bayer","bayer-filter-array","pytorch","convolution"],"description":"Convolutional PyTorch debayering \/ demosaicing layers"}
{"name":"cyril-sterling\/evflownet-pytorch","full_name":"Cyril-Sterling\/EVFlowNet-pytorch","topics":[],"description":"EVFlowNet in pytorch"}
{"name":"youngwanlee\/vovnet-detectron2","full_name":"youngwanLEE\/vovnet-detectron2","topics":["vovnet","detectron2","object-detection","instance-segmentation","pytorch","panoptic-segmentation","cvpr2020"],"description":"VoVNet backbone networks for detectron2, in CVPR 2020"}
{"name":"bl0\/moco","full_name":"bl0\/moco","topics":["unsupervised-learning","self-supervised-learning","pytorch","imagenet","resnet-50","moco","contrast-learning","momentum-contrast"],"description":"Unofficial implementation with pytorch DistributedDataParallel for \"MoCo: Momentum Contrast for Unsupervised Visual Representation Learning\""}
{"name":"xiongma\/roberta-wwm-base-distill","full_name":"xiongma\/roberta-wwm-base-distill","topics":["bert","pretrained-models","roberta","tensorflow","natural-language-processing","distillation"],"description":"this is roberta wwm base distilled model which was distilled from roberta wwm  by roberta wwm large"}
{"name":"chunyuwang\/imu-human-pose-pytorch","full_name":"CHUNYUWANG\/imu-human-pose-pytorch","topics":[],"description":"This is an official Pytorch implementation of \"Fusing Wearable IMUs with Multi-View Images for Human Pose Estimation: A Geometric Approach, CVPR 2020\". "}
{"name":"bubbliiiing\/seq2seq-keras","full_name":"bubbliiiing\/seq2seq-keras","topics":[],"description":"\u8fd9\u662f\u4e00\u4e2a\u5229\u7528keras\u5b9e\u73b0seq2seq\u6a21\u578b\u7684\u4ed3\u5e93\uff0c\u5927\u5bb6\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u4ed3\u5e93\u5b66\u4e60\u5230\u8bb8\u591a\u7684seq2seq\u7684\u4f8b\u5b50"}
{"name":"human-analysis\/muxconv","full_name":"human-analysis\/MUXConv","topics":[],"description":"MUXConv: Information Multiplexing in Convolutional Neural Networks (CVPR '20), Pytorch Implementation"}
{"name":"hpc203\/facemaskdetection-dnn","full_name":"hpc203\/FaceMaskDetection-dnn","topics":["opencv","dnn","facemask-detection","deep-learning"],"description":"\u7528opencv\u7684dnn\u6a21\u5757\u5b9e\u73b0\u4eba\u8138\u53e3\u7f69\u68c0\u6d4b\uff0c\u5305\u542bC++\u548cPython\u4e24\u79cd\u7248\u672c\u7684\u5b9e\u73b0"}
{"name":"fabio-deep\/rezero-resnet","full_name":"fabio-deep\/ReZero-ResNet","topics":["resnet","rezero","deep-learning","deep-neural-networks","residual-networks","pytorch","cifar10","python","machine-learning"],"description":"Unofficial pytorch implementation of ReZero in ResNet"}
{"name":"charlesdong1991\/hackerbert","full_name":"charlesdong1991\/HackerBERT","topics":["elasticsearch","bert","bert-embeddings","hacker-news","docker","docker-compose","nlp","flask"],"description":"A showcase of combining Elasticsearch with BERT on the HackerNews public data"}
{"name":"gyunggyung\/albert-text-classification","full_name":"gyunggyung\/ALBERT-Text-Classification","topics":["tensorflow","tensorflow2","bert","bert-model","bert-classifier","classification","albert","text-classification"],"description":"ALBERT Text Classification Tensorflow, Resume Classification"}
{"name":"uvipen\/tetris-deep-q-learning-pytorch","full_name":"uvipen\/Tetris-deep-Q-learning-pytorch","topics":["reinforcement-learning","deep-q-network","deep-q-learning","pytorch","cv2"],"description":"Deep Q-learning for playing tetris game"}
{"name":"fuy34\/superpixel_fcn","full_name":"fuy34\/superpixel_fcn","topics":["superpixel","deep-learning","pytorch"],"description":"[CVPR\u201820] SpixelFCN: Superpixel Segmentation with Fully Convolutional Network"}
{"name":"svip-lab\/fastmvsnet","full_name":"svip-lab\/FastMVSNet","topics":["pytorch","cvpr2020","multi-view-stereo"],"description":"[CVPR'20] Fast-MVSNet: Sparse-to-Dense Multi-View Stereo With Learned Propagation and Gauss-Newton Refinement"}
{"name":"leijue222\/portrait-matting-unet-flask","full_name":"leijue222\/portrait-matting-unet-flask","topics":["pytorch","matting","segmentation","flask","portrait"],"description":"Portrait Mating  implementation in UNet with PyTorch."}
{"name":"qianjinhao\/circle-loss","full_name":"qianjinhao\/circle-loss","topics":[],"description":"Circleloss pytorch version"}
{"name":"dr-costas\/dnd-sed","full_name":"dr-costas\/dnd-sed","topics":["sound-event-detection","depthwise-separable-convolutions","dilated-convolution","depthwiseseparableconvolution","dilated-cnn","audio-signal-processing","machine-listening","deep-learning","deep-neural-networks","machine-learning"],"description":"Sound event detection with depthwise separable and dilated convolutions. "}
{"name":"habout632\/stargan2","full_name":"habout632\/StarGAN2","topics":[],"description":"Unofficial Pytorch version StarGAN v2"}
{"name":"adrienchaton\/perceptualaudio_pytorch","full_name":"adrienchaton\/PerceptualAudio_Pytorch","topics":[],"description":"Pytorch implementation of \"A Differentiable Perceptual Audio Metric Learned from Just Noticeable Differences\", Pranay Manocha et al. - unofficial work in progress"}
{"name":"carrychang\/real_time_datamining_software","full_name":"CarryChang\/Real_Time_DataMining_Software","topics":["data-mining-software","nlp","real-time-anslysis","data-spider","ugc-analysis","sentiment-analysis","demo"],"description":"\u643a\u7a0b\/\u699b\u679c\u6c11\u5bbf\u5b9e\u65f6\u8bc4\u8bba\u6316\u6398\u8f6f\u4ef6\uff0c\u5305\u542b\u6570\u636e\u7684\u5b9e\u65f6\u91c7\u96c6\/\u6570\u636e\u6e05\u6d17\/\u7ed3\u6784\u5316\u4fdd\u5b58\/ UGC \u6570\u636e\u4e3b\u9898\u63d0\u53d6\/\u60c5\u611f\u5206\u6790\/\u540e\u7ed3\u6784\u5316\u53ef\u89c6\u5316\u7b49\u6280\u672f\u7684\u7efc\u5408\u6027\u6f14\u793a Demo\u3002\u57fa\u4e8e\u5728\u7ebf\u6c11\u5bbf UGC \u6570\u636e\u7684\u610f\u89c1\u6316\u6398\u9879\u76ee\uff0c\u5305\u542b\u6570\u636e\u6316\u6398\u548c NLP \u76f8\u5173\u7684\u5904\u7406\uff0c\u8d1f\u8d23\u6570\u636e\u91c7\u96c6\u3001\u4e3b\u9898\u62bd\u53d6\u3001\u60c5\u611f\u5206\u6790\u7b49\u4efb\u52a1\u3002\u4e3b\u8981\u514b\u670d\u7528\u6237\u6253\u5206\u548c\u8bc4\u8bba\u4e0d\u4e00\u81f4\uff0c\u5b9e\u65f6\u5bf9\u643a\u7a0b\u548c\u7f8e\u56e2\u5728\u7ebf\u6c11\u5bbf\u7684\u6ee1\u610f\u5ea6\u8fdb\u884c\u8bc4\u6d4b\u4ee5\u53ca\u5bf9\u989d\u5916\u6570\u636e\u8fdb\u884c\u53ef\u89c6\u5316\u7684\u7efc\u5408\u6027\u5de5\u5177\uff0c\u591a\u7ef4\u5ea6\u7684\u5bf9\u5728\u7ebf UGC \u8fdb\u884c\u6570\u636e\u6316\u6398\u5e76\u53ef\u89c6\u5316\uff0cdemo \u89c6\u9891\u6f14\u793a\u89c1\u94fe\u63a5\u3002"}
{"name":"yuta-hi\/pytorch_bayesian_unet","full_name":"yuta-hi\/pytorch_bayesian_unet","topics":["pytorch","cnn","unet","bayesian","uncertainty","pix2pix","adversarial-training"],"description":"Migrate to PyTorch. Re-implementation of Bayesian Convolutional Neural Networks (BCNNs)"}
{"name":"therayfitzgerald\/annie","full_name":"TheRayFitzgerald\/Annie","topics":["python","chatbot","nlp-machine-learning","nlp","ntlk","mental-health","dataframe","data-science","reddit-data","corpus","pandas"],"description":"A bespoke NLP Chatbot trained using a corpus of Reddit data."}
{"name":"aboerzel\/german_license_plate_recognition","full_name":"aboerzel\/German_License_Plate_Recognition","topics":["machine-learning","deep-learning","tensorflow2","udacity-machine-learning-nanodegree","computer-vision","android-app","capstone-project","tflite","number-plate-recognition","plate-detection","detection-api","udacity"],"description":"Android camera app for automatic recognition of German license plates using TensorFlow \/ TensorFlow Lite 2.4.1"}
{"name":"clear-nus\/ocfgan","full_name":"clear-nus\/OCFGAN","topics":["generative-adversarial-network","gan","probability-metric","characteristic-functions"],"description":"Pytorch implementation of OCFGAN-GP (CVPR 2020, Oral)."}
{"name":"goktug97\/pepg-es","full_name":"goktug97\/PEPG-ES","topics":["evolution-strategies","neural-network","artificial-intelligence","policy-gradient"],"description":"Python Implementation of Parameter-exploring Policy Gradients Evolution Strategy "}
{"name":"tinyzeamays\/circleloss","full_name":"TinyZeaMays\/CircleLoss","topics":[],"description":"Pytorch implementation of the paper \"Circle Loss: A Unified Perspective of Pair Similarity Optimization\""}
{"name":"meijieru\/yet_another_mobilenet_series","full_name":"meijieru\/yet_another_mobilenet_series","topics":[],"description":"Yet Another Pytorch Distributed MobileNetV2-based Networks Implementation"}
{"name":"chienwong\/resunet-a","full_name":"ChienWong\/ResUnet-a","topics":[],"description":"For the semantic segmentation of remote sensing image, tensorflow implementation"}
{"name":"cyang0515\/pytorch_ssn","full_name":"CYang0515\/pytorch_ssn","topics":[],"description":"A pytorch version of SSN"}
{"name":"minerva-j\/pytorch-segmentation-multi-models","full_name":"Minerva-J\/Pytorch-Segmentation-multi-models","topics":[],"description":"Pytorch implementation for Semantic Segmentation with multi models (Deeplabv3, Deeplabv3_plus, PSPNet, UNet, UNet_AutoEncoder, UNet_nested, R2AttUNet, AttentionUNet, RecurrentUNet,, SEGNet, CENet, DsenseASPP, RefineNet, RDFNet)"}
{"name":"sarsbug\/smp","full_name":"sarsbug\/SMP","topics":[],"description":"Pytorch implementation for Deep Self-Learning From Noisy Labels"}
{"name":"qs956\/latex_ocr_pytorch","full_name":"qs956\/Latex_OCR_Pytorch","topics":[],"description":"\u57fa\u4e8ePytorch\u5b9e\u73b0\u7684End-to-End\u56fe\u50cfLatex\u516c\u5f0f\u8bc6\u522b inspire by LinXueyuanStdio\/LaTeX_OCR_PRO"}
{"name":"liviniuk\/dorn_depth_estimation_pytorch","full_name":"liviniuk\/DORN_depth_estimation_Pytorch","topics":["depth-estimation","monocular-depth-estimation","pytorch","deep-learning","neural-network","computer-vision"],"description":"Pytorch implementation of \"Deep Ordinal Regression Network for Monocular Depth Estimation\" paper by Fu et. al."}
{"name":"leebebeto\/pytorch-gan","full_name":"leebebeto\/pytorch-GAN","topics":["computer-vision","pytorch","gan","generative-model","generative-adversarial-network"],"description":"My pytorch implementation for GAN"}
{"name":"islanna\/dynamicrelu","full_name":"Islanna\/DynamicReLU","topics":["pytorch","relu","dynamic"],"description":"Implementation of Dynamic ReLU on Pytorch"}
{"name":"lolei\/redditcleaner","full_name":"LoLei\/redditcleaner","topics":["reddit","pushshift","data-cleaning","text-data","nlp","python","praw","psaw","hacktoberfest"],"description":"Cleans Reddit Text Data :scroll: :broom:"}
{"name":"velebit-ai\/covid-next-pytorch","full_name":"velebit-ai\/COVID-Next-Pytorch","topics":["pytorch","xray","covid-19","resnext"],"description":"COVID-Next -> Pytorch upgrade of the COVID-Net for COVID-19 detection in X-Ray images"}
{"name":"evanmy\/sae","full_name":"evanmy\/sae","topics":["segmentation","autoencoder","mri","pytorch","deep-learning","variational-autoencoder","unsupervised","brain"],"description":"Accepted in MIDL 2020"}
{"name":"lehduong\/knowledge-distillation-by-replacing-cheap-conv","full_name":"lehduong\/Knowledge-Distillation-by-Replacing-Cheap-Conv","topics":["convolutional-neural-networks","knowledge-distillation","semantic-segmentation","deeplabv3","deeplabv3plus","pytorch","low-resource"],"description":"In search of effective and efficient Pipeline for Distillating Knowledge in Convolutional Neural Networks"}
{"name":"theobdt\/aerial_pc_classification","full_name":"theobdt\/aerial_pc_classification","topics":["point-cloud","pytorch","deep-learning","machine-learning","pointcloud","aerial-point-clouds","artificial-intelligence","python","aerial-imagery"],"description":"Segmentation of urban aerial point clouds with Deep Learning in Pytorch."}
{"name":"ahmetfurkandemir\/mask-detection-v1","full_name":"AhmetFurkanDEMIR\/Mask-Detection-V1","topics":["deep-learning","maskdetection","keras","keras-tensorflow","tensorflow","detection","object-detection","opencv","python"],"description":"Mask Detection"}
{"name":"hyeongminlee\/adacof-pytorch","full_name":"HyeongminLEE\/AdaCoF-pytorch","topics":["video-frame-interpolation","deep-learning","pytorch","cuda","cupy","python"],"description":"Official source code for our paper \"AdaCoF: Adaptive Collaboration of Flows for Video Frame Interpolation\" (CVPR 2020)"}
{"name":"selimsef\/xview2_solution","full_name":"selimsef\/xview2_solution","topics":["satellite-imagery","deep-learning","semantic-segmentation"],"description":"2nd place solution for Xview2 challenge https:\/\/xview2.org\/"}
{"name":"palver7\/equiconvpytorch","full_name":"palver7\/EquiConvPytorch","topics":[],"description":"Pytorch implementation of EquiConv "}
{"name":"luanyunteng\/pytorch-be-your-own-teacher","full_name":"luanyunteng\/pytorch-be-your-own-teacher","topics":["knowledge-distillation","self-distillation"],"description":"A pytorch implementation of paper 'Be Your Own Teacher: Improve the Performance of Convolutional Neural Networks via Self Distillation', https:\/\/arxiv.org\/abs\/1905.08094"}
{"name":"gouxiangchen\/soft-q-learning","full_name":"gouxiangchen\/soft-Q-learning","topics":[],"description":"discrete soft Q learning(SQL) and soft Q imitation learning(SQIL) implementation in pytorch, simple!"}
{"name":"seungjunlee96\/pointnet2_randaugment","full_name":"seungjunlee96\/PointNet2_RandAugment","topics":["pointnet2","pointnet2-pytorch","pytorch","randaugment","pointcloud","data-augmentation","classification","segmentation","3d"],"description":"Applying RandAugment on PointNet++"}
{"name":"imranulashrafi\/banner","full_name":"imranulashrafi\/banner","topics":["bangla","bengali","ner","bert","contextualized","cost-sensitive-learning"],"description":"Pytorch implementation for paper 'BANNER: A Cost-Sensitive Contextualized Model for Bangla Named Entity Recognition'"}
{"name":"agrija9\/deep-unsupervised-domain-adaptation","full_name":"agrija9\/Deep-Unsupervised-Domain-Adaptation","topics":["domain-adaptation","convolutional-neural-networks","coral-loss","unsupervised-learning","deep-coral","deep-domain-confusion","conditional-adversarial-da"],"description":"Pytorch implementation of four neural network based domain adaptation techniques: DeepCORAL, DDC, CDAN and CDAN+E. Evaluated on benchmark dataset Office31."}
{"name":"aydinnyunus\/ur-ai","full_name":"aydinnyunus\/UR-AI","topics":["chatbot","chatbots","chatbot-application","machine-learning","deep-learning","artificial-intelligence","python","python3","whatsapp","whatsapp-web","selenium","selenium-webdriver","selenium-python","whatsapp-chat","python-3","chat","bot","bots","silicon-valley","series"],"description":"Create Your AI ChatBot and Connect it to the Whatsapp !"}
{"name":"blackhc\/toma","full_name":"BlackHC\/toma","topics":["pytorch","python","machine-learning","data-science","gpu"],"description":"Helps you write algorithms in PyTorch that adapt to the available (CUDA) memory"}
{"name":"iit-pavis\/ai-thermometer","full_name":"IIT-PAVIS\/AI-Thermometer","topics":["ai","deep-learning","thermal-imaging"],"description":"Code for automatically measuring the temperature of people using a thermal camera."}
{"name":"donglee-afar\/logdeep","full_name":"donglee-afar\/logdeep","topics":["log-analysis","anomaly-detection","aiops","deeplog","log-anomaly","pytorch","sequence-prediction","failure-detection"],"description":"log anomaly detection toolkit including DeepLog"}
{"name":"mickeystroller\/r-bert","full_name":"mickeysjm\/R-BERT","topics":["relation-extraction","semeval-2010","tacred","bert-model","relation-classification","pytorch"],"description":"Pytorch re-implementation of R-BERT model"}
{"name":"erfaniaa\/commit-type-detection","full_name":"Erfaniaa\/commit-type-detection","topics":["pytorch","tf-idf","deep-learning","neural-network","classification","paper","python"],"description":"Classify Git commits with deep learning"}
{"name":"whitegive-boy\/cws-hmm_bilstm-crf","full_name":"WhiteGive-Boy\/CWS-Hmm_BiLSTM-CRF","topics":[],"description":"CWS\u4e2d\u6587\u5206\u8bcd HMM BiLSTM+CRF pytorch \u7ec6\u81f4\u5b9e\u73b0"}
{"name":"kyfafyd\/mirrorgan","full_name":"Kyfafyd\/MirrorGAN","topics":["text2image","image-captioning","mirrorgan","pytorch"],"description":"Reproduction of the paper MirrorGAN: Learning Text-to-image Generation by Redescription"}
{"name":"image-py\/planer","full_name":"Image-Py\/planer","topics":["cnn","deep-learning","inference-engine"],"description":"Powerful Light Artificial NEuRon inference framework for CNN"}
{"name":"sicara\/tf2-evonorm","full_name":"sicara\/tf2-evonorm","topics":["tensorflow","keras","deep-learning"],"description":"TensorFlow 2.0 implementation of Evonorm"}
{"name":"felixopolka\/deep-gaussian-process","full_name":"FelixOpolka\/Deep-Gaussian-Process","topics":["bayesian-inference","gpflow","tensorflow","deep-gaussian-processes","gaussian-processes","machine-learning"],"description":"\ud83e\udd3f Implementation of doubly stochastic deep Gaussian Process using GPflow and TensorFlow 2.0"}
{"name":"stephenfang51\/image_classification_pytorch","full_name":"Stephenfang51\/image_classification_pytorch","topics":[],"description":"Pytorch\u5b9e\u8df5\u7b80\u5355\uff0c \u65b9\u4fbf\uff0c \u5feb\u901f\u8bad\u7ec3 \u56fe\u50cf\u5206\u7c7b\u6a21\u578b"}
{"name":"tianheyu927\/pcgrad","full_name":"tianheyu927\/PCGrad","topics":["multi-task-learning","deep-learning","deep-reinforcement-learning"],"description":"Code for \"Gradient Surgery for Multi-Task Learning\""}
{"name":"seewoo5\/kt","full_name":"seewoo5\/KT","topics":["knowledge-tracing","pytorch"],"description":"Knowledge Tracing Models with PyTorch"}
{"name":"riroaki\/capsnet","full_name":"Riroaki\/CapsNet","topics":["pytorch","capsule-network","capsule","capsule-neural-networks"],"description":"A pytorch implementation of Capsule Network."}
{"name":"zjuter0126\/resnest_in_tensorflow2.2","full_name":"Holidays1999\/ResNest_in_tensorflow2.2","topics":[],"description":"ResNest_in_tensorflow.2.2"}
{"name":"marload\/distrl-tensorflow2","full_name":"marload\/DistRL-TensorFlow2","topics":["machine-learning","deep-learning","tensorflow","tensorflow2","c51","qr-dqn","dqn","rainbow-dqn","distributional-rl"],"description":"\ud83d\udc33 Implementation of various Distributional Reinforcement Learning Algorithms using TensorFlow2."}
{"name":"tensorbfs\/cmpo","full_name":"TensorBFS\/cMPO","topics":["tensor-networks","pytorch"],"description":"continuous-time matrix product operator for finite temperature quantum states"}
{"name":"mtics\/deep-photo-enhancer","full_name":"mtics\/deep-photo-enhancer","topics":["image-enhancement","python","pytorch","deep-photo-enhancer"],"description":"the Pytorch implementation of Deep Photo Enhancer"}
{"name":"juliagusak\/neural-ode-norm","full_name":"juliagusak\/neural-ode-norm","topics":["neural-ode","anode","normalization","pytorch","ordinary-differential-equations","neural-network"],"description":"Models and code for the ICLR 2020 workshop paper \"Towards Understanding Normalization in Neural ODEs\""}
{"name":"gatsby2016\/fast-wsi-prediction","full_name":"gatsby2016\/Fast-WSI-Prediction","topics":["pytorch","whole-slide-image","classification-task","pathological-images","deep-learning","medical-image-computing"],"description":"Unofficial implementation for ScanNet (a fast WSI prediction method) in PyTorch."}
{"name":"marload\/deeprl-tensorflow2","full_name":"marload\/DeepRL-TensorFlow2","topics":["tensorflow","machine-learning","reinforcement-learning","a2c","a3c","reinforce","dqn","trpo","ppo","sac","ddpg","deep-learning","deep-reinforcement-learning","tensorflow2","dueling-dqn","double-dqn","rainbow-dqn"],"description":"\ud83d\udc0b Simple implementations of various popular Deep Reinforcement Learning algorithms using TensorFlow2"}
{"name":"curiousily\/deploy-bert-for-sentiment-analysis-with-fastapi","full_name":"curiousily\/Deploy-BERT-for-Sentiment-Analysis-with-FastAPI","topics":["transformers","bert","huggingface-transformer","huggingface","pytorch","deployment","fastapi","python","machine-learning","deep-learning","deploy-machine-learning","sentiment-analysis","rest","rest-api","uvicorn"],"description":"Deploy BERT for Sentiment Analysis as REST API using FastAPI, Transformers by Hugging Face and PyTorch"}
{"name":"hltchkust\/xpersona","full_name":"HLTCHKUST\/Xpersona","topics":["crosslingual","dataset","bert","chatbot","transformer","dialog"],"description":"XPersona: Evaluating Multilingual Personalized Chatbot"}
{"name":"bojone\/keras_recompute","full_name":"bojone\/keras_recompute","topics":[],"description":"saving memory by recomputing for keras"}
{"name":"lucifer443\/efficientdet-pytorch","full_name":"lucifer443\/EfficientDet-Pytorch","topics":["efficientdet","mmdetection","pytorch","detection","bifpn"],"description":"This project is a kind of implementation of EfficientDet(CVPR 2020) using mmdetection. "}
{"name":"dulaku\/progan-for-humans","full_name":"dulaku\/ProGAN-for-Humans","topics":[],"description":"Pytorch code for ProGAN optimized for human reading over machine execution"}
{"name":"waterhorse1\/melu_pytorch","full_name":"waterhorse1\/MELU_pytorch","topics":[],"description":"An unofficial pytorch implementation of MELU"}
{"name":"jiayiwang5\/machinetranslation-transformer","full_name":"jayeew\/MachineTranslation-Transformer","topics":["transformer","keras","chinese-translation","machine-translation","chinese-nlp"],"description":"\u4e2d\u6587->\u82f1\u6587\u7684\u673a\u5668\u7ffb\u8bd1\uff0c\u5b8c\u5168\u57fa\u4e8ekreas-transformer\u3002\u6a21\u578b\u5df2\u4e0a\u4f20\uff0c\u53ef\u76f4\u63a5\u8dd1\u3002"}
{"name":"natanielruiz\/disrupting-deepfakes","full_name":"natanielruiz\/disrupting-deepfakes","topics":["adversarial-attacks","disrupting-deepfakes","deepfakes","deep-learning","machine-learning","computer-vision","deepfake-detection","face-swap","faceswap","fake-news","defending","defending-deepfakes"],"description":"\ud83d\udd25\ud83d\udd25Defending Against Deepfakes Using Adversarial Attacks on Conditional Image Translation Networks"}
{"name":"heshuting555\/aicity2020_dmt_vehiclereid","full_name":"heshuting555\/AICITY2020_DMT_VehicleReID","topics":["aicity","pytorch","veri-776","vehicle-reidentification"],"description":"The 3rd Place Submission to AICity Challenge 2020 Track2"}
{"name":"marload\/convnets-tensorflow2","full_name":"marload\/ConvNets-TensorFlow2","topics":["tensorflow","machine-learning","deep-learning","resnet","googlenet","vgg","inception-v3","inception-v4","mobilenet","mobilenet-v2","shufflenet","shufflenet-v2"],"description":"\u26f5\ufe0f Implementation a variety of popular Image Classification Models using TensorFlow2. [ResNet, GoogLeNet, VGG, Inception-v3, Inception-v4, MobileNet, MobileNet-v2, ShuffleNet, ShuffleNet-v2, etc...]"}
{"name":"pris-cv\/oslnet","full_name":"PRIS-CV\/OSLNet","topics":["python","pytorch","small-sample","orthogonal"],"description":"Code release for  OSLNet: Deep Small-Sample Classification with an Orthogonal Softmax Layer (TIP2020)"}
{"name":"declare-lab\/kingdom","full_name":"declare-lab\/kingdom","topics":["sentiment-analysis","domain-adaptation","opinion-mining","deep-learning","deep-neural-networks","adversarial-networks","adversarial-learning"],"description":"Domain Adaptation using External Knowledge for Sentiment Analysis"}
{"name":"yeyupiaoling\/audioclassification-tensorflow","full_name":"yeyupiaoling\/AudioClassification-Tensorflow","topics":["tensorflow","urbansound8k","audioclassification"],"description":"\u57fa\u4e8eTensorflow\u5b9e\u73b0\u58f0\u97f3\u5206\u7c7b\uff0c\u535a\u5ba2\u5730\u5740\uff1a"}
{"name":"switchablenorms\/adax","full_name":"switchablenorms\/AdaX","topics":["gradient-descent","deep-learning","adaptive-gradient-descent"],"description":"AdaX: Adaptive Gradient Descent with Exponential Long Term Momery"}
{"name":"chaovven\/pyrl","full_name":"chaovven\/PyRL","topics":["pytorch","dqn","ddpg","td3","reinforcement-learning","deep-reinforcement-learning","ppo","soft-actor-critic"],"description":"PyRL - Reinforcement Learning Framework in Pytorch (Policy Gradient, DQN, DDPG, TD3, PPO, SAC, etc.)"}
{"name":"dontlovebugs\/superviseddepthprediction","full_name":"dontLoveBugs\/SupervisedDepthPrediction","topics":["dorn","depth-estimation","monocular","apex"],"description":"Pytorch framework for supervised depth prediction"}
{"name":"guhuozhengling\/deepsort_yolov4","full_name":"guhuozhengling\/deepsort_yolov4","topics":["deepsort","pytorch","yolov4"],"description":null}
{"name":"ankushmalaker\/huse","full_name":"AnkushMalaker\/HUSE","topics":["tensorflow","huse","tf2","keras","universal-embedding"],"description":"Tensorflow implimentation of HUSE: Hierarchical Universal Semantic Embeddings"}
{"name":"tongjinle123\/speech-transformer-pytorch_lightning","full_name":"tongjinle123\/speech-transformer-pytorch_lightning","topics":["pytorch-lightning","speech","asr"],"description":"ASR project with pytorch-lightning"}
{"name":"yananren2137\/huawei-ai-food-challenge","full_name":"yananren2137\/huawei-ai-food-challenge","topics":["image-classification","pytorch","auto-augment"],"description":null}
{"name":"vlomonaco\/ar1-pytorch","full_name":"vlomonaco\/ar1-pytorch","topics":["continual-learning","continualai","pytorch","incremental-learning","core50","computer-vision","deep-learning","lifelong-learning"],"description":"AR1* with Latent Replay, implemented in PyTorch"}
{"name":"allanyiin\/yolov4","full_name":"AllanYiin\/YoloV4","topics":["yolo","pytorch"],"description":"Yolo v4 in pytorch, tensorflow and onnx"}
{"name":"jerrodparker20\/adaptive-transformers-in-rl","full_name":"jerrodparker20\/adaptive-transformers-in-rl","topics":["rl","pomdp","transformer","attention-mechanism","stabilizing-transformers-for-rl","adaptive-attention","transformers-in-rl","torchbeast","impala","monobeast"],"description":"Adaptive Attention Span for Reinforcement Learning"}
{"name":"marload\/gans-tensorflow2","full_name":"marload\/GANs-TensorFlow2","topics":["tensorflow2","deeplearning","gan","dcgan","lsgan","wgan","wgan-gp","ssgan","generative-adversarial-network","tf2","tf","tensorflow"],"description":"\ud83d\ude80 Variants of GANs most easily implemented as TensorFlow2. GAN, DCGAN, LSGAN, WGAN, WGAN-GP, DRAGAN, ETC..."}
{"name":"wqt2019\/tacotron-2_wavernn","full_name":"wqt2019\/tacotron-2_wavernn","topics":[],"description":"tacotron-2(tensorflow) + wavernn(pytorch) chinese TTS"}
{"name":"facebookresearch\/safetorch","full_name":"facebookresearch\/SAFEtorch","topics":[],"description":"pytorch version of the SAFE neural network"}
{"name":"rishabh-karmakar\/facial-recognition-based-attendance-system","full_name":"rishabh-karmakar\/Facial-Recognition-Based-Attendance-System","topics":["python-3","python","python3","facial-recognition","attendance","attendance-system","attendance-management-system","attendance-record","tensorflow","keras","keras-tensorflow","sqlite3","tkinter","tkinter-graphic-interface","opencv"],"description":"Facial Recognition Based Attendance System using Python, Tensorflow, Keras, SqlLite3, Tkinter, OpenCV"}
{"name":"xifengguo\/dsc-net","full_name":"XifengGuo\/DSC-Net","topics":[],"description":"A Pytorch implementation of DSC-Net (Deep subspace clustering networks, NIPS17)"}
{"name":"lukepark327\/keras-only-rl","full_name":"lukepark327\/keras-only-RL","topics":[],"description":"implementing RLs using keras only"}
{"name":"seannaren\/cord-19-ann","full_name":"SeanNaren\/CORD-19-ANN","topics":["pytorch","covid-19","cord-19","spacy","scispacy","machine-learning","transformer"],"description":"ANN Search through the COVID CORD-19 Dataset using SBERT."}
{"name":"enghock1\/real-time-2d-and-3d-hand-pose-estimation","full_name":"enghock1\/Real-Time-2D-and-3D-Hand-Pose-Estimation","topics":["deep-learning","computer-vision","3d-hand-pose-estimation","2d-hand-pose-estimation","real-time"],"description":"Real-Time 2D and 3D Hand Pose Estimation from RGB Image"}
{"name":"turtlesoupy\/this-word-does-not-exist","full_name":"turtlesoupy\/this-word-does-not-exist","topics":["machine-learning","gpt-2","transformers","natural-language-processing","natural-language-understanding","natural-language-generation"],"description":"This Word Does Not Exist"}
{"name":"xiao9616\/yolo4_tensorflow2","full_name":"xiao9616\/yolo4_tensorflow2","topics":["yolov4","tensorflow2"],"description":"yolo 4th edition  implemented by tensorflow2.0"}
{"name":"ai-light\/2020-zhihuihaiyang","full_name":"Ai-Light\/2020-zhihuihaiyang","topics":["datamining","nlp","time-series-analysis"],"description":"2020\u6570\u5b57\u4e2d\u56fd\u521b\u65b0\u5927\u8d5b-\u6570\u5b57\u653f\u5e9c\u8d5b\u9053-\u667a\u80fd\u7b97\u6cd5\u8d5b\uff1a\u667a\u6167\u6d77\u6d0b\u5efa\u8bbe\u7b97\u6cd5\u8d5b\u9053\u4ee3\u7801"}
{"name":"seraphlabs-ca\/sentencemim-demo","full_name":"seraphlabs-ca\/SentenceMIM-demo","topics":["pytorch","python3","mim","seraphlabs","nlp","variational-inference"],"description":"This repo contains code to reproduce some of the results presented in the paper \"SentenceMIM: A Latent Variable Language Model\""}
{"name":"sxjyjay\/transformer-backbone","full_name":"SxJyJay\/Transformer-backbone","topics":["transformer","encoder","decoder","pytorch"],"description":"The reproduce of Transformer architecture in paper \"Attention is all your need\""}
{"name":"coder-nlper\/gpt2-chinese-tf2","full_name":"Coder-nlper\/gpt2-chinese-tf2","topics":[],"description":"chinese gpt2 for tensorflow2.0"}
{"name":"titu1994\/tf_neural_deconvolution","full_name":"titu1994\/tf_neural_deconvolution","topics":["tensorflow2","tensorflow","keras"],"description":"Neural Deconvolutions in Tensorflow"}
{"name":"akshaydnicator\/twitter-sentiment-analysis-nlp-hackathon","full_name":"akshaydnicator\/Twitter-Sentiment-Analysis-NLP-Hackathon","topics":["twitter","nlp","hackathon","analytics-vidhya","pre-processing","punctuation-marks","lemmetization","sentiment-analysis","spacy","bert-embeddings","elmo-vectors","features-extraction","sklearn-library","keras-tensorflow","neural-networks","machine-learning","deep-learning","cnn-classification","cross-validation","wordvectors"],"description":"Problem Statement: Given the tweets from customers about various tech firms who manufacture and sell mobiles, computers, laptops, etc, the task is to identify if the tweets have a negative sentiment towards such companies or products."}
{"name":"yanx27\/pointasnl","full_name":"yanx27\/PointASNL","topics":["point-cloud","segmentation","classification","sample","tensorflow","self-driving","modelnet-dataset","semantickitti","scannet-dataset"],"description":"PointASNL: Robust Point Clouds Processing using Nonlocal Neural Networks with Adaptive Sampling \uff08CVPR 2020\uff09"}
{"name":"digantamisra98\/evonorm","full_name":"digantamisra98\/EvoNorm","topics":["deep-learning","neural-networks","computer-vision","normalization","neural-architecture-search","nas"],"description":"Unofficial PyTorch Implementation of EvoNorm"}
{"name":"dingkeyan93\/dists","full_name":"dingkeyan93\/DISTS","topics":["dists","iqa","texture","structure","similarity","optimization","loss-functions","pytorch","quality-metrics","image-quality-assessment"],"description":"IQA: Deep Image Structure and Texture Similarity Metric"}
{"name":"rsanshierli\/easybert","full_name":"rsanshierli\/EasyBert","topics":[],"description":"\u57fa\u4e8ePytorch\u7684Bert\u5e94\u7528\uff0c\u5305\u62ec\u547d\u540d\u5b9e\u4f53\u8bc6\u522b\u3001\u60c5\u611f\u5206\u6790\u3001\u6587\u672c\u5206\u7c7b\u4ee5\u53ca\u6587\u672c\u76f8\u4f3c\u5ea6\u7b49"}
{"name":"perseus784\/vehicle_collision_prediction_using_cnn-lstms","full_name":"perseus784\/Vehicle_Collision_Prediction_Using_CNN-LSTMs","topics":["carla-simulator","carla","tensorflow","cnn","lstm","cnn-lstm","collision-detection","python","tensorflow-examples","time-distributed","image-series-prediction","scene-understanding","autopilot-script","lstms","vehicle-collision-prediction","action-recognition"],"description":"Predict Vehicle collision moments before it\u00a0happens in Carla!. CNN and LSTM hybrid architecture is used to understand a series of images."}
{"name":"yeyupiaoling\/voiceprintrecognition-tensorflow","full_name":"yeyupiaoling\/VoiceprintRecognition-Tensorflow","topics":["tensorflow","voice-recognition","arcface","speaker-recognition"],"description":"\u4f7f\u7528Tensorflow\u5b9e\u73b0\u58f0\u7eb9\u8bc6\u522b"}
{"name":"ashwinvin\/visionlib","full_name":"ashwinvin\/Visionlib","topics":["gender-detection","face-detection","visionlib","yolo","object-detection","deep-learning","machine-learning","python3","very-easy-to-use","library"],"description":"A simple, easy to use, feature rich, customizable cv library"}
{"name":"monologg\/ner-multimodal-pytorch","full_name":"monologg\/NER-Multimodal-pytorch","topics":["ner","named-entity-recognition","pytorch","multimodal","coattention","tweets","attention-network"],"description":"Pytorch Implementation of \"Adaptive Co-attention Network for Named Entity Recognition in Tweets\" (AAAI 2018)"}
{"name":"younggyoseo\/cadm","full_name":"younggyoseo\/CaDM","topics":["reinforcement-learning","rl","deep-learning","mujoco","codebase","model-based","deep-reinforcement-learning","ppo","deep-learning-algorithms"],"description":"CaDM: Context-aware Dynamics Model for Generalization in Model-based Reinforcement Learning"}
{"name":"tanulsingh\/humour.ai-language-model-that-can-crack-jokes","full_name":"tanulsingh\/Humour.ai-Language-model-that-can-crack-Jokes","topics":["pytorch","language-model","nlg","nlp","joke","joker","humour-generator","gpt-2","transformers","python"],"description":"Language Model that makes you Laugh . "}
{"name":"trigram19\/m5-python-starter","full_name":"Trigram19\/m5-python-starter","topics":["m5-competition","transformer"],"description":"Python framework for a good neural network for the Makidrakis 5 (M5) competition hosted on Kaggle."}
{"name":"kodiks\/pyzemberek","full_name":"kodiks\/pyzemberek","topics":["zemberek","nlp","turkish-nlp","natural-language-processing","turkish","pyjnius"],"description":"pyzemberek (v0.0.1-beta) | Python implementation of the Turkish NLP library Zemberek."}
{"name":"farrandtom\/social-distancing","full_name":"FarrandTom\/social-distancing","topics":["social-distancing","computer-vision","deep-learning","python","opencv-python","opencv"],"description":":star: An easy end-to-end social distancing implementation created using OpenCV! :camera:"}
{"name":"hugoycj\/incremental-learning-with-weight-aligning","full_name":"hugoycj\/Incremental-Learning-with-Weight-Aligning","topics":[],"description":"Pytorch implementation of Maintaining Discrimination and Fairness in Class Incremental Learning"}
{"name":"jeevesh8\/ghi-prediction","full_name":"Jeevesh8\/GHI-prediction","topics":["ghi","weather","forecasting","dhi","dni","solar-irradiance","machine-learning","time-series-forecasting","transformer","lstm-cnn","lstm","ghi-prediction","confidence-intervals","series-models","hacktoberfest"],"description":"PyTorch Code for running various time series models for different time stamps and confidence intervals for Solar Irradiance prediction."}
{"name":"epiphqny\/solov2","full_name":"Epiphqny\/SOLOv2","topics":["instance-segmentation","mmdetection","pytorch"],"description":"SOLOv2: Dynamic, Faster and Stronger, achives 39.5mAP on coco test-dev (36 epochs result)"}
{"name":"johnbetacode\/social-distancing-analyser","full_name":"JohnBetaCode\/Social-Distancing-Analyser","topics":["computer-vision","ai","object-detection","extrinsic","intrinsic","calibration","social-distancing","opencv","tensorflow","yolov4","covid19","anaconda","calibration-process","detection-model","yolo","opencv4","opensource","image-processing","deep-learning"],"description":"Considering the big change that the world is facing, as well as our lives due to the COVID-19, we provide to people and companies a complete open-source tool to analyze the social distancing for streets, parks, offices, and even crowded places like malls, train stations, and others."}
{"name":"leaderj1001\/synthesizer-rethinking-self-attention-transformer-models","full_name":"leaderj1001\/Synthesizer-Rethinking-Self-Attention-Transformer-Models","topics":["transformer","synthesizer","pytorch"],"description":"Implementing SYNTHESIZER: Rethinking Self-Attention in Transformer Models using Pytorch"}
{"name":"lotayou\/cocosnet","full_name":"Lotayou\/CoCosNet","topics":[],"description":"Pytorch Implementation of the paper [\"Cross-domain Correspondence Learning for Exemplar-based Image Translation\"](https:\/\/panzhang0212.github.io\/CoCosNet)"}
{"name":"angry-coder-room\/naruto-handsigns-predict-dl","full_name":"shreyas-jk\/Naruto-Handsigns-Predict-DL","topics":["deep-learning","convolutional-neural-networks","cnn-keras"],"description":"Using Convolution Neural Networks to classify Naruto Hand Signs."}
{"name":"snnclsr\/ner","full_name":"snnclsr\/ner","topics":["ner","nlp"],"description":"Turkish Named Entity Recognition"}
{"name":"wqt2019\/tacotron-2_melgan","full_name":"wqt2019\/tacotron-2_melgan","topics":[],"description":"tacotron-2(tensorflow) + melgan(pytorch) chinese TTS"}
{"name":"mayurji\/social-distancing-using-deep-learning-and-opencv","full_name":"Mayurji\/Social-DIstancing-Using-Deep-Learning-and-OpenCV","topics":["social-distancing-detection","python","yolov3","deep-learning","opencv","covid-19"],"description":"Considering the unfortunate circumstances due to COVID-19 keeping distance from one person to another is crucial."}
{"name":"isp1tze\/maproj","full_name":"isp1tze\/MAProj","topics":["multi-agent-reinforcement-learning","pytorch","commnet","bicnet","maddpg"],"description":"Multi-agent project (commnet, bicnet, maddpg) in pytorch for Multi-Agent Particle Environment"}
{"name":"junqiangchen\/lunglobesegmentation","full_name":"junqiangchen\/LungLobeSegmentation","topics":["tensorflow","python","lung","lung-segmentation","lobe","vnet","focal"],"description":"Lobe Segmentation"}
{"name":"sgrvinod\/a-pytorch-tutorial-to-super-resolution","full_name":"sgrvinod\/a-PyTorch-Tutorial-to-Super-Resolution","topics":["pytorch-tutorial","pytorch","super-resolution","srgan","generative-adversarial-network","gan","gans"],"description":"Photo-Realistic Single Image Super-Resolution Using a Generative Adversarial Network | a PyTorch Tutorial to Super-Resolution"}
{"name":"miaoshuyu\/object-detection-usages","full_name":"miaoshuyu\/object-detection-usages","topics":[],"description":"The brief implementation and using examples of object detection usages like, IoU, NMS, soft-NMS, SmoothL1\u3001IoU loss\u3001GIoU loss\u3001 DIoU loss\u3001CIoU loss, cross-entropy\u3001focal-loss\u3001GHM, AP\/MAP and so on by Pytorch."}
{"name":"liuyukid\/transformers-ner","full_name":"liuyukid\/transformers-ner","topics":["ner","pytorch","transformers","bert","electra","roberta","albert","adversarial-training","crf","softmax","span","distilbert","camembert","xlm","xlmroberta","pgd","fgm"],"description":"Pytorch-Named-Entity-Recognition-with-transformers"}
{"name":"furkanom\/tf-faster-rcnn","full_name":"FurkanOM\/tf-faster-rcnn","topics":["faster-rcnn","object-detection","tensorflow2","keras-tensorflow","deep-learning","batch-processing","tf2","mobilenetv2"],"description":"Tensorflow 2 Faster-RCNN implementation from scratch supporting to the batch processing with MobileNetV2 and VGG16 backbones"}
{"name":"cluebenchmark\/lightlm","full_name":"CLUEbenchmark\/LightLM","topics":["nlpcc","nlpcc2020","nlp","languagemodel","bert","chinese","chinese-language-model"],"description":"\u9ad8\u6027\u80fd\u5c0f\u6a21\u578b\u6d4b\u8bc4 Shared Tasks in NLPCC 2020. Task 1 - Light Pre-Training Chinese Language Model for NLP Task"}
{"name":"98zyx\/hetero-center-loss-for-cross-modality-person-re-id","full_name":"98zyx\/Hetero-center-loss-for-cross-modality-person-re-id","topics":["pytorch","person-reidentification","cross-modality-re-identification"],"description":"Code for paper \"Hetero-center loss for cross-modality person re-identification\""}
{"name":"yas-sim\/gaze-estimation-with-laser-sparking","full_name":"yas-sim\/gaze-estimation-with-laser-sparking","topics":["intel","openvino","openvino-toolkit","deep-learning","face-detection","head-pose-estimation","face-landmark-detection","gaze-estimation","python","inference-engine","inference","gaze","head-pose","face-landmarks","face-landmarking","face-landmark","laser-beams","head-rotation-angles","landmark-points","demo"],"description":"Deep learning based gaze estimation demo with a fun feature :-)"}
{"name":"inmoonlight\/koco","full_name":"inmoonlight\/koco","topics":["natural-language-processing","dataset-loader","korean","korean-nlp"],"description":"Easy installer of kocohub dataset"}
{"name":"yas-sim\/object-tracking-line-crossing-area-intrusion","full_name":"yas-sim\/object-tracking-line-crossing-area-intrusion","topics":["intel","openvino","openvino-toolkit","inference-engine","inference","object-detection","object-tracking","pedestrian-detection","pedestrian-tracking","line-crossing-detection","intrusion-detection","python","area-intrusion-detection","deep-learning","identification","identification-model","trajectory","surveillance-systems","video-surveillance","surveillance"],"description":"Deep learning based object tracking with line crossing and area intrusion detection"}
{"name":"chenwwweixiang\/opencoviddetector","full_name":"ChenWWWeixiang\/OpenCovidDetector","topics":["python","covid19","covid-19","diagnosis","pytorch"],"description":"New virsion for multi-categories were available. Since too many changes above old virsion, please refer to this site https:\/\/github.com\/ChenWWWeixiang\/diagnosis_covid19"}
{"name":"timchen0618\/pytorch-leo","full_name":"timchen0618\/pytorch-leo","topics":["meta-learning","machine-learning","pytorch-implementation","python3","leo"],"description":"Pytorch Implemtation of Meta-Learning with Latent Embedding Optimization"}
{"name":"yas-sim\/person-detect-reidentification","full_name":"yas-sim\/person-detect-reidentification","topics":["intel","openvino","openvino-toolkit","inference","inference-engine","people-detection","face-detection","matching-problems","feature-extraction","deep-learning","python","hungarian-assignment","identification","identification-model","dl-models","demo","feature-vectores","multiple-cameras","surveillance"],"description":"Person or face detection and matching from multiple image inputs using Intel OpenVINO toolkit"}
{"name":"cilame\/yidun_icon","full_name":"cilame\/yidun_icon","topics":[],"description":"\u6613\u76fe\u56fe\u6807\u8bc6\u522b\uff0c\u5305\u542b\u5b9a\u4f4d\u4ee5\u53ca\u70b9\u9009\u987a\u5e8f\u7684\u8bc6\u522b\uff0c\u5b9a\u4f4d pytorch \u6a21\u578b\u5927\u5c0f\u53ea\u67093M\uff0c\u6267\u884c\u901f\u5ea6\u6781\u5feb\u3002\u5185\u9644\u4ee3\u7801\u548c\u6d4b\u8bd5\u7528\u4f8b\uff0c\u76f4\u63a5\u4f7f\u7528\u5373\u53ef\u6d4b\u8bd5\u3002\u5b9a\u4f4d\u51c6\u786e\u7387 95% \u4ee5\u4e0a\uff0c\u8bc6\u522b\u7528\u7684sift\u7b97\u6cd5\uff0c\u6d4b\u8bd5\u901a\u8fc7\u7387\u5927\u6982 50%\u3002"}
{"name":"simeonedef\/time-series_imaging_forecasting","full_name":"Simeonedef\/Time-Series_Imaging_Forecasting","topics":["time-series-forecasting","tensorflow2","conv-lstm","holt-winter","conv-mlp","lstm-architecture","series","predictions","convolutional-layers","convolutional-lstm","matplotlib","deep-learning","eth-zurich","ethz"],"description":"In this project we have explored the use of imaging time series to enhance forecasting results with Neural Networks. The approach has revealed itself to be extremely promising as, both in combination with an LSTM architecture and without, it has out-performed the pure LSTM architecture by a solid margin within our test datasets."}
{"name":"yas-sim\/handwritten-japanese-ocr","full_name":"yas-sim\/handwritten-japanese-ocr","topics":["intel","openvino","ocr","japanese","text-recognition","text-detection","deep-learning","inference-engine","handwritten-text-recognition","ocr-demo","dl-models","text-regions","touch-panel","python"],"description":"Handwritten Japanese OCR demo using touch panel to draw the input text using Intel OpenVINO toolkit"}
{"name":"kuangcaomvp\/speech-recognize","full_name":"kuangcaomvp\/speech-recognize","topics":[],"description":"transformer\u7684 encoder-decoder\u7ed3\u6784\u57fa\u4e8etensorflow\u5b9e\u73b0\u7684\u4e2d\u6587\u8bed\u97f3\u8bc6\u522b\u9879\u76ee"}
{"name":"tanulsingh\/emotion-and-its-stimulus-detection","full_name":"tanulsingh\/Emotion-and-its-Stimulus-Detection","topics":["nlp","transformer","huggingface-library","t5","emotion-detection","question-answering"],"description":"Detection of Emotion and its cause from text"}
{"name":"alexklwong\/unsupervised-depth-completion-visual-inertial-odometry","full_name":"alexklwong\/unsupervised-depth-completion-visual-inertial-odometry","topics":["ucla","depth-completion","3d-reconstruction","unsupervised-learning","machine-learning","sensor-fusion","deep-learning","self-supervised-learning","depth","icra","ral","tensorflow","computer-vision","kitti","void","3d-vision","depth-estimation"],"description":"Tensorflow implementation of Unsupervised Depth Completion from Visual Inertial Odometry (in RA-L January 2020 & ICRA 2020)"}
{"name":"avinashpaliwal\/deep-slomo","full_name":"avinashpaliwal\/Deep-SloMo","topics":["hybrid-imaging","video-frame-interpolation","deep-slomo","slow-motion","deep-learning","slomo","convolutional-neural-networks","frame-interpolation","pytorch-implementation","pytorch","dual-cameras","super-resolution","video-super-resolution"],"description":"Official PyTorch implementation of \"Deep Slow Motion Video Reconstruction with Hybrid Imaging System\" (TPAMI)"}
{"name":"raghavian\/graph_refinement","full_name":"raghavian\/graph_refinement","topics":[],"description":"This is official Pytorch implementation of \"Graph Refinement based Airway Extraction using Mean-Field Networks and Graph Neural Networks\", Raghavendra Selvan et al. 2020"}
{"name":"audio-captioning\/dcase-2020-baseline","full_name":"audio-captioning\/dcase-2020-baseline","topics":["audio-captioning","audio-signal-processing","captioning","deep-learning","deep-neural-networks","machine-listening","machine-learning","signal-processing","dcase2020","dcase"],"description":"Audio captioning baseline system for DCASE 2020 challenge. "}
{"name":"yas-sim\/interactive-image-inpainting","full_name":"yas-sim\/interactive-image-inpainting","topics":["intel","openvino","openvino-toolkit","deep-learning","inpaint","inference-engine","inference","image-ret","image-retrieval","image-inpainting","demo","dl-models","undesired-objects","picture","python","draw","interactive-demo"],"description":"Deep Learning Based Interactive Image Inpainting Demo"}
{"name":"furkanom\/tf-ssd","full_name":"FurkanOM\/tf-ssd","topics":["ssd","object-detection","ssd300","trained-models","tensorflow","tensorflow2","tf2","deep-learning","mobilenet-ssd","mobilenetv2","vgg16"],"description":"Tensorflow 2 single shot multibox detector (SSD) implementation from scratch with MobileNetV2 and VGG16 backbones"}
{"name":"krishnadn\/attentive-statistics-pooling-for-deep-speaker-embedding","full_name":"KrishnaDN\/Attentive-Statistics-Pooling-for-Deep-Speaker-Embedding","topics":["speaker-recognition","speaker-identification","speech","attention-model"],"description":"Implementation of the paper \"Attentive Statistics Pooling for Deep Speaker Embedding\" in Pytorch"}
{"name":"huffon\/semantic-search-faiss","full_name":"Huffon\/semantic-search-faiss","topics":["faiss","semantic-search","elasticsearch","natural-language-processing"],"description":"Semantic Search using FAISS & ElasticSearch"}
{"name":"nullbyte91\/computer-pointer-controller","full_name":"nullbyte91\/Computer-Pointer-Controller","topics":["computer-pointer-controller","python3","gaze-estimation","head-pose-estimation","face-detection","face-landmark-detection","mouse-controls","openvino","adas","deep-learning","opencv"],"description":"Deep learning based Gaze detection model to control the mouse pointer of your computer"}
{"name":"alfonmedela\/triplet-loss-pytorch","full_name":"alfonmedela\/triplet-loss-pytorch","topics":["triplet-loss","triplet","loss-functions","metric-learning","constellation","pytorch","pytorch-implementation"],"description":"Highly efficient PyTorch version of the Semi-hard Triplet loss \u26a1\ufe0f"}
{"name":"saic-vul\/image_harmonization","full_name":"saic-vul\/image_harmonization","topics":["image-harmonization","harmonization","pytorch","hrnets"],"description":"[WACV2021] Foreground-aware Semantic Representations for Image Harmonization https:\/\/arxiv.org\/abs\/2006.00809"}
{"name":"sicara\/gpumonitor","full_name":"sicara\/gpumonitor","topics":["tensorflow","pytorch-lightning","gpu-monitoring"],"description":"TF 2.x and PyTorch Lightning Callbacks for GPU monitoring"}
{"name":"elephantmipt\/bert-distillation","full_name":"elephantmipt\/bert-distillation","topics":["catalyst","bert","nlp","distillation","distilbert","rubert"],"description":"Distillation of BERT model with catalyst framework"}
{"name":"lht-curry\/covid19_qa_baseline","full_name":"LHT-Curry\/COVID19_QA_baseline","topics":[],"description":"DataFountain\u75ab\u60c5\u95ee\u7b54\u52a9\u624bkeras-bert\u5b9e\u73b0"}
{"name":"mohammadkhalifa\/fairseq-tagging","full_name":"mukhal\/fairseq-tagging","topics":["nlp","nlp-machine-learning","fairseq","machine-learning","sequence-labeling","named","ner","labeling-tasks","prediction","pos-tagging"],"description":"a Fairseq fork for sequence tagging\/labeling tasks"}
{"name":"chenao-phys\/pytorch-jacobian","full_name":"ChenAo-Phys\/pytorch-Jacobian","topics":[],"description":"Implement efficient jacobian method available for most pytorch networks"}
{"name":"kyzhouhzau\/nlpgnn","full_name":"kyzhouhzau\/NLPGNN","topics":["tensorflow2","bert","gpt2","albert","bert-ner","bert-cls","textcnn","bilstm-attention","albert-ner","tf2","message-passing","gcn","gin","gan","graph-convolutional-networks","graphsage","graph-classfication","textgcn","nlp","gnn"],"description":"1. Use BERT, ALBERT and GPT2 as  tensorflow2.0's layer.  2. Implement GCN, GAN, GIN and GraphSAGE based on message passing."}
{"name":"d-li14\/ghostnet.pytorch","full_name":"d-li14\/ghostnet.pytorch","topics":["ghostnet","pytorch","reproduction","mobilenetv3","pretrained-models","imagenet"],"description":"73.6% GhostNet 1.0x pre-trained model on ImageNet"}
{"name":"liujiaheng\/compression","full_name":"liujiaheng\/compression","topics":["pytorch","compression","image-compression"],"description":"Learned image compression"}
{"name":"uds-lsv\/bert-stable-fine-tuning","full_name":"uds-lsv\/bert-stable-fine-tuning","topics":["nlp","bert","fine-tuning"],"description":"On the Stability of Fine-tuning BERT: Misconceptions, Explanations, and Strong Baselines"}
{"name":"confusezius\/cvpr2020_pads","full_name":"Confusezius\/CVPR2020_PADS","topics":["deep-metric-learning","cvpr2020","pytorch","deep-learning","retrieval","cub200-2011","cars196","metric-learning"],"description":"(CVPR 2020) This repo contains code for \"PADS: Policy-Adapted Sampling for Visual Similarity Learning\", which proposes learnable triplet mining with Reinforcement Learning."}
{"name":"theshadow29\/vognet-pytorch","full_name":"TheShadow29\/vognet-pytorch","topics":["grounding","visual-grounding","video","video-object-grounding","pytorch-implementation","vision","vision-and-language","nlp","object-grounding","video-grounding","captioning-videos"],"description":"[CVPR20] Video Object Grounding using Semantic Roles in Language Description (https:\/\/arxiv.org\/abs\/2003.10606)"}
{"name":"goktug97\/estorch","full_name":"goktug97\/estorch","topics":["evolutionary-algorithms","evolution-strategies","pytorch","neural-network","reinforcement-learning","mpi","parallel-computing","evolution-strategy-library"],"description":"Evolution Strategy Library"}
{"name":"ajitrajasekharan\/unsupervised_ner","full_name":"ajitrajasekharan\/unsupervised_NER","topics":["nlp","natural-language-processing","ner","self-supervised-learning"],"description":"Self-supervised NER prototype - updated version (69 entity types - 17 broad entity groups). Uses pretrained BERT models with no fine tuning. State-of-art performance on 3 biomedical datasets"}
{"name":"gatsby2016\/augmentation-pytorch-transforms","full_name":"gatsby2016\/Augmentation-PyTorch-Transforms","topics":["image-augmentation","augmentation","pytorch","pytorch-transforms","affine-transformation","elastic-transformation","color-deconvolution","pathology-image","histopathology-images"],"description":"Image data augmentation on-the-fly by add new class on transforms in PyTorch and torchvision."}
{"name":"inhwanbae\/enet-sad_pytorch","full_name":"InhwanBae\/ENet-SAD_Pytorch","topics":["lane-detection","enet","self-attention-distillation","pytorch-implementation","deep-learning","semantic-segmentation","pytorch","python"],"description":"Pytorch implementation of \"Learning Lightweight Lane Detection CNNs by Self Attention Distillation (ICCV 2019)\""}
{"name":"menon92\/banglatranslator","full_name":"menon92\/BanglaTranslator","topics":["tensorflow","attention","encoder-decoder","lstm","translators","bangla","bangla-nlp","bangla-machine-translation"],"description":"Bangla Machine Translator"}
{"name":"syuntoku14\/pytorch-rl-il","full_name":"syuntoku14\/pytorch-rl-il","topics":[],"description":"A library for building reinforcement learning and imitation learning agents in Pytorch"}
{"name":"grohith327\/simplegan","full_name":"grohith327\/simplegan","topics":["deep-learning","gan","tensorflow","python-library","computer-vision","generative-adversarial-network","generative-model","python3","neural-networks"],"description":"Tensorflow-based framework to ease training of generative models"}
{"name":"xialuxi\/circleloss_face","full_name":"xialuxi\/CircleLoss_Face","topics":["pytorch","circleloss"],"description":"pytorch CircleLoss for Face recognition"}
{"name":"zgcr\/aicity2020_track2_reid_bebetter","full_name":"zgcr\/AICITY2020_track2_reid_BeBetter","topics":["aicitychallenge","aicity2020","vehicle-reid","pytorch"],"description":"AICITY2020 track2 reid open source code."}
{"name":"nlpatvcu\/multitasking_transformers","full_name":"NLPatVCU\/multitasking_transformers","topics":["clinical-nlp","deep-learning","bert","multi-task-learning"],"description":"Multitask Learning with Pretrained Transformers"}
{"name":"lululxvi\/deep-learning-for-indentation","full_name":"lululxvi\/deep-learning-for-indentation","topics":["deep-learning","indentation","mechanics-of-materials","additive-manufacturing"],"description":"Extraction of mechanical properties of materials through deep learning from instrumented indentation"}
{"name":"lucidrains\/axial-positional-embedding","full_name":"lucidrains\/axial-positional-embedding","topics":["artificial-intelligence","deep-learning","pytorch"],"description":"Axial Positional Embedding for Pytorch"}
{"name":"lukasruff\/classification-ad","full_name":"lukasruff\/Classification-AD","topics":["anomaly-detection","deep-learning","one-class-classification","one-class-learning","deep-anomaly-detection","machine-learning","pytorch","python","python3"],"description":"Repository for the paper \"Rethinking Assumptions in Anomaly Detection\""}
{"name":"amanjain1397\/huse","full_name":"amanjain1397\/HUSE","topics":["pytorch","universal-embedding","huse"],"description":"PyTorch implementation of HUSE: Hierarchical Universal Semantic Embeddings"}
{"name":"alessiacosmos\/trashdetection-huaweicloud","full_name":"Alessiacosmos\/TrashDetection-HuaweiCloud","topics":["pytorch","2020huaweicloud","modelarts"],"description":"\u201c\u534e\u4e3a\u4e91\u676f\u201d2020\u6df1\u5733\u5f00\u653e\u6570\u636e\u5e94\u7528\u521b\u65b0\u5927\u8d5b\u00b7\u751f\u6d3b\u5783\u573e\u56fe\u7247\u5206\u7c7b Pytorch\u7248\u672c\u57fa\u7840\u914d\u7f6e\u6587\u4ef6"}
{"name":"lucidrains\/product-key-memory","full_name":"lucidrains\/product-key-memory","topics":["artificial-intelligence","deep-learning","transformers","pytorch"],"description":"Standalone Product Key Memory module in Pytorch - for augmenting Transformer models"}
{"name":"brendanxwhitaker\/asta","full_name":"langfield\/asta","topics":[],"description":"Shape annotations for numpy arrays and pytorch\/tensorflow tensors."}
{"name":"pierresegonne\/vinf","full_name":"pierresegonne\/VINF","topics":["variational-inference","python3","tensorflow","distributions"],"description":"Repository for DTU Special Course, focusing on Variational Inference using Normalizing Flows (VINF). Supervised by Michael Riis Andersen"}
{"name":"elliottwu\/unsup3d","full_name":"elliottwu\/unsup3d","topics":["3d-objects","3d","3d-reconstuction","unsupervised","unsupervised-learning","cvpr","cvpr-2020","cvpr2020","pytorch"],"description":"(CVPR'20 Oral) Unsupervised Learning of Probably Symmetric Deformable 3D Objects from Images in the Wild"}
{"name":"alvinwan\/neural-backed-decision-trees","full_name":"alvinwan\/neural-backed-decision-trees","topics":["decision-trees","neural-networks","image-classification","explainability","tiny-imagenet","cifar10","cifar100","interpretability","imagenet","neural-backed-decision-trees","pretrained-weights","pretrained-models","pytorch"],"description":"Making decision trees competitive with neural networks on CIFAR10, CIFAR100, TinyImagenet200, Imagenet"}
{"name":"maclory\/spsr","full_name":"Maclory\/SPSR","topics":["structure-preserving","super-resolution","image-restoration","computer-vision","deep-learning"],"description":"Pytorch implementation of Structure-Preserving Super Resolution with Gradient Guidance (CVPR 2020 & TPAMI 2021) "}
{"name":"nvlabs\/ssv","full_name":"NVlabs\/SSV","topics":[],"description":"Pytorch implementation of SSV: Self-Supervised Viewpoint Learning from Image Collections (CVPR 2020)"}
{"name":"aiff22\/pynet","full_name":"aiff22\/PyNET","topics":["pynet","image-enhancement","image-processing","image-reconstruction","deep-learning","raw-to-rgb","computer-vision","mobile","photography","isp","camera","image-to-image-translation","raw","photos"],"description":"Generating RGB photos from RAW image files with PyNET"}
{"name":"prasunroy\/stefann","full_name":"prasunroy\/stefann","topics":["stefann","fannet","colornet","scene-text-editor","font-generation","color-transfer","computer-vision","deep-learning","cvpr","cvpr2020"],"description":":fire: [CVPR 2020] STEFANN: Scene Text Editor using Font Adaptive Neural Network @ The IEEE\/CVF Conference on Computer Vision and Pattern Recognition (CVPR) 2020."}
{"name":"chenmingxiang110\/growing-neural-cellular-automata","full_name":"chenmingxiang110\/Growing-Neural-Cellular-Automata","topics":["cellular-automata","neural-cellular-automata","neural-networks","deep-learning","conway-s-game-of-life"],"description":"A reproduction of growing neural cellular automata using PyTorch."}
{"name":"rmokady\/structural-analogy","full_name":"rmokady\/structural-analogy","topics":[],"description":"Pytorch implementation for the paper \"Structural-analogy from a Single Image Pair\""}
{"name":"aiff22\/pynet-bokeh","full_name":"aiff22\/PyNET-Bokeh","topics":["pynet","bokeh","bokeh-effect","shallow-depth-of-field","blur","blurred-background","aperture","image-processing","image-reconstruction","image-to-image-translation","deep-learning","computer-vision","mobile","photography","smartphones","camera","photos","inference"],"description":"Rendering Realistic Bokeh Images with PyNET"}
{"name":"kaixhin\/imitation-learning","full_name":"Kaixhin\/imitation-learning","topics":["deep-learning","deep-reinforcement-learning","imitation-learning"],"description":"Imitation learning algorithms"}
{"name":"visualcomputinginstitute\/dcm-net","full_name":"JonasSchult\/dcm-net","topics":["dcm-net","3d-deep-learning","deep-learning","semantic-segmentation","3d-segmentation","scannet","cvpr2020","cvpr"],"description":"This work is based on our paper \"DualConvMesh-Net: Joint Geodesic and Euclidean Convolutions on 3D Meshes\", which appeared at the IEEE Conference On Computer Vision And Pattern Recognition (CVPR) 2020."}
{"name":"joffery\/m-ada","full_name":"joffery\/M-ADA","topics":[],"description":"The Pytorch implementation for \"Learning to Learn Single Domain Generalization\" (CVPR 2020)"}
{"name":"glam-imperial\/emotionalconversionstargan","full_name":"glam-imperial\/EmotionalConversionStarGAN","topics":["generative-adversarial-network","stargan","stargan-vc","data-augmentation","emotion-recognition","speech-synthesis","deep-learning","deep-neural-networks","icassp-2020","icassp","imperial-college-london","augsburg-university","imperial-glam"],"description":"This repository contains code to replicate results from the ICASSP 2020 paper \"StarGAN for Emotional Speech Conversion: Validated by Data Augmentation of End-to-End Emotion Recognition\"."}
{"name":"clovaai\/embedding-expansion","full_name":"clovaai\/embedding-expansion","topics":["metric-learning","image-retrieval","image-clustering","deep-learning","synthesis","cars196","stanford-online-products","cub200-2011","cvpr2020","mxnet"],"description":"Official MXNet implementation of \"Embedding Expansion: Augmentation in Embedding Space for Deep Metric Learning\" (CVPR 2020)"}
{"name":"claying\/gckn","full_name":"claying\/GCKN","topics":[],"description":"Pytorch Implementation of Graph Convolutional Kernel Networks"}
{"name":"haamoon\/mmtm","full_name":"haamoon\/mmtm","topics":["multimodal-deep-learning","multimodal-learning","cnn-fusion","pytorch","action-recognition","speech-enhancement","gesture-recognition"],"description":"Implementation of CVPR 2020 paper \"MMTM: Multimodal Transfer Module for CNN Fusion\""}
{"name":"murtyshikhar\/expbert","full_name":"MurtyShikhar\/ExpBERT","topics":["nlp","bert"],"description":"Code for our ACL '20 paper \"Representation Engineering with Natural Language Explanations\""}
{"name":"linzichuan\/admrl","full_name":"LinZichuan\/AdMRL","topics":["meta-reinforcement-learning","model-based-rl","adversarial-training","tensorflow"],"description":"Code for paper \"Model-based Adversarial Meta-Reinforcement Learning\" (https:\/\/arxiv.org\/abs\/2006.08875)"}
{"name":"angelwmab\/time-flies","full_name":"angelwmab\/Time-Flies","topics":["pytorch","style-transfer","cvpr2020"],"description":"Time Flies: Animating a Still Image with Time-Lapse Video as Reference, CVPR2020"}
{"name":"gt-ripl\/multiagentperception","full_name":"GT-RIPL\/MultiAgentPerception","topics":["cvpr2020","multi-agent-systems","semantic-segmentation","multi-view","deep-learning"],"description":"Official source code to CVPR'20 paper, \"When2com: Multi-Agent Perception via Communication Graph Grouping\""}
{"name":"yukariin\/san_pytorch","full_name":"Yukariin\/SAN_pytorch","topics":["pytorch","super-resolution","single-image-super-resolution","attention"],"description":"Second-order Attention Network for Single Image Super-resolution (CVPR-2019)"}
{"name":"cdj0311\/two_tower_recommendation_system","full_name":"cdj0311\/two_tower_recommendation_system","topics":[],"description":"A two tower recommendation system  implementation with tensorflow estimator, for CTR or Recall."}
{"name":"oscarshu0719\/pytorch-stargan-vc2","full_name":"Oscarshu0719\/pytorch-StarGAN-VC2","topics":["pytorch","python","python3","stargan","stargan-vc","stargan-vc2","voice-conversion"],"description":"A PyTorch implementation of StarGAN-VC2."}
{"name":"mingchaozhu\/deeplearning","full_name":"MingchaoZhu\/DeepLearning","topics":["python","deep-learning","machine-learning","xgboost","ensemble-learning","bayesian","regularization"],"description":"Python for\u300aDeep Learning\u300b\uff0c\u8be5\u4e66\u4e3a\u300a\u6df1\u5ea6\u5b66\u4e60\u300b(\u82b1\u4e66) \u6570\u5b66\u63a8\u5bfc\u3001\u539f\u7406\u5256\u6790\u4e0e\u6e90\u7801\u7ea7\u522b\u4ee3\u7801\u5b9e\u73b0"}
{"name":"alshedivat\/meta-blocks","full_name":"alshedivat\/meta-blocks","topics":["learning-to-learn","meta-learning","deep-learning","benchmark","toolbox","tensorflow","python","api"],"description":"A modular toolbox for meta-learning research with a focus on speed and reproducibility."}
{"name":"raminmh\/liquid_time_constant_networks","full_name":"raminmh\/liquid_time_constant_networks","topics":["deep-learning","liquid-neural-networks","recurrent-neural-networks","sequence-modeling","state-space-models","time-series"],"description":"Code Repository for Liquid Time-Constant Networks (LTCs)"}
{"name":"mikoto10032\/automaticweightedloss","full_name":"Mikoto10032\/AutomaticWeightedLoss","topics":["multi-task","multi-task-learning","weigh-losses","auxiliary-tasks","pytorch","deep-learning"],"description":"Multi-task learning using uncertainty to weigh losses for scene geometry and semantics, Auxiliary Tasks in Multi-task Learning"}
{"name":"xuyuan\/waymo_2d_tracking","full_name":"xuyuan\/waymo_2d_tracking","topics":["autonomous-driving","deep-learning","object-detection","tracking","pytorch"],"description":"3rd place solution of Waymo open dataset challenge 2D tracking track"}
{"name":"d-li14\/regnet.pytorch","full_name":"d-li14\/regnet.pytorch","topics":["pytorch","regnet","resnext","imagenet","pretrained-models","neural-architecture-search"],"description":"PyTorch-style and human-readable RegNet with a spectrum of pre-trained models"}
{"name":"positivepeng\/nlp-beginner-projects","full_name":"positivepeng\/nlp-beginner-projects","topics":[],"description":"NLP\u5e38\u89c1\u4efb\u52a1\u5b9e\u73b0\uff08pytorch\u7248\uff09"}
{"name":"rmlin\/comhe","full_name":"rmlin\/CoMHE","topics":["mhe","hyperspherical","energy","sphereface","regularization","neural-network","deep-learning","comhe","cvpr2020"],"description":"Implementation for <Regularizing Neural Networks via Minimizing Hyperspherical Energy> in CVPR'20."}
{"name":"gouthamvgk\/facemesh_coreml_tf","full_name":"gouthamvgk\/facemesh_coreml_tf","topics":[],"description":"This repository contains the code for converting tflite model of Real-time Facial Surface Geometry from Monocular Video on Mobile GPUs and Blazeface to tensorflow and coreml."}
{"name":"malteos\/semantic-document-relations","full_name":"malteos\/semantic-document-relations","topics":["wikipedia","pytorch","document","similarity","transformer","bert","xlnet","document-classification"],"description":"Implementation, trained models and result data for the paper \"Pairwise Multi-Class Document Classification for Semantic Relations between Wikipedia Articles\""}
{"name":"monologg\/goemotions-pytorch","full_name":"monologg\/GoEmotions-pytorch","topics":["goemotions","emotion-classification","pytorch","multi-label-classification","transformers","bert","pipeline"],"description":"Pytorch Implementation of GoEmotions \ud83d\ude0d\ud83d\ude22\ud83d\ude31"}
{"name":"jerrywei03\/covid-q","full_name":"JerryWei03\/COVID-Q","topics":["nlp","covid-19","question-answering","questions","text-classification","sentence-classification","bert","bert-embeddings","svm","svm-model","knn-classification","few-shot-learning","triplet-loss"],"description":"COVID-19 Question Dataset from the paper \"What Are People Asking About COVID-19? A Question Classification Dataset\""}
{"name":"alejandrobarrera\/birdnet2","full_name":"AlejandroBarrera\/birdnet2","topics":["deep-learning","object-detection","point-cloud","pytorch","neural-network","autonomous-driving"],"description":"Official Pytorch implementation of Birdnet+"}
{"name":"xuyige\/bert4doc-classification","full_name":"xuyige\/BERT4doc-Classification","topics":["natural-language-processing","bert","text-classification"],"description":"Code and source for paper ``How to Fine-Tune BERT for Text Classification?``"}
{"name":"microsoft\/cocosnet","full_name":"microsoft\/CoCosNet","topics":["image-synthesis","image-translation","generative-adversarial-network","image-manipulation","gans","cocosnet","pytorch","computer-vision","deep-learning"],"description":"Cross-domain Correspondence Learning for Exemplar-based Image Translation. (CVPR 2020 Oral)"}
{"name":"zlthinker\/kfnet","full_name":"zlthinker\/KFNet","topics":["kalman-filtering","uncertainties","optical-flows","tensorflow","7scenes","localization"],"description":"KFNet: Learning Temporal Camera Relocalization using Kalman Filtering (CVPR 2020 Oral)"}
{"name":"sahith02\/machine-learning-algorithms","full_name":"Sahith02\/machine-learning-algorithms","topics":["machine-learning-algorithms","machine-learning","python","tutorial","implementation","implementation-of-algorithms","deep-learning","deep-learning-algorithms","deep-learning-tutorial","neural-network","regression","classification","trees"],"description":"A curated list of all machine learning algorithms and deep learning algorithms grouped by category."}
{"name":"chenrocks\/distill-bert-textgen","full_name":"ChenRocks\/Distill-BERT-Textgen","topics":["natural-language-processing","machine-translation","knowledge-distillation","bert-model"],"description":"Research code for ACL 2020 paper: \"Distilling Knowledge Learned in BERT for Text Generation\"."}
{"name":"spytensor\/pytorch_img_classification_for_competition","full_name":"spytensor\/pytorch_img_classification_for_competition","topics":["pytorch","image-classification","competition"],"description":"use pytorch to do image classification"}
{"name":"marload\/aquvitae","full_name":"marload\/aquvitae","topics":["tensorflow","pytorch","light-weight","deep-learning","machine-learning","knowledge-distillation","model-compression"],"description":"Knowledge Distillation Toolkit"}
{"name":"nlp-love\/model_log","full_name":"NLP-LOVE\/Model_Log","topics":["machine-learning","deep-learning","model","log","tensorflow","pytorch","metric"],"description":"Model Log \u662f\u4e00\u6b3e\u57fa\u4e8e Python3 \u7684\u8f7b\u91cf\u7ea7\u673a\u5668\u5b66\u4e60(Machine Learning)\u3001\u6df1\u5ea6\u5b66\u4e60(Deep Learning)\u6a21\u578b\u8bad\u7ec3\u8bc4\u4f30\u6307\u6807\u53ef\u89c6\u5316\u5de5\u5177\uff0c\u53ef\u4ee5\u8bb0\u5f55\u6a21\u578b\u8bad\u7ec3\u8fc7\u7a0b\u5f53\u4e2d\u7684\u8d85\u53c2\u6570\u3001Loss\u3001Accuracy\u3001Precision\u3001F1\u503c\u7b49\uff0c\u5e76\u4ee5\u66f2\u7ebf\u56fe\u7684\u5f62\u5f0f\u8fdb\u884c\u5c55\u73b0\u5bf9\u6bd4\uff0c\u8f7b\u677e\u4e09\u6b65\u5373\u53ef\u5b9e\u73b0\u3002"}
{"name":"seongmin-kye\/mct","full_name":"seongmin-kye\/MCT","topics":["few-shot-learning","meta-learning","transductive-learning"],"description":"Pytorch implementation of Meta-Learned Confidence for Few-shot Learning"}
{"name":"parthpathak27\/social-distancing-detector","full_name":"parthsompura\/Social-Distancing-Detector","topics":["python","opencv","yolov3","computer-vision","convolutional-neural-networks","deep-learning","social-distancing","social-distancing-detection","coronavirus"],"description":"An AI Tool to Help Customers Monitor Social Distancing in the Workplace."}
{"name":"pytorchlightning\/lightning-covid19","full_name":"Lightning-AI\/lightning-Covid19","topics":["pytorch","xray","medical-imaging","classification","covid-19"],"description":"Classification for covid-19 chest X-ray images using Lightning"}
{"name":"ml4bio\/e2efold","full_name":"ml4bio\/e2efold","topics":[],"description":"pytorch implementation for \"RNA Secondary Structure Prediction By Learning Unrolled Algorithms\""}
{"name":"lucidrains\/contrastive-learner","full_name":"lucidrains\/contrastive-learner","topics":["artificial-intelligence","self-supervised-learning","contrastive-loss","deep-learning"],"description":"A simple to use pytorch wrapper for contrastive self-supervised learning on any neural network"}
{"name":"cyk1337\/highway-transformer","full_name":"cyk1337\/Highway-Transformer","topics":["highway-transformer","transformer-xl","language-model","pytorch","transformer","gating-transformer","gated-attention"],"description":"[ACL\u201820] Highway Transformer: A Gated Transformer."}
{"name":"suessmann\/intelligent_traffic_lights","full_name":"suessmann\/intelligent_traffic_lights","topics":["q-learning","deep-learning","neural-network","reinforcement-learning","traffic-lights","traffic-control"],"description":"Traffic Lights Control with Deep Learning"}
{"name":"hitlic\/bijou","full_name":"hitlic\/bijou","topics":[],"description":"A fastai-like framework for training, tuning and probing pytorch models, which is compatible with pytorch_geometric and DGL."}
{"name":"grishavak\/lidia-denoiser","full_name":"grishavak\/LIDIA-denoiser","topics":["image-denoising","residual-learning","pytorch","adaptation","lightweight","lightweight-neural-network","fine-tuning","deep-learning","machine-learning","image-processing"],"description":"LIDIA: Lightweight Learned Image Denoising with Instance Adaptation (NTIRE, 2020)"}
{"name":"miemie2013\/keras-solo","full_name":"miemie2013\/Keras-SOLO","topics":["keras","solo","solov2","solov1"],"description":"Keras-SOLO(Segmenting Objects by Locations)"}
{"name":"affjljoo3581\/expanda","full_name":"affjljoo3581\/Expanda","topics":["dataset","deep-learning","nlp","bert","gpt2","wikipedia","corpus","build","machine-learning","python","natural-language-processing","datasets","pytorch","tensorflow"],"description":"The universal integrated corpus-building environment."}
{"name":"frank-zyw\/chinese-text-classification","full_name":"Frank-ZYW\/Chinese-Text-Classification","topics":[],"description":"\u57fa\u4e8ePytorch\u5b9e\u73b0\u7684\u4e00\u4e9b\u7ecf\u5178\u81ea\u7136\u8bed\u8a00\u5904\u7406\u6a21\u578b\u4e2d\u6587\u77ed\u6587\u672c\u5206\u7c7b\u4efb\u52a1\uff0c\u5305\u542bTextCNN\uff0cTextRCNN\uff0cFastText\uff0cBERT\uff0cROBERT\u4ee5\u53caERNIE"}
{"name":"mnamysl\/nat-acl2020","full_name":"mnamysl\/nat-acl2020","topics":["deep-learning","nlp","natural-language-processing","sequence-labeling","named-entity-recognition","robustness","ocr","optical-character-recognition","nat","flair","typos","flair-framework","misspellings","ner","data-augmentation","stability-training"],"description":null}
{"name":"zxpzhong\/3d-recgan-pytorch","full_name":"zxpzhong\/3D-RecGAN-pytorch","topics":["deep-learning","3d-reconstruction","gan","unet","pytorch"],"description":"A pytorch implement of 3D-RecGAN"}
{"name":"woodywff\/nas_3d_unet","full_name":"woodywff\/nas_3d_unet","topics":["neural-architecture-search","segmentation","brain-tumor-segmentation","brats","pytorch"],"description":"Neural Architecture Search for Gliomas Segmentation on Multimodal Magnetic Resonance Imaging"}
{"name":"ai4ce\/deepsoro","full_name":"ai4ce\/DeepSoRo","topics":["robotics","softrobot","perception","data-driven","deep-learning","soft-robotics","softrobotics"],"description":"[RA-L\/ICRA2020] Real-time Soft Body 3D Proprioception via Deep Vision-based Sensing"}
{"name":"breezedeus\/cnstd","full_name":"breezedeus\/CnSTD","topics":["object-detection","pytorch","text-detection","deep-learning","math-formula-detection"],"description":"CnSTD: \u57fa\u4e8e PyTorch\/MXNet \u7684 \u4e2d\u6587\/\u82f1\u6587 \u573a\u666f\u6587\u5b57\u68c0\u6d4b\uff08Scene Text Detection\uff09Python3 \u5305"}
{"name":"lonepatient\/electra_pytorch","full_name":"lonePatient\/electra_pytorch","topics":["electra","pytorch","bert","nlp","deeplearning","glue","language-model"],"description":" ELECTRA: Pre-training Text Encoders as Discriminators Rather Than Generators "}
{"name":"slientge\/sequential_recommendation_tensorflow","full_name":"slientGe\/Sequential_Recommendation_Tensorflow","topics":["recommendation","tensorflow","python","caser","gru4rec","attrec","fpmc","transrec","sequential-recommendation","sasrec"],"description":"Several sequential recommended models implemented by tenosrflow1.x"}
{"name":"mhashas\/document-image-unwarping-pytorch","full_name":"mhashas\/Document-Image-Unwarping-pytorch","topics":["computer-vision","deep-learning","convolutional-neural-networks","unet","deeplab-v3-plus","pytorch","document-unwarping","mobilenet-v2","resnet"],"description":"Pytorch implementation and extension of \"DocUnet: Document Image Unwarping via A Stacked U-Net\""}
{"name":"he-dhamo\/simsg","full_name":"he-dhamo\/simsg","topics":["scene-graphs","image-manipulation","gans","generative-models","pytorch","deep-learning","graph-convolution"],"description":"Semantic Image Manipulation using Scene Graphs (CVPR 2020)"}
{"name":"szzexpoi\/air","full_name":"szzexpoi\/AiR","topics":["saliency-maps","attention-supervision","attention","machine-attention"],"description":"Official Repository for ECCV 2020 paper \"AiR: Attention with Reasoning Capability\""}
{"name":"jenojp\/extractacy","full_name":"jenojp\/extractacy","topics":["nlp","spacy","spacy-extension","ner","entity-extraction","spacy-pipeline","pattern-matching","entity-linking"],"description":"Spacy pipeline object for extracting values that correspond to a named entity (e.g., birth dates, account numbers, laboratory results)"}
{"name":"weixmath\/view-gcn","full_name":"weixmath\/view-GCN","topics":[],"description":"Pytorch code for view-GCN (CVPR2020)"}
{"name":"ligouhai-bigone\/sentiment-analysis-chinese-pytorch","full_name":"Ligouhai-bigone\/Sentiment-Analysis-Chinese-pytorch","topics":[],"description":"Sentiment Analysis-Pytorch(\u60c5\u611f\u5206\u6790\u7684Pytorch\u5b9e\u73b0)"}
{"name":"saminens\/medi-coqa","full_name":"saminens\/Medi-CoQA","topics":["conversational-ai","pytorch","question-answering","dockerfile","coqa","squad","albert","clinicalbert","bert"],"description":"Conversational Question Answering on Clinical Text"}
{"name":"jintao-huang\/efficientdet_pytorch","full_name":"Jintao-Huang\/EfficientDet_PyTorch","topics":["efficientdet","pytorch","object-detection"],"description":"EfficientDet_PyTorch \u76ee\u6807\u68c0\u6d4b(Object Detection)"}
{"name":"dongpoli\/ec-bert","full_name":"DongPoLI\/EC-BERT","topics":["bert","relation-extraction","bert-relation-extraction","pytorch","relation-classification","r-bert","ec-bert"],"description":"Relation Classificaton based on information enhanced BERT"}
{"name":"vsainteuf\/lightweight-temporal-attention-pytorch","full_name":"VSainteuf\/lightweight-temporal-attention-pytorch","topics":["deep-learning","deep-neural-networks","deeplearning","self-attention","satellite","satellite-imagery","satellite-data","time-series","classification","pytorch","remote-sensing","time-series-classification","machine-learning"],"description":"A PyTorch implementation of the Light Temporal Attention Encoder (L-TAE) for satellite image time series. classification"}
{"name":"chandar-lab\/patchup","full_name":"chandar-lab\/PatchUp","topics":["regularization-methods","convolutional-neural-network","pytorch"],"description":null}
{"name":"includeamin\/covid-19","full_name":"includeamin\/COVID-19","topics":["covid-19","classification","coronavirus","covid-virus","covid-data","x-ray","coronavirus-analysis","tensorflow","keras","deep-learning","docker","python3","python","fastapi","xray-image","detection","dataset","label","ct","computer-vision"],"description":"detection of covid-19 from X-ray images Using keras and tensorflow"}
{"name":"puneesh00\/cs-mri-gan","full_name":"puneesh00\/cs-mri-gan","topics":["mri","reconstruction","compressive-sensing","gan","cvpr2020","cvprw","inverse-problems","deep-learning","cvpr"],"description":"Structure preserving Compressive Sensing MRI Reconstruction using Generative Adversarial Networks (CVPRW 2020)"}
{"name":"fxmeng\/filter-grafting","full_name":"fxmeng\/filter-grafting","topics":["filter","grafting","pruning","distillation","multi-network","pytorch"],"description":"Filter Grafting for Deep Neural Networks(CVPR 2020)"}
{"name":"cientgu\/giqa","full_name":"cientgu\/GIQA","topics":["generative-model","image-quality-assessment","generative-adversarial-networks"],"description":"Pytorch implementation of Generated Image Quality Assessment"}
{"name":"badbadbadboy\/pytorch.ctpn","full_name":"BADBADBADBOY\/pytorch.ctpn","topics":["ctpn","pytorch","ocr","text-detection","python3","ohem"],"description":"pytorch, ctpn ,text detection ,ocr,\u6587\u672c\u68c0\u6d4b"}
{"name":"chriswu1997\/pq-net","full_name":"ChrisWu1997\/PQ-NET","topics":["paper","3d-shapes","deep-learning","cvpr2020"],"description":"code for our CVPR 2020 paper \"PQ-NET: A Generative Part Seq2Seq Network for 3D Shapes\""}
{"name":"manpreet1130\/realtime-sudoku-solver","full_name":"manpreet1130\/RealTime-Sudoku-Solver","topics":["pytorch","opencv-python","image-processing","cnn","artificial-intelligence","sudoku-solver","realtime"],"description":"Solving sudoku puzzles with the help of OpenCV and PyTorch(CNN)"}
{"name":"hasnainraz\/fast-aginggan","full_name":"HasnainRaz\/Fast-AgingGAN","topics":["gan","generative-adversarial-network","face-aging","cycle-gan","pytorch","pytorch-lightning","neural-network","tensorboard","cnn","realtime-face-aging","faceapp"],"description":"A deep learning model to age faces in the wild, currently runs at 60+ fps on GPUs"}
{"name":"csyanbin\/scot","full_name":"csyanbin\/SCOT","topics":["semantic-correspondence","pytorch","optimal-transport"],"description":"CVPR 2020, Semantic Correspondence as an Optimal Transport Problem, Pytorch Implementation. "}
{"name":"justusthies\/neuraltexgen","full_name":"JustusThies\/NeuralTexGen","topics":["texture-mapping","pytorch","optimization","image-generation"],"description":"Image-space texture optimization of 3D meshes using PyTorch"}
{"name":"raymond-sci\/pica","full_name":"Raymond-sci\/PICA","topics":[],"description":"Official Pytorch Implementation for CVPR'20 paper: Deep Semantic Clustering by Partition Confidence Maximisation"}
{"name":"chenchongthu\/ensfm","full_name":"chenchongthu\/ENSFM","topics":["recommender-system","neural-network","efficient-algorithm","non-sampling","recommendation","context","feature"],"description":"This is our implementation of ENSFM: Efficient Non-Sampling Factorization Machines (WWW 2020)"}
{"name":"yangrui2015\/sparse-reward-algorithms","full_name":"YangRui2015\/Sparse-Reward-Algorithms","topics":["sparse-reward-algorithms","hindsight-experience-replay","ddpg","curriculum-learning","imitation-learning","tensorflow"],"description":"Implement many Sparse Reward algorithms in Gym Fetch environment"}
{"name":"dwromero\/att_gconvs","full_name":"dwromero\/att_gconvs","topics":["equivariance","group-convolution","cnns","attention","pytorch"],"description":"Code repository for the paper \"Attentive Group Equivariant Convolutional Neural Networks\" published at ICML 2020. https:\/\/arxiv.org\/abs\/2002.03830"}
{"name":"pvlachas\/rnn-rc-chaos","full_name":"pvlachas\/RNN-RC-Chaos","topics":["rnn","rc","chaos","echo-state-networks","recurrent-neural-networks","kuramoto-sivashinsky","lorenz-96","lorenz-3d","reservoir-computing","reservoir-computer","backpropagation","forecasting","esn","rnn-tensorflow","rnn-gru","rnn-lstm"],"description":"RNN architectures trained with Backpropagation and Reservoir Computing (RC) methods for forecasting high-dimensional chaotic dynamical systems."}
{"name":"daintlab\/confidence-aware-learning","full_name":"daintlab\/confidence-aware-learning","topics":["pytorch"],"description":"Confidence-Aware Learning for Deep Neural Networks (ICML2020)"}
{"name":"wuxinwang1997\/wheatdetection","full_name":"wuxinwang1997\/wheatdetection","topics":[],"description":"Pytorch project for https:\/\/www.kaggle.com\/c\/global-wheat-detection"}
{"name":"iduta\/pyconvsegnet","full_name":"iduta\/pyconvsegnet","topics":["semantic-segmentation","scene-parsing","ade20k","pytorch","scene-recognition","deep-learning","computer-vision","pattern-recognition","machine-learning","neural-networks","pyconv","segmentation"],"description":"Semantic Segmentation PyTorch code for our paper: Pyramidal Convolution: Rethinking Convolutional Neural Networks for Visual Recognition (https:\/\/arxiv.org\/pdf\/2006.11538.pdf)"}
{"name":"prasanna1991\/latentmixing","full_name":"Prasanna1991\/LatentMixing","topics":["semi-supervised","latent-mixmatch","manifold-mixmatch","latent-mixing","pytorch"],"description":"The implementation of \"Semi-supervised Medical Image Classification with Global Latent Mixing\". [MICCAI2020]"}
{"name":"erenbalatkan\/depthvisualizer","full_name":"ErenBalatkan\/DepthVisualizer","topics":["point-clouds","depth-maps","computer-vision","deep-learning","tools"],"description":"OpenGL Based Python Library for 3D visualization of Point Clouds & Depth Maps"}
{"name":"clovaai\/assembled-cnn","full_name":"clovaai\/assembled-cnn","topics":["convolutional-neural-networks","tensorflow","image-classification","deep-learning","transfer-learning","computer-vision","mce","imagenet","inference-throughput","robustness","food-101"],"description":"Tensorflow implementation of \"Compounding the Performance Improvements of Assembled Techniques in a Convolutional Neural Network\""}
{"name":"jusperlee\/dual-path-rnn-pytorch","full_name":"JusperLee\/Dual-Path-RNN-Pytorch","topics":["pytorch","speech-separation-algorithm","deep-learning","rnn-model","speech-separation"],"description":"Dual-path RNN: efficient long sequence modeling for time-domain single-channel speech separation implemented by Pytorch"}
{"name":"d-li14\/psconv","full_name":"d-li14\/PSConv","topics":["convolution","multi-scale","feature-pyramids","object-detection","instance-segmentation","mmdetection","pytorch","eccv2020"],"description":"[ECCV 2020] PSConv: Squeezing Feature Pyramid into One Compact Poly-Scale Convolutional Layer"}
{"name":"eliahuhorwitz\/deepsim","full_name":"eliahuhorwitz\/DeepSIM","topics":["single-image","image-editing","deep-neural-networks","generative-adversarial-network","computer-vision","computer-graphics","edge-to-image","segmantation-to-image","pytorch","image-to-image-translation","deep-learning","iccv2021"],"description":"Official PyTorch implementation of the paper: \"DeepSIM: Image Shape Manipulation from a Single Augmented Training Sample\" (ICCV 2021 Oral)"}
{"name":"yeh-yu-hsuan\/bifuse","full_name":"Yeh-yu-hsuan\/BiFuse","topics":["depth","depth-estimation","monocular-depth-estimation","spherical","deep-learning","computer-vision","cvpr2020","360-camera","pytorch"],"description":"[CVPR2020] BiFuse: Monocular 360 Depth Estimation via Bi-Projection Fusion"}
{"name":"pokaxpoka\/sunrise","full_name":"pokaxpoka\/sunrise","topics":["reinforcement-learning","rl","deep-learning","mujoco","dm-control","codebase","model-free","off-policy","deep-reinforcement-learning","deep-neural-networks","deep-q-learning","deep-q-network","soft-actor-critic","sac","rainbow"],"description":"SUNRISE: A Simple Unified Framework for Ensemble Learning in Deep Reinforcement Learning"}
{"name":"suoivy\/lpd-net","full_name":"Suoivy\/LPD-net","topics":["computer-vision","point-cloud","deep-learning","place-recognition"],"description":"LPD-Net: 3D Point Cloud Learning for Large-Scale Place Recognition and Environment Analysis, ICCV 2019, Seoul, Korea"}
{"name":"autosoft-dev\/code-bert","full_name":"autosoft-dev\/code-bert","topics":["machine-learning","machine-learning-on-source-code","bert-model","roberta","mlmodel","python3","deep-learning","transformer","function-docstring-pairs","python"],"description":"Automatically check mismatch between code and comments using AI and ML"}
{"name":"jind11\/titlestylist","full_name":"jind11\/TitleStylist","topics":["natural-language-processing","summarization","transformer","style-transfer","pytorch-implementation"],"description":"Source code for our \"TitleStylist\" paper at ACL 2020"}
{"name":"maartengr\/reinlife","full_name":"MaartenGr\/ReinLife","topics":["python","reinforcement-learning","artificial-intelligence","artificial-life","deep-learning"],"description":"Creating Artificial Life with Reinforcement Learning"}
{"name":"yiqun-wang\/mgcn","full_name":"yiqun-wang\/MGCN","topics":["pytorch","descriptor-learning","multiscale-gcns","graphics","siggraph"],"description":"MGCN: Descriptor Learning using Multiscale GCNs (SIGGRAPH 2020)"}
{"name":"jywa\/overlap_local_sgd","full_name":"JYWa\/Overlap_Local_SGD","topics":["pytorch","distributed-optimization","sgd-optimizer","deep-learning"],"description":"Implementation of (overlap) local SGD in Pytorch"}
{"name":"bojone\/adafactor","full_name":"bojone\/adafactor","topics":[],"description":"adafactor optimizer for keras"}
{"name":"deepraj1729\/yplate","full_name":"deepraj1729\/yplate","topics":["machine-learning","deep-learning","neural-networks","yolov3","opencv","detect-plates","number-plate-recognition","numpy","tensorflow","computer-vision"],"description":"License Plate Detection library powered by YOLO v3 and OpenCV with Command Line Interface"}
{"name":"kaist-amsg\/composition-conditioned-crystal-gan","full_name":"kaist-amsg\/Composition-Conditioned-Crystal-GAN","topics":[],"description":"Composition-Conditioned Crystal GAN pytorch code"}
{"name":"mrrobot2211\/pytorch-deep-photo-enhancer","full_name":"MrRobot2211\/pytorch-deep-photo-enhancer","topics":["deep-photo-enhancer","pytorch","gans"],"description":"pytorch implementation of deep photo enhancer"}
{"name":"jelly54\/pytorch_train","full_name":"tf2jaguar\/pytorch_train","topics":["resnet-34","pytorch-tutorial"],"description":"\u6bd5\u4e1a\u8bbe\u8ba1 \u4f7f\u7528pytorch\u8fdb\u884c\u6df1\u5ea6\u5b66\u4e60\u7f51\u7edc\u6a21\u578b\u8bad\u7ec3\uff0c\u5b9e\u73b0\u8f66\u578b\u8bc6\u522b"}
{"name":"pvjosue\/waveblocks","full_name":"pvjosue\/WaveBlocks","topics":["pytorch","microscopy","psf-engineering","optimization-framework","wave-optics","calibration"],"description":"Optimization framework developed in Pytorch, allowing calibration, and joint optimization of optics and deep learning models."}
{"name":"apockill\/creepycrawlai","full_name":"apockill\/CreepyCrawlAI","topics":["godot-python","tensorflow","reinforcement-learning","genetic-algorithm","godot"],"description":"A deep neural network evolutionary sim, built with Godot, godot-python, and tensorflow."}
{"name":"twni2016\/meta-sac","full_name":"twni2016\/Meta-SAC","topics":["automl","sac","soft-actor-critic","mujoco","deep-reinforcement-learning","hyperparameter-optimization","pytorch","meta-learning"],"description":"Auto-tune the Entropy Temperature of Soft Actor-Critic via Metagradient - 7th ICML AutoML workshop 2020"}
{"name":"ma-dan\/keras-yolo4","full_name":"Ma-Dan\/keras-yolo4","topics":["keras","yolov4","object-detection"],"description":"A Keras implementation of YOLOv4 (Tensorflow backend)"}
{"name":"yangnaruto\/fq-gan","full_name":"YangNaruto\/FQ-GAN","topics":["biggan","gans","pytorch","tensorflow","image-translation","image-generation","stylegan"],"description":"Official implementation of FQ-GAN"}
{"name":"d-li14\/dhm","full_name":"d-li14\/DHM","topics":["pytorch","imagenet","pretrained-models","deeply-supervised","knowledge-distillation","cvpr2020"],"description":"[CVPR 2020] Dynamic Hierarchical Mimicking Towards Consistent Optimization Objectives"}
{"name":"tatigabru\/kaggle-rsna","full_name":"tatigabru\/kaggle-rsna","topics":["object-detection","python","machine-learning","deep-learning","detection","image-processing","image-augmentation","pneumonia-detection","retinanet","neural-networks","classification","medical-imaging","computer-assisted-diagnosis"],"description":"Deep Learning for Automatic Pneumonia Detection, RSNA challenge"}
{"name":"ncarraz\/esrganplus","full_name":"ncarraz\/ESRGANplus","topics":["super-resolution","deep-learning","generative-adversarial-network","convolutional-neural-network"],"description":"ICASSP 2020 - ESRGAN+ : Further Improving Enhanced Super-Resolution Generative Adversarial Network - ICPR 2020 - Tarsier: Evolving Noise Injection in Super-Resolution GANs"}
{"name":"zlinao\/variational-transformer","full_name":"zlinao\/Variational-Transformer","topics":["machine-learning","transformer","variational-transformer","dialog","dialogue-systems"],"description":"Variational Transformers for Diverse Response Generation"}
{"name":"lyhue1991\/torchkeras","full_name":"lyhue1991\/torchkeras","topics":[],"description":"Pytorch\u2764\ufe0f  Keras \ud83d\ude0b\ud83d\ude0b"}
{"name":"bojone\/bert-of-theseus","full_name":"bojone\/bert-of-theseus","topics":[],"description":"bert-of-theseus via bert4keras"}
{"name":"tshrjn\/finetune-qa","full_name":"tshrjn\/Finetune-QA","topics":[],"description":"BERT, RoBERTa fine-tuning over SQuAD Dataset using pytorch-lightning\u26a1\ufe0f, \ud83e\udd17-transformers & \ud83e\udd17-nlp."}
{"name":"utahnlp\/infotabs-code","full_name":"utahnlp\/infotabs-code","topics":["nlp","nlp-datasets","nlp-machine-learning","acl2020","wikipedia","tables","semi-structured-data","svm","roberta","transformer","nli","inference","infotabs"],"description":"Implementation of the semi-structured inference model in our ACL 2020 paper, INFOTABS: Inference on Tables as Semi-structured Data."}
{"name":"lyqun\/pu-net_pytorch","full_name":"lyqun\/PU-Net_pytorch","topics":["pytorch","cvpr2018","point-cloud","pu-net","upsampled-point-clouds"],"description":"PyTorch Implementation of PU-Net. PU-Net: Point Cloud Upsampling Network, CVPR 2018"}
{"name":"maheshkkumar\/fscc","full_name":"maheshkkumar\/fscc","topics":["crowd-counting","few-shot-learning","meta-learning","pytorch"],"description":"Few-Shot Scene Adaptive Crowd Counting Using Meta-Learning (WACV 2020)"}
{"name":"gkunnan97\/fastgcn_pytorch","full_name":"Gkunnan97\/FastGCN_pytorch","topics":["fastgcn","pytorch","as-gcn"],"description":"an implementation of FastGCN with pytorch"}
{"name":"malllabiisc\/compgcn","full_name":"malllabiisc\/CompGCN","topics":["link-prediction","relation-embeddings","iclr2020","graph-convolutional-networks","deep-learning","pytorch","graph-representation-learning"],"description":"ICLR 2020: Composition-Based Multi-Relational Graph Convolutional Networks"}
{"name":"yinyunie\/total3dunderstanding","full_name":"yinyunie\/Total3DUnderstanding","topics":["scene-understanding","scene-reconstruction","cvpr2020","pytorch"],"description":"Implementation of CVPR'20 Oral: Total3DUnderstanding: Joint Layout, Object Pose and Mesh Reconstruction for Indoor Scenes from a Single Image"}
{"name":"lucidrains\/siren-pytorch","full_name":"lucidrains\/siren-pytorch","topics":["artificial-intelligence","deep-learning","activation-functions"],"description":"Pytorch implementation of SIREN -  Implicit Neural Representations with Periodic Activation Function"}
{"name":"guolinke\/tupe","full_name":"guolinke\/TUPE","topics":["bert","pretraining","language-model","transformer"],"description":"Transformer with Untied Positional Encoding (TUPE). Code of paper \"Rethinking Positional Encoding in Language Pre-training\". Improve existing models like BERT."}
{"name":"ziwei-zh\/corrpm","full_name":"ziwei-zh\/CorrPM","topics":["human-parsing","semantic-segmantation","pytorch","cvpr2020","cvpr"],"description":"Pytorch implementation of CVPR2020 paper \"Correlating Edge, Pose with Parsing\""}
{"name":"svip-lab\/indoor-sfmlearner","full_name":"svip-lab\/Indoor-SfMLearner","topics":["pytorch","eccv2020","unsupervised-learning","indoor","depth-estimation","nyuv2","extract-superpixel","scannet","pose-estimation","self-supervised"],"description":"[ECCV'20] Patch-match and Plane-regularization for Unsupervised Indoor Depth Estimation"}
{"name":"dingmyu\/dapn","full_name":"dingmyu\/DAPN","topics":[],"description":"A pytorch implementation of \"Domain-Adaptive Few-Shot Learning\""}
{"name":"mikel-brostrom\/yolov3_deepsort_pytorch","full_name":"mikel-brostrom\/Yolov3_DeepSort_Pytorch","topics":["deep-sort","yolo-v3","pytorch","real-time","multple-object-tracking","pedestrian-tracking","computer-camera","yolov3","deep-association-metric","pytorch-yolov3","video","web-camera","rtsp-stream","http-stream","simple-online-and-realtime-tracking","you-only-look-once"],"description":"Real-time multi-person tracker using YOLO v3 and deep sort"}
{"name":"mdeib\/berkeley-deep-rl-pytorch-starter","full_name":"mdeib\/berkeley-deep-RL-pytorch-starter","topics":["cs285","reinforcement-learning","pytorch-rl"],"description":"Pytorch starter code for UC Berkeley's cs285 assignments"}
{"name":"jimmychame\/sadnet","full_name":"JimmyChame\/SADNet","topics":[],"description":"Pytorch code for \"Spatial-Adaptive Network for Single Image Denoising\""}
{"name":"cendelian\/yolov4-hat-detection","full_name":"yumulinfeng1\/YOLOv4-Hat-detection","topics":["yolov4","hat-detection","pytorch"],"description":"\u57fa\u4e8eYOLOv4\u7684\u5b89\u5168\u5e3d\u4f69\u6234\u68c0\u6d4b"}
{"name":"xcmyz\/fastspeech2","full_name":"xcmyz\/FastSpeech2","topics":["fastspeech","fastspeech2","speech-synthesis","pytorch","tts"],"description":"The Implementation of FastSpeech2 Based on Pytorch."}
{"name":"christophreich1996\/semantic_pyramid_for_image_generation","full_name":"ChristophReich1996\/Semantic_Pyramid_for_Image_Generation","topics":["generative-adversarial-network","gan","adversarial-learning","semantic-pyramid","image-generation","pytorch","deep-learning","deep-neural-networks","machine-learning","convolutional-neural-networks","cnn","semantic-pyramid-image-generation"],"description":"PyTorch reimplementation of the paper: \"Semantic Pyramid for Image Generation\" [CVPR 2020]."}
{"name":"jojonki\/beamsearch","full_name":"jojonki\/BeamSearch","topics":[],"description":"Beam search decoding with Pytorch"}
{"name":"anyleopeace\/durleca","full_name":"AnyLeoPeace\/DURLECA","topics":["reinforcement-learning","deep-learning"],"description":"The released code for DUal-objective Reinforcement-Learning Epidemic Control Agent."}
{"name":"adumrewal\/imagematting","full_name":"adumrewal\/imageMatting","topics":["deep-image-matting","deep-learning","deep-neural-networks","model-training","flexible-code","foreground-segmentation","foreground-detection","foreground-background","background-image","foreground-extraction","foreground-segmentation-network","image-segmentation","image-matting","matting","computer-vision","background-subtraction","background-removal"],"description":"Simplified Deep Image Matting training code with keras on tensorflow"}
{"name":"c8241998\/cv_attention","full_name":"c8241998\/CV_attention","topics":[],"description":"pytorch-version implementation codes of some CV attention models"}
{"name":"justusschock\/dl-utils","full_name":"justusschock\/dl-utils","topics":["pytorch","python","cnn","deep-learning","neural-network","deep-neural-networks","models","loss-functions","metrics"],"description":"Utilities for Deep Learning with PyTorch (models, losses, metrics etc.)"}
{"name":"google-research\/fast-soft-sort","full_name":"google-research\/fast-soft-sort","topics":["differentiable","sorting","ranking","pytorch","tensorflow","jax"],"description":"Fast Differentiable Sorting and Ranking"}
{"name":"allenai\/dont-stop-pretraining","full_name":"allenai\/dont-stop-pretraining","topics":["natural-language-processing","pretrained-language-model"],"description":"Code associated with the Don't Stop Pretraining ACL 2020 paper"}
{"name":"clovaai\/clovacall","full_name":"clovaai\/ClovaCall","topics":["speech-recognition","speech-corpus","korean-speech","call-based-speech-corpus","goal-oriented-dialog","interspeech2020"],"description":"ClovaCall dataset and Pytorch LAS baseline code (Interspeech 2020)"}
{"name":"da-southampton\/read_bert_code","full_name":"DA-southampton\/Read_Bert_Code","topics":[],"description":"Bert\u6e90\u7801\u9605\u8bfb\u4e0e\u8bb2\u89e3(Pytorch\u7248\u672c)-\u4ee5BERT\u6587\u672c\u5206\u7c7b\u4ee3\u7801\u4e3a\u4f8b\u5b50"}
{"name":"alexeykarnachev\/full_stack_transformer","full_name":"alexeykarnachev\/full_stack_transformer","topics":["transformers","pytorch-lightning","language-model","telegram-bot","language-model-generation","language-model-finetuning","gpt-2"],"description":"Pytorch library for end-to-end transformer models training, inference and serving"}
{"name":"ejcgt\/attention-target-detection","full_name":"ejcgt\/attention-target-detection","topics":["cvpr2020","attention","gaze-estimation","pytorch","gaze","cvpr","dataset"],"description":"[CVPR2020] \"Detecting Attended Visual Targets in Video\""}
{"name":"zsyoaoa\/danet","full_name":"zsyOAOA\/DANet","topics":[],"description":"Dual Adversarial Network: Toward Real-world Noise Removal and Noise Generation (ECCV 2020) (Pytorch)"}
{"name":"michaelharms\/comcrawl","full_name":"michaelharms\/comcrawl","topics":["commoncrawl","python","data","common-crawl","scraping","deep-learning","training-dataset"],"description":"A python utility for downloading Common Crawl data"}
{"name":"kayoyin\/transformer-slt","full_name":"kayoyin\/transformer-slt","topics":["sign-language-translation","neural-machine-translation","transformer","machine-learning","deep-learning"],"description":"Sign Language Translation with Transformers (COLING'2020, ECCV'20 SLRTP Workshop)"}
{"name":"borchero\/pycave","full_name":"borchero\/pycave","topics":["machine-learning","gaussian-mixture-models","markov-model","pytorch","kmeans","pytorch-lightning"],"description":"Traditional Machine Learning Models for Large-Scale Datasets in PyTorch."}
{"name":"cdj0311\/dssm","full_name":"cdj0311\/dssm","topics":[],"description":"A BiGRU-Attention DSSM implementation with tensorflow estimator."}
{"name":"lucidrains\/compressive-transformer-pytorch","full_name":"lucidrains\/compressive-transformer-pytorch","topics":["artificial-intelligence","deep-learning","transformer","attention-mechanism"],"description":"Pytorch implementation of Compressive Transformers, from Deepmind"}
{"name":"martinomensio\/spacy-sentence-bert","full_name":"MartinoMensio\/spacy-sentence-bert","topics":["nlp","spacy","models","bert","sentence-bert","sentence-transformers"],"description":"Sentence transformers models for SpaCy"}
{"name":"zacario-li\/fast-scnn_pytorch","full_name":"zacario-li\/Fast-SCNN_pytorch","topics":["pytorch","fast-scnn","semantic-segmentation","segmentation"],"description":"A PyTorch Implementation of Fast-SCNN: Fast Semantic Segmentation Network(PyTorch >= 1.4)"}
{"name":"yuk6heo\/ivos-atnet","full_name":"yuk6heo\/IVOS-ATNet","topics":["video-object-segmentation"],"description":"Pytorch implementation of ECCV2020 paper, \"Interactive Video Object Segmentation Using Global and Local Transfer Modules\""}
{"name":"hairlab\/pbsgd","full_name":"HAIRLAB\/pbSGD","topics":["deep-learning","machine-learning","optimization","pytorch"],"description":"Powered Stochastic Gradient Descent Methods for AcceleratedNonconvex Optimization"}
{"name":"microsoft\/reconner","full_name":"microsoft\/reconner","topics":["ner-data","nlp","ai","data"],"description":"ReconNER, Debug annotated Named Entity Recognition (NER) data for inconsistencies and get insights on improving the quality of your data."}
{"name":"zassou65535\/image_generator","full_name":"zassou65535\/image_generator","topics":["python","gan","image-generation","dcgan","pytorch"],"description":"GAN\u306epytorch\u5b9f\u88c5"}
{"name":"lucidrains\/memory-compressed-attention","full_name":"lucidrains\/memory-compressed-attention","topics":["artificial-intelligence","deep-learning","attention-mechanism"],"description":"Implementation of Memory-Compressed Attention, from the paper \"Generating Wikipedia By Summarizing Long Sequences\""}
{"name":"maraoz\/gpt-scrolls","full_name":"maraoz\/gpt-scrolls","topics":["openai","gpt-3","language-model","transformer","generator","safety"],"description":"A collaborative collection of open-source safe GPT-3 prompts that work well"}
{"name":"qiaoranc\/tf_resnest_regnet_model","full_name":"QiaoranC\/tf_ResNeSt_RegNet_model","topics":[],"description":"tensorflow 2.x version of ResNeSt,RegNet,DETR"}
{"name":"abdelrahman-gaber\/tf2-object-detection-api-tutorial","full_name":"abdelrahman-gaber\/tf2-object-detection-api-tutorial","topics":["tf2","tensorflow2","tensorflow","object-detection","object-detection-api","tensorflow2-models","keras-tensorflow","tf2-tutorial","object-detection-api-tutorial","tensorflow-object-detection-api","tf2-object-detection-api","detection-models"],"description":"Tensorflow 2 Object Detection API Tutorial. This tutorial will take you from installation, to running pre-trained detection model, and training your model with a custom dataset, then exporting it for inference."}
{"name":"siyuhuang\/posestylizer","full_name":"siyuhuang\/PoseStylizer","topics":["person-image-generation","pytorch"],"description":"PyTorch implementation of Generating Person Images with Appearance-aware Pose Stylizer (IJCAI 2020)"}
{"name":"longlongman\/casrel-pytorch-reimplement","full_name":"longlongman\/CasRel-pytorch-reimplement","topics":[],"description":"Pytorch reimplement of the paper \"A Novel Cascade Binary Tagging Framework for Relational Triple Extraction\" ACL2020. The original code is written in keras."}
{"name":"mdeib\/berkeley-deep-rl-pytorch-solutions","full_name":"mdeib\/berkeley-deep-RL-pytorch-solutions","topics":["cs285","reinforcement-learning","pytorch-rl"],"description":"Pytorch solutions for UC Berkeley's cs285 assignments"}
{"name":"audioku\/meta-transfer-learning","full_name":"audioku\/meta-transfer-learning","topics":["meta-learning","speech","speech-recognition","asr","code-switching","multi-lingual","language","language-model","neural-network","transformer","pytorch","meta-transfer-learning","mixed-language","acl"],"description":"Implementation of meta-transfer-learning for ASR and LM (ACL 2020)"}
{"name":"chihyaoma\/cyclical-visual-captioning","full_name":"chihyaoma\/cyclical-visual-captioning","topics":["pytorch","vision-and-language","visual-grounding","captioning-images","captioning-videos"],"description":"PyTorch code for: Learning to Generate Grounded Visual Captions without Localization Supervision"}
{"name":"anisha2102\/docvqa","full_name":"anisha2102\/docvqa","topics":["visual-question-answering","computer-vision","deep-learning","document-analysis"],"description":"Document Visual Question Answering"}
{"name":"ricolike\/mmgnn_textvqa","full_name":"likenneth\/mmgnn_textvqa","topics":["gnn","vqa","pytorch"],"description":"A Pytorch implementation of CVPR 2020 paper: Multi-Modal Graph Neural Network for Joint Reasoning on Vision and Scene Text"}
{"name":"hanxunh\/active-passive-losses","full_name":"HanxunH\/Active-Passive-Losses","topics":["icml-2020","label-noise","pytorch","icml","noisy-labels","deep-learning","deep-neural-networks","noisy-data","unreliable-labels","robust-learning"],"description":"[ICML2020] Normalized Loss Functions for Deep Learning with Noisy Labels"}
{"name":"rajghugare19\/rl-algorithms","full_name":"RajGhugare19\/RL-algorithms","topics":[],"description":"Pytorch implementations deep RL research papers"}
{"name":"lucidrains\/memory-transformer-xl","full_name":"lucidrains\/memory-transformer-xl","topics":["artificial-intelligence","deep-learning","transformer","attention-mechanism","memory"],"description":"A variant of Transformer-XL where the memory is updated not with a queue, but with attention"}
{"name":"minivision-ai\/silent-face-anti-spoofing","full_name":"minivision-ai\/Silent-Face-Anti-Spoofing","topics":["computer-vision","deep-learning","face-anti-spoofing","android-app","sdk"],"description":"\u9759\u9ed8\u6d3b\u4f53\u68c0\u6d4b\uff08Silent-Face-Anti-Spoofing\uff09"}
{"name":"wangt-cn\/vc-r-cnn","full_name":"Wangt-CN\/VC-R-CNN","topics":[],"description":"[CVPR 2020] The official pytorch implementation of ``Visual Commonsense R-CNN''"}
{"name":"nerminsamet\/houghnet","full_name":"nerminsamet\/houghnet","topics":["object-detection","deep-learning","pytorch","voting","voting-classifier","bottom-up-model","hough-transform","hough","hough-transformation","instance-segmentation","video-object-detection","video-object-tracking","3d-object-detection","human-pose-estimation","2d-pose-estimation","pose-estimation","kitti-dataset","coco-dataset","eccv","eccv-2020"],"description":"[ECCV-20] Official PyTorch implementation of HoughNet, a voting-based object detector."}
{"name":"takapy0210\/nlplot","full_name":"takapy0210\/nlplot","topics":["visualization","nlp","plotly","wordcloud","analytics","python"],"description":"Visualization Module for Natural Language Processing"}
{"name":"gyunggyung\/kogpt2-finetuning","full_name":"gyunggyung\/KoGPT2-FineTuning","topics":["nlp","gpt2","kogpt2","finetuning","korean-nlp","fine-tuning","korean","text-generation","lyrics-generator","language-model"],"description":"\ud83d\udd25 Korean GPT-2, KoGPT2 FineTuning cased. \ud55c\uad6d\uc5b4 \uac00\uc0ac \ub370\uc774\ud130 \ud559\uc2b5 \ud83d\udd25"}
{"name":"dido1998\/recurrent-independent-mechanisms","full_name":"dido1998\/Recurrent-Independent-Mechanisms","topics":["deep-learning","generalization","rim","attention","recurrent-networks","lstms","grus","pytorch"],"description":"Implementation of the paper Recurrent Independent Mechanisms (https:\/\/arxiv.org\/pdf\/1909.10893.pdf)"}
{"name":"apple\/ml-mkqa","full_name":"apple\/ml-mkqa","topics":["dataset","nlp","multilingual-evaluation"],"description":"We introduce MKQA, an open-domain question answering evaluation set comprising 10k question-answer pairs aligned across 26 typologically diverse languages (260k question-answer pairs in total). The goal of this dataset is to provide a challenging benchmark for question answering quality across a wide set of languages. Please refer to our paper for details, MKQA: A Linguistically Diverse Benchmark for Multilingual Open Domain Question Answering"}
{"name":"firyuza\/graphsage","full_name":"Firyuza\/GraphSAGE","topics":["graphsage","gat","tensorflow"],"description":"Graph Neural Networks"}
{"name":"kpoeppel\/pytorch_probgraph","full_name":"kpoeppel\/pytorch_probgraph","topics":["probabilistic-graphical-models","pytorch","restricted-boltzmann-machine","deep-belief-network"],"description":"A Library for Modelling Probabilistic Hierarchical Graphical Models in PyTorch"}
{"name":"ericguo5513\/action-to-motion","full_name":"EricGuo5513\/action-to-motion","topics":["deep-learning","human-motion-analysis","motion-generation","motion-synthesis"],"description":"Official implementations for \"Action2Motion: Conditioned Generation of 3D Human Motions (ACM MultiMedia 2020)\""}
{"name":"qiqihaer\/3dssd-pytorch","full_name":"qiqihaer\/3DSSD-pytorch","topics":[],"description":"3DSSD's implementation with Pytorch"}
{"name":"tpaul1611\/python_tflite_for_amazonlinux","full_name":"tpaul1611\/python_tflite_for_amazonlinux","topics":["tensorflow-lite","aws-lambda-python","amazonlinux","tflite","tensorflow","tensorflow-python","dockerfile"],"description":"Python TensorFlow Lite (tflite) for amazonlinux\/aws lambda."}
{"name":"lironui\/linear-attention-mechanism","full_name":"lironui\/Linear-Attention-Mechanism","topics":["attention-mechanism","attention","segmentation"],"description":"Attention mechanism"}
{"name":"cli98\/dmnet","full_name":"Cli98\/DMNet","topics":["deep-learning","aerial-image-detection","remote-sensing"],"description":"Official implementation for DMNet: Density map guided object detection in aerial image (CVPR 2020 EarthVision workshop)"}
{"name":"mrkieumy\/task-conditioned","full_name":"mrkieumy\/task-conditioned","topics":["computer-vision","object-detection","pedestrian-detection","thermal-imaging","yolov3-kaist","domain-adaptation","transfer-learning","fine-tuning","cnn","detector","deep-learning","python"],"description":"This source code implements our ECCV paper \"task-conditioned domain adaptation for pedestrian detection in thermal imagery\"."}
{"name":"zhaogangthu\/keras-yolo3-ocr-tensorrt","full_name":"zhaogangthu\/keras-yolo3-ocr-tensorrt","topics":[],"description":"ocr with yolo3 as feature extractor, implemented by keras, and accelerated by tensorrt"}
{"name":"sicara\/tf2-yolov4","full_name":"sicara\/tf2-yolov4","topics":["tensorflow","keras","object-detection","yolo","yolov4"],"description":"A TensorFlow 2.0 implementation of YOLOv4: Optimal Speed and Accuracy of Object Detection"}
{"name":"phamquiluan\/residualmaskingnetwork","full_name":"phamquiluan\/ResidualMaskingNetwork","topics":["fer2013","facial-expression-recognition","residual-masking-network","pytorch","image-classification"],"description":"ICPR 2020: Facial Expression Recognition using Residual Masking Network"}
{"name":"raoyongming\/pointglr","full_name":"raoyongming\/PointGLR","topics":["3d-point-clouds","deep-learning","unsupervised-learning","computer-vision","representation-learning","metric-learning"],"description":"[CVPR 2020] Global-Local Bidirectional Reasoning for Unsupervised Representation Learning of 3D Point Clouds"}
{"name":"clovaai\/rebias","full_name":"clovaai\/rebias","topics":["machine-learning","deep-learning","rebias","bias-generalisation","bias-generalization","pytorch","icml2020","icml-2020","icml"],"description":"Official Pytorch implementation of ReBias (Learning De-biased Representations with Biased Representations), ICML 2020"}
{"name":"snunlp\/kr-bert","full_name":"snunlp\/KR-BERT","topics":["nlp"],"description":"KoRean based BERT pre-trained models (KR-BERT) for Tensorflow and PyTorch"}
{"name":"neuml\/cord19q","full_name":"neuml\/cord19q","topics":["python","machine-learning","nlp","covid-19","medical","search","scientific-papers","document-search"],"description":"COVID-19 Open Research Dataset (CORD-19) Analysis"}
{"name":"yusukeurakami\/dreamer-pytorch","full_name":"yusukeurakami\/dreamer-pytorch","topics":[],"description":"pytorch-implementation of Dreamer (Model-based Image RL Algorithm)"}
{"name":"raivnlab\/str","full_name":"RAIVNLab\/STR","topics":["sparsity","learnable-sparsity","sparsity-optimization","cnn","efficient-inference","edge-machine-learning","soft-thresholding","str","imagenet","resource-efficient","icml-2020","icml","icml2020","soft-threshold-reparameterization"],"description":"Soft Threshold Weight Reparameterization for Learnable Sparsity"}
{"name":"liucongg\/unilmchatchitrobot","full_name":"liucongg\/UnilmChatchitRobot","topics":["unilm","nlp","generation","chatbot","chinese"],"description":"Unilm for Chinese Chitchat Robot.\u57fa\u4e8eUnilm\u6a21\u578b\u7684\u5938\u5938\u5f0f\u95f2\u804a\u673a\u5668\u4eba\u9879\u76ee\u3002"}
{"name":"xinshengwang\/s2igan","full_name":"xinshengwang\/S2IGAN","topics":[],"description":"Pytorch Code for S2IGAN"}
{"name":"zassou65535\/image_generator_2","full_name":"zassou65535\/image_generator_2","topics":["python","gan","image-generation","progressive-gan","pytorch"],"description":"Progressive GAN\u306b\u3088\u308b\u753b\u50cf\u751f\u6210\u5668"}
{"name":"miaoyunzhao\/gantransferlimiteddata","full_name":"MiaoyunZhao\/GANTransferLimitedData","topics":[],"description":"This is a pytorch implementation of the paper \"On Leveraging Pretrained GANs for Limited-Data Generation\"."}
{"name":"ternaus\/facemask_detection","full_name":"ternaus\/facemask_detection","topics":["python","pytorch","classification","image-processing","mask-detection"],"description":"Detection masks on faces."}
{"name":"lornatang\/ugatit-pytorch","full_name":"Lornatang\/UGATIT-PyTorch","topics":["pytorch","pytorch-implmention","cnn","gan","ugatit","simple","speed","pre-trained-model"],"description":"Simple, fast and easy to read. Yes, we use the pytorch framework!"}
{"name":"pfnet-research\/tgan2","full_name":"pfnet-research\/tgan2","topics":["generative-adversarial-network","video-generation","machine-learning","deep-learning"],"description":"The official implementation of \"Train Sparsely, Generate Densely: Memory-efficient Unsupervised Training of High-resolution Temporal GAN\""}
{"name":"audioku\/cross-accent-maml-asr","full_name":"audioku\/cross-accent-maml-asr","topics":["maml","meta-learning","asr","cross-accent","accent","pytorch","speech"],"description":"Meta-learning model agnostic (MAML) implementation for cross-accented ASR"}
{"name":"mandubian\/codenets","full_name":"mandubian\/codenets","topics":["deep-learning","nlp","programming-language","huggingface","transformer","bert","tokenizer","ai"],"description":"My own playground for PLP (Programming Language Processing) using DeepLearning techniques"}
{"name":"statguyuser\/textfeatureselection","full_name":"StatguyUser\/TextFeatureSelection","topics":["feature-selection","nlp","nlp-machine-learning","machine-learning","machinelearning","natural-language-processing","natural-language-understanding","text-classification","text-categorization","natural-language","natural-language-generation","nlp-library","nlp-resources","nlproc","naturallanguageprocessing","natural-language-inference"],"description":"Python library for feature selection for text features. It has filter method, genetic algorithm and TextFeatureSelectionEnsemble for improving text classification models. Helps improve your machine learning models"}
{"name":"eliasnehme\/deepstorm3d","full_name":"EliasNehme\/DeepSTORM3D","topics":[],"description":"DeepSTORM3D implemented in Pytorch"}
{"name":"massanishi\/document_similarity_algorithms_experiments","full_name":"massanishi\/document_similarity_algorithms_experiments","topics":["tf-idf","jaccard","algorithm","universal-sentence-encoder","bert","document-similarity","new-york-times","deep-learning"],"description":"Document similarity algorithms experiment - Jaccard, TF-IDF, Doc2vec, USE, and BERT."}
{"name":"armanihm\/gdc","full_name":"armanihm\/GDC","topics":["graphneuralnetwork","deep-learning","deep-neural-networks","gcn","gcnn","machine-learning","bayesian-neural-networks","bayesian-deep-learning","graph-deep-learning","graph-neural-networks","graph-neural-network","graph-convolutional-networks"],"description":"Bayesian Graph Neural Networks with Adaptive Connection Sampling - Pytorch"}
{"name":"qz-cmd\/yolov3-trt-jetson-nano","full_name":"QZ-cmd\/YOLOv3-TRT-jetson-nano","topics":[],"description":"\u57fa\u4e8epytorch-yolov3\u7684trt\u52a0\u901f\u65b9\u6848"}
{"name":"hyoungsungkim\/pytorch-tensorboard_tutorial","full_name":"HyoungsungKim\/Pytorch-tensorboard_tutorial","topics":[],"description":"Pytorch-tensorboard simple tutorial and example for a beginner"}
{"name":"microsoft\/lid-tool","full_name":"microsoft\/LID-tool","topics":["language-identification","natural-language-processing","python3","mallet","language-tags","code-mixing","code-switching","linguistics"],"description":"This code provides word level language identification tool for identifying language for individual words in Code-Mixed text. e.g. The text that includes words from two languages such as Hindi written in roman script, mixed with English."}
{"name":"maudzung\/rtm3d","full_name":"maudzung\/RTM3D","topics":["rtm3d","real-time","monocular-images","centernet","pytorch-implementation","3d-object-detection","autonomous-vehicles","self-driving-car","autonomous-driving","pytorch","kitti-dataset"],"description":"Unofficial PyTorch implementation of \"RTM3D: Real-time Monocular 3D Detection from Object Keypoints for Autonomous Driving\" (ECCV 2020)"}
{"name":"didi\/dlflow","full_name":"didi\/dlflow","topics":["deeplearning","tensorflow","deeplearning-framework"],"description":"DLFlow is a deep learning framework."}
{"name":"nerminsamet\/ppdet","full_name":"nerminsamet\/ppdet","topics":["object-detection","deep-learning","pytorch","fpn","noise-reduction","small-object-detection","pooling","top-down","bmvc","bmvc20"],"description":"[BMVC-20] Official PyTorch implementation of PPDet."}
{"name":"fcakyon\/craft-text-detector","full_name":"fcakyon\/craft-text-detector","topics":["text","ocr","text-detection","computer-vision","deep-learning","neural-network","pytorch","python","pypi","anaconda","windows","macos","linux","document","vision","actions","workflow","craft","hacktoberfest"],"description":"Packaged, Pytorch-based, easy to use, cross-platform version of the CRAFT text detector"}
{"name":"myungsub\/meta-interpolation","full_name":"myungsub\/meta-interpolation","topics":["frame-interpolation","meta-learning","slow-motion","pytorch","cvpr2020","video-frame-interpolation","deep-learning","computer-vision"],"description":"Source code for CVPR 2020 paper \"Scene-Adaptive Video Frame Interpolation via Meta-Learning\""}
{"name":"slgero\/receipt_parser","full_name":"slgero\/receipt_parser","topics":["receipt","receipt-validation","nlp"],"description":"Allow parsing Russian receipts"}
{"name":"huangtinglin\/ngcf-pytorch","full_name":"huangtinglin\/NGCF-PyTorch","topics":["pytorch","pytorch-implementation","machine-learning","graph-algorithms","recommender-system","neural-collaborative-filtering","deep-learning"],"description":"PyTorch Implementation for Neural Graph Collaborative Filtering"}
{"name":"zzhanghub\/gicd","full_name":"zzhanghub\/gicd","topics":["eccv","eccv2020","co-saliency","pytorch","coca","gicd","salient-object-detection","segmentation","jigsaw","saliency-detection","paper"],"description":"[ECCV 2020] Gradient-Induced Co-Saliency Detection"}
{"name":"pingyu-iris\/sa-gcn","full_name":"PingYu-iris\/SA-GCN","topics":[],"description":"This code repository presents the pytorch implementation of the paper \u201cStructure-Aware Human-ActionGeneration\u201d(ECCV 2020)."}
{"name":"biparnakroy\/pseudolabelgeneratorforyolo","full_name":"biparnakroy\/pseudoLabelGeneratorForYOLO","topics":["yolov3","yolov4-darknet","darknet","dataset-generation","yololabel","semi-supervised-learning","python-script","deep-neural-networks","deep-learning","yolov4","pseudo-labeling"],"description":"Creating datasets in YOLO format using pretrained YOLO model in Darknet framework which could be used to train the model further"}
{"name":"zeroized\/deeprec-torch","full_name":"zeroized\/DeepRec-torch","topics":["fm","deepfm","pnn","fnn","pytorch","ctr","deep-learning","afm","wide-and-deep","dcn","flen","autoint"],"description":"Easy-to-use pytorch-based framework for RecSys models"}
{"name":"pranavsastry\/neowise","full_name":"pranftw\/neowise","topics":["neural-network","artificial-intelligence","deeplearning","framework","pypi-package","machine-learning","python","numpy"],"description":"Deep Learning library built from scratch with Python and NumPy"}
{"name":"sparkjiao\/self-training-mrc","full_name":"SparkJiao\/Self-Training-MRC","topics":[],"description":"This is the pytorch implementation of the long paper on ACL 2020: A Self-Training Method for Machine Reading Comprehension with Soft Evidence Extraction."}
{"name":"lavieluo\/drmea","full_name":"LavieLuo\/DRMEA","topics":["domain-adaptation","manifold-learning","aaai2020"],"description":"Pytorch code for \u201cUnsupervised Domain Adaptation via Discriminative Manifold Embedding and Alignment \u201d (DRMEA) (AAAI 2020)."}
{"name":"iantaehoonyoo\/semantic-segmentation-pytorch","full_name":"IanTaehoonYoo\/semantic-segmentation-pytorch","topics":["pytorch","computer-vision","semantic-segmentation","fcn","fcn8s","resnet50","resnet","unet","pspnet","mobileunet","vgg","vgg16","convolutional-networks","deep-learning"],"description":"Pytorch implementation of FCN, UNet, PSPNet, and various encoder models."}
{"name":"dmburd\/s-dcnet","full_name":"dmburd\/S-DCNet","topics":["deep-learning","convolutional-neural-networks","pytorch","crowd-counting","computer-vision","crowd-analysis"],"description":"Unofficial Pytorch implementation of S-DCNet and SS-DCNet"}
{"name":"shuuchen\/frelu.pytorch","full_name":"shuuchen\/frelu.pytorch","topics":["activation-functions","cnn"],"description":"A PyTorch implementation of funnel activation https:\/\/arxiv.org\/pdf\/2007.11824.pdf"}
{"name":"layer6ai-labs\/tafa","full_name":"layer6ai-labs\/TAFA","topics":["python","pytorch","autoencoder","recommender-system"],"description":"Code for the RecSys'20 paper \"TAFA: Two-headed Attention Fused Autoencoder for Context-Aware Recommendations\""}
{"name":"nekitmm\/funnelact_pytorch","full_name":"nekitmm\/FunnelAct_Pytorch","topics":["frelu","funnel-act","funnel-activation","pytorch","resnet","deep-learning","deep-neural-networks"],"description":"pytorch implementation of Funnel Activation (FReLU)"}
{"name":"daixiangzi\/grad_cam-pytorch-resnet50","full_name":"daixiangzi\/Grad_Cam-pytorch-resnet50","topics":["pytorch","grad-cam"],"description":"Class activate map "}
{"name":"leonlok\/deep-sort-yolov4","full_name":"LeonLok\/Deep-SORT-YOLOv4","topics":["yolov4","deep-sort","deep-sort-tracking","people-tracker","people-tracking","asynchronous","asynchronous-io","yolo","tensorflow","asynchronous-processing","tracking-algorithm","object-detection","object-tracking","tensorflow2","detection-algorithm","yolov3"],"description":"People detection and optional tracking with Tensorflow backend."}
{"name":"saic-vul\/iterdet","full_name":"saic-vul\/iterdet","topics":["iterdet","object-detection","mmdetection","pytorch","faster-rcnn","retinanet","crowdhuman","widerperson"],"description":"[S+SSPR2020] IterDet: Iterative Scheme for Object Detection in Crowded Environments"}
{"name":"hrnet\/hrnet-bottom-up-pose-estimation","full_name":"HRNet\/HRNet-Bottom-Up-Pose-Estimation","topics":[],"description":"This is an official pytorch implementation of \u201cBottom-Up Human Pose Estimation by Ranking Heatmap-Guided Adaptive Keypoint Estimates\u201d (https:\/\/arxiv.org\/abs\/2006.15480). "}
{"name":"yangyanli\/do-conv","full_name":"yangyanli\/DO-Conv","topics":["deep-learning","convolutional-neural-networks","tensorflow","pytorch","gluoncv"],"description":"Depthwise Over-parameterized Convolutional Layer"}
{"name":"hoya012\/carrier-of-tricks-for-classification-pytorch","full_name":"hoya012\/carrier-of-tricks-for-classification-pytorch","topics":["deep-learning","deep-neural-networks","classification-pytorch","classification","pytorch","pytorch-tutorial","pytorch-cnn"],"description":"carrier of tricks for image classification tutorials using pytorch."}
{"name":"patrick-kidger\/torchcubicspline","full_name":"patrick-kidger\/torchcubicspline","topics":["pytorch","interpolation","spline"],"description":"Interpolating natural cubic splines. Includes batching, GPU support, support for missing values, evaluating derivatives of the spline, and backpropagation."}
{"name":"fu0511\/xgrad-cam","full_name":"Fu0511\/XGrad-CAM","topics":[],"description":"Axiom-based Grad-CAM implementation in Pytorch"}
{"name":"avbuffer\/unet3plus_pth","full_name":"avBuffer\/UNet3plus_pth","topics":["pytorch","unet","unet-plusplus","unet3plus","portrait-matting"],"description":"UNet3+\/ UNet++\/UNet, used in Deep Automatic Portrait Matting in Pytorth"}
{"name":"perrying\/pytorch-consistency-regularization","full_name":"perrying\/pytorch-consistency-regularization","topics":["pytorch","python","semi-supervised","semi-supervised-learning","fixmatch"],"description":"PyTorch implementation of consistency regularization methods for semi-supervised learning"}
{"name":"adityap27\/face-mask-detector","full_name":"adityap27\/face-mask-detector","topics":["computer-vision","deep-learning","yolo","machine-learning","artificial-intelligence","neural-network"],"description":"\ud835\udc11\ud835\udc1e\ud835\udc1a\ud835\udc25-\ud835\udc13\ud835\udc22\ud835\udc26\ud835\udc1e \ud835\udc05\ud835\udc1a\ud835\udc1c\ud835\udc1e \ud835\udc26\ud835\udc1a\ud835\udc2c\ud835\udc24 \ud835\udc1d\ud835\udc1e\ud835\udc2d\ud835\udc1e\ud835\udc1c\ud835\udc2d\ud835\udc22\ud835\udc28\ud835\udc27 \ud835\udc2e\ud835\udc2c\ud835\udc22\ud835\udc27\ud835\udc20 \ud835\udc1d\ud835\udc1e\ud835\udc1e\ud835\udc29\ud835\udc25\ud835\udc1e\ud835\udc1a\ud835\udc2b\ud835\udc27\ud835\udc22\ud835\udc27\ud835\udc20 \ud835\udc30\ud835\udc22\ud835\udc2d\ud835\udc21 \ud835\udc00\ud835\udc25\ud835\udc1e\ud835\udc2b\ud835\udc2d \ud835\udc2c\ud835\udc32\ud835\udc2c\ud835\udc2d\ud835\udc1e\ud835\udc26 \ud83d\udcbb\ud83d\udd14"}
{"name":"csjunxu\/noisy-as-clean-tip2020","full_name":"csjunxu\/Noisy-As-Clean-TIP2020","topics":["pytorch"],"description":"PyTorch Code for \"Noisy-As-Clean: Learning Self-supervised Denoising from Corrupted Image\", TIP 2020."}
{"name":"lewis-morris\/mapextrackt","full_name":"lewis-morris\/mapextrackt","topics":["pytorch","feature-extraction","neural-network"],"description":"Pytorch Feature Map Extractor"}
{"name":"sundw2014\/dcm","full_name":"sundw2014\/DCM","topics":["cnn","deep-learning","machine-learning","image-classification","knowledge-transfer","knowledge-distillation"],"description":"Knowledge Transfer via Dense Cross-layer Mutual-distillation (ECCV'2020)"}
{"name":"wwdkl\/aabo","full_name":"wwdkl\/AABO","topics":["detection","pytorch","anchor-optimization"],"description":"Implementation for ECCV 2020 paper: AABO: Adaptive Anchor Box Optimization for Object Detection via Bayesian Sub-sampling."}
{"name":"zhiqiangdon\/online-augment","full_name":"zhiqiangdon\/online-augment","topics":["data-augmentation","automl","less-domain-knowledge","auto-augment","online-augment","stn","autoaugment","pytorch","vae","efficient-training","generative-adversarial-network","online-learning"],"description":"Code for \"OnlineAugment: Online Data Augmentation with Less Domain Knowledge\" (ECCV 2020)"}
{"name":"openredact\/nerwhal","full_name":"openredact\/nerwhal","topics":["named-entities","ner","suite","recognize","recognition","entity-ruler","flashtext","keyword","deep-learning","statistical","regular-expressions"],"description":"This is a prototype of a multi-lingual suite for named-entity recognition in Python."}
{"name":"jd730\/strg","full_name":"jd730\/STRG","topics":[],"description":"Pytorch Implementation of  Videos as Space-Time Region Graphs"}
{"name":"baowentz\/advancedeast-pytorch","full_name":"BaoWentz\/AdvancedEAST-PyTorch","topics":["pytorch","advancedeast","lmdb-dataset"],"description":"\u5c06\u539f\u672cKeras\u7248\u672c\u7684AdvancedEAST\u6539\u5199\u6210PyTorch\u7248\uff0c\u5c06\u6570\u636e\u96c6\u7531.npy\u6587\u4ef6\u6539\u6210\u4e00\u4e2aLMDB\u6587\u4ef6\uff0c\u52a0\u5165Precision\uff0cRecall, F1 score\u65b9\u4fbf\u8bad\u7ec3\u4ee5\u53ca\u8c03\u8bd5\uff0c\u5e95\u5c42\u7f51\u7edc\u4ecd\u7136\u7528VGG16\u3002"}
{"name":"xingangpan\/deep-generative-prior","full_name":"XingangPan\/deep-generative-prior","topics":["generative-adversarial-network","gan","deep-learning","image-restoration","image-manipulation","image-prior"],"description":"Code for deep generative prior (ECCV2020 oral)"}
{"name":"project-splinter\/monoport","full_name":"Project-Splinter\/MonoPort","topics":["deep-learning","machine-learning","volumetric","3d-reconstruction","3d-vision","siggraph","monocular","performance-capture","eccv2020","virtual-reality","pifu","clothed-humans","reconstruction","pytorch","pifuhd","real-time","teleportation","virtual-conference","teleportvr","sdf"],"description":"Volumetric Human Teleportation (SIGGRAPH 2020 Real-Time Live) Monocular Real-Time Volumetric Performance Capture(ECCV 2020)"}
{"name":"microsoft\/rat-sql","full_name":"microsoft\/rat-sql","topics":["program-synthesis","semantic-parsing","nlp","question-answering","dbqa","nl2sql","transformers"],"description":"A relation-aware semantic parsing model from English to SQL"}
{"name":"ethanrosenthal\/nannernest","full_name":"EthanRosenthal\/nannernest","topics":["machine-learning","computer-vision","sandwiches","deep-learning"],"description":"Optimal peanut butter and banana sandwiches"}
{"name":"zxhuang1698\/interpretability-by-parts","full_name":"zxhuang1698\/interpretability-by-parts","topics":["cvpr2020","explainable-ai","interpretability","fine-grained-classification","part-based-models","celeba-dataset","cvpr-2020","cvpr-oral","pytorch","pytorch-implementation","face-segmentation","celeba","weakly-supervised-segmentation","weakly-supervised-localization","cub-dataset"],"description":"Code repository for \"Interpretable and Accurate Fine-grained Recognition via Region Grouping\", CVPR 2020 (Oral)"}
{"name":"antoninodimaggio\/hugging-captions","full_name":"antoninodimaggio\/Hugging-Captions","topics":["transformers","nlp","instagram","huggingface","gpt-2","language-models"],"description":"Generate realistic Instagram captions using transformers \ud83e\udd17 "}
{"name":"music-x-lab\/pop909-dataset","full_name":"music-x-lab\/POP909-Dataset","topics":["dataset","music","python","jupyter-notebook","deep-learning","music-generation"],"description":"This is the dataset repository for the paper: POP909: A Pop-song Dataset for Music Arrangement Generation"}
{"name":"kubraturker\/social_distancing-cv","full_name":"KubraTurker\/Social_Distancing-CV","topics":["social-distancing","covid-19","computer-vision","opencv","tensorflow","ai","python","covid19","deep-learning","coronavirus","caffe","ssd","object-detection","social-distancing-detection","social-distance-monitoring"],"description":"I developed a computer vision project that measures the distance between people to check whether a specific distance exists between them or not."}
{"name":"jermmy\/pytorch-quantization-demo","full_name":"Jermmy\/pytorch-quantization-demo","topics":[],"description":"A simple network quantization demo using pytorch from scratch."}
{"name":"chargedmonk\/social-distancing-using-yolov5","full_name":"ChargedMonk\/Social-Distancing-using-YOLOv5","topics":["python","opencv","yolo","computer-vision","deep-learning","social-distancing","social-distancing-detection","social-distance-monitoring","pytorch"],"description":"Classifying people as high risk and low risk based on their distance to other people."}
{"name":"dmgutierrez\/spotify-musixmatch-data-collector","full_name":"dmgutierrez\/spotify-musixmatch-data-collector","topics":["natural-language-processing","spotify-api","musixmatch-api","audio-processing","data-science","dataset-generation"],"description":"A Python module to generate large scale Music datasets using both Spotify and MusixMatch API's."}
{"name":"xytpai\/detx-retinanet","full_name":"xytpai\/DetX-Retinanet","topics":["retinanet","pytorch","object-detection","deep-learning"],"description":"(Pytorch) Beyond Paper ! 35.9mAP@r50-700px-1x"}
{"name":"luckydc\/generalizing-reid","full_name":"LuckyDC\/generalizing-reid","topics":["domain-adaptation","person-reidentification","deep-learning"],"description":"Repository of the paper \"Generalizing Person Re-Identification by Camera-Aware Instance Learning and Cross-Domain Mixup\""}
{"name":"confusezius\/eccv2020_diva_multifeature_dml","full_name":"Confusezius\/ECCV2020_DiVA_MultiFeature_DML","topics":["deep-metric-learning","metric-learning","deep-learning","image-retrieval","wandb","cub200-2011","cars196","stanford-online-products"],"description":"(ECCV 2020) This repo contains code for \"DiVA: Diverse Visual Feature Aggregation for Deep Metric Learning\" (https:\/\/arxiv.org\/abs\/2004.13458), which extends vanilla DML with auxiliary and self-supervised features."}
{"name":"weichengtseng\/pytorch-pcgrad","full_name":"WeiChengTseng\/Pytorch-PCGrad","topics":["deep-reinforcement-learning","multi-task-learning","deep-learning","reinforcement-learning","multi-task-reinforcement-learning","rl","multi-task-rl","pytorch-pcgrad","pytorch","gradient-surgery","mnist","mulit-mnist","reimplementation","cifar-100"],"description":"Pytorch reimplementation for \"Gradient Surgery for Multi-Task Learning\""}
{"name":"stuartemiddleton\/geoparsepy","full_name":"stuartemiddleton\/geoparsepy","topics":["natural-language-processing","artificial-intelligence","information-extraction","geoparse","location-extraction","toponym-resolution","nlp","openstreetmap","postgresql"],"description":"geoparsepy is a Python geoparsing library that will extract and disambiguate locations from text. It uses a local OpenStreetMap database which allows very high and unlimited geoparsing throughput, unlike approaches that use a third-party geocoding service (e.g.  Google Geocoding API). this repository holds Python examples to use the PyPI library."}
{"name":"raghavian\/lungvae","full_name":"raghavian\/lungVAE","topics":[],"description":"This is the official Pytorch implementation of \"Lung Segmentation from Chest X-rays using Variational Data Imputation\", Raghavendra Selvan et al. 2020"}
{"name":"rowanz\/turingadvice","full_name":"rowanz\/turingadvice","topics":["natural-language-understanding","natural-language-processing","natural-language-generation"],"description":"Evaluating Machines by their Real-World Language Use"}
{"name":"hhaandroid\/deep_learning_codesegment","full_name":"hhaAndroid\/deep_learning_codesegment","topics":[],"description":"Code segment are often used in deep learning algorithms(pytorch\/numpy)"}
{"name":"mbchang\/decentralized-rl","full_name":"mbchang\/decentralized-rl","topics":["mechanism-design","machine-learning","deep-reinforcement-learning","pytorch","artificial-intelligence","deep-learning"],"description":"Decentralized Reinforcment Learning: Global Decision-Making via Local Economic Transactions (ICML 2020)"}
{"name":"vevenom\/scannet-layout","full_name":"vevenom\/ScanNet-Layout","topics":["3d-vision","room-layout","computer-vision","deep-learning","projective-geometry","augmented-reality"],"description":"We introduce the ScanNet-Layout dataset for benchmarking general 3D room layout estimation from single view. "}
{"name":"yeyupiaoling\/tensorflow-facerecognition","full_name":"yeyupiaoling\/Tensorflow-FaceRecognition","topics":["face-recognition","tensorflow","mtcnn","mobilefacenet"],"description":"\u57fa\u4e8eMTCNN\u548cMobileFaceNet\u5b9e\u73b0\u7684\u4eba\u8138\u8bc6\u522b\uff0c\u63d0\u4f9b\u4e09\u79cd\u9884\u6d4b\u65b9\u5f0f\uff0c\u6ee1\u8db3\u5404\u79cd\u9700\u6c42 \u3002"}
{"name":"ostamand\/tensorflow-tabnet","full_name":"ostamand\/tensorflow-tabnet","topics":["tensorflow2","tabnet","keras"],"description":"Improved TabNet for TensorFlow"}
{"name":"junleen\/expression-manipulator","full_name":"junleen\/Expression-manipulator","topics":["expression-manipulator","pytorch","eccv"],"description":"ECCV'20 paper 'Toward Fine-grained Facial Expression Manipulation' code"}
{"name":"omni-us\/research-ganwriting","full_name":"omni-us\/research-GANwriting","topics":["generative-adversarial-network","handwriting-synthesis"],"description":"Source code for ECCV20 \"GANwriting: Content-Conditioned Generation of Styled Handwritten Word Images\""}
{"name":"horenbergerb\/friendsimulator","full_name":"horenbergerb\/FriendSimulator","topics":["ai","ml","gpt2","gpt2-chatbot","machine-learning","huggingface","huggingface-transformers","nlp","gpt-2"],"description":"Uses GPT2 to simulate your friends"}
{"name":"xu-peng-tao\/ssd-pruning-and-quantization","full_name":"xu-peng-tao\/SSD-Pruning-and-quantization","topics":["ssd","prune","pruning","quantization","quantification","compression","pytorch"],"description":"Pruning and quantization for SSD.  Model compression."}
{"name":"mzhang367\/dcdh-pytorch","full_name":"mzhang367\/DCDH-PyTorch","topics":["deep-hashing","face-image-retrieval","pytorch","deep-learning"],"description":"Official codes of the paper: Deep Center-Based Dual-Constrained Hashing for Discriminative Face Image Retrieval (DCDH)"}
{"name":"hamanlp\/hama-py","full_name":"hamanlp\/hama-py","topics":["natural-language-processing","text-processing","korean","python"],"description":"\ud83e\udd9b \ud30c\uc774\uc36c \ud55c\uae00 \ucc98\ub9ac \ub77c\uc774\ube0c\ub7ec\ub9ac. Python Korean Morphological Analyzer"}
{"name":"jianningli\/autoimplant","full_name":"Jianningli\/autoimplant","topics":["autoimplant","skull","cranioplasty","shape-analysis","deep-learning","cranial-implant-design","volumetric-shape-completion","skull-reconstruction","craniotomy"],"description":"A Baseline Approach for the AutoImplant Challenge"}
{"name":"abhimishra91\/insight","full_name":"abhimishra91\/insight","topics":["fastapi","streamlit","streamlit-webapp","natural-language-processing","nlp","machine-learning","transformer","huggingface-transformer","huggingface","docker","microservice","transformers-models"],"description":"Repository for Project Insight: NLP as a Service"}
{"name":"abelriboulot\/onnxt5","full_name":"abelriboulot\/onnxt5","topics":["nlp","nlp-machine-learning","onnx","onnxruntime","transformer","transformers","inference","summarization","translation","text-generation","text-classification","sentiment-analysis"],"description":"Summarization, translation, sentiment-analysis, text-generation and more at blazing speed using a T5 version implemented in ONNX."}
{"name":"kb-bank-ai\/kb-albert-ko","full_name":"KB-AI-Research\/KB-ALBERT","topics":["albert","korean-nlp","pytorch","transformers","nlp","language-model","financial-nlp"],"description":"KB\uad6d\ubbfc\uc740\ud589\uc5d0\uc11c \uc81c\uacf5\ud558\ub294 \uacbd\uc81c\/\uae08\uc735 \ub3c4\uba54\uc778\uc5d0 \ud2b9\ud654\ub41c \ud55c\uad6d\uc5b4 ALBERT \ubaa8\ub378 "}
{"name":"bshall\/vectorquantizedcpc","full_name":"bshall\/VectorQuantizedCPC","topics":["pytorch","voice-conversion","contrastive-predictive-coding","vq-vae","speech-synthesis","zerospeech","acoustic-features"],"description":"Vector-Quantized Contrastive Predictive Coding for Acoustic Unit Discovery and Voice Conversion"}
{"name":"bubblyyi\/coronary-artery-tracking-via-3d-cnn-classification","full_name":"BubblyYi\/Coronary-Artery-Tracking-via-3D-CNN-Classification","topics":["3d-cnn","3d-classification","pytorch","coronary-artery","centerline-extraction","3d-cnn-tracker","centerline","medical-image-processing","deep-learning","blood-vessel","vessel","centerline-detection"],"description":"The PyTorch re-implement of a 3D CNN Tracker to extract coronary artery centerlines with state-of-the-art (SOTA) performance. (paper: 'Coronary artery centerline extraction in cardiac CT angiography using a CNN-based orientation classi\ufb01er')"}
{"name":"mangye16\/ddag","full_name":"mangye16\/DDAG","topics":[],"description":"Pytorch Code of DDAG for Visible-Infrared Person Re-Identification (ECCV20)"}
{"name":"ioangatop\/srvae","full_name":"ioangatop\/srVAE","topics":["vae","vae-pytorch","super-resolution","representation-learning","unsupervised-learning","unsupervised-machine-learning","pytorch","python3","generative-model","variational-autoencoder","cifar10","cifar-10"],"description":"VAE with RealNVP prior and Super-Resolution VAE in PyTorch. Code release for https:\/\/arxiv.org\/abs\/2006.05218."}
{"name":"hoya012\/automatic-mixed-precision-tutorials-pytorch","full_name":"hoya012\/automatic-mixed-precision-tutorials-pytorch","topics":[],"description":"Automatic Mixed Precision Tutorials using pytorch. Based on PyTorch 1.6 Official Features,  implement classification codebase using custom dataset."}
{"name":"valencebond\/fixmatch_pytorch","full_name":"valencebond\/FixMatch_pytorch","topics":["semi-supervised-learning","pytorch","fixmatch"],"description":"Unofficial PyTorch implementation of \"FixMatch: Simplifying Semi-Supervised Learning with Consistency and Confidence\""}
{"name":"kajyuuen\/allennlp-book","full_name":"kajyuuen\/allennlp-book","topics":["allennlp","nlp"],"description":"\u672c\u30ea\u30dd\u30b8\u30c8\u30ea\u306f\u300cAllenNLP\u5165\u9580\u300d\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u7f6e\u304d\u5834\u3067\u3059\u3002"}
{"name":"tomasbrezina\/neuralnetworkracing","full_name":"TomasBrezina\/NeuralNetworkRacing","topics":["neural-network","deep-learning"],"description":"Neural networks race"}
{"name":"laura-wang\/video_repres_sts","full_name":"laura-wang\/video_repres_sts","topics":[],"description":"Pytorch implementation of  our T-PAMI 2021 paper: Self-supervised Video Representation Learning by Uncovering Motion and Appearance Statistics"}
{"name":"scagin\/neurallogicreasoning","full_name":"Scagin\/NeuralLogicReasoning","topics":["paper","neural-network","reasoning"],"description":"An Implementation of NLR: Neural Collaborative Reasoning, paper: https:\/\/arxiv.org\/abs\/2005.08129"}
{"name":"je-santos\/poreflow-net","full_name":"je-santos\/PoreFlow-Net","topics":["cnn","3d","keras-tensorflow","porous-media-flow","3d-images","lbm","surrogate-models","convolutional-neural-networks","digital-rockphysics","digital-rocks","permeability","poreflow-net","convolutional-neural-network","single-phase","lattice-boltzmann","neural-networks","machine-learning","keras","tensorflow","gpu"],"description":"3D CNN to predict single-phase flow velocity fields"}
{"name":"taufeeque9\/humanfalldetection","full_name":"taufeeque9\/HumanFallDetection","topics":["video-processing","multiple-cameras","fall-detection","human-pose-estimation","long-short-term-memory","lstm","neural-networks","deep-learning","python3-fall-detector"],"description":"Real-time, Multi-person & Multi-camera Fall Detector in Python"}
{"name":"mianzhang\/dialogue_gcn","full_name":"mianzhang\/dialogue_gcn","topics":[],"description":"Pytorch implementation to paper \"DialogueGCN: A Graph Convolutional Neural Network for Emotion Recognition in Conversation\". "}
{"name":"rizavelioglu\/challenge-aido_rl-il","full_name":"rizavelioglu\/challenge-aido_RL-IL","topics":["reinforcement-learning","self-driving-cars","imitation-learning","pytorch","keras","tensorflow","supervised-learning","behavioral-cloning"],"description":"Reinforcement Learning + Imitation Learning based approach to AI Driving Olympics"}
{"name":"ktho22\/vctts","full_name":"ktho22\/vctts","topics":[],"description":"pytorch implementation of \"Emotional Voice Conversion using Multitask Learning with Text-to-Speech\", Accepted to ICASSP 2020 "}
{"name":"dessa-oss\/atlas","full_name":"dessa-oss\/atlas","topics":["machine-learning","data-science","artificial-intelligence","python","deep-learning","gpu","ai","ml","model-management"],"description":"An Open Source, Self-Hosted Platform For Applied Deep Learning Development"}
{"name":"tonyngjichun\/solar","full_name":"tonyngjichun\/SOLAR","topics":["image-retrieval","global-descriptors","local-descriptors","second-order","non-local-block","eccv-2020","eccv2020","eccv","computer-vision","deep-learning","pytorch","cnn"],"description":"PyTorch code for \"SOLAR: Second-Order Loss and Attention for Image Retrieval\". In ECCV 2020"}
{"name":"vita-group\/autospeech","full_name":"VITA-Group\/AutoSpeech","topics":["automl","autospeech","neural-architecture-search","speaker-recognition","pytorch"],"description":"[InterSpeech 2020] \"AutoSpeech: Neural Architecture Search for Speaker Recognition\" by Shaojin Ding*, Tianlong Chen*, Xinyu Gong, Weiwei Zha, Zhangyang Wang "}
{"name":"richardkxu\/distributed-pytorch","full_name":"richardkxu\/distributed-pytorch","topics":["distributed-training","deep-learning","computer-vision","imagenet","mixed-precision-training","pytorch","nvidia-apex","tensorboard","horovod"],"description":"Distributed, mixed-precision training with PyTorch"}
{"name":"cattaneod\/maskflownet-pytorch","full_name":"cattaneod\/MaskFlownet-Pytorch","topics":["deep-learning","computer-vision","convolutional-neural-networks","optical-flow","kitti-dataset","dnn","cnn","pytorch","maskflownet"],"description":"Pytorch implementation of MaskFlownet"}
{"name":"rishikksh20\/resunet","full_name":"rishikksh20\/ResUnet","topics":["resunet","unet","image-processing","image-segmentation","unet-pytorch","medical-image-processing","satellite-imagery","deep-residual-network","segmentation","image-to-image-translation"],"description":"Pytorch implementation of ResUnet and ResUnet ++"}
{"name":"ahmdtaha\/constrained_attention_filter","full_name":"ahmdtaha\/constrained_attention_filter","topics":["tensorflow","deep-neural-networks","attention-visualization","python-3","python3","imagenet","convolutional-neural-networks","weakly-supervised-localization","autonomous-vehicles","autonomous-driving","classification","retrieval","feature-embedding"],"description":"(ECCV2020) Tensorflow implementation of A Generic Visualization Approach for Convolutional Neural Networks"}
{"name":"mattdl\/clsurvey","full_name":"Mattdl\/CLsurvey","topics":["continual-learning","tpami","defy-forgetting","classification-tasks","deep-learning","neural-networks","framework","hyperparameter-tuning","inaturalist","tinyimagenet","icarl","synaptic-intelligence","gradient-episodic-memory","packnet","hat","memory-aware-synapses","elastic-weight-consolidation","incremental-learning","incremental-moment-matching"],"description":"Continual Hyperparameter Selection Framework. Compares 11 state-of-the-art Lifelong Learning methods and  4 baselines. Official Codebase of \"A continual learning survey: Defying forgetting in classification tasks.\" in  IEEE TPAMI."}
{"name":"ocatak\/malware_api_class","full_name":"ocatak\/malware_api_class","topics":["dataset","sandbox","cuckoo-sandbox","malware","machine-learning","malware-families","malware-dataset","adware","study","classification","deep-learning","lstm-neural-networks"],"description":"Malware dataset for security researchers, data scientists. Public malware dataset generated by Cuckoo Sandbox based on Windows OS API calls analysis for cyber security researchers"}
{"name":"wenxuecui\/csnet-pytorch","full_name":"WenxueCui\/CSNet-Pytorch","topics":[],"description":"Pytorch code for paper \"Deep Networks for Compressed Image Sensing\" and \"Image Compressed Sensing Using Convolutional Neural Network\""}
{"name":"juliawolleb\/descargan","full_name":"JuliaWolleb\/DeScarGAN","topics":[],"description":"Official Pytorch implementation of the paper DeScarGAN"}
{"name":"milvlg\/mt-captioning","full_name":"MILVLG\/mt-captioning","topics":["image-captioning","pytorch","multimodal-transformer"],"description":"A PyTorch implementation of the paper Multimodal Transformer with Multiview Visual Representation for Image Captioning"}
{"name":"mchughes288\/emotion_detection_cpc","full_name":"McHughes288\/emotion_detection_cpc","topics":["emotion","emotion-recognition","emotion-detection","machine-learning","pytorch","self-supervised-learning","speech"],"description":"Emotion detection in audio utilising self-supervised representations trained with Contrastive Predictive Coding (CPC)."}
{"name":"incheon-cho\/dynamic_model_pruning_with_feedback","full_name":"INCHEON-CHO\/Dynamic_Model_Pruning_with_Feedback","topics":["pruning","pytorch-implementation","prune","pruning-structures"],"description":"Implement of Dynamic Model Pruning with Feedback with pytorch"}
{"name":"choiw-public\/crack-segmentation","full_name":"choiw-public\/Crack-segmentation","topics":["tensorflow","segmentation","crack-segmentation","crack-detection","python"],"description":"This repo contains customized deep learning models for segmenting cracks."}
{"name":"is2ai\/chest-x-ray-module","full_name":"IS2AI\/Chest-X-ray-module","topics":["deep-learning","densenet121","medical-imaging","machine-learning","computer-vision","pytorch","catalyst"],"description":null}
{"name":"yang-han\/p-reg","full_name":"yang-han\/P-reg","topics":["graph-neural-networks","gcn","gnn","regularization","aaai2021"],"description":"Rethinking Graph Regularization for Graph Neural Networks (AAAI2021)"}
{"name":"kevinzakka\/torchnca","full_name":"kevinzakka\/torchnca","topics":["pytorch","nca-python","neighbourhood-components-analysis","python","python3"],"description":"A PyTorch implementation of Neighbourhood Components Analysis."}
{"name":"neuml\/codequestion","full_name":"neuml\/codequestion","topics":["python","machine-learning","search","nlp","txtai"],"description":"\ud83d\udcad Semantic search for developers"}
{"name":"minyoungg\/pix2latent","full_name":"minyoungg\/pix2latent","topics":["pytorch","cma-es","inverting-images","nevergrad","biggan","stylegan2","gan"],"description":"Code for: Transforming and Projecting Images into Class-conditional Generative Networks"}
{"name":"samuelbroughton\/stargan-voice-conversion-2","full_name":"SamuelBroughton\/StarGAN-Voice-Conversion-2","topics":["pytorch","voice-conversion","stargan-vc2","stagan-vc","speech","speech-synthesis"],"description":"A pytorch implementation of StarGAN-VC2"}
{"name":"mhso\/bombsolver","full_name":"mhso\/BombSolver","topics":["machine-learning","python","neural-network","image-recognition"],"description":"Defusing bombs in Keep Talking and Nobody Explodes"}
{"name":"oke-aditya\/image_similarity","full_name":"oke-aditya\/image_similarity","topics":["image-similarity","pytorch","image-retrieval","autoencoder","unsupervised-learning","auto-encoders"],"description":"PyTorch Blog Post On Image Similarity Search"}
{"name":"zhenghao977\/fcos-pytorch-37.2ap","full_name":"zhenghao977\/FCOS-PyTorch-37.2AP","topics":["anchor-free","fcos","object-detection"],"description":"A pure torch implement of FCOS 37.2AP"}
{"name":"akwasigroch\/pretext-invariant-representations","full_name":"akwasigroch\/Pretext-Invariant-Representations","topics":["machine-learning","deep-learning","self-supervised-learning","self-supervised","computer-vision"],"description":"Implementation of the paper Self-Supervised Learning of Pretext-Invariant Representations "}
{"name":"mihir135\/yolov5","full_name":"mihir135\/yolov5","topics":[],"description":"YOLO v5 pytorch implementation. This repository contains code for this tutorial."}
{"name":"xming521\/ctai","full_name":"xming521\/CTAI","topics":["pytorch","flask","vue"],"description":"\u57fa\u4e8e\u6df1\u5ea6\u5b66\u4e60\u7684\u80bf\u7624\u8f85\u52a9\u8bca\u65ad\u7cfb\u7edf\uff0c\u4ee5\u56fe\u50cf\u5206\u5272\u4e3a\u6838\u5fc3\uff0c\u5229\u7528\u4eba\u5de5\u667a\u80fd\u5b8c\u6210\u80bf\u7624\u533a\u57df\u7684\u8bc6\u522b\u52fe\u753b\u5e76\u63d0\u4f9b\u80bf\u7624\u533a\u57df\u7684\u7279\u5f81\u6765\u8f85\u52a9\u533b\u751f\u8fdb\u884c\u8bca\u65ad\u3002\u6709\u5b8c\u6574\u7684\u6a21\u578b\u6784\u5efa\u3001\u540e\u7aef\u67b6\u8bbe\u548c\u524d\u7aef\u8bbf\u95ee\u529f\u80fd\u3002"}
{"name":"jingliang-duan\/distributional-soft-actor-critic","full_name":"Jingliang-Duan\/Distributional-Soft-Actor-Critic","topics":["reinforcement-learning","pytorch"],"description":null}
{"name":"zhou13\/holicity","full_name":"zhou13\/holicity","topics":["cad-models","panorama-image","dataset","deep-learning","deep-neural-networks","3d-reconstruction","streetview"],"description":"HoliCity: A City-Scale Data Platform for Learning Holistic 3D Structures"}
{"name":"yanbeic\/val","full_name":"yanbeic\/VAL","topics":["image-search","vision-and-language","attention","cvpr2020","tensorflow","retrieval"],"description":"Tensorflow Implementation on Paper [CVPR2020]Image Search with Text Feedback by Visiolinguistic Attention Learning"}
{"name":"unicredit\/charade","full_name":"andreaferretti\/charade","topics":["nlp","nlp-apis","python"],"description":"A server for multilanguage, composable NLP API in Python"}
{"name":"lipairui\/textgo","full_name":"Lipairui\/textgo","topics":["text-preprocessing","nlp","text-classification","text-search","text-similarity","text-representation","bert"],"description":"Text preprocessing, representation, similarity calculation, text search and classification. Let's go and play with text!"}
{"name":"qinnzou\/deepcrack","full_name":"qinnzou\/DeepCrack","topics":["deepcrack","pavement-images","crack-detection","cnn","deep-learning","pavement-crack-detection","convolutional-neural-network"],"description":"DeepCrack: Learning Hierarchical Convolutional Features for Crack Detection"}
{"name":"developers-cosmos\/covid-race-game","full_name":"developers-cosmos\/COVID-Race-Game","topics":["artificial-intelligence","pygame","deep-learning","covid-19","python-game-development","game","covid-race-game","2d-game"],"description":"A Game is developed with pygame and AI where the user can control the actions through his hands (gestures)"}
{"name":"philipperemy\/keras-sde-net","full_name":"philipperemy\/keras-sde-net","topics":["sde-net","keras","keras-tensorflow","tensorflow","neural-networks"],"description":"Keras implementation of SDE-Net (ICML 2020)."}
{"name":"tianweidadada\/smp2020---weibo-sentiment-classification","full_name":"Tianweidadada\/SMP2020---Weibo-sentiment-classification","topics":["nlp","smp"],"description":"SMP 2020\u5e74\u5fae\u535a\u60c5\u611f\u5206\u7c7b\u8bc4\u6d4b\u4efb\u52a1 \u7b2c\u516d\u540d\u89e3\u51b3\u65b9\u6848"}
{"name":"mahmoodlab\/toad","full_name":"mahmoodlab\/TOAD","topics":["histology","pathology","wsi-images","histopathology","cancer-imaging-research","cancer-research","cancer-detection","mahmoodlab","deep","deep-learning","bioimage-analysis","bioimage-informatics","toad","unknown-primary","cup"],"description":"AI-based pathology predicts origins for cancers of unknown primary - Nature"}
{"name":"debeshjha\/resunetplusplus-with-crf-and-tta","full_name":"DebeshJha\/ResUNetPlusPlus-with-CRF-and-TTA","topics":["semantic-segmentation","convolutional-neural-networks","computer-vision","image-segmentation","unet-image-segmentation","deep-learning","unet","resunet","resunet-architecture","medical-imaging","pytorch","pytorch-implementation","segmentation","tensorflow","image-segmantation"],"description":"ResUNet++, CRF, and TTA  for segmentation of medical images  (IEEE JBIHI)"}
{"name":"umitkaanusta\/mint-youtube","full_name":"umitkaanusta\/mint-youtube","topics":["youtube-videos","youtube","youtube-api","video","nlp","text-classification","text-analysis","comment","self-hosted","channel"],"description":"Comment analytics tool for YouTube videos"}
{"name":"gabrielspadon\/regenn","full_name":"gabrielspadon\/ReGENN","topics":["deep-learning","neural-network","evolution","series-forecasting","paper","gse","artificial-intelligence"],"description":"Recurrent Graph Evolution Neural Network (ReGENN) using Graph Soft Evolution (GSE)"}
{"name":"weizhepei\/casrel","full_name":"weizhepei\/CasRel","topics":["knowledge-graph","relation-extraction","relational-triple-extraction","information-extraction","keras","bert"],"description":"A Novel Cascade Binary Tagging Framework for Relational Triple Extraction. Accepted by ACL 2020. "}
{"name":"cripac-dig\/texting","full_name":"CRIPAC-DIG\/TextING","topics":["text-classification","graph-neural-networks","natural-language-processing","inductive-learning"],"description":"[ACL 2020] Tensorflow implementation for \"Every Document Owns Its Structure: Inductive Text Classification via Graph Neural Networks\""}
{"name":"badbadbadboy\/dbnet-lite.pytorch","full_name":"BADBADBADBOY\/DBnet-lite.pytorch","topics":["dbnet","textdetection","ocr","lightweight","pytorch","python3"],"description":"A pytorch re-implementation of Real-time Scene Text Detection with Differentiable Binarization"}
{"name":"mbrossar\/denoise-imu-gyro","full_name":"mbrossar\/denoise-imu-gyro","topics":["imu","attitude-estimation","deep-learning"],"description":"Convolutional Neural Networks for Denoising Gyroscopes of Low-Cost IMUs"}
{"name":"clovaai\/dmfont","full_name":"clovaai\/dmfont","topics":["font-generation","pytorch","eccv2020","dmfont","few-shot"],"description":"Official PyTorch implementation of DM-Font (ECCV 2020)"}
{"name":"lorenmt\/shape-adaptor","full_name":"lorenmt\/shape-adaptor","topics":["neural-shape-learning","pytorch","automl","nas","pooling"],"description":"The implementation of \"Shape Adaptor: A Learnable Resizing Module\" [ECCV 2020]."}
{"name":"progamergov\/neural-dream","full_name":"ProGamerGov\/neural-dream","topics":["deepdream","pytorch","visualization","computer-vision","resnet","googlenet","inception","vgg","nin","pytorch-deepdream","deep-dream","neural-dream","tiling"],"description":"PyTorch implementation of DeepDream algorithm"}
{"name":"rdroste\/unisal","full_name":"rdroste\/unisal","topics":["machine-learning","deep-learning","saliency-detection","saliency-prediction","visual-saliency","visual-salience","video-saliency-prediction","video-saliency","image-saliency","eccv2020","eccv-2020","eccv","saliency","saliency-map","saliency-model","salicon","dhf1k","ucf-sports"],"description":"Unified Image and Video Saliency Modeling (ECCV 2020)"}
{"name":"puzzlelib\/puzzlelib","full_name":"puzzlelib\/PuzzleLib","topics":["deep-learning","data-science","neural-network","machine-learning","library","python","deep-neural-networks","gpu","tensor","numpy","ml"],"description":"Deep Learning framework with NVIDIA & AMD support"}
{"name":"seongmin-kye\/meta-sr","full_name":"seongmin-kye\/meta-SR","topics":["speaker-recognition","short-utterances","speaker-verification","meta-learning"],"description":"Pytorch implementation of Meta-Learning for Short Utterance Speaker Recognition with Imbalance Length Pairs (Interspeech, 2020)"}
{"name":"crs4\/atlantanet","full_name":"crs4\/AtlantaNet","topics":["3d-reconstruction","computer-vision","indoor-scenes","panorama-image"],"description":"Pytorch implementation of the ECCV 2020 paper: AtlantaNet: Inferring the 3D Indoor Layout from a Single 360 Image beyond the Manhattan World Assumption"}
{"name":"amontgomerie\/question_generator","full_name":"AMontgomerie\/question_generator","topics":["nlp","natural-language-processing","natural-language-generation","nlg","transformers","t5","bert","question-generation"],"description":"An NLP system for generating reading comprehension questions"}
{"name":"haoheliu\/subband-music-separation","full_name":"haoheliu\/Subband-Music-Separation","topics":[],"description":"Pytorch: Channel-wise subband (CWS) input for better voice and accompaniment separation"}
{"name":"mmphego\/face_mask_detection_openvino","full_name":"mmphego\/face_mask_detection_openvino","topics":["face-mask-detection","openvino","intel-openvino-toolkit","deep-learning","intel","edge","inference","blogpost","edgeai","covid-19","opencv"],"description":"Detect faces and determine whether people are wearing mask."}
{"name":"kaiyuyue\/mgd","full_name":"KaiyuYue\/mgd","topics":["matching-guided-distillation","mgd","model-distillation","knowledge-distillation","pytorch","detectron2","kd","detection","classification","moco-v2","unsupervised-learning","deep-learning"],"description":"Matching Guided Distillation (ECCV 2020)"}
{"name":"eugeneyan\/recsys-nlp-graph","full_name":"eugeneyan\/recsys-nlp-graph","topics":["recommender-system","pytorch","nlp","graph","matrix-factorization"],"description":"\ud83d\uded2 Simple recommender with matrix factorization, graph, and NLP. Beating the regular collaborative filtering baseline."}
{"name":"amazon-research\/meta-q-learning","full_name":"amazon-science\/meta-q-learning","topics":["deep-learning","meta-learning","reinforcement-learning","multi-task-learning"],"description":"Code for the paper \"Meta-Q-Learning\"( ICLR 2020)"}
{"name":"ai4ce\/spare3d","full_name":"ai4ce\/SPARE3D","topics":["line-drawings","spatial-reasoning","deep-learning","pythonocc","reasoning","line-drawing"],"description":"[CVPR2020] A Dataset for SPAtial REasoning on Three-View Line Drawings"}
{"name":"chenchongthu\/jnskr","full_name":"chenchongthu\/JNSKR","topics":["recommender-system","neural-network","efficient-algorithm","non-sampling"],"description":"This is our implementation of JNSKR: Jointly Non-Sampling Learning for Knowledge Graph Enhanced Recommendation (SIGIR 2020)"}
{"name":"selfishgene\/neuron_as_deep_net","full_name":"SelfishGene\/neuron_as_deep_net","topics":["deep-learning","convolutional-neural-networks","biological-modeling","neuroscience-inspired-ai","neuroscience-data"],"description":"Code behind the work \"Single Cortical Neurons as Deep Artificial Neural Networks\", published in Neuron 2021"}
{"name":"renovamen\/text-classification","full_name":"Renovamen\/Text-Classification","topics":["text-classification","han","nlp","hierarchical-attention-networks","fasttext","bilstm-attention","textcnn","lstm","cnn","document-classification","transformer"],"description":"PyTorch implementation of some text classification models (HAN, fastText, BiLSTM-Attention, TextCNN, Transformer) | \u6587\u672c\u5206\u7c7b"}
{"name":"googlecloudplatform\/dataflow-contact-center-speech-analysis","full_name":"GoogleCloudPlatform\/dataflow-contact-center-speech-analysis","topics":["speech-to-text","natural-language-processing","google-cloud","dataflow","cloud-functions","data-loss-prevention"],"description":"Speech Analysis Framework, a collection of components and code from Google Cloud that you can use to transcribe audio files to create analytics."}
{"name":"pd3f\/dehyphen","full_name":"pd3f\/dehyphen","topics":["python","pdf","dehyphenation","hyphens","nlp","german","flair-embeddings","flair","hyphen","pd3f"],"description":"\ud83d\udcdc Dehyphenation of broken text (mainly German), i.e., extracted from a PDF"}
{"name":"nithin-holla\/metalifelonglanguage","full_name":"Nithin-Holla\/MetaLifelongLanguage","topics":["meta-learning","lifelong-learning","continual-learning","text-classification","relation-extraction","natural-language-processing","experience-replay"],"description":"Repository containing code for the paper \"Meta-Learning with Sparse Experience Replay for Lifelong Language Learning\"."}
{"name":"icbcbicc\/focuslitenn","full_name":"icbcbicc\/FocusLiteNN","topics":["image-processing","digital-pathology","deep-learning","deep-neural-networks","convolutional-neural-network","medical-image-processing","image-quality-assessment","network-distillation","pathological-images","pytorch"],"description":"Official PyTorch and MATLAB implementations of our MICCAI 2020 paper \"FocusLiteNN: High Efficiency Focus Quality Assessment for Digital Pathology\""}
{"name":"venkanna37\/label-pixels","full_name":"venkanna37\/Label-Pixels","topics":["semantic-segmentation","deep-learning","fully-convolutional-networks","keras","tensorflow","road-extraction","pixel-labeling","artificial-intelligence","msc-project","label-pixels","unet","segnet","resunet","satellite-image-segmentation","gdal","machine-learning","remote-sensing","satellite-imagery","segmentation"],"description":"Label-Pixels is the tool for semantic segmentation of remote sensing images using Fully Convolutional Networks. Initially, it is designed for extracting the road network from remote sensing imagery and now, it can be used to extract different features from remote sensing imagery."}
{"name":"dorukkarinca\/keras-buoy","full_name":"dorukkarinca\/keras-buoy","topics":["keras","checkpointing","autosave","data-science","machine-learning","colab-notebook","colaboratory","colab","colab-automation"],"description":"Keras wrapper that autosaves what ModelCheckpoint cannot."}
{"name":"deng-mit\/reactorch","full_name":"DENG-MIT\/reactorch","topics":["combustion","pytorch","chemical-kinetics","fluid-dynamics","scientific-machine-learning","kinetics"],"description":"A Differentiable Reacting Flow Simulation Package in PyTorch"}
{"name":"yoonseok312\/watch-out","full_name":"yoonseok312\/watch-out","topics":["ios","tensorflow"],"description":"Watch Out: Apple Watch App to detect dangerous sounds for people with hearing disablities."}
{"name":"knight825\/models-pytorch","full_name":"Knight825\/models-pytorch","topics":["pytorch","self-attention","senet","cbam","cbam-resnet","se-resnet","attention-mechanism","cnn-model","crossstagepartial","csp-resnet","csp-densenet","exactfusionmodel"],"description":"This is a torchvision style CNN models collection based on pytorch."}
{"name":"taufikxu\/triple-gan","full_name":"taufikxu\/Triple-GAN","topics":[],"description":"Pytorch for Triple-GAN"}
{"name":"asjidkalam\/scrawl","full_name":"Asjidkalam\/Scrawl","topics":["ocr","machine-learning","keras","deep-learning","lstm"],"description":"Reverse OCR using DeepLearning"}
{"name":"denisyarats\/pytorch_sac","full_name":"denisyarats\/pytorch_sac","topics":["reinforcement-learning","dm-control","soft-actor-critic","pytorch","deep-reinforcement-learning","actor-critic","mujoco","gym","deep-learning","sac","continuous-control","d4pg"],"description":"PyTorch implementation of Soft Actor-Critic (SAC)"}
{"name":"zeiss-microscopy\/bsconv","full_name":"zeiss-microscopy\/BSConv","topics":["cvpr2020","pytorch","depthwise-separable-convolutions","resnet","mobilenet","image-classification","deep-learning","efficient-neural-networks","zeiss","cifar10","cifar100","blueprint-separable-convolutions"],"description":"Reference implementation for Blueprint Separable Convolutions (CVPR 2020)"}
{"name":"amirassov\/kaggle-global-wheat-detection","full_name":"amirassov\/kaggle-global-wheat-detection","topics":["kaggle","deep-learning","computer-vision","object-detection","mmdetection"],"description":"9th Place Solution of Kaggle Global Wheat Detection"}
{"name":"affjljoo3581\/canrevan","full_name":"affjljoo3581\/canrevan","topics":["naver","news","news-articles","nlp","naver-news","dataset","datasets","natural-language-processing","python"],"description":"\ub300\ub7c9\uc758 \ub124\uc774\ubc84 \ub274\uc2a4 \uae30\uc0ac\ub97c \uc218\uc9d1\ud558\ub294 \ub77c\uc774\ube0c\ub7ec\ub9ac\uc785\ub2c8\ub2e4."}
{"name":"andrewzlee\/neuralblock","full_name":"andrewzlee\/NeuralBlock","topics":["video-youtube-sponsorships","neural-network","sponsorships"],"description":"Neural Network that detects in-video YouTube sponsorships."}
{"name":"patrick-kidger\/fasterneuraldiffeq","full_name":"patrick-kidger\/FasterNeuralDiffEq","topics":["deep-neural-networks","deep-learning","pytorch","dynamical-systems","differential-equations","ordinary-differential-equations","controlled-differential-equations","neural-differential-equations","numerical-methods","numerical-analysis","machine-learning"],"description":"Code for \"'Hey, that's not an ODE:' Faster ODE Adjoints via Seminorms\" (ICML 2021)"}
{"name":"soongja\/basic-image-eda","full_name":"Soongja\/basic-image-eda","topics":["eda","image-dataset","visualization","cnn","image-classification","image-segmentation","computer-vision","dataset","deep-learning"],"description":"A simple image dataset EDA tool (CLI \/ Code)"}
{"name":"sjenni\/temporal-ssl","full_name":"sjenni\/temporal-ssl","topics":["self-supervised-learning","action-recognition","tensorflow","ucf101","hmdb51","unsupervised-learning","c3d","transfer-learning"],"description":"Video Representation Learning by Recognizing Temporal Transformations. In ECCV, 2020."}
{"name":"dheeraj7596\/conwea","full_name":"dheeraj7596\/ConWea","topics":["weakly-supervised-learning","contextualized-representation","contextualized-programming","text-classification","natural-language-processing","datamining","acl2020","acl"],"description":"Code for the paper \"Contextualized Weak Supervision for Text Classification\""}
{"name":"zonasw\/dbnet","full_name":"zonasw\/DBNet","topics":[],"description":"This is a tensorflow2.x implementation of \"Real-time Scene Text Detection with Differentiable Binarization\""}
{"name":"narasimha1997\/wavenet-stt","full_name":"Narasimha1997\/wavenet-stt","topics":["cplusplus-11","pybind","python3","python","wavenet","tensorflow","tensorflow2","tensorflowlite","speech-recognition"],"description":"An end-to-end speech recognition system with Wavenet. Built using C++ and python."}
{"name":"levindabhi\/sievenet","full_name":"levindabhi\/SieveNet","topics":["pytorch","pytorch-implementation","vton","vitual-tryon","sievenet","2d-virtual-try-on","image-based-tryon"],"description":"This is the unofficial implementation of SieveNet: A Unified Framework for Robust Image-Based Virtual Try-On"}
{"name":"mlforhealth\/s2sd","full_name":"MLforHealth\/S2SD","topics":["deep-metric-learning","metric-learning","deep-learning","pytorch","cub200-2011","cars196","stanford-online-products","image-retrieval","zero-shot-learning"],"description":"(ICML 2021) Implementation for S2SD - Simultaneous Similarity-based Self-Distillation for Deep Metric Learning. Paper Link: https:\/\/arxiv.org\/abs\/2009.08348"}
{"name":"knowledgedefinednetworking\/routenet-challenge","full_name":"BNN-UPC\/GNNetworkingChallenge","topics":["gnn","networking","ml","machine-learning","graph-neural-networks","communication-networks","computer-networks"],"description":"RouteNet baseline for the Graph Neural Networking Challenge (https:\/\/bnn.upc.edu\/challenge\/)"}
{"name":"clutchsoftware\/simurg","full_name":"clutchsoftware\/Simurg","topics":["nlp","python","pyqt5","bash","acikhack2"],"description":"Simurg - Yaz\u0131m Yard\u0131mc\u0131n\u0131z. Simurg Python ve PyQt5 i\u015fbirli\u011fi ile ClutchSoftware taraf\u0131ndan in\u015fa edilmi\u015f, T\u00fcrk\u00e7e Do\u011fal Dil \u0130\u015fleme alan\u0131nda kaynak ve ara\u00e7 olu\u015fturma amac\u0131 ile tasarlanm\u0131\u015ft\u0131r."}
{"name":"francesco-p\/gpwho","full_name":"francesco-p\/gpwho","topics":["gpu-monitoring","gpu","logging","deep-learning"],"description":"gpwho? GPU usage logger, with Telegram bot integration."}
{"name":"alvinwan\/nbdt-pytorch-image-models","full_name":"alvinwan\/nbdt-pytorch-image-models","topics":["pytorch","neural-backed-decision-trees","imagenet","efficientnet"],"description":"Neural-Backed Decision Tree sample integration with pytorch-image-models"}
{"name":"keremzaman\/semantic-sh","full_name":"KeremZaman\/semantic-sh","topics":["simhash","word-vectors","fasttext","bert","locality-sensitive-hashing","transformer","text-similarity","text-clustering","text-search"],"description":"semantic-sh is a SimHash implementation to detect and group similar texts by taking power of word vectors and transformer-based language models (BERT)."}
{"name":"domyounglee\/transformer-summarization","full_name":"domyounglee\/Transformer-Summarization","topics":["summarization","tensorflow","abstractive-summarization","abstractive-text-summarization","transformer","transformer-models"],"description":"An optimized Transformer based abstractive summarization model with Tensorflow"}
{"name":"sunweikes\/da-rnn","full_name":"SunWeiKeS\/DA-RNN","topics":[],"description":"\u6839\u636eSeanny123\u590d\u73b0\u8bba\u6587A Dual-Stage Attention-Based Recurrent Neural Network for Time Series Prediction\u7684pytorch\u4ee3\u7801\u8fdb\u884c\u76f8\u5173\u4fee\u6539\uff0c\u9002\u5e94pytorch1.2\u7248\u672c"}
{"name":"nrsyed\/pytorch-yolov3","full_name":"nrsyed\/pytorch-yolov3","topics":["yolov3","object-detection","pytorch","yolo","python"],"description":"A (mostly from scratch) PyTorch implementation of YOLOv3 for real-time webcam object detection"}
{"name":"leputa\/mann-meta-learning","full_name":"Leputa\/MANN-meta-learning","topics":["tensorflow","meta-learning","few-shot-learning","neural-turing-machines","memory-augmented-neural-networks"],"description":"A tensorflow implement of Memory-Augmented Neural Network"}
{"name":"spijkervet\/simclr","full_name":"Spijkervet\/SimCLR","topics":["simclr","pytorch","contrastive-learning","unsupervised-learning","representation-learning"],"description":"PyTorch implementation of SimCLR: A Simple Framework for Contrastive Learning of Visual Representations by T. Chen et al."}
{"name":"sjmoran\/deeplpf","full_name":"sjmoran\/DeepLPF","topics":["cvpr2020","raw2rgb","deep-learning","computational-photography","computer-vision","adobe-upe","paper","rgb","cvpr"],"description":"Code for CVPR 2020 paper \"Deep Local Parametric Filters for Image Enhancement\""}
{"name":"nvlabs\/dream","full_name":"NVlabs\/DREAM","topics":["pose-estimation","camera-calibration","deep-learning","pytorch","ros"],"description":"DREAM: Deep Robot-to-Camera Extrinsics for Articulated Manipulators (ICRA 2020)"}
{"name":"lucidrains\/axial-attention","full_name":"lucidrains\/axial-attention","topics":["artificial-intelligence","deep-learning","attention-mechanism","pytorch"],"description":"Implementation of Axial attention - attending to multi-dimensional data efficiently"}
{"name":"smoke-trees\/voice-synthesis","full_name":"smoke-trees\/Voice-synthesis","topics":["voice-synthesis","voice-cloning","sv2tts","pytorch-implementation","tensorflow","keras","speech-to-text"],"description":"This repository is an implementation of Transfer Learning from Speaker Verification to Multispeaker Text-To-Speech Synthesis (SV2TTS) with a vocoder that works in real-time. SV2TTS is a three-stage deep learning framework that allows to create a numerical representation of a voice from a few seconds of audio, and to use it to condition a text-to-speech model trained to generalize to new voices."}
{"name":"think989\/real-time-stock-market-prediction-using-ensemble-dl-and-rainbow-dqn","full_name":"THINK989\/Real-Time-Stock-Market-Prediction-using-Ensemble-DL-and-Rainbow-DQN","topics":["real-time-prediction","rainbow-dqn","stock-price-forecasting","lstm","gru","ensemble","keras","trade-bot","tensorflow"],"description":null}
{"name":"dumitrescustefan\/romanian-transformers","full_name":"dumitrescustefan\/Romanian-Transformers","topics":["romanian-bert","bert","huggingface-transformers","nlp","pytorch","language-model","romanian-language"],"description":"This repo is the home of Romanian Transformers. "}
{"name":"khrylx\/dlow","full_name":"Khrylx\/DLow","topics":["eccv2020","motion-prediction","motion-forecasting","pose-prediction","pose-forecasting","generative-models","diversity","diversifying-latent-flows","vae","pytorch","deep-learning"],"description":"[ECCV 2020] Official PyTorch Implementation of \"DLow: Diversifying Latent Flows for Diverse Human Motion Prediction\". ECCV 2020."}
{"name":"mac-automl\/xnas","full_name":"MAC-AutoML\/XNAS","topics":["pytorch","automl","neural-architecture-search"],"description":"XNAS: An effective, modular, and flexible Neural Architecture Search (NAS) framework."}
{"name":"itsuki8914\/voice-morphing-relgan","full_name":"itsuki8914\/Voice-morphing-RelGAN","topics":[],"description":"A implementation voice morphing using relgan with tensorflow"}
{"name":"peteryux\/pcdarts-tf2","full_name":"peteryuX\/pcdarts-tf2","topics":["neural-architecture-search","darts","pc-darts","pcdarts","tensorflow","tf2","tensorflow2","cifar10","cifar-10","iclr2020"],"description":"PC-DARTS (PC-DARTS: Partial Channel Connections for Memory-Efficient Differentiable Architecture Search, published in ICLR 2020) implemented in Tensorflow 2.0+. This is an unofficial implementation."}
{"name":"matheushent\/covid-19-detector","full_name":"matheushent\/covid-19-detector","topics":["tensorflow","deep-learning","covid-19","grad-cam","occlusion-sensitivity","keras","python3","vgg16","vgg19","resnet-50","resnet-152","machine-learning-algorithms","transfer-learning","cuda","gpu-tensorflow","convolutional-neural-networks","efficientnet"],"description":"Repository containing scripts to train and test a neural network whose goal is to detect presence of COVID-19"}
{"name":"nju-jet\/sr_framework","full_name":"NJU-Jet\/SR_Framework","topics":["model-zoo","latticenet","imdn","srfbn","idn","carn","edsr","drrn","lapsrn","drcn","vdsr","pytorch","super-resolution"],"description":"A generic framework which implements some famouts super-resolution models"}
{"name":"cyrilzakka\/stylegan2-tpu","full_name":"cyrilzakka\/stylegan2-tpu","topics":["deep-learning","tensorflow"],"description":"StyleGAN2 but rewritten for TPUs."}
{"name":"theaiguyscode\/yolov4-deepsort","full_name":"theAIGuysCode\/yolov4-deepsort","topics":["yolov4","yolov4-deepsort","deep-sort","object-tracker","tensorflow","object-tracking","object-detection"],"description":"Object tracking implemented with YOLOv4, DeepSort, and TensorFlow."}
{"name":"theaiguyscode\/yolov3_deepsort","full_name":"theAIGuysCode\/yolov3_deepsort","topics":["yolov3","object-tracker","deep-sort","tensorflow"],"description":"Object tracking implemented with YOLOv3, Deep Sort and Tensorflow."}
{"name":"theaiguyscode\/object-detection-api","full_name":"theAIGuysCode\/Object-Detection-API","topics":["yolov3","object-detection","tensorflow","yolo","inference","deep-learning"],"description":"Yolov3 Object Detection implemented as APIs, using TensorFlow and Flask"}
{"name":"developers-cosmos\/meme-generator","full_name":"developers-cosmos\/Meme-Generator","topics":["cnn-classification","image-augmentation","chef-cookbook","flask-server","gcp","image-classification","gcp-auto-ml","balanced-data","meme-generator","artificial-intelligence","neural-networks","memegen","cnn","memes","projects","automated"],"description":"MemeGen is a web application where the user gives an image as input and our tool generates a meme at one click for the user."}
{"name":"stefanopini\/simple-higherhrnet","full_name":"stefanopini\/simple-HigherHRNet","topics":["pytorch","hrnet","higher-hrnet","human-pose-estimation","keypoint-detection","coco-dataset","mscoco-keypoint","deep-learning"],"description":"Multi-person Human Pose Estimation with HigherHRNet in Pytorch, with TensorRT support"}
{"name":"affjljoo3581\/gpt2","full_name":"affjljoo3581\/GPT2","topics":["pytorch","nlp","language-model","gpt2","natural-language-processing","natural-language-generation","transformer"],"description":"PyTorch Implementation of OpenAI GPT-2"}
{"name":"antonior92\/automatic-ecg-diagnosis","full_name":"antonior92\/automatic-ecg-diagnosis","topics":["deep-learning","convolutional-neural-networks","ecg","ecg-signal","ecg-classification","atrial-fibrillation","atrial-fibrillation-detection"],"description":"Scripts and modules for training and testing neural network for ECG automatic classification. Companion code to the paper  \"Automatic diagnosis of the 12-lead ECG using a deep neural network\". "}
{"name":"claying\/otk","full_name":"claying\/OTK","topics":[],"description":"A Pytorch implementation of the optimal transport kernel embedding"}
{"name":"cripac-dig\/grace","full_name":"CRIPAC-DIG\/GRACE","topics":["contrastive-learning","graph-representation-learning","deep-learning","machine-learning"],"description":"[GRL+ @ ICML 2020] PyTorch implementation for \"Deep Graph Contrastive Representation Learning\" (https:\/\/arxiv.org\/abs\/2006.04131v2)"}
{"name":"pkshatechnology-research\/tdmelodic","full_name":"PKSHATechnology-Research\/tdmelodic","topics":["japanese","accent","nlp","speech-synthesis"],"description":"A Japanese accent dictionary generator"}
{"name":"tsujuifu\/pytorch_sscr","full_name":"tsujuifu\/pytorch_sscr","topics":["emnlp2020","pytorch","computer-vision","image-editing"],"description":"A PyTorch implementation of SSCR"}
{"name":"hejingwenhejingwen\/csrnet","full_name":"hejingwenhejingwen\/CSRNet","topics":["photo-retouching","deep-learning","image-enhancement","image-processing","color-enhancement","csrnet"],"description":"(ECCV 2020) Conditional Sequential Modulation for Efficient Global Image Retouching"}
{"name":"quasarlight\/pytorch_face_recognition-","full_name":"QuasarLight\/Pytorch_Face_Recognition-","topics":[],"description":"Pytorch implementation of mainstream face recognition algorithms(ArcFace, CosFace)."}
{"name":"renmin1991\/dyamic_graph_representation","full_name":"RenMin1991\/Dyamic_Graph_Representation","topics":["pytorch","feature-graphs","feature-extraction","biometrics","iris-recognition","face-recognition","aaai2020"],"description":"Official Dynamic Graph Representation PyTorch implement for iris\/face recognition"}
{"name":"lukewys\/dcase_2020_t6","full_name":"lukewys\/dcase_2020_T6","topics":["audio-captioning","deep-learning"],"description":"2nd place solution for 2020 DCASE challenge task 6 audio captioning. http:\/\/dcase.community\/challenge2020\/task-automatic-audio-captioning-results#wuyusong2020_t6"}
{"name":"bm777\/object_detection","full_name":"bm777\/object_detection","topics":["object-detection","python","tensorflow","opencv","detection","absl","yolov3","transfer-learning","darknet","graph-mode"],"description":"Implementatoin of object detection using Tensorflow 2.1.0 | this can be use in a car for object detection"}
{"name":"deepraj1729\/tchatbot","full_name":"deepraj1729\/TChatBot","topics":["machine-learning","nlp","nltk","python3","tensorflow","pypi","deep-learning","artificial-intelligence","neural-networks","speech-recognition","numpy","virtual-environment","pip","conda","sklearn","git","github","framework","chatbot-framework"],"description":"A ChatBot framework to create customizable all purpose Chatbots using NLP, Tensorflow, Speech Recognition "}
{"name":"liangheming\/auto_assignv2","full_name":"liangheming\/auto_assignv2","topics":[],"description":"An unofficial pytorch implementation of <<AutoAssign: Differentiable Label Assignment for Dense Object Detection>>"}
{"name":"hccho2\/transformer_dateconversion","full_name":"hccho2\/Transformer_DateConversion","topics":[],"description":"pytorch.nn.Transformer, torchtext, Tensorflow 2, Keras"}
{"name":"dkurt\/openvino_practice","full_name":"dkurt\/openvino_practice","topics":["openvino","intel","computer-vision","practice","opencv","deep-learning"],"description":"Practice git, Travis CI and Intel OpenVINO"}
{"name":"ktho22\/vctts","full_name":"ktho22\/vctts","topics":[],"description":"pytorch implementation of \"Emotional Voice Conversion using Multitask Learning with Text-to-Speech\", Accepted to ICASSP 2020 "}
{"name":"dessa-oss\/atlas","full_name":"dessa-oss\/atlas","topics":["machine-learning","data-science","artificial-intelligence","python","deep-learning","gpu","ai","ml","model-management"],"description":"An Open Source, Self-Hosted Platform For Applied Deep Learning Development"}
{"name":"tonyngjichun\/solar","full_name":"tonyngjichun\/SOLAR","topics":["image-retrieval","global-descriptors","local-descriptors","second-order","non-local-block","eccv-2020","eccv2020","eccv","computer-vision","deep-learning","pytorch","cnn"],"description":"PyTorch code for \"SOLAR: Second-Order Loss and Attention for Image Retrieval\". In ECCV 2020"}
{"name":"vita-group\/autospeech","full_name":"VITA-Group\/AutoSpeech","topics":["automl","autospeech","neural-architecture-search","speaker-recognition","pytorch"],"description":"[InterSpeech 2020] \"AutoSpeech: Neural Architecture Search for Speaker Recognition\" by Shaojin Ding*, Tianlong Chen*, Xinyu Gong, Weiwei Zha, Zhangyang Wang "}
{"name":"richardkxu\/distributed-pytorch","full_name":"richardkxu\/distributed-pytorch","topics":["distributed-training","deep-learning","computer-vision","imagenet","mixed-precision-training","pytorch","nvidia-apex","tensorboard","horovod"],"description":"Distributed, mixed-precision training with PyTorch"}
{"name":"cattaneod\/maskflownet-pytorch","full_name":"cattaneod\/MaskFlownet-Pytorch","topics":["deep-learning","computer-vision","convolutional-neural-networks","optical-flow","kitti-dataset","dnn","cnn","pytorch","maskflownet"],"description":"Pytorch implementation of MaskFlownet"}
{"name":"rishikksh20\/resunet","full_name":"rishikksh20\/ResUnet","topics":["resunet","unet","image-processing","image-segmentation","unet-pytorch","medical-image-processing","satellite-imagery","deep-residual-network","segmentation","image-to-image-translation"],"description":"Pytorch implementation of ResUnet and ResUnet ++"}
{"name":"ahmdtaha\/constrained_attention_filter","full_name":"ahmdtaha\/constrained_attention_filter","topics":["tensorflow","deep-neural-networks","attention-visualization","python-3","python3","imagenet","convolutional-neural-networks","weakly-supervised-localization","autonomous-vehicles","autonomous-driving","classification","retrieval","feature-embedding"],"description":"(ECCV2020) Tensorflow implementation of A Generic Visualization Approach for Convolutional Neural Networks"}
{"name":"mattdl\/clsurvey","full_name":"Mattdl\/CLsurvey","topics":["continual-learning","tpami","defy-forgetting","classification-tasks","deep-learning","neural-networks","framework","hyperparameter-tuning","inaturalist","tinyimagenet","icarl","synaptic-intelligence","gradient-episodic-memory","packnet","hat","memory-aware-synapses","elastic-weight-consolidation","incremental-learning","incremental-moment-matching"],"description":"Continual Hyperparameter Selection Framework. Compares 11 state-of-the-art Lifelong Learning methods and  4 baselines. Official Codebase of \"A continual learning survey: Defying forgetting in classification tasks.\" in  IEEE TPAMI."}
{"name":"ocatak\/malware_api_class","full_name":"ocatak\/malware_api_class","topics":["dataset","sandbox","cuckoo-sandbox","malware","machine-learning","malware-families","malware-dataset","adware","study","classification","deep-learning","lstm-neural-networks"],"description":"Malware dataset for security researchers, data scientists. Public malware dataset generated by Cuckoo Sandbox based on Windows OS API calls analysis for cyber security researchers"}
{"name":"wenxuecui\/csnet-pytorch","full_name":"WenxueCui\/CSNet-Pytorch","topics":[],"description":"Pytorch code for paper \"Deep Networks for Compressed Image Sensing\" and \"Image Compressed Sensing Using Convolutional Neural Network\""}
{"name":"juliawolleb\/descargan","full_name":"JuliaWolleb\/DeScarGAN","topics":[],"description":"Official Pytorch implementation of the paper DeScarGAN"}
{"name":"milvlg\/mt-captioning","full_name":"MILVLG\/mt-captioning","topics":["image-captioning","pytorch","multimodal-transformer"],"description":"A PyTorch implementation of the paper Multimodal Transformer with Multiview Visual Representation for Image Captioning"}
{"name":"mchughes288\/emotion_detection_cpc","full_name":"McHughes288\/emotion_detection_cpc","topics":["emotion","emotion-recognition","emotion-detection","machine-learning","pytorch","self-supervised-learning","speech"],"description":"Emotion detection in audio utilising self-supervised representations trained with Contrastive Predictive Coding (CPC)."}
{"name":"incheon-cho\/dynamic_model_pruning_with_feedback","full_name":"INCHEON-CHO\/Dynamic_Model_Pruning_with_Feedback","topics":["pruning","pytorch-implementation","prune","pruning-structures"],"description":"Implement of Dynamic Model Pruning with Feedback with pytorch"}
{"name":"choiw-public\/crack-segmentation","full_name":"choiw-public\/Crack-segmentation","topics":["tensorflow","segmentation","crack-segmentation","crack-detection","python"],"description":"This repo contains customized deep learning models for segmenting cracks."}
{"name":"is2ai\/chest-x-ray-module","full_name":"IS2AI\/Chest-X-ray-module","topics":["deep-learning","densenet121","medical-imaging","machine-learning","computer-vision","pytorch","catalyst"],"description":null}
{"name":"yang-han\/p-reg","full_name":"yang-han\/P-reg","topics":["graph-neural-networks","gcn","gnn","regularization","aaai2021"],"description":"Rethinking Graph Regularization for Graph Neural Networks (AAAI2021)"}
{"name":"kevinzakka\/torchnca","full_name":"kevinzakka\/torchnca","topics":["pytorch","nca-python","neighbourhood-components-analysis","python","python3"],"description":"A PyTorch implementation of Neighbourhood Components Analysis."}
{"name":"neuml\/codequestion","full_name":"neuml\/codequestion","topics":["python","machine-learning","search","nlp","txtai"],"description":"\ud83d\udcad Semantic search for developers"}
{"name":"minyoungg\/pix2latent","full_name":"minyoungg\/pix2latent","topics":["pytorch","cma-es","inverting-images","nevergrad","biggan","stylegan2","gan"],"description":"Code for: Transforming and Projecting Images into Class-conditional Generative Networks"}
{"name":"samuelbroughton\/stargan-voice-conversion-2","full_name":"SamuelBroughton\/StarGAN-Voice-Conversion-2","topics":["pytorch","voice-conversion","stargan-vc2","stagan-vc","speech","speech-synthesis"],"description":"A pytorch implementation of StarGAN-VC2"}
{"name":"mhso\/bombsolver","full_name":"mhso\/BombSolver","topics":["machine-learning","python","neural-network","image-recognition"],"description":"Defusing bombs in Keep Talking and Nobody Explodes"}
{"name":"oke-aditya\/image_similarity","full_name":"oke-aditya\/image_similarity","topics":["image-similarity","pytorch","image-retrieval","autoencoder","unsupervised-learning","auto-encoders"],"description":"PyTorch Blog Post On Image Similarity Search"}
{"name":"zhenghao977\/fcos-pytorch-37.2ap","full_name":"zhenghao977\/FCOS-PyTorch-37.2AP","topics":["anchor-free","fcos","object-detection"],"description":"A pure torch implement of FCOS 37.2AP"}
{"name":"akwasigroch\/pretext-invariant-representations","full_name":"akwasigroch\/Pretext-Invariant-Representations","topics":["machine-learning","deep-learning","self-supervised-learning","self-supervised","computer-vision"],"description":"Implementation of the paper Self-Supervised Learning of Pretext-Invariant Representations "}
{"name":"mihir135\/yolov5","full_name":"mihir135\/yolov5","topics":[],"description":"YOLO v5 pytorch implementation. This repository contains code for this tutorial."}
{"name":"xming521\/ctai","full_name":"xming521\/CTAI","topics":["pytorch","flask","vue"],"description":"\u57fa\u4e8e\u6df1\u5ea6\u5b66\u4e60\u7684\u80bf\u7624\u8f85\u52a9\u8bca\u65ad\u7cfb\u7edf\uff0c\u4ee5\u56fe\u50cf\u5206\u5272\u4e3a\u6838\u5fc3\uff0c\u5229\u7528\u4eba\u5de5\u667a\u80fd\u5b8c\u6210\u80bf\u7624\u533a\u57df\u7684\u8bc6\u522b\u52fe\u753b\u5e76\u63d0\u4f9b\u80bf\u7624\u533a\u57df\u7684\u7279\u5f81\u6765\u8f85\u52a9\u533b\u751f\u8fdb\u884c\u8bca\u65ad\u3002\u6709\u5b8c\u6574\u7684\u6a21\u578b\u6784\u5efa\u3001\u540e\u7aef\u67b6\u8bbe\u548c\u524d\u7aef\u8bbf\u95ee\u529f\u80fd\u3002"}
{"name":"jingliang-duan\/distributional-soft-actor-critic","full_name":"Jingliang-Duan\/Distributional-Soft-Actor-Critic","topics":["reinforcement-learning","pytorch"],"description":null}
{"name":"zhou13\/holicity","full_name":"zhou13\/holicity","topics":["cad-models","panorama-image","dataset","deep-learning","deep-neural-networks","3d-reconstruction","streetview"],"description":"HoliCity: A City-Scale Data Platform for Learning Holistic 3D Structures"}
{"name":"yanbeic\/val","full_name":"yanbeic\/VAL","topics":["image-search","vision-and-language","attention","cvpr2020","tensorflow","retrieval"],"description":"Tensorflow Implementation on Paper [CVPR2020]Image Search with Text Feedback by Visiolinguistic Attention Learning"}
{"name":"unicredit\/charade","full_name":"andreaferretti\/charade","topics":["nlp","nlp-apis","python"],"description":"A server for multilanguage, composable NLP API in Python"}
{"name":"lipairui\/textgo","full_name":"Lipairui\/textgo","topics":["text-preprocessing","nlp","text-classification","text-search","text-similarity","text-representation","bert"],"description":"Text preprocessing, representation, similarity calculation, text search and classification. Let's go and play with text!"}
{"name":"qinnzou\/deepcrack","full_name":"qinnzou\/DeepCrack","topics":["deepcrack","pavement-images","crack-detection","cnn","deep-learning","pavement-crack-detection","convolutional-neural-network"],"description":"DeepCrack: Learning Hierarchical Convolutional Features for Crack Detection"}
{"name":"developers-cosmos\/covid-race-game","full_name":"developers-cosmos\/COVID-Race-Game","topics":["artificial-intelligence","pygame","deep-learning","covid-19","python-game-development","game","covid-race-game","2d-game"],"description":"A Game is developed with pygame and AI where the user can control the actions through his hands (gestures)"}
{"name":"philipperemy\/keras-sde-net","full_name":"philipperemy\/keras-sde-net","topics":["sde-net","keras","keras-tensorflow","tensorflow","neural-networks"],"description":"Keras implementation of SDE-Net (ICML 2020)."}
{"name":"tianweidadada\/smp2020---weibo-sentiment-classification","full_name":"Tianweidadada\/SMP2020---Weibo-sentiment-classification","topics":["nlp","smp"],"description":"SMP 2020\u5e74\u5fae\u535a\u60c5\u611f\u5206\u7c7b\u8bc4\u6d4b\u4efb\u52a1 \u7b2c\u516d\u540d\u89e3\u51b3\u65b9\u6848"}
{"name":"mahmoodlab\/toad","full_name":"mahmoodlab\/TOAD","topics":["histology","pathology","wsi-images","histopathology","cancer-imaging-research","cancer-research","cancer-detection","mahmoodlab","deep","deep-learning","bioimage-analysis","bioimage-informatics","toad","unknown-primary","cup"],"description":"AI-based pathology predicts origins for cancers of unknown primary - Nature"}
{"name":"debeshjha\/resunetplusplus-with-crf-and-tta","full_name":"DebeshJha\/ResUNetPlusPlus-with-CRF-and-TTA","topics":["semantic-segmentation","convolutional-neural-networks","computer-vision","image-segmentation","unet-image-segmentation","deep-learning","unet","resunet","resunet-architecture","medical-imaging","pytorch","pytorch-implementation","segmentation","tensorflow","image-segmantation"],"description":"ResUNet++, CRF, and TTA  for segmentation of medical images  (IEEE JBIHI)"}
{"name":"umitkaanusta\/mint-youtube","full_name":"umitkaanusta\/mint-youtube","topics":["youtube-videos","youtube","youtube-api","video","nlp","text-classification","text-analysis","comment","self-hosted","channel"],"description":"Comment analytics tool for YouTube videos"}
{"name":"gabrielspadon\/regenn","full_name":"gabrielspadon\/ReGENN","topics":["deep-learning","neural-network","evolution","series-forecasting","paper","gse","artificial-intelligence"],"description":"Recurrent Graph Evolution Neural Network (ReGENN) using Graph Soft Evolution (GSE)"}
{"name":"weizhepei\/casrel","full_name":"weizhepei\/CasRel","topics":["knowledge-graph","relation-extraction","relational-triple-extraction","information-extraction","keras","bert"],"description":"A Novel Cascade Binary Tagging Framework for Relational Triple Extraction. Accepted by ACL 2020. "}
{"name":"cripac-dig\/texting","full_name":"CRIPAC-DIG\/TextING","topics":["text-classification","graph-neural-networks","natural-language-processing","inductive-learning"],"description":"[ACL 2020] Tensorflow implementation for \"Every Document Owns Its Structure: Inductive Text Classification via Graph Neural Networks\""}
{"name":"badbadbadboy\/dbnet-lite.pytorch","full_name":"BADBADBADBOY\/DBnet-lite.pytorch","topics":["dbnet","textdetection","ocr","lightweight","pytorch","python3"],"description":"A pytorch re-implementation of Real-time Scene Text Detection with Differentiable Binarization"}
{"name":"mbrossar\/denoise-imu-gyro","full_name":"mbrossar\/denoise-imu-gyro","topics":["imu","attitude-estimation","deep-learning"],"description":"Convolutional Neural Networks for Denoising Gyroscopes of Low-Cost IMUs"}
{"name":"clovaai\/dmfont","full_name":"clovaai\/dmfont","topics":["font-generation","pytorch","eccv2020","dmfont","few-shot"],"description":"Official PyTorch implementation of DM-Font (ECCV 2020)"}
{"name":"lorenmt\/shape-adaptor","full_name":"lorenmt\/shape-adaptor","topics":["neural-shape-learning","pytorch","automl","nas","pooling"],"description":"The implementation of \"Shape Adaptor: A Learnable Resizing Module\" [ECCV 2020]."}
{"name":"progamergov\/neural-dream","full_name":"ProGamerGov\/neural-dream","topics":["deepdream","pytorch","visualization","computer-vision","resnet","googlenet","inception","vgg","nin","pytorch-deepdream","deep-dream","neural-dream","tiling"],"description":"PyTorch implementation of DeepDream algorithm"}
{"name":"rdroste\/unisal","full_name":"rdroste\/unisal","topics":["machine-learning","deep-learning","saliency-detection","saliency-prediction","visual-saliency","visual-salience","video-saliency-prediction","video-saliency","image-saliency","eccv2020","eccv-2020","eccv","saliency","saliency-map","saliency-model","salicon","dhf1k","ucf-sports"],"description":"Unified Image and Video Saliency Modeling (ECCV 2020)"}
{"name":"puzzlelib\/puzzlelib","full_name":"puzzlelib\/PuzzleLib","topics":["deep-learning","data-science","neural-network","machine-learning","library","python","deep-neural-networks","gpu","tensor","numpy","ml"],"description":"Deep Learning framework with NVIDIA & AMD support"}
{"name":"seongmin-kye\/meta-sr","full_name":"seongmin-kye\/meta-SR","topics":["speaker-recognition","short-utterances","speaker-verification","meta-learning"],"description":"Pytorch implementation of Meta-Learning for Short Utterance Speaker Recognition with Imbalance Length Pairs (Interspeech, 2020)"}
{"name":"crs4\/atlantanet","full_name":"crs4\/AtlantaNet","topics":["3d-reconstruction","computer-vision","indoor-scenes","panorama-image"],"description":"Pytorch implementation of the ECCV 2020 paper: AtlantaNet: Inferring the 3D Indoor Layout from a Single 360 Image beyond the Manhattan World Assumption"}
{"name":"amontgomerie\/question_generator","full_name":"AMontgomerie\/question_generator","topics":["nlp","natural-language-processing","natural-language-generation","nlg","transformers","t5","bert","question-generation"],"description":"An NLP system for generating reading comprehension questions"}
{"name":"haoheliu\/subband-music-separation","full_name":"haoheliu\/Subband-Music-Separation","topics":[],"description":"Pytorch: Channel-wise subband (CWS) input for better voice and accompaniment separation"}
{"name":"mmphego\/face_mask_detection_openvino","full_name":"mmphego\/face_mask_detection_openvino","topics":["face-mask-detection","openvino","intel-openvino-toolkit","deep-learning","intel","edge","inference","blogpost","edgeai","covid-19","opencv"],"description":"Detect faces and determine whether people are wearing mask."}
{"name":"kaiyuyue\/mgd","full_name":"KaiyuYue\/mgd","topics":["matching-guided-distillation","mgd","model-distillation","knowledge-distillation","pytorch","detectron2","kd","detection","classification","moco-v2","unsupervised-learning","deep-learning"],"description":"Matching Guided Distillation (ECCV 2020)"}
{"name":"eugeneyan\/recsys-nlp-graph","full_name":"eugeneyan\/recsys-nlp-graph","topics":["recommender-system","pytorch","nlp","graph","matrix-factorization"],"description":"\ud83d\uded2 Simple recommender with matrix factorization, graph, and NLP. Beating the regular collaborative filtering baseline."}
{"name":"amazon-research\/meta-q-learning","full_name":"amazon-science\/meta-q-learning","topics":["deep-learning","meta-learning","reinforcement-learning","multi-task-learning"],"description":"Code for the paper \"Meta-Q-Learning\"( ICLR 2020)"}
{"name":"ai4ce\/spare3d","full_name":"ai4ce\/SPARE3D","topics":["line-drawings","spatial-reasoning","deep-learning","pythonocc","reasoning","line-drawing"],"description":"[CVPR2020] A Dataset for SPAtial REasoning on Three-View Line Drawings"}
{"name":"chenchongthu\/jnskr","full_name":"chenchongthu\/JNSKR","topics":["recommender-system","neural-network","efficient-algorithm","non-sampling"],"description":"This is our implementation of JNSKR: Jointly Non-Sampling Learning for Knowledge Graph Enhanced Recommendation (SIGIR 2020)"}
{"name":"selfishgene\/neuron_as_deep_net","full_name":"SelfishGene\/neuron_as_deep_net","topics":["deep-learning","convolutional-neural-networks","biological-modeling","neuroscience-inspired-ai","neuroscience-data"],"description":"Code behind the work \"Single Cortical Neurons as Deep Artificial Neural Networks\", published in Neuron 2021"}
{"name":"renovamen\/text-classification","full_name":"Renovamen\/Text-Classification","topics":["text-classification","han","nlp","hierarchical-attention-networks","fasttext","bilstm-attention","textcnn","lstm","cnn","document-classification","transformer"],"description":"PyTorch implementation of some text classification models (HAN, fastText, BiLSTM-Attention, TextCNN, Transformer) | \u6587\u672c\u5206\u7c7b"}
{"name":"googlecloudplatform\/dataflow-contact-center-speech-analysis","full_name":"GoogleCloudPlatform\/dataflow-contact-center-speech-analysis","topics":["speech-to-text","natural-language-processing","google-cloud","dataflow","cloud-functions","data-loss-prevention"],"description":"Speech Analysis Framework, a collection of components and code from Google Cloud that you can use to transcribe audio files to create analytics."}
{"name":"pd3f\/dehyphen","full_name":"pd3f\/dehyphen","topics":["python","pdf","dehyphenation","hyphens","nlp","german","flair-embeddings","flair","hyphen","pd3f"],"description":"\ud83d\udcdc Dehyphenation of broken text (mainly German), i.e., extracted from a PDF"}
{"name":"nithin-holla\/metalifelonglanguage","full_name":"Nithin-Holla\/MetaLifelongLanguage","topics":["meta-learning","lifelong-learning","continual-learning","text-classification","relation-extraction","natural-language-processing","experience-replay"],"description":"Repository containing code for the paper \"Meta-Learning with Sparse Experience Replay for Lifelong Language Learning\"."}
{"name":"icbcbicc\/focuslitenn","full_name":"icbcbicc\/FocusLiteNN","topics":["image-processing","digital-pathology","deep-learning","deep-neural-networks","convolutional-neural-network","medical-image-processing","image-quality-assessment","network-distillation","pathological-images","pytorch"],"description":"Official PyTorch and MATLAB implementations of our MICCAI 2020 paper \"FocusLiteNN: High Efficiency Focus Quality Assessment for Digital Pathology\""}
{"name":"venkanna37\/label-pixels","full_name":"venkanna37\/Label-Pixels","topics":["semantic-segmentation","deep-learning","fully-convolutional-networks","keras","tensorflow","road-extraction","pixel-labeling","artificial-intelligence","msc-project","label-pixels","unet","segnet","resunet","satellite-image-segmentation","gdal","machine-learning","remote-sensing","satellite-imagery","segmentation"],"description":"Label-Pixels is the tool for semantic segmentation of remote sensing images using Fully Convolutional Networks. Initially, it is designed for extracting the road network from remote sensing imagery and now, it can be used to extract different features from remote sensing imagery."}
{"name":"dorukkarinca\/keras-buoy","full_name":"dorukkarinca\/keras-buoy","topics":["keras","checkpointing","autosave","data-science","machine-learning","colab-notebook","colaboratory","colab","colab-automation"],"description":"Keras wrapper that autosaves what ModelCheckpoint cannot."}
{"name":"deng-mit\/reactorch","full_name":"DENG-MIT\/reactorch","topics":["combustion","pytorch","chemical-kinetics","fluid-dynamics","scientific-machine-learning","kinetics"],"description":"A Differentiable Reacting Flow Simulation Package in PyTorch"}
{"name":"yoonseok312\/watch-out","full_name":"yoonseok312\/watch-out","topics":["ios","tensorflow"],"description":"Watch Out: Apple Watch App to detect dangerous sounds for people with hearing disablities."}
{"name":"knight825\/models-pytorch","full_name":"Knight825\/models-pytorch","topics":["pytorch","self-attention","senet","cbam","cbam-resnet","se-resnet","attention-mechanism","cnn-model","crossstagepartial","csp-resnet","csp-densenet","exactfusionmodel"],"description":"This is a torchvision style CNN models collection based on pytorch."}
{"name":"taufikxu\/triple-gan","full_name":"taufikxu\/Triple-GAN","topics":[],"description":"Pytorch for Triple-GAN"}
{"name":"asjidkalam\/scrawl","full_name":"Asjidkalam\/Scrawl","topics":["ocr","machine-learning","keras","deep-learning","lstm"],"description":"Reverse OCR using DeepLearning"}
{"name":"denisyarats\/pytorch_sac","full_name":"denisyarats\/pytorch_sac","topics":["reinforcement-learning","dm-control","soft-actor-critic","pytorch","deep-reinforcement-learning","actor-critic","mujoco","gym","deep-learning","sac","continuous-control","d4pg"],"description":"PyTorch implementation of Soft Actor-Critic (SAC)"}
{"name":"zeiss-microscopy\/bsconv","full_name":"zeiss-microscopy\/BSConv","topics":["cvpr2020","pytorch","depthwise-separable-convolutions","resnet","mobilenet","image-classification","deep-learning","efficient-neural-networks","zeiss","cifar10","cifar100","blueprint-separable-convolutions"],"description":"Reference implementation for Blueprint Separable Convolutions (CVPR 2020)"}
{"name":"amirassov\/kaggle-global-wheat-detection","full_name":"amirassov\/kaggle-global-wheat-detection","topics":["kaggle","deep-learning","computer-vision","object-detection","mmdetection"],"description":"9th Place Solution of Kaggle Global Wheat Detection"}
{"name":"affjljoo3581\/canrevan","full_name":"affjljoo3581\/canrevan","topics":["naver","news","news-articles","nlp","naver-news","dataset","datasets","natural-language-processing","python"],"description":"\ub300\ub7c9\uc758 \ub124\uc774\ubc84 \ub274\uc2a4 \uae30\uc0ac\ub97c \uc218\uc9d1\ud558\ub294 \ub77c\uc774\ube0c\ub7ec\ub9ac\uc785\ub2c8\ub2e4."}
{"name":"andrewzlee\/neuralblock","full_name":"andrewzlee\/NeuralBlock","topics":["video-youtube-sponsorships","neural-network","sponsorships"],"description":"Neural Network that detects in-video YouTube sponsorships."}
{"name":"patrick-kidger\/fasterneuraldiffeq","full_name":"patrick-kidger\/FasterNeuralDiffEq","topics":["deep-neural-networks","deep-learning","pytorch","dynamical-systems","differential-equations","ordinary-differential-equations","controlled-differential-equations","neural-differential-equations","numerical-methods","numerical-analysis","machine-learning"],"description":"Code for \"'Hey, that's not an ODE:' Faster ODE Adjoints via Seminorms\" (ICML 2021)"}
{"name":"soongja\/basic-image-eda","full_name":"Soongja\/basic-image-eda","topics":["eda","image-dataset","visualization","cnn","image-classification","image-segmentation","computer-vision","dataset","deep-learning"],"description":"A simple image dataset EDA tool (CLI \/ Code)"}
{"name":"sjenni\/temporal-ssl","full_name":"sjenni\/temporal-ssl","topics":["self-supervised-learning","action-recognition","tensorflow","ucf101","hmdb51","unsupervised-learning","c3d","transfer-learning"],"description":"Video Representation Learning by Recognizing Temporal Transformations. In ECCV, 2020."}
{"name":"dheeraj7596\/conwea","full_name":"dheeraj7596\/ConWea","topics":["weakly-supervised-learning","contextualized-representation","contextualized-programming","text-classification","natural-language-processing","datamining","acl2020","acl"],"description":"Code for the paper \"Contextualized Weak Supervision for Text Classification\""}
{"name":"zonasw\/dbnet","full_name":"zonasw\/DBNet","topics":[],"description":"This is a tensorflow2.x implementation of \"Real-time Scene Text Detection with Differentiable Binarization\""}
{"name":"narasimha1997\/wavenet-stt","full_name":"Narasimha1997\/wavenet-stt","topics":["cplusplus-11","pybind","python3","python","wavenet","tensorflow","tensorflow2","tensorflowlite","speech-recognition"],"description":"An end-to-end speech recognition system with Wavenet. Built using C++ and python."}
{"name":"levindabhi\/sievenet","full_name":"levindabhi\/SieveNet","topics":["pytorch","pytorch-implementation","vton","vitual-tryon","sievenet","2d-virtual-try-on","image-based-tryon"],"description":"This is the unofficial implementation of SieveNet: A Unified Framework for Robust Image-Based Virtual Try-On"}
{"name":"mlforhealth\/s2sd","full_name":"MLforHealth\/S2SD","topics":["deep-metric-learning","metric-learning","deep-learning","pytorch","cub200-2011","cars196","stanford-online-products","image-retrieval","zero-shot-learning"],"description":"(ICML 2021) Implementation for S2SD - Simultaneous Similarity-based Self-Distillation for Deep Metric Learning. Paper Link: https:\/\/arxiv.org\/abs\/2009.08348"}
{"name":"knowledgedefinednetworking\/routenet-challenge","full_name":"BNN-UPC\/GNNetworkingChallenge","topics":["gnn","networking","ml","machine-learning","graph-neural-networks","communication-networks","computer-networks"],"description":"RouteNet baseline for the Graph Neural Networking Challenge (https:\/\/bnn.upc.edu\/challenge\/)"}
{"name":"clutchsoftware\/simurg","full_name":"clutchsoftware\/Simurg","topics":["nlp","python","pyqt5","bash","acikhack2"],"description":"Simurg - Yaz\u0131m Yard\u0131mc\u0131n\u0131z. Simurg Python ve PyQt5 i\u015fbirli\u011fi ile ClutchSoftware taraf\u0131ndan in\u015fa edilmi\u015f, T\u00fcrk\u00e7e Do\u011fal Dil \u0130\u015fleme alan\u0131nda kaynak ve ara\u00e7 olu\u015fturma amac\u0131 ile tasarlanm\u0131\u015ft\u0131r."}
{"name":"francesco-p\/gpwho","full_name":"francesco-p\/gpwho","topics":["gpu-monitoring","gpu","logging","deep-learning"],"description":"gpwho? GPU usage logger, with Telegram bot integration."}
{"name":"alvinwan\/nbdt-pytorch-image-models","full_name":"alvinwan\/nbdt-pytorch-image-models","topics":["pytorch","neural-backed-decision-trees","imagenet","efficientnet"],"description":"Neural-Backed Decision Tree sample integration with pytorch-image-models"}
{"name":"keremzaman\/semantic-sh","full_name":"KeremZaman\/semantic-sh","topics":["simhash","word-vectors","fasttext","bert","locality-sensitive-hashing","transformer","text-similarity","text-clustering","text-search"],"description":"semantic-sh is a SimHash implementation to detect and group similar texts by taking power of word vectors and transformer-based language models (BERT)."}
{"name":"domyounglee\/transformer-summarization","full_name":"domyounglee\/Transformer-Summarization","topics":["summarization","tensorflow","abstractive-summarization","abstractive-text-summarization","transformer","transformer-models"],"description":"An optimized Transformer based abstractive summarization model with Tensorflow"}
{"name":"sunweikes\/da-rnn","full_name":"SunWeiKeS\/DA-RNN","topics":[],"description":"\u6839\u636eSeanny123\u590d\u73b0\u8bba\u6587A Dual-Stage Attention-Based Recurrent Neural Network for Time Series Prediction\u7684pytorch\u4ee3\u7801\u8fdb\u884c\u76f8\u5173\u4fee\u6539\uff0c\u9002\u5e94pytorch1.2\u7248\u672c"}
{"name":"nrsyed\/pytorch-yolov3","full_name":"nrsyed\/pytorch-yolov3","topics":["yolov3","object-detection","pytorch","yolo","python"],"description":"A (mostly from scratch) PyTorch implementation of YOLOv3 for real-time webcam object detection"}
{"name":"leputa\/mann-meta-learning","full_name":"Leputa\/MANN-meta-learning","topics":["tensorflow","meta-learning","few-shot-learning","neural-turing-machines","memory-augmented-neural-networks"],"description":"A tensorflow implement of Memory-Augmented Neural Network"}
{"name":"spijkervet\/simclr","full_name":"Spijkervet\/SimCLR","topics":["simclr","pytorch","contrastive-learning","unsupervised-learning","representation-learning"],"description":"PyTorch implementation of SimCLR: A Simple Framework for Contrastive Learning of Visual Representations by T. Chen et al."}
{"name":"sjmoran\/deeplpf","full_name":"sjmoran\/DeepLPF","topics":["cvpr2020","raw2rgb","deep-learning","computational-photography","computer-vision","adobe-upe","paper","rgb","cvpr"],"description":"Code for CVPR 2020 paper \"Deep Local Parametric Filters for Image Enhancement\""}
{"name":"nvlabs\/dream","full_name":"NVlabs\/DREAM","topics":["pose-estimation","camera-calibration","deep-learning","pytorch","ros"],"description":"DREAM: Deep Robot-to-Camera Extrinsics for Articulated Manipulators (ICRA 2020)"}
{"name":"lucidrains\/axial-attention","full_name":"lucidrains\/axial-attention","topics":["artificial-intelligence","deep-learning","attention-mechanism","pytorch"],"description":"Implementation of Axial attention - attending to multi-dimensional data efficiently"}
{"name":"smoke-trees\/voice-synthesis","full_name":"smoke-trees\/Voice-synthesis","topics":["voice-synthesis","voice-cloning","sv2tts","pytorch-implementation","tensorflow","keras","speech-to-text"],"description":"This repository is an implementation of Transfer Learning from Speaker Verification to Multispeaker Text-To-Speech Synthesis (SV2TTS) with a vocoder that works in real-time. SV2TTS is a three-stage deep learning framework that allows to create a numerical representation of a voice from a few seconds of audio, and to use it to condition a text-to-speech model trained to generalize to new voices."}
{"name":"think989\/real-time-stock-market-prediction-using-ensemble-dl-and-rainbow-dqn","full_name":"THINK989\/Real-Time-Stock-Market-Prediction-using-Ensemble-DL-and-Rainbow-DQN","topics":["real-time-prediction","rainbow-dqn","stock-price-forecasting","lstm","gru","ensemble","keras","trade-bot","tensorflow"],"description":null}
{"name":"dumitrescustefan\/romanian-transformers","full_name":"dumitrescustefan\/Romanian-Transformers","topics":["romanian-bert","bert","huggingface-transformers","nlp","pytorch","language-model","romanian-language"],"description":"This repo is the home of Romanian Transformers. "}
{"name":"khrylx\/dlow","full_name":"Khrylx\/DLow","topics":["eccv2020","motion-prediction","motion-forecasting","pose-prediction","pose-forecasting","generative-models","diversity","diversifying-latent-flows","vae","pytorch","deep-learning"],"description":"[ECCV 2020] Official PyTorch Implementation of \"DLow: Diversifying Latent Flows for Diverse Human Motion Prediction\". ECCV 2020."}
{"name":"mac-automl\/xnas","full_name":"MAC-AutoML\/XNAS","topics":["pytorch","automl","neural-architecture-search"],"description":"XNAS: An effective, modular, and flexible Neural Architecture Search (NAS) framework."}
{"name":"itsuki8914\/voice-morphing-relgan","full_name":"itsuki8914\/Voice-morphing-RelGAN","topics":[],"description":"A implementation voice morphing using relgan with tensorflow"}
{"name":"peteryux\/pcdarts-tf2","full_name":"peteryuX\/pcdarts-tf2","topics":["neural-architecture-search","darts","pc-darts","pcdarts","tensorflow","tf2","tensorflow2","cifar10","cifar-10","iclr2020"],"description":"PC-DARTS (PC-DARTS: Partial Channel Connections for Memory-Efficient Differentiable Architecture Search, published in ICLR 2020) implemented in Tensorflow 2.0+. This is an unofficial implementation."}
{"name":"matheushent\/covid-19-detector","full_name":"matheushent\/covid-19-detector","topics":["tensorflow","deep-learning","covid-19","grad-cam","occlusion-sensitivity","keras","python3","vgg16","vgg19","resnet-50","resnet-152","machine-learning-algorithms","transfer-learning","cuda","gpu-tensorflow","convolutional-neural-networks","efficientnet"],"description":"Repository containing scripts to train and test a neural network whose goal is to detect presence of COVID-19"}
{"name":"nju-jet\/sr_framework","full_name":"NJU-Jet\/SR_Framework","topics":["model-zoo","latticenet","imdn","srfbn","idn","carn","edsr","drrn","lapsrn","drcn","vdsr","pytorch","super-resolution"],"description":"A generic framework which implements some famouts super-resolution models"}
{"name":"cyrilzakka\/stylegan2-tpu","full_name":"cyrilzakka\/stylegan2-tpu","topics":["deep-learning","tensorflow"],"description":"StyleGAN2 but rewritten for TPUs."}
{"name":"theaiguyscode\/yolov4-deepsort","full_name":"theAIGuysCode\/yolov4-deepsort","topics":["yolov4","yolov4-deepsort","deep-sort","object-tracker","tensorflow","object-tracking","object-detection"],"description":"Object tracking implemented with YOLOv4, DeepSort, and TensorFlow."}
{"name":"theaiguyscode\/yolov3_deepsort","full_name":"theAIGuysCode\/yolov3_deepsort","topics":["yolov3","object-tracker","deep-sort","tensorflow"],"description":"Object tracking implemented with YOLOv3, Deep Sort and Tensorflow."}
{"name":"theaiguyscode\/object-detection-api","full_name":"theAIGuysCode\/Object-Detection-API","topics":["yolov3","object-detection","tensorflow","yolo","inference","deep-learning"],"description":"Yolov3 Object Detection implemented as APIs, using TensorFlow and Flask"}
{"name":"developers-cosmos\/meme-generator","full_name":"developers-cosmos\/Meme-Generator","topics":["cnn-classification","image-augmentation","chef-cookbook","flask-server","gcp","image-classification","gcp-auto-ml","balanced-data","meme-generator","artificial-intelligence","neural-networks","memegen","cnn","memes","projects","automated"],"description":"MemeGen is a web application where the user gives an image as input and our tool generates a meme at one click for the user."}
{"name":"stefanopini\/simple-higherhrnet","full_name":"stefanopini\/simple-HigherHRNet","topics":["pytorch","hrnet","higher-hrnet","human-pose-estimation","keypoint-detection","coco-dataset","mscoco-keypoint","deep-learning"],"description":"Multi-person Human Pose Estimation with HigherHRNet in Pytorch, with TensorRT support"}
{"name":"affjljoo3581\/gpt2","full_name":"affjljoo3581\/GPT2","topics":["pytorch","nlp","language-model","gpt2","natural-language-processing","natural-language-generation","transformer"],"description":"PyTorch Implementation of OpenAI GPT-2"}
{"name":"antonior92\/automatic-ecg-diagnosis","full_name":"antonior92\/automatic-ecg-diagnosis","topics":["deep-learning","convolutional-neural-networks","ecg","ecg-signal","ecg-classification","atrial-fibrillation","atrial-fibrillation-detection"],"description":"Scripts and modules for training and testing neural network for ECG automatic classification. Companion code to the paper  \"Automatic diagnosis of the 12-lead ECG using a deep neural network\". "}
{"name":"claying\/otk","full_name":"claying\/OTK","topics":[],"description":"A Pytorch implementation of the optimal transport kernel embedding"}
{"name":"cripac-dig\/grace","full_name":"CRIPAC-DIG\/GRACE","topics":["contrastive-learning","graph-representation-learning","deep-learning","machine-learning"],"description":"[GRL+ @ ICML 2020] PyTorch implementation for \"Deep Graph Contrastive Representation Learning\" (https:\/\/arxiv.org\/abs\/2006.04131v2)"}
{"name":"pkshatechnology-research\/tdmelodic","full_name":"PKSHATechnology-Research\/tdmelodic","topics":["japanese","accent","nlp","speech-synthesis"],"description":"A Japanese accent dictionary generator"}
{"name":"tsujuifu\/pytorch_sscr","full_name":"tsujuifu\/pytorch_sscr","topics":["emnlp2020","pytorch","computer-vision","image-editing"],"description":"A PyTorch implementation of SSCR"}
{"name":"hejingwenhejingwen\/csrnet","full_name":"hejingwenhejingwen\/CSRNet","topics":["photo-retouching","deep-learning","image-enhancement","image-processing","color-enhancement","csrnet"],"description":"(ECCV 2020) Conditional Sequential Modulation for Efficient Global Image Retouching"}
{"name":"quasarlight\/pytorch_face_recognition-","full_name":"QuasarLight\/Pytorch_Face_Recognition-","topics":[],"description":"Pytorch implementation of mainstream face recognition algorithms(ArcFace, CosFace)."}
{"name":"renmin1991\/dyamic_graph_representation","full_name":"RenMin1991\/Dyamic_Graph_Representation","topics":["pytorch","feature-graphs","feature-extraction","biometrics","iris-recognition","face-recognition","aaai2020"],"description":"Official Dynamic Graph Representation PyTorch implement for iris\/face recognition"}
{"name":"lukewys\/dcase_2020_t6","full_name":"lukewys\/dcase_2020_T6","topics":["audio-captioning","deep-learning"],"description":"2nd place solution for 2020 DCASE challenge task 6 audio captioning. http:\/\/dcase.community\/challenge2020\/task-automatic-audio-captioning-results#wuyusong2020_t6"}
{"name":"bm777\/object_detection","full_name":"bm777\/object_detection","topics":["object-detection","python","tensorflow","opencv","detection","absl","yolov3","transfer-learning","darknet","graph-mode"],"description":"Implementatoin of object detection using Tensorflow 2.1.0 | this can be use in a car for object detection"}
{"name":"deepraj1729\/tchatbot","full_name":"deepraj1729\/TChatBot","topics":["machine-learning","nlp","nltk","python3","tensorflow","pypi","deep-learning","artificial-intelligence","neural-networks","speech-recognition","numpy","virtual-environment","pip","conda","sklearn","git","github","framework","chatbot-framework"],"description":"A ChatBot framework to create customizable all purpose Chatbots using NLP, Tensorflow, Speech Recognition "}
{"name":"liangheming\/auto_assignv2","full_name":"liangheming\/auto_assignv2","topics":[],"description":"An unofficial pytorch implementation of <<AutoAssign: Differentiable Label Assignment for Dense Object Detection>>"}
{"name":"hccho2\/transformer_dateconversion","full_name":"hccho2\/Transformer_DateConversion","topics":[],"description":"pytorch.nn.Transformer, torchtext, Tensorflow 2, Keras"}
{"name":"dkurt\/openvino_practice","full_name":"dkurt\/openvino_practice","topics":["openvino","intel","computer-vision","practice","opencv","deep-learning"],"description":"Practice git, Travis CI and Intel OpenVINO"}
{"name":"dgriffiths3\/finding-your-center","full_name":"dgriffiths3\/finding-your-center","topics":["deep-learning","3d","point-cloud","3d-vision"],"description":"Public repository for paper \"Finding Your (3D) Center: 3D object detection using a learned loss\""}
{"name":"ekzhang\/fastseg","full_name":"ekzhang\/fastseg","topics":["computer-vision","semantic-segmentation","mobilenetv3","efficientnet","deep-learning","cityscapes","kitti-dataset","mapillary-vistas-dataset","edge-computing","pytorch","aspp","deeplabv3"],"description":"\ud83d\udcf8 PyTorch implementation of MobileNetV3 for real-time semantic segmentation, with pretrained weights & state-of-the-art performance"}
{"name":"nianticlabs\/footprints","full_name":"nianticlabs\/footprints","topics":["computer-vision","deep-learning","depth-estimation","monodepth","pytorch"],"description":"[CVPR 2020] Estimation of the visible and hidden traversable space from a single color image"}
{"name":"lee-zq\/3dunet-pytorch","full_name":"lee-zq\/3DUNet-Pytorch","topics":["pytorch","3dunet","segmentation"],"description":"3DUNet implemented with pytorch"}
{"name":"lmnt-com\/graftr","full_name":"lmnt-com\/graftr","topics":["deep-learning","machine-learning","ai","pytorch","torch","pytorch-checkpoints"],"description":"graftr: an interactive shell to view and edit PyTorch checkpoints."}
{"name":"hellonlp\/classifier_multi_label","full_name":"hellonlp\/classifier_multi_label","topics":["multi-label-classification","multi-label","tensorflow","text-classification","text-classifier","bert","albert","classifier-multi-label"],"description":"multi-label\uff0cclassifier\uff0ctext classification\uff0c\u591a\u6807\u7b7e\u6587\u672c\u5206\u7c7b\uff0c\u6587\u672c\u5206\u7c7b\uff0cBERT\uff0cALBERT\uff0cmulti-label-classification"}
{"name":"arpanmangal\/covidaid","full_name":"arpanmangal\/CovidAID","topics":["coronavirus","covid-19","chest-xray","machine-learning","deep-learning","cnn","densenet121","pytorch","chexnet"],"description":"COVID-19 Detection Using Chest X-Ray"}
{"name":"yuuho\/stylegans-pytorch","full_name":"yuuho\/stylegans-pytorch","topics":["pytorch","stylegan2","stylegan"],"description":"PyTorch StyleGAN2, StyleGAN\u306e\u518d\u73fe\u5b9f\u88c5"}
{"name":"changlee0903\/seril","full_name":"ChangLee0903\/SERIL","topics":[],"description":"Official Implementation of SERIL in Pytorch"}
{"name":"raghavian\/lotenet_pytorch","full_name":"raghavian\/loTeNet_pytorch","topics":[],"description":"Official Pytorch implementation of model in  \"Tensor Networks for Medical Image Classification\", Raghavendra Selvan & Erik Dam, MIDL 2020"}
{"name":"ahmedfgad\/kerasga","full_name":"ahmedfgad\/KerasGA","topics":["genetic-algorithm","keras-tensorflow","keras","pygad","python","python3","neural-network","convolutional-neural-networks","deep-learning","machine-learning","numpy"],"description":"Training Keras Models by the Genetic Algorithm using PyGAD"}
{"name":"pranayjoshi\/medico","full_name":"pranayjoshi\/Medico","topics":["natural-language-processing","word-embeddings","speech-recognition","speech-to-text","doc2vec","ai","medical-application","medico","medical-terms-detection","conversation","punctuations","voice","hacktoberfest"],"description":"AI-powered medical terms detection tool."}
{"name":"13952522076\/efficient_imagenet_classification","full_name":"ma-xu\/Efficient_ImageNet_Classification","topics":["pytorch","imagenet","dali","apex"],"description":"An efficient implementation for ImageNet classification"}
{"name":"shmsw25\/ambigqa","full_name":"shmsw25\/AmbigQA","topics":["question-answering","nlp","dataset"],"description":"An original implementation of EMNLP 2020, \"AmbigQA: Answering Ambiguous Open-domain Questions\""}
{"name":"klauspa\/yolov4-tensorflow","full_name":"klauspa\/Yolov4-tensorflow","topics":[],"description":"tensorflow implementation for Yolo v4"}
{"name":"yahshibu\/nested-ner-tacl2020-flair","full_name":"yahshibu\/nested-ner-tacl2020-flair","topics":["named-entity-recognition","information-extraction","natural-language-processing","nested-named-entity-recognition"],"description":"Implementation of Nested Named Entity Recognition using Flair"}
{"name":"lucidrains\/phasic-policy-gradient","full_name":"lucidrains\/phasic-policy-gradient","topics":["artificial-intelligence","reinforcement-learning","proximal-policy-optimization"],"description":"An implementation of Phasic Policy Gradient, a proposed improvement of Proximal Policy Gradients, in Pytorch"}
{"name":"giusenso\/seld-tcn","full_name":"giusenso\/seld-tcn","topics":["seldnet","seld-tcn","neural-network","tensorflow","keras","keras-tensorflow","convolutional-neural-networks","audio-processing","audio-recognition","direction-of-arrival","sound-event-detection"],"description":"SELD-TCN: Sound Event Detection & Localization via Temporal Convolutional Network | Python w\/ Tensorflow"}
{"name":"stanislasbertrand\/retinaface-tf2","full_name":"StanislasBertrand\/RetinaFace-tf2","topics":["face-detection","retinaface","tf2","tensorflow2","tensorflow","deep-learning","insightface"],"description":"RetinaFace (RetinaFace: Single-stage Dense Face Localisation in the Wild, published in 2019) reimplemented in Tensorflow 2.0, with pretrained weights available ! "}
{"name":"moving-ai\/virtual-walk","full_name":"Moving-AI\/virtual-walk","topics":["lstm-model","google-street","posenet","webcam","tensorflow","virtual-reality","google-maps"],"description":"Virtual walks in Google Street View using PoseNet and applying Deep Learning models to recognize actions."}
{"name":"google-research\/dads","full_name":"google-research\/dads","topics":["reinforcement-learning","skill-discovery","unsupervised-learning","model-based-rl","deep-learning"],"description":"Code for 'Dynamics-Aware Unsupervised Discovery of Skills' (DADS). Enables skill discovery without supervision, which can be combined with model-based control. "}
{"name":"christopher-thornton\/hmni","full_name":"Christopher-Thornton\/hmni","topics":["natural-language-processing","fuzzy-matching","nlp","machine-learning","data-science","python","artificial-intelligence","ai"],"description":"\ud83d\udcdb Fuzzy Name Matching with Machine Learning"}
{"name":"svjan5\/medtype","full_name":"svjan5\/medtype","topics":["entity-linking","bert-as-service","pytorch","biomedical","medical","state-of-the-art","deep-learning"],"description":"MedType: Improving Medical Entity Linking with Semantic Type Prediction"}
{"name":"chagmgang\/distributed_reinforcement_learning","full_name":"chagmgang\/distributed_reinforcement_learning","topics":["distributed-reinforcement-learning","tensorflow","distributed-tensorflow","reinforcement-learning","distributed-rl","impala","r2d2","apex","scalable-reinforcement-learning"],"description":"implementation of distributed reinforcement learning with distributed tensorflow"}
{"name":"daigo0927\/tf-raft","full_name":"daigo0927\/tf-raft","topics":[],"description":"RAFT (Recurrent All Pairs Field Transforms for Optical Flow) implementation via tf.keras"}
{"name":"nandan91\/ulsam","full_name":"Nandan91\/ULSAM","topics":["self-attention","computer-vision","pytorch","fine-grained-classification","mobile-networks","compact-neural-network"],"description":"ULSAM: Ultra-Lightweight Subspace Attention Module for Compact Convolutional Neural Networks"}
{"name":"mr7495\/covid-ctset","full_name":"mr7495\/COVID-CTset","topics":["covid-19","covid19","coro","dataset","covid19-data","deep-learning","ct-scan-images","ct-scan","radiology","covid-ctset","covid-dataset","covid-data","ctscan-daraset","covid19-dataset"],"description":"Large Covid-19 CT scans dataset from the paper: https:\/\/doi.org\/10.1016\/j.bspc.2021.102588"}
{"name":"hmdolatabadi\/denoising_diffusion","full_name":"hmdolatabadi\/denoising_diffusion","topics":["generative-modeling","image-generation","pytorch-lightning","denoising-diffusion"],"description":"Unofficial Implementation of \"Denoising Diffusion Probabilistic Models\" in PyTorch(Lightning)"}
{"name":"jabertuhin\/image-classification-api","full_name":"jabertuhin\/image-classification-api","topics":["fastapi","pytorch-lightning","pytorch"],"description":"Serving model through api. FastApi + PytorchLightning"}
{"name":"yaozhenfa\/ml","full_name":"OrvilleX\/MachineLearning","topics":["machine-learning","numpy","sklearn","knn","svm","spark-mllib","tensorflow","scipy"],"description":"\u673a\u5668\u5b66\u4e60\u6559\u7a0b\uff0c\u672c\u6559\u7a0b\u5305\u542b\u57fa\u4e8enumpy\u3001sklearn\u4e0etensorflow\u673a\u5668\u5b66\u4e60\uff0c\u4e5f\u4f1a\u5305\u542b\u5229\u7528spark\u3001flink\u52a0\u5feb\u6a21\u578b\u8bad\u7ec3\u7b49\u7528\u6cd5\u3002\u672c\u7740\u80fd\u591f\u8f83\u5168\u7684\u5f15\u5bfc\u8bfb\u8005\u5165\u95e8\u673a\u5668\u5b66\u4e60\u3002"}
{"name":"the-ai-summer\/gans-in-computer-vision","full_name":"The-AI-Summer\/GANs-in-Computer-Vision","topics":["gan","gans","computer-vision","deep-learning","adverserial","learning"],"description":"GANs in computer vision AI Summer article series"}
{"name":"tchaton\/lightning-hydra-seed","full_name":"tchaton\/lightning-hydra-seed","topics":[],"description":"Pytorch Lightning seed project with hydra"}
{"name":"maggie0830\/dccrn","full_name":"maggie0830\/DCCRN","topics":[],"description":"implementation of \"DCCRN-Deep Complex Convolution Recurrent Network for Phase-Aware Speech Enhancement\" by pytorch"}
{"name":"explosion\/spacy-ray","full_name":"explosion\/spacy-ray","topics":["spacy","ray","machine-learning","natural-language-processing","training","distributed-computing","parallel-training"],"description":"\u2604\ufe0f Parallel and distributed training with spaCy and Ray"}
{"name":"lexuanhieu131297\/torchbox","full_name":"eric-le-12\/torchbox","topics":["pytorch","pytorch-tutorial"],"description":"implement your ideas in an easy, customizable and fast way"}
{"name":"jeremdona\/spatiotemporal_variable_separation","full_name":"JeremDona\/spatiotemporal_variable_separation","topics":["pytorch","deep-learning","predictive-models","disentanglement"],"description":"Official implementation of the paper *PDE-Driven Spatiotemporal Disentanglement*"}
{"name":"tatp22\/linformer-pytorch","full_name":"tatp22\/linformer-pytorch","topics":["artificial-intelligence","deep-learning","attention-mechanism","pytorch","machine-learning","linformer","paper"],"description":"My take on a practical implementation of Linformer for Pytorch."}
{"name":"wutong16\/distributionbalancedloss","full_name":"wutong16\/DistributionBalancedLoss","topics":[],"description":"Pytorch implementation for \"Distribution-Balanced Loss for Multi-Label Classification in Long-Tailed Datasets\" (ECCV 2020 Spotlight)"}
{"name":"chatopera\/efaqa-corpus-zh","full_name":"chatopera\/efaqa-corpus-zh","topics":["natural-language-processing","natural-language-understanding","corpus","psychology"],"description":"\u2764\ufe0fEmotional First Aid Dataset, \u5fc3\u7406\u54a8\u8be2\u95ee\u7b54\u3001\u804a\u5929\u673a\u5668\u4eba\u8bed\u6599\u5e93"}
{"name":"alexa\/dialoglue","full_name":"alexa\/dialoglue","topics":["deep-learning","natural-language-processing","natural-language-understanding","machinelearning"],"description":"DialoGLUE: A Natural Language Understanding Benchmark for Task-Oriented Dialogue"}
{"name":"akashsengupta1997\/straps-3dhumanshapepose","full_name":"akashsengupta1997\/STRAPS-3DHumanShapePose","topics":["3d-reconstruction","human-pose-estimation","human-shape-recover","smpl","deep-learning"],"description":"Code repository for the paper: Synthetic Training for Accurate 3D Human Pose and Shape Estimation in the Wild (BMVC 2020)"}
{"name":"toon-it\/cartoonizer","full_name":"Toon-It\/Cartoonizer","topics":["hacktoberfest","tensorflow","webapp"],"description":"A web-app to white box cartoonize your images!"}
{"name":"hltchkust\/ke-dialogue","full_name":"HLTCHKUST\/ke-dialogue","topics":["dialogue","dialogue-system","pytorch","gpt","gpt-2","knowledge-graph","knowledge","mwoz","smd","kvr","opendialkg"],"description":"KE-Dialogue: Injecting knowledge graph into a fully end-to-end dialogue system."}
{"name":"ryandsilva\/nn-from-scratch","full_name":"RyanDsilva\/nn-from-scratch","topics":["neural-network","deep-learning","python","numpy","machine-learning","hacktoberfest"],"description":":star: Implementation of Neural Networks from Scratch Using Python & Numpy :star:"}
{"name":"juanfmontesinos\/torch_mir_eval","full_name":"JuanFMontesinos\/torch_mir_eval","topics":[],"description":"Backpropagable pytorch implementation of https:\/\/craffel.github.io\/mir_eval\/. "}
{"name":"timoschick\/pet","full_name":"timoschick\/pet","topics":["nlp","python","machine-learning"],"description":"This repository contains the code for \"Exploiting Cloze Questions for Few-Shot Text Classification and Natural Language Inference\""}
{"name":"clovaai\/adamp","full_name":"clovaai\/AdamP","topics":["deep-learning","optimizer","optimizer-algorithms","machine-learning","pytorch","iclr2021"],"description":"AdamP: Slowing Down the Slowdown for Momentum Optimizers on Scale-invariant Weights (ICLR 2021)"}
{"name":"menyifang\/adgan","full_name":"menyifang\/ADGAN","topics":["pose-transfer","generative-adversarial-network","gan","pytorch","virtual-try-on","image-synthesis"],"description":"The Implementation of paper \"Controllable Person Image Synthesis with Attribute-Decomposed GAN\" CVPR 2020 (Oral); Pose and Appearance Attributes Transfer;"}
{"name":"mcahny\/vps","full_name":"mcahny\/vps","topics":[],"description":"Official pytorch implementation for \"Video Panoptic Segmentation\" (CVPR 2020 Oral)"}
{"name":"alpc91\/nice-gan-pytorch","full_name":"alpc91\/NICE-GAN-pytorch","topics":["gan","pytorch","reusing-discriminators","deep-learning","image-to-image-translation","computer-vision","deep-neural-networks","generative-adversarial-network"],"description":"Official PyTorch implementation of NICE-GAN:  Reusing Discriminators for Encoding: Towards Unsupervised Image-to-Image Translation"}
{"name":"pengboxiangshang\/torchsketch","full_name":"PengBoXiangShang\/torchsketch","topics":["sketch","deep-learning","pytorch","cnn","rnn","gnn","tcn"],"description":"TPAMI 2022"}
{"name":"phoenix1327\/tea-action-recognition","full_name":"Phoenix1327\/tea-action-recognition","topics":[],"description":"The Pytorch code of the TEA module (Temporal Excitation and Aggregation for Action Recognition)"}
{"name":"lucidrains\/denoising-diffusion-pytorch","full_name":"lucidrains\/denoising-diffusion-pytorch","topics":["artificial-intelligence","deep-learning","generative-model","score-matching"],"description":"Implementation of Denoising Diffusion Probabilistic Model in Pytorch"}
{"name":"s-aiueo32\/lpips-pytorch","full_name":"S-aiueo32\/lpips-pytorch","topics":["perceptual-similarity","perceptual-metric","lpips","deep-learning","deep-neural-networks"],"description":"A simple and useful implementation of LPIPS."}
{"name":"jonathanlanemcdonald\/ml_for_sla","full_name":"JonathanLaneMcDonald\/ML_for_SLA","topics":["japanese","machine-learning","natural-language-processing","second-language-acquisition"],"description":"Training a neural network to isolate comprehensible input from unstructured text to aid vocabulary acquisition."}
{"name":"pvjosue\/lfmnet","full_name":"pvjosue\/LFMNet","topics":["neural-network","lightfield","4d","reconstruction","inverse-problems","pytorch-cnn","pytorch","deep-learning","conv4d","3d-volume"],"description":"Deep neural network to reconstruct Confocal 3D stacks from Light Field Microscopy images."}
{"name":"koukyo1994\/kaggle-birdcall-6th-place","full_name":"koukyo1994\/kaggle-birdcall-6th-place","topics":["python","pytorch","kaggle","kaggle-solution","birdsong-recognition","audio-tagging","sound-event-detection"],"description":"Training code of Cornell Birdcall Identification Challenge 6th place solution"}
{"name":"andreybicalho\/vrpdr","full_name":"andreybicalho\/vrpdr","topics":["ocr","pytorch","opencv","deep-learning","license-plate-recognition","license-plate-detection","yolo","yolov3","vehicle-registration-plate","neural-networks","convolutional-neural-networks","optical-character-recognition","character-recognition","attention-ocr"],"description":"Deep Learning Applied To Vehicle Registration Plate Detection and Recognition in PyTorch."}
{"name":"md-experiments\/picture_text","full_name":"md-experiments\/picture_text","topics":["sbert","embeddings","natural-language-processing","artificial-intelligence","transformers","sentence-transformers","clustering","visualization","interactive-visualizations","text-embeddings","text-visualization","hierarchical-clustering","tree-maps","clusters","nlp"],"description":"Interactive tree-maps with SBERT & Hierarchical Clustering (HAC)"}
{"name":"skywalker023\/pragmatic-consistency","full_name":"skywalker023\/pragmatic-consistency","topics":["emnlp","paper","dialogues","nlp","pragmatics","consistency","social-cognition","natural-language-processing"],"description":"\ud83e\udd16 Code for our EMNLP 2020 paper: \"Will I Sound Like Me? Improving Persona Consistency in Dialogues through Pragmatic Self-Consciousness\""}
{"name":"smaranjitghose\/img_ai_app_boilerplate","full_name":"smaranjitghose\/img_ai_app_boilerplate","topics":["streamlit","webapp","python","deeplearning","tensorflow","keras","convolutional-neural-networks","artificial-intelligence","heroku","slop20","slop","hacktoberfest","heroku-deployment","gcp","aws-ec2","aws","azure","digitalocean","swoc2021"],"description":"An image classification app boilerplate to serve your deep learning models asap!"}
{"name":"canokaue\/immunolynk","full_name":"canokaue\/ImmunoLynk","topics":["covid-19","immune-testing","blockchain","ipfs-blockchain","infura","python3","flask-server","http-api","trustless","healthcare-service","covid-tracking","mit-hack","ipfs-api","ipfs-gateway","private-blockchain","bigchaindb","tensorflow","keras-tensorflow","opencv","image-recognition"],"description":"[Lumiata COVID-19 Winner] COVID Immunity testing results registered to the Blockchain for healthcare safety."}
{"name":"core-ml\/coreml","full_name":"core-ml\/coreml","topics":["machine-learning","deep-learning","classification","framework","artificial-intelligence","neural-network"],"description":"Generic framework for ML projects"}
{"name":"foreverps\/content-aware-rotation","full_name":"ForeverPs\/content-aware-rotation","topics":["formula-derivation","reproduction","tensorflow","image-warping","image-rotation","content-aware-rotation"],"description":"Implementation of Kaiming He's Paper Content-Aware Rotation on ICCV 2013"}
{"name":"reafly\/acsnet","full_name":"ReaFly\/ACSNet","topics":[],"description":"MICCAI 2020 : Adaptive Context Selection for Polyp Segmentation (Pytorch implementation)."}
{"name":"princeton-nlp\/calm-textgame","full_name":"princeton-nlp\/calm-textgame","topics":["text-based-game","nlp","rl","gpt","n-gram","calm"],"description":"[EMNLP 2020] Keep CALM and Explore: Language Models for Action Generation in Text-based Games"}
{"name":"sooftware\/tacotron2","full_name":"sooftware\/tacotron2","topics":["tacotron","tacotron2","pytorch","speech-synthesis"],"description":"Pytorch implementation of \"Natural TTS Synthesis by Conditioning WaveNet on Mel Spectrogram Predictions\", ICASSP, 2018."}
{"name":"acids-ircam\/wavae","full_name":"acids-ircam\/wavae","topics":[],"description":"Realtime Variational Autoencoder built on top of libtorch and PureData"}
{"name":"sanjana7395\/grape-disease-classification","full_name":"Sanjana7395\/Grape-disease-classification","topics":["ensemble-models","majority-voting","cnn","augment-data","random-forest","svm","stacked-prediction","vgg16"],"description":"This project classifies diseases in grape plant using various Machine Learning classification algorithms."}
{"name":"jimmyyhwu\/spatial-action-maps","full_name":"jimmyyhwu\/spatial-action-maps","topics":["spatial-action-maps","robotics","pybullet","pytorch","deep-reinforcement-learning","mobile-manipulation","dqn","anki-vector"],"description":"Learning robotic mobile manipulation with deep reinforcement learning"}
{"name":"lmnt-com\/wavegrad","full_name":"lmnt-com\/wavegrad","topics":["machine-learning","neural-network","speech-synthesis","text-to-speech","wavegrad","paper","pytorch","vocoder","speech","pretrained-models","tts","deep-learning"],"description":"A fast, high-quality neural vocoder."}
{"name":"lmnt-com\/diffwave","full_name":"lmnt-com\/diffwave","topics":["machine-learning","text-to-speech","neural-network","paper","pytorch","speech-synthesis","diffwave","vocoder","speech","pretrained-models","tts","deep-learning"],"description":"DiffWave is a fast, high-quality neural vocoder and waveform synthesizer."}
{"name":"tongchangd\/bert_for_corrector","full_name":"tongchangD\/bert_for_corrector","topics":["bert","corrector","nlp"],"description":"\u57fa\u4e8ebert\u8fdb\u884c\u4e2d\u6587\u6587\u672c\u7ea0\u9519"}
{"name":"szymonmaszke\/torchlambda","full_name":"szymonmaszke\/torchlambda","topics":["pytorch","aws","aws-lambda","cpp","python","minimalistic","lightweight","cmake","docker","deep-learning","machine-learning","deployment","production","yaml","cli","aws-cli","lambda","torchscript","libtorch","performance"],"description":"Lightweight tool to deploy PyTorch models to AWS Lambda"}
{"name":"chengchunhsu\/everypixelmatters","full_name":"chengchunhsu\/EveryPixelMatters","topics":["object-detection","domain-adaptation","transfer-learning","adversarial-learning","anchor-free","fcos","computer-vision","pytorch","eccv","eccv2020","eccv-2020","unsupervised-domain-adaptation"],"description":"Implementation of ECCV 2020 paper \"Every Pixel Matters: Center-aware Feature Alignment for Domain Adaptive Object Detector\""}
{"name":"kyubyong\/name2nat","full_name":"Kyubyong\/name2nat","topics":["nlp","nationality","names"],"description":"name2nat: a Python package for nationality prediction from a name"}
{"name":"na-z\/sess","full_name":"Na-Z\/sess","topics":["pytorch","semi-supervised-learning","3d-object-detection","point-cloud"],"description":"[CVPR2020 Oral] SESS: Self-Ensembling Semi-Supervised 3D Object Detection"}
{"name":"kazuhito00\/naruto-handsigndetection","full_name":"Kazuhito00\/NARUTO-HandSignDetection","topics":["tensorflow2","object-detection","opencv","handsign","naruto","efficientdet","mobilenetv2-ssd","deep-learning","deep-neural-networks","tensorflow-lite","naruto-handsigndetection"],"description":"\u7269\u4f53\u691c\u51fa\u3092\u7528\u3044\u3066NARUTO\u306e\u5370(\u5b50\uff5e\u4ea5\u3001\u58ec\u3001\u5408\u638c)\u3092\u691c\u51fa\u3059\u308b\u30e2\u30c7\u30eb\u3068\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u3059\u3002\u3053\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u3067\u306f\u3001YOLOX\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059(This is a model and sample program that detects NARUTO's hand sign using object detection. This repository use YOLOX.)"}
{"name":"powerycy\/lic2020-","full_name":"powerycy\/Lic2020-","topics":[],"description":"lic2020\u5173\u7cfb\u62bd\u53d6\u6bd4\u8d5b\uff0c\u4f7f\u7528Pytorch\u5b9e\u73b0\u82cf\u795e\u7684\u6a21\u578b\u3002"}
{"name":"v-iashin\/bmt","full_name":"v-iashin\/BMT","topics":["pytorch","bi-modal-transformer","dense-video-captioning","audio","video","i3d","activitynet-captions","multimodal-fusion","temporal-action-proposals","bmvc","bmvc20","bmt","proposal-generator","video-features","bi-modal-encoder","transformer"],"description":"Source code for \"Bi-modal Transformer for Dense Video Captioning\" (BMVC 2020)"}
{"name":"lmbxmu\/rbnn","full_name":"lmbxmu\/RBNN","topics":["binary-network","binary-neural-networks","network-compression-acceleration","network-quantization","neurips2020","neurips-2020"],"description":"Pytorch implementation of our paper accepted by NeurIPS 2020 -- Rotated Binary Neural Network"}
{"name":"miulab\/dualug","full_name":"MiuLab\/DuaLUG","topics":["dual-learning","nlg","papers","nlp","nlu","emnlp2020","acl2019","acl2020"],"description":"The implementation of the papers on dual learning of natural language understanding and generation. (ACL2019,2020; Findings of EMNLP 2020)"}
{"name":"prajjwal1\/fluence","full_name":"prajjwal1\/fluence","topics":["transformers","pytorch","attention","nlp","deep-learning"],"description":"A deep learning library based on Pytorch focussed on low resource language research and robustness"}
{"name":"ssisyphustao\/ssd-knowledge-distillation","full_name":"SsisyphusTao\/Object-Detection-Knowledge-Distillation","topics":["pytorch","knowledge-distillation","ssd","object-detection","deep-learning","yolov5"],"description":"An Object Detection Knowledge Distillation framework powered by pytorch, now having SSD and yolov5."}
{"name":"dylanjcastillo\/twitter-sentiment-tracker","full_name":"dylanjcastillo\/twitter-sentiment-tracker","topics":["python3","dash","pytorch","nlp"],"description":"Dash app for classifying tweets in real-time"}
{"name":"ternaus\/people_segmentation","full_name":"ternaus\/people_segmentation","topics":["deep-learning","image-segmentation","semantic-segmentation","computer-vision","python","people-segmentation"],"description":"Code for the model to segment people at the image"}
{"name":"imirzadeh\/stable-continual-learning","full_name":"imirzadeh\/stable-continual-learning","topics":["continual-learning","catastrophic-forgetting","pytorch","lifelong-learning","deep-learning"],"description":"Towards increasing stability of neural networks for continual learning: https:\/\/arxiv.org\/abs\/2006.06958.pdf (NeurIPS'20)"}
{"name":"gitycc\/crnn-pytorch","full_name":"GitYCC\/crnn-pytorch","topics":["pytorch","ocr-recognition","crnn-ctc"],"description":"Convolutional Recurrent Neural Network (CRNN) for image-based sequence recognition using Pytorch"}
{"name":"cceyda\/torchserve-dashboard","full_name":"cceyda\/torchserve-dashboard","topics":["torchserve","streamlit","ml-deployment","pytorch"],"description":"Management Dashboard for Torchserve"}
{"name":"tri-ml\/dgp","full_name":"TRI-ML\/dgp","topics":["machine-learning","autonomous-driving","pytorch","data-management","deep-learning"],"description":"ML Dataset Governance Policy for Autonomous Vehicle Datasets"}
{"name":"lourencovazpato\/seeing-without-looking","full_name":"LourencoVazPato\/seeing-without-looking","topics":["deep-learning","object-detection","recurrent-neural-networks","pytorch","cvpr2020"],"description":"PyTorch implementation for Seeing without Looking: Contextual Rescoring of Object Detections for AP Maximization (CVPR 2020)"}
{"name":"dvlp-cmaterju\/rectinet","full_name":"DVLP-CMATERJU\/RectiNet","topics":["ssim","dewarping","deep-learning","artificial-intelligence","neural-networks","computer-vision","bifurcation","predictions"],"description":"A Gated and Bifurcated Stacked U-Net Module for Document Image Dewarping"}
{"name":"media-smart\/vedacls","full_name":"Media-Smart\/vedacls","topics":["classification-toolbox","pytorch"],"description":"A classification toolbox based on PyTorch"}
{"name":"rg2\/deepfluorolabeling-ipcai2020","full_name":"rg2\/DeepFluoroLabeling-IPCAI2020","topics":["landmark-detection","semantic-segmentation","registration","2d-3d-registration","x-ray-navigation","orthopaedics","pytorch","u-net","convolutional-neural-networks","fluoroscopy","x-ray"],"description":"Code and data for the \"annotation\" component of the IPCAI 2020 paper: \"Automatic Annotation of Hip Anatomy in Fluoroscopy for Robust and Efficient 2D\/3D Registration.\" https:\/\/arxiv.org\/abs\/1911.07042 or https:\/\/doi.org\/10.1007\/s11548-020-02162-7"}
{"name":"zhangqianhui\/swapping-autoencoder-tf","full_name":"zhangqianhui\/Swapping-Autoencoder-tf","topics":["generative-adversarial-network","gans","image-editing","facial-attribute-editing"],"description":"The unofficial  tensorflow implementation of Swapping Autoencoder for Deep Image Manipulation"}
{"name":"rlai-lab\/regularized-gradienttd","full_name":"rlai-lab\/Regularized-GradientTD","topics":["learning-algorithm","neural-network","reinforcement-learning","icml-2020"],"description":"Code repo for Gradient Temporal-Difference Learning with Regularized Corrections paper."}
{"name":"pragativerma18\/mlh-quizzet","full_name":"PragatiVerma18\/MLH-Quizzet","topics":["nlp","nlp-machine-learning","question-answering","machine-learning","flask-application","upload-file","jinja2","mlh-fellowship","hackathon","mlh","html-css-javascript","html","css","javascript","python","quiz","question-generation","question-generator"],"description":"This is a smart Quiz Generator that generates a dynamic quiz from any uploaded text\/PDF document using NLP. This can be used for self-analysis, question paper generation, and evaluation, thus reducing human effort."}
{"name":"idealwhite\/tdanet","full_name":"idealwhite\/tdanet","topics":["image-inpainting","image-completion","image-restoration","text-to-image-synthesis","computer-vision","pytorch"],"description":"The pytorch implementation of the paper \"text-guided neural image inpainting\" at MM'2020 (oral)"}
{"name":"zaccharieramzi\/tfkbnufft","full_name":"zaccharieramzi\/tfkbnufft","topics":["tensorflow","non-uniform-fourier","mri","nfft","nufft"],"description":"A robust, easy-to-deploy non-uniform Fast Fourier Transform in TensorFlow."}
{"name":"piesposito\/transformers-low-code-experiments","full_name":"piEsposito\/transformers-low-code-experiments","topics":["nlp","pytorch","transformer","machine-learning","deep-learning"],"description":"Low-code pre-built pipelines for experiments with huggingface\/transformers for Data Scientists in a rush."}
{"name":"zzy99\/epidemic-sentence-pair","full_name":"zzy99\/epidemic-sentence-pair","topics":["nlp"],"description":"\u5929\u6c60 \u75ab\u60c5\u76f8\u4f3c\u53e5\u5bf9\u5224\u5b9a\u5927\u8d5b \u7ebf\u4e0a\u7b2c\u4e00\u540d\u65b9\u6848"}
{"name":"stevewongv\/instanceshadowdetection","full_name":"stevewongv\/InstanceShadowDetection","topics":["cvpr2020","computer-vision","deep-learning","shadow-detection","detectron2","instance-shadow-detection","instance-detection"],"description":"Instance Shadow Detection (CVPR 2020)"}
{"name":"miemie2013\/pytorch-diou-yolov3","full_name":"miemie2013\/Pytorch-DIOU-YOLOv3","topics":[],"description":"Pytorch\u590d\u73b0YOLOv3\uff0c\u4f7f\u7528\u6700\u65b0\u7684DIOU loss\u8bad\u7ec3"}
{"name":"emla2805\/vision-transformer","full_name":"emla2805\/vision-transformer","topics":["vision-transformer","transformer","computer-vision","tensorflow"],"description":"Tensorflow implementation of the Vision Transformer (An Image is Worth 16x16 Words: Transformers for Image Recognition at Scale)"}
{"name":"rusty1s\/himp-gnn","full_name":"rusty1s\/himp-gnn","topics":["pytorch","geometric-deep-learning","graph-neural-networks","molecular-graph","junction-tree","graph-pooling"],"description":"Hierarchical Inter-Message Passing for Learning on Molecular Graphs"}
{"name":"jerryji1993\/dnabert","full_name":"jerryji1993\/DNABERT","topics":["kmer","dnabert-model","kmer-format","gpu","sequence","genome","machine-learning","deep-learning","natural-language-processing","nlp"],"description":"DNABERT: pre-trained Bidirectional Encoder Representations from Transformers model for DNA-language in genome"}
{"name":"denguir\/student-teacher-anomaly-detection","full_name":"denguir\/student-teacher-anomaly-detection","topics":["artificial-intelligence","deep-learning","neural-network","unsupervised-learning","computer-vision"],"description":"Student\u2013Teacher Anomaly Detection with Discriminative Latent Embeddings"}
{"name":"tharindudr\/transquest","full_name":"TharinduDR\/TransQuest","topics":["deep-learning","transformers","quality-estimation"],"description":"Transformer based translation quality estimation"}
{"name":"mohsenfayyaz89\/sct","full_name":"MohsenFayyaz89\/SCT","topics":["cvpr2020","cvpr","computer-vision","deep-learning"],"description":"SCT: Set Constrained Temporal Transformer for Set Supervised Action Segmentation (CVPR2020) https:\/\/arxiv.org\/abs\/2003.14266"}
{"name":"samuelbroscheit\/entity_knowledge_in_bert","full_name":"samuelbroscheit\/entity_knowledge_in_bert","topics":["nlp","entity-linking","machine-learning"],"description":"This repository contains the code for the CONLL 2019 paper \"Investigating Entity Knowledge in BERT with Simple Neural End-To-End Entity Linking\". The code is provided as a documentation for the paper and also for follow-up research."}
{"name":"sina-baharlou\/depth-vrd","full_name":"Sina-Baharlou\/Depth-VRD","topics":["visual-relationship-detection","scene-graph-generation","depth-maps","visual-genome","vg-depth","pytorch","faster-rcnn","computer-vision","icpr-2020","icpr2020","scene-graphs","scene-graph","deep-learning","predicate-classification","scene-graph-classification"],"description":"Improving Visual Relation Detection using Depth Maps (ICPR 2020)"}
{"name":"adrijano\/virtual-assistant-alpha","full_name":"adrijano\/virtual-assistant-Alpha","topics":["virtual-assistant","virtual-assistant-ai","virtual","assistant","python","pythongui","pysimplegui","python3","py","python-3gui","pysimpleguiweb","alpha","paypal","bitcoin","paypal-account","donations","forthebadge","cnn","capture","credit-card"],"description":"Virtual assistant Alpha"}
{"name":"realrate\/causing","full_name":"realrate\/Causing","topics":["causality-analysis","mediation-analysis","effects-modeling","causal-networks","latent-variables","dag","graph-theory","do-calculus","structural-equation-modeling","structural-analysis","simultaneous-equation","neural-networks","derivatives","automatic-differentiation","python","pytorch","graphs","gnn"],"description":"Causing: CAUsal INterpretation using Graphs"}
{"name":"vloison\/handwritten_text_recognition","full_name":"vloison\/Handwritten_Text_Recognition","topics":["crnn","htr","iam-dataset","ctcloss","handwritten-text-recognition","data-augmentation","pytorch","deep-learning","computer-vision"],"description":null}
{"name":"chenwwweixiang\/diagnosis_covid19","full_name":"ChenWWWeixiang\/diagnosis_covid19","topics":["covid-19","pneumonia-detection","opencoviddetector","pytorch"],"description":"OpenCovidDetector is an opensource COVID-19 diagnosis system implementing on pytorch, which is also as presented in our paper: Development and evaluation of an artificial intelligence system for COVID-19 diagnosis. Nat Commun 11, 5088 (2020).(https:\/\/doi.org\/10.1038\/s41467-020-18685-1)"}
{"name":"idealwei\/asanet","full_name":"idealwei\/ASANet","topics":["domain-adaptation","semantic-segmentation","pixel-affinity","cityscapes","gta5","synthia","pytorch","scene-parsing"],"description":"The code and trained models of:  Affinity Space Adaptation for Semantic Segmentation Across Domains."}
{"name":"mindslab-ai\/cotatron","full_name":"mindslab-ai\/cotatron","topics":["voice-conversion","pytorch","speech-synthesis"],"description":"Official code for Cotatron @ INTERSPEECH 2020"}
{"name":"wangle1218\/deep_text_matching","full_name":"wangle1218\/deep_text_matching","topics":[],"description":"implementation several deep text match (text similarly) models for keras . cdssm, arc-ii,match_pyramid, mvlstm ,esim, drcn ,bimpm, bert, albert, raberta"}
{"name":"bigpon\/vcc20_baseline_cyclevae","full_name":"bigpon\/vcc20_baseline_cyclevae","topics":["voice-conversion","vcc2020","baseline","pytorch","cyclevae-vc","parallel-wavenet-vocoder"],"description":"Voice Conversion Challenge 2020 CycleVAE baseline system "}
{"name":"sxhxliang\/detectron2_backbone","full_name":"sxhxliang\/detectron2_backbone","topics":["detectron2","backbone","resnet18","efficientnet","hrnet","pytorch"],"description":"detectron2 backbone: resnet18, efficientnet, hrnet, mobilenet v2, resnest, bifpn"}
{"name":"jasonfenggit\/rnn-language-classifier","full_name":"JasonFengGit\/RNN-Language-Classifier","topics":["artificial-intelligence","rnn","recurrent-neural-network","language-classification","numpy","word-classifier"],"description":"A Language Classifier powered by Recurrent Neural Network implemented in Python without AI libraries. AI from scratch."}
{"name":"thudm\/grand","full_name":"THUDM\/GRAND","topics":["graphs","gnn","semi-supervised-learning","neurips-2020","data-augmentation","graph-neural-networks"],"description":"Source code and dataset of the NeurIPS 2020 paper \"Graph Random Neural Network for Semi-Supervised Learning on Graphs\""}
{"name":"lucidrains\/mixture-of-experts","full_name":"lucidrains\/mixture-of-experts","topics":["artificial-intelligence","deep-learning","transformer","mixture-of-experts"],"description":"A Pytorch implementation of Sparsely-Gated Mixture of Experts, for massively increasing the parameter count of language models"}
{"name":"thammegowda\/mtdata","full_name":"thammegowda\/mtdata","topics":["machine-translation","natural-language-processing","natural-language-generation","parallel-data","multilingual","dataset"],"description":"A tool that locates, downloads, and extracts machine translation corpora"}
{"name":"agwave\/pdf-resume-information-extraction","full_name":"Agwave\/PDF-Resume-Information-Extraction","topics":["bilstm-crf","pytorch","resume","ner"],"description":"\u5929\u6c60\u6bd4\u8d5b\u4f5c\u54c1\u6574\u7406\u3002\u5b9e\u73b0\u4ecepdf\u4e2d\u63d0\u53d6\u51fa\u59d3\u540d\u3001\u51fa\u751f\u5e74\u6708\u3001\u6027\u522b\u3001\u7535\u8bdd\u3001\u6700\u9ad8\u5b66\u5386\u3001\u7c4d\u8d2f\u3001\u843d\u6237\u5e02\u53bf\u3001\u653f\u6cbb\u9762\u8c8c\u3001\u6bd5\u4e1a\u9662\u6821\u3001\u5de5\u4f5c\u5355\u4f4d\u3001\u5de5\u4f5c\u5185\u5bb9\u3001\u804c\u52a1\u3001\u9879\u76ee\u540d\u79f0\u3001\u9879\u76ee\u8d23\u4efb\u3001\u5b66\u4f4d\u3001\u6bd5\u4e1a\u65f6\u95f4\u3001\u5de5\u4f5c\u65f6\u95f4\u3001\u9879\u76ee\u65f6\u95f4\u517118\u4e2a\u5b57\u6bb5\u3002"}
{"name":"evergrow\/gdn_inpainting","full_name":"Evergrow\/GDN_Inpainting","topics":["image-inpainting","deep-learning","artifacts-detection","image-synthesis"],"description":"Pixel-wise Dense Detector for Image Inpainting (PG 2020)"}
{"name":"separius\/simclrv2-pytorch","full_name":"Separius\/SimCLRv2-Pytorch","topics":["simclr","contrastive","pretrained","selfsupervised","resnet","pytorch"],"description":"Pretrained SimCLRv2 models in Pytorch"}
{"name":"lucaslie\/provable_pruning","full_name":"lucaslie\/torchprune","topics":["neural-networks","filter-pruning","weight-pruning","coresets","deep-learning","generalization-ability","pytorch","machine-learning","tensor-decomposition","sparsification","sparsity","compression","neural-architecture-search","tinyml","pruning","pruning-algorithms"],"description":"A research library for pytorch-based neural network pruning, compression, and more."}
{"name":"yule-buaa\/dstgcn","full_name":"yule-BUAA\/DSTGCN","topics":["deep-learning","spatial-temporal-data","graph-convolutional-networks","traffic-accident-prediction"],"description":"codes of Deep Spatio-Temporal Graph Convolutional Network for Traffic Accident Prediction"}
{"name":"basiralab\/multigraphgan","full_name":"basiralab\/MultiGraphGAN","topics":["brain-graphs","graph-generation","source-graph","target-graph","gan","generative-adversarial-network","geometric-deep-learning","brain-connectivity","morphological-brain-networks","multimodal-deep-learning","predictive-learning","predictive-intelligence","multi-view-learning"],"description":"MultiGraphGAN for predicting multiple target graphs from a source graph using geometric deep learning."}
{"name":"australia\/aboriginal-flag-cv-model","full_name":"australia\/aboriginal-flag-cv-model","topics":["aboriginal-flags","detecto","pytorch","machine-learning"],"description":"A tutorial and trained model that can identify Aboriginal flags in images using PyTorch and Detecto"}
{"name":"jac99\/footandball","full_name":"jac99\/FootAndBall","topics":["player-detector","ball-detector","deep-learning","soccer","football"],"description":"FootAndBall: Integrated player and ball detector"}
{"name":"alibaba-miil\/tresnet","full_name":"Alibaba-MIIL\/TResNet","topics":["tresnet","multi-label-classification","accuracy","architecture","imagenet"],"description":"Official Pytorch Implementation of \"TResNet: High-Performance GPU-Dedicated Architecture\" (WACV 2021)"}
{"name":"siriusdemon\/build-your-own-face-model","full_name":"siriusdemon\/Build-Your-Own-Face-Model","topics":["arcface","face-model","pytorch","tutorial","centerface"],"description":"Build your own ArcFace, CenterFace\/Centernet"}
{"name":"makgyver\/rectorch","full_name":"makgyver\/rectorch","topics":["recommender-system","collaborative-filtering","autoencoder","variational-autoencoder","generative-adversarial-network","pypi","pytorch","matrix-factorization","top-n-recommendations"],"description":"rectorch is a pytorch-based framework for state-of-the-art top-N recommendation"}
{"name":"dlr-rm\/singleviewreconstruction","full_name":"DLR-RM\/SingleViewReconstruction","topics":["deep-learning","paper","reconstruction","eccv2020","open-source","singleview","computer-vision"],"description":"Official Code: 3D Scene Reconstruction from a Single Viewport"}
{"name":"boschresearch\/unetgan","full_name":"boschresearch\/unetgan","topics":["gan","image-generation","cvpr2020","computer-vision","machine-learning","ffhq","unet-gan","biggan","bcai","u-net","generative-adversarial-network"],"description":"Official Implementation of the paper \"A U-Net Based Discriminator for Generative Adversarial Networks\" (CVPR 2020)"}
{"name":"thanhhau097\/ml_project_template","full_name":"thanhhau097\/ml_project_template","topics":["machine-learning","deep-learning","template","project","ml-project","ml-boilerplate","machine-learning-engineer"],"description":"Machine Learning Project Template - Ready to production"}
{"name":"rubenwiersma\/hsn","full_name":"rubenwiersma\/hsn","topics":["geometric-deep-learning","pytorch-geometric","3d","convolutional-neural-networks","pytorch","siggraph"],"description":"Code for SIGGRAPH paper CNNs on Surfaces using Rotation-Equivariant Features"}
{"name":"lingkai-kong\/sde-net","full_name":"Lingkai-Kong\/SDE-Net","topics":["deep-learning","uncertainty-quantification","robustness","open-world-classification"],"description":"Code for paper: SDE-Net: Equipping Deep Neural network with Uncertainty Estimates"}
{"name":"liyingwei\/shapetexturedebiasedtraining","full_name":"LiYingwei\/ShapeTextureDebiasedTraining","topics":["imagenet","texture","shape","pytorch","paper"],"description":"Code and models for the paper Shape-Texture Debiased Neural Network Training (ICLR 2021)"}
{"name":"mims-harvard\/g-meta","full_name":"mims-harvard\/G-Meta","topics":["massive-interactomics","graph-neural-networks","meta-learning","deep-learning","few-shot-learning","transfer-learning","machine-learning"],"description":"Graph meta learning via local subgraphs (NeurIPS 2020)"}
{"name":"saimj7\/people-counting-in-real-time","full_name":"saimj7\/People-Counting-in-Real-Time","topics":["deep-learning","centroid-tracking","people-counter","ip-camera","threading","opencv","covid-19","ssd"],"description":"People Counting in Real-Time with an IP camera."}
{"name":"csdongxian\/awp","full_name":"csdongxian\/AWP","topics":["neurips-2020","adversarial-attacks","pytorch","adversarial-training"],"description":"Codes for NeurIPS 2020 paper \"Adversarial Weight Perturbation Helps Robust Generalization\""}
{"name":"openmined\/threepio","full_name":"OpenMined\/Threepio","topics":["pytorch","tensorflow","tensorflowjs","hacktoberfest"],"description":"A multi-language library for translating commands between PyTorch, TensorFlow, and TensorFlow.js"}
{"name":"erfanmhi\/deep-reinforcement-learning-cs285-pytorch","full_name":"erfanMhi\/Deep-Reinforcement-Learning-CS285-Pytorch","topics":["pytorch","reinforcement-learning","deep-learning","berkeley","python","deep-reinforcement-learning","neural-networks","openai-gym","mujoco","deep-q-learning","policy-gradient","actor-critic-algorithm","model-based-rl","model-free-rl"],"description":"Solutions of assignments of Deep Reinforcement Learning course presented by the University of California, Berkeley (CS285) in Pytorch framework"}
{"name":"zjysteven\/dverge","full_name":"zjysteven\/DVERGE","topics":["pytorch","ensembles","diversifying-vulnerabilities","adversarial-robustness","adversarial-attack-and-defense"],"description":"Pytorch implementation of our NeurIPS'20 *Oral* paper \"DVERGE: Diversifying Vulnerabilities for Enhanced Robust Generation of Ensembles\"."}
{"name":"voidful\/nlprep","full_name":"voidful\/NLPrep","topics":["nlp","dataset","prepare","pytorch","tfkit"],"description":"\ud83c\udf73 NLPrep - dataset tool for many natural language processing task"}
{"name":"wangzhenqing-rs\/unet_rsimage_multi-band_multi-class","full_name":"WangZhenqing-RS\/Unet_RSimage_Multi-band_Multi-class","topics":[],"description":"keras\u9065\u611f\u56fe\u50cfUnet\u8bed\u4e49\u5206\u5272(\u652f\u6301\u591a\u6ce2\u6bb5&\u591a\u7c7b)"}
{"name":"lucidrains\/vector-quantize-pytorch","full_name":"lucidrains\/vector-quantize-pytorch","topics":["artificial-intelligence","deep-learning","pytorch","vector-quantization"],"description":"Vector Quantization, in Pytorch"}
{"name":"jinheonbaek\/gen","full_name":"JinheonBaek\/GEN","topics":["meta-learning","graph-neural-network","few-shot-learning","link-prediction","graph-link-prediction","graph-neural-networks","knowledge-graph","deep-learning"],"description":"Official Code Repository for the paper \"Learning to Extrapolate Knowledge: Transductive Few-shot Out-of-Graph Link Prediction\" (NeurIPS 2020)"}
{"name":"d-cota\/covid-monitor","full_name":"d-cota\/covid-monitor","topics":["machine-learning","computer-vision","covid-19","covid","cctv","deep-learning","social-distancing","mask-detection","counting-people"],"description":"This repo contains the code for the thesis \"Monitoring COVID-19 prevention measures using Deep Learning\""}
{"name":"ikergarcia1996\/self-driving-car-in-video-games","full_name":"ikergarcia1996\/Self-Driving-Car-in-Video-Games","topics":["python","pytorch","self-driving-car","videogame","videogame-bot","neural-network","deep-learning","supervised-learning","machine-learning","autonomous-driving","deep-neural-network","video-games","pretrained-models"],"description":"A deep neural network that learns to drive in video games"}
{"name":"lucidrains\/slot-attention","full_name":"lucidrains\/slot-attention","topics":["artificial-intelligence","deep-learning","attention-mechanism","clustering"],"description":"Implementation of Slot Attention from GoogleAI"}
{"name":"vita-group\/agd","full_name":"VITA-Group\/AGD","topics":["pytorch","compression","neural-architecture-search","generative-adversarial-network"],"description":"[ICML2020] \"AutoGAN-Distiller: Searching to Compress Generative Adversarial Networks\" by Yonggan Fu, Wuyang Chen, Haotao Wang, Haoran Li, Yingyan Lin, Zhangyang Wang"}
{"name":"ink-usc\/commongen","full_name":"INK-USC\/CommonGen","topics":["natural-language-processing","commonsense-reasoning","nlg-dataset","natural-language-generation","language-generation-dataset","machine-reasoning","deep-learning","text-generation","nlp-datasets"],"description":"A Constrained Text Generation Challenge Towards Generative Commonsense Reasoning"}
{"name":"daquincy\/deepmusicvstyle","full_name":"daQuincy\/DeepMusicvStyle","topics":["variational-autoencoder","deep-learning","music-composition","vae","music-generation"],"description":"Code repo for ICME 2020 paper \"Style-Conditioned Music Generation\". VAE model that allows style-conditioned music generation."}
{"name":"zlinao\/mintl","full_name":"zlinao\/MinTL","topics":["task-oriented-dialogue","transfer-learning","language-model","transformer"],"description":"MinTL: Minimalist Transfer Learning for Task-Oriented Dialogue Systems"}
{"name":"fushengwuyu\/chinese_spelling_correction","full_name":"fushengwuyu\/chinese_spelling_correction","topics":[],"description":"\u4e2d\u6587\u6587\u672c\u7ea0\u9519\u6a21\u578b\uff0ckeras\u5b9e\u73b0"}
{"name":"guyulongcs\/awesome-deep-learning-papers-for-search-recommendation-advertising","full_name":"guyulongcs\/Awesome-Deep-Learning-Papers-for-Search-Recommendation-Advertising","topics":["deep-learning","recommender-system","search","advertising","ctr","cvr","reinforcement-learning","search-engine"],"description":"Awesome Deep Learning papers for industrial Search, Recommendation and Advertising. They focus on Embedding, Matching, Ranking (CTR and CVR prediction), Post Ranking, Multi-task Learning, Graph Neural Networks, Transfer Learning, Reinforcement Learning, Self-supervised Learning and so on."}
{"name":"baiksung\/l2f","full_name":"baiksung\/L2F","topics":["meta-learning","pytorch","maml","deep-learning","machine-learning","few-shot-learning","reinforcement-learning","cvpr2020","computer-vision"],"description":"Source code for CVPR 2020 paper \"Learning to Forget for Meta-Learning\" "}
{"name":"hanson0910\/retinatrack","full_name":"Hanson0910\/RetinaTrack","topics":[],"description":"The pytorch implement of the retina track original paper link: https:\/\/arxiv.org\/abs\/2003.13870"}
{"name":"ranahanocka\/point2mesh","full_name":"ranahanocka\/point2mesh","topics":["3d-graphics","deep-learning","mesh-processing","pointcloud","pytorch","reconstruction"],"description":"Reconstruct Watertight Meshes from Point Clouds [SIGGRAPH 2020]"}
{"name":"danijar\/dreamer","full_name":"danijar\/dreamer","topics":["reinforcement-learning","artificial-intelligence","deep-learning","robotics","world-models"],"description":"Dream to Control: Learning Behaviors by Latent Imagination"}
{"name":"eladrich\/pix2vertex.pytorch","full_name":"eladrich\/pix2vertex.pytorch","topics":["pytorch","iccv","reconstruction","deep-learning"],"description":"An official pyTorch port of the pix2vertex paper from ICCV2017"}
{"name":"theaiguyscode\/yolov4-custom-functions","full_name":"theAIGuysCode\/yolov4-custom-functions","topics":["yolov4","yolov3","object-detection","tensorflow","tflite","custom-yolov4","yolov4-tiny","tf2","tensorrt"],"description":"A Wide Range of Custom Functions for YOLOv4, YOLOv4-tiny, YOLOv3, and YOLOv3-tiny Implemented in TensorFlow, TFLite, and TensorRT."}
{"name":"lucidrains\/conformer","full_name":"lucidrains\/conformer","topics":["artificial-intelligence","deep-learning","transformer"],"description":"Implementation of the convolutional module from the Conformer paper, for use in Transformers"}
{"name":"ibaigorordo\/pykinectazure","full_name":"ibaiGorordo\/pyKinectAzure","topics":["opencv-python","opencv","depth-camera","body-tracking","deep-learning","k4a","k4abt","kinect","python3","python","kinect-azure","azure-kinect-sdk","azure-kinect","azure-kinect-dk"],"description":"Python library to run Kinect Azure DK SDK functions"}
{"name":"heylynne\/focalloss_for_multiclass","full_name":"HeyLynne\/FocalLoss_for_multiclass","topics":["classification","pytorch"],"description":"Focal loss for multiple class classification"}
{"name":"novoic\/blabla","full_name":"novoic\/blabla","topics":["alzheimers-disease","aphasia","blabla","computational-linguistics","healthcare","machine-learning","ml","natural-language-processing","nlp","novoic","speech-processing","speech-and-language-processing","feature-extraction","text-processing","stanza","corenlp"],"description":"Novoic's linguistic feature extraction library"}
{"name":"arogozhnikov\/readable_capsnet","full_name":"arogozhnikov\/readable_capsnet","topics":[],"description":"Blazingly fast capsule networks in 75 lines of pytorch+einops"}
{"name":"xavierfav\/coala","full_name":"xavierfav\/coala","topics":["deep-learning","contrastive-loss","audio-representation","autoencoders"],"description":"COALA: Co-Aligned Autoencoders for Learning Semantically Enriched Audio Representations"}
{"name":"wangcongcong123\/auto_coding","full_name":"wangcongcong123\/auto_coding","topics":["auto-code-generator","generative-model","gpt-2","natural-language-processing","python-programming"],"description":"A basic and simple tool for code auto completion"}
{"name":"karthikeyu\/indian-sign-language-recognition","full_name":"Karthikeyu\/Indian-sign-language-recognition","topics":["indian-sign-language","python","bag-of-visual-words","deep-learning","computer-vision","image-processing","gesture-detection"],"description":"This repository contains python implementation for recognizing Indian sign language (ISL) gestures for deaf and dumb people."}
{"name":"letsupgrade\/chit-chat","full_name":"LetsUpgrade\/CHIT-CHAT","topics":["rasa","artificial-intelligence","machine-learning","chatbot-application","serve-humans-queries","chatbot","python","rasax","tensorflow","chit-chat","conversations"],"description":"A Covid-19 Chatbot that aims to serve humans queries and give a feasible answer to their queries."}
{"name":"owlting\/ai_basketball_games_video_editor","full_name":"OwlTing\/AI_basketball_games_video_editor","topics":["basketball","machine-learning","ai","computer-vision","artificial-intelligence","deep-learning","yolov4","pytorch","pytorch-yolov4","tensorrt","objection-detection"],"description":"AI Basketball Games Video Editor is a program to get basketball highlight video by PyTorch YOLOv4 object detection"}
{"name":"declare-lab\/mime","full_name":"declare-lab\/MIME","topics":["dialogue-systems","conversational-bots","natural-language-processing","transformer-encoder","empathetic-dialogues","empathetic-responses"],"description":"This repository contains PyTorch implementations of the models from the paper An Empirical Study MIME: MIMicking Emotions for Empathetic Response Generation."}
{"name":"mishalaskin\/curl","full_name":"MishaLaskin\/curl","topics":["deep-learning","contrastive-loss","contrastive-learning","contrastive-predictive-coding","deep-reinforcement-learning","deep-rl","reinforcement-learning","reinforcement-learning-algorithms","curl","sac","gpu","off-policy","model-free-rl","deep-neural-networks","deeplearning","deep-q-network","deep-q-learning","deep-learning-algorithms","deeplearning-ai","reinforcement-agents"],"description":"CURL: Contrastive Unsupervised Representation Learning for Sample-Efficient Reinforcement Learning"}
{"name":"wtjiang98\/psgan","full_name":"wtjiang98\/PSGAN","topics":["psgan","pytorch","makeup-transfer","makeup","generative-adversarial-network","gan"],"description":"PyTorch code for \"PSGAN: Pose and Expression Robust Spatial-Aware GAN for Customizable Makeup Transfer\" (CVPR 2020 Oral)"}
{"name":"utsaslab\/monet","full_name":"utsaslab\/MONeT","topics":["machine-learning","dnn","ml-training","memory-consumption","deep-neural-networks","dnn-training","pytorch"],"description":"MONeT framework for reducing memory consumption of DNN training"}
{"name":"kaleidophon\/token2index","full_name":"Kaleidophon\/token2index","topics":["indexing","token","nlp","pytorch","tensorflow","numpy","w2i","t2i","stoi","itos","i2t","i2w","deeplearning","seq2seq","deep-learning","python","transformers","rnn","rnns","transformer"],"description":"A lightweight but powerful library to build token indices for NLP tasks, compatible with major Deep Learning frameworks like PyTorch and Tensorflow."}
{"name":"abrazinskas\/copycat-abstractive-opinion-summarizer","full_name":"abrazinskas\/Copycat-abstractive-opinion-summarizer","topics":["summarization","machine-learning","natural-language-processing","natural-language-generation","deep-learning","algorithms","data-science","abstractive-text-summarization","abstractive-summarization","reviews","amazon","yelp","opinion-summarization","vae"],"description":"ACL 2020 Unsupervised Opinion Summarization as Copycat-Review Generation"}
{"name":"kracekumar\/facetouch","full_name":"kracekumar\/facetouch","topics":["python3","pytorch","yolov3","covid-19","facetouch"],"description":"Neural Network to predict face touch on live feed and warn you, \"don't touch the face\". "}
{"name":"evanbernard\/minineuralnets","full_name":"evanbernard\/MiniNeuralNets","topics":["neural-network","backpropagation","genetic-algorithm","perceptrons","weight-adjustment","training-algorithms"],"description":"A framework for mini neural networks (perceptrons), written from scratch in python. The goal of the project is to demystify the workings of a neural network and various training algorithms by providing code written from scratch for the simplest neural network one could have."}
{"name":"bm-k\/styling-chatbot-with-transformer","full_name":"BM-K\/Styling-Chatbot-with-Transformer","topics":["natural-language-processing"],"description":"Language Style\uacfc \uac10\uc815\uc5d0 \ub530\ub978 \ucc57\ubd07 \ub2f5\ubcc0 \ubcc0\ud654 \ubaa8\ub378"}
{"name":"m3dv\/alignshift","full_name":"M3DV\/AlignShift","topics":["deeplesion","miccai","deep-learning","3d-anisotropic-volumes","imaging-thickness"],"description":"[MICCAI'21] A3D + [MICCAI'20] AlignShift: A Codebase for Universal Lesion Detection (DeepLesion)"}
{"name":"cloud-cv\/vilbert-multi-task","full_name":"Cloud-CV\/vilbert-multi-task","topics":["machine-learning","deep-learning","cnn","visual-question-answering","python3","javascript","redis","rabbitmq","postgresql","channels","web-sockets"],"description":":eyes: :speaking_head: :memo:12-in-1: Multi-Task Vision and Language Representation Learning Web Demo"}
{"name":"stanfordmlgroup\/chexbert","full_name":"stanfordmlgroup\/CheXbert","topics":["deep-learning","medical-imaging","bert","natural-language-processing","radiology"],"description":"Combining Automatic Labelers and Expert Annotations for Accurate Radiology Report Labeling Using BERT"}
{"name":"arangesh\/gpcyclegan","full_name":"arangesh\/GPCycleGAN","topics":["gaze-estimation","generative-adversarial-network","driver-behavior","conditional-gans"],"description":"Datasets, code and models from our driver gaze estimation works over the last few years."}
{"name":"aiwizo\/template-nvae","full_name":"nextml-code\/template-nvae","topics":["nvae","pytorch","generative-model"],"description":"Simple NVAE implementation intended for effective reuse and learning purposes"}
{"name":"jakartaresearch\/maleo","full_name":"jakartaresearch\/maleo","topics":["machine-learning","nlp-library","nlp","indonesian-language"],"description":"Wrapper library for text cleansing, preprocessing in NLP"}
{"name":"explosion\/spacy-streamlit","full_name":"explosion\/spacy-streamlit","topics":["spacy","nlp","natural-language-processing","visualizers","dependency-parsing","part-of-speech-tagging","named-entity-recognition","ner","streamlit","visualizer","text-classification","word-vectors","tokenization","machine-learning"],"description":"\ud83d\udc51 spaCy building blocks and visualizers for Streamlit apps"}
{"name":"yatingmusic\/remi","full_name":"YatingMusic\/remi","topics":["music-generation","transformer","tensorflow"],"description":"\"Pop Music Transformer: Beat-based Modeling and Generation of Expressive Pop Piano Compositions\", ACM Multimedia 2020"}
{"name":"hellloxiaotian\/cfsrcnn","full_name":"hellloxiaotian\/CFSRCNN","topics":["super-resolution","deep-learning","low-level-vision","cnn","deep-neural-networks","deep-networks","pytorch","cnn-pytorch","image-processing","pytorch-cnn","python2","python27","cascaded-refinement-networks","low-resolution","high-resolution"],"description":"Coarse-to-Fine CNN for Image Super-Resolution (IEEE Transactions on Multimedia,2021)"}
{"name":"whj363636\/adversarial-attack-on-person-reid-with-deep-mis-ranking","full_name":"whj363636\/Adversarial-attack-on-Person-ReID-With-Deep-Mis-Ranking","topics":[],"description":"This is a pytorch implementation of the CVPR2020 paper: Transferable, Controllable, and Inconspicuous Adversarial Attacks on Person Re-identification With Deep Mis-Ranking"}
{"name":"lilanxiao\/rotated_iou","full_name":"lilanxiao\/Rotated_IoU","topics":["pytorch","rotated-boxes-iou","object-detection","iou-loss","differentiable-iou"],"description":"Differentiable IoU of rotated bounding boxes using Pytorch"}
{"name":"thstkdgus35\/bicubic_pytorch","full_name":"sanghyun-son\/bicubic_pytorch","topics":["pytorch","imageprocessing","superresolution"],"description":"A PyTorch implementation of widely-used bicubic interpolation, which is fully compatible with MATLAB."}
{"name":"chandlerbang\/selftask-gnn","full_name":"ChandlerBang\/SelfTask-GNN","topics":["graph-neural-networks","self-supervised-learning","machine-learning","deep-learning","graph-mining"],"description":"Implementation of  paper \"Self-supervised Learning on Graphs:Deep Insights and New Directions\""}
{"name":"shahules786\/twitter-sentiment","full_name":"shahules786\/Twitter-Sentiment","topics":["sentiment-analyzer","twitter-domain","natural-language-processing","pytorch","embedding-vectors"],"description":"Sentiment analyzer for your tweets."}
{"name":"lingualytics\/py-lingualytics","full_name":"lingualytics\/py-lingualytics","topics":["pytorch","pytorch-nlp","nlp-library","bert","nlp"],"description":"A text analytics library with support for codemixed data"}
{"name":"yingtongdou\/care-gnn","full_name":"YingtongDou\/CARE-GNN","topics":["fraud-detection","fraud-prevention","security","machine-learning","graphneuralnetwork","deep-learning","datamining","reinforcement-learning"],"description":"Code for CIKM 2020 paper Enhancing Graph Neural Network-based Fraud Detectors against Camouflaged Fraudsters"}
{"name":"regenerator\/dpf-nets","full_name":"Regenerator\/dpf-nets","topics":["deep-learning","generative-modeling","normalizing-flows","point-clouds","autoencoder","reconstruction"],"description":"Flow-based generative model for 3D point clouds."}
{"name":"superlouis\/gatgnn","full_name":"superlouis\/GATGNN","topics":[],"description":"Pytorch Repository for our work: Graph convolutional neural networks with global attention for improved materials property prediction"}
{"name":"lromul\/gramtion","full_name":"lRomul\/gramtion","topics":["twitter","twitter-bot","image-captioning","alt-text","deep-learning","accessibility"],"description":"Twitter bot for generating photo descriptions (alt text)"}
{"name":"jmribeiro\/yaaf","full_name":"jmribeiro\/yaaf","topics":["autonomous-agents","reinforcement-learning","deep-learning"],"description":"Yet Another Agents Framework - An RL research-oriented framework for agent prototyping and evaluation"}
{"name":"kaist-hcil\/deepfisheyenet","full_name":"KAIST-HCIL\/DeepFisheyeNet","topics":["fisheye-camera","deep-learning","hci","paper"],"description":"DeepFisheye: Near-Surface Multi-Finger Tracking Technology Using Fisheye Camera (UIST 2020)"}
{"name":"codeslake\/color_transfer_histogram_analogy","full_name":"codeslake\/Color_Transfer_Histogram_Analogy","topics":["color-transfer","histogram-analogy","deep-learning","pytorch"],"description":"[CGI 2020] Official PyTorch Implementation for \"Deep Color Transfer using Histogram Analogy\""}
{"name":"pyretri\/pyretri","full_name":"PyRetri\/PyRetri","topics":["deep-learning","image-retrieval","pytorch","toolbox"],"description":"Open source deep learning based unsupervised image retrieval toolbox built on PyTorch\ud83d\udd25"}
{"name":"kenziyuliu\/ms-g3d","full_name":"kenziyuliu\/MS-G3D","topics":["action-recognition","pretrained-models","deep-learning","computer-vision","skeleton","pytorch"],"description":"[CVPR 2020 Oral] PyTorch implementation of \"Disentangling and Unifying Graph Convolutions for Skeleton-Based Action Recognition\""}
{"name":"prakhar21\/textaugmentation-gpt2","full_name":"prakhar21\/TextAugmentation-GPT2","topics":["gpt-2","nlp-machine-learning","transformer-architecture","text-augmentation","natural-language-processing","natural-language-generation","textclassification"],"description":"Fine-tuned pre-trained GPT2 for custom topic specific text generation. Such system can be used for Text Augmentation."}
{"name":"ze-yang\/context-transformer","full_name":"Ze-Yang\/Context-Transformer","topics":["few-shot","pytorch","rfbnet","transfer-learning","transformer","object-detection"],"description":"Context-Transformer: Tackling Object Confusion for Few-Shot Detection, AAAI 2020"}
{"name":"leonardo-blanger\/detr_tensorflow","full_name":"Leonardo-Blanger\/detr_tensorflow","topics":["detr","object-detection","tensorflow"],"description":"A Tensorflow implementation of the DETR object detection architecture."}
{"name":"dirtyharrylyl\/symnet","full_name":"DirtyHarryLYL\/SymNet","topics":["attribute-object","compositional-zero-shot-learning","deep-learning","object-recognition"],"description":"As a part of the HAKE project (HAKE-Object), code for SymNet (CVPR'20 and TPAMI'21)."}
{"name":"shrubb\/latent-pose-reenactment","full_name":"shrubb\/latent-pose-reenactment","topics":["deep-learning","head-reenactment","face-reenactment","talking-head","generative-model","pose-estimation","landmark-detection","facial-landmarks","self-supervised-learning","voxceleb","voxceleb2","head-avatar","avatar","pytorch"],"description":"The authors' implementation of the \"Neural Head Reenactment with Latent Pose Descriptors\" (CVPR 2020) paper."}
{"name":"deepbrains\/tsception","full_name":"deepBrains\/TSception","topics":["deep-learning","eeg","emotion-recognition","time-series"],"description":"PyTorch implementation of TSception"}
{"name":"shuhanchen\/ras-pytorch","full_name":"ShuhanChen\/RAS-pytorch","topics":[],"description":"Pytorch code for our  TIP20 paper: Reverse Attention Based Residual Network for Salient Object Detection.."}
{"name":"kamalesh0406\/audio-classification","full_name":"kamalesh0406\/Audio-Classification","topics":[],"description":"Pytorch code for \"Rethinking CNN Models for Audio Classification\""}
{"name":"osamhack2020\/iot_covid19-detector_co-vision","full_name":"osamhack2020\/IoT_COVID19-Detector_CO-vision","topics":["iot","osam","raspberry-pi","deep-learning","opencv","python","flir-lepton","tensorflow","keras","face-mask-detection","telegram-bot"],"description":" Identify and Alert people at risk of COVID-19 infection in REAL-TIME using raspberry-pi."}
{"name":"radioactive11\/alpr-india","full_name":"radioactive11\/ALPR-India","topics":["cnn","opencv","pytesseract-ocr"],"description":"Detect and scan the license plate number from vehicle images"}
{"name":"kwotsin\/mimicry","full_name":"kwotsin\/mimicry","topics":["generative-adversarial-networks","gans","reproducibility","pytorch","generative-models","machine-learning","gan","sngan","sngan-projection","wgan-gp","ssgan","dcgan","infomax-gan","cgan","cvpr","python","cvpr2020","cvpr20"],"description":"[CVPR 2020 Workshop] A PyTorch GAN library that reproduces research results for popular GANs."}
{"name":"haofanwang\/score-cam","full_name":"haofanwang\/Score-CAM","topics":["score-cam","cam","cnn-visualization-technique","saliency","cnn-visualization","pytorch","visual-explanations","explainability","class-activation-maps","gradient-free","heatmap","scorecam","grad-cam","gradcam"],"description":"Official implementation of Score-CAM in PyTorch"}
{"name":"jasonwu0731\/tod-bert","full_name":"jasonwu0731\/ToD-BERT","topics":["task-oriented-dialogues","dialogue","pretrained-models","natural-language-processing","natural-language-understanding","bert"],"description":"Pre-Trained Models for ToD-BERT"}
{"name":"leedoyup\/fixmatch-pytorch","full_name":"LeeDoYup\/FixMatch-pytorch","topics":[],"description":"Unofficial Pytorch code for  \"FixMatch: Simplifying Semi-Supervised Learning with Consistency and Confidence\" in NeurIPS'20. This repo contains reproduced checkpoints."}
{"name":"breizhn\/dtln","full_name":"breizhn\/DTLN","topics":["noise-reduction","deep-learning","audio","real-time-audio","audio-processing","noise-suppression","tensorflow","dns-challenge","dtln-model","speech-denoising","speech-processing","speech-enhancement","keras","tf-lite","raspberry-pi","onnx"],"description":"Tensorflow 2.x implementation of the DTLN real time speech denoising model. With TF-lite, ONNX and real-time audio processing support."}
{"name":"chenzhaowei13\/light-condition-style-transfer","full_name":"Chenzhaowei13\/Light-Condition-Style-Transfer","topics":["lane-detection","instance-segmentation","culane","light-conditions","deep-learning","self-driving-car","lane-lines-detection","data-enhancement"],"description":"Lane Detection in Low-light Conditions Using an Efficient Data Enhancement : Light Conditions Style Transfer (IV 2020)"}
{"name":"taishi-i\/toiro","full_name":"taishi-i\/toiro","topics":["nlp","natural-language-processing","japanese","bert","word-segmentation","nlp-library"],"description":"A comparison tool of Japanese tokenizers"}
{"name":"gmvandeven\/brain-inspired-replay","full_name":"GMvandeVen\/brain-inspired-replay","topics":["continual-learning","lifelong-learning","incremental-learning","generative-replay","brain-inspired","deep-learning","artificial-neural-networks","split-mnist","permuted-mnist","split-cifar100","internal-replay","replay-through-feedback","replay","synaptic-intelligence","elastic-weight-consolidation","variational-autoencoder","distillation"],"description":"A brain-inspired version of generative replay for continual learning with deep neural networks (e.g., class-incremental learning on CIFAR-100; PyTorch code)."}
{"name":"monologg\/hanbert-transformers","full_name":"monologg\/HanBert-Transformers","topics":["hanbert","transformers","pytorch","bert","korean-nlp"],"description":"HanBert on \ud83e\udd17 Huggingface Transformers \ud83e\udd17"}
{"name":"medelman17\/blackstone-api","full_name":"medelman17\/blackstone-api","topics":["legaltech","nlp","microservice"],"description":"Blackstone is a spaCy model and library for processing long-form, unstructured legal text. Here, we wrap Blackstone with a performant API layer written in Go."}
{"name":"hengyicai\/contrastivelearning4dialogue","full_name":"hengyicai\/ContrastiveLearning4Dialogue","topics":["dialog","pytorch","parlai","conversational-ai","contrastive-learning"],"description":"The codebase for \"Group-wise Contrastive Learning for Neural Dialogue Generation\" (Cai et al., Findings of EMNLP 2020)"}
{"name":"wangcongcong123\/ttt","full_name":"wangcongcong123\/ttt","topics":["transformers","tpus","tensorflow2","nlp","t5"],"description":"A package for fine-tuning Transformers with TPUs, written in Tensorflow2.0+"}
{"name":"subhadityamukherjee\/pytorchtutorialrepo","full_name":"SubhadityaMukherjee\/pytorchTutorialRepo","topics":["pytorch","tutorials","easy-to-use"],"description":"Unified\/Standardized pytorch tutorials"}
{"name":"shanesmiskol\/konverter","full_name":"sshane\/Konverter","topics":["keras-tensorflow","neural-networks","model-converter","keras","python","tensorflow"],"description":"Convert simple Keras models to pure Python \ud83d\udc0d+ NumPy"}
{"name":"naszilla\/nas-encodings","full_name":"naszilla\/nas-encodings","topics":["automl","nas","nasbench","deep-learning","automl-algorithms","automl-experiments","neural-architecture-search","tensorflow","pytorch"],"description":"Encodings for neural architecture search"}
{"name":"baiksung\/alfa","full_name":"baiksung\/ALFA","topics":["maml","pytorch","meta-learning","deep-learning","machine-learning","few-shot-learning","neurips","neurips-2020"],"description":"Source code for NeurIPS 2020 paper \"Meta-Learning with Adaptive Hyperparameters\""}
{"name":"aserdega\/convlstmgru","full_name":"aserdega\/convlstmgru","topics":["convlstm","convgru","pytorch","video-prediction","moving-mnist","bouncing-mnist","seq-to-seq","encoder-decoder"],"description":"Pytorch implementations of ConvLSTM and ConvGRU modules with examples"}
{"name":"yule-buaa\/dnntsp","full_name":"yule-BUAA\/DNNTSP","topics":["data-minig","deep-learning","temporal-sets-prediction","temporal-data"],"description":"codes of DNNTSP model for Temporal Sets Prediction"}
{"name":"sanweiliti\/place","full_name":"sanweiliti\/PLACE","topics":["human-scene-interaction","3d-human-mesh","3d-scenes","pytorch"],"description":"Official Pytorch implementation for 2020 3DV paper \"PLACE: Proximity Learning of Articulation and Contact in 3D Environments\" and trained models"}
{"name":"jesseyule\/objectdetection-yolov3","full_name":"JesseYule\/ObjectDetection-YOLOv3","topics":[],"description":"\u9762\u5411\u534e\u4e3aAtlas500\u7684\u5b9e\u65f6\u76ee\u6807\u68c0\u6d4b\uff08YOLOv3\uff0ctensorflow\u5b9e\u73b0\uff09"}
{"name":"davidiommi\/pytorch-unet3d-single_channel","full_name":"davidiommi\/Pytorch-Unet3D-single_channel","topics":[],"description":"3D-Unet: patched based Pytorch implementation for medical images segmentation"}
{"name":"deliton\/idt","full_name":"deliton\/idt","topics":["deep-learning","duckgo","search-engine","mount","idt","download","download-images","flickr-api","bing","bing-api","scraping","scraping-web","image-datasets","image-download","download-dataset"],"description":"Image Dataset Tool (idt) is a cli tool designed to make the otherwise repetitive and slow task of creating image datasets into a fast and intuitive process."}
{"name":"kumapowerliu\/rethinking-inpainting-medfe","full_name":"KumapowerLIU\/Rethinking-Inpainting-MEDFE","topics":["inpainting","activation-functions","generative-adversarial-network","eccv-2020"],"description":"Rethinking Image Inpainting via a Mutual Encoder Decoder with Feature Equalizations. ECCV 2020 Oral"}
{"name":"saic-mdal\/deep-landscape","full_name":"saic-mdal\/deep-landscape","topics":["deep-learning","gan","generative-adversarial-network","video-generation","reenactment"],"description":"Official repository for the paper \"DeepLandscape: Adversarial Modeling of Landscape Videos\" (ECCV2020)"}
{"name":"aaltovision\/hscnet","full_name":"AaltoVision\/hscnet","topics":["pytorch","computer-vision","visual-localization","camera-relocalization"],"description":"Hierarchical Scene Coordinate Classification and Regression for Visual Localization "}
{"name":"lucidrains\/aoa-pytorch","full_name":"lucidrains\/AoA-pytorch","topics":["attention","attention-mechanism","vqa","visual-question-answering","captioning"],"description":"A Pytorch implementation of Attention on Attention module (both self and guided variants), for Visual Question Answering"}
{"name":"jbakermans\/torch_tem","full_name":"jbakermans\/torch_tem","topics":[],"description":"Implementation of the Tolman Eichenbaum Machine in pytorch"}
{"name":"textdatasetcleaner\/textdatasetcleaner","full_name":"TextDatasetCleaner\/TextDatasetCleaner","topics":["natural-language-processing","nlp","text-analytics","preprocessing","machine-learning","normalization","linguistics","text-processing","text-mining","hacktoberfest","hactoberfest2021"],"description":"\ud83d\udd2c \u041e\u0447\u0438\u0441\u0442\u043a\u0430 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u043e\u0432 \u043e\u0442 \u043c\u0443\u0441\u043e\u0440\u0430 (\u043d\u043e\u0440\u043c\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f, \u043f\u0440\u0435\u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0438\u043d\u0433)"}
{"name":"yistlin\/universal-vocoder","full_name":"yistLin\/universal-vocoder","topics":["neural-vocoder","vocoder","torchscript","pytorch"],"description":"A PyTorch implementation of the universal neural vocoder"}
{"name":"charliedinh\/fedl_pytorch","full_name":"CharlieDinh\/FEDL_pytorch","topics":["pytorch","federated-learning","second-order-optimization","fedl"],"description":"This repository implements FEDL using pytorch"}
{"name":"bmycheez\/c3net","full_name":"bmycheez\/C3Net","topics":["pytorch","demoireing","ntire2020","cvpr2020","python","moire","channel-attention","loss-functions","sangmin-kim"],"description":"C3Net: Demoireing Network Attentive in Channel, Color and Concatenation (CVPRW 2020)"}
{"name":"menghuanlater\/tianchi2020chinesemedicinener","full_name":"menghuanlater\/Tianchi2020ChineseMedicineNER","topics":["pytorch","roberta","machine-reading-comprehension","named-entity-recognition"],"description":"2020\u963f\u91cc\u4e91\u5929\u6c60\u5927\u6570\u636e\u7ade\u8d5b-\u4e2d\u533b\u836f\u547d\u540d\u5b9e\u4f53\u8bc6\u522b\u6311\u6218\u8d5b"}
{"name":"zxz7\/zfundpredictor","full_name":"ZxZ7\/ZFundPredictor","topics":["lstm","fund","stock","price-prediction","web-scraping","deep-learning"],"description":"A Fund Price Prediction Framework (LSTM-based, web scraping included) \u5929\u5929\u57fa\u91d1\u7f51\u722c\u866b+\u57fa\u91d1\u9884\u6d4b"}
{"name":"coder-nlper\/chinese-ner-tf2","full_name":"Coder-nlper\/chinese-ner-tf2","topics":[],"description":"\u4e2d\u6587ner\u6a21\u578b\u4f7f\u7528tensorflow2.1\u6784\u5efa"}
{"name":"mgarcher\/text_select_captcha","full_name":"MgArcher\/Text_select_captcha","topics":[],"description":"pytorch\u5b9e\u73b0\u6587\u5b57\u70b9\u9009\u3001\u9009\u5b57\u3001\u9009\u62e9\u6587\u5b57\u9a8c\u8bc1\u7801\u8bc6\u522b"}
{"name":"mit-han-lab\/hardware-aware-transformers","full_name":"mit-han-lab\/hardware-aware-transformers","topics":["hardware-aware","transformer","specialization","efficient-model","natural-language-processing","machine-translation"],"description":"[ACL'20] HAT: Hardware-Aware Transformers for Efficient Natural Language Processing"}
{"name":"dvl-tum\/mot_neural_solver","full_name":"dvl-tum\/mot_neural_solver","topics":["multi-object-tracking","graph-neural-networks","pytorch"],"description":"Official PyTorch implementation of \"Learning a Neural Solver for Multiple Object Tracking\" (CVPR 2020 Oral)."}
{"name":"awslabs\/mlm-scoring","full_name":"awslabs\/mlm-scoring","topics":["language-model","nlp","speech-recognition","pytorch","mxnet","bert","xlm"],"description":"Python library & examples for Masked Language Model Scoring (ACL 2020)"}
{"name":"lucidrains\/unet-stylegan2","full_name":"lucidrains\/unet-stylegan2","topics":["artificial-intelligence","deep-learning","generative-adversarial-network","u-net"],"description":"A Pytorch implementation of Stylegan2 with UNet Discriminator"}
{"name":"intuit\/fawkes","full_name":"intuit\/fawkes","topics":["user-reviews","categorization","deep-learning","machine-learning","sentiment-analysis","summarization","python","hacktoberfest","fawkes","tensorflow"],"description":"\ud83d\ude80\ud83d\ude80  Fetch, parse, categorize, summarize user reviews \ud83d\ude80\ud83d\ude80"}
{"name":"sleepychord\/cogltx","full_name":"Sleepychord\/CogLTX","topics":["bert","pytorch"],"description":"The source code of NeurIPS 2020 paper \"CogLTX: Applying BERT to Long Texts\""}
{"name":"ternaus\/cloths_segmentation","full_name":"ternaus\/cloths_segmentation","topics":["deep-learning","computer-vision","image-segmentation"],"description":"Code for binary segmentation of cloths"}
{"name":"yzhangcs\/crfpar","full_name":"yzhangcs\/crfpar","topics":["pytorch","treecrf","dependency-parsing","constituency-parsing","acl2020","ijcai2020"],"description":"[ACL'20, IJCAI'20] Code for \"Efficient Second-Order TreeCRF for Neural Dependency Parsing\" and \"Fast and Accurate Neural CRF Constituency Parsing\"."}
{"name":"bogihsu\/wg-wavenet","full_name":"BogiHsu\/WG-WaveNet","topics":["speech-synthesis","neural-vocoder","waveglow","wavenet","wg-wavenet","pytorch","tts","vocoder","realtime"],"description":"Real-Time High-Fidelity Speech Synthesis without GPU"}
{"name":"hoytta0\/knowledgedistillation","full_name":"HoyTta0\/KnowledgeDistillation","topics":["knowledge-distillation","bert","pytorch","model-compression","distillation"],"description":"Knowledge distillation in text classification with pytorch. \u77e5\u8bc6\u84b8\u998f\uff0c\u4e2d\u6587\u6587\u672c\u5206\u7c7b\uff0c\u6559\u5e08\u6a21\u578bBERT\u3001XLNET\uff0c\u5b66\u751f\u6a21\u578bbiLSTM\u3002"}
{"name":"chriswu1997\/multimodal-shape-completion","full_name":"ChrisWu1997\/Multimodal-Shape-Completion","topics":["eccv-2020","shape-completion","computer-vision","deep-learning","computer-graphics"],"description":"code for our ECCV 2020 spotlight paper \"Multimodal Shape Completion via Conditional Generative Adversarial Networks\""}
{"name":"feymanpriv\/pymetric","full_name":"feymanpriv\/pymetric","topics":["metric-learning","classification","pytorch","retrieval"],"description":"pytorch metric learning tools and pycls"}
{"name":"bigpon\/qppwg","full_name":"bigpon\/QPPWG","topics":["speech-synthesis","neural-vocoder","wavenet","parallel-wavenet-vocoder","pytorch","real-time"],"description":"Quasi-Periodic Parallel WaveGAN Pytorch implementation"}
{"name":"otaheri\/mano","full_name":"otaheri\/MANO","topics":["hand","hand-modeling","human-hand-model","mano","3d-viewer","pytorch"],"description":"A PyTorch Implementation of MANO hand model."}
{"name":"ternaus\/midv-500-models","full_name":"ternaus\/midv-500-models","topics":["deep-learning","computer-vision","semantic-segmentation","image-segmentation","document-scanner","pytorch","python"],"description":"Model for document segmentation trained on the midv-500-models dataset."}
{"name":"yashsmehta\/personality-prediction","full_name":"yashsmehta\/personality-prediction","topics":["language-model","personality-predicting","pytorch","bert-fine-tuning","personality-detection"],"description":"Experiments for automated personality detection using Language Models and psycholinguistic features on various famous personality datasets including the Essays dataset (Big-Five)"}
{"name":"davidalami\/convert","full_name":"davidalami\/ConveRT","topics":["nlp","natural-language-processing","natural-language-understanding","tensorflow"],"description":"Dual Encoders for State-of-the-art Natural Language Processing."}
{"name":"nguyenvo09\/emnlp2020","full_name":"nguyenvo09\/EMNLP2020","topics":["pytorch","fact-checking","information-retrieval","learning-to-rank","fake-news-detection","emnlp2020"],"description":"This is official Pytorch code and datasets of the paper \"Where Are the Facts? Searching for Fact-checked Information to Alleviate the Spread of Fake News\", EMNLP 2020. "}
{"name":"alinajafi1998\/comstream","full_name":"AliNajafi1998\/ComStream","topics":["nlp","topic-detection","multi-agent","data-stream","elixir","clustering-algorithm","labse"],"description":"In this project, we implemented a topic detection system on Twitter. This system reads tweets from a data stream and assigns them to one of the existing clusters or a new one. Each cluster acts as an agent, which makes the proposed approach a multi-agent system. There is also a coordinator, who monitors the whole system and coordinates the agent."}
{"name":"wjddn279\/deeplearning_mimo-noma","full_name":"wjddn279\/DeepLearning_MIMO-NOMA","topics":["mimo","noma","deep-learning","communication"],"description":"Realization of MIMO-NOMA signal detection system based on **C. Lin et al., \u201cA deep learning approach for MIMO-NOMA downlink signal detection,\u201d MDPI Sensors, vol. 19, no. 11, pp. 2526, 2019."}
{"name":"tinglok\/cvc","full_name":"Tinglok\/CVC","topics":["voice-conversion","speech","pytorch","cyclegan","contrastive-learning"],"description":"CVC: Contrastive Learning for Non-parallel Voice Conversion (INTERSPEECH 2021, in PyTorch)"}
{"name":"cfzd\/ultra-fast-lane-detection","full_name":"cfzd\/Ultra-Fast-Lane-Detection","topics":["lane-detection","autonomous-driving","lane-detector","lane-finding","road-detection","autonomous-vehicles","cnn","pytorch"],"description":"Ultra Fast Structure-aware Deep Lane Detection (ECCV 2020)"}
{"name":"sangwoomo\/freezed","full_name":"sangwoomo\/FreezeD","topics":["generative-models","generative-adversarial-network","transfer-learning","gan"],"description":"Freeze the Discriminator: a Simple Baseline for Fine-Tuning GANs (CVPRW 2020)"}
{"name":"labteral\/ernie","full_name":"labteral\/ernie","topics":["bert","roberta","albert","distilbert","tensorflow","keras","tensorflow2","nlp","sentence-classification","transformers","huggingface","bert-model","bert-models","bert-as-service","bert-embeddings","huggingface-transformer","transformer-architecture","transformer-tensorflow2","natural-language-processing"],"description":"Simple State-of-the-Art BERT-Based Sentence Classification with Keras \/ TensorFlow 2. Built with HuggingFace's Transformers."}
{"name":"kevinlu1248\/pyate","full_name":"kevinlu1248\/pyate","topics":["nlp","term-extraction","ai","symbolic-ai"],"description":"PYthon Automated Term Extraction"}
{"name":"ziweiwangthu\/bidet","full_name":"ZiweiWangTHU\/BiDet","topics":[],"description":"This is the official pytorch implementation for paper: BiDet: An Efficient Binarized Object Detector, which is accepted by CVPR2020. "}
{"name":"milleniums\/high-resolution-remote-sensing-semantic-segmentation-pytorch","full_name":"milleniums\/High-Resolution-Remote-Sensing-Semantic-Segmentation-PyTorch","topics":["remote-sensing","dataset","land-cover-classification","semantic-segmentation","deeplabv3","pytorch"],"description":"PyTorch\u5b9e\u73b0\u9ad8\u5206\u9065\u611f\u8bed\u4e49\u5206\u5272\uff08\u5730\u7269\u5206\u7c7b\uff09"}
{"name":"davda54\/ada-hessian","full_name":"davda54\/ada-hessian","topics":["adahessian","hessian","optimizer","pytorch","second-order","adam"],"description":"Easy-to-use AdaHessian optimizer (PyTorch)"}
{"name":"swapniljadhav1921\/asamiasami","full_name":"swapniljadhav1921\/asamiasami","topics":["nlp","ai","indic-languages","machine-learning","bert","deep-learning","fairseq","nmt","neural-machine-translation","nsfw-detection","language-detection"],"description":"State-Of-The-Art & ready to use mini NLP models for Indian Languages"}
{"name":"bubbliiiing\/retinaface-pytorch","full_name":"bubbliiiing\/retinaface-pytorch","topics":[],"description":"\u8fd9\u662f\u4e00\u4e2aretinaface-pytorch\u7684\u6e90\u7801\uff0c\u53ef\u4ee5\u7528\u4e8e\u8bad\u7ec3\u81ea\u5df1\u7684\u6a21\u578b\u3002"}
{"name":"bubbliiiing\/pspnet-pytorch","full_name":"bubbliiiing\/pspnet-pytorch","topics":[],"description":"\u8fd9\u662f\u4e00\u4e2apspnet-pytorch\u7684\u6e90\u7801\uff0c\u53ef\u4ee5\u7528\u4e8e\u8bad\u7ec3\u81ea\u5df1\u7684\u6a21\u578b\u3002"}
{"name":"rangilyu\/mobilenext","full_name":"RangiLyu\/mobilenext","topics":["deep-neural-networks","pytorch","mobilenet"],"description":"non-official PyTorch implementation of MobileNeXt from paper [Rethinking Bottleneck Structure for Efficient Mobile Network Design]"}
{"name":"trojai\/trojai","full_name":"trojai\/trojai","topics":["deep-learning","deep-neural-networks","deep-reinforcement-learning","adversarial-machine-learning","poisoning-attack"],"description":"A repository to quickly generate synthetic data and associated trojaned deep learning models"}
{"name":"xuyangbai\/d3feat.pytorch","full_name":"XuyangBai\/D3Feat.pytorch","topics":["pointcloud","registration","3d","pytorch","descriptor"],"description":"[PyTorch] Official Implementation of CVPR'20 oral paper - D3Feat: Joint Learning of Dense Detection and Description of 3D Local Features https:\/\/arxiv.org\/abs\/2003.03164"}
{"name":"joelcthomas\/ml-azuredatabricks","full_name":"joelcthomas\/ml-azuredatabricks","topics":["azure","databricks","machine-learning","deep-learning","mlflow"],"description":"Collection of Machine Learning Examples for Azure Databricks"}
{"name":"mswzeus\/plus","full_name":"mswzeus\/PLUS","topics":["plus","protein-transfer-learning","pytorch"],"description":"Official Pytorch implementation of PLUS (Protein sequence representations Learned Using Structural information), IEEE Access 2021"}
{"name":"bubbliiiing\/retinanet-pytorch","full_name":"bubbliiiing\/retinanet-pytorch","topics":[],"description":"\u8fd9\u662f\u4e00\u4e2aretinanet-pytorch\u7684\u6e90\u7801\uff0c\u53ef\u4ee5\u7528\u4e8e\u8bad\u7ec3\u81ea\u5df1\u7684\u6a21\u578b\u3002"}
{"name":"pmixer\/sasrec.pytorch","full_name":"pmixer\/SASRec.pytorch","topics":["pytorch","recommender-system","sasrec","sequential-models"],"description":"PyTorch(1.6+) implementation of https:\/\/github.com\/kang205\/SASRec"}
{"name":"vasilescur\/parse_context","full_name":"vasilescur\/parse_context","topics":["gpt-3","ai","natural-language","nlp","semantic-analysis","assistants"],"description":"Use GPT-3 to process human conversations and extract context, identify information that would be useful, and suggest data sources to get that information. Intended for a voice assistant."}
{"name":"easoncai-dev\/torch_backbones","full_name":"Cai-Yichao\/torch_backbones","topics":["backbones","backbone-cnns","pytorch"],"description":"Unofficial implementations of some classical  CNN backbones with pytorch"}
{"name":"johncai117\/meta-fine-tuning","full_name":"johncai117\/Meta-Fine-Tuning","topics":["gnn","meta-fine-tuning","few-shot-learning","computer-vision","deep-learning","cvpr","cvpr2020","transfer-learning","meta-learning-algorithm"],"description":"[CVPR 2020 VL3] The repository for meta fine-tuning in cross-domain few-shot learning."}
{"name":"oke-aditya\/pytorch_paper_implementations","full_name":"oke-aditya\/pytorch_paper_implementations","topics":["pytorch","implementation-of-research-paper","deep-learning","deep-learning-papers"],"description":"Deep Learning Paper Implementations in PyTorch"}
{"name":"tuvovan\/vision_transformer_keras","full_name":"tuvovan\/Vision_Transformer_Keras","topics":["transformer","computer-vision","image-recognition","vision","keras","tensorflow"],"description":"Keras Implementation of Vision Transformer (An Image is Worth 16x16 Words: Transformers for Image Recognition at Scale)"}
{"name":"bubbliiiing\/unet-keras","full_name":"bubbliiiing\/unet-keras","topics":[],"description":"\u8fd9\u662f\u4e00\u4e2aunet-keras\u7684\u6e90\u7801\uff0c\u53ef\u4ee5\u7528\u4e8e\u8bad\u7ec3\u81ea\u5df1\u7684\u6a21\u578b\u3002"}
{"name":"google-research\/big_transfer","full_name":"google-research\/big_transfer","topics":["deep-learning","convolutional-neural-networks","imagenet","tensorflow2","jax","pytorch","transfer-learning"],"description":"Official repository for the \"Big Transfer (BiT): General Visual Representation Learning\" paper."}
{"name":"chonyy\/ai-basketball-analysis","full_name":"chonyy\/AI-basketball-analysis","topics":["basketball","machine-learning","tensorflow","api","computer-vision","object-detection","artificial-intelligence","openpose","deep-learning","pose-estimation","yolo","yolov4"],"description":":basketball::robot::basketball: AI web app and API to analyze basketball shots and shooting pose."}
{"name":"hellohaptik\/multi-task-nlp","full_name":"hellohaptik\/multi-task-NLP","topics":["pytorch","multitask-learning","sentence-classification","sequence-labeling","entailment","ranking","intent-classification","named-entity-recognition","machine-comprehension","context-awareness","transformers","nlp","nlp-library","nli-tasks","nlp-datasets","nlp-apis"],"description":"multi_task_NLP is a utility toolkit enabling NLP developers to easily train and infer a single model for multiple tasks."}
{"name":"lturing\/tacotronv2_wavernn_chinese","full_name":"lturing\/tacotronv2_wavernn_chinese","topics":[],"description":"tacotronV2 + wavernn \u5b9e\u73b0\u4e2d\u6587\u8bed\u97f3\u5408\u6210(Tensorflow + pytorch) "}
{"name":"tjddus9597\/proxy-anchor-cvpr2020","full_name":"tjddus9597\/Proxy-Anchor-CVPR2020","topics":["proxy-anchor-loss","cvpr2020","deep-metric-learning","image-retrieval","pytorch"],"description":"Official PyTorch Implementation of Proxy Anchor Loss for Deep Metric Learning, CVPR 2020"}
{"name":"peteryux\/retinaface-tf2","full_name":"peteryuX\/retinaface-tf2","topics":["facedetection","face-detection","retinaface","retinaface-detector","tensorflow","tensorflow2","tf2","resnet-50","mobilenetv2","colab-notebook","colab"],"description":"RetinaFace (Single-stage Dense Face Localisation in the Wild, 2019) implemented (ResNet50, MobileNetV2 trained on single GPU) in Tensorflow 2.0+. This is an unofficial implementation. With Colab."}
{"name":"zilliztech\/phantoscope","full_name":"zilliztech\/phantoscope","topics":["deep-learning","deep-neural-networks","machine-learning","cloud-native","image-search","microservices","milvus"],"description":"Open Source, Cloud Native, RESTful Search Engine Powered by Neural Networks  "}
{"name":"yongzhuo\/macadam","full_name":"yongzhuo\/Macadam","topics":["tensorflow","keras","bert","sequence-labeling","text-classification","relation-extraction","embedding","ner","python3"],"description":"Macadam\u662f\u4e00\u4e2a\u4ee5Tensorflow(Keras)\u548cbert4keras\u4e3a\u57fa\u7840\uff0c\u4e13\u6ce8\u4e8e\u6587\u672c\u5206\u7c7b\u3001\u5e8f\u5217\u6807\u6ce8\u548c\u5173\u7cfb\u62bd\u53d6\u7684\u81ea\u7136\u8bed\u8a00\u5904\u7406\u5de5\u5177\u5305\u3002\u652f\u6301RANDOM\u3001WORD2VEC\u3001FASTTEXT\u3001BERT\u3001ALBERT\u3001ROBERTA\u3001NEZHA\u3001XLNET\u3001ELECTRA\u3001GPT-2\u7b49EMBEDDING\u5d4c\u5165;     \u652f\u6301FineTune\u3001FastText\u3001TextCNN\u3001CharCNN\u3001BiRNN\u3001RCNN\u3001DCNN\u3001CRNN\u3001DeepMoji\u3001SelfAttention\u3001HAN\u3001Capsule\u7b49\u6587\u672c\u5206\u7c7b\u7b97\u6cd5;      \u652f\u6301CRF\u3001Bi-LSTM-CRF\u3001CNN-LSTM\u3001DGCNN\u3001Bi-LSTM-LAN\u3001Lattice-LSTM-Batch\u3001MRC\u7b49\u5e8f\u5217\u6807\u6ce8\u7b97\u6cd5\u3002"}
{"name":"toshas\/torch-fidelity","full_name":"toshas\/torch-fidelity","topics":["pytorch","metrics","gan","generative-model","evaluation","inception-score","frechet-inception-distance","kernel-inception-distance","perceptual-path-length","precision","reproducibility","reproducible-research"],"description":"High-fidelity performance metrics for generative models in PyTorch"}
{"name":"shathe\/3d-mininet","full_name":"Shathe\/3D-MiniNet","topics":[],"description":"Official Implementation in Pytorch and Tensorflow of 3D-MiniNet: Learning a 2D Representation from Point Clouds for Fast and Efficient 3D LIDAR Semantic Segmentation"}
{"name":"kaushikjadhav01\/stock-market-prediction-web-app-using-machine-learning-and-sentiment-analysis","full_name":"kaushikjadhav01\/Stock-Market-Prediction-Web-App-using-Machine-Learning-And-Sentiment-Analysis","topics":["stock-market","stock-price-prediction","flask","twitter","tweepy","sentiment-analysis","machine-learning","arima","lstm","linear-regression","python","yfinance","alphavantage","keras","tensorflow","wordpress"],"description":"Stock Market Prediction Web App based on Machine Learning and Sentiment Analysis of Tweets (API keys included in code). The front end of the Web App is based on Flask and Wordpress. The App forecasts stock prices of the next seven days for any given stock under NASDAQ or NSE as input by the user. Predictions are made using three algorithms: ARIMA, LSTM, Linear Regression. The Web App combines the predicted prices of the next seven days with the sentiment analysis of tweets to give recommendation whether the price is going to rise or fall"}
{"name":"svjan5\/kg-reeval","full_name":"svjan5\/kg-reeval","topics":["acl2020","knowledge-graph","knowledge-graph-completion","deep-learning"],"description":"ACL 2020: A Re-evaluation of Knowledge Graph Completion Methods"}
{"name":"clovaai\/symmetrical-synthesis","full_name":"clovaai\/symmetrical-synthesis","topics":["metric-learning","image-retrieval","image-clustering","deep-learning","synthesis","cars196","stanford-online-products","cub200-2011","aaai2020","tensorflow"],"description":"Official Tensorflow implementation of \"Symmetrical Synthesis for Deep Metric Learning\" (AAAI 2020)"}
{"name":"y-kawagu\/dcase2020_task2_baseline","full_name":"y-kawagu\/dcase2020_task2_baseline","topics":["audio-signal-processing","anomaly-detection","acoustic-scene-classification","machine-learning","unsupervised-learning","dcase2020","dcase","signal-processing","machine-listening","fault-detection","sound","deep-learning","audio-classification","autoencoder","audio"],"description":"DCASE2020 Challenge Task 2 baseline system"}
{"name":"xwhan\/proqa","full_name":"xwhan\/ProQA","topics":["natural-language-processing","question-answering","pytorch","information-retrieval"],"description":"Progressively Pretrained Dense Corpus Index for Open-Domain QA and Information Retrieval"}
{"name":"slseanwu\/jazz_transformer","full_name":"slSeanWU\/jazz_transformer","topics":["ai-music","jazz","transformer","python3","tensorflow"],"description":"Transformer-XL for Jazz music composition. Paper: \"The Jazz Transformer on the Front Line: Exploring the Shortcomings of AI-Composed Music through Quantitative Measures\", ISMIR 2020"}
{"name":"bdsaglam\/torch-scae","full_name":"bdsaglam\/torch-scae","topics":["deep-learning","capsule-network","pytorch","computer-vision"],"description":"PyTorch implementation of Stacked Capsule Auto-Encoders"}
{"name":"parkseobin\/mlsr","full_name":"parkseobin\/MLSR","topics":["super-resolution","meta-learning","deep-learning","tensorflow"],"description":"Source code for ECCV2020 \"Fast Adaptation to Super-Resolution Networks via Meta-Learning\""}
{"name":"lucidrains\/memformer","full_name":"lucidrains\/memformer","topics":["artificial-intelligence","transformers","attention-mechanism","memory"],"description":"Implementation of Memformer, a Memory-augmented Transformer, in Pytorch"}
{"name":"frankkramer-lab\/covid19.miscnn","full_name":"frankkramer-lab\/covid19.MIScnn","topics":["covid-19","medical-image-analysis","covid-19-ct","segmentation","pneumonia","lung-disease","infection","3d-unet","lung-segmentation","medical-imaging","lung-lobes","computer-vision","u-net","healthcare-imaging","deep-learning","tensorflow","medical-image-processing"],"description":"Robust Chest CT Image Segmentation of COVID-19 Lung Infection based on limited data"}
{"name":"akanyaani\/ranknet-tensorflow2.0","full_name":"akanyaani\/ranknet-tensorflow2.0","topics":["ranknet","lambdarank","ltr","learning-to-rank","tensorflow","tensorflow2"],"description":"Implementation of RankNet to LambdaRank in TensorFlow 2.0"}
{"name":"stijnverdenius\/snip-it","full_name":"StijnVerdenius\/SNIP-it","topics":["machine-learning","deep-learning","pruning","structured-pruning","unstructured-pruning","structured-pruning-before-training","artificial-intelligence","neural-networks","model-compression","science","science-research","computer-vision","publication","speedup"],"description":"This repository is the official implementation of the paper Pruning via Iterative Ranking of Sensitivity Statistics and implements novel pruning \/ compression algorithms for deep learning \/ neural networks. Amongst others it implements structured pruning before training, its actual parameter shrinking and unstructured before\/during training. "}
{"name":"filippoaleotti\/reversing","full_name":"FilippoAleotti\/Reversing","topics":["stereo-matching","monocular-depth-estimation","computer-vision","deep-learning","eccv-2020"],"description":"Code for \"Reversing the cycle: self-supervised deep stereo through enhanced monocular distillation\""}
{"name":"jramapuram\/byol","full_name":"jramapuram\/BYOL","topics":[],"description":"Bootstrap Your Own Latent (BYOL) pytorch implementation using DistributedDataParallel."}
{"name":"thetobysiu\/deepstory","full_name":"thetobysiu\/deepstory","topics":["pytorch","dctts","dc-tts","deep-learning","jquery","flask","gpt-2","gpt2","witcher-3","witcher3","deep-fake","fan-fiction"],"description":" Deepstory turns a text\/generated text into a video where the character is animated to speak your story using his\/her voice."}
{"name":"google-research\/pisac","full_name":"google-research\/pisac","topics":["reinforcement-learning","robotics","deep-learning","machine-learning","deep-reinforcement-learning","information-theory","vision"],"description":"Tensorflow 2 source code for the PI-SAC agent from \"Predictive Information Accelerates Learning in RL\" (NeurIPS 2020)"}
{"name":"hltchkust\/caire-covid","full_name":"HLTCHKUST\/CAiRE-COVID","topics":["question-answering","qa","summarization","search-engine","nlp","kaggle"],"description":"A machine learning-based system that uses state-of-the-art natural language processing (NLP) question answering (QA) techniques combined with summarization for mining the available scientific literature"}
{"name":"nauyan\/segmentation","full_name":"nauyan\/Segmentation","topics":["segmentation","medical-imaging","deep-learning","keras","tensorflow","segnet","u-net","deeplabv3"],"description":"Contains code for Semantic Segmentation of MoNuSeg 2018 challenge."}
{"name":"zaynmi\/seada-vqa","full_name":"zaynmi\/seada-vqa","topics":[],"description":"A pytorch implemetation of data augmentation method for visual question answering"}
{"name":"sforaidl\/decepticonlp","full_name":"SforAiDl\/decepticonlp","topics":["natural-language-processing","adversarial-attacks","deep-learning","robust-optimization","text-processing","python"],"description":"Python Library for Robustness Monitoring and Adversarial Debugging of NLP models"}
{"name":"jramapuram\/simclr","full_name":"jramapuram\/SimCLR","topics":[],"description":"SimCLR pytorch implementation using DistributedDataParallel."}
{"name":"abd-shoumik\/face-mask-detector","full_name":"abd-shoumik\/Face-Mask-detector","topics":["mask","facemask-detection","deep-learning","computer-vision","face-mask","face-mask-detector","real-time-detection","image-classification","opencv","keras"],"description":"It can detect face mask from images and real time videos.(VGG 16,OPENCV & KERAS)"}
{"name":"zyjacya-in-love\/pedestrian-detection-on-yolov3_research-and-app","full_name":"Zyjacya-In-love\/Pedestrian-Detection-on-YOLOv3_Research-and-APP","topics":["keras-train","model-evaluation","data-convert","detection","yolov3","model-weights","flask"],"description":":mortar_board: 2020 Undergraduate Graduation Project in Jiangnan University ALL codes including Data-convert, keras-Train, model-Evaluate and Web-App"}
{"name":"samuelkim314\/deepsymreg","full_name":"samuelkim314\/DeepSymReg","topics":["deep-learning","equation-discovery","neural-network","symbolic-regression"],"description":"Official repository for the paper \"Integration of Neural Network-Based Symbolic Regression in Deep Learning for Scientific Discovery\""}
{"name":"nauyan\/zindiweekends_spotthemaskchallenge","full_name":"nauyan\/ZindiWeekends_SpotTheMaskChallenge","topics":["deep-learning","deep-neural-networks","machine-learning","keras-tensorflow","keras","keras-models","tensorflow","cuda","cud","classification","challenge","hackathon","zindi","opencv","python"],"description":"Contains code that I had used for participation at Spot the Mask Challenge by #ZindiWeekendz and achieved 9th (Top 6%) position."}
{"name":"ertis-research\/kafka-ml","full_name":"ertis-research\/kafka-ml","topics":["kafka","machine-learning","kubernetes","tensorflow","docker","data-stream","iot","keras-tensorflow","gpu-acceleration","deep-learning","keras","pytorch"],"description":"Kafka-ML: connecting the data stream with ML\/AI frameworks (now TensorFlow and PyTorch!)"}
{"name":"maudzung\/ttnet-real-time-analysis-system-for-table-tennis-pytorch","full_name":"maudzung\/TTNet-Real-time-Analysis-System-for-Table-Tennis-Pytorch","topics":["ttnet","pytorch","tabletennis","sport-analytics","multi-task-learning","dice-loss","distributed-data-parallel","table-tennis","segmentation","spatial-video-analysis","event-spotting","event-detection"],"description":"Unofficial implementation of \"TTNet: Real-time temporal and spatial video analysis of table tennis\" (CVPR 2020)"}
{"name":"alibaba-research\/chineseblue","full_name":"alibaba-research\/ChineseBLUE","topics":["benchmark","bert","chinese","biomedical","medical","natural-language-processing"],"description":"Chinese Biomedical Language Understanding Evaluation benchmark (ChineseBLUE)"}
{"name":"doccano\/doccano-transformer","full_name":"doccano\/doccano-transformer","topics":["conll","annotation","dataset","machine-learning","natural-language-processing","doccano"],"description":"The official tool for transforming doccano format into common dataset formats."}
{"name":"inmoonlight\/detox","full_name":"inmoonlight\/detox","topics":["hate-speech-detection","korean-nlp","korean","nlp"],"description":"Korean Hate Speech Detection Model"}
{"name":"shoarora\/transformers-trainers","full_name":"shoarora\/transformers-trainers","topics":[],"description":"Tools for training pytorch language models"}
{"name":"yashk2000\/sneakysketchers","full_name":"yashk2000\/SneakySketchers","topics":["python3","pyqt5","pyqt5-desktop-application","jupyter-notebook","inpainting","image-inpainting","computer-vision","pytorch","desktop-application","sneaky-sketchers","google-colab","opencv-python"],"description":"A python desktop application that allows you to do image inpainting by directly drawing on it. "}
{"name":"nvidia-ai-iot\/ros2_torch_trt","full_name":"NVIDIA-AI-IOT\/ros2_torch_trt","topics":["ros2","robotics","pytorch","tensorrt","real-time","jetson","deep-learning","ai-iot","object-detection","resnet-18","classification-model","ssd-mobilenet"],"description":"ROS 2 packages for PyTorch and TensorRT for real-time classification and object detection on Jetson Platforms"}
{"name":"twni2016\/f-irl","full_name":"twni2016\/f-IRL","topics":["imitation-learning","deep-reinforcement-learning","inverse-reinforcement-learning","maxent","pytorch","mujoco"],"description":"Inverse Reinforcement Learning via State Marginal Matching - CoRL 2020"}
{"name":"peterh0323\/smart_construction","full_name":"PeterH0323\/Smart_Construction","topics":["yolov5","helmet","pytorch","python","detection","object-detection"],"description":"Head Person Helmet Detection on Construction Sites\uff0c\u57fa\u4e8e\u76ee\u6807\u68c0\u6d4b\u5de5\u5730\u5b89\u5168\u5e3d\u548c\u7981\u5165\u5371\u9669\u533a\u57df\u8bc6\u522b\u7cfb\u7edf\uff0c\ud83d\ude80\ud83d\ude06\u9644 YOLOv5 \u8bad\u7ec3\u81ea\u5df1\u7684\u6570\u636e\u96c6\u8d85\u8be6\u7ec6\u6559\u7a0b\ud83d\ude80\ud83d\ude062021.3\u65b0\u589e\u53ef\u89c6\u5316\u754c\u9762\u2757\u2757"}
{"name":"jankrepl\/mltype","full_name":"jankrepl\/mltype","topics":["typing-practice","typing","typingspeedtest","typing-trainer","machine-learning","deep-learning","touch-typing"],"description":"Command line tool for improving typing skills (programmers friendly)"}
{"name":"lucidrains\/hamburger-pytorch","full_name":"lucidrains\/hamburger-pytorch","topics":["artificial-intelligence","deep-learning","matrix-decomposition"],"description":"Pytorch implementation of the hamburger module from the ICLR 2021 paper \"Is Attention Better Than Matrix Decomposition\""}
{"name":"hli1221\/imagefusion-nestfuse","full_name":"hli1221\/imagefusion-nestfuse","topics":["imagefusion","deep-learning","nest-connection","pytorch"],"description":"NestFuse (IEEE TIM 2020)- Pytorch >= 0.4.1"}
{"name":"daiquocnguyen\/quatre","full_name":"daiquocnguyen\/QuatRE","topics":["knowledge-graph-embeddings","knowledge-graph-completion","knowledge-base-completion","link-prediction","quaternion-algebra","hamilton-product"],"description":"QuatRE: Relation-Aware Quaternions for Knowledge Graph Embeddings (TheWebConf WWW 2022) (Pytorch)"}
{"name":"google-research\/electra","full_name":"google-research\/electra","topics":["nlp","deep-learning","tensorflow"],"description":"ELECTRA: Pre-training Text Encoders as Discriminators Rather Than Generators"}
{"name":"cleardusk\/3ddfa_v2","full_name":"cleardusk\/3DDFA_V2","topics":["eccv","3d-face-alignment","pytorch","face-alignment","3d-face","3dmm","alignment","3d","computer-vision","onnx","3d-landmarks","single-image-reconstruction","eccv-2020"],"description":"The official PyTorch implementation of Towards Fast, Accurate and Stable 3D Dense Face Alignment, ECCV 2020."}
{"name":"argusswift\/yolov4-pytorch","full_name":"argusswift\/YOLOv4-pytorch","topics":["yolov4","object-detection","pytorch","senet","cbam","mobilenetv2","mobilenetv3","attention"],"description":"This is a pytorch repository of YOLOv4, attentive YOLOv4 and mobilenet YOLOv4 with PASCAL VOC and COCO"}
{"name":"ternaus\/retinaface","full_name":"ternaus\/retinaface","topics":["pytorch","deeplearning","face-detection","retinaface","object-detection"],"description":"The remake of the https:\/\/github.com\/biubug6\/Pytorch_Retinaface"}
{"name":"thinklab-sjtu\/csl_retinanet_tensorflow","full_name":"Thinklab-SJTU\/CSL_RetinaNet_Tensorflow","topics":["object-detection","tensorflow","smooth-label","angle-classification"],"description":"Code for ECCV 2020 paper: Arbitrary-Oriented Object Detection with Circular Smooth Label"}
{"name":"kaijieshi7\/dynamic-convolution-pytorch","full_name":"kaijieshi7\/Dynamic-convolution-Pytorch","topics":["dynamic-convolution"],"description":"Pytorch!!!Pytorch!!!Pytorch!!!  Dynamic Convolution: Attention over Convolution Kernels (CVPR-2020)"}
{"name":"hongsukchoi\/pose2mesh_release","full_name":"hongsukchoi\/Pose2Mesh_RELEASE","topics":["single-view","graph-convolutional-network","3d-mesh","2d-human-pose","3d-human-pose","3d-human-mesh","rgb-image","eccv2020","eccv"],"description":"Official Pytorch implementation of \"Pose2Mesh: Graph Convolutional Network for 3D Human Pose and Mesh Recovery from a 2D Human Pose\", ECCV 2020"}
{"name":"jackaduma\/cyclegan-vc2","full_name":"jackaduma\/CycleGAN-VC2","topics":["voice-conversion","cyclegan-vc2","cyclegan","gan","deeplearning","voice-cloning","pytorch-implementation","cyclegan-vc","speech-synthesis","deep-learning","pix2pix"],"description":"Voice Conversion by CycleGAN (\u8bed\u97f3\u514b\u9686\/\u8bed\u97f3\u8f6c\u6362): CycleGAN-VC2"}
{"name":"lliuz\/arflow","full_name":"lliuz\/ARFlow","topics":["optical-flow","unsupervised-learning","self-supervised-learning","pytorch","cvpr2020"],"description":"The official PyTorch implementation of the paper \"Learning by Analogy: Reliable Supervision from Transformations for Unsupervised Optical Flow Estimation\"."}
{"name":"crux82\/ganbert","full_name":"crux82\/ganbert","topics":["generative-adversarial-network","semi-supervised-learning","few-shot-learning","bert","python"],"description":"Enhancing the BERT training with Semi-supervised Generative Adversarial Networks"}
{"name":"kevinzakka\/torchkit","full_name":"kevinzakka\/torchkit","topics":["pytorch","deep-learning"],"description":"Research boilerplate for PyTorch."}
{"name":"maghoumi\/pytorch-softdtw-cuda","full_name":"Maghoumi\/pytorch-softdtw-cuda","topics":["dynamic-time-warping","pytorch","cuda","deep-learning","soft-dtw"],"description":"Fast CUDA implementation of (differentiable) soft dynamic time warping for PyTorch using Numba"}
{"name":"moono\/stylegan2-tf-2.x","full_name":"moono\/stylegan2-tf-2.x","topics":[],"description":"stylegan2, tensorflow 2, keras subclassing"}
{"name":"martinomensio\/spacy-universal-sentence-encoder","full_name":"MartinoMensio\/spacy-universal-sentence-encoder","topics":["nlp","use","spacy","tensorflow-hub","models"],"description":"Google USE (Universal Sentence Encoder) for spaCy"}
{"name":"isarandi\/metro-pose3d","full_name":"isarandi\/metro-pose3d","topics":["human-pose-estimation","3d-human-pose","computer-vision","tensorflow","python","deep-learning"],"description":"Metric-Scale Truncation-Robust Heatmaps for 3D Human Pose Estimation"}
{"name":"enochkan\/torch-metrics","full_name":"enochkan\/torch-metrics","topics":["pytorch","machine-learning","deep-learning","metrics","pytorch-implementation","pytorch-cnn","computer-vision","torch-metrics"],"description":"Metrics for model evaluation in pytorch"}
{"name":"zhangzhiqiangccm\/nlp-project","full_name":"zhangzhiqiangccm\/NLP-project","topics":[],"description":"\u81ea\u7136\u8bed\u8a00\u5904\u7406\u4e2d\u7684\u57fa\u7840\u4efb\u52a1\uff0c\u5305\u542b\u4f46\u4e0d\u9650\u4e8e\u6587\u672c\u8868\u793a\uff0c\u6587\u672c\u5206\u7c7b\uff0c\u547d\u540d\u5b9e\u4f53\u8bc6\u522b\uff0c\u5173\u7cfb\u62bd\u53d6\uff0c\u6587\u672c\u751f\u6210\uff0c\u6587\u672c\u6458\u8981\u7b49\uff0c\u57fa\u4e8etensorflow2\u6216Pytorch\uff0c\u6240\u6709\u4ee3\u7801\u5747\u7ecf\u8fc7\u6d4b\u8bd5\uff0c\u9879\u76ee\u4e2d\u4e5f\u5305\u542b\u76f8\u5173\u6570\u636e\u3002"}
{"name":"frgfm\/torch-scan","full_name":"frgfm\/torch-scan","topics":["python","pytorch","flops-counter","benchmark","deep-learning","pytorch-utils","deep-neural-networks","keras","summary","flops","receptive-field"],"description":"Seamless analysis of your PyTorch models (RAM usage, FLOPs, MACs, receptive field, etc.)"}
{"name":"youngkyunjang\/gpq","full_name":"youngkyunJang\/GPQ","topics":["semi-supervised-learning","metric-learning","deep-learning","cvpr2020","tensorflow","image-retrieval","product-quantization","hashing"],"description":"Generalized Product Quantization Network For Semi-supervised Image Retrieval - CVPR 2020"}
{"name":"adeelh\/pytorch-multi-class-focal-loss","full_name":"AdeelH\/pytorch-multi-class-focal-loss","topics":["pytorch","deep-learning","loss-functions","classification","neural-network","retinanet","multiclass-classification","imbalanced-classes","pytorch-implementation","implementation-of-research-paper","machine-learning"],"description":"An (unofficial) implementation of Focal Loss, as described in the RetinaNet paper, generalized to the multi-class case."}
{"name":"cwlroda\/falldetection_openpifpaf","full_name":"cwlroda\/falldetection_openpifpaf","topics":["openpifpaf","detection","human-pose-estimation","computer-vision","deep-learning","composite-fields","video-analytics","object-tracking","gpu","cpu","fall-detection"],"description":"Fall Detection using OpenPifPaf's Human Pose Estimation model"}
{"name":"vcl3d\/structurenet","full_name":"VCL3D\/StructureNet","topics":["calibration","extrinsic-calibration","volumetric-video","multi-sensor","depth-camera","kinect4azure","realsense2","kinect-sensor","kinect-camera","realsense-camera","realsense","cnn","pytorch","markerless","multi-sensor-image-fusion","rgbd"],"description":"Markerless volumetric alignment for depth sensors. Contains the code of the work \"Deep Soft Procrustes for Markerless Volumetric Sensor Alignment\" (IEEE VR 2020). "}
{"name":"karol-g\/gcam","full_name":"Karol-G\/Gcam","topics":["pytorch","gradcam","gradcam-plus-plus","grad-cam","guided-backpropagation","guidedgradcam","visualization","saliency","cnn-visualization","guided-grad-cam","segmentation","2d","3d","medical-imaging","gradient-visualization","gcam"],"description":"Gcam is an easy to use Pytorch library that makes model predictions more interpretable for humans.  It allows the generation of attention maps with multiple methods like Guided Backpropagation,  Grad-Cam, Guided Grad-Cam and Grad-Cam++."}
{"name":"jiangyanting\/taidi_2020_data_ming_c","full_name":"JiangYanting\/Taidi_2020_Data_Ming_C","topics":["data-mining","natural-language-processing","machine-learning","bert"],"description":"2020\u5e74\u7b2c\u516b\u5c4a\u6cf0\u8fea\u676f\u6570\u636e\u6316\u6398C\u9898\u201c\u667a\u6167\u653f\u52a1\u6587\u672c\u6316\u6398\u201d\u7279\u7b49\u5956\u4f5c\u54c1\uff08\u8bba\u6587\u4e0e\u4ee3\u7801\uff09"}
{"name":"qznan\/qiznlp","full_name":"Qznan\/QizNLP","topics":["nlp","chinese","classification","match","sequence-labeling","sequence-to-sequence","tensorflow","horovod","beam-search"],"description":"Quick run NLP in many task     \u5feb\u901f\u8fd0\u884c\u5206\u7c7b\u3001\u5e8f\u5217\u6807\u6ce8\u3001\u5339\u914d\u3001\u751f\u6210\u7b49NLP\u4efb\u52a1\u7684Tensorflow\u6846\u67b6  (\u4e2d\u6587 NLP \u652f\u6301\u5206\u5e03\u5f0f\uff09"}
{"name":"lingkai-kong\/calibrated-bert-fine-tuning","full_name":"Lingkai-Kong\/Calibrated-BERT-Fine-Tuning","topics":["calibration","language-model","uncertainty-quantification","uncertainty-estimation","bert","open-world-classification","robustness","text-classification","ood-detection","deep-learning","nlp-machine-learning","nlp"],"description":"Code for Paper: Calibrated Language Model Fine-Tuning for In- and Out-of-Distribution Data"}
{"name":"harlen520\/semantic-similarity","full_name":"Tanh-wink\/semantic-similarity","topics":["semantic","similarity","word2vec","wmd","bert"],"description":"semantic similarity\uff0c word2vec + wmd\uff0c bert+wmd\uff0c pytorch"}
{"name":"podidiving\/lgsc-for-fas-pytorch","full_name":"Podidiving\/lgsc-for-fas-pytorch","topics":[],"description":"Learning Generalized Spoof Cues for FaceAnti-spoofing reimplementation in pytorch"}
{"name":"ronmckay\/oodretrieval","full_name":"RonMcKay\/OODRetrieval","topics":["pytorch","deep-learning","semantic-segmentation","machine-learning","out-of-distribution-dectection","uncertainty","retrieval"],"description":"Detection and Retrieval of Out-of-Distribution Objects in Semantic Segmentation"}
{"name":"rasbt\/coral_pytorch","full_name":"Raschka-research-group\/coral-pytorch","topics":["deep-learning","ordinal-regression","ordinal-classification"],"description":"CORAL and CORN implementations for ordinal regression with deep neural networks."}
{"name":"crane-toolbox\/analysis-pipelines","full_name":"CRANE-toolbox\/analysis-pipelines","topics":["racism","data-visualization","data-science","hackathon","nlp","word-embedding","python3","pipenv","covid19","help-wanted","sociology","hacktoberfest","hacktoberfest2020"],"description":"Project CRANE (Crisis Racism and Narrative Evaluation) aims to support researchers and anti-racist organisations that wish to use state-of-the-art text analysis algorithms to study how specific events impact online hate speech and racist narratives. CRANE Toolbox is a Python package: once installed, the tools in CRANE are available as functions that users can use in their Python programs or directly through their terminal. CRANE targets users with basic programming but no machine learning skills."}
{"name":"aniketmaurya\/tensorflow-fastapi-starter-pack","full_name":"aniketmaurya\/tensorflow-fastapi-starter-pack","topics":["fastapi","tensorflow-web","tensorflow","machine-learning","machinelearning","swaggerui"],"description":"tensorflow web app starter pack"}
{"name":"lucidrains\/lambda-networks","full_name":"lucidrains\/lambda-networks","topics":["artificial-intelligence","deep-learning","computer-vision","attention-mechanism","attention"],"description":"Implementation of LambdaNetworks, a new approach to image recognition that reaches SOTA with less compute"}
{"name":"magicleap\/supergluepretrainednetwork","full_name":"magicleap\/SuperGluePretrainedNetwork","topics":["deep-learning","feature-matching","pose-estimation","graph-neural-networks"],"description":"SuperGlue: Learning Feature Matching with Graph Neural Networks (CVPR 2020, Oral)"}
{"name":"google-research\/tapas","full_name":"google-research\/tapas","topics":["nlp-machine-learning","question-answering","table-parsing","tensorflow"],"description":"End-to-end neural table-text understanding models."}
{"name":"dalmia\/siren","full_name":"dalmia\/siren","topics":["machine-learning","deep-learning","pytorch","activation-functions"],"description":"PyTorch implementation of Sinusodial Representation networks (SIREN)"}
{"name":"wuzhihao7788\/yolodet-pytorch","full_name":"wuzhihao7788\/yolodet-pytorch","topics":["yolov5","yolov4","ppyolo","yolov3","pytorch","object-detection","yolov5-yolov3","yolo"],"description":"reproduce the YOLO series of papers in pytorch, including YOLOv4, PP-YOLO, YOLOv5\uff0cYOLOv3, etc."}
{"name":"adobe\/stringlifier","full_name":"adobe\/stringlifier","topics":["machine-learning","python3","api","analysis","unsupervised-machine-learning","clustering","tf-idf","raw-text","pytorch","convolutional-networks","long-short-term-memory","classification"],"description":"Stringlifier is on Opensource ML Library for detecting random strings in raw text. It can be used in sanitising logs, detecting accidentally exposed credentials and as a pre-processing step in unsupervised ML-based analysis of application text data."}
{"name":"fsondej\/autocorrect","full_name":"filyp\/autocorrect","topics":["autocorrection","spelling","spellchecker","levenshtein-distance","python","english","polish","turkish","ukrainian","russian","multilingual","multilanguage","spanish","nlp","spelling-corrector","autocorrect","languages","czech","portuguese","ocr"],"description":"Spelling corrector in python"}
{"name":"searchableai\/kitanaqa","full_name":"searchableai\/KitanaQA","topics":["nlp","natural-language-processing","pytorch","adversarial-attacks","adversarial-training","data-augmentation","ml-automation","question-answering","bert","transformer"],"description":"KitanaQA: Adversarial training and data augmentation for neural question-answering models"}
{"name":"mdiephuis\/simclr","full_name":"mdiephuis\/SimCLR","topics":["pytorch","simclr","contrastive-learning","representation-learning","unsupervised-learning"],"description":"Pytorch implementation of \"A Simple Framework for Contrastive Learning of Visual Representations\""}
{"name":"hellonlp\/sentiment_analysis_albert","full_name":"hellonlp\/sentiment-analysis","topics":["text-classification","tensorflow","text-cnn","sentiment-analysis","bert","albert","cnn","textcnn"],"description":"\u60c5\u611f\u5206\u6790\u3001\u6587\u672c\u5206\u7c7b\u3001\u8bcd\u5178\u3001bayes\u3001sentiment analysis\u3001TextCNN\u3001classification\u3001tensorflow\u3001BERT\u3001CNN\u3001text classification"}
{"name":"tsafavi\/codex","full_name":"tsafavi\/codex","topics":["knowledge-graph","link-prediction","knowledge-graph-embeddings","triple-classification","wikidata","wikipedia","nlp","knowledge-representation","knowledge-representation-learning","knowledge-representation-reasoning","knowledge-base"],"description":"CoDEx: A set of knowledge graph Completion Datasets Extracted from Wikidata and Wikipedia"}
{"name":"ternaus\/check_orientation","full_name":"ternaus\/check_orientation","topics":["deep-learning","image-classification","orientation-detection","computer-vision"],"description":"Model to check if image was rotated by 90, 180, 270 degrees."}
{"name":"xuxingya\/tf2crf","full_name":"xuxingya\/tf2crf","topics":[],"description":"CRF layer for tensorflow 2 keras"}
{"name":"pluslabnlp\/geanet-biomed-event-extraction","full_name":"PlusLabNLP\/GEANet-BioMed-Event-Extraction","topics":["event-extraction","biomedical","covid-19","cord-19","natural-language-processing","bert","multitask-learning","deep-learning"],"description":"Code for the paper Biomedical Event Extraction with Hierarchical Knowledge Graphs"}
{"name":"yaofanguk\/video-subtitle-extractor","full_name":"YaoFANGUK\/video-subtitle-extractor","topics":["deep-learning","ocr","subtitles","srt","hardsub","extract","ripper","subrip"],"description":"\u89c6\u9891\u786c\u5b57\u5e55\u63d0\u53d6\uff0c\u751f\u6210srt\u6587\u4ef6\u3002\u65e0\u9700\u7533\u8bf7\u7b2c\u4e09\u65b9API\uff0c\u672c\u5730\u5b9e\u73b0\u6587\u672c\u8bc6\u522b\u3002\u57fa\u4e8e\u6df1\u5ea6\u5b66\u4e60\u7684\u89c6\u9891\u5b57\u5e55\u63d0\u53d6\u6846\u67b6\uff0c\u5305\u542b\u5b57\u5e55\u533a\u57df\u68c0\u6d4b\u3001\u5b57\u5e55\u5185\u5bb9\u63d0\u53d6\u3002A GUI tool for extracting hard-coded subtitle (hardsub) from videos and generating srt files. "}
{"name":"sforaidl\/playground","full_name":"SforAiDl\/Playground","topics":["python","machine-learning","deep-learning","computer-vision","pytorch","sports-analytics"],"description":"A python library consisting of pipelines for visual analysis of different sports using Computer Vision and Deep Learning."}
{"name":"samyak0210\/saliency","full_name":"samyak0210\/saliency","topics":["pytorch-implementation","saliency-prediction","simplenet","saliency-models"],"description":"Pytorch Implementation of the paper - \"Tidying Deep Saliency Prediction Architectures\""}
{"name":"gpauloski\/kfac_pytorch","full_name":"gpauloski\/kfac-pytorch","topics":["pytorch","optimizer","kfac","distributed","second-order-optimization","deep-learning"],"description":"Distributed K-FAC Preconditioner for PyTorch"}
{"name":"ifnspaml\/cil_segmentation","full_name":"ifnspaml\/CIL_Segmentation","topics":["semantic-segmentation","incremental-learning","neural-network","deep-learning","erfnet"],"description":"[ITSC 2020] Class-Incremental Learning for Semantic Segmentation Re-Using Neither Old Data Nor Old Labels"}
{"name":"skycrapers\/tecogan-pytorch","full_name":"skycrapers\/TecoGAN-PyTorch","topics":["pytorch","super-resolution","tecogan","frvsr","computer-vision","video-processing"],"description":"A PyTorch Reimplementation of TecoGAN: Temporally Coherent GAN for Video Super-Resolution"}
{"name":"openai\/jukebox","full_name":"openai\/jukebox","topics":["paper","audio","music","pytorch","generative-model","vq-vae","transformer"],"description":"Code for the paper \"Jukebox: A Generative Model for Music\""}
{"name":"jiupinjia\/skyar","full_name":"jiupinjia\/SkyAR","topics":["dynamic-sky-replacement","sky-matting","harmonization","skyar"],"description":"Official Pytorch implementation of the preprint paper \"Castle in the Sky: Dynamic Sky Replacement and Harmonization in Videos\", in arXiv:2010.11800."}
{"name":"zalandoresearch\/pytorch-ts","full_name":"zalandoresearch\/pytorch-ts","topics":["pytorch","time-series","probabilistic","deepar","lstnet","n-beats"],"description":"PyTorch based Probabilistic Time Series forecasting framework based on GluonTS backend"}
{"name":"swz30\/cycleisp","full_name":"swz30\/CycleISP","topics":["image-denoising","data-synthesis","camera-imaging-pipeline","low-level-vision","cycleisp","computer-vision","image-restoration","pytorch","rgb2raw","raw2rgb","cvpr2020"],"description":"[CVPR 2020--Oral] CycleISP: Real Image Restoration via Improved Data Synthesis"}
{"name":"appleholic\/multiband_melgan","full_name":"AppleHolic\/multiband_melgan","topics":["multiband-melgan","pytorch","audio","neural-vocoder"],"description":"An unofficial implementation of https:\/\/arxiv.org\/abs\/2005.05106"}
{"name":"z-zheng\/farseg","full_name":"Z-Zheng\/FarSeg","topics":["semantic-segmentation","deep-learning","computer-vision","remote-sensing","high-resolution-rs-image","object-segmentation","convolutional-neural-networks"],"description":"Foreground-Aware Relation Network for Geospatial Object Segmentation in High Spatial Resolution Remote Sensing Imagery (CVPR 2020) https:\/\/arxiv.org\/pdf\/2011.09766.pdf"}
{"name":"jiupinjia\/deep-adversarial-decomposition","full_name":"jiupinjia\/Deep-adversarial-decomposition","topics":[],"description":"Pytorch implementation of the paper: \"A Unified Framework for Separating Superimposed Images\", in CVPR 2020."}
{"name":"bojone\/cdial-gpt-tf","full_name":"bojone\/CDial-GPT-tf","topics":[],"description":"\u7528bert4keras\u52a0\u8f7dCDial-GPT"}
{"name":"smaranjitghose\/artcv","full_name":"smaranjitghose\/ArtCV","topics":["python","opencv","image-processing","art","slop-20","slop","deep-learning","hacktoberfest","jwoc","swoc2021","dwoc2020"],"description":"Randomly Exploring Computer Vision techniques to create eye catching art out of plain boring images!"}
{"name":"sapienzanlp\/ewiser","full_name":"SapienzaNLP\/ewiser","topics":["word-sense-disambiguation","natural-language-processing","nlp","wsd"],"description":"A Word Sense Disambiguation system integrating implicit and explicit external knowledge."}
{"name":"nvidia-ai-iot\/ros2_deepstream","full_name":"NVIDIA-AI-IOT\/ros2_deepstream","topics":["ros2","eloquent","jetson","robotics","real-time","deepstream","deep-learning"],"description":"ROS 2 package for NVIDIA DeepStream applications on Jetson Platforms "}
{"name":"imed-lab\/cs-net","full_name":"iMED-Lab\/CS-Net","topics":["deep-learning","pytorch","segmentation","medical-imaging"],"description":"CS-Net (MICCAI 2019) and CS2-Net (MedIA 2020)"}
{"name":"dinghanshen\/cutoff","full_name":"dinghanshen\/Cutoff","topics":["nlp-machine-learning","deep-learning","huggingface-transformers","fairseq","augmentation"],"description":"The source code for the Cutoff data augmentation approach proposed in this paper: \"A Simple but Tough-to-Beat Data Augmentation Approach for Natural Language Understanding and Generation\". "}
{"name":"mrtkp9993\/deeplearningexamples","full_name":"mrtkp9993\/DeepLearningExamples","topics":["deep-learning","deep-neural-networks","machine-learning","artificial-intelligence","data-science","regression","classification","python3","dense-neural-network","convolutional-neural-networks","deep-learning-example","deeplearningexamples","colab","python","tensorflow","keras"],"description":"Deep learning examples with Python and Tensorflow & Keras."}
{"name":"elmar999\/snake-reinforcement-dnn","full_name":"Elmar999\/snake-reinforcement-DNN","topics":["neural-network","snake-game","deep-reinforcement-learning","machine-learning","deep-learning"],"description":"Developing a deep neural network to play a snake game"}
{"name":"noahs-ark\/groc","full_name":"Noahs-ARK\/GroC","topics":[],"description":"Pytorch implementation of models described in \"Grounded compositional outputs for adaptive language modeling\", EMNLP 2020."}
{"name":"chunjingxiao\/deepseg","full_name":"ChunjingXiao\/DeepSeg","topics":["activity-segmentation","activity-recognition","wifi-channel-state-information","deep-learning"],"description":"A deep learning-based activity segmentation framework for activity recognition using WiFi  Channel State Information (CSI)."}
{"name":"ximilar-com\/tf-metric-learning","full_name":"Ximilar-com\/tf-metric-learning","topics":["metric-learning","computer-vision","similarity-search","image-retrieval","machine-learning","python","tensorflow","deep-learning","deep-metric-learning","visual-search"],"description":"Minimalistic TensorFlow2+ deep metric\/similarity learning library with loss functions, miners, and utils as embedding projector."}
{"name":"alphajia\/pytorch-faster-rcnn","full_name":"AlphaJia\/pytorch-faster-rcnn","topics":["faster-rcnn","pytorch","detection"],"description":"pytorch based implementation faster rcnn"}
{"name":"nianticlabs\/stereo-from-mono","full_name":"nianticlabs\/stereo-from-mono","topics":["deep-learning","deeplearning","stereo-matching","stereo","stereo-algorithms","monodepth","megadepth","monocular-depth-estimation","single-image-depth-prediction","depth-estimation"],"description":"[ECCV 2020] Learning stereo from single images using monocular depth estimation networks"}
{"name":"swz30\/mirnet","full_name":"swz30\/MIRNet","topics":["image-denoising","super-resolution","image-enhancement","image-restoration","low-level-vision","computer-vision","multi-resolution-streams","attention-mechanism","pytorch","eccv2020"],"description":"[ECCV 2020] Learning Enriched Features for Real Image Restoration and Enhancement. SOTA results for image denoising, super-resolution, and image enhancement."}
{"name":"zhmiao\/opencompounddomainadaptation-ocda","full_name":"zhmiao\/OpenCompoundDomainAdaptation-OCDA","topics":["open-compound-domain-adaptation","pytorch-implementation","computer-vision","domain-adaptation","ocda","cvpr2020","deep-learning"],"description":"Pytorch implementation for \"Open Compound Domain Adaptation\" (CVPR 2020 ORAL)"}
{"name":"tobran\/df-gan","full_name":"tobran\/DF-GAN","topics":["generative-adversarial-network","text-to-image"],"description":" A Simple and Effective Baseline for Text-to-Image Synthesis (CVPR2022 oral)"}
{"name":"spijkervet\/byol","full_name":"Spijkervet\/BYOL","topics":["byol","pytorch","self-supervised-learning","deep-learning"],"description":"Bootstrap Your Own Latent: A New Approach to Self-Supervised Learning"}
{"name":"intel-isl\/deeplagrangianfluids","full_name":"isl-org\/DeepLagrangianFluids","topics":["deeplearning","fluids","simulation","convolutional-neural-networks","convnet","cnn"],"description":"Code repository for \"Lagrangian Fluid Simulation with Continuous Convolutions\", ICLR 2020."}
{"name":"lucidrains\/global-self-attention-network","full_name":"lucidrains\/global-self-attention-network","topics":["artificial-intelligence","attention-mechanism","attention","self-attention","image-classification"],"description":"A Pytorch implementation of Global Self-Attention Network, a fully-attention backbone for vision tasks"}
{"name":"richermans\/gpv","full_name":"RicherMans\/GPV","topics":["voice-activity-detection","speech-activity-detection","sound-activity","noise-robust-asr","machine-learning","pytorch"],"description":"Repository for our Interspeech2020 general-purpose voice activity detection (GPVAD) paper"}
{"name":"grimoire\/torch2trt_dynamic","full_name":"grimoire\/torch2trt_dynamic","topics":[],"description":"A pytorch to tensorrt convert with dynamic shape support"}
{"name":"stefandenn3r\/unsupervised_anomaly_detection_brain_mri","full_name":"StefanDenn3r\/Unsupervised_Anomaly_Detection_Brain_MRI","topics":["deep-learning","unsupervised-learning","anomaly-detection","segmentation","mri","gan","autoencoder","variational-autoencoder"],"description":"Autoencoders for Unsupervised Anomaly Segmentation in Brain MR Images: A Comparative Study"}
{"name":"okkteam\/transformer-transducer","full_name":"oshindow\/Transformer-Transducer","topics":[],"description":"A pytorch_lightning reimplementation of the Transducer module from ESPnet."}
{"name":"4paradigm\/sparksqlwithfedb","full_name":"4paradigm\/DemoApps","topics":["sql","feature-engineering","sparksql","machine-learning","tensorflow","lightgbm","realtime","realtime-decision"],"description":"demo applications that show how to deploy offline feature engineering solutions to online in one minute with fedb and nativespark"}
{"name":"saro00\/dgn","full_name":"Saro00\/DGN","topics":["graph-machine-learning","graph-neural-networks","pytorch","dgl","spectral-methods"],"description":"Implementation of Directional Graph Networks in PyTorch and DGL"}
{"name":"tuvovan\/rfdnet-imagesuperresolution","full_name":"tuvovan\/RFDNet-ImageSuperResolution","topics":["image-super-resolution","keras","tensorflow","tensorflow2","computational-imaging","image-enhancement","computer-vision","deep-learning","convolutional-neural-networks"],"description":"Keras Implementation of the paper Residual Feature Distillation Network for Lightweight Image Super-Resolution"}
{"name":"itchyhiker\/iris_landmarks_pytorch","full_name":"digital-nomad-cheng\/Iris_Landmarks_PyTorch","topics":["iris-dataset","iris-recognition","iris-landmarks","computer-vision","deep-learning","ncnn"],"description":"Iris landmarks localization"}
{"name":"liangheming\/retinanetv1","full_name":"liangheming\/retinanetv1","topics":[],"description":"pytorch implement of retinanet,37.4 mAp(coco) at 640px(max side) ,44.24fps(RTX2080TI)"}
{"name":"zyx423\/gae_vgae","full_name":"zyx423\/Graph-Embeddding","topics":["gae","graphembedding","graph-neural-networks"],"description":"Reimplementation of Graph Embedding methods by Pytorch. "}
{"name":"liangheming\/free_anchorv1","full_name":"liangheming\/free_anchorv1","topics":[],"description":"pytorch implement of FreeAnchor(not strict),640 px(max side),39.5mAP on COCO,43.18fps(RTX 2080TI)"}
{"name":"stefanpantic\/asr","full_name":"stefanpantic\/asr","topics":["machine-learning","automatic-speech-recognition","jasper","quartznet","asr","neural-networks","python","tensorflow","librispeech","common-voice"],"description":"Automatic speech recognition using neural networks"}
{"name":"deeplabcut\/deeplabcut-core","full_name":"DeepLabCut\/DeepLabCut-core","topics":["deeplabcut","deep-learning","pose-estimation","pose-tracking","behavior-analysis"],"description":"Headless DeepLabCut (no GUI support)"}
{"name":"aladdinpersson\/machine-learning-collection","full_name":"aladdinpersson\/Machine-Learning-Collection","topics":["pytorch","pytorch-implementation","pytorch-tutorial","pytorch-gan","pytorch-examples","tensorflow2","tensorflow-tutorials","tensorflow-examples","machine-learning","machine-learning-algorithms","pytorch-tutorials"],"description":"A resource for learning about Machine learning & Deep Learning"}
{"name":"mvig-sjtu\/alphaction","full_name":"MVIG-SJTU\/AlphAction","topics":["action-detection","spatio-temporal-action-localization","alphaction","alpha-action","action-recognition","state-of-the-art","pytorch","torch","gpu","ava","demo-video","ava-dataset","model-zoo"],"description":"Spatio-Temporal Action Localization System"}
{"name":"mit-han-lab\/torchsparse","full_name":"mit-han-lab\/torchsparse","topics":["pytorch","point-cloud","acceleration"],"description":"[MLSys'22] TorchSparse: Efficient Point Cloud Inference Engine"}
{"name":"hideunderbush\/ui2i_via_stylegan2","full_name":"HideUnderBush\/UI2I_via_StyleGAN2","topics":["stylegan2","image-translation","pytorch"],"description":"Unsupervised image-to-image translation method via pre-trained StyleGAN2 network"}
{"name":"asyml\/vision-transformer-pytorch","full_name":"asyml\/vision-transformer-pytorch","topics":["vision-transformer","pytorch"],"description":"Pytorch version of Vision Transformer (ViT) with pretrained models. This is part of CASL (https:\/\/casl-project.github.io\/) and ASYML project."}
{"name":"declare-lab\/dialogue-understanding","full_name":"declare-lab\/dialogue-understanding","topics":["dialogue-systems","dialogue-understanding","emotion-recognition-in-conversation","dialogue-act","conversational-ai","conversational-agents","bert-embeddings","bert","pretrained-models","emotion-recognition","emotion-analysis","natural-language-processing","natural-language-understanding","lstm","pytorch","sentiment-analysis","adversarial-attacks","explainable-ai","utterance-level-dialogue","dialogue"],"description":"This repository contains PyTorch implementation for the baseline models from the paper Utterance-level Dialogue Understanding: An Empirical Study"}
{"name":"leaderj1001\/lambdanetworks","full_name":"leaderj1001\/LambdaNetworks","topics":["lambda-networks","self-attention","image-classification","pytorch","lambda-convolution"],"description":"Implementing Lambda Networks using Pytorch"}
{"name":"cdjhz\/multigen","full_name":"cdjhz\/multigen","topics":["pytorch","kg","nlg"],"description":"EMNLP2020 - Language Generation with Multi-hop Reasoning on Commonsense Knowledge Graph"}
{"name":"dreaminvoker\/gain","full_name":"DreamInvoker\/GAIN","topics":["relation-extraction","natural-language-processing","graph-neural-networks","document-level-relation-extraction","dgl"],"description":"Source code for EMNLP 2020 paper: Double Graph Based Reasoning for Document-level Relation Extraction"}
{"name":"hhousen\/docsum","full_name":"HHousen\/DocSum","topics":["machine-learning","nlp","summarization","automatic-summarization","python","pdf","xml-parser","abstractive-summarization","abstractive-text-summarization","text-summarization","bart","xml","transformers"],"description":"A tool to automatically summarize documents abstractively using the BART or PreSumm Machine Learning Model."}
{"name":"mccreezhao\/qamface","full_name":"MccreeZhao\/QAMFace","topics":[],"description":"Pytorch implementation of Quadratic Additive Angular Margin Loss for Face Recognition"}
{"name":"sjleo\/dmad","full_name":"SJLeo\/DMAD","topics":[],"description":"Pytorch implementation of our paper accepted by IEEE TMM, 2022 --Learning Efficient GANs for Image Translation via Differentiable Masks and co-Attention Distillation"}
{"name":"alexandrosstergiou\/squeeze-and-recursion-temporal-gates","full_name":"alexandrosstergiou\/Squeeze-and-Recursion-Temporal-Gates","topics":["action-recognition","activity-recognition","3d-cnn","spatio-temporal-modeling","pytorch","recursion-temporal-gates","hacs","kinetics-datasets","moments-in-time"],"description":"Code for : [Pattern Recognit. Lett. 2021] \"Learn to cycle: Time-consistent feature discovery for action recognition\" and [IJCNN 2021] \"Multi-Temporal Convolutions for Human Action Recognition in Videos\"."}
{"name":"directgroup\/direct","full_name":"NKI-AI\/direct","topics":["pytorch","deep-learning","mri-reconstruction","inverse-problems","medical-imaging","fastmri-challenge"],"description":"Deep learning framework for MRI reconstruction"}
{"name":"yuweihao\/reclor","full_name":"yuweihao\/reclor","topics":["nlp","natural-language-processing","natural-language-understanding","machine-reading-comprehension"],"description":"Code for \"ReClor: A Reading Comprehension Dataset Requiring Logical Reasoning\" (ICLR 2020)"}
{"name":"nitin-rathi\/hybrid-snn-conversion","full_name":"nitin-rathi\/hybrid-snn-conversion","topics":["pytorch","snn","ann-snn-conversion","deep-learning","backpropagation-algorithm","spiking-neural-networks"],"description":"Training spiking networks with hybrid ann-snn conversion and spike-based backpropagation"}
{"name":"ipapakis\/gcnnmatch","full_name":"IPapakis\/GCNNMatch","topics":["multi-object-tracking","graph-neural-networks","deep-learning","computer-vision"],"description":"This repository is the official code implementation of the paper GCNNMatch: Graph Convolutional Neural Networks for Multi-Object Tracking via Sinkhorn Normalization."}
{"name":"toriving\/text-classification-transformers","full_name":"toriving\/text-classification-transformers","topics":["huggingface-transformers","transformers","text-classification","deep-learning","pytorch","korean","bert-model","kobert","huggingface-models"],"description":"Easy text classification for everyone : Bert based models via Huggingface transformers (KR \/ EN)"}
{"name":"bojone\/cpm_lm_bert4keras","full_name":"bojone\/CPM_LM_bert4keras","topics":[],"description":"\u5728bert4keras\u4e0b\u52a0\u8f7dCPM_LM\u6a21\u578b"}
{"name":"wuaalb\/pytorch_template_audio","full_name":"wuaalb\/pytorch_template_audio","topics":[],"description":"Basic Pytorch template for audio projects"}
{"name":"sap-samples\/acl2020-commonsense","full_name":"SAP-samples\/acl2020-commonsense","topics":["sample","sample-code","machine-learning","nlp","commonsense-reasoning","deep-learning","self-supervised","contrastive"],"description":"Source code for paper on commonsense reasoning for 2020 Annual Conference of the Association for Computational Linguistics (ACL) 2020."}
{"name":"tibhannover\/cross-modal_entity_consistency","full_name":"TIBHannover\/cross-modal_entity_consistency","topics":["cross-modal-consistency","cross-modal-entity-verification","multimodal-retrieval","image-repurposing-detection","deep-learning"],"description":"This repository contains the dataset and source files to reproduce the results in the publication M\u00fcller-Budack et al. 2021: \"Multimodal news analytics using measures of cross-modal entity and context consistency\", In: International Journal on Multimedia Information Retrieval (IJMIR), Vol. 10, Art. no. 2, 2021."}
{"name":"engineeringsoftware\/roosterize","full_name":"EngineeringSoftware\/roosterize","topics":["coq","machine-learning","name-generation","pytorch","neural-networks","serapi","mathcomp","deep-learning"],"description":"Tool for suggesting lemma names in Coq verification projects"}
{"name":"mindslab-ai\/faceshifter","full_name":"mindslab-ai\/faceshifter","topics":["pytorch","pytorch-lightning","face-swapping"],"description":"Unofficial PyTorch Implementation for FaceShifter (https:\/\/arxiv.org\/abs\/1912.13457)"}
{"name":"antao97\/dgcnn.pytorch","full_name":"antao97\/dgcnn.pytorch","topics":["point-cloud","classification","segmentation","pytorch"],"description":"A PyTorch implementation of Dynamic Graph CNN for Learning on Point Clouds (DGCNN)"}
{"name":"jiangxiluning\/master-tf","full_name":"jiangxiluning\/MASTER-TF","topics":["ocr","ocr-recognition","transformer","deep-learning","cv","scene-text-recognition"],"description":"MASTER"}
{"name":"jittor\/gan-jittor","full_name":"Jittor\/JGAN","topics":["gan","generative-adversarial-network","deep-learning","gans","jittor"],"description":"JGAN model zoo supports 27 kinds of mainstream GAN models with high speed for jittor."}
{"name":"jacobkrantz\/vln-ce","full_name":"jacobkrantz\/VLN-CE","topics":["ai","computer-vision","robotics","deep-learning","research","python"],"description":"Vision-and-Language Navigation in Continuous Environments using Habitat"}
{"name":"nicklashansen\/policy-adaptation-during-deployment","full_name":"nicklashansen\/policy-adaptation-during-deployment","topics":["reinforcement-learning","deep-reinforcement-learning","pytorch","dm-control","mujoco","gym","deep-learning","robotics","self-supervised-learning"],"description":"Training code and evaluation benchmarks for the \"Self-Supervised Policy Adaptation during Deployment\" paper."}
{"name":"danielhcarranza\/ml-production-template","full_name":"DanielhCarranza\/ml-production-template","topics":["deep-learning","deep-learning-production"],"description":"This codebase is a starting point to get your Machine Learning project into Production."}
{"name":"thunlp\/re-context-or-names","full_name":"thunlp\/RE-Context-or-Names","topics":["relation-extraction","pytorch","bert","contrastive-learning","pretrain"],"description":"Bert-based models(BERT, MTB, CP) for relation extraction. "}
{"name":"sinaahmadi\/klpt","full_name":"sinaahmadi\/klpt","topics":["kurdish-language-processing","natural-language-processing","kurdish","toolkit","kurdish-tokenization","kurdish-stemming","kurdish-oss","less-resource-languages","language-technology"],"description":"The Kurdish Language Processing Toolkit"}
{"name":"doyosae\/deep_complex_unet","full_name":"dirichlet1223\/Phase-aware-Deep-Complex-UNet","topics":["deep-learning","speech-enhancement","complex-networks"],"description":"(NOT Official) Implementation DC-UNet (ICLR 2019)"}
{"name":"zhanghang1989\/resnest","full_name":"zhanghang1989\/ResNeSt","topics":["deep-learning","resnet","resnest","pytorch","detectron-models","split-attention-networks"],"description":"ResNeSt: Split-Attention Networks"}
{"name":"taesungp\/contrastive-unpaired-translation","full_name":"taesungp\/contrastive-unpaired-translation","topics":["pytorch","computervision","deeplearning","cyclegan","image-generation","computer-vision","computer-graphics","image-manipulation","gans","generative-adversarial-network"],"description":"Contrastive unpaired image-to-image translation, faster and lighter training than cyclegan (ECCV 2020, in PyTorch)"}
{"name":"idiap\/fast-transformers","full_name":"idiap\/fast-transformers","topics":[],"description":"Pytorch library for fast transformer implementations"}
{"name":"sforaidl\/genrl","full_name":"SforAiDl\/genrl","topics":["reinforcement-learning-algorithms","reinforcement-learning","machine-learning","gym","openai","python","data-science","pytorch","algorithm-implementations","benchmarking","deep-learning","neural-network","hacktoberfest"],"description":"A PyTorch reinforcement learning library for generalizable and reproducible algorithm implementations with an aim to improve accessibility in RL"}
{"name":"alibaba-miil\/asl","full_name":"Alibaba-MIIL\/ASL","topics":["multi-label-classification","loss","detection","classification"],"description":"Official Pytorch Implementation of: \"Asymmetric Loss For Multi-Label Classification\"(ICCV, 2021) paper"}
{"name":"clovaai\/generative-evaluation-prdc","full_name":"clovaai\/generative-evaluation-prdc","topics":["deep-learning","generative-adversarial-network","evaluation-metrics","precision","recall","machine-learning","generative-model","fidelity","diversity","evaluation","icml","icml-2020","icml2020"],"description":"Code base for the precision, recall, density, and coverage metrics for generative models. ICML 2020."}
{"name":"rajcscw\/nlp-gym","full_name":"rajcscw\/nlp-gym","topics":["nlp-tasks","rl-agents","gym-environment","nlp"],"description":"NLPGym - A toolkit to develop RL agents to solve NLP tasks."}
{"name":"bubbliiiing\/retinanet-keras","full_name":"bubbliiiing\/retinanet-keras","topics":[],"description":"\u8fd9\u662f\u4e00\u4e2aretinanet-keras\u7684\u6e90\u7801\uff0c\u53ef\u4ee5\u7528\u4e8e\u8bad\u7ec3\u81ea\u5df1\u7684\u6a21\u578b\u3002"}
{"name":"lxc86739795\/human_vehicle_parsing_platform","full_name":"lxc86739795\/human_vehicle_parsing_platform","topics":["human","person","vehicle","parsing","pytorch","codebase","segmentation","veri776","vehicleid","veri-wild"],"description":"A pytorch codebase for human parsing and vehicle parsing "}
{"name":"tomek-l\/ai-thermometer","full_name":"tomek-l\/ai-thermometer","topics":["cnn","flir","lepton","flir-lepton","flir-lepton-purethermal","opencv","jetson-nano","nvidia-jetson"],"description":"Fever screening with IR & RGB cameras and Deep CNNs"}
{"name":"mchancan\/deepseqslam","full_name":"mchancan\/deepseqslam","topics":["slam","robotics","deep-learning","computer-vision","place-recognition","deep-neural-networks","convolutional-neural-networks","recurrent-neural-networks","autonomous-driving","navigation","deepseqslam","driving-datasets","lstm","rnn","cnn","sequential-place-recognition","sequential-place-learning","heuristic-free","high-performance-place-recognition","route-based-place-recognition"],"description":"The Official Deep Learning Framework for Robot Place Learning"}
{"name":"zengxianyu\/crfill","full_name":"zengxianyu\/crfill","topics":["inpainting","image-inpainting","gan","generative-adversarial-network","generative-adversarial-networks","pytorch","iccv2021","image-completion"],"description":"CR-Fill: Generative Image Inpainting with Auxiliary Contextual Reconstruction. ICCV 2021"}
{"name":"sayednadim\/global-and-local-attention-based-free-form-image-inpainting","full_name":"SayedNadim\/Global-and-Local-Attention-Based-Free-Form-Image-Inpainting","topics":["inpainting","attention-mechanism","generative-adversarial-network"],"description":"Official implementation of \"Global and local attention-based free-form image inpainting\""}
{"name":"liznerski\/fcdd","full_name":"liznerski\/fcdd","topics":["anomaly-detection","deep-learning","one-class-learning","xai","explanations","explainable-deepneuralnetwork","machine-learning","deep-anomaly-detection","pytorch","python","mvtec-ad"],"description":"Repository for the Explainable Deep One-Class Classification paper"}
{"name":"bubbliiiing\/pspnet-keras","full_name":"bubbliiiing\/pspnet-keras","topics":[],"description":"\u8fd9\u662f\u4e00\u4e2apspnet-keras\u7684\u6e90\u7801\uff0c\u53ef\u4ee5\u7528\u4e8e\u8bad\u7ec3\u81ea\u5df1\u7684\u6a21\u578b\u3002"}
{"name":"jackaduma\/cyclegan-vc3","full_name":"jackaduma\/CycleGAN-VC3","topics":["voice-conversion","gan","pytorch","voice-cloning","cyclegan","cyclegan-vc3","cyclegan-vc","cyclegan-vc2","pytorch-implementation"],"description":"Voice Conversion by CycleGAN (\u8bed\u97f3\u514b\u9686\/\u8bed\u97f3\u8f6c\u6362)\uff1aCycleGAN-VC3"}
{"name":"pomonam\/self-tuning-networks","full_name":"pomonam\/Self-Tuning-Networks","topics":["hyperparameter-optimization","bilevel-optimization","self-tuning-network","pytorch","neurips-2020","deep-learning"],"description":"PyTorch implementation of \"STNs\" and \"Delta-STNs\"."}
{"name":"dyfine\/sphericalembedding","full_name":"Dyfine\/SphericalEmbedding","topics":["deep-metric-learning"],"description":"official pytorch implementation of \"Deep Metric Learning with Spherical Embedding\", NeurIPS 2020"}
{"name":"awslabs\/sagemaker-deep-demand-forecast","full_name":"awslabs\/sagemaker-deep-demand-forecast","topics":["gluonts","time-series","aws-sagemaker","demand-forecast","deep-learning","forecasting"],"description":"Using Deep Learning for Demand Forecasting with Amazon SageMaker"}
{"name":"xxradon\/onnxtocaffe","full_name":"xxradon\/ONNXToCaffe","topics":["pytorch","caffe","onnx"],"description":"pytorch -> onnx -> caffe, pytorch to caffe, or other deep learning framework to onnx and onnx to caffe."}
{"name":"pratogab\/batch-transforms","full_name":"pratogab\/batch-transforms","topics":["pytorch","batch","transform","transforms","image","images","torchvision","normalize","randomcrop","randomhorizontalflip","totensor"],"description":"Batch equivalent of PyTorch Transforms."}
{"name":"tuvovan\/mirnet---keras","full_name":"tuvovan\/MIRNet-Keras","topics":["image-processing","denoising","super-resolution","sota","deep-learning","neural-network","computer-vision","low-light-image-enhancement","resolution","artificial-intelligence"],"description":"Keras Implementation of MIRNet - SoTA in Image Denoising, Super Resolution and Image Enhancement - CVPR 2020"}
{"name":"him4318\/transformer_ocr","full_name":"him4318\/Transformer-ocr","topics":["handwritten-text-recognition","transformer","google-colab","ocr-recognition","deep-learning","bentham","pytorch","detr","iam","python","ocr","nlp","htr"],"description":"Handwritten text recognition using transformers."}
{"name":"xuyingjie521\/xbert","full_name":"xuyingjie521\/xbert","topics":["tensorflow2","bert","variants","albert","albert-chinese","roberta"],"description":"\u57fa\u4e8etensorflow2.x\u5b9e\u73b0bert\u53ca\u5176\u53d8\u4f53\u7684\u9884\u8bad\u7ec3\u6a21\u578b\u52a0\u8f7d\u67b6\u6784"}
{"name":"lxucs\/coref-hoi","full_name":"lxucs\/coref-hoi","topics":["coreference-resolution","higher-order","nlp","pytorch"],"description":"PyTorch implementation of the end-to-end coreference resolution model with different higher-order inference methods."}
{"name":"williamcchuang\/graphlime","full_name":"WilliamCCHuang\/GraphLIME","topics":["graph-neural-networks","graph-algorithms","explainable-ai","open-source"],"description":"This is a Pytorch implementation of GraphLIME"}
{"name":"doccano\/auto-labeling-pipeline","full_name":"doccano\/auto-labeling-pipeline","topics":["doccano","machine-learning","natural-language-processing","annotation-tool","python","data-labeling","text-annotation"],"description":"doccano auto labeling pipeline helps doccano to annotate a document automatically."}
{"name":"ml4ai\/mliis","full_name":"ml4ai\/mliis","topics":["meta-learning","image-segmentation","maml","tensorflow","machine-learning"],"description":"Code for meta-learning initializations for image segmentation"}
{"name":"tanmoyio\/mudkip","full_name":"tanmoyio\/GradMan","topics":["deep-learning","deep-neural-networks","autograd"],"description":"Baby deep learning library\ud83d\udc23"}
{"name":"d-li14\/lambda.pytorch","full_name":"d-li14\/lambda.pytorch","topics":["lambda-network","attention","pytorch","iclr2021","imagenet","pre-trained-model"],"description":"PyTorch implementation of Lambda Network and pretrained Lambda-ResNet"}
{"name":"dbtmpl\/opmask","full_name":"dbtmpl\/OPMask","topics":["instance-segmentation","partially-supervised","pytorch","object-mask-prior","iccv2021"],"description":"Official implementation of the paper 'Prior to Segment: Foreground Cues for Weakly Annotated Classes in Partially Supervised Instance Segmentation' (ICCV 2021)"}
{"name":"krumiaa\/mindmaker","full_name":"krumiaa\/MindMaker","topics":["reinforcement-learning","learning-agent","dqn","unreal-engine","ue4","machine-learning","artificial-intelligence","neural-network","openai","gym","wrapper","deep-learning","ai"],"description":"MindMaker UE4 Machine Learning Toolkit "}
{"name":"lukecavabarrett\/pna","full_name":"lukecavabarrett\/pna","topics":["graph-machine-learning","graph-neural-networks","pytorch","dgl","pytorch-geometric"],"description":"Implementation of Principal Neighbourhood Aggregation for Graph Neural Networks in PyTorch, DGL and PyTorch Geometric"}
{"name":"github-luffy\/pfld_68points_pytorch","full_name":"github-luffy\/PFLD_68points_Pytorch","topics":["facial-landmarks"],"description":"Implementation of PFLD For 68 Facial Landmarks By Pytorch"}
{"name":"hellloxiaotian\/lesrcnn","full_name":"hellloxiaotian\/LESRCNN","topics":["image-super-resolution","cnn","cnn-pytorch","lightweight-enhanced-network","enhancement-and-compression","information-refinement","image-processing","deep-learning","low-level-vision","python27"],"description":"Lightweight Image Super-Resolution with Enhanced CNN (Knowledge-Based Systems,2020)"}
{"name":"tetratrio\/stylegan2_pytorch","full_name":"adriansahlman\/stylegan2_pytorch","topics":[],"description":"A Pytorch implementation of StyleGAN2"}
{"name":"ha0tang\/bigraphgan","full_name":"Ha0Tang\/BiGraphGAN","topics":["bmvc","image-generation","graph","bipartite-graphs","person","person-image-generation","selectiongan","pytorch","deepfashion","bmvc20"],"description":"[BMVC 2020 Oral] Bipartite Graph Reasoning GANs for Person Image Generation"}
{"name":"clovaai\/frostnet","full_name":"clovaai\/frostnet","topics":["deep-learning","pytorch","quantization","quantization-aware-training","classification","object-detection","semantic-segmentation","style-transfer","optimizers","computer-vision","post-quantization","quantization-efficient-network","network-architecture","int8-quantization"],"description":"FrostNet: Towards Quantization-Aware Network Architecture Search"}
{"name":"mcg-nju\/fcot","full_name":"MCG-NJU\/FCOT","topics":["deep-learning","pytorch","tracking"],"description":"[CVIU] Fully Convolutional Online Tracking"}
{"name":"neuspell\/neuspell","full_name":"neuspell\/neuspell","topics":["spelling-correction","spell-checkers","spellcheck","neural-models","neural-spell-check","spell-checker","nlp","spell-correction","dataset","spell-correction-datasets","ngrams"],"description":"NeuSpell: A Neural Spelling Correction Toolkit"}
{"name":"solacex\/ccm","full_name":"Solacex\/CCM","topics":["pytorch","eccv2020","domain-adaptation","semantic-segmentation"],"description":"[ECCV2020] Content-Consistent Matching for Domain Adaptive Semantic Segmentation"}
{"name":"sbarratt\/torch_interpolations","full_name":"sbarratt\/torch_interpolations","topics":[],"description":"Interpolation routines in Pytorch."}
{"name":"yistlin\/fragmentvc","full_name":"yistLin\/FragmentVC","topics":["voice-conversion","any-to-any","transformer","attention-mechanism","concatenative","pytorch"],"description":"Any-to-any voice conversion by end-to-end extracting and fusing fine-grained voice fragments with attention"}
{"name":"shengyuh\/overlappredator","full_name":"prs-eth\/OverlapPredator","topics":["point-cloud","registration","3dvision","transformer","attention-mechanism"],"description":"[CVPR 2021, Oral] PREDATOR: Registration of 3D Point Clouds with Low Overlap. "}
{"name":"zhengyiluo\/meva","full_name":"ZhengyiLuo\/MEVA","topics":["human-pose-estimation","accv2020","3d-pose-estimation","3d-human-pose","smpl","pytorch"],"description":"Official implementation of ACCV 2020 paper \"3D Human Motion Estimation via Motion Compression and Refinement\" (Identical repo to https:\/\/github.com\/KlabCMU\/MEVA, will be kept in sync)"}
{"name":"tachibanayoshino\/remote-sensing-image-semantic-segmentation-tf2","full_name":"TachibanaYoshino\/Remote-sensing-image-semantic-segmentation-tf2","topics":["remote-sensing-image","semantic-segmentation","naic2020","deeplabv3plus"],"description":"The remote sensing image semantic segmentation repository based on tf.keras includes backbone networks such as resnet, densenet, mobilenet, and segmentation networks such as deeplabv3+, pspnet, panet, and refinenet."}
{"name":"apugoneappu\/ask_me_anything","full_name":"apugoneappu\/ask_me_anything","topics":["vqa","attentions","pytorch","python","mfb","mcan","openvqa"],"description":"An easy-to-use app to visualise attentions of various VQA models."}
{"name":"lescientifik\/open_brats2020","full_name":"lescientifik\/open_brats2020","topics":["deep-learning","semantic-segmentation","medical-imaging","medical-image-segmentation","pytorch","unet","brats","brats-challenge"],"description":"Top 10 brats 2020 Solution"}
{"name":"yudidong\/channel_estimation_cgan","full_name":"YudiDong\/Channel_Estimation_cGAN","topics":["channel-estimation","cgan","generative-adversarial-network","massive-mimo","deep-learning","one-bit"],"description":"Channel Estimation for One-Bit Multiuser Massive MIMO Using Conditional GAN"}
{"name":"wanghelin1997\/nnaudio2","full_name":"WangHelin1997\/nnAudio2","topics":[],"description":"Audio processing by using pytorch 1D convolution network (based on nnAudio). Gammatone Spectrogram and SpecAugmentation are now available on GPU. "}
{"name":"ahatamiz\/dals","full_name":"ahatamiz\/dals","topics":["dals-framework","lesion","levelset","dals","tensorflow","deep-active-lesion-segmentation","deeplearning","activecontours","segmentation"],"description":"Official Repository for Deep Active Lesion Segmentation (DALS)"}
{"name":"chen-judge\/skt","full_name":"chen-judge\/SKT","topics":["crowd-counting","distillation","pytorch"],"description":"Efficient Crowd Counting via Structured Knowledge Transfer (SKT, ACM MM 2020)"}
{"name":"huangdebo\/yolov4-multitask","full_name":"Huangdebo\/YOLOv4-MultiTask","topics":[],"description":"YOLOv4-MultiTask for Pytorch"}
{"name":"microsoft\/bringing-old-photos-back-to-life","full_name":"microsoft\/Bringing-Old-Photos-Back-to-Life","topics":["image-restoration","old-photo-restoration","generative-adversarial-network","gans","pytorch","image-manipulation","photo-restoration","photos"],"description":"Bringing Old Photo Back to Life (CVPR 2020 oral)"}
{"name":"minivision-ai\/photo2cartoon","full_name":"minivision-ai\/photo2cartoon","topics":["cartoon","deep-learning","computer-vision","gan","avatar-generator"],"description":"\u4eba\u50cf\u5361\u901a\u5316\u63a2\u7d22\u9879\u76ee (photo-to-cartoon translation project)"}
{"name":"hunglc007\/tensorflow-yolov4-tflite","full_name":"hunglc007\/tensorflow-yolov4-tflite","topics":["yolov4","yolov3","tflite","object-detection","tensorflow","tf2","tensorrt","yolov3-tiny","android"],"description":"YOLOv4, YOLOv4-tiny, YOLOv3, YOLOv3-tiny Implemented in Tensorflow 2.0, Android. Convert YOLO v4 .weights tensorflow, tensorrt and tflite"}
{"name":"gradslam\/gradslam","full_name":"gradslam\/gradslam","topics":["slam","deep-learning","machine-learning","robotics","3d-reconstruction"],"description":"gradslam is an open source differentiable dense SLAM library for PyTorch"}
{"name":"mit-han-lab\/lite-transformer","full_name":"mit-han-lab\/lite-transformer","topics":["nlp","pytorch","transformer"],"description":"[ICLR 2020] Lite Transformer with Long-Short Range Attention"}
{"name":"scalsol\/mega.pytorch","full_name":"Scalsol\/mega.pytorch","topics":["video-object-detection","pytorch"],"description":"Memory Enhanced Global-Local Aggregation for Video Object Detection, CVPR2020"}
{"name":"grammarly\/gector","full_name":"grammarly\/gector","topics":["grammatical-error-correction","natural-language-processing","sequence-labeling","transformers","roberta","bert","xlnet","nlp","text-simplification"],"description":"Official implementation of the papers \"GECToR \u2013 Grammatical Error Correction: Tag, Not Rewrite\" (BEA-20) and \"Text Simplification by Tagging\" (BEA-21)"}
{"name":"kaiyangzhou\/dassl.pytorch","full_name":"KaiyangZhou\/Dassl.pytorch","topics":["pytorch","benchmark-datasets","semi-supervised-learning","domain-adaptation","domain-generalization","deep-learning","machine-learning","computer-vision","artificial-intelligence","deep-neural-networks"],"description":"A PyTorch toolbox for domain generalization, domain adaptation and semi-supervised learning."}
{"name":"nvlabs\/wetectron","full_name":"NVlabs\/wetectron","topics":["object-detection","weakly-supervised-learning","computer-vision","deep-learning"],"description":"Weakly-supervised object detection."}
{"name":"media-smart\/volksdep","full_name":"Media-Smart\/volksdep","topics":["pytorch","onnx","tensorrt","deploy","tensorflow","jetson-nano","jetson-tx2","jetson-xavier","inference","python","keras","acceleration"],"description":"volksdep is an open-source toolbox for deploying and accelerating PyTorch, ONNX and TensorFlow models with TensorRT."}
{"name":"thuwangcy\/rechorus","full_name":"THUwangcy\/ReChorus","topics":["recommendation","framework","pytorch","ranking"],"description":"\u201cChorus\u201d of recommendation models: a light and flexible PyTorch framework for Top-K recommendation."}
{"name":"sforaidl\/kd_lib","full_name":"SforAiDl\/KD_Lib","topics":["knowledge-distillation","model-compression","pruning","quantization","pytorch","deep-learning-library","machine-learning","data-science","benchmarking","algorithm-implementations"],"description":"A Pytorch Knowledge Distillation library for benchmarking and extending works in the domains of Knowledge Distillation, Pruning, and Quantization."}
{"name":"zgcr\/pytorch-imagenet-cifar-coco-voc-training","full_name":"zgcr\/SimpleAICV_pytorch_training_examples_on_ImageNet_COCO_ADE20K","topics":["pytorch","coco","imagenet","cifar100","darknet","fcos","resnet","retinanet","centernet","ttfnet","repvgg","mae","dino","vit","voc","ade20k","regnet"],"description":"SimpleAICV:pytorch training and testing examples on ImageNet(ILSVRC2012)\/COCO2017\/VOC2007+2012\/CIFAR100\/AED20K datasets.Include classification\/object detection\/distillation\/contrastive learning\/masked image modeling."}
{"name":"lyqun\/fpconv","full_name":"lyqun\/FPConv","topics":["cvpr2020","point-cloud","point-convolution","scannet","s3dis","scene-understanding","3d-vision","3d-convolutions","semantic-segmentation","pytorch"],"description":"FPConv: Learning Local Flattening for Point Convolution, CVPR 2020"}
{"name":"nanguoshun\/lsr","full_name":"nanguoshun\/LSR","topics":["natural-language-processing","deep-learning","latent-variable-models"],"description":"Pytorch Implementation of our ACL 2020 Paper  \"Reasoning with Latent Structure Refinement for Document-Level Relation Extraction\""}
{"name":"demi6od\/chatbot","full_name":"demi6od\/ChatBot","topics":[],"description":"Pytorch Generative ChatBot (Dialog System) based on RNN, Transformer, Bert and GPT2"}
{"name":"vita-group\/gan-slimming","full_name":"VITA-Group\/GAN-Slimming","topics":["pytorch","compression","gan","cyclegan"],"description":"[ECCV 2020] \"All-in-One GAN Compression by Unified Optimization\" by Haotao Wang, Shupeng Gui, Haichuan Yang, Ji Liu, and Zhangyang Wang"}
{"name":"amosgropp\/igr","full_name":"amosgropp\/IGR","topics":["deep-learning","3d-reconstruction","computer-vision"],"description":"Implicit Geometric Regularization for Learning Shapes"}
{"name":"bshall\/tacotron","full_name":"bshall\/Tacotron","topics":["speech-synthesis","text-to-speech","tacotron","pytorch","tts","attention-mechanism"],"description":"A PyTorch implementation of Location-Relative Attention Mechanisms For Robust Long-Form Speech Synthesis"}
{"name":"mawiszus\/toad-gan","full_name":"Mawiszus\/TOAD-GAN","topics":["mario","ai","deep-learning","super-mario-bros","pcg","pcgml","gan","singan"],"description":"Official repository for \"TOAD-GAN: Coherent Style Level Generation from a Single Example\" by Maren Awiszus, Frederik Schubert and Bodo Rosenhahn. "}
{"name":"tahmid0007\/visualtransformers","full_name":"tahmid0007\/VisualTransformers","topics":[],"description":"A Pytorch Implementation of the following paper \"Visual Transformers: Token-based Image Representation and Processing for Computer Vision\""}
{"name":"unbabel\/comet","full_name":"Unbabel\/COMET","topics":["machine-translation","evaluation-metrics","natural-language-processing","machine-learning","artificial-intelligence","nlp"],"description":" A Neural Framework for MT Evaluation"}
{"name":"clovaai\/lffont","full_name":"clovaai\/lffont","topics":["machine-learning","deep-learning","generative-models","font","font-generation","pytorch","lf-font","aaai2021"],"description":"Official PyTorch implementation of LF-Font (Few-shot Font Generation with Localized Style Representations and Factorization) AAAI 2021"}
{"name":"lartpang\/hdfnet","full_name":"lartpang\/HDFNet","topics":["eccv","eccv2020","saliency-detection","salient-object-detection","image-processing","segmentation","imagesegmentation","imageprocessing","pytorch","saliency"],"description":"(ECCV 2020) Hierarchical Dynamic Filtering Network for RGB-D Salient Object Detection"}
{"name":"csiro-robotics\/tce","full_name":"csiro-robotics\/TCE","topics":["self-supervised-learning","computer-vision","contrastive-learning","metric-learning","representation-learning","ucf-101","pytorch","hmdb51","kinetics-datasets","action-recognition","tsne-visualisations","contrastive-loss","embeddings","deep-learning"],"description":"This repository contains the code implementation used in the paper Temporally Coherent Embeddings for Self-Supervised Video Representation Learning (TCE). "}
{"name":"zwx8981\/unique","full_name":"zwx8981\/UNIQUE","topics":["image-quality-assessment","deep-neural-networks","blind-image-quality-assessment","learning-to-rank","pytorch","matlab"],"description":"The repository for 'Uncertainty-aware blind image quality assessment in the laboratory and wild' and 'Learning to blindly assess image quality in the laboratory and wild'"}
{"name":"ababier\/open-kbp","full_name":"ababier\/open-kbp","topics":["deep-learning","machine-learning","medical-physics","medical-imaging"],"description":"Develop dose prediction models for knowledge-based planning in radiotherapy"}
{"name":"r0maink\/outperformer","full_name":"r0mainK\/outperformer","topics":["pytorch","transformer","performer","reformer"],"description":"Code for scaling Transformers"}
{"name":"tahmid0007\/visiontransformer","full_name":"tahmid0007\/VisionTransformer","topics":[],"description":"A complete easy to follow implementation of Google's Vision Transformer proposed in \"AN IMAGE IS WORTH 16X16 WORDS\". This pytorch implementation has comments for better understanding."}
{"name":"rintarooo\/tsp_drl_ptrnet","full_name":"Rintarooo\/TSP_DRL_PtrNet","topics":["tsp","deep-reinforcement-learning","actor-critic","pointer-networks","active-search","pytorch"],"description":"\"Neural Combinatorial Optimization with Reinforcement Learning\"[Bello+, 2016], Traveling Salesman Problem solver"}
{"name":"haoran-song\/pip-planning-informed-prediction","full_name":"Haoran-SONG\/PiP-Planning-informed-Prediction","topics":["deep-learning","motion-forecasting","trajectory-prediction","trajectory-planning","autonomous-driving","eccv2020"],"description":"(ECCV 2020) PiP: Planning-informed Trajectory Prediction for Autonomous Driving"}
{"name":"coldmanck\/zero-shot-indoor-localization-release","full_name":"coldmanck\/zero-shot-indoor-localization-release","topics":["pytorch","graph-neural-networks","indoor-localization","place-recognition"],"description":"The official code and datasets for \"Zero-Shot Multi-View Indoor Localization via Graph Location Networks\" (ACMMM 2020)"}
{"name":"lucidrains\/molecule-attention-transformer","full_name":"lucidrains\/molecule-attention-transformer","topics":["artificial-intelligence","deep-learning","transformers","molecules"],"description":"Pytorch reimplementation of Molecule Attention Transformer, which uses a transformer to tackle the graph-like structure of molecules"}
{"name":"chenqi008\/hpgm","full_name":"chenqi008\/HPGM","topics":[],"description":"Pytorch implementation for \u201cIntelligent Home 3D: Automatic 3D-House Design from Linguistic Descriptions Only\u201d"}
{"name":"elliottzheng\/face-detection","full_name":"elliottzheng\/face-detection","topics":["pytorch","face-detection","retinaface","python"],"description":"Fast and reliable face detection with RetinaFace.PyTorch"}
{"name":"tuvuumass\/task-transferability","full_name":"tuvuumass\/task-transferability","topics":["transfer-learning","natural-language-processing","bert","task-transferability","nlp-tasks","emnlp2020"],"description":"Data and code for our paper \"Exploring and Predicting Transferability across NLP Tasks\", to appear at EMNLP 2020. "}
{"name":"jac99\/minkloc3d","full_name":"jac99\/MinkLoc3D","topics":["place-recognition","point-cloud","minkowski-engine","deep-learning","computer-vision","3d-convolutional-network","3d-vision","metric-learning"],"description":"MinkLoc3D: Point Cloud Based Large-Scale Place Recognition"}
{"name":"binliang-nlp\/intergcn-absa","full_name":"BinLiang-NLP\/InterGCN-ABSA","topics":["pytorch","graph-neural-networks","sentiment-analysis"],"description":"[COLING 2020] Jointly Learning Aspect-Focused and Inter-Aspect Relations with Graph Convolutional Networks for Aspect Sentiment Analysis"}
{"name":"alexts1980\/covid-ct-mask-net","full_name":"AlexTS1980\/COVID-CT-Mask-Net","topics":["ct-scans","covid","segmentation-model","classification-model","covid-19","mask-rcnn","computer-tomograpy","computer-vision","deep-learning","mask","chest"],"description":"Segmentation and Classification models for COVID CT scans (COVID, pneumonia, normal) based on Mask R-CNN."}
{"name":"leverxgroup\/esrgan","full_name":"leverxgroup\/esrgan","topics":["super-resolution","image-processing","computer-vision","generative-adversarial-network","deep-neural-networks","pytorch"],"description":"Enhanced SRGAN. Champion PIRM Challenge on Perceptual Super-Resolution"}
{"name":"rsanchezgarc\/deepemhancer","full_name":"rsanchezgarc\/deepEMhancer","topics":["deep-learning","cryo-em"],"description":"Deep learning for cryo-EM maps post-processing"}
{"name":"ternaus\/datasouls_antispoof","full_name":"ternaus\/datasouls_antispoof","topics":["deep-learning","neural-network","antispoofing","liveness-detection","computer-vision","image-classification"],"description":"Code and pre-trained models for detecting spoofing attacks from images."}
{"name":"chenrocks\/uniter","full_name":"ChenRocks\/UNITER","topics":["transformers","pre-training","vision-and-language","pytorch"],"description":"Research code for ECCV 2020 paper \"UNITER: UNiversal Image-TExt Representation Learning\""}
{"name":"media-smart\/vedastr","full_name":"Media-Smart\/vedastr","topics":["pytorch","scene-text-recognition","ocr","ocr-recognition","text-recognition","transformer"],"description":"A scene text recognition toolbox based on PyTorch"}
{"name":"graykode\/commit-autosuggestions","full_name":"graykode\/commit-autosuggestions","topics":["commit-autosuggestions","natural-language","bert","text-generation","nlp"],"description":"A tool that AI automatically recommends commit messages."}
{"name":"maclory\/deep-iterative-collaboration","full_name":"Maclory\/Deep-Iterative-Collaboration","topics":["image-restoration","super-resolution","face-hallucination","deep-learning","computer-vision","iterative-reconstruction"],"description":"Pytorch implementation of Deep Face Super-Resolution with Iterative Collaboration between Attentive Recovery and Landmark Estimation (CVPR 2020)"}
{"name":"golsun\/dialogrpt","full_name":"golsun\/DialogRPT","topics":["dialog","pretrained-models","transformers","pytorch","conversational-ai","dialogpt","gpt-2","human-feedback-data","dataset","dialog-datasets"],"description":"EMNLP 2020: \"Dialogue Response Ranking Training with Large-Scale Human Feedback Data\""}
{"name":"iffix\/machin","full_name":"iffiX\/machin","topics":["reinforcement-learning","deep-learning","pytorch","pytorch-reinforcement-learning","dqn","ddpg","sac","ppo","td3","prioritized-experience-replay","distributed","a3c-pytorch","python","pytorch-lightning"],"description":"Reinforcement learning library(framework) designed for PyTorch, implements DQN, DDPG, A2C, PPO, SAC, MADDPG, A3C, APEX, IMPALA ..."}
{"name":"tntwen\/openvino-yolov4","full_name":"TNTWEN\/OpenVINO-YOLOV4","topics":["openvino","yolov4","yolov4-relu","yolov4-tiny","tensorflow","yolov4-tiny-3l","scaledyolov4"],"description":"This is implementation of YOLOv4,YOLOv4-relu,YOLOv4-tiny,YOLOv4-tiny-3l,Scaled-YOLOv4 and INT8 Quantization in OpenVINO2021.3"}
{"name":"longmaoteamtf\/deeprecsys","full_name":"LongmaoTeamTf\/deep_recommenders","topics":["deep-learning","ranking","retrieval","recommendation-system","multi-task-learning"],"description":"Deep Recommenders"}
{"name":"thunlp\/sememepso-attack","full_name":"thunlp\/SememePSO-Attack","topics":["nlp","adversarial-examples","adversarial-attacks","sememe","pso"],"description":"Code and data of the ACL 2020 paper \"Word-level Textual Adversarial Attacking as Combinatorial Optimization\""}
{"name":"gordicaleksa\/pytorch-neural-style-transfer-fast","full_name":"gordicaleksa\/pytorch-neural-style-transfer-johnson","topics":["neural-style-transfer","machine-learning","deep-learning","python","pytorch","non-photorealistic-rendering","neural-style-transfer-tutorial","deep-learning-tutorial","style-transfer"],"description":"Reconstruction of the fast neural style transfer (Johnson et al.). Some portions of the paper have been improved by the follow-up work like the instance normalization, etc. Checkout transformer_net.py's header for details."}
{"name":"enochkan\/plexiglass","full_name":"enochkan\/plexiglass","topics":["adversarial-attacks","deep-learning","cybersecurity","machine-learning","deep-neural-networks","security"],"description":"A PyTorch toolbox for adversarial attack and deepfake detection research. "}
{"name":"rxn4chemistry\/rxnmapper","full_name":"rxn4chemistry\/rxnmapper","topics":["chemistry","reactions","rxn","atom-mapping","smiles","transformer"],"description":"RXNMapper: Unsupervised attention-guided atom-mapping. Code complementing our Science Advances publication on \"Extraction of organic chemistry grammar from unsupervised learning of chemical reactions\" (https:\/\/advances.sciencemag.org\/content\/7\/15\/eabe4166). "}
{"name":"guangmingw\/doplearning","full_name":"guangmingw\/DOPlearning","topics":["deep-learning","self-supervised-learning","unsupervised-learning","depth-prediction","visual-odometry","optical-flow"],"description":"Code for T-ITS paper \"Unsupervised Learning of Depth, Optical Flow and Pose with Occlusion from 3D Geometry\"  and for ICRA paper \"Unsupervised Learning of Monocular Depth and Ego-Motion Using Multiple Masks\"."}
{"name":"monniert\/dti-clustering","full_name":"monniert\/dti-clustering","topics":["clustering","pytorch","unsupervised-learning","image-clustering","neurips2020","neurips-2020","computer-vision","deep-learning"],"description":"(NeurIPS 2020 oral) Code for \"Deep Transformation-Invariant Clustering\" paper"}
{"name":"team-fastml\/fastml","full_name":"Team-fastML\/fastML","topics":["python","machine-learning","machine-learning-algorithms","data-science","algorithms","deep-learning","neural-network"],"description":"A Python package built on sklearn for running a series of classification Algorithms in a faster and easier way.  "}
{"name":"monniert\/docextractor","full_name":"monniert\/docExtractor","topics":["document-analysis","segmentation","historical-data","pytorch"],"description":"(ICFHR 2020 oral) Code for \"docExtractor: An off-the-shelf historical document element extraction\" paper"}
{"name":"gaborvecsei\/sle-gan","full_name":"gaborvecsei\/SLE-GAN","topics":["gan","lighweight-gan","image-synthesis","tensorflow","tensorflow2","few-shot-image-generation"],"description":"Towards Faster and Stabilized GAN Training for High-fidelity Few-shot Image Synthesis"}
{"name":"ardaduz\/deep-video-mvs","full_name":"ardaduz\/deep-video-mvs","topics":["computer-vision","deep-learning","depth-prediction","multi-view-stereo","cost-volume","depth-estimation","plane-sweep"],"description":"Code for \"DeepVideoMVS: Multi-View Stereo on Video with Recurrent Spatio-Temporal Fusion\" (CVPR 2021)"}
{"name":"zjufanlab\/scdeepsort","full_name":"ZJUFanLab\/scDeepSort","topics":["single-cell","transcriptomics","deep-learning","graph-neural-network","cell-type-classification","reference-free","annotation","scrna-seq","gnn"],"description":"Cell-type Annotation for Single-cell Transcriptomics using Deep Learning with a Weighted Graph Neural Network"}
{"name":"stanleylsx\/entity_extractor_by_binary_tagging","full_name":"StanleyLsx\/entity_extractor_by_pointer","topics":["pytorch","bert","entity-extraction","binary-tagging","ner","globalpointer"],"description":"\u4f7f\u7528torch\u6574\u5408\u4e24\u79cd\u7ecf\u5178\u7684\u6307\u9488NER\u62bd\u53d6\u8303\u5f0f\uff0c\u5206\u522b\u662fSpanBert\u548c\u82cf\u795e\u7684GlobalPointer\uff0c\u7b80\u5355\u52a0\u4e86\u4e9btricks\uff0c\u914d\u7f6e\u540e\u4e00\u952e\u8fd0\u884c"}
{"name":"gordicaleksa\/pytorch-naive-video-neural-style-transfer","full_name":"gordicaleksa\/pytorch-naive-video-neural-style-transfer","topics":["neural-style-transfer","video","python","pytorch","machine-learning","deep-learning","non-photorealistic-rendering","neural-style-transfer-tutorial","semantic-segmentation","deep-learning-tutorial","style-transfer"],"description":"Create naive (no temporal loss) NST for videos with person segmentation. Just place your videos in data\/, run and you get your stylized and segmented videos."}
{"name":"saturncloud\/dask-pytorch-ddp","full_name":"saturncloud\/dask-pytorch-ddp","topics":["pytorch","machine-learning","deep-learning","distributed-computing","dask","nlp","computer-vision"],"description":"dask-pytorch-ddp is a Python package that makes it easy to train PyTorch models on dask clusters using distributed data parallel. "}
{"name":"tianhongzxy\/pytorch-sakt","full_name":"TianHongZXY\/pytorch-SAKT","topics":["pytorch","nlp","knowledge-tracing"],"description":"a simple pytorch implemention of paper A Self-Attentive model for Knowledge Tracing"}
{"name":"kennardwang\/vtuber-momosehiyori","full_name":"KennardWang\/VTuber-MomoseHiyori","topics":["unity","live2d","opencv","cubism","python","socket","deep-learning","csharp","vtuber","pytorch","dlib"],"description":"\ud83d\ude00 Live2D VTuber, made by Unity and Cubism. This project is based on TCP socket, Python OpenCV and deep learning algorithms used in face recognition and alignment."}
{"name":"jintuzheng\/zisan","full_name":"JintuZheng\/zisan","topics":[],"description":"Integrated CV basic application development kit based on Pytorch \u57fa\u4e8ePytorch\u7684\u96c6\u6210CV\u57fa\u7840\u5e94\u7528\u5f00\u53d1\u5de5\u5177\u5305"}
{"name":"auto-vaidya\/auto_vaidya","full_name":"smaranjitghose\/auto_vaidya","topics":["python","deeplearning","tensorflow","medical-imaging","streamlit","slop20","slop","ch-20","hacktoberfest"],"description":"An open-source project for applying deep learning to medical scenarios"}
{"name":"thinklab-sjtu\/dcl_retinanet_tensorflow","full_name":"Thinklab-SJTU\/DCL_RetinaNet_Tensorflow","topics":["object-detection","tensorflow","remote-sensing"],"description":"Code for CVPR 2021 paper: Dense Label Encoding for Boundary Discontinuity Free Rotation Detection"}
{"name":"romesco\/hydra-lightning","full_name":"romesco\/hydra-lightning","topics":[],"description":"Configuration classes enabling Hydra to configure and manage Pytorch Lightning projects."}
{"name":"ascust\/3dmm-fitting-pytorch","full_name":"ascust\/3DMM-Fitting-Pytorch","topics":["3dmm","bfm","fitting","face-reconstruction","3d-face-reconstruction","3d-face","3d-face-alignment","pytorch","basel-face-model","3d-morphable-face-model","3d-morphable-models","monocular-video-reconstruction"],"description":"A 3DMM fitting framework using Pytorch."}
{"name":"cgcl-codes\/naturalcc","full_name":"CGCL-codes\/naturalcc","topics":["natural-language-processing","programming-language","deep-learning","toolkit"],"description":"NaturalCC: An Open-Source Toolkit for Code Intelligence"}
{"name":"kohulan\/decimer-image-to-smiles","full_name":"Kohulan\/DECIMER-Image-to-SMILES","topics":["decimer","chemical-image-recognition","tensorflow","smiles","decimer-image"],"description":"The repository contains the network and the related scripts for encoder-decoder based Chemical Image Recognition "}
{"name":"ngoquanghuy99\/sentiment-classification-of-amazon-fine-food-reviews","full_name":"ngoquanghuy99\/Sentiment-classification-of-Amazon-fine-food-reviews","topics":["natural-language-processing","deep-learning","tensorflow","sentiment-analysis","text-classification","keras","glove"],"description":"A deep learning model (Bidirectional LSTM) using pretrained word embeddings to do sentiment analysis on Amazon fine food reviews dataset."}
{"name":"calciferzh\/minimal-hand","full_name":"CalciferZh\/minimal-hand","topics":["computer-vision","deep-learning","3d-hand-pose-estimation","hand-tracking","hand-motion-capture"],"description":"A minimal solution to hand motion capture from a single color camera at over 100fps. Easy to use, plug to run."}
{"name":"gordicaleksa\/pytorch-gans","full_name":"gordicaleksa\/pytorch-GANs","topics":["gans","generative-adversarial-nets","generative-adversarial-networks","vanilla-gan","conditional-gan","dc-gan","pytorch","python","machine-learning","deep-learning","deep-learning-tutorial","gan-tutorial"],"description":"My implementation of various GAN (generative adversarial networks) architectures like vanilla GAN (Goodfellow et al.), cGAN (Mirza et al.), DCGAN (Radford et al.), etc."}
{"name":"jaywalnut310\/glow-tts","full_name":"jaywalnut310\/glow-tts","topics":["pytorch","speech-synthesis","tts","deep-learning","text-to-speech"],"description":"A Generative Flow for Text-to-Speech via Monotonic Alignment Search"}
{"name":"untitled-ai\/self_supervised","full_name":"untitled-ai\/self_supervised","topics":[],"description":"A Pytorch-Lightning implementation of self-supervised algorithms"}
{"name":"google-research\/long-range-arena","full_name":"google-research\/long-range-arena","topics":["transformers","nlp","deep-learning","attention","jax","flax"],"description":"Long Range Arena for Benchmarking Efficient Transformers"}
{"name":"csslab\/maia-chess","full_name":"CSSLab\/maia-chess","topics":["chess","chess-engine","deep-learning","machine-learning","computational-social-science"],"description":"Maia is a human-like neural network chess engine trained on millions of human games."}
{"name":"indobenchmark\/indonlu","full_name":"IndoNLP\/indonlu","topics":["indonesian","bahasa","bert","benchmark","datasets","nlp","nlu","aacl","indobert","indobert-models","indonlu","indo4b","indobert-lite","indonlp"],"description":"The first-ever vast natural language processing benchmark for Indonesian Language. We provide multiple downstream tasks, pre-trained IndoBERT models, and a starter code! (AACL-IJCNLP 2020)"}
{"name":"microsoft\/ptgnn","full_name":"microsoft\/ptgnn","topics":["graph-neural-networks","deep-learning","pytorch","geometric-deep-learning","gnn"],"description":"A PyTorch Graph Neural Network Library"}
{"name":"justin-tan\/high-fidelity-generative-compression","full_name":"Justin-Tan\/high-fidelity-generative-compression","topics":["image-compression","generative-adversarial-networks","entropy-coding","pytorch","computer-vision","machine-learning"],"description":"Pytorch implementation of High-Fidelity Generative Image Compression + Routines for neural image compression"}
{"name":"confusezius\/revisiting_deep_metric_learning_pytorch","full_name":"Confusezius\/Revisiting_Deep_Metric_Learning_PyTorch","topics":["deep-learning","metric-learning","deep-metric-learning","image-retrieval","cub200-2011","cars196","stanford-online-products","wandb","icml2020"],"description":"(ICML 2020) This repo contains code for our paper \"Revisiting Training Strategies and Generalization Performance in Deep Metric Learning\" (https:\/\/arxiv.org\/abs\/2002.08473) to facilitate consistent research in the field of Deep Metric Learning."}
{"name":"ika-rwth-aachen\/cam2bev","full_name":"ika-rwth-aachen\/Cam2BEV","topics":["computer-vision","machine-learning","deep-learning","autonomous-vehicles","ipm","segmentation","sim2real","simulation","birds-eye-view"],"description":"TensorFlow Implementation for Computing a Semantically Segmented Bird's Eye View (BEV) Image Given the Images of Multiple Vehicle-Mounted Cameras."}
{"name":"megvii-basedetection\/autoassign","full_name":"Megvii-BaseDetection\/AutoAssign","topics":["object-detection","coco-dataset","computer-vision"],"description":"Pytorch implementation of \"AutoAssign: Differentiable Label Assignment for Dense Object Detection\""}
{"name":"twhui\/liteflownet3","full_name":"twhui\/LiteFlowNet3","topics":["liteflownet3","computer-vision","cnn","deeplearning","opitcal-flow","eccv2020","flow-warping","cost-volume-modulation","flow-field-deformation","flow-propagation"],"description":"LiteFlowNet3: Resolving Correspondence Ambiguity for More Accurate Optical Flow Estimation, ECCV 2020"}
{"name":"bojone\/t5_in_bert4keras","full_name":"bojone\/t5_in_bert4keras","topics":[],"description":"\u6574\u7406\u4e00\u4e0b\u5728keras\u4e2d\u4f7f\u7528T5\u6a21\u578b\u7684\u8981\u70b9"}
{"name":"gmftbygmftby\/opendialog","full_name":"gmftbyGMFTBY\/OpenDialog","topics":["corpus","generative","retrieval","gpt2","bert","transformers","gan-based","wechat-api","multi-view","wechat","chinese","open-domain","reinforcement-learning","pytorch"],"description":"An Open-Source Package for Chinese Open-domain Conversational Chatbot (\u4e2d\u6587\u95f2\u804a\u5bf9\u8bdd\u7cfb\u7edf\uff0c\u4e00\u952e\u90e8\u7f72\u5fae\u4fe1\u95f2\u804a\u673a\u5668\u4eba)"}
{"name":"stanfordvl\/robovat","full_name":"StanfordVL\/robovat","topics":["robotics","deep-learning","deep-reinforcement-learning","physics-simulation"],"description":"RoboVat: A unified toolkit for simulated and real-world robotic task environments."}
{"name":"xv44586\/ccf_2020_qa_match","full_name":"xv44586\/ccf_2020_qa_match","topics":["keras","bert","ccf","top1"],"description":"ccf 2020 qa match competition top1"}
{"name":"txsun1997\/colake","full_name":"txsun1997\/CoLAKE","topics":["deep-learning","knowledge-embedding","knowledge-graph","language-model","natural-language-processing"],"description":"COLING'2020: CoLAKE: Contextualized Language and Knowledge Embedding"}
{"name":"arcchang1236\/ca-noisegan","full_name":"arcchang1236\/CA-NoiseGAN","topics":["denoisers","noise-models","camera-sensors","eccv2020","eccv","gan","pytorch","sidd-dataset"],"description":"The official implementation of our ECCV 2020 paper \"Learning Camera-Aware Noise Models\"."}
{"name":"kimythanly\/again-vc","full_name":"KimythAnly\/AGAIN-VC","topics":["voice-conversion","pytorch","zero-shot","one-shot","any-to-any"],"description":"This is the official implementation of the paper AGAIN-VC: A One-shot Voice Conversion using Activation Guidance and Adaptive Instance Normalization."}
{"name":"yeyupiaoling\/masr","full_name":"yeyupiaoling\/MASR","topics":["deepspeech","pytorch","asr","deep-learning","speech-recognition","speech-to-text","speech","conformer","squeezeformer"],"description":"Pytorch\u5b9e\u73b0\u7684\u6d41\u5f0f\u4e0e\u975e\u6d41\u5f0f\u7684\u81ea\u52a8\u8bed\u97f3\u8bc6\u522b\u6846\u67b6\uff0c\u540c\u65f6\u517c\u5bb9\u5728\u7ebf\u548c\u79bb\u7ebf\u8bc6\u522b\uff0c\u76ee\u524d\u652f\u6301Conformer\u3001Squeezeformer\u3001DeepSpeech2\u6a21\u578b\uff0c\u652f\u6301\u591a\u79cd\u6570\u636e\u589e\u5f3a\u65b9\u6cd5\u3002"}
{"name":"lightas\/cvpr2020_manet","full_name":"lightas\/CVPR2020_MANet","topics":[],"description":" This is the pytorch implementation of the CVPR2020 paper \"Memory aggregation networks for efficient interactive video object segmentation\"."}
{"name":"maxhalford\/pytorch-resample","full_name":"MaxHalford\/pytorch-resample","topics":["pytorch","imbalanced-learning","undersampling","oversampling","resampling"],"description":"\ud83c\udfb2 Iterable dataset resampling in PyTorch"}
{"name":"vita-group\/self-pu","full_name":"VITA-Group\/Self-PU","topics":["pytorch","pu-learning"],"description":"[ICML2020] \"Self-PU: Self Boosted and Calibrated Positive-Unlabeled Training\" by Xuxi Chen, Wuyang Chen, Tianlong Chen, Ye Yuan, Chen Gong, Kewei Chen, Zhangyang Wang"}
{"name":"ardauzunoglu\/rte-speech-generator","full_name":"ardauzunoglu\/rte-speech-generator","topics":["python","tensorflow","natural-language-processing","nlp","politics","speech-processing","turkish","turkce","turkish-nlp"],"description":"Natural Language Processing to generate new speeches for the President of Turkey."}
{"name":"deligentfool\/dqn_zoo","full_name":"deligentfool\/dqn_zoo","topics":["dqn","ddqn","dueling-dqn","prioritized-dqn","noisy-dqn","categorical-dqn","n-step-dqn","rainbow-dqn","pytorch","qr-dqn","iqn","fqf","distributional-dqn","mmddqn","soft-q-learning"],"description":"The implement of all kinds of dqn reinforcement learning with Pytorch"}
{"name":"1051003502\/cfgan","full_name":"1051003502\/CFGAN","topics":[],"description":"A pytorch implementation of CFGAN"}
{"name":"onuriel\/permutedadain","full_name":"onuriel\/PermutedAdaIN","topics":[],"description":"Pytorch Implementation of PermutedAdaIN"}
{"name":"qxde01\/gastric-cancer-detect","full_name":"qxde01\/gastric-cancer-detect","topics":["unet","tf2","u2net","unet3plus","keras"],"description":"\u80c3\u764c\u6076\u6027\u75c5\u53d8\u7ec4\u7ec7\u68c0\u6d4b"}
{"name":"oliverguhr\/german-sentiment-lib","full_name":"oliverguhr\/german-sentiment-lib","topics":["bert-model","german","sentiment-analysis","sentiment-classification","python-library","machine-learning","deep-learning"],"description":"An easy to use python package for deep learning-based german sentiment classification."}
{"name":"menghuanlater\/tianchi2020chinesemedicinequestiongeneration","full_name":"menghuanlater\/Tianchi2020ChineseMedicineQuestionGeneration","topics":["pytorch","roberta","bert","question-generation","transformer-xl","sequence-to-sequence"],"description":"2020 \u963f\u91cc\u4e91\u5929\u6c60\u5927\u6570\u636e\u7ade\u8d5b-\u4e2d\u533b\u836f\u6587\u732e\u95ee\u9898\u751f\u6210\u6311\u6218\u8d5b"}
{"name":"deligentfool\/policy_based_rl","full_name":"deligentfool\/policy_based_RL","topics":["reinforce","actor-critic","a2c","trpo","ppo","ddpg","td3","sac","pytorch","acer","a3c","icm","rnd"],"description":"The implement of the policy gradient RL algorithm with pytorch"}
{"name":"dongkwonjin\/semantic-line-drm","full_name":"dongkwonjin\/Semantic-Line-DRM","topics":["semantic-line-detection","pytorch","dominant-parallel-lines-detection","reflection-symmetry-axes-detection","line-detection","object-detection"],"description":"Official code for \"Semantic Line Detection Using Mirror Attention and Comparative Ranking and Matching\", ECCV 2020"}
{"name":"jbesomi\/texthero","full_name":"jbesomi\/texthero","topics":["text-preprocessing","text-representation","text-visualization","nlp","word-embeddings","machine-learning","text-mining","nlp-pipeline","text-clustering","texthero"],"description":"Text preprocessing, representation and visualization from zero to hero."}
{"name":"honglinchu\/siamtrackers","full_name":"HonglinChu\/SiamTrackers","topics":["tracking","deep-learning","visual-tracking"],"description":"(2020-2022)The PyTorch version  of SiamFC\uff0cSiamRPN\uff0cDaSiamRPN, UpdateNet , SiamDW, SiamRPN++, SiamMask, SiamFC++,  SiamCAR,  SiamBAN, Ocean, LightTrack , TrTr, NanoTrack;  Visual object tracking based on deep learning"}
{"name":"lucastabelini\/laneatt","full_name":"lucastabelini\/LaneATT","topics":["lane-detection","deep-learning","computer-vision","pytorch"],"description":"Code for the paper entitled \"Keep your Eyes on the Lane: Real-time Attention-guided Lane Detection\" (CVPR 2021)"}
{"name":"gretelai\/gretel-synthetics","full_name":"gretelai\/gretel-synthetics","topics":["differential-privacy","artificial-intelligence","tensorflow","privacy","synthetic-data"],"description":"Synthetic data generators for structured and unstructured text, featuring differentially private learning."}
{"name":"nicholasli1995\/evoskeleton","full_name":"Nicholasli1995\/EvoSkeleton","topics":["human-pose-estimation","3d-pose-estimation","data-augmentation","2d-to-3d","deep-learning","evolutionary-algorithms","bias-correction","dataset","annotaton-tool","3d-computer-vision","cvpr2020","geometric-deep-learning","generalization-on-diverse-scenes","feed-forward-neural-networks","synthetic-data","kinematic-trees","3d-human-pose","smpl","cvpr"],"description":"Official project website for the CVPR 2020 paper (Oral Presentation) \"Cascaded deep monocular 3D human pose estimation wth evolutionary training data\""}
{"name":"charliedinh\/pfedme","full_name":"CharlieDinh\/pFedMe","topics":["federated-learning","personalized-federated-learning","federated-meta-learning","pytorch","neurips-2020","pfedme","paper","per-fedavg"],"description":"Personalized Federated Learning with Moreau Envelopes (pFedMe) using Pytorch  (NeurIPS 2020)"}
{"name":"fangjinhuawang\/patchmatchnet","full_name":"FangjinhuaWang\/PatchmatchNet","topics":["multi-view-stereo","deep-learning","3d-reconstruction"],"description":"Official code of PatchmatchNet (CVPR 2021 Oral)"}
{"name":"bhpfelix\/mtlnas","full_name":"bhpfelix\/MTLNAS","topics":["neural-architecture-search","automl","pytorch","multitask-learning","semantic-segmentation","surface-normals-estimation","convolutional-neural-networks"],"description":"[CVPR 2020] MTL-NAS: Task-Agnostic Neural Architecture Search towards General-Purpose Multi-Task Learning"}
{"name":"i-hope-peace\/changedetectionrepository","full_name":"ChenHongruixuan\/ChangeDetectionRepository","topics":["remote-sensing","change-detection","image-processing","multi-temporal","deep-learning","python"],"description":"This repository contains some python code of some traditional change detection methods or provides their original websites, such as SFA, MAD, and some deep learning-based change detection methods, such as SiamCRNN, DSFA, and some FCN-based methods. "}
{"name":"zjunlp\/openue","full_name":"zjunlp\/OpenUE","topics":["triple-extraction","relation-extraction","named-entity-recognition","event-extraction","intent-classification","slot-filling","nlp-extraction-tasks","openue","nlp","pytorch","bert","natural-language-processing"],"description":"OpenUE\u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u77e5\u8bc6\u56fe\u8c31\u62bd\u53d6\u5de5\u5177 (An Open Toolkit for Universal  Extraction from Text published at EMNLP2020: https:\/\/aclanthology.org\/2020.emnlp-demos.1.pdf)"}
{"name":"juniorrojas\/hookean-springs-pytorch","full_name":"juniorrojas\/hookean-springs-pytorch","topics":["pytorch","physics-simulation","simulation"],"description":"Hookean springs in PyTorch"}
{"name":"clorverccy\/gedloss_pytorch","full_name":"ViEm-ccy\/GEDLoss_pytorch","topics":[],"description":"a pytorch  implementation of Google GEDLoss"}
{"name":"axeldelafosse\/stemgen","full_name":"axeldelafosse\/stemgen","topics":["stems","traktor","spleeter","deep-learning","ni-stem","native-instruments","music","audio-processing","demucs"],"description":"\ud83c\udf9b Stemgen is a Stem file generator. Convert any track into a Stem and have fun with Traktor."}
{"name":"tuvovan\/nhdrrnet","full_name":"tuvovan\/NHDRRNet","topics":["low-light-image-enhancement","keras","keras-tensorflow"],"description":"Keras Implementation of the paper Deep HDR Imaging via A Non-Local Network - TIP 2020"}
{"name":"coolephemeroptera\/aesrc2020","full_name":"coolEphemeroptera\/AESRC2020","topics":["ctc","resnet","keras","mtl","interspeech","accent-recognition","asr","cosface","arcface","circle-loss","netvlad","ghostvlad","speaker-recognition","crnn"],"description":"a deep accent recognition network"}
{"name":"loodos\/turkish-language-models","full_name":"loodos\/turkish-language-models","topics":["nlp","natural-language-processing","language-models","turkish"],"description":"Transformer based Turkish language models"}
{"name":"juniorrojas\/springs-integration-pytorch","full_name":"juniorrojas\/springs-integration-pytorch","topics":["pytorch","simulation","physics-simulation"],"description":"Numerical integration methods for mass-springs systems"}
{"name":"nlesc-jcer\/qmctorch","full_name":"NLESC-JCER\/QMCTorch","topics":[],"description":"Pytorch Implementation of Real Space Quantum Monte Carlo Simulations of Molecular Systems"}
{"name":"mukosame\/zooming-slow-mo-cvpr-2020","full_name":"Mukosame\/Zooming-Slow-Mo-CVPR-2020","topics":["pytorch","video","super-resolution","video-frame-interpolation","video-super-resolution","spatio-temporal","cvpr2020","cvpr"],"description":"Fast and Accurate One-Stage Space-Time Video Super-Resolution (accepted in CVPR 2020)"}
{"name":"iduta\/pyconv","full_name":"iduta\/pyconv","topics":["image-recognition","imagenet","pytorch","deep-learning","convolutional-neural-networks","residual-networks","residual-learning","cnn","computer-vision","deep-neural-networks","neural-network","artificial-intelligence","pattern-recognition","pyconv","machine-learning"],"description":"Pyramidal Convolution: Rethinking Convolutional Neural Networks for Visual Recognition (https:\/\/arxiv.org\/pdf\/2006.11538.pdf)"}
{"name":"adefossez\/julius","full_name":"adefossez\/julius","topics":["dsp","pytorch"],"description":"Fast PyTorch based DSP for audio and 1D signals"}
{"name":"iduta\/iresnet","full_name":"iduta\/iresnet","topics":["image-recognition","imagenet","pytorch","image-classification","deep-learning","convolutional-neural-networks","residual-networks","cnn","visual-recognition","computer-vision","machine-learning","artificial-intelligence","pattern-recognition","residual-learning","resnet","iresnet","neural-networks","optimization-problem","deep-neural-networks","deep-residual-learning"],"description":"Improved Residual Networks (https:\/\/arxiv.org\/pdf\/2004.04989.pdf)"}
{"name":"banditml\/banditml","full_name":"banditml\/banditml","topics":["contextual-bandits","pytorch","personalization","neural-networks","bandits","reinforcement-learning"],"description":"A lightweight contextual bandit & reinforcement learning library designed to be used in production Python services."}
{"name":"aovoc\/nnieqat-pytorch","full_name":"aovoc\/nnieqat-pytorch","topics":["pytorch","quantized-training","nnie","nnieqat-pytorch"],"description":"A nnie quantization aware training tool on pytorch."}
{"name":"dengpingfan\/pranet","full_name":"DengPingFan\/PraNet","topics":["medical-image-segmentation","polyp-segmentation","reverse-attention","deep-learning"],"description":"PraNet: Parallel Reverse Attention Network for Polyp Segmentation, MICCAI 2020 (Oral). Code using Jittor Framework is available."}
{"name":"zhangqianhui\/gazeanimation","full_name":"zhangqianhui\/GazeAnimation","topics":["gaze-estimation","generative-adversarial-network","gaze-correction","gaze-redirection","facial-attribute-editing"],"description":"Give a portrait face, move the gaze up"}
{"name":"linjieli222\/hero","full_name":"linjieli222\/HERO","topics":["pytorch","transformers","vision-and-language","pretraining","tvr"],"description":"Research code for EMNLP 2020 paper \"HERO: Hierarchical Encoder for Video+Language Omni-representation Pre-training\""}
{"name":"gabeur\/mmt","full_name":"gabeur\/mmt","topics":["multimodal","video","language","vision","fusion","nlp"],"description":"Multi-Modal Transformer for Video Retrieval"}
{"name":"zassou65535\/image_converter","full_name":"zassou65535\/image_converter","topics":["python","gan","image-converter","ugatit","pytorch","image-conversion","style-transfer"],"description":"UGATIT\u306b\u3088\u308b\u753b\u50cf\u5909\u63db\u5668"}
{"name":"jacen789\/relation-extraction","full_name":"Jacen789\/relation-extraction","topics":["relation-extraction","chinese","nre","bert","pytorch"],"description":"\u4e2d\u6587\u5173\u7cfb\u62bd\u53d6"}
{"name":"cetmann\/iunets","full_name":"cetmann\/iunets","topics":[],"description":"A fully invertible U-Net for memory efficiency in Pytorch."}
{"name":"borgwardtlab\/set_functions_for_time_series","full_name":"BorgwardtLab\/Set_Functions_for_Time_Series","topics":["time-series-analysis","set-functions","deep-learning","icml-2020"],"description":"Repository of the ICML 2020 paper \"Set Functions for Time Series\""}
{"name":"huawei-noah\/multi_hyp_cc","full_name":"huawei-noah\/multi_hyp_cc","topics":["color-constancy","cvpr2020","convolutional-neural-networks","pytorch","whitebalance","cvpr"],"description":"[CVPR2020] A Multi-Hypothesis Approach to Color Constancy"}
{"name":"mims-harvard\/subgnn","full_name":"mims-harvard\/SubGNN","topics":["graph-neural-networks","subgraphs","graph-representation-learning","embeddings","deep-learning","dataset"],"description":"Subgraph Neural Networks (NeurIPS 2020)"}
{"name":"iteal\/wormpose","full_name":"iteal\/wormpose","topics":["python","machine-learning","deep-learning","pose-estimation","animal-pose-estimation","tensorflow","tensorflow2","c-elegans","worm","synthetic-dataset-generation","synthetic-images","neural-network","tierpsy","behavior-analysis","elegans","wormpose","computer-vision"],"description":"WormPose: Image synthesis and convolutional networks for pose estimation in C. elegans"}
{"name":"flyhighest\/unrealperson","full_name":"FlyHighest\/UnrealPerson","topics":["pytorch","unrealengine","re-identification"],"description":"[CVPR-2021]  UnrealPerson: An  adaptive pipeline  for  costless person re-identification"}
{"name":"linjieli222\/hero_video_feature_extractor","full_name":"linjieli222\/HERO_Video_Feature_Extractor","topics":["pytorch","slowfast","resnet","video-features","vision-and-language"],"description":"Video Feature Extraction Code for EMNLP 2020 paper \"HERO: Hierarchical Encoder for Video+Language Omni-representation Pre-training\""}
{"name":"steve-tod\/deformsyncnet","full_name":"Steve-Tod\/DeformSyncNet","topics":[],"description":"Official pytorch implementation of DeformSyncNet: Deformation Transfer via Synchronized Shape Deformation Spaces"}
{"name":"lucidrains\/reformer-pytorch","full_name":"lucidrains\/reformer-pytorch","topics":["artificial-intelligence","transformers","attention-mechanism","machine-learning","pytorch"],"description":"Reformer, the efficient Transformer, in Pytorch"}
{"name":"ymcui\/chinese-electra","full_name":"ymcui\/Chinese-ELECTRA","topics":["nlp","bert","electra","pre-trained-model","chinese","chinese-electra","language-model","pytorch","tensorflow"],"description":"Pre-trained Chinese ELECTRA\uff08\u4e2d\u6587ELECTRA\u9884\u8bad\u7ec3\u6a21\u578b\uff09"}
{"name":"fatescript\/centernet-better","full_name":"FateScript\/CenterNet-better","topics":["deep-learning","computer-vision","object-detection"],"description":"An easy to understand and better performance version of CenterNet"}
{"name":"clovaai\/rexnet","full_name":"clovaai\/rexnet","topics":["rexnet","deep-learning","image-classification","object-detection","transfer-learning","pytorch","imagenet","pretrained-model"],"description":"Official Pytorch implementation of ReXNet (Rank eXpansion Network) with pretrained models"}
{"name":"yinboc\/few-shot-meta-baseline","full_name":"yinboc\/few-shot-meta-baseline","topics":["machine-learning","few-shot-learning","pytorch"],"description":"Meta-Baseline: Exploring Simple Meta-Learning for Few-Shot Learning, in ICCV 2021"}
{"name":"kekmodel\/fixmatch-pytorch","full_name":"kekmodel\/FixMatch-pytorch","topics":["semi-supervised-learning","deeplearning","pytorch","fixmatch","randaugment"],"description":"Unofficial PyTorch implementation of \"FixMatch: Simplifying Semi-Supervised Learning with Consistency and Confidence\""}
{"name":"ai4bharat\/indic-bert","full_name":"AI4Bharat\/indic-bert","topics":["indian-languages","bert","multilingual-models","language-model","nlp"],"description":"BERT-based Multilingual Model for Indian Languages"}
{"name":"lucidrains\/routing-transformer","full_name":"lucidrains\/routing-transformer","topics":["artificial-intelligence","deep-learning","attention-mechanism","transformer","pytorch"],"description":"Fully featured implementation of Routing Transformer"}
{"name":"signatrix\/regnet","full_name":"signatrix\/regnet","topics":["designing-network-design-spaces","image-classification","pytorch","deep-learning","regnet","anynet","fair","paradigm","squeeze-and-excitation","imagenet","classification"],"description":"Pytorch implementation of network design paradigm described in the paper \"Designing Network Design Spaces\""}
{"name":"karolzak\/ipyplot","full_name":"karolzak\/ipyplot","topics":["image-processing","image-classification","images","plotting-in-python","jupyter-notebook","notebooks","html","machine-learning","deep-learning","visualization","image-viewer","notebook","python"],"description":"IPyPlot is a small python package offering fast and efficient plotting of images inside Python Notebooks. It's using IPython with HTML for faster, richer and more interactive way of displaying big numbers of images."}
{"name":"google\/tensorflow-recorder","full_name":"google\/tensorflow-recorder","topics":["tensorflow-recorder","tfrecords","tensorflow","preprocessing","image-processing","apache-beam"],"description":"TFRecorder makes it easy to create TensorFlow records (TFRecords) from Pandas DataFrames and CSVs files containing images or structured data."}
{"name":"phamquiluan\/publaynet","full_name":"phamquiluan\/PubLayNet","topics":["publaynet","pytorch","mask-rcnn","pretrained-models","object-detection","document-layout-analysis","paragraph-detection","table-detection","figure-detection"],"description":"ICDAR 2019: MaskRCNN on PubLayNet datasets. Paragraph detection, table detection, figure detection,..."}
{"name":"raphaelsty\/mkb","full_name":"raphaelsty\/mkb","topics":["knowledge-graph","knowledge-graph-embeddings","graph-embedding","graph","machine-learning","pytorch","wn18","knowledge","mkb","embeddings","distillation","triplets"],"description":"Knowledge Base Embedding By Cooperative Knowledge Distillation"}
{"name":"davisyoshida\/tf2-gradient-checkpointing","full_name":"davisyoshida\/tf2-gradient-checkpointing","topics":["tensorflow","tensorflow2","python","gradient-checkpointing","ml","deep-learning","deep-neural-networks"],"description":"Simple gradient checkpointing for eager mode execution"}
{"name":"l294265421\/acsa","full_name":"l294265421\/ACSA","topics":["aspect-category-sentiment-analysis","acd","acsc","joint-model","pytorch","aspect-based-sentiment-analysis"],"description":"Papers, models and datasets for Aspect-Category Sentiment Analysis."}
{"name":"ultralytics\/yolov5","full_name":"ultralytics\/yolov5","topics":["yolov3","yolov4","yolov5","object-detection","pytorch","onnx","coreml","ios","tflite","yolo","deep-learning","machine-learning","ml"],"description":"YOLOv5 \ud83d\ude80 in PyTorch > ONNX > CoreML > TFLite"}
{"name":"babysor\/mockingbird","full_name":"babysor\/MockingBird","topics":["ai","speech","pytorch","deep-learning"],"description":"\ud83d\ude80AI\u62df\u58f0: 5\u79d2\u5185\u514b\u9686\u60a8\u7684\u58f0\u97f3\u5e76\u751f\u6210\u4efb\u610f\u8bed\u97f3\u5185\u5bb9 Clone a voice in 5 seconds to generate arbitrary speech in real-time"}
{"name":"tencentarc\/gfpgan","full_name":"TencentARC\/GFPGAN","topics":["pytorch","gan","deep-learning","super-resolution","face-restoration","image-restoration","gfpgan"],"description":"GFPGAN aims at developing Practical Algorithms for Real-world Face Restoration."}
{"name":"xinntao\/real-esrgan","full_name":"xinntao\/Real-ESRGAN","topics":["esrgan","pytorch","real-esrgan","super-resolution","image-restoration","denoise","jpeg-compression","amine"],"description":"Real-ESRGAN aims at developing Practical Algorithms for General Image\/Video Restoration."}
{"name":"jaidedai\/easyocr","full_name":"JaidedAI\/EasyOCR","topics":["ocr","deep-learning","crnn","pytorch","lstm","machine-learning","scene-text","scene-text-recognition","optical-character-recognition","cnn","data-mining","image-processing","python","easyocr","information-retrieval"],"description":"Ready-to-use OCR with 80+ supported languages and all popular writing scripts including Latin, Chinese, Arabic, Devanagari, Cyrillic and etc."}
