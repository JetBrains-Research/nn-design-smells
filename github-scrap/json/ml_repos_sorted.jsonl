{"name":"ultralytics\/yolov5","full_name":"ultralytics\/yolov5.1","topics":["yolov3","yolov4","yolov5","object-detection","pytorch","onnx","coreml","ios","tflite","yolo","deep-learning","machine-learning","ml"],"description":"YOLOv5 \ud83d\ude80 in PyTorch > ONNX > CoreML > TFLite"}
{"name":"babysor\/mockingbird","full_name":"babysor\/MockingBird","topics":["ai","speech","pytorch","deep-learning"],"description":"\ud83d\ude80AI\u62df\u58f0: 5\u79d2\u5185\u514b\u9686\u60a8\u7684\u58f0\u97f3\u5e76\u751f\u6210\u4efb\u610f\u8bed\u97f3\u5185\u5bb9 Clone a voice in 5 seconds to generate arbitrary speech in real-time"}
{"name":"tencentarc\/gfpgan","full_name":"TencentARC\/GFPGAN","topics":["pytorch","gan","deep-learning","super-resolution","face-restoration","image-restoration","gfpgan"],"description":"GFPGAN aims at developing Practical Algorithms for Real-world Face Restoration."}
{"name":"xinntao\/real-esrgan","full_name":"xinntao\/Real-ESRGAN","topics":["esrgan","pytorch","real-esrgan","super-resolution","image-restoration","denoise","jpeg-compression","amine"],"description":"Real-ESRGAN aims at developing Practical Algorithms for General Image\/Video Restoration."}
{"name":"jaidedai\/easyocr","full_name":"JaidedAI\/EasyOCR","topics":["ocr","deep-learning","crnn","pytorch","lstm","machine-learning","scene-text","scene-text-recognition","optical-character-recognition","cnn","data-mining","image-processing","python","easyocr","information-retrieval"],"description":"Ready-to-use OCR with 80+ supported languages and all popular writing scripts including Latin, Chinese, Arabic, Devanagari, Cyrillic and etc."}
{"name":"jina-ai\/jina","full_name":"jina-ai\/jina","topics":["neural-search","cloud-native","deep-learning","machine-learning","framework","vector-search-engine","grpc","kubernetes","microservices","semantic-search","multimodal","crossmodal","creative-ai","aiops","mlops","pipeline","workflow","airflow","fastapi","generative-ai"],"description":"\ud83d\udd2e Build multimodal AI services via cloud native technologies \u00b7 Neural Search \u00b7 Generative AI \u00b7 Cloud Native"}
{"name":"huggingface\/datasets","full_name":"huggingface\/datasets","topics":["nlp","datasets","metrics","evaluation","pytorch","tensorflow","pandas","numpy","natural-language-processing","computer-vision","machine-learning","deep-learning","speech","hacktoberfest"],"description":"\ud83e\udd17 The largest hub of ready-to-use datasets for ML models with fast, easy-to-use and efficient data manipulation tools"}
{"name":"lucidrains\/vit-pytorch","full_name":"lucidrains\/vit-pytorch","topics":["artificial-intelligence","attention-mechanism","transformers","computer-vision","image-classification"],"description":"Implementation of Vision Transformer, a simple way to achieve SOTA in vision classification with only a single transformer encoder, in Pytorch"}
{"name":"microsoft\/bringing-old-photos-back-to-life","full_name":"microsoft\/Bringing-Old-Photos-Back-to-Life","topics":["image-restoration","old-photo-restoration","generative-adversarial-network","gans","pytorch","image-manipulation","photo-restoration","photos"],"description":"Bringing Old Photo Back to Life (CVPR 2020 oral)"}
{"name":"ml-tooling\/best-of-ml-python","full_name":"ml-tooling\/best-of-ml-python","topics":["best-of","awesome","python","machine-learning","data-science","nlp","data-visualization","tensorflow","pytorch","scikit-learn","keras","python-library","data-visualizations","deep-learning","automl","ml","jax","transformer","data-analysis"],"description":"\ud83c\udfc6 A ranked list of awesome machine learning Python libraries. Updated weekly."}
{"name":"microsoft\/qlib","full_name":"microsoft\/qlib","topics":["quantitative-finance","machine-learning","stock-data","platform","finance","algorithmic-trading","python","investment","quant","quantitative-trading","quant-dataset","quant-models","auto-quant","fintech","research-paper","paper","research","deep-learning"],"description":"Qlib is an AI-oriented quantitative investment platform, which aims to realize the potential, empower the research, and create the value of AI technologies in quantitative investment. With Qlib, you can easily try your ideas to create better Quant investment strategies. An increasing number of  SOTA Quant research works\/papers are released in Qlib."}
{"name":"lyhue1991\/eat_tensorflow2_in_30_days","full_name":"lyhue1991\/eat_tensorflow2_in_30_days","topics":["tensorflow2","tensorflow","tensorflow-examples","tensorflow-tutorial"],"description":"Tensorflow2.0 \ud83c\udf4e\ud83c\udf4a is delicious, just eat it! \ud83d\ude0b\ud83d\ude0b"}
{"name":"lucidrains\/dalle2-pytorch","full_name":"lucidrains\/DALLE2-pytorch","topics":["artificial-intelligence","deep-learning","text-to-image"],"description":"Implementation of DALL-E 2, OpenAI's updated text-to-image synthesis neural network,  in Pytorch"}
{"name":"megvii-basedetection\/yolox","full_name":"Megvii-BaseDetection\/YOLOX","topics":["yolox","yolov3","onnx","tensorrt","ncnn","openvino","pytorch","megengine","object-detection","yolo","deep-learning"],"description":"YOLOX is a high-performance anchor-free YOLO, exceeding yolov3~v5 with MegEngine, ONNX, TensorRT, ncnn, and OpenVINO supported. Documentation: https:\/\/yolox.readthedocs.io\/"}
{"name":"xmu-xiaoma666\/external-attention-pytorch","full_name":"xmu-xiaoma666\/External-Attention-pytorch","topics":["attention","pytorch","paper","cbam","squeeze","excitation-networks","linear-layers","visual-tasks"],"description":"\ud83c\udf40 Pytorch implementation of various Attention Mechanisms, MLP, Re-parameter, Convolution, which is helpful to further understand papers.\u2b50\u2b50\u2b50"}
{"name":"microsoft\/deepspeed","full_name":"microsoft\/DeepSpeed","topics":["deep-learning","pytorch","gpu","machine-learning","billion-parameters","data-parallelism","model-parallelism","inference","pipeline-parallelism","compression","mixture-of-experts","trillion-parameters","zero"],"description":"DeepSpeed is a deep learning optimization library that makes distributed training and inference easy, efficient, and effective."}
{"name":"coqui-ai\/tts","full_name":"coqui-ai\/TTS","topics":["python","text-to-speech","deep-learning","speech","pytorch","tts","vocoder","tacotron","glow-tts","melgan","speaker-encoder","hifigan","speaker-encodings","multi-speaker-tts","tts-model","speech-synthesis","voice-cloning","voice-synthesis"],"description":"\ud83d\udc38\ud83d\udcac - a deep learning toolkit for Text-to-Speech, battle-tested in research and production"}
{"name":"xuebinqin\/u-2-net","full_name":"xuebinqin\/U-2-Net","topics":["computer-vision","deep-learning","image-background-removal","image-processing","image-segmentation","u-2-net","u2net"],"description":"The code for our newly accepted paper in Pattern Recognition 2020: \"U^2-Net: Going Deeper with Nested U-Structure for Salient Object Detection.\""}
{"name":"peterl1n\/robustvideomatting","full_name":"PeterL1n\/RobustVideoMatting","topics":["computer-vision","machine-learning","ai","matting","deep-learning"],"description":"Robust Video Matting in PyTorch, TensorFlow, TensorFlow.js, ONNX, CoreML!"}
{"name":"jack-cherish\/pythonpark","full_name":"Jack-Cherish\/PythonPark","topics":["python3","pytorch","deeplearning","deep-learning","webspider","python","python-spider"],"description":"Python \u5f00\u6e90\u9879\u76ee\u4e4b\u300c\u81ea\u5b66\u7f16\u7a0b\u4e4b\u8def\u300d\uff0c\u4fdd\u59c6\u7ea7\u6559\u7a0b\uff1aAI\u5b9e\u9a8c\u5ba4\u3001\u5b9d\u85cf\u89c6\u9891\u3001\u6570\u636e\u7ed3\u6784\u3001\u5b66\u4e60\u6307\u5357\u3001\u673a\u5668\u5b66\u4e60\u5b9e\u6218\u3001\u6df1\u5ea6\u5b66\u4e60\u5b9e\u6218\u3001\u7f51\u7edc\u722c\u866b\u3001\u5927\u5382\u9762\u7ecf\u3001\u7a0b\u5e8f\u4eba\u751f\u3001\u8d44\u6e90\u5206\u4eab\u3002"}
{"name":"geohot\/tinygrad","full_name":"geohot\/tinygrad","topics":[],"description":"You like pytorch? You like micrograd? You love tinygrad! \u2764\ufe0f "}
{"name":"eleutherai\/gpt-neo","full_name":"EleutherAI\/gpt-neo","topics":["language-model","transformers","gpt","gpt-2","gpt-3"],"description":"An implementation of model parallel GPT-2 and GPT-3-style models using the mesh-tensorflow library."}
{"name":"lucidrains\/imagen-pytorch","full_name":"lucidrains\/imagen-pytorch","topics":["artificial-intelligence","deep-learning","text-to-image","imagination-machine","text-to-video"],"description":"Implementation of Imagen, Google's Text-to-Image Neural Network, in Pytorch"}
{"name":"sanster\/lama-cleaner","full_name":"Sanster\/lama-cleaner","topics":["inpainting","pytorch","lama","latent-diffusion","mat","zits","stable-diffusion"],"description":"Image inpainting tool powered by SOTA AI Model. Remove any unwanted object, defect, people from your pictures or erase and replace(powered by stable diffusion) any thing on your pictures."}
{"name":"paddlepaddle\/paddlenlp","full_name":"PaddlePaddle\/PaddleNLP","topics":["nlp","seq2seq","embedding","bert","ernie","paddlenlp","pretrained-models","transformers","information-extraction","question-answering","search-engine","semantic-analysis","sentiment-analysis","neural-search","uie","image-generation","document-intelligence","stable-diffusion","aigc","compression"],"description":"\ud83d\udc51 Easy-to-use and powerful NLP library with \ud83e\udd17 Awesome model zoo, supporting wide-range of NLP tasks from research to industrial applications, including \ud83d\uddc2Text Classification,  \ud83d\udd0d Neural Search, \u2753 Question Answering, \u2139\ufe0f Information Extraction, \ud83d\udcc4 Document Intelligence, \ud83d\udc8c Sentiment Analysis and \ud83d\uddbc Diffusion AIGC system etc."}
{"name":"serengil\/deepface","full_name":"serengil\/deepface","topics":["face-recognition","vgg-face","facenet","openface","facial-expression-recognition","age-prediction","gender-prediction","race-classification","emotion-recognition","deep-learning","machine-learning","deepface","face-analysis","python","deepid","arcface","embedding","facial-recognition"],"description":"A Lightweight Face Recognition and Facial Attribute Analysis (Age, Gender, Emotion and Race) Library for Python"}
{"name":"rangilyu\/nanodet","full_name":"RangiLyu\/nanodet","topics":["deep-neural-networks","deep-learning","object-detection","anchor-free","ncnn","shufflenet","pytorch","mnn","repvgg","openvino","efficientnet","android","model-zoo","nanodet-plus","nanodet"],"description":"NanoDet-Plus\u26a1Super fast and lightweight anchor-free object detection model. \ud83d\udd25Only 980 KB(int8) \/ 1.8MB (fp16) and run 97FPS on cellphone\ud83d\udd25"}
{"name":"aladdinpersson\/machine-learning-collection","full_name":"aladdinpersson\/Machine-Learning-Collection","topics":["pytorch","pytorch-implementation","pytorch-tutorial","pytorch-gan","pytorch-examples","tensorflow2","tensorflow-tutorials","tensorflow-examples","machine-learning","machine-learning-algorithms","pytorch-tutorials"],"description":"A resource for learning about Machine learning & Deep Learning"}
{"name":"anjok07\/ultimatevocalremovergui","full_name":"Anjok07\/ultimatevocalremovergui","topics":["vocal-remover","pytorch","source","separation","kareokee","karaoke","spectrogram","instrumental","vocal","vocals","audio","music"],"description":" GUI for a Vocal Remover that uses Deep Neural Networks."}
{"name":"lucidrains\/dalle-pytorch","full_name":"lucidrains\/DALLE-pytorch","topics":["artificial-intelligence","deep-learning","attention-mechanism","text-to-image","transformers","multi-modal"],"description":"Implementation \/ replication of DALL-E, OpenAI's Text to Image Transformer, in Pytorch"}
{"name":"openai\/jukebox","full_name":"openai\/jukebox","topics":["paper","audio","music","pytorch","generative-model","vq-vae","transformer"],"description":"Code for the paper \"Jukebox: A Generative Model for Music\""}
{"name":"open-mmlab\/mmsegmentation","full_name":"open-mmlab\/mmsegmentation","topics":["semantic-segmentation","pytorch","pspnet","deeplabv3","transformer","swin-transformer","realtime-segmentation","vessel-segmentation","retinal-vessel-segmentation","image-segmentation","medical-image-segmentation"],"description":"OpenMMLab Semantic Segmentation Toolbox and Benchmark."}
{"name":"speechbrain\/speechbrain","full_name":"speechbrain\/speechbrain","topics":["speech-recognition","speech-toolkit","speaker-recognition","speech-to-text","speech-enhancement","speech-separation","audio","audio-processing","speech-processing","speechrecognition","asr","voice-recognition","spoken-language-understanding","speaker-diarization","speaker-verification","pytorch","huggingface","transformers","language-model","deep-learning"],"description":"A PyTorch-based Speech Toolkit"}
{"name":"hpcaitech\/colossalai","full_name":"hpcaitech\/ColossalAI","topics":["deep-learning","hpc","large-scale","data-parallelism","pipeline-parallelism","model-parallelism","ai","big-model","distributed-computing","inference","heterogeneous-training"],"description":"Colossal-AI: A Unified Deep Learning System for Big Model Era"}
{"name":"tianxiaomo\/pytorch-yolov4","full_name":"Tianxiaomo\/pytorch-YOLOv4","topics":["yolov4","pytorch","darknet2pytorch","darknet2onnx","tensorrt","onnx","pytorch-yolov4","yolov4-tiny","yolov3"],"description":"PyTorch ,ONNX and TensorRT implementation of YOLOv4"}
{"name":"dlr-rm\/stable-baselines3","full_name":"DLR-RM\/stable-baselines3","topics":["reinforcement-learning","reinforcement-learning-algorithms","machine-learning","gym","openai","baselines","toolbox","stable-baselines","python","pytorch","robotics","sde","gsde","sb3"],"description":"PyTorch version of Stable Baselines, reliable implementations of reinforcement learning algorithms. "}
{"name":"lucidrains\/deep-daze","full_name":"lucidrains\/deep-daze","topics":["artificial-intelligence","deep-learning","transformers","siren","implicit-neural-representation","text-to-image","multi-modality"],"description":"Simple command line tool for text to image generation using OpenAI's CLIP and Siren (Implicit neural representation network). Technique was originally created by https:\/\/twitter.com\/advadnoun"}
{"name":"nathanua\/u-2-net","full_name":"xuebinqin\/U-2-Net","topics":["computer-vision","deep-learning","image-background-removal","image-processing","image-segmentation","u-2-net","u2net"],"description":"The code for our newly accepted paper in Pattern Recognition 2020: \"U^2-Net: Going Deeper with Nested U-Structure for Salient Object Detection.\""}
{"name":"maartengr\/bertopic","full_name":"MaartenGr\/BERTopic","topics":["bert","transformers","topic-modeling","sentence-embeddings","nlp","machine-learning","topic","ldavis","topic-modelling","topic-models"],"description":"Leveraging BERT and c-TF-IDF to create easily interpretable topics. "}
{"name":"systemerrorwang\/white-box-cartoonization","full_name":"SystemErrorWang\/White-box-Cartoonization","topics":[],"description":"Official tensorflow implementation for CVPR2020 paper \u201cLearning to Cartoonize Using White-box Cartoon Representations\u201d"}
{"name":"ashawkey\/stable-dreamfusion","full_name":"ashawkey\/stable-dreamfusion","topics":["text-to-3d","gui","nerf","stable-diffusion","dreamfusion"],"description":"A pytorch implementation of text-to-3D dreamfusion, powered by stable diffusion."}
{"name":"meituan\/yolov6","full_name":"meituan\/YOLOv6","topics":["object-detection","pytorch","yolo"],"description":"YOLOv6: a single-stage object detection framework dedicated to industrial applications."}
{"name":"babysor\/realtime-voice-clone-chinese","full_name":"babysor\/MockingBird","topics":["ai","speech","pytorch","deep-learning"],"description":"\ud83d\ude80AI\u62df\u58f0: 5\u79d2\u5185\u514b\u9686\u60a8\u7684\u58f0\u97f3\u5e76\u751f\u6210\u4efb\u610f\u8bed\u97f3\u5185\u5bb9 Clone a voice in 5 seconds to generate arbitrary speech in real-time"}
{"name":"layout-parser\/layout-parser","full_name":"Layout-Parser\/layout-parser","topics":["layout-analysis","deep-learning","object-detection","ocr","layout-parser","detectron2","document-layout-analysis","computer-vision","document-image-processing","layout-detection"],"description":"A Unified Toolkit for Deep Learning Based Document Image Analysis"}
{"name":"mikel-brostrom\/yolov5_strongsort_osnet","full_name":"mikel-brostrom\/yolov8_tracking","topics":["yolov5","strongsort","bytetrack","ocsort","osnet","deep-learning","segmentation","tensorrt","tracking-by-detection"],"description":"Real-time multi-object tracking and segmentation using YOLOv8"}
{"name":"open-mmlab\/openpcdet","full_name":"open-mmlab\/OpenPCDet","topics":["point-cloud","3d-detection","autonomous-driving","pv-rcnn","object-detection","pytorch"],"description":"OpenPCDet Toolbox for LiDAR-based 3D Object Detection."}
{"name":"kuprel\/min-dalle","full_name":"kuprel\/min-dalle","topics":["artificial-intelligence","deep-learning","pytorch","text-to-image"],"description":"min(DALL\u00b7E) is a fast, minimal port of DALL\u00b7E Mini to PyTorch"}
{"name":"lyhue1991\/eat_pytorch_in_20_days","full_name":"lyhue1991\/eat_pytorch_in_20_days","topics":["pytorch","deep-learning"],"description":"Pytorch\ud83c\udf4a\ud83c\udf49   is delicious, just eat it! \ud83d\ude0b\ud83d\ude0b"}
{"name":"lucidrains\/stylegan2-pytorch","full_name":"lucidrains\/stylegan2-pytorch","topics":["generative-adversarial-network","artificial-intelligence","pytorch","machine-learning","generative-model"],"description":"Simplest working implementation of Stylegan2, state of the art generative adversarial network, in Pytorch. Enabling everyone to experience disentanglement"}
{"name":"replicate\/cog","full_name":"replicate\/cog","topics":["containers","cuda","deep-learning","docker","machine-learning","pytorch","tensorflow"],"description":"Containers for machine learning"}
{"name":"microsoft\/hummingbird","full_name":"microsoft\/hummingbird","topics":["machine-learning","neural-networks","scikit-learn","pytorch","tensor-computation"],"description":"Hummingbird compiles trained ML models into tensor computation for faster inference."}
{"name":"zhanghang1989\/resnest","full_name":"zhanghang1989\/ResNeSt","topics":["deep-learning","resnet","resnest","pytorch","detectron-models","split-attention-networks"],"description":"ResNeSt: Split-Attention Networks"}
{"name":"postech-cvlab\/pytorch-studiogan","full_name":"POSTECH-CVLab\/PyTorch-StudioGAN","topics":["pytorch","deep-learning","generative-adversarial-network","biggan","stylegan2","machine-learning","stylegan2-ada","stylegan3","data-efficient-gan-training","clean-fid"],"description":"StudioGAN is a Pytorch library providing implementations of representative Generative Adversarial Networks (GANs) for conditional\/unconditional image generation."}
{"name":"antixk\/pytorch-vae","full_name":"AntixK\/PyTorch-VAE","topics":["pytorch","pytorch-implementation","vae","vae-implementation","deep-learning","reproducible-research","paper-implementations","pytorch-vae","variational-autoencoders","architecture","beta-vae","vqvae","gumbel-softmax","celeba-dataset","iwae","wae","dfc-vae"],"description":"A Collection of Variational Autoencoders (VAE) in PyTorch."}
{"name":"mingchaozhu\/deeplearning","full_name":"MingchaoZhu\/DeepLearning","topics":["python","deep-learning","machine-learning","xgboost","ensemble-learning","bayesian","regularization"],"description":"Python for\u300aDeep Learning\u300b\uff0c\u8be5\u4e66\u4e3a\u300a\u6df1\u5ea6\u5b66\u4e60\u300b(\u82b1\u4e66) \u6570\u5b66\u63a8\u5bfc\u3001\u539f\u7406\u5256\u6790\u4e0e\u6e90\u7801\u7ea7\u522b\u4ee3\u7801\u5b9e\u73b0"}
{"name":"pair-code\/lit","full_name":"PAIR-code\/lit","topics":["machine-learning","natural-language-processing","visualization"],"description":"The Learning Interpretability Tool: Interactively analyze ML models to understand their behavior in an extensible and framework agnostic interface."}
{"name":"megvii-research\/eccv2022-rife","full_name":"megvii-research\/ECCV2022-RIFE","topics":["video-interpolation","computer-vision","slomo-filter","deep-learning"],"description":"ECCV2022-Real-Time Intermediate Flow Estimation for Video Frame Interpolation"}
{"name":"nidhaloff\/igel","full_name":"nidhaloff\/igel","topics":["machine-learning","machinelearning","machine-learning-algorithms","machine-learning-library","artificial-intelligence","neural-network","neural-networks","sklearn","scikit-learn","scikitlearn-machine-learning","data-science","data-analysis","preprocessing","automation","automl","automl-experiments","hacktoberfest","hacktoberfest2021"],"description":"a delightful machine learning tool that allows you to train, test, and use models without writing code"}
{"name":"ifzhang\/bytetrack","full_name":"ifzhang\/ByteTrack","topics":["multi-object-tracking","real-time","deployment","pytorch"],"description":"[ECCV 2022] ByteTrack: Multi-Object Tracking by Associating Every Detection Box"}
{"name":"open-mmlab\/mmdetection3d","full_name":"open-mmlab\/mmdetection3d","topics":["pytorch","3d-object-detection","object-detection","point-cloud"],"description":"OpenMMLab's next-generation platform for general 3D object detection."}
{"name":"minivision-ai\/photo2cartoon","full_name":"minivision-ai\/photo2cartoon","topics":["cartoon","deep-learning","computer-vision","gan","avatar-generator"],"description":"\u4eba\u50cf\u5361\u901a\u5316\u63a2\u7d22\u9879\u76ee (photo-to-cartoon translation project)"}
{"name":"cluebenchmark\/cluedatasetsearch","full_name":"CLUEbenchmark\/CLUEDatasetSearch","topics":["nlp","datasets","chinese","ner","qa","match","text-classification","machine-translation","knowledge-graph","corpus","machine-reading-comprehension","sentiment-analysis","text-similarity","text-summarization"],"description":"\u641c\u7d22\u6240\u6709\u4e2d\u6587NLP\u6570\u636e\u96c6\uff0c\u9644\u5e38\u7528\u82f1\u6587NLP\u6570\u636e\u96c6"}
{"name":"open-mmlab\/mmocr","full_name":"open-mmlab\/mmocr","topics":["pytorch","ocr","deep-learning","text-detection","text-recognition","sar","psenet","panet","maskrcnn","key-information-extraction","pan","dbnet","sdmg-r","textsnake","crnn","robustscanner","segmentation-based-text-recognition","fcenet","satrn","abinet"],"description":"OpenMMLab Text Detection, Recognition and Understanding Toolbox"}
{"name":"lucidrains\/denoising-diffusion-pytorch","full_name":"lucidrains\/denoising-diffusion-pytorch","topics":["artificial-intelligence","deep-learning","generative-model","score-matching"],"description":"Implementation of Denoising Diffusion Probabilistic Model in Pytorch"}
{"name":"jittor\/jittor","full_name":"Jittor\/jittor","topics":["deep-learning","gpu","python","jittor","cuda"],"description":"Jittor is a high-performance deep learning framework based on JIT compiling and meta-operators."}
{"name":"neuml\/txtai","full_name":"neuml\/txtai","topics":["python","search","machine-learning","nlp","deep-learning","document-search","audio-search","image-search","video-search","semantic-search","similarity-search","neural-search","contextual-search","vector-search","machine-learning-workflows","machine-learning-pipelines","microservice","api","cloud-native","txtai"],"description":"\ud83d\udca1 Build AI-powered semantic search applications "}
{"name":"microsoft\/muzic","full_name":"microsoft\/muzic","topics":["music","music-composition","ai-music","deep-learning"],"description":"Muzic: Music Understanding and Generation with Artificial Intelligence"}
{"name":"mikel-brostrom\/yolov5_deepsort_osnet","full_name":"mikel-brostrom\/yolov8_tracking","topics":["yolov5","strongsort","bytetrack","ocsort","osnet","deep-learning","segmentation","tensorrt","tracking-by-detection"],"description":"Real-time multi-object tracking and segmentation using YOLOv8"}
{"name":"neuralchen\/simswap","full_name":"neuralchen\/SimSwap","topics":["face","deepfakes","faceswap","gan","swap","deepfacelab","image-manipulation","video","pytorch"],"description":"An arbitrary face-swapping framework on images and videos with one single trained model!"}
{"name":"jettify\/pytorch-optimizer","full_name":"jettify\/pytorch-optimizer","topics":["pytorch","optimizer","diffgrad","adamod","lamb","yogi","accsgd","adabound","novograd","shampoo","lookahead","swats","sgdp","adabelief","apollo","hacktoberfest"],"description":"torch-optimizer -- collection of optimizers for Pytorch"}
{"name":"jbesomi\/texthero","full_name":"jbesomi\/texthero","topics":["text-preprocessing","text-representation","text-visualization","nlp","word-embeddings","machine-learning","text-mining","nlp-pipeline","text-clustering","texthero"],"description":"Text preprocessing, representation and visualization from zero to hero."}
{"name":"hzwer\/eccv2022-rife","full_name":"megvii-research\/ECCV2022-RIFE","topics":["video-interpolation","computer-vision","slomo-filter","deep-learning"],"description":"ECCV2022-Real-Time Intermediate Flow Estimation for Video Frame Interpolation"}
{"name":"hzwer\/arxiv2021-rife","full_name":"megvii-research\/ECCV2022-RIFE","topics":["video-interpolation","computer-vision","slomo-filter","deep-learning"],"description":"ECCV2022-Real-Time Intermediate Flow Estimation for Video Frame Interpolation"}
{"name":"ourownstory\/neural_prophet","full_name":"ourownstory\/neural_prophet","topics":["forecasting","time-series","machine-learning","fbprophet","prophet","forecast","artificial-intelligence","prediction","trend","seasonality","autoregression","pytorch","timeseries","forecasting-algorithm","forecasting-model","neuralprophet","neural","neural-network","python","deep-learning"],"description":"NeuralProphet: A simple forecasting package"}
{"name":"janspiry\/image-super-resolution-via-iterative-refinement","full_name":"Janspiry\/Image-Super-Resolution-via-Iterative-Refinement","topics":["pytorch","diffusion-probabilistic","super-resolution","ddpm","image-generation"],"description":"Unofficial implementation of Image Super-Resolution via Iterative Refinement by Pytorch"}
{"name":"open-mmlab\/mmpose","full_name":"open-mmlab\/mmpose","topics":["pose-estimation","human-pose","pytorch","hrnet","mpii","benchmark","cpm","hourglass","higher-hrnet","crowdpose","ochuman","freihand","mspn","rsn","udp","deeppose","animal-pose-estimation","mmpose","hand-pose-estimation","face-keypoint"],"description":"OpenMMLab Pose Estimation Toolbox and Benchmark."}
{"name":"princeton-nlp\/simcse","full_name":"princeton-nlp\/SimCSE","topics":["nlp","sentence-embeddings"],"description":"EMNLP'2021: SimCSE: Simple Contrastive Learning of Sentence Embeddings https:\/\/arxiv.org\/abs\/2104.08821"}
{"name":"mikel-brostrom\/yolov5_deepsort_pytorch","full_name":"mikel-brostrom\/yolov8_tracking","topics":["yolov5","strongsort","bytetrack","ocsort","osnet","deep-learning","segmentation","tensorrt","tracking-by-detection"],"description":"Real-time multi-object tracking and segmentation using YOLOv8"}
{"name":"jingyunliang\/swinir","full_name":"JingyunLiang\/SwinIR","topics":["image-super-resolution","image-denoising","compression-artifact-reduction","image-deblocking","transformer","real-world-image-super-resolution","lightweight-image-super-resolution","image-restoration","low-level-vision","vision-transformer","image-sr","restoration","super-resolution","denoising","deblocking","decompression"],"description":"SwinIR: Image Restoration Using Swin Transformer (official repository)"}
{"name":"cleardusk\/3ddfa_v2","full_name":"cleardusk\/3DDFA_V2","topics":["eccv","3d-face-alignment","pytorch","face-alignment","3d-face","3dmm","alignment","3d","computer-vision","onnx","3d-landmarks","single-image-reconstruction","eccv-2020"],"description":"The official PyTorch implementation of Towards Fast, Accurate and Stable 3D Dense Face Alignment, ECCV 2020."}
{"name":"open-mmlab\/mmaction2","full_name":"open-mmlab\/mmaction2","topics":["action-recognition","temporal-action-localization","pytorch","video-understanding","tsn","i3d","slowfast","ava","spatial-temporal-action-detection","benchmark","tsm","x3d","non-local","deep-learning","openmmlab","posec3d","video-classification"],"description":"OpenMMLab's Next Generation Video Understanding Toolbox and Benchmark"}
{"name":"rucaibox\/recbole","full_name":"RUCAIBox\/RecBole","topics":["recommender-systems","collaborative-filtering","knowledge-graph","ctr-prediction","deep-learning","pytorch","graph-neural-networks","sequential-recommendation","recommendations","recommendation-system","recommender"],"description":"A unified, comprehensive and efficient recommendation library"}
{"name":"zenml-io\/zenml","full_name":"zenml-io\/zenml","topics":["mlops","machine-learning","data-science","production-ready","devops-tools","zenml","pipelines","metadata-tracking","deep-learning","pytorch","tensorflow","ml","ai","automl","hacktobe","hacktoberfest","workflow"],"description":"ZenML \ud83d\ude4f: Build portable, production-ready MLOps pipelines. https:\/\/zenml.io."}
{"name":"libffcv\/ffcv","full_name":"libffcv\/ffcv","topics":["machine-learning","data-science","pytorch"],"description":"FFCV: Fast Forward Computer Vision (and other ML workloads!)"}
{"name":"hzwer\/arxiv2020-rife","full_name":"megvii-research\/ECCV2022-RIFE","topics":["video-interpolation","computer-vision","slomo-filter","deep-learning"],"description":"ECCV2022-Real-Time Intermediate Flow Estimation for Video Frame Interpolation"}
{"name":"jdb78\/pytorch-forecasting","full_name":"jdb78\/pytorch-forecasting","topics":["pytorch","forecasting","gpu","uncertainty","timeseries-forecasting","pytorch-lightning","deep-learning","neural-networks","timeseries","machine-learning","pandas","python","ai","artifical-intelligense","data-science","temporal"],"description":"Time series forecasting with PyTorch"}
{"name":"zhouhaoyi\/informer2020","full_name":"zhouhaoyi\/Informer2020","topics":["deep-learning","self-attention","time-series","pytorch","forecasting","transformer"],"description":"The GitHub repository for the paper \"Informer\" accepted by AAAI 2021."}
{"name":"mosaicml\/composer","full_name":"mosaicml\/composer","topics":["deep-learning","pytorch","neural-networks","ml-systems","ml-efficiency","ml-training","machine-learning","neural-network"],"description":"Train neural networks up to 7x faster"}
{"name":"deepmind\/dm-haiku","full_name":"deepmind\/dm-haiku","topics":["machine-learning","neural-networks","jax","deep-learning","deep-neural-networks"],"description":"JAX-based neural network library"}
{"name":"thuml\/transfer-learning-library","full_name":"thuml\/Transfer-Learning-Library","topics":["domain-adaptation","transfer-learning","finetune","unsupervised-domain-adaptation","image-translation","adversarial-learning","deep-learning","self-training","semi-supervised-learning","dann","out-of-distribution-generalization"],"description":"Transfer Learning Library for Domain Adaptation, Task Adaptation, and Domain Generalization"}
{"name":"thunlp\/openprompt","full_name":"thunlp\/OpenPrompt","topics":["nlp","pre-trained-language-models","ai","nlp-machine-learning","natural-language-processing","natural-language-understanding","deep-learning","pre-trained-model","nlp-library","pytorch","transformer","prompt","prompt-toolkit","prompts","prompt-based-tuning","prompt-learning"],"description":"An Open-Source Framework for Prompt-Learning."}
{"name":"lukas-blecher\/latex-ocr","full_name":"lukas-blecher\/LaTeX-OCR","topics":["machine-learning","transformer","im2latex","deep-learning","image2text","latex","dataset","pytorch","im2markup","ocr","latex-ocr","vit","math-ocr","vision-transformer","image-processing","python","im2text"],"description":"pix2tex: Using a ViT to convert images of equations into LaTeX code."}
{"name":"lucidrains\/x-transformers","full_name":"lucidrains\/x-transformers","topics":["artificial-intelligence","deep-learning","attention-mechanism","transformers"],"description":"A simple but complete full-attention transformer with a set of promising experimental features from various papers"}
{"name":"open-mmlab\/mmselfsup","full_name":"open-mmlab\/mmselfsup","topics":["self-supervised-learning","unsupervised-learning","pytorch","moco","simclr","simsiam","mae","masked-image-modeling","beit"],"description":"OpenMMLab Self-Supervised Learning Toolbox and Benchmark"}
{"name":"magicleap\/supergluepretrainednetwork","full_name":"magicleap\/SuperGluePretrainedNetwork","topics":["deep-learning","feature-matching","pose-estimation","graph-neural-networks"],"description":"SuperGlue: Learning Feature Matching with Graph Neural Networks (CVPR 2020, Oral)"}
{"name":"hunglc007\/tensorflow-yolov4-tflite","full_name":"hunglc007\/tensorflow-yolov4-tflite","topics":["yolov4","yolov3","tflite","object-detection","tensorflow","tf2","tensorrt","yolov3-tiny","android"],"description":"YOLOv4, YOLOv4-tiny, YOLOv3, YOLOv3-tiny Implemented in Tensorflow 2.0, Android. Convert YOLO v4 .weights tensorflow, tensorrt and tflite"}
{"name":"google-research\/electra","full_name":"google-research\/electra","topics":["nlp","deep-learning","tensorflow"],"description":"ELECTRA: Pre-training Text Encoders as Discriminators Rather Than Generators"}
{"name":"mlfoundations\/open_clip","full_name":"mlfoundations\/open_clip","topics":["deep-learning","pytorch","computer-vision","language-model","multi-modal-learning","contrastive-loss","zero-shot-classification","pretrained-models"],"description":"An open source implementation of CLIP."}
{"name":"deepchecks\/deepchecks","full_name":"deepchecks\/deepchecks","topics":["machine-learning","ml","model-validation","data-validation","mlops","data-science","python","jupyter-notebook","model-monitoring","data-drift","html-report","deep-learning","pytorch","pandas-dataframe"],"description":"Tests for Continuous Validation of ML Models & Data. Deepchecks is a Python package for comprehensively validating your machine learning models and data with minimal effort."}
{"name":"obss\/sahi","full_name":"obss\/sahi","topics":["object-detection","instance-segmentation","computer-vision","small-object-detection","large-image","mmdetection","pytorch","python","yolov5","coco","detectron2","deep-learning","machine-learning","remote-sensing","huggingface","fiftyone","satellite","tiling","merge","explainable-ai"],"description":"Framework agnostic sliced\/tiled inference + interactive ui + error analysis plots"}
{"name":"wongkinyiu\/scaledyolov4","full_name":"WongKinYiu\/ScaledYOLOv4","topics":["machine-learning","deep-learning","ml","pytorch","yolo","object-detection","yolov3","yolov4","scaled-yolov4","yolov4-tiny","yolov4-csp","yolov4-large"],"description":"Scaled-YOLOv4: Scaling Cross Stage Partial Network"}
{"name":"ivan-bilan\/the-nlp-pandect","full_name":"ivan-bilan\/The-NLP-Pandect","topics":["nlp","naturallanguageprocessing","awesome-list","deeplearning","natural-language-processing","pandect"],"description":"A comprehensive reference for all topics related to Natural Language Processing"}
{"name":"ashleve\/lightning-hydra-template","full_name":"ashleve\/lightning-hydra-template","topics":["pytorch-lightning","wandb","project-structure","config","deep-learning","hydra","template","pytorch","reproducibility","best-practices","neptune","mlflow","tensorboard","comet","mlops"],"description":"PyTorch Lightning + Hydra. A very user-friendly template for rapid and reproducible ML experimentation with best practices.  \u26a1\ud83d\udd25\u26a1"}
{"name":"cvg\/hierarchical-localization","full_name":"cvg\/Hierarchical-Localization","topics":["deep-learning","visual-localization","feature-matching","image-retrieval","structure-from-motion","pose-estimation","superglue"],"description":"Visual localization made easy with hloc"}
{"name":"voxel51\/fiftyone","full_name":"voxel51\/fiftyone","topics":["machine-learning","artificial-intelligence","deep-learning","computer-vision","developer-tools","data-science","python","hacktoberfest"],"description":"The open-source tool for building high-quality datasets and computer vision models"}
{"name":"benedekrozemberczki\/pytorch_geometric_temporal","full_name":"benedekrozemberczki\/pytorch_geometric_temporal","topics":["pytorch","graph-neural-networks","temporal-networks","temporal-graphs","gcn","graph-convolutional-networks","deep-learning","network-science","temporal-data","node-embedding","network-embedding","graph-embedding","spatial-data","spatial-analysis","spatio-temporal-data","spatio-temporal-analysis","gnn","graph-convolution","spatiotemporal"],"description":"PyTorch Geometric Temporal: Spatiotemporal Signal Processing with Neural Machine Learning Models (CIKM 2021)"}
{"name":"wongkinyiu\/yolor","full_name":"WongKinYiu\/yolor","topics":["yolov4","scaled-yolov4","yolov4-csp","darknet","pytorch","implicit","explicit","yolor","yolo","representation","unified-network"],"description":"implementation of paper - You Only Learn One Representation: Unified Network for Multiple Tasks (https:\/\/arxiv.org\/abs\/2105.04206)"}
{"name":"yuchenlin\/rebiber","full_name":"yuchenlin\/rebiber","topics":["bibtex","latex","publication","research-paper","bibliography","natural-language-processing","machine-learning"],"description":"A simple tool to update bib entries with their official information (e.g., DBLP or the ACL anthology)."}
{"name":"yaofanguk\/video-subtitle-extractor","full_name":"YaoFANGUK\/video-subtitle-extractor","topics":["deep-learning","ocr","subtitles","srt","hardsub","extract","ripper","subrip"],"description":"\u89c6\u9891\u786c\u5b57\u5e55\u63d0\u53d6\uff0c\u751f\u6210srt\u6587\u4ef6\u3002\u65e0\u9700\u7533\u8bf7\u7b2c\u4e09\u65b9API\uff0c\u672c\u5730\u5b9e\u73b0\u6587\u672c\u8bc6\u522b\u3002\u57fa\u4e8e\u6df1\u5ea6\u5b66\u4e60\u7684\u89c6\u9891\u5b57\u5e55\u63d0\u53d6\u6846\u67b6\uff0c\u5305\u542b\u5b57\u5e55\u533a\u57df\u68c0\u6d4b\u3001\u5b57\u5e55\u5185\u5bb9\u63d0\u53d6\u3002A GUI tool for extracting hard-coded subtitle (hardsub) from videos and generating srt files. "}
{"name":"lightly-ai\/lightly","full_name":"lightly-ai\/lightly","topics":["deep-learning","self-supervised-learning","machine-learning","computer-vision","pytorch","embeddings","contrastive-learning","active-learning"],"description":"A python library for self-supervised learning on images."}
{"name":"determined-ai\/determined","full_name":"determined-ai\/determined","topics":["deep-learning","machine-learning","ml-platform","ml-infrastructure","hyperparameter-optimization","hyperparameter-search","distributed-training","pytorch","tensorflow","hyperparameter-tuning","kubernetes","data-science","mlops"],"description":"Determined: Deep Learning Training Platform"}
{"name":"bubbliiiing\/yolov4-pytorch","full_name":"bubbliiiing\/yolov4-pytorch","topics":[],"description":"\u8fd9\u662f\u4e00\u4e2aYoloV4-pytorch\u7684\u6e90\u7801\uff0c\u53ef\u4ee5\u7528\u4e8e\u8bad\u7ec3\u81ea\u5df1\u7684\u6a21\u578b\u3002"}
{"name":"aqlaboratory\/openfold","full_name":"aqlaboratory\/openfold","topics":["pytorch","protein-structure","alphafold2"],"description":"Trainable, memory-efficient, and GPU-friendly PyTorch reproduction of AlphaFold 2"}
{"name":"lucidrains\/reformer-pytorch","full_name":"lucidrains\/reformer-pytorch","topics":["artificial-intelligence","transformers","attention-mechanism","machine-learning","pytorch"],"description":"Reformer, the efficient Transformer, in Pytorch"}
{"name":"nadermx\/backgroundremover","full_name":"nadermx\/backgroundremover","topics":["background-remover","backgroundremover","removebackground","remove-background","remove-background-image","remove-background-video","background-removal","python","video","pytorch","video-editing","photo-editing"],"description":"Background Remover lets you Remove Background from images and video with a simple command line interface that is free and open source."}
{"name":"jaywalnut310\/vits","full_name":"jaywalnut310\/vits","topics":["tts","text-to-speech","pytorch","deep-learning","speech-synthesis"],"description":"VITS: Conditional Variational Autoencoder with Adversarial Learning for End-to-End Text-to-Speech"}
{"name":"taesungp\/contrastive-unpaired-translation","full_name":"taesungp\/contrastive-unpaired-translation","topics":["pytorch","computervision","deeplearning","cyclegan","image-generation","computer-vision","computer-graphics","image-manipulation","gans","generative-adversarial-network"],"description":"Contrastive unpaired image-to-image translation, faster and lighter training than cyclegan (ECCV 2020, in PyTorch)"}
{"name":"microsoft\/flaml","full_name":"microsoft\/FLAML","topics":["automl","hyperparam","automated-machine-learning","machine-learning","data-science","python","jupyter-notebook","hyperparameter-optimization","random-forest","scikit-learn","deep-learning","natural-language-processing","natural-language-generation","timeseries-forecasting","classification","regression","tuning","finetuning","tabular-data"],"description":"A fast library for AutoML and tuning. Join our Discord: https:\/\/discord.gg\/Cppx2vSPVP."}
{"name":"lucidrains\/big-sleep","full_name":"lucidrains\/big-sleep","topics":["artificial-intelligence","deep-learning","text-to-image","generative-adversarial-networks","multimodality"],"description":"A simple command line tool for text to image generation, using OpenAI's CLIP and a BigGAN. Technique was originally created by https:\/\/twitter.com\/advadnoun"}
{"name":"rentruewang\/koila","full_name":"rentruewang\/koila","topics":["pytorch","lazy-evaluation","out-of-memory","python","machine-learning","deep-learning","memory-management","gradient-accumulation","neural-network"],"description":"Prevent PyTorch's `CUDA error: out of memory` in just 1 line of code."}
{"name":"wzhe06\/sparrowrecsys","full_name":"wzhe06\/SparrowRecSys","topics":["recommender-system","deep-learning","machine-learning"],"description":"A Deep Learning Recommender System"}
{"name":"dongrixinyu\/jionlp","full_name":"dongrixinyu\/JioNLP","topics":["nlp","natural-language-processing","python","apache2","ner","chinese","time-parse","nlp-parse","preprocessing","time-parsing"],"description":"\u4e2d\u6587 NLP \u9884\u5904\u7406\u3001\u89e3\u6790\u5de5\u5177\u5305\uff0c\u51c6\u786e\u3001\u9ad8\u6548\u3001\u6613\u7528 A Chinese NLP Preprocessing & Parsing Package www.jionlp.com"}
{"name":"argusswift\/yolov4-pytorch","full_name":"argusswift\/YOLOv4-pytorch","topics":["yolov4","object-detection","pytorch","senet","cbam","mobilenetv2","mobilenetv3","attention"],"description":"This is a pytorch repository of YOLOv4, attentive YOLOv4 and mobilenet YOLOv4 with PASCAL VOC and COCO"}
{"name":"sczhou\/codeformer","full_name":"sczhou\/CodeFormer","topics":["codebook","codeformer","face-enhancement","face-restoration","pytorch","super-resolution","vqgan","restoration"],"description":"[NeurIPS 2022] Towards Robust Blind Face Restoration with Codebook Lookup Transformer"}
{"name":"bubbliiiing\/yolo3-pytorch","full_name":"bubbliiiing\/yolo3-pytorch","topics":[],"description":" \u8fd9\u662f\u4e00\u4e2ayolo3-pytorch\u7684\u6e90\u7801\uff0c\u53ef\u4ee5\u7528\u4e8e\u8bad\u7ec3\u81ea\u5df1\u7684\u6a21\u578b\u3002"}
{"name":"fedml-ai\/fedml","full_name":"FedML-AI\/FedML","topics":["federated-learning","deep-learning","distributed-training","blockchain","edge-ai","machine-learning","on-device-training","inference-engine","marketplace","mlops","privacy","security"],"description":"FedML - The federated learning and analytics library enabling secure and collaborative machine learning on decentralized data anywhere at any scale. Supporting large-scale cross-silo federated learning, cross-device federated learning on smartphones\/IoTs, and research simulation. MLOps and App Marketplace are also enabled (https:\/\/open.fedml.ai)."}
{"name":"tju-drl-lab\/ai-optimizer","full_name":"TJU-DRL-LAB\/AI-Optimizer","topics":["reinforcement-learning","transfer-learning","deep-learning"],"description":"The next generation deep reinforcement learning tookit"}
{"name":"uber\/orbit","full_name":"uber\/orbit","topics":["python","forecasting","bayesian","exponential-smoothing","pyro","stan","pystan","probabilistic-programming","probabilistic","forecast","orbit","time-series","regression","arima","changepoint","bayesian-methods","bayesian-statistics","machine-learning","regression-models","pytorch"],"description":"A Python package for Bayesian forecasting with object-oriented design and probabilistic models under the hood."}
{"name":"jiupinjia\/skyar","full_name":"jiupinjia\/SkyAR","topics":["dynamic-sky-replacement","sky-matting","harmonization","skyar"],"description":"Official Pytorch implementation of the preprint paper \"Castle in the Sky: Dynamic Sky Replacement and Harmonization in Videos\", in arXiv:2010.11800."}
{"name":"lightning-ai\/lightning-flash","full_name":"Lightning-AI\/lightning-flash","topics":["pytorch-lightning","deep-learning","machine-learning","pytorch","tasks-flash","classification","tabular-data","object-detection","icevision","open3d","fiftyone","torch-geometric","pytorch-video"],"description":"Your PyTorch AI Factory - Flash enables you to easily configure and run complex AI recipes for over 15 tasks across 7 data domains"}
{"name":"charmve\/surface-defect-detection","full_name":"Charmve\/Surface-Defect-Detection","topics":["surface-detection","surface-defects","image-segmentation","pcb-surface-defect","surface-defect-detection","paper","defects","dataset","surface","deep-learning","charmve"],"description":"\ud83d\udcc8 \u76ee\u524d\u6700\u5927\u7684\u5de5\u4e1a\u7f3a\u9677\u68c0\u6d4b\u6570\u636e\u5e93\u53ca\u8bba\u6587\u96c6 Constantly summarizing open source dataset and critical papers in the field of surface defect research which are of great importance.  "}
{"name":"open-mmlab\/mmclassification","full_name":"open-mmlab\/mmclassification","topics":["image-classification","resnet","resnext","mobilenet","shufflenet","senet","regnet","imagenet","pytorch","deep-learning","swin-transformer"],"description":"OpenMMLab Image Classification Toolbox and Benchmark"}
{"name":"peterh0323\/smart_construction","full_name":"PeterH0323\/Smart_Construction","topics":["yolov5","helmet","pytorch","python","detection","object-detection"],"description":"Head Person Helmet Detection on Construction Sites\uff0c\u57fa\u4e8e\u76ee\u6807\u68c0\u6d4b\u5de5\u5730\u5b89\u5168\u5e3d\u548c\u7981\u5165\u5371\u9669\u533a\u57df\u8bc6\u522b\u7cfb\u7edf\uff0c\ud83d\ude80\ud83d\ude06\u9644 YOLOv5 \u8bad\u7ec3\u81ea\u5df1\u7684\u6570\u636e\u96c6\u8d85\u8be6\u7ec6\u6559\u7a0b\ud83d\ude80\ud83d\ude062021.3\u65b0\u589e\u53ef\u89c6\u5316\u754c\u9762\u2757\u2757"}
{"name":"towhee-io\/towhee","full_name":"towhee-io\/towhee","topics":["machine-learning","convolutional-networks","embedding-vectors","embeddings","computer-vision","image-processing","video-processing","feature-extraction","image-retrieval","unstructured-data","feature-vector","transformer","milvus","towhee","vision-transformer","vit","pipeline"],"description":"Towhee is a framework that is dedicated to making neural data processing pipelines simple and fast."}
{"name":"graph4ai\/graph4nlp","full_name":"graph4ai\/graph4nlp","topics":["nlp","pytorch","natural-language-processing","deep-learning","machine-learning","graph-neural-networks"],"description":"Graph4nlp is the library for the easy use of Graph Neural Networks for NLP. Welcome to visit our DLG4NLP website (https:\/\/dlg4nlp.github.io\/index.html) for various learning resources! "}
{"name":"argosopentech\/argos-translate","full_name":"argosopentech\/argos-translate","topics":["python","machine-translation","transformers","translation","language-models","linux","nlp","open-source"],"description":"Open-source offline translation library written in Python"}
{"name":"paddlepaddle\/research","full_name":"PaddlePaddle\/Research","topics":["deep-learning","computer-vision","nlp","knowledge-graph","spatial-temporal","data-mining"],"description":"novel deep learning research works with PaddlePaddle"}
{"name":"tensorflow\/recommenders","full_name":"tensorflow\/recommenders","topics":["tensorflow-recommenders","tensorflow","recommender","recommender-system"],"description":"TensorFlow Recommenders is a library for building recommender system models using TensorFlow."}
{"name":"mindee\/doctr","full_name":"mindee\/doctr","topics":["ocr","deep-learning","document-recognition","tensorflow2","text-detection-recognition","text-detection","text-recognition","optical-character-recognition","pytorch"],"description":"docTR (Document Text Recognition) - a seamless, high-performing & accessible library for OCR-related tasks powered by Deep Learning."}
{"name":"nlp-love\/introduction-nlp","full_name":"NLP-LOVE\/Introduction-NLP","topics":["nlp","mechine-learing","deep-learning","ai"],"description":"HanLP\u4f5c\u8005\u7684\u65b0\u4e66\u300a\u81ea\u7136\u8bed\u8a00\u5904\u7406\u5165\u95e8\u300b\u8be6\u7ec6\u7b14\u8bb0\uff01\u4e1a\u754c\u826f\u5fc3\u4e4b\u4f5c\uff0c\u4e66\u4e2d\u4e0d\u662f\u67af\u71e5\u65e0\u5473\u7684\u516c\u5f0f\u7f57\u5217\uff0c\u800c\u662f\u7528\u767d\u8bdd\u9610\u8ff0\u7684\u901a\u4fd7\u6613\u61c2\u7684\u7b97\u6cd5\u6a21\u578b\u3002\u4ece\u57fa\u672c\u6982\u5ff5\u51fa\u53d1\uff0c\u9010\u6b65\u4ecb\u7ecd\u4e2d\u6587\u5206\u8bcd\u3001\u8bcd\u6027\u6807\u6ce8\u3001\u547d\u540d\u5b9e\u4f53\u8bc6\u522b\u3001\u4fe1\u606f\u62bd\u53d6\u3001\u6587\u672c\u805a\u7c7b\u3001\u6587\u672c\u5206\u7c7b\u3001\u53e5\u6cd5\u5206\u6790\u8fd9\u51e0\u4e2a\u70ed\u95e8\u95ee\u9898\u7684\u7b97\u6cd5\u539f\u7406\u4e0e\u5de5\u7a0b\u5b9e\u73b0\u3002"}
{"name":"tyleryep\/torchinfo","full_name":"TylerYep\/torchinfo","topics":["pytorch","torchsummary","torch","keras","visualization","torchvision","torch-summary","torchinfo","python"],"description":"View model summaries in PyTorch!"}
{"name":"pytorchlightning\/lightning-flash","full_name":"Lightning-AI\/lightning-flash","topics":["pytorch-lightning","deep-learning","machine-learning","pytorch","tasks-flash","classification","tabular-data","object-detection","icevision","open3d","fiftyone","torch-geometric","pytorch-video"],"description":"Your PyTorch AI Factory - Flash enables you to easily configure and run complex AI recipes for over 15 tasks across 7 data domains"}
{"name":"nebuly-ai\/nebullvm","full_name":"nebuly-ai\/nebullvm","topics":["deep-learning","pytorch","onnx","machine-learning","tensorflow","tvm","openvino","tensorrt","huggingface","compiler","computing","inference","neural-network","pypi","quantization","edge-computing","gpu","optimization","transformers"],"description":"Plug and play modules to boost the performances of your AI systems \ud83d\ude80"}
{"name":"wxinlong\/solo","full_name":"WXinlong\/SOLO","topics":["solo","instance-segmentation","object-detection","pytorch","solov2"],"description":"SOLO and SOLOv2 for instance segmentation, ECCV 2020 & NeurIPS 2020."}
{"name":"ppogg\/yolov5-lite","full_name":"ppogg\/YOLOv5-Lite","topics":["ncnn","yolov5","android-app","mnn","shufflenetv2","repvgg","transformer","tensorrt","pplcnet","openvivo","mobilenet","tflite","pytorch","picodet","onnxruntime"],"description":"\ud83c\udf45\ud83c\udf45\ud83c\udf45YOLOv5-Lite: lighter, faster and easier to deploy. Evolved from yolov5 and the size of model is only 930+kb (int8) and 1.7M (fp16). It can reach 10+ FPS on the Raspberry Pi 4B when the input size is 320\u00d7320~"}
{"name":"mukosame\/anime2sketch","full_name":"Mukosame\/Anime2Sketch","topics":["pytorch","deep-learning","gan","anime","sketch","wacv","gradio","comic","manga","computer-vision","generative-adversarial-network","image-generation","gans"],"description":"A sketch extractor for anime\/illustration."}
{"name":"vita-group\/transgan","full_name":"VITA-Group\/TransGAN","topics":["transformer","transformer-encoder","transformer-models","gan","pytorch"],"description":"[NeurIPS\u20182021] \"TransGAN: Two Pure Transformers Can Make One Strong GAN, and That Can Scale Up\", Yifan Jiang, Shiyu Chang, Zhangyang Wang"}
{"name":"deepcam-cn\/yolov5-face","full_name":"deepcam-cn\/yolov5-face","topics":["yolov5","tensorrt","retinaface","scrfd","tinaface","yolo","pytorch","arcface","shufflenet","blazeface","yolov7"],"description":"YOLO5Face: Why Reinventing a Face Detector (https:\/\/arxiv.org\/abs\/2105.12931)       ECCV Workshops 2022)"}
{"name":"open-mmlab\/openselfsup","full_name":"open-mmlab\/mmselfsup","topics":["self-supervised-learning","unsupervised-learning","pytorch","moco","simclr","simsiam","mae","masked-image-modeling","beit"],"description":"OpenMMLab Self-Supervised Learning Toolbox and Benchmark"}
{"name":"ziyaogeng\/reclearn","full_name":"ZiyaoGeng\/RecLearn","topics":["recommender-system","python3","ctr-prediction","criteo","neural-network","factorization-machine","tensorflow2","deepfm","afm","xdeepfm","pnn","widedeep","nfm","ncf","dcn","deepcross","fm","ffm","matrix-factorization"],"description":"Recommender Learning with Tensorflow2.x"}
{"name":"tingfree\/nlper-arsenal","full_name":"TingFree\/NLPer-Arsenal","topics":["nlp-competition","gpu","nlp-conference","nlp-media","pytorch","nlp","baselines"],"description":"\u6536\u5f55NLP\u7ade\u8d5b\u7b56\u7565\u5b9e\u73b0\u3001\u5404\u4efb\u52a1baseline\u3001\u76f8\u5173\u7ade\u8d5b\u7ecf\u9a8c\u8d34\uff08\u5f53\u524d\u8d5b\u4e8b\u3001\u5f80\u671f\u8d5b\u4e8b\u3001\u8bad\u7ec3\u8d5b\uff09\u3001NLP\u4f1a\u8bae\u65f6\u95f4\u3001\u5e38\u7528\u81ea\u5a92\u4f53\u3001GPU\u63a8\u8350\u7b49\uff0c\u6301\u7eed\u66f4\u65b0\u4e2d"}
{"name":"tata1661\/fsl-mate","full_name":"tata1661\/FSL-Mate","topics":["few-shot-learning","one-shot-learning","meta-learning","low-shot","deep-learning","papers","few-shot-paper","few-shot-papers","paper","paddlepaddle","few-shot"],"description":"FSL-Mate: A collection of resources for few-shot learning (FSL)."}
{"name":"fundamentalvision\/bevformer","full_name":"fundamentalvision\/BEVFormer","topics":["deep-learning","autonomous-driving","computer-vision","object-detection"],"description":"[ECCV 2022] This is the official implementation of BEVFormer, a camera-only framework for autonomous driving perception, e.g., 3D object detection and semantic map segmentation."}
{"name":"cfzd\/ultra-fast-lane-detection","full_name":"cfzd\/Ultra-Fast-Lane-Detection","topics":["lane-detection","autonomous-driving","lane-detector","lane-finding","road-detection","autonomous-vehicles","cnn","pytorch"],"description":"Ultra Fast Structure-aware Deep Lane Detection (ECCV 2020)"}
{"name":"lightning-ai\/lightning-bolts","full_name":"Lightning-AI\/lightning-bolts","topics":["pytorch","ai","machine-learning","image-processing","natural-language-processing","supervised-learning","gan"],"description":"Toolbox of models, callbacks, and datasets for AI\/ML researchers."}
{"name":"ziyaogeng\/recommender-system-with-tf2.0","full_name":"ZiyaoGeng\/RecLearn","topics":["recommender-system","python3","ctr-prediction","criteo","neural-network","factorization-machine","tensorflow2","deepfm","afm","xdeepfm","pnn","widedeep","nfm","ncf","dcn","deepcross","fm","ffm","matrix-factorization"],"description":"Recommender Learning with Tensorflow2.x"}
{"name":"iscyy\/yoloair","full_name":"iscyy\/yoloair","topics":["yolov5","attention","backbone","pytorch","transformer","yolor","yolov3","yolov4","yolov7","yolox","deep-learning","yoloair","scaledyolov4","yolov6","ppyolo","ppyoloe","tood","anchor-based","anchor-free","yolo"],"description":"\ud83d\udd25\ud83d\udd25\ud83d\udd25YOLOv5, YOLOv6, YOLOv7, YOLOv8, PPYOLOE, YOLOX, YOLOR, YOLOv4, YOLOv3, Transformer, Attention, TOOD and Improved-YOLOv5-YOLOv7... Support to improve backbone, neck, head, loss, IoU, NMS and other modules\ud83d\ude80"}
{"name":"google-research\/big_transfer","full_name":"google-research\/big_transfer","topics":["deep-learning","convolutional-neural-networks","imagenet","tensorflow2","jax","pytorch","transfer-learning"],"description":"Official repository for the \"Big Transfer (BiT): General Visual Representation Learning\" paper."}
{"name":"google-research\/scenic","full_name":"google-research\/scenic","topics":["jax","computer-vision","deep-learning","research","attention","transformers","vision-transformer"],"description":"Scenic: A Jax Library for Computer Vision Research and Beyond"}
{"name":"lucidrains\/lightweight-gan","full_name":"lucidrains\/lightweight-gan","topics":["artificial-intelligence","deep-learning","generative-adversarial-network"],"description":"Implementation of 'lightweight' GAN, proposed in ICLR 2021, in Pytorch. High resolution image generations that can be trained within a day or two"}
{"name":"rwightman\/efficientdet-pytorch","full_name":"rwightman\/efficientdet-pytorch","topics":["efficientdet","efficientnet","object-detection","semantic-segmentation","pytorch"],"description":"A PyTorch impl of EfficientDet faithful to the original Google impl w\/ ported weights"}
{"name":"divelab\/dig","full_name":"divelab\/DIG","topics":["deep-learning","graph-neural-network","graph-generation","explainable-ml","self-supervised-learning","3d-graph"],"description":"A library for graph deep learning research"}
{"name":"alibaba\/alicemind","full_name":"alibaba\/AliceMind","topics":["nlp","bert","natural-language-processing","deep-learning"],"description":"ALIbaba's Collection of Encoder-decoders from MinD (Machine IntelligeNce of Damo) Lab"}
{"name":"opendilab\/di-star","full_name":"opendilab\/DI-star","topics":["reinforcment-learning","starcraft2","self-play","artificial-intelligence","deep-learning","league","deep-reinforcement-learning"],"description":"An artificial intelligence platform for the StarCraft II with large-scale distributed training and grand-master agents."}
{"name":"neuralmagic\/sparseml","full_name":"neuralmagic\/sparseml","topics":["pytorch","keras","model-sparsification","sparsification-recipes","tensorflow","smaller-models","deep-learning-library","deep-learning-algorithms","deep-learning-models","automl","pruning-algorithms","sparsity","sparsification","recipe-driven-approaches","pruning","computer-vision-algorithms","object-detection","image-classification","nlp","onnx"],"description":"Libraries for applying sparsification recipes to neural networks with a few lines of code, enabling faster and smaller models"}
{"name":"pytorchlightning\/lightning-bolts","full_name":"Lightning-AI\/lightning-bolts","topics":["pytorch","ai","machine-learning","image-processing","natural-language-processing","supervised-learning","gan"],"description":"Toolbox of models, callbacks, and datasets for AI\/ML researchers."}
{"name":"nvlabs\/segformer","full_name":"NVlabs\/SegFormer","topics":["semantic-segmentation","transformer","ade20k","cityscapes"],"description":"Official PyTorch implementation of SegFormer"}
{"name":"learning-at-home\/hivemind","full_name":"learning-at-home\/hivemind","topics":["deep-learning","pytorch","volunteer-computing","mixture-of-experts","distributed-training","distributed-systems","asynchronous-programming","asyncio","dht","hivemind","neural-networks","machine-learning"],"description":"Decentralized deep learning in PyTorch. Built to train models on thousands of volunteers across the world."}
{"name":"whai362\/pvt","full_name":"whai362\/PVT","topics":["transformer","backbone","pvt","detection","segmentation","pvtv2"],"description":null}
{"name":"huggingface\/diffusers","full_name":"huggingface\/diffusers","topics":["deep-learning","diffusion","image-generation","pytorch","score-based-generative-modeling","image2image","text2image","stable-diffusion","hacktoberfest"],"description":"\ud83e\udd17 Diffusers: State-of-the-art diffusion models for image and audio generation in PyTorch"}
{"name":"nvlabs\/nvdiffrec","full_name":"NVlabs\/nvdiffrec","topics":["pytorch","deep-learning"],"description":"Official code for the CVPR 2022 (oral) paper \"Extracting Triangular 3D Models, Materials, and Lighting From Images\"."}
{"name":"datawhalechina\/fun-rec","full_name":"datawhalechina\/fun-rec","topics":["recommender-system","tensorflow","tianchi-competition","deep-learning","algorithm-engineering","interview-questions","recommendation-algorithms","machine-learning"],"description":"\u63a8\u8350\u7cfb\u7edf\u5165\u95e8\u6559\u7a0b\uff0c\u5728\u7ebf\u9605\u8bfb\u5730\u5740\uff1ahttps:\/\/datawhalechina.github.io\/fun-rec\/"}
{"name":"open-mmlab\/mmgeneration","full_name":"open-mmlab\/mmgeneration","topics":["generative","gan","pytorch","mmcv","openmmlab","generative-adversarial-network","diffusion-models"],"description":"MMGeneration is a powerful toolkit for generative models, based on PyTorch and MMCV. "}
{"name":"timoschick\/pet","full_name":"timoschick\/pet","topics":["nlp","python","machine-learning"],"description":"This repository contains the code for \"Exploiting Cloze Questions for Few-Shot Text Classification and Natural Language Inference\""}
{"name":"recognai\/rubrix","full_name":"argilla-io\/argilla","topics":["python","data-science","human-in-the-loop","natural-language-processing","mlops","artificial-intelligence","knowledge-graph","developer-tools","text-labeling","annotation-tool","nlp","machine-learning","active-learning","weak-supervision","weakly-supervised-learning","spacy","text-classification","dataops","text-annotation","hacktoberfest"],"description":"\u2728 Open-source tool for data-centric NLP. Argilla helps domain experts and data teams to build better NLP datasets in less time."}
{"name":"airaria\/textbrewer","full_name":"airaria\/TextBrewer","topics":["bert","pytorch","nlp","knowledge","distillation"],"description":"A PyTorch-based knowledge distillation toolkit for natural language processing"}
{"name":"lucidrains\/lambda-networks","full_name":"lucidrains\/lambda-networks","topics":["artificial-intelligence","deep-learning","computer-vision","attention-mechanism","attention"],"description":"Implementation of LambdaNetworks, a new approach to image recognition that reaches SOTA with less compute"}
{"name":"linkedin\/detext","full_name":"linkedin\/detext","topics":["ranking","deep-neural-networks","detext-framework","classification","text-embeddings","nlp"],"description":"DeText: A Deep Neural Text Understanding Framework for Ranking and Classification Tasks "}
{"name":"lucidrains\/byol-pytorch","full_name":"lucidrains\/byol-pytorch","topics":["artificial-intelligence","deep-learning","self-supervised-learning"],"description":"Usable Implementation of \"Bootstrap Your Own Latent\" self-supervised learning, from Deepmind, in Pytorch"}
{"name":"maiot-io\/zenml","full_name":"zenml-io\/zenml","topics":["mlops","machine-learning","data-science","production-ready","devops-tools","zenml","pipelines","metadata-tracking","deep-learning","pytorch","tensorflow","ml","ai","automl","hacktobe","hacktoberfest","workflow"],"description":"ZenML \ud83d\ude4f: Build portable, production-ready MLOps pipelines. https:\/\/zenml.io."}
{"name":"deepmotionediting\/deep-motion-editing","full_name":"DeepMotionEditing\/deep-motion-editing","topics":["character-animation","computer-graphics","deep-learning","motion-retargeting","style-transfer","computer-animation"],"description":"An end-to-end library for editing and rendering motion of 3D characters with deep learning [SIGGRAPH 2020]"}
{"name":"mlech26l\/ncps","full_name":"mlech26l\/ncps","topics":["ncp","recurrent-neural-network","nature-machine-intelligence","tensorflow","keras","cfc"],"description":"PyTorch and TensorFlow implementation of NCP, LTC, and CfC wired neural models"}
{"name":"open-mmlab\/mmdeploy","full_name":"open-mmlab\/mmdeploy","topics":["model-converter","sdk","deployment","tensorrt","ncnn","pplnn","openvino","onnxruntime","onnx","mmdetection","mmsegmentation","computer-vision","deep-learning","pytorch"],"description":"OpenMMLab Model Deployment Framework"}
{"name":"els-rd\/transformer-deploy","full_name":"ELS-RD\/transformer-deploy","topics":["inference","deep-learning","natural-language-processing","deployment","machine-learning","server"],"description":"Efficient, scalable and enterprise-grade CPU\/GPU inference server for \ud83e\udd17 Hugging Face transformer models \ud83d\ude80"}
{"name":"ymcui\/chinese-electra","full_name":"ymcui\/Chinese-ELECTRA","topics":["nlp","bert","electra","pre-trained-model","chinese","chinese-electra","language-model","pytorch","tensorflow"],"description":"Pre-trained Chinese ELECTRA\uff08\u4e2d\u6587ELECTRA\u9884\u8bad\u7ec3\u6a21\u578b\uff09"}
{"name":"dorarad\/gansformer","full_name":"dorarad\/gansformer","topics":["transformers","gans","generative-adversarial-networks","image-generation","scene-generation","compositionality","attention"],"description":"Generative Adversarial Transformers"}
{"name":"jrieke\/traingenerator","full_name":"jrieke\/traingenerator","topics":["machine-learning","deep-learning","template","website","webapp","streamlit","pytorch","scikit-learn","sklearn","tensorflow","pytorch-ignite","machine-learning-tutorials","pytorch-lightning"],"description":"\ud83e\uddd9 A web app to generate template code for machine learning"}
{"name":"kingyiusuen\/image-to-latex","full_name":"kingyiusuen\/image-to-latex","topics":["pytorch","deep-learning","transformer","encoder-decoder","streamlit-webapp","latex","end-to-end-machine-learning","computer-vision"],"description":"Convert images of LaTex math equations into LaTex code."}
{"name":"continualai\/avalanche","full_name":"ContinualAI\/avalanche","topics":["continual-learning","deep-learning","pytorch","lifelong-learning","framework","benchmarks","strategies","metrics","continualai","evaluation","library","training"],"description":"Avalanche: an End-to-End Library for Continual Learning based on PyTorch."}
{"name":"nannyml\/nannyml","full_name":"NannyML\/nannyml","topics":["machine-learning","ml","mlops","performance-monitoring","data-science","monitoring","python","data-drift","model-monitoring","data-analysis","visualization","deep-learning","jupyter-notebook","machinelearning"],"description":"Detecting silent model failure. NannyML estimates performance for regression and classification models using tabular data. It alerts you when and why it changed. It is the only open-source library capable of fully capturing the impact of data drift on performance."}
{"name":"kritiksoman\/gimp-ml","full_name":"kritiksoman\/GIMP-ML","topics":["gimp-plugin","image-manipulation","computer-vision","gimp","photo-editing","computervision","deep-learning","machine-learning","machine-learning-algorithms","macos","ubuntu","linux","coloring-image","dehazing","deblurring","enlightenment","python3","gimp-plugins"],"description":"AI for GNU Image Manipulation Program"}
{"name":"adapter-hub\/adapter-transformers","full_name":"adapter-hub\/adapter-transformers","topics":["nlp","natural-language-processing","adapters","transformers","bert","pytorch"],"description":"Huggingface Transformers + Adapters = \u2764\ufe0f"}
{"name":"clementchadebec\/benchmark_vae","full_name":"clementchadebec\/benchmark_VAE","topics":["vae","benchmarking","beta-vae","comparison","normalizing-flows","pixel-cnn","pytorch","reproducibility","reproducible-research","vae-gan","vae-implementation","vae-pytorch","variational-autoencoder","vq-vae","wasserstein-autoencoder"],"description":"Unifying Variational Autoencoder (VAE) implementations in Pytorch (NeurIPS 2022)"}
{"name":"yuliangxiu\/icon","full_name":"YuliangXiu\/ICON","topics":["implicit-functions","virtual-humans","computer-vision","computer-graphics","animation","3d-reconstruction","human-pose-estimation","smplx","smpl-model","normal-maps","mesh-deformation","pytorch","metaverse","pifu","pifuhd","cloth-simulation","pose-estimation","avatar-generator","smpl-body","smpl"],"description":"ICON: Implicit Clothed humans Obtained from Normals (CVPR 2022)"}
{"name":"isl-org\/open3d-ml","full_name":"isl-org\/Open3D-ML","topics":["3d-perception","datasets","pretrained-models","lidar","rgbd","tensorflow","pytorch","visualization","semantic-segmentation","object-detection","3d-object-detection"],"description":"An extension of Open3D to address 3D Machine Learning tasks"}
{"name":"haotian-liu\/yolact_edge","full_name":"haotian-liu\/yolact_edge","topics":["realtime","real-time","instance-segmentation","yolactedge","pytorch","edge-devices"],"description":"The first competitive instance segmentation approach that runs on small edge devices at real-time speeds."}
{"name":"nixtla\/neuralforecast","full_name":"Nixtla\/neuralforecast","topics":["deep-learning","forecasting","esrnn","nbeats","nbeatsx","time-series","pytorch","transformer","nhits","neural-network","machine-learning","deep-neural-networks","deepar","tft"],"description":"Scalable and user friendly neural :brain: forecasting algorithms."}
{"name":"apple\/ml-cvnets","full_name":"apple\/ml-cvnets","topics":["ade20k","classification","computer-vision","deep-learning","detection","imagenet","machine-learning","mscoco","pascal-voc","pytorch","segmentation"],"description":"CVNets: A library for training computer vision networks"}
{"name":"patrick-kidger\/torchtyping","full_name":"patrick-kidger\/torchtyping","topics":["tensors","named-tensors","shape","pytorch","typing","python-typing"],"description":"Type annotations and dynamic checking for a tensor's shape, dtype, names, etc."}
{"name":"alibaba\/easycv","full_name":"alibaba\/EasyCV","topics":["self-supervised-learning","transformers","classification","computer-vision","object-detection","pytorch","vision-transformer"],"description":"An all-in-one toolkit for computer vision"}
{"name":"facebookresearch\/theseus","full_name":"facebookresearch\/theseus","topics":["differentiable-optimization","robotics","embodied-ai","nonlinear-least-squares","pytorch","deep-learning","computer-vision","gauss-newton","levenberg-marquardt","implicit-differentiation","bilevel-optimization"],"description":"A library for differentiable nonlinear optimization"}
{"name":"quic\/aimet","full_name":"quic\/aimet","topics":["quantization","deep-learning","compression","open-source","machine-learning","pruning","auto-ml","network-compression","deep-neural-networks","network-quantization","opensource"],"description":"AIMET is a library that provides advanced quantization and compression techniques for trained neural network models."}
{"name":"thudm\/cogview","full_name":"THUDM\/CogView","topics":["text-to-image","transformers","pretrained-models","pytorch"],"description":"Text-to-Image generation. The repo for NeurIPS 2021 paper \"CogView: Mastering Text-to-Image Generation via Transformers\"."}
{"name":"snakers4\/silero-vad","full_name":"snakers4\/silero-vad","topics":["voice-detection","voice-recognition","voice-commands","language-classifier","pytorch","onnx","voice-activity-detection","voice-control"],"description":"Silero VAD: pre-trained enterprise-grade Voice Activity Detector, Language Classifier and Spoken Number Detector"}
{"name":"d-li14\/involution","full_name":"d-li14\/involution","topics":["involution","operator","pytorch","image-classification","object-detection","instance-segmentation","semantic-segmentation","cvpr2021","pre-trained-model"],"description":"[CVPR 2021] Involution: Inverting the Inherence of Convolution for Visual Recognition, a brand new neural operator"}
{"name":"pytorch\/torchrec","full_name":"pytorch\/torchrec","topics":["pytorch","gpu","deep-learning","cuda","recommender-system","recommendation-system","sharding"],"description":"Pytorch domain library for recommendation systems"}
{"name":"abhishekkrthakur\/tez","full_name":"abhishekkrthakur\/tez","topics":["tez","pytorch","deep-learning","deep-neural-networks","neural-networks"],"description":"Tez is a super-simple and lightweight Trainer for PyTorch. It also comes with many utils that you can use to tackle over 90% of deep learning projects in PyTorch."}
{"name":"microsoft\/graphormer","full_name":"microsoft\/Graphormer","topics":["graph","transformer","deep-learning","ai4science","molecule-simulation"],"description":"Graphormer is a deep learning package that allows researchers and developers to train custom models for molecule modeling tasks. It aims to accelerate the research and application in AI for molecule science, such as material design, drug discovery, etc."}
{"name":"vturrisi\/solo-learn","full_name":"vturrisi\/solo-learn","topics":["simclr","nvidia-dali","contrastive-learning","pytorch","pytorch-lightning","barlow-twins","self-supervised-learning","swav","byol","moco","simsiam","vicreg","nnclr","dino","deepcluster","ressl","vibcreg","transformer-models","mae","masked-input-prediction"],"description":"solo-learn: a library of self-supervised methods for visual representation learning powered by Pytorch Lightning"}
{"name":"pykeen\/pykeen","full_name":"pykeen\/pykeen","topics":["knowledge-graph-embeddings","knowledge-graphs","machine-learning","link-prediction","knowledge-base-completion","pykeen","deep-learning","cuda","python","torch"],"description":"\ud83e\udd16 A Python library for learning and evaluating knowledge graph embeddings "}
{"name":"deepmind\/jraph","full_name":"deepmind\/jraph","topics":["graph-neural-networks","jax","machine-learning","deep-learning"],"description":"A Graph Neural Network Library in Jax"}
{"name":"lucidrains\/alphafold2","full_name":"lucidrains\/alphafold2","topics":["artificial-intelligence","deep-learning","protein-folding","attention-mechanism"],"description":"To eventually become an unofficial Pytorch implementation \/ replication of Alphafold2, as details of the architecture get released"}
{"name":"lightning-ai\/metrics","full_name":"Lightning-AI\/metrics","topics":["python","data-science","machine-learning","pytorch","deep-learning","metrics","analyses"],"description":"Machine learning metrics for distributed, scalable PyTorch applications."}
{"name":"minitorch\/minitorch","full_name":"minitorch\/minitorch","topics":[],"description":"The full minitorch student suite. "}
{"name":"kakaobrain\/pororo","full_name":"kakaobrain\/pororo","topics":["deep-learning","natural-language-processing","automatic-speech-recognition","speech-synthesis","neural-models"],"description":"PORORO: Platform Of neuRal mOdels for natuRal language prOcessing"}
{"name":"theaiguyscode\/yolov4-deepsort","full_name":"theAIGuysCode\/yolov4-deepsort","topics":["yolov4","yolov4-deepsort","deep-sort","object-tracker","tensorflow","object-tracking","object-detection"],"description":"Object tracking implemented with YOLOv4, DeepSort, and TensorFlow."}
{"name":"capitalone\/dataprofiler","full_name":"capitalone\/DataProfiler","topics":["python","privacy","pii","npi","nlp","data-science","gdpr","data-analysis","data-labels","avro","dataprofiling","sensitive-data","security","pandas","csv","tabular-data","dataset","network-data","graph-data","machine-learning"],"description":"What's in your data? Extract schema, statistics and entities from datasets"}
{"name":"fendouai\/opencvtutorials","full_name":"fendouai\/OpenCVTutorials","topics":["opencv","machine-learning","computer-vision","deep-learning","object-detection","opencv-python","python"],"description":"OpenCV-Python4.1 \u4e2d\u6587\u6587\u6863"}
{"name":"alibaba\/easynlp","full_name":"alibaba\/EasyNLP","topics":["transformers","bert","nlp","pretrained-models","deep-learning","pytorch","fewshot-learning","knowledge-distillation","knowledge-pretraining","text-image-retrieval","text-to-image-synthesis","machine-learning","text-classification","transfer-learning"],"description":"EasyNLP: A Comprehensive and Easy-to-use NLP Toolkit"}
{"name":"code-kern-ai\/refinery","full_name":"code-kern-ai\/refinery","topics":["annotations","data-centric-ai","data-labeling","deep-learning","labeling","labeling-tool","machine-learning","natural-language-processing","neural-search","nlp","text-annotation","transformers","python","human-in-the-loop","spacy","artificial-intelligence","data-science","text-classification","active-learning","supervised-learning"],"description":"The data scientist's open-source choice to scale, assess and maintain natural language data. Treat training data like a software artifact."}
{"name":"google\/uncertainty-baselines","full_name":"google\/uncertainty-baselines","topics":["bayesian-methods","deep-learning","machine-learning","data-science","tensorflow","neural-networks","statistics","probabilistic-programming"],"description":"High-quality implementations of standard and SOTA methods on a variety of tasks."}
{"name":"jiupinjia\/stylized-neural-painting","full_name":"jiupinjia\/stylized-neural-painting","topics":["style-transfer","painting-translation","stroke-parameters","neural-rendering"],"description":"Official Pytorch implementation of the preprint paper \"Stylized Neural Painting\", in CVPR 2021."}
{"name":"deepgraphlearning\/torchdrug","full_name":"DeepGraphLearning\/torchdrug","topics":["pytorch","deep-learning","graph-neural-networks","drug-discovery"],"description":"A powerful and flexible machine learning platform for drug discovery"}
{"name":"davda54\/sam","full_name":"davda54\/sam","topics":["optimizer","pytorch","sam","sharpness-aware"],"description":"SAM: Sharpness-Aware Minimization (PyTorch)"}
{"name":"miraclelucy\/dive_into_deep_learning","full_name":"Miraclelucy\/dive_into_deep_learning","topics":[],"description":"\u2714\ufe0f\u674e\u6c90 \u3010\u52a8\u624b\u5b66\u6df1\u5ea6\u5b66\u4e60\u3011\u8bfe\u7a0b\u5b66\u4e60\u7b14\u8bb0\uff1a\u4f7f\u7528pycharm\u7f16\u7a0b\uff0c\u57fa\u4e8epytorch\u6846\u67b6\u5b9e\u73b0\u3002"}
{"name":"rom1504\/img2dataset","full_name":"rom1504\/img2dataset","topics":["deep-learning","dataset","big-data","image","multimodal","image-dataset","download-images"],"description":"Easily turn large sets of image urls to an image dataset. Can download, resize and package 100M urls in 20h on one machine."}
{"name":"frgfm\/torch-cam","full_name":"frgfm\/torch-cam","topics":["pytorch","python","deep-learning","cnn","activation-maps","gradcam-plus-plus","gradcam","saliency-map","interpretability","interpretable-deep-learning","smoothgrad","score-cam","class-activation-map","grad-cam"],"description":"Class activation maps for your PyTorch models (CAM, Grad-CAM, Grad-CAM++, Smooth Grad-CAM++, Score-CAM, SS-CAM, IS-CAM, XGrad-CAM, Layer-CAM)"}
{"name":"bubbliiiing\/faster-rcnn-pytorch","full_name":"bubbliiiing\/faster-rcnn-pytorch","topics":[],"description":"\u8fd9\u662f\u4e00\u4e2afaster-rcnn\u7684pytorch\u5b9e\u73b0\u7684\u5e93\uff0c\u53ef\u4ee5\u5229\u7528voc\u6570\u636e\u96c6\u683c\u5f0f\u7684\u6570\u636e\u8fdb\u884c\u8bad\u7ec3\u3002"}
{"name":"microsoft\/torchgeo","full_name":"microsoft\/torchgeo","topics":["pytorch","torchvision","datasets","models","transforms","remote-sensing","deep-learning","earth-observation"],"description":"TorchGeo: datasets, samplers, transforms, and pre-trained models for geospatial data"}
{"name":"ashawkey\/torch-ngp","full_name":"ashawkey\/torch-ngp","topics":["pytorch","instant-ngp","nerf","real-time","gui","sdf","tensorf","d-nerf"],"description":"A pytorch CUDA extension implementation of instant-ngp (sdf and nerf), with a GUI."}
{"name":"mit-han-lab\/gan-compression","full_name":"mit-han-lab\/gan-compression","topics":["compression","gans","conditional-gans","pix2pix","cyclegan","gaugan","pytorch","image-to-image-translation"],"description":"[CVPR 2020] GAN Compression: Efficient Architectures for Interactive Conditional GANs"}
{"name":"nvidiagameworks\/kaolin-wisp","full_name":"NVIDIAGameWorks\/kaolin-wisp","topics":["3d-deep-learning","nerf","pytorch","sdf","neuralfields"],"description":"NVIDIA Kaolin Wisp is a PyTorch library powered by NVIDIA Kaolin Core to work with neural fields (including NeRFs, NGLOD, instant-ngp and VQAD)."}
{"name":"clovaai\/donut","full_name":"clovaai\/donut","topics":["document-ai","eccv-2022","multimodal-pre-trained-model","ocr","nlp","computer-vision"],"description":"Official Implementation of OCR-free Document Understanding Transformer (Donut) and Synthetic Document Generator (SynthDoG), ECCV 2022"}
{"name":"ildaron\/laser_control","full_name":"Ildaron\/Laser_control","topics":["galvanometer","laser","mosquito","deep-learning","kill-mosquito","triangulation","machine-vision","opencv","darknet-yolo","raspberry-pi","weedcontrol"],"description":"Open-Source Laser for control mosquito, weed, and pest"}
{"name":"torchssl\/torchssl","full_name":"TorchSSL\/TorchSSL","topics":["semi-supervised-learning","toolkit","codebase","pytorch","machine-learning","computer-vision","deep-learning","self-supervised-learning"],"description":"A PyTorch-based library for semi-supervised learning (NeurIPS'21)"}
{"name":"deepwisdom\/autodl","full_name":"DeepWisdom\/AutoDL","topics":["autodl","automl","nas","feature-engineering","model-selection","full-automl","artificial-intelligence","lightgbm","resnet","pytorch","tensorflow","python","autodl-challenge","ai","deeplearning","data-science","machine-learning","big-data","multi-label","automated-machine-learning"],"description":"Automated Deep Learning without ANY human intervention. 1'st Solution for AutoDL challenge@NeurIPS. "}
{"name":"neuralmagic\/deepsparse","full_name":"neuralmagic\/deepsparse","topics":["ml","machinelearning","pytorch","tensorflow","onnx","deepsparse-engine","sparsified-models","sparsification-recipe","inference","computer-vision","object-detection","pruning","quantization","pretrained-models","nlp","auto-ml","cpus","yolov3","sparsification","cpu-inference-api"],"description":"Inference runtime offering GPU-class performance on CPUs and APIs to integrate ML into your application"}
{"name":"lucidrains\/make-a-video-pytorch","full_name":"lucidrains\/make-a-video-pytorch","topics":["artificial-intelligence","attention-mechanisms","deep-learning","text-to-video","axial-convolutions"],"description":"Implementation of Make-A-Video, new SOTA text to video generator from Meta AI, in Pytorch"}
{"name":"milanlproc\/contextualized-topic-models","full_name":"MilaNLProc\/contextualized-topic-models","topics":["topic-modeling","bert","transformer","embeddings","text-as-data","topic-coherence","multilingual-topic-models","multilingual-models","neural-topic-models","nlp","nlp-library","nlp-machine-learning"],"description":"A python package to run contextualized topic modeling. CTMs combine contextualized embeddings (e.g., BERT) with topic models to get coherent topics. Published at EACL and ACL 2021."}
{"name":"gradslam\/gradslam","full_name":"gradslam\/gradslam","topics":["slam","deep-learning","machine-learning","robotics","3d-reconstruction"],"description":"gradslam is an open source differentiable dense SLAM library for PyTorch"}
{"name":"adobe-research\/custom-diffusion","full_name":"adobe-research\/custom-diffusion","topics":["customization","fine-tuning","text-to-image-generation","computer-vision","diffusion-models","few-shot","pytorch"],"description":"Custom Diffusion: Multi-Concept Customization of Text-to-Image Diffusion"}
{"name":"elliottwu\/unsup3d","full_name":"elliottwu\/unsup3d","topics":["3d-objects","3d","3d-reconstuction","unsupervised","unsupervised-learning","cvpr","cvpr-2020","cvpr2020","pytorch"],"description":"(CVPR'20 Oral) Unsupervised Learning of Probably Symmetric Deformable 3D Objects from Images in the Wild"}
{"name":"chandlerbang\/awesome-self-supervised-gnn","full_name":"ChandlerBang\/awesome-self-supervised-gnn","topics":["graph-neural-networks","pretraining","self-supervised-learning","deep-learning","machine-learning","graph-mining","pre-training"],"description":"Papers about pretraining and self-supervised learning on Graph Neural Networks (GNN)."}
{"name":"yangxue0827\/rotationdetection","full_name":"yangxue0827\/RotationDetection","topics":[],"description":"This is a tensorflow-based rotation detection benchmark, also called AlphaRotate."}
{"name":"mit-han-lab\/bevfusion","full_name":"mit-han-lab\/bevfusion","topics":["3d-perception","camera","lidar","object-detection","pytorch","semantic-segmentation","sensor-fusion"],"description":"BEVFusion: Multi-Task Multi-Sensor Fusion with Unified Bird's-Eye View Representation"}
{"name":"br-idl\/paddlevit","full_name":"BR-IDL\/PaddleViT","topics":["cv","computer-vision","paddlepaddle","vit","mlp","transformer","encoder-decoder","classification","detection","segmentation","gan","deep-learning","semantic-segmentation","object-detection"],"description":":robot: PaddleViT: State-of-the-art Visual Transformer and MLP Models for PaddlePaddle 2.0+"}
{"name":"bumble-tech\/private-detector","full_name":"bumble-tech\/private-detector","topics":["bumble","efficientnet","image-classification","tensorflow"],"description":"Bumble's Private Detector - a pretrained model for detecting lewd images"}
{"name":"nianticlabs\/simplerecon","full_name":"nianticlabs\/simplerecon","topics":["computer-vision","cost-volume","depth","depth-estimation","eccv2022","multi-view-stereo","mvs","pytorch","scannet","visualization"],"description":"[ECCV 2022] SimpleRecon: 3D Reconstruction Without 3D Convolutions"}
{"name":"thu-coai\/cdial-gpt","full_name":"thu-coai\/CDial-GPT","topics":["dialogue","pytorch","gpt","gpt-2","lccc","text-generation"],"description":" A Large-scale Chinese Short-Text Conversation Dataset and Chinese pre-training dialog models "}
{"name":"idea-research\/detrex","full_name":"IDEA-Research\/detrex","topics":["detr","object-detection","pytorch","dino","state-of-the-art","dab-detr","deformable-detr","conditional-detr","dn-detr","group-detr","h-detr","mask-dino"],"description":"detrex is a research platform for Transformer-based Instance Recognition algorithms including DETR (ECCV 2020), Deformable-DETR (ICLR 2021), Conditional-DETR (ICCV 2021), DAB-DETR (ICLR 2022), DN-DETR (CVPR 2022), DINO (arXiv 2022), H-DETR (arXiv 2022), MaskDINO (arXiv 2022), etc."}
{"name":"arthur151\/romp","full_name":"Arthur151\/ROMP","topics":["3d-mesh-recovery","bottom-up","multi-person-3d-mesh-recovery","smpl","multi-person","pytorch","pose-estimation"],"description":"Monocular, One-stage, Regression of Multiple 3D People, ROMP[ICCV21], BEV[CVPR22]"}
{"name":"as-ideas\/transformertts","full_name":"as-ideas\/TransformerTTS","topics":["deep-learning","axelspringerai","text-to-speech","python","tensorflow","tts"],"description":"\ud83e\udd16\ud83d\udcac Transformer TTS: Implementation of a non-autoregressive Transformer based neural network for text to speech."}
{"name":"emilianavt\/openseeface","full_name":"emilianavt\/OpenSeeFace","topics":["face-tracking","face-landmarks","depth-estimation","unity","unity3d","python","csharp","udp","onnx","onnxruntime","virtual-youtuber","vtuber","mobilenetv3","pytorch","openseeface","face-detection","detection-model","landmark-model","tracker","cpu"],"description":"Robust realtime face and facial landmark tracking on CPU with Unity integration"}
{"name":"patrick-kidger\/equinox","full_name":"patrick-kidger\/equinox","topics":["deep-learning","jax","neural-networks"],"description":"Callable PyTrees and filtered transforms => neural networks in JAX. https:\/\/docs.kidger.site\/equinox\/"}
{"name":"idiap\/fast-transformers","full_name":"idiap\/fast-transformers","topics":[],"description":"Pytorch library for fast transformer implementations"}
{"name":"minivision-ai\/silent-face-anti-spoofing","full_name":"minivision-ai\/Silent-Face-Anti-Spoofing","topics":["computer-vision","deep-learning","face-anti-spoofing","android-app","sdk"],"description":"\u9759\u9ed8\u6d3b\u4f53\u68c0\u6d4b\uff08Silent-Face-Anti-Spoofing\uff09"}
{"name":"bigscience-workshop\/promptsource","full_name":"bigscience-workshop\/promptsource","topics":["natural-language-processing","nlp","machine-learning"],"description":"Toolkit for creating, sharing and using natural language prompts."}
{"name":"rinongal\/stylegan-nada","full_name":"rinongal\/StyleGAN-nada","topics":["domain-adaptation","stylegan","generative-adversarial-network"],"description":null}
{"name":"autonomousvision\/giraffe","full_name":"autonomousvision\/giraffe","topics":["cvpr2021","generative-model","generative-modelling","generative-adversarial-network","nerf","implicit-surfaces","neural-scene-representations"],"description":"This repository contains the code for the CVPR 2021 paper \"GIRAFFE: Representing Scenes as Compositional Generative Neural Feature Fields\""}
{"name":"wpeebles\/gangealing","full_name":"wpeebles\/gangealing","topics":["cvpr","cvpr2022","gan","image-manipulation","deep-learning","pytorch","computer-vision","alignment","stylegan","stylegan2","tracking","correspondence","generative"],"description":"Official PyTorch Implementation of GAN-Supervised Dense Visual Alignment (CVPR 2022 Oral, Best Paper Finalist)"}
{"name":"tensorflow\/similarity","full_name":"tensorflow\/similarity","topics":["similarity-learning","metric-learning","similarity-search","nearest-neighbor-search","nearest-neighbors","deep-learning","tensorflow","contrastive-learning","machine-learning","unsupervised-learning","clustering","python","simclr","simclr2","barlow-twins","simsiam","cosine-similarity","knn"],"description":"TensorFlow Similarity is a python package focused on making similarity learning quick and easy."}
{"name":"turtlesoupy\/this-word-does-not-exist","full_name":"turtlesoupy\/this-word-does-not-exist","topics":["machine-learning","gpt-2","transformers","natural-language-processing","natural-language-understanding","natural-language-generation"],"description":"This Word Does Not Exist"}
{"name":"open-mmlab\/mmrotate","full_name":"open-mmlab\/mmrotate","topics":["rotated-object","pytorch","openmmlab","detection"],"description":"OpenMMLab Rotated Object Detection Toolbox and Benchmark"}
{"name":"920232796\/bert_seq2seq","full_name":"920232796\/bert_seq2seq","topics":["bert","seq2seq","ner","crf","text-classification","unilm","pytorch","roberta","autotitle","gpt2","t5-model"],"description":"pytorch\u5b9e\u73b0 Bert \u505aseq2seq\u4efb\u52a1\uff0c\u4f7f\u7528unilm\u65b9\u6848,\u73b0\u5728\u4e5f\u53ef\u4ee5\u505a\u81ea\u52a8\u6458\u8981\uff0c\u6587\u672c\u5206\u7c7b\uff0c\u60c5\u611f\u5206\u6790\uff0cNER\uff0c\u8bcd\u6027\u6807\u6ce8\u7b49\u4efb\u52a1,\u652f\u6301t5\u6a21\u578b\uff0c\u652f\u6301GPT2\u8fdb\u884c\u6587\u7ae0\u7eed\u5199\u3002"}
{"name":"zalandoresearch\/pytorch-ts","full_name":"zalandoresearch\/pytorch-ts","topics":["pytorch","time-series","probabilistic","deepar","lstnet","n-beats"],"description":"PyTorch based Probabilistic Time Series forecasting framework based on GluonTS backend"}
{"name":"google\/nerfies","full_name":"google\/nerfies","topics":["neural-rendering","nerf","3d","neural-network","machine-learning"],"description":"This is the code for Deformable Neural Radiance Fields, a.k.a. Nerfies."}
{"name":"lucidrains\/perceiver-pytorch","full_name":"lucidrains\/perceiver-pytorch","topics":["artificial-intelligence","deep-learning","attention-mechanism"],"description":"Implementation of Perceiver, General Perception with Iterative Attention, in Pytorch"}
{"name":"pytorchlightning\/metrics","full_name":"Lightning-AI\/metrics","topics":["python","data-science","machine-learning","pytorch","deep-learning","metrics","analyses"],"description":"Machine learning metrics for distributed, scalable PyTorch applications."}
{"name":"thumnlab\/autogl","full_name":"THUMNLab\/AutoGL","topics":["graph-neural-networks","automl","pytorch","pytorch-geometric","hyper-parameter-optimization","machine-learning","deep-learning","neural-architecture-search"],"description":"An autoML framework & toolkit for machine learning on graphs."}
{"name":"google-research\/tapas","full_name":"google-research\/tapas","topics":["nlp-machine-learning","question-answering","table-parsing","tensorflow"],"description":"End-to-end neural table-text understanding models."}
{"name":"google\/budoux","full_name":"google\/budoux","topics":["nlp","machine-learning","python","javascript"],"description":null}
{"name":"honglinchu\/siamtrackers","full_name":"HonglinChu\/SiamTrackers","topics":["tracking","deep-learning","visual-tracking"],"description":"(2020-2022)The PyTorch version  of SiamFC\uff0cSiamRPN\uff0cDaSiamRPN, UpdateNet , SiamDW, SiamRPN++, SiamMask, SiamFC++,  SiamCAR,  SiamBAN, Ocean, LightTrack , TrTr, NanoTrack;  Visual object tracking based on deep learning"}
{"name":"rucaibox\/textbox","full_name":"RUCAIBox\/TextBox","topics":["text-generation","natural-language-processing","deep-learning","pretrained-models","python","pytorch","seq2seq","natural-language-generation"],"description":"TextBox 2.0 is a text generation library with pre-trained language models"}
{"name":"huawei-noah\/addernet","full_name":"huawei-noah\/AdderNet","topics":["pytorch","imagenet","convolutional-neural-networks","cvpr2020","efficient-inference"],"description":"Code for paper \" AdderNet: Do We Really Need Multiplications in Deep Learning?\""}
{"name":"blinkdl\/rwkv-lm","full_name":"BlinkDL\/RWKV-LM","topics":["attention-mechanism","deep-learning","gpt","gpt-2","gpt-3","language-model","linear-attention","lstm","pytorch","rnn","transformer","transformers","rwkv"],"description":"RWKV is a RNN with transformer-level LLM performance. It can be directly trained like a GPT (parallelizable). So it's combining the best of RNN and transformer - great performance, fast inference, saves VRAM, fast training, \"infinite\" ctx_len, and free sentence embedding."}
{"name":"julrog\/nn_vis","full_name":"julrog\/nn_vis","topics":["neural-networks","visualization","rendering-engine","opengl","neural-network","virtual-reality","vr"],"description":"A project for processing neural networks and rendering to gain insights on the architecture and parameters of a model through a decluttered representation."}
{"name":"yuval-alaluf\/hyperstyle","full_name":"yuval-alaluf\/hyperstyle","topics":["generative-adversarial-network","stylegan","stylegan-encoder","hypernetworks","cvpr2022"],"description":"Official Implementation for \"HyperStyle: StyleGAN Inversion with HyperNetworks for Real Image Editing\" (CVPR 2022) https:\/\/arxiv.org\/abs\/2111.15666"}
{"name":"norskregnesentral\/skweak","full_name":"NorskRegnesentral\/skweak","topics":["weak-supervision","nlp-machine-learning","distant-supervision","nlp-library","spacy","python","data-science","training-data","natural-language-processing"],"description":"skweak: A software toolkit for weak supervision applied to NLP tasks"}
{"name":"mit-han-lab\/data-efficient-gans","full_name":"mit-han-lab\/data-efficient-gans","topics":["gans","pytorch","tensorflow","data-efficient","generative-adversarial-network","image-generation","neurips-2020"],"description":"[NeurIPS 2020] Differentiable Augmentation for Data-Efficient GAN Training"}
{"name":"jina-ai\/docarray","full_name":"docarray\/docarray","topics":["docarray","data-structures","multimodal","cross-modal","neural-search","unstructured-data","deep-learning","nested-data","qdrant","weaviate","sqlite","nearest-neighbor-search","protobuf","graphql","elasticsearch","dataclass","multi-modal","semantic-search","vector-search"],"description":"\ud83e\uddec The data structure for multimodal data \u00b7 Neural Search \u00b7 Vector Search \u00b7 Document Store"}
{"name":"hkchengrex\/xmem","full_name":"hkchengrex\/XMem","topics":["computer-vision","deep-learning","eccv-2022","eccv2022","pytorch","segmentation","video-object-segmentation","video-segmentation"],"description":"[ECCV 2022] XMem: Long-Term Video Object Segmentation with an Atkinson-Shiffrin Memory Model"}
{"name":"ayoolaolafenwa\/pixellib","full_name":"ayoolaolafenwa\/PixelLib","topics":["computer-vision","machine-learning","artificial-intelligence","image-segmentation","semantic-segmentation","instance-segmentation","video-segmentation","deeplab","deeplearning","maskr-cnn","tensorflow","deep-learning","pointrend","pytorch","convolutional-neural-networks","segmentation","object-detection"],"description":"Visit PixelLib's official documentation  https:\/\/pixellib.readthedocs.io\/en\/latest\/"}
{"name":"dengbocong\/nlp-paper","full_name":"DengBoCong\/nlp-paper","topics":["dialogue","speech","nlp-machine-learning","paper","tensorflow2","pytorch","nlp","bert"],"description":"\u81ea\u7136\u8bed\u8a00\u5904\u7406\u9886\u57df\u4e0b\u7684\u76f8\u5173\u8bba\u6587\uff08\u9644\u9605\u8bfb\u7b14\u8bb0\uff09\uff0c\u590d\u73b0\u6a21\u578b\u4ee5\u53ca\u6570\u636e\u5904\u7406\u7b49\uff08\u4ee3\u7801\u542bTensorFlow\u548cPyTorch\u4e24\u7248\u672c\uff09"}
{"name":"takuseno\/d3rlpy","full_name":"takuseno\/d3rlpy","topics":["deep-reinforcement-learning","deep-learning","pytorch","offline-rl"],"description":"An offline deep reinforcement learning library"}
{"name":"neuml\/paperai","full_name":"neuml\/paperai","topics":["python","machine-learning","nlp","medical","search","scientific-papers","document-search","txtai"],"description":"\ud83d\udcc4 \ud83e\udd16 Semantic search and workflows for medical\/scientific papers"}
{"name":"kakaobrain\/kogpt","full_name":"kakaobrain\/kogpt","topics":["deeplearning","gpt","nlp","transformers","huggingface","kogpt","kakaobrain","korean","generative-model","gpt3"],"description":"KakaoBrain KoGPT (Korean Generative Pre-trained Transformer)"}
{"name":"cvg\/nice-slam","full_name":"cvg\/nice-slam","topics":["slam","neural-fields","neural-implicit-representations","scalable","implicit-functions","localization","deep-learning","3d-reconstruction"],"description":"[CVPR'22] NICE-SLAM: Neural Implicit Scalable Encoding for SLAM"}
{"name":"chonyy\/ai-basketball-analysis","full_name":"chonyy\/AI-basketball-analysis","topics":["basketball","machine-learning","tensorflow","api","computer-vision","object-detection","artificial-intelligence","openpose","deep-learning","pose-estimation","yolo","yolov4"],"description":":basketball::robot::basketball: AI web app and API to analyze basketball shots and shooting pose."}
{"name":"pkhungurn\/talking-head-anime-2-demo","full_name":"pkhungurn\/talking-head-anime-2-demo","topics":["ai","anime","computer-graphics","computer-vision","deep-learning","machine-learning","python","pytorch","vtuber"],"description":"Demo programs for the Talking Head Anime from a Single Image 2: More Expressive project."}
{"name":"baguasys\/bagua","full_name":"BaguaSys\/bagua","topics":["distributed","pytorch","rust-lang","deep-learning","distributed-systems","distributed-computing","machine-learning","bagua"],"description":"Bagua Speeds up PyTorch"}
{"name":"guyulongcs\/awesome-deep-learning-papers-for-search-recommendation-advertising","full_name":"guyulongcs\/Awesome-Deep-Learning-Papers-for-Search-Recommendation-Advertising","topics":["deep-learning","recommender-system","search","advertising","ctr","cvr","reinforcement-learning","search-engine"],"description":"Awesome Deep Learning papers for industrial Search, Recommendation and Advertising. They focus on Embedding, Matching, Ranking (CTR and CVR prediction), Post Ranking, Multi-task Learning, Graph Neural Networks, Transfer Learning, Reinforcement Learning, Self-supervised Learning and so on."}
{"name":"airctic\/icevision","full_name":"airctic\/icevision","topics":["object-detection","deep-learning","pytorch","pytorch-lightning","python","fastai","ai","computer-vision","effecientdet","faster-rcnn","mask-rcnn","annotation-parsers","tutorials","coco-parser","voc-parser","pycocotools","coco-dataset","voc-dataset"],"description":"An Agnostic Computer Vision Framework - Pluggable to any Training Library: Fastai, Pytorch-Lightning with more to come"}
{"name":"vhellendoorn\/code-lms","full_name":"VHellendoorn\/Code-LMs","topics":["gpt-2","deep-learning","source-code"],"description":"Guide to using pre-trained large language models of source code"}
{"name":"geekalexis\/fastmot","full_name":"GeekAlexis\/FastMOT","topics":["jetson","multi-object-tracking","tensorrt","real-time","reid","object-detection","deep-sort","computer-vision","yolov4","ssd","yolov3","people-counter","scaledyolov4","edge-computing","lucas-kanade","video-analysis","deep-learning"],"description":"High-performance multiple object tracking based on YOLO, Deep SORT, and KLT \ud83d\ude80"}
{"name":"pytorchlightning\/pytorch-lightning-bolts","full_name":"Lightning-AI\/lightning-bolts","topics":["pytorch","ai","machine-learning","image-processing","natural-language-processing","supervised-learning","gan"],"description":"Toolbox of models, callbacks, and datasets for AI\/ML researchers."}
{"name":"google-research\/torchsde","full_name":"google-research\/torchsde","topics":["deep-learning","deep-neural-networks","pytorch","dynamical-systems","differential-equations","stochastic-processes","stochastic-differential-equations","stochastic-volatility-models","neural-differential-equations"],"description":"Differentiable SDE solvers with GPU support and efficient sensitivity analysis. "}
{"name":"lucidrains\/performer-pytorch","full_name":"lucidrains\/performer-pytorch","topics":["artificial-intelligence","deep-learning","attention-mechanism","attention","transformers"],"description":"An implementation of Performer, a linear attention-based transformer, in Pytorch"}
{"name":"salesforce\/lavis","full_name":"salesforce\/LAVIS","topics":["deep-learning","deep-learning-library","image-captioning","salesforce","vision-and-language","vision-framework","vision-language-pretraining","vision-language-transformer","visual-question-anwsering","multimodal-datasets","multimodal-deep-learning"],"description":"LAVIS - A One-stop Library for Language-Vision Intelligence"}
{"name":"manujosephv\/pytorch_tabular","full_name":"manujosephv\/pytorch_tabular","topics":["tabular-data","deep-learning","pytorch","pytorch-lightning","hacktoberfest","machine-learning"],"description":"A standard framework for modelling Deep Learning Models for tabular data"}
{"name":"enpeizhao\/cvprojects","full_name":"enpeizhao\/CVprojects","topics":["computer-vision","machine-learning","deep-learning","python"],"description":"computer vision projects |  \u8ba1\u7b97\u673a\u89c6\u89c9\u76f8\u5173\u597d\u73a9\u7684AI\u9879\u76ee"}
{"name":"obsei\/obsei","full_name":"obsei\/obsei","topics":["artificial-intelligence","natural-language-processing","sentiment-analysis","workflow","social-network-analysis","customer-engagement","text-analysis","text-analytics","python","nlp","issue-tracking-system","customer-support","lowcode","text-classification","anonymization","low-code","business-process-automation","workflow-automation","process-automation","social-listening"],"description":"Obsei is a low code AI powered automation tool. It can be used in various business flows like social listening, AI based alerting, brand image analysis, comparative study and more ."}
{"name":"median-research-group\/libmtl","full_name":"median-research-group\/LibMTL","topics":["multitask-learning","multi-task-learning","pytorch","python","multi-domain-learning","deep-learning","mtl","mmoe","ple","multiobjective-optimization","multi-objective-optimization"],"description":"A PyTorch Library for Multi-Task Learning"}
{"name":"pygod-team\/pygod","full_name":"pygod-team\/pygod","topics":["outlier-detection","anomaly-detection","graph-anomaly-detection","machine-learning","security-tools","opensource","deeplearning","python","graphmining","pytorch","graph-neural-networks","fraud-detection","toolkit"],"description":"A Python Library for Graph Outlier Detection (Anomaly Detection)"}
{"name":"nvidia-merlin\/nvtabular","full_name":"NVIDIA-Merlin\/NVTabular","topics":["deep-learning","feature-engineering","feature-selection","gpu","machine-learning","nvidia","preprocessing","recommendation-system","recommender-system"],"description":"NVTabular is a feature engineering and preprocessing library for tabular data designed to quickly and easily manipulate terabyte scale datasets used to train deep learning based recommender systems."}
{"name":"roflcoopter\/viseron","full_name":"roflcoopter\/viseron","topics":["nvr","network-video-capture","network-video-recorder","tensorflow","darknet","yolo","hardware-acceleration","object-detection","motion-detection","cuda","surveillance","rtsp","ip-camera","viseron","coral","edgetpu","google-coral","hacktoberfest"],"description":"Self-hosted NVR with object detection"}
{"name":"nachifur\/mulimgviewer","full_name":"nachifur\/MulimgViewer","topics":["image-stitching","deep-learning","viewer","picture-viewer","ubuntu","windows10","image-viewer","multiple-images","multiple-image-comparison","image-comparison","parallel","multiple-imageview","computer-vision","python3","opencas"],"description":"MulimgViewer is a multi-image viewer that can open multiple images in one interface, which is convenient for image comparison and image stitching."}
{"name":"swz30\/restormer","full_name":"swz30\/Restormer","topics":["image-restoration","image-deraining","image-deblurring","defocus-deblurring","motion-deblurring","transformer","pytorch","low-level-vision","cvpr2022","high-resolution","efficient-transformers"],"description":"[CVPR 2022--Oral] Restormer: Efficient Transformer for High-Resolution Image Restoration. SOTA  for motion deblurring, image deraining, denoising (Gaussian\/real data), and defocus deblurring. "}
{"name":"djdefrag\/qualityscaler","full_name":"Djdefrag\/QualityScaler","topics":["python","amd","intel","nvidia","directx-12","windows","compression-artifact-reduction","deep-learning","gui-application","noise-reduction","opencv","python3","pytorch","super-resolution","pytorch-directml","anime","manga","video"],"description":"QualityScaler - image\/video AI upscaler app (BSRGAN)"}
{"name":"open-mmlab\/mmrazor","full_name":"open-mmlab\/mmrazor","topics":["nas","pruning","knowledge-distillation","spos","darts","autoslim","detection","segmentation","classification","pytorch"],"description":"OpenMMLab Model Compression Toolbox and Benchmark."}
{"name":"kair-bair\/nerfacc","full_name":"KAIR-BAIR\/nerfacc","topics":["instant-ngp","nerf","pytorch","rendering"],"description":"A General NeRF Acceleration Toolbox in PyTorch."}
{"name":"tjiiv-cprg\/epro-pnp","full_name":"tjiiv-cprg\/EPro-PnP","topics":["pose-estimation","6dof","3d-object-detection","perspective-n-point","pytorch","cvpr","monocular","levenberg-marquardt","gauss-newton"],"description":"[CVPR 2022 Oral, Best Student Paper] EPro-PnP: Generalized End-to-End Probabilistic Perspective-n-Points for Monocular Object Pose Estimation"}
{"name":"benaandrew\/voice-cloning-app","full_name":"BenAAndrew\/Voice-Cloning-App","topics":["python","tts","text-to-speech","pytorch","deep-learning","voice-cloning","tacotron2"],"description":"A Python\/Pytorch app for easily synthesising human voices"}
{"name":"pyretri\/pyretri","full_name":"PyRetri\/PyRetri","topics":["deep-learning","image-retrieval","pytorch","toolbox"],"description":"Open source deep learning based unsupervised image retrieval toolbox built on PyTorch\ud83d\udd25"}
{"name":"n00mkrad\/flowframes","full_name":"n00mkrad\/flowframes","topics":["video-interpolation","pytorch","ncnn","dain","rife","gui"],"description":"Flowframes Windows GUI for video interpolation using DAIN (NCNN) or RIFE (CUDA\/NCNN)"}
{"name":"jingyunliang\/vrt","full_name":"JingyunLiang\/VRT","topics":["transformer","video-restoration","low-level-vision","vision-transformer","video-super-resolution","video-deblurring","video-denoising","video-sr","super-resolution","sr","deblurring","denoising","video","restoration"],"description":"VRT: A Video Restoration Transformer (official repository)"}
{"name":"beir-cellar\/beir","full_name":"beir-cellar\/beir","topics":["nlp","information-retrieval","bert","benchmark","sentence-transformers","question-generation","retrieval","passage-retrieval","elasticsearch","dpr","sbert","retrieval-models","dataset","ance","colbert","zero-shot-retrieval","use-qa","deep-learning","pytorch"],"description":"A Heterogeneous Benchmark for Information Retrieval. Easy to use, evaluate your models across 15+ diverse IR datasets."}
{"name":"sjtuytc\/largescalenerfpytorch","full_name":"sjtuytc\/LargeScaleNeRFPytorch","topics":["nerf","nerf-w","pytorch-implementation","block-nerf","city-nerf","custum-nerf","mega-nerf","view-synthesis","weekly-nerf","weekly","classified","pytorch-implementations","pytorch","pytorch-lightning","chinese-translation","deep-learning"],"description":"1. Non-official implementation of Block-NeRF and Mega-NeRF in Pytorch. 2. Train your large-scale NeRF in the wild. 3. Weekly classified NeRF literature."}
{"name":"patrick-kidger\/diffrax","full_name":"patrick-kidger\/diffrax","topics":["differential-equations","jax","deep-learning","neural-differential-equations","machine-learning","dynamical-systems","neural-networks"],"description":"Numerical differential equation solvers in JAX. Autodifferentiable and GPU-capable. https:\/\/docs.kidger.site\/diffrax\/"}
{"name":"tensorflow\/gnn","full_name":"tensorflow\/gnn","topics":["tensorflow","gnn","deep-learning","machine-learning"],"description":"TensorFlow GNN is a library to build Graph Neural Networks on the TensorFlow platform."}
{"name":"alibaba\/federatedscope","full_name":"alibaba\/FederatedScope","topics":["federated-learning","machine-learning","pytorch"],"description":"An easy-to-use federated learning platform"}
{"name":"shi-labs\/neighborhood-attention-transformer","full_name":"SHI-Labs\/Neighborhood-Attention-Transformer","topics":["neighborhood-attention","pytorch"],"description":"Official NAT (Neighborhood Attention Transformer) and DiNAT (Dilated Neighborhood Attention Transformer) repository."}
{"name":"thuml\/autoformer","full_name":"thuml\/Autoformer","topics":["deep-learning","time-series"],"description":"About Code release for \"Autoformer: Decomposition Transformers with Auto-Correlation for Long-Term Series Forecasting\" (NeurIPS 2021), https:\/\/arxiv.org\/abs\/2106.13008"}
{"name":"separius\/awesome-fast-attention","full_name":"Separius\/awesome-fast-attention","topics":["transformer","attention","awesome","reformer","longformer","linformer","multihead-attention","self-attention","attention-is-all-you-need","transformer-network"],"description":"list of efficient attention modules"}
{"name":"ydataai\/ydata-synthetic","full_name":"ydataai\/ydata-synthetic","topics":["gan-architectures","gan","deep-learning","synthetic-data","tensorflow2","machine-learning","training-data","python3","datagenerator","datageneration","timeseries","generative-adversarial-network","gans","pytorch","time-series"],"description":"Synthetic structured data generators"}
{"name":"grammarly\/gector","full_name":"grammarly\/gector","topics":["grammatical-error-correction","natural-language-processing","sequence-labeling","transformers","roberta","bert","xlnet","nlp","text-simplification"],"description":"Official implementation of the papers \"GECToR \u2013 Grammatical Error Correction: Tag, Not Rewrite\" (BEA-20) and \"Text Simplification by Tagging\" (BEA-21)"}
{"name":"natspeech\/natspeech","full_name":"NATSpeech\/NATSpeech","topics":["speech-synthesis","pytorch","tts","speech","huggingface","portaspeech","diffsinger","diffspeech"],"description":"A Non-Autoregressive Text-to-Speech (NAR-TTS) framework, including official PyTorch implementation of PortaSpeech (NeurIPS 2021) and DiffSpeech (AAAI 2022)"}
{"name":"yinboc\/liif","full_name":"yinboc\/liif","topics":["machine-learning","super-resolution","pytorch","implicit-neural-representation"],"description":"Learning Continuous Image Representation with Local Implicit Image Function, in CVPR 2021 (Oral)"}
{"name":"facebookresearch\/timesformer","full_name":"facebookresearch\/TimeSformer","topics":[],"description":"The official pytorch implementation of our paper \"Is Space-Time Attention All You Need for Video Understanding?\""}
{"name":"calciferzh\/minimal-hand","full_name":"CalciferZh\/minimal-hand","topics":["computer-vision","deep-learning","3d-hand-pose-estimation","hand-tracking","hand-motion-capture"],"description":"A minimal solution to hand motion capture from a single color camera at over 100fps. Easy to use, plug to run."}
{"name":"chandrikadeb7\/face-mask-detection","full_name":"chandrikadeb7\/Face-Mask-Detection","topics":["python","python-3","python3","keras","keras-tensorflow","deep-learning","computer-vision","face-mask-detection","covid-19","ssd-mobilenet","mobilenetv2","bing-search","mask-detection","facemaskdetect","facemask-detection","mask-detection-system","face-mask","machine-learning","caffe","hacktoberfest"],"description":"Face Mask Detection system based on computer vision and deep learning using OpenCV and Tensorflow\/Keras"}
{"name":"mit-han-lab\/anycost-gan","full_name":"mit-han-lab\/anycost-gan","topics":["computer-vision","deep-learning","computer-graphics","generative-adversarial-network","gan","image-generation","image-manipulation","image-editing","gans","pytorch","stylegan2"],"description":"[CVPR 2021] Anycost GANs for Interactive Image Synthesis and Editing"}
{"name":"karpathy\/arxiv-sanity-lite","full_name":"karpathy\/arxiv-sanity-lite","topics":["arxiv","deep-learning","machine-learning","flask"],"description":"arxiv-sanity lite: tag arxiv papers of interest get recommendations of similar papers in a nice UI using SVMs over tfidf feature vectors based on paper abstracts."}
{"name":"huggingface\/autotrain-advanced","full_name":"huggingface\/autotrain-advanced","topics":["huggingface","deep-learning","machine-learning","natural-language-processing","natural-language-understanding","autotrain","python"],"description":"\ud83e\udd17 AutoTrain Advanced"}
{"name":"open-mmlab\/mmflow","full_name":"open-mmlab\/mmflow","topics":["optical-flow","openmmlab","pytorch"],"description":"OpenMMLab optical flow toolbox and benchmark"}
{"name":"swz30\/mprnet","full_name":"swz30\/MPRNet","topics":["image-deblurring","image-denoising","image-deraining","low-level-vision","computer-vision","image-restoration","multistage-network","progressive-restoration","pytorch","cvpr2021","cvpr21","cvpr-2021"],"description":"[CVPR 2021] Multi-Stage Progressive Image Restoration. SOTA results for Image deblurring, deraining, and denoising."}
{"name":"dvlab-research\/largescalenerfpytorch","full_name":"sjtuytc\/LargeScaleNeRFPytorch","topics":["nerf","nerf-w","pytorch-implementation","block-nerf","city-nerf","custum-nerf","mega-nerf","view-synthesis","weekly-nerf","weekly","classified","pytorch-implementations","pytorch","pytorch-lightning","chinese-translation","deep-learning"],"description":"1. Non-official implementation of Block-NeRF and Mega-NeRF in Pytorch. 2. Train your large-scale NeRF in the wild. 3. Weekly classified NeRF literature."}
{"name":"ikergarcia1996\/self-driving-car-in-video-games","full_name":"ikergarcia1996\/Self-Driving-Car-in-Video-Games","topics":["python","pytorch","self-driving-car","videogame","videogame-bot","neural-network","deep-learning","supervised-learning","machine-learning","autonomous-driving","deep-neural-network","video-games","pretrained-models"],"description":"A deep neural network that learns to drive in video games"}
{"name":"kaiyangzhou\/dassl.pytorch","full_name":"KaiyangZhou\/Dassl.pytorch","topics":["pytorch","benchmark-datasets","semi-supervised-learning","domain-adaptation","domain-generalization","deep-learning","machine-learning","computer-vision","artificial-intelligence","deep-neural-networks"],"description":"A PyTorch toolbox for domain generalization, domain adaptation and semi-supervised learning."}
{"name":"mukosame\/zooming-slow-mo-cvpr-2020","full_name":"Mukosame\/Zooming-Slow-Mo-CVPR-2020","topics":["pytorch","video","super-resolution","video-frame-interpolation","video-super-resolution","spatio-temporal","cvpr2020","cvpr"],"description":"Fast and Accurate One-Stage Space-Time Video Super-Resolution (accepted in CVPR 2020)"}
{"name":"csslab\/maia-chess","full_name":"CSSLab\/maia-chess","topics":["chess","chess-engine","deep-learning","machine-learning","computational-social-science"],"description":"Maia is a human-like neural network chess engine trained on millions of human games."}
{"name":"interdigitalinc\/compressai","full_name":"InterDigitalInc\/CompressAI","topics":["compression","deep-learning","python","pytorch","machine-learning","deep-neural-networks","neural-network"],"description":"A PyTorch library and evaluation platform for end-to-end compression research"}
{"name":"huggingface\/autonlp","full_name":"huggingface\/autotrain-advanced","topics":["huggingface","deep-learning","machine-learning","natural-language-processing","natural-language-understanding","autotrain","python"],"description":"\ud83e\udd17 AutoTrain Advanced"}
{"name":"thudm\/cogview2","full_name":"THUDM\/CogView2","topics":["transformer","pytorch","pretrained-models","text-to-image"],"description":"official code repo for paper \"CogView2: Faster and Better Text-to-Image Generation via Hierarchical Transformers\""}
{"name":"nnaisense\/evotorch","full_name":"nnaisense\/evotorch","topics":["artificial-intelligence","evolutionary-computation","neural-networks","optimization-algorithms","distributed","gpu","python","pytorch","optimization","reinforcement-learning","evolutionary-algorithms"],"description":"Advanced evolutionary computation library built directly on top of PyTorch, created at NNAISENSE."}
{"name":"youngwanlee\/centermask2","full_name":"youngwanLEE\/centermask2","topics":["centermask","detectron2","object-detection","instance-segmentation","anchor-free","vovnet","vovnetv2","real-time","pytorch","cvpr2020"],"description":"CenterMask : Real-time Anchor-Free Instance Segmentation, in CVPR 2020"}
{"name":"huggingface\/optimum","full_name":"huggingface\/optimum","topics":["onnx","pytorch","inference","training","intel","graphcore","onnxruntime","transformers","quantization","habana","optimization"],"description":"\ud83c\udfce\ufe0f Accelerate training and inference of \ud83e\udd17 Transformers with easy to use hardware optimization tools"}
{"name":"mcg-nju\/videomae","full_name":"MCG-NJU\/VideoMAE","topics":["self-supervised-learning","action-recognition","video-understanding","masked-autoencoder","transformer","vision-transformer","video-transformer","mae","pytorch","video-representation-learning","video-analysis","neurips-2022"],"description":"[NeurIPS 2022 Spotlight] VideoMAE: Masked Autoencoders are Data-Efficient Learners for Self-Supervised Video Pre-Training"}
{"name":"km1994\/nlp-interview-notes","full_name":"km1994\/NLP-Interview-Notes","topics":["bert","transformer","nlp","ner","deel-learning"],"description":"\u8be5\u4ed3\u5e93\u4e3b\u8981\u8bb0\u5f55 NLP \u7b97\u6cd5\u5de5\u7a0b\u5e08\u76f8\u5173\u7684\u9762\u8bd5\u9898"}
{"name":"xiaomi\/minlp","full_name":"XiaoMi\/MiNLP","topics":["nlp","tensorflow","python3"],"description":"XiaoMi Natural Language Processing Toolkits "}
{"name":"jasmcaus\/caer","full_name":"jasmcaus\/caer","topics":["python","vision","artificial-intelligence","machine-learning","neural-network","deep-learning","gpu","ai","data-science","image-processing","video-processing","caer","augmentation","computer-vision","opencv","cuda","type-checking","segmentation","image-classification","image-segmentation"],"description":"High-performance Vision library in Python. Scale your research, not boilerplate. "}
{"name":"hazyresearch\/state-spaces","full_name":"HazyResearch\/state-spaces","topics":["state-space-models","sequence-models","pytorch","time-series"],"description":"Sequence Modeling with Structured State Spaces"}
{"name":"lucidrains\/vector-quantize-pytorch","full_name":"lucidrains\/vector-quantize-pytorch","topics":["artificial-intelligence","deep-learning","pytorch","vector-quantization"],"description":"Vector Quantization, in Pytorch"}
{"name":"bayesiains\/nflows","full_name":"bayesiains\/nflows","topics":["density-estimation","normalizing-flows","generative-model","pytorch"],"description":"Normalizing flows in PyTorch"}
{"name":"iceychris\/libreasr","full_name":"iceychris\/LibreASR","topics":["asr","speech-recognition","pytorch","fastai","rnn-transducer","deep-learning","esp32-lyrat","python"],"description":":speech_balloon: An On-Premises, Streaming Speech Recognition System "}
{"name":"danijar\/dreamerv2","full_name":"danijar\/dreamerv2","topics":["reinforcement-learning","world-models","artificial-intelligence","robotics","deep-learning","video-prediction","atari","research","machine-learning"],"description":"Mastering Atari with Discrete World Models"}
{"name":"medmnist\/medmnist","full_name":"MedMNIST\/MedMNIST","topics":["dataset","benchmark","automl","mnist","medical","medical-image-analysis","medmnist","multi-modal","decathlon","medical-imaging","medical-image-computing","deep-learning","machine-learning","3d","2d","classification","few-shot-learning","pytorch"],"description":"18 MNIST-like Datasets for 2D and 3D Biomedical Image Classification: pip install medmnist"}
{"name":"wmcnally\/kapao","full_name":"wmcnally\/kapao","topics":["pytorch","deep-learning","human-pose-estimation","yolo","pose-estimation"],"description":"KAPAO is an efficient single-stage human pose estimation model that detects keypoints and poses as objects and fuses the detections to predict human poses."}
{"name":"openppl-public\/ppq","full_name":"openppl-public\/ppq","topics":["neural-network","deep-learning","quantization","pytorch","caffe","onnx","cuda","open-source"],"description":"PPL Quantization Tool (PPQ) is a powerful offline neural network quantization tool."}
{"name":"nvidia-merlin\/transformers4rec","full_name":"NVIDIA-Merlin\/Transformers4Rec","topics":["transformer","pytorch","tabular-data","huggingface","bert","gtp","language-model","xlnet","nlp","seq2seq","recsys","recommender-system","session-based-recommendation"],"description":"Transformers4Rec is a flexible and efficient library for sequential and session-based recommendation and works with PyTorch."}
{"name":"tencent\/patrickstar","full_name":"Tencent\/PatrickStar","topics":["nlp","pretrained-models","gpt","bert","pytorch"],"description":"PatrickStar enables Larger, Faster, Greener Pretrained Models for NLP and democratizes AI for everyone."}
{"name":"piesposito\/blitz-bayesian-deep-learning","full_name":"piEsposito\/blitz-bayesian-deep-learning","topics":["pytorch","pytorch-implementation","pytorch-tutorial","bayesian-layers","bayesian-deep-learning","bayesian-neural-networks"],"description":"A simple and extensible library to create Bayesian Neural Network layers on PyTorch."}
{"name":"visual-layer\/fastdup","full_name":"visual-layer\/fastdup","topics":["data-curation","dataset","deep-learning","image-duplicate-detection","machine-learning","novelty-detection","object-detection","outlier-detection","python","visual-search","data-augmentation","image-classification","kaggle","similarity","image","image-classfication","image-processing","visualization-tools"],"description":"FastDup is a tool for gaining insights from a large image collection. It can find anomalies, duplicate and near duplicate images, clusters of similaritity, learn the normal behavior and temporal interactions between images. It can be used for smart subsampling of a higher quality dataset, outlier removal, novelty detection of new information to be sent for tagging. FastDup scales to millions of images running on CPU only."}
{"name":"megvii-research\/nafnet","full_name":"megvii-research\/NAFNet","topics":["deblur","denoise","stereo-super-resolution","eccv2022","image-deblurring","image-denoising","image-restoration","low-level-vision","pytorch"],"description":"The state-of-the-art image restoration model without nonlinear activation functions."}
{"name":"allenai\/rl4lms","full_name":"allenai\/RL4LMs","topics":["language-modeling","nlp","reinforcement-learning","dialogue-generation","machine-translation","natural-language-processing","summarization","table-to-text","text-generation"],"description":"A modular RL library to fine-tune language models to human preferences"}
{"name":"lucidrains\/mlp-mixer-pytorch","full_name":"lucidrains\/mlp-mixer-pytorch","topics":["deep-learning","vision"],"description":"An All-MLP solution for Vision, from Google AI"}
{"name":"google\/hypernerf","full_name":"google\/hypernerf","topics":["nerf","neural-network","neural-rendering","3d","novel-view-synthesis","machine-learning"],"description":"Code for \"HyperNeRF: A Higher-Dimensional Representation for Topologically Varying Neural Radiance Fields\"."}
{"name":"yashbhalgat\/hashnerf-pytorch","full_name":"yashbhalgat\/HashNeRF-pytorch","topics":["nerf","real-time-rendering","computer-graphics","computer-vision","neural-network","signed-distance-functions","artificial-intelligence","machine-learning","3d-reconstruction","efficient-training","hashing"],"description":"Pure PyTorch Implementation of NVIDIA paper on Instant Training of Neural Graphics primitives: https:\/\/nvlabs.github.io\/instant-ngp\/"}
{"name":"zhiqwang\/yolov5-rt-stack","full_name":"zhiqwang\/yolov5-rt-stack","topics":["libtorch","yolov5","inference","torchscript","onnx","onnxruntime","tvm","pytorch","detection","jit","visualization","yolo","lightning","yolort","deployment","ncnn","tensorrt","graghsurgeon","trt","nms"],"description":"yolort is a runtime stack for yolov5 on specialized accelerators such as tensorrt, libtorch, onnxruntime, tvm and ncnn."}
{"name":"tinkoff-ai\/etna","full_name":"tinkoff-ai\/etna","topics":["python","machine-learning","time-series","forecasting","timeseries","deep-learning"],"description":"ETNA \u2013 Time-Series Library"}
{"name":"hkchengrex\/cascadepsp","full_name":"hkchengrex\/CascadePSP","topics":["segmentation","deep-learning","pytorch","cvpr2020","computer-vision","segmentation-refinement","refinement-network","high-resolution"],"description":"[CVPR 2020] CascadePSP: Toward Class-Agnostic and Very High-Resolution Segmentation via Global and Local Refinement"}
{"name":"amrzv\/awesome-colab-notebooks","full_name":"amrzv\/awesome-colab-notebooks","topics":["colab-notebooks","machine-learning","deep-learning","generative-adversarial-network","tensorflow","tensorflow-tutorials","jupyter-notebooks","google-colaboratory","google-colab","google-colab-tutorial","google-colabs","google-colab-notebooks","google-colab-notebook","deep-neural-networks","pytorch","cnn"],"description":"Collection of google colaboratory notebooks for fast and easy experiments"}
{"name":"nlp-uoregon\/trankit","full_name":"nlp-uoregon\/trankit","topics":["nlp","natural-language-processing","pytorch","language-model","xlm-roberta","machine-learning","deeplearning","artificial-intelligence","universal-dependencies","multilingual","adapters","sentence-segmentation","tokenization","part-of-speech-tagging","morphological-tagging","dependency-parsing","lemmatization"],"description":"Trankit is a Light-Weight Transformer-based Python Toolkit for Multilingual Natural Language Processing"}
{"name":"benedekrozemberczki\/littleballoffur","full_name":"benedekrozemberczki\/littleballoffur","topics":["graph","graph-sampling","network-sampling","random-walk","forest-fire","node-embedding","network-embedding","minimum-spanning-tree","graph-embedding","sampling","metropolis-hastings","network-science","network-analytics","deep-learning","machine-learning","graph-sparsification","graph-algorithms","networkx","community-structure"],"description":"Little Ball of Fur - A graph sampling extension library for NetworKit and NetworkX (CIKM 2020)"}
{"name":"snap-research\/efficientformer","full_name":"snap-research\/EfficientFormer","topics":["deep-learning","detection","efficient-inference","efficient-neural-networks","pytorch","semantic-segmentation","transformer","imagenet","transformers"],"description":"EfficientFormerV2 & EfficientFormer(NeurIPs 2022)"}
{"name":"teddykoker\/torchsort","full_name":"teddykoker\/torchsort","topics":["pytorch","sort","ranking","cuda-kernel"],"description":"Fast, differentiable sorting and ranking in PyTorch"}
{"name":"gaparmar\/clean-fid","full_name":"GaParmar\/clean-fid","topics":["computer-vision","deep-learning","computer-graphics","pytorch","generative-adversarial-network","gan","image-manipulation","image-generation","fid-score","fid-calculation","fid","frechet-inception-distance","frechet-distance"],"description":"PyTorch - FID calculation with proper image resizing and quantization steps [CVPR 2022]"}
{"name":"huggingface\/course","full_name":"huggingface\/course","topics":["deep-learning","nlp","transformers"],"description":"The Hugging Face course on Transformers"}
{"name":"szq0214\/meal-v2","full_name":"szq0214\/MEAL-V2","topics":["distillation","imagenet","compression-algorithm","mobilenetv3","efficientnet","pre-trained","resnet50","imagenet-dataset","meal","model-architecture","pytorch","distillation-model"],"description":"MEAL V2: Boosting Vanilla ResNet-50 to 80%+ Top-1 Accuracy on ImageNet without Tricks"}
{"name":"intel\/neural-compressor","full_name":"intel\/neural-compressor","topics":["low-precision","pruning","sparsity","auto-tuning","knowledge-distillation","quantization","quantization-aware-training","post-training-quantization","deep-learning"],"description":"Intel\u00ae Neural Compressor (formerly known as Intel\u00ae Low Precision Optimization Tool), targeting to provide unified APIs for network compression technologies, such as low precision quantization, sparsity, pruning, knowledge distillation, across different deep learning frameworks to pursue optimal inference performance."}
{"name":"abhi1thakur\/tez","full_name":"abhishekkrthakur\/tez","topics":["tez","pytorch","deep-learning","deep-neural-networks","neural-networks"],"description":"Tez is a super-simple and lightweight Trainer for PyTorch. It also comes with many utils that you can use to tackle over 90% of deep learning projects in PyTorch."}
{"name":"astrazeneca\/chemicalx","full_name":"AstraZeneca\/chemicalx","topics":["deep-learning","pytorch","deep-chemistry","graph-neural-network","drug","drug-pair","polypharmacy","drug-discovery","pharma","drug-interaction","chemistry","biology","machine-learning","torch","geometric-deep-learning","geometry","smiles","smiles-strings","torchdrug"],"description":"A PyTorch and TorchDrug based deep learning library for drug pair scoring. (KDD 2022)"}
{"name":"rl-vig\/libfewshot","full_name":"RL-VIG\/LibFewShot","topics":["few-shot-learning","meta-learning","fine-tuning","image-classification","pytorch"],"description":"LibFewShot: A Comprehensive Library for Few-shot Learning."}
{"name":"google-research\/maxim","full_name":"google-research\/maxim","topics":["image","architecture","image-processing","computer-vision","transformer","mlp","enhancement","image-restoration","restoration","denoising","deblurring","dehazing","deraining","retouching","low-level-vision","image-enhancement"],"description":"[CVPR 2022 Oral] Official repository for \"MAXIM: Multi-Axis MLP for Image Processing\". SOTA for denoising, deblurring, deraining, dehazing, and enhancement."}
{"name":"cdpierse\/transformers-interpret","full_name":"cdpierse\/transformers-interpret","topics":["nlp","machine-learning","natural-language-processing","explainable-ai","transformers","model-explainability","transformers-model","captum","deep-learning","neural-network","interpretability","computer-vision"],"description":"Model explainability that works seamlessly with \ud83e\udd17 transformers. Explain your transformers model in just 2 lines of code. "}
{"name":"bubbliiiing\/yolov4-tiny-pytorch","full_name":"bubbliiiing\/yolov4-tiny-pytorch","topics":[],"description":" \u8fd9\u662f\u4e00\u4e2aYoloV4-tiny-pytorch\u7684\u6e90\u7801\uff0c\u53ef\u4ee5\u7528\u4e8e\u8bad\u7ec3\u81ea\u5df1\u7684\u6a21\u578b\u3002"}
{"name":"asteroid-team\/torch-audiomentations","full_name":"asteroid-team\/torch-audiomentations","topics":["data-augmentation","pytorch","audio-data-augmentation","audio","waveform","dsp","audio-effects","machine-learning","deep-learning","music","sound","sound-processing","augmentation","python","differentiable-data-augmentation"],"description":"Fast audio data augmentation in PyTorch. Inspired by audiomentations. Useful for deep learning."}
{"name":"google\/jaxopt","full_name":"google\/jaxopt","topics":["jax","optimization","deep-learning","differentiable-programming","bi-level"],"description":"Hardware accelerated, batchable and differentiable optimizers in JAX."}
{"name":"twentybn\/sense","full_name":"quic\/sense","topics":["pytorch","neural-networks","deep-learning","computer-vision","activity-recognition","gesture-recognition","fitness-app","calorie-estimation","video"],"description":"Enhance your application with the ability to see and interact with humans using any RGB camera."}
{"name":"neuralmind-ai\/portuguese-bert","full_name":"neuralmind-ai\/portuguese-bert","topics":["nlp-resources","bert-model","portuguese","deep-learning","bert","natural-language-processing"],"description":"Portuguese pre-trained BERT models"}
{"name":"kekmodel\/fixmatch-pytorch","full_name":"kekmodel\/FixMatch-pytorch","topics":["semi-supervised-learning","deeplearning","pytorch","fixmatch","randaugment"],"description":"Unofficial PyTorch implementation of \"FixMatch: Simplifying Semi-Supervised Learning with Consistency and Confidence\""}
{"name":"alibaba-miil\/asl","full_name":"Alibaba-MIIL\/ASL","topics":["multi-label-classification","loss","detection","classification"],"description":"Official Pytorch Implementation of: \"Asymmetric Loss For Multi-Label Classification\"(ICCV, 2021) paper"}
{"name":"alibaba-miil\/imagenet21k","full_name":"Alibaba-MIIL\/ImageNet21K","topics":["imagenet21k","pretraining","downstream","semantic-softmax","single-label","multi-label-classification","vision-transformer","mixer"],"description":"Official Pytorch Implementation of: \"ImageNet-21K Pretraining for the Masses\"(NeurIPS, 2021) paper"}
{"name":"explosion\/spacy-streamlit","full_name":"explosion\/spacy-streamlit","topics":["spacy","nlp","natural-language-processing","visualizers","dependency-parsing","part-of-speech-tagging","named-entity-recognition","ner","streamlit","visualizer","text-classification","word-vectors","tokenization","machine-learning"],"description":"\ud83d\udc51 spaCy building blocks and visualizers for Streamlit apps"}
{"name":"rstrudel\/segmenter","full_name":"rstrudel\/segmenter","topics":["transformer","segmentation"],"description":"[ICCV2021] Official PyTorch implementation of Segmenter: Transformer for Semantic Segmentation"}
{"name":"wtjiang98\/psgan","full_name":"wtjiang98\/PSGAN","topics":["psgan","pytorch","makeup-transfer","makeup","generative-adversarial-network","gan"],"description":"PyTorch code for \"PSGAN: Pose and Expression Robust Spatial-Aware GAN for Customizable Makeup Transfer\" (CVPR 2020 Oral)"}
{"name":"bubbliiiing\/yolox-pytorch","full_name":"bubbliiiing\/yolox-pytorch","topics":[],"description":"\u8fd9\u662f\u4e00\u4e2ayolox-pytorch\u7684\u6e90\u7801\uff0c\u53ef\u4ee5\u7528\u4e8e\u8bad\u7ec3\u81ea\u5df1\u7684\u6a21\u578b\u3002"}
{"name":"xxxnell\/how-do-vits-work","full_name":"xxxnell\/how-do-vits-work","topics":["vision-transformer","transformer","self-attention","loss-landscape","pytorch"],"description":"(ICLR 2022 Spotlight) Official PyTorch implementation of \"How Do Vision Transformers Work?\""}
{"name":"ofa-sys\/chinese-clip","full_name":"OFA-Sys\/Chinese-CLIP","topics":["chinese","computer-vision","multi-modal-learning","nlp","pytorch","vision-and-language-pre-training","image-text-retrieval","clip","pretrained-models","vision-language","deep-learning","multi-modal","contrastive-loss","transformers"],"description":"Chinese version of CLIP which achieves Chinese cross-modal retrieval and representation generation."}
{"name":"fafa-dl\/awesome-backbones","full_name":"Fafa-DL\/Awesome-Backbones","topics":["pytorch","image-classification","transformer","cnn","pytorch-classification","deep-learning","resnet","swin-transformer"],"description":"Integrate deep learning models for image classification | Backbone learning\/comparison\/magic modification project"}
{"name":"helblazer811\/manimml","full_name":"helblazer811\/ManimML","topics":["machine-learning","neural-network","visualization","manim","3blue1brown"],"description":"ManimML is a project focused on providing animations and visualizations of common machine learning concepts with the Manim Community Library."}
{"name":"lightning-ai\/lightning-transformers","full_name":"Lightning-AI\/lightning-transformers","topics":["pytorch","pytorch-lightning","transformers","hydra"],"description":"Flexible components pairing \ud83e\udd17 Transformers with :zap: Pytorch Lightning"}
{"name":"jankrepl\/deepdow","full_name":"jankrepl\/deepdow","topics":["deep-learning","portfolio-optimization","finance","machine-learning","pytorch","timeseries","markowitz","convex-optimization","stock-price-prediction","wealth-management","trading","allocation"],"description":"Portfolio optimization with deep learning."}
{"name":"lucidrains\/flamingo-pytorch","full_name":"lucidrains\/flamingo-pytorch","topics":["artificial-intelligence","attention-mechanism","deep-learning","transformers","visual-question-answering"],"description":"Implementation of \ud83e\udda9 Flamingo, state-of-the-art few-shot visual question answering attention net out of Deepmind, in Pytorch"}
{"name":"mit-han-lab\/torchsparse","full_name":"mit-han-lab\/torchsparse","topics":["pytorch","point-cloud","acceleration"],"description":"[MLSys'22] TorchSparse: Efficient Point Cloud Inference Engine"}
{"name":"sooftware\/conformer","full_name":"sooftware\/conformer","topics":["conformer","transformer","cnn","transformer-xl","asr","speech-recognition","pytorch","conv","convolution","augmented","speech","recognition"],"description":"PyTorch implementation of \"Conformer: Convolution-augmented Transformer for Speech Recognition\" (INTERSPEECH 2020)"}
{"name":"kwotsin\/mimicry","full_name":"kwotsin\/mimicry","topics":["generative-adversarial-networks","gans","reproducibility","pytorch","generative-models","machine-learning","gan","sngan","sngan-projection","wgan-gp","ssgan","dcgan","infomax-gan","cgan","cvpr","python","cvpr2020","cvpr20"],"description":"[CVPR 2020 Workshop] A PyTorch GAN library that reproduces research results for popular GANs."}
{"name":"huggingface\/huggingface_hub","full_name":"huggingface\/huggingface_hub","topics":["model-hub","machine-learning","models","natural-language-processing","deep-learning","pytorch","pretrained-models","hacktoberfest"],"description":"All the open source things related to the Hugging Face Hub."}
{"name":"visual-attention-network\/segnext","full_name":"Visual-Attention-Network\/SegNeXt","topics":[],"description":"Official Pytorch implementations for \"SegNeXt: Rethinking Convolutional Attention Design for Semantic Segmentation\" (NeurIPS 2022)"}
{"name":"lucidrains\/coca-pytorch","full_name":"lucidrains\/CoCa-pytorch","topics":["artificial-intelligence","attention-mechanism","contrastive-learning","deep-learning","multimodal","transformers","image-to-text"],"description":"Implementation of CoCa, Contrastive Captioners are Image-Text Foundation Models, in Pytorch"}
{"name":"qpt-family\/qpt","full_name":"QPT-Family\/QPT","topics":["paddlepaddle","qpt","python","cuda","gpu","dml","noavx","deep-learning","pypi"],"description":"[\u5185\u6d4b\u4e2d]QPT - Python\u7a0b\u5e8f\u6a21\u5757\u5316\u5c01\u88c5\u5de5\u5177\uff08Py\u8f6cEXE\uff09\uff0c\u5feb\u901f\u5c06Python\u6253\u5305\u4e3aEXE\u5e76\u6dfb\u52a0CUDA\u3001NoAVX\u7b49\u652f\u6301\u3002"}
{"name":"the-ai-summer\/self-attention-cv","full_name":"The-AI-Summer\/self-attention-cv","topics":["deep-learning","transformer","transformers","self-attention","attention-mechanism","attention","machine-learning","machine-learning-algorithms","artificial-intelligence"],"description":"Implementation of various self-attention mechanisms focused on computer vision. Ongoing repository. "}
{"name":"jayleicn\/clipbert","full_name":"jayleicn\/ClipBERT","topics":["pytorch","video-retrieval","video-question-answering","vqa","vision-and-language","cvpr2021"],"description":"[CVPR 2021 Best Student Paper Honorable Mention, Oral] Official PyTorch code for ClipBERT, an efficient framework for end-to-end learning on image-text and video-text tasks. "}
{"name":"arpitbansal297\/cold-diffusion-models","full_name":"arpitbansal297\/Cold-Diffusion-Models","topics":[],"description":"Official implementation of Cold-Diffusion for different transformations in pytorch."}
{"name":"jeff-sjtu\/hybrik","full_name":"Jeff-sjtu\/HybrIK","topics":["3d-pose-estimation","smpl","inverse-kinematics","pose-estimation","pytorch","cvpr","cvpr21"],"description":"Official code of \"HybrIK: A Hybrid Analytical-Neural Inverse Kinematics Solution for 3D Human Pose and Shape Estimation\", CVPR 2021"}
{"name":"sail-sg\/adan","full_name":"sail-sg\/Adan","topics":["adan","bert-model","convnext","deep-learning","fairseq","mae","optimizer","resnet","timm","vit","transformer-xl","artificial-intelligence","diffusion","dreamfusion","gpt2","pytorch"],"description":"Adan: Adaptive Nesterov Momentum Algorithm for Faster Optimizing Deep Models"}
{"name":"lab-ml\/nn","full_name":"labmlai\/annotated_deep_learning_paper_implementations","topics":["deep-learning","deep-learning-tutorial","pytorch","gan","transformers","reinforcement-learning","optimizers","neural-networks","transformer","machine-learning","attention"],"description":"\ud83e\uddd1\u200d\ud83c\udfeb 59 Implementations\/tutorials of deep learning papers with side-by-side notes \ud83d\udcdd; including transformers (original, xl, switch, feedback, vit, ...), optimizers (adam, adabelief, ...), gans(cyclegan, stylegan2, ...), \ud83c\udfae reinforcement learning (ppo, dqn), capsnet, distillation, ... \ud83e\udde0"}
{"name":"shank2358\/gghl","full_name":"Shank2358\/GGHL","topics":["pytorch","oriented-object-detection","object-detection","deep-learning","anchor-free","nvidia-jetson-xavier","nvidia-jetson-tx2","fcos-r","remote-sensing","centernet"],"description":"This is the implementation of GGHL (A General Gaussian Heatmap Label Assignment for Arbitrary-Oriented Object Detection)"}
{"name":"unitaryai\/detoxify","full_name":"unitaryai\/detoxify","topics":["bert","bert-model","huggingface-transformers","huggingface","nlp","toxic-comment-classification","toxicity","toxic-comments","sentence-classification","kaggle-competition","pytorch-lightning","hatespeech","hate-speech-detection","toxicity-classification","hate-speech"],"description":"Trained models & code to predict toxic comments on all 3 Jigsaw Toxic Comment Challenges. Built using \u26a1 Pytorch Lightning and \ud83e\udd17 Transformers. For access to our API, please email us at contact@unitary.ai."}
{"name":"montaellis\/pytorch-medical-segmentation","full_name":"MontaEllis\/Pytorch-Medical-Segmentation","topics":["pytorch","torchio","segmentation","medical-image-processing"],"description":"This repository is an unoffical PyTorch implementation of Medical segmentation in 2D and 3D."}
{"name":"tencentmusic\/cube-studio","full_name":"tencentmusic\/cube-studio","topics":["kubernetes","inference","mlops","workflow","ai","pytorch","spark","argo","kubeflow","automl"],"description":"\u4e91\u539f\u751f\u4e00\u7ad9\u5f0f\u673a\u5668\u5b66\u4e60\u5e73\u53f0\uff0c\u591a\u79df\u6237\uff0c\u6570\u636e\u8d44\u4ea7\uff0cnotebook\u5728\u7ebf\u5f00\u53d1\uff0c\u62d6\u62c9\u62fd\u4efb\u52a1\u6d41\u7f16\u6392\uff0c\u591a\u673a\u591a\u5361\u5206\u5e03\u5f0f\u8bad\u7ec3\uff0c\u8d85\u53c2\u641c\u7d22\uff0c\u63a8\u7406\u670d\u52a1\uff0c\u591a\u96c6\u7fa4\u8c03\u5ea6\uff0c\u591a\u9879\u76ee\u7ec4\u8d44\u6e90\u7ec4\uff0c\u8fb9\u7f18\u8ba1\u7b97\uff0c\u5927\u6a21\u578b\u5b9e\u65f6\u8bad\u7ec3, ai\u5e94\u7528\u5546\u5e97"}
{"name":"idea-ccnl\/fengshenbang-lm","full_name":"IDEA-CCNL\/Fengshenbang-LM","topics":["chinese-nlp","pretrained-models","pytorch","distributed-training","transformers","aigc","multimodal"],"description":"Fengshenbang-LM(\u5c01\u795e\u699c\u5927\u6a21\u578b)\u662fIDEA\u7814\u7a76\u9662\u8ba4\u77e5\u8ba1\u7b97\u4e0e\u81ea\u7136\u8bed\u8a00\u7814\u7a76\u4e2d\u5fc3\u4e3b\u5bfc\u7684\u5927\u6a21\u578b\u5f00\u6e90\u4f53\u7cfb\uff0c\u6210\u4e3a\u4e2d\u6587AIGC\u548c\u8ba4\u77e5\u667a\u80fd\u7684\u57fa\u7840\u8bbe\u65bd\u3002"}
{"name":"awslabs\/dgl-lifesci","full_name":"awslabs\/dgl-lifesci","topics":["deep-learning","graph-neural-networks","dgl","cheminformatics","bioinformatics","geometric-deep-learning","drug-discovery","molecule"],"description":"Python package for graph neural networks in chemistry and biology"}
{"name":"serengil\/retinaface","full_name":"serengil\/retinaface","topics":["face-detection","retinaface","retinaface-detector","python","tensorflow","face-recognition","face-alignment","insightface","face-detector"],"description":"RetinaFace: Deep Face Detection Library for Python"}
{"name":"thudm\/p-tuning","full_name":"THUDM\/P-tuning","topics":["natural-language-processing","pre-trained-language-models","prompt-tuning","p-tuning","parameter-efficient-learning","few-shot-learning"],"description":"A novel method to tune language models. Codes and datasets for paper ``GPT understands, too''."}
{"name":"chaos-genius\/chaos_genius","full_name":"chaos-genius\/chaos_genius","topics":["anomaly-detection","business-intelligence","analytics","machine-learning","observability","rootcauseanalysis","monitoring-tool","data-visualization","dataquality","monitoring","ai","seasonality","outlier-detection","alert","alert-messages","time-series","deep-learning","python","ml","hacktoberfest"],"description":"ML powered analytics engine for outlier detection and root cause analysis."}
{"name":"nnsvs\/nnsvs","full_name":"nnsvs\/nnsvs","topics":["singing-voice-synthesis","dnn","pytorch","kiritan","singing-voice","python","deep-learning","singing-synthesis"],"description":"Neural network-based singing voice synthesis library for research"}
{"name":"waldo-vision\/optical.flow.demo","full_name":"waldo-vision\/optical.flow.demo","topics":["machine-learning","deep-learning","optical-flow","opencv","opencv-python","gaming","anticheat","fps","fps-shooter","anti-cheat"],"description":"A project that uses optical flow and machine learning to detect aimhacking in video clips."}
{"name":"liucongg\/gpt2-newstitle","full_name":"liucongg\/GPT2-NewsTitle","topics":["gpt2","torch","text-generation","chinese","transformer","news-summarization","nlp"],"description":"Chinese NewsTitle Generation Project by GPT2.\u5e26\u6709\u8d85\u7ea7\u8be6\u7ec6\u6ce8\u91ca\u7684\u4e2d\u6587GPT2\u65b0\u95fb\u6807\u9898\u751f\u6210\u9879\u76ee\u3002"}
{"name":"lucidrains\/bottleneck-transformer-pytorch","full_name":"lucidrains\/bottleneck-transformer-pytorch","topics":["artificial-intelligence","deep-learning","transformers","attention-mechanism","image-classification","vision"],"description":"Implementation of Bottleneck Transformer in Pytorch"}
{"name":"superbrucejia\/eeg-dl","full_name":"SuperBruceJia\/EEG-DL","topics":["deep-learning","eeg-classification","eeg-signals-processing","tensorflow","motor-imagery-classification","eeg-data","cnn","rnn","gcn","one-shot-learning","residual-learning","densenet","resnet","graph-convolutional-neural-networks","lstm","gru","attention-mechanism","fully-convolutional-networks","transformer","transformers"],"description":"A Deep Learning library for EEG Tasks (Signals) Classification, based on TensorFlow."}
{"name":"toshas\/torch-fidelity","full_name":"toshas\/torch-fidelity","topics":["pytorch","metrics","gan","generative-model","evaluation","inception-score","frechet-inception-distance","kernel-inception-distance","perceptual-path-length","precision","reproducibility","reproducible-research"],"description":"High-fidelity performance metrics for generative models in PyTorch"}
{"name":"njustkmg\/omml","full_name":"njustkmg\/OMML","topics":["multimodal","multimodal-learning","python","paddlepaddle","pytorch","crossmodal-retrieval","imagecaptioning","classification"],"description":"Multi-Modal learning toolkit based on PaddlePaddle and PyTorch, supporting multiple applications such as multi-modal classification, cross-modal retrieval and image caption."}
{"name":"grok-ai\/nn-template","full_name":"grok-ai\/nn-template","topics":["pytorch","template","pytorch-lightning","wandb","dvc","hydra","research","deep-learning","best-practices","reproducibility","project-structure","weights-and-biases","streamlit","mkdocs","github-actions","best-practises","pre-commit","cookiecutter"],"description":"Generic template to bootstrap your PyTorch project."}
{"name":"tensorflow\/decision-forests","full_name":"tensorflow\/decision-forests","topics":["python","machine-learning","random-forest","tensorflow","ml","decision-trees","gradient-boosting","interpretability","decision-forest","keras"],"description":"A collection of state-of-the-art algorithms for the training, serving and interpretation of Decision Forest models in Keras."}
{"name":"monologg\/koelectra","full_name":"monologg\/KoELECTRA","topics":["electra","korean-nlp","pytorch","transformers","tensorflow2","tensorflow","nlp","language-model"],"description":"Pretrained ELECTRA Model for Korean"}
{"name":"openvinotoolkit\/nncf","full_name":"openvinotoolkit\/nncf","topics":["quantization","pruning","sparsity","quantization-aware-training","mixed-precision-training","compression","semantic-segmentation","object-detection","classification","nlp","bert","mmdetection","transformers","hawq","pytorch","tensorflow"],"description":"Neural Network Compression Framework for enhanced OpenVINO\u2122 inference"}
{"name":"thudm\/p-tuning-v2","full_name":"THUDM\/P-tuning-v2","topics":["natural-language-processing","prompt-tuning","pretrained-language-model","p-tuning","parameter-efficient-learning"],"description":"An optimized deep prompt tuning strategy comparable to fine-tuning across scales and tasks"}
{"name":"lucidrains\/x-clip","full_name":"lucidrains\/x-clip","topics":["artificial-intelligence","deep-learning","contrastive-learning","zero-shot-learning","multi-modal-learning"],"description":"A concise but complete implementation of CLIP with various experimental improvements from recent papers"}
{"name":"bupt-gamma\/openhgnn","full_name":"BUPT-GAMMA\/OpenHGNN","topics":["heterogeneous","dgl","graph-neural-networks","pytorch"],"description":"This is an open-source toolkit for Heterogeneous Graph Neural Network(OpenHGNN) based on DGL."}
{"name":"peterwang512\/gansketching","full_name":"PeterWang512\/GANSketching","topics":["computer-vision","computer-graphics","deep-learning","gans","hci"],"description":"Sketch Your Own GAN: Customizing a GAN model with hand-drawn sketches."}
{"name":"salesforce\/codet5","full_name":"salesforce\/CodeT5","topics":["language-model","code-intelligence","programming-language","representation-learning","nlp"],"description":"Code for CodeT5: a new code-aware pre-trained encoder-decoder model."}
{"name":"yuval-alaluf\/stylegan3-editing","full_name":"yuval-alaluf\/stylegan3-editing","topics":["generative-adversarial-network","stylegan","stylegan3","stylegan-encoder","image-editing"],"description":"Official Implementation of \"Third Time's the Charm? Image and Video Editing with StyleGAN3\" (AIM ECCVW 2022) https:\/\/arxiv.org\/abs\/2201.13433 "}
{"name":"thunlp\/openattack","full_name":"thunlp\/OpenAttack","topics":["adversarial-attacks","nlp","adversarial-example","natural-language-processing","pytorch"],"description":"An Open-Source Package for Textual Adversarial Attack."}
{"name":"datawhalechina\/dive-into-cv-pytorch","full_name":"datawhalechina\/dive-into-cv-pytorch","topics":[],"description":"\u52a8\u624b\u5b66CV-Pytorch\u7248"}
{"name":"relevanceai\/vectorhub","full_name":"RelevanceAI\/vectorhub","topics":["python","vector","embeddings","encodings","vector-similarity","transformers","tfhub","machine-learning","deeplearning","artificial-intelligence","neural-network","deep-learning","tensorflow","pytorch","word2vec","image2vec","audio-processing","video-processing"],"description":"Vector Hub - Library for easy discovery, and consumption of State-of-the-art models to turn data into vectors. (text2vec, image2vec, video2vec, graph2vec, bert, inception, etc)"}
{"name":"youngfish42\/awesome-federated-learning-on-graph-and-tabular-data","full_name":"youngfish42\/Awesome-Federated-Learning-on-Graph-and-Tabular-Data","topics":["awesome","deep-learning","federated-learning","graph-neural-networks","machine-learning","tabular-data","federated-learning-framework","computer-vision","knowledge-graph","paper","security","natural-language-processing","information-retrieval","data-mining","database","system","artificial-intelligence","efficiency","privacy","graph"],"description":"Federated learning on graph and tabular data related papers, frameworks, and datasets."}
{"name":"zzachw\/pyhealth","full_name":"sunlabuiuc\/PyHealth","topics":["healthcare","data-mining","deep-learning","preprocessing","clinical-data","clinical-research","electronic-medical-record","medical-code","electronic-health-record"],"description":"A Python Library for Healthcare Predictive Tasks"}
{"name":"aws\/deep-learning-containers","full_name":"aws\/deep-learning-containers","topics":["aws","sagemaker","docker","tensorflow","tensorflow2","mxnet","pytorch"],"description":"AWS Deep Learning Containers (DLCs) are a set of Docker images for training and serving models in TensorFlow, TensorFlow 2, PyTorch, and MXNet."}
{"name":"megvii-basedetection\/cvpods","full_name":"Megvii-BaseDetection\/cvpods","topics":["pytorch","detection","3d","classification","keypoints","self-supervised-learning","segmentation","research","cvpods","computer-vision"],"description":"All-in-one Toolbox for Computer Vision Research."}
{"name":"opendilab\/di-drive","full_name":"opendilab\/DI-drive","topics":["reinforcement-learning","imitation-learning","autodrive","carla","pytorch","autonomous-driving","metadrive"],"description":"Decision Intelligence Platform for Autonomous Driving simulation."}
{"name":"zuruoke\/watermark-removal","full_name":"zuruoke\/watermark-removal","topics":["tensorflow","deep-learning","machine-learning","python","watermark-image"],"description":"a machine learning image inpainting task that instinctively removes watermarks from image indistinguishable from the ground truth image "}
{"name":"acbull\/pyhgt","full_name":"UCLA-DM\/pyHGT","topics":["graph-neural-networks","heterogeneous-network","transformer","network-embedding","graph-representation-learning"],"description":"Code for \"Heterogeneous Graph Transformer\" (WWW'20), which is based on pytorch_geometric"}
{"name":"bobo-y\/flexible-yolov5","full_name":"Bobo-y\/flexible-yolov5","topics":["yolov5","resnet","moblienet","backbone","neck","se","cbam","efficientnet","pytorch","shufflenet","hrnet","dcnv2","tensorrt","object-detection","swin-transformer","gcn","yolov3"],"description":"More readable and flexible yolov5 with more backbone(gcn, resnet, shufflenet, moblienet, efficientnet, hrnet, swin-transformer, etc) and (cbam\uff0cdcn and so on), and tensorrt"}
{"name":"mit-han-lab\/lite-transformer","full_name":"mit-han-lab\/lite-transformer","topics":["nlp","pytorch","transformer"],"description":"[ICLR 2020] Lite Transformer with Long-Short Range Attention"}
{"name":"yura52\/rtdl","full_name":"Yura52\/rtdl","topics":["python","machine-learning","deep-learning","pytorch","research","ai","artificial-intelligence","tabular","neural-network","papers","tabular-data"],"description":"Research on Tabular Deep Learning (Python package & papers)"}
{"name":"positive666\/yolov5_research","full_name":"positive666\/yolo_research","topics":["yolov5","deepstream","pytorch","object-detection","attention-mechanism","swintransformer","custom-networ","yolov7"],"description":"based on yolov5-high-level project (detect\\pose\\classify\\segment\\):include yolov7 core ,improvement research based on yolov5,SwintransformV2 and Attention Series. training skills, business customization, engineering deployment C"}
{"name":"acids-ircam\/rave","full_name":"acids-ircam\/RAVE","topics":["deep-learning","neural-network","audio","generative-model","ai"],"description":"Official implementation of the RAVE model: a Realtime Audio Variational autoEncoder"}
{"name":"lhotse-speech\/lhotse","full_name":"lhotse-speech\/lhotse","topics":["speech","audio","kaldi","machine-learning","ai","deep-learning","pytorch","data","python","speech-recognition"],"description":"Tools for handling speech data in machine learning projects."}
{"name":"peterouzh\/cips-3d","full_name":"PeterouZh\/CIPS-3D","topics":["generative-adversarial-network","nerf","pytorch"],"description":"3D-aware GANs based on NeRF (arXiv). "}
{"name":"pytorchlightning\/lightning-transformers","full_name":"Lightning-AI\/lightning-transformers","topics":["pytorch","pytorch-lightning","transformers","hydra"],"description":"Flexible components pairing \ud83e\udd17 Transformers with :zap: Pytorch Lightning"}
{"name":"lucastabelini\/laneatt","full_name":"lucastabelini\/LaneATT","topics":["lane-detection","deep-learning","computer-vision","pytorch"],"description":"Code for the paper entitled \"Keep your Eyes on the Lane: Real-time Attention-guided Lane Detection\" (CVPR 2021)"}
{"name":"jeya-maria-jose\/medical-transformer","full_name":"jeya-maria-jose\/Medical-Transformer","topics":["pytorch","segmentation","medical-imaging","medical-image-analysis","deep-learning","transformers","attention","transformer"],"description":"Official Pytorch Code for \"Medical Transformer: Gated Axial-Attention for Medical Image Segmentation\" - MICCAI 2021"}
{"name":"bubbliiiing\/yolov4-keras","full_name":"bubbliiiing\/yolov4-keras","topics":[],"description":"\u8fd9\u662f\u4e00\u4e2aYoloV4-keras\u7684\u6e90\u7801\uff0c\u53ef\u4ee5\u7528\u4e8e\u8bad\u7ec3\u81ea\u5df1\u7684\u6a21\u578b\u3002"}
{"name":"mind-lab\/octis","full_name":"MIND-Lab\/OCTIS","topics":["topic-modeling","latent-dirichlet-allocation","latent-semantic-analysis","evaluation-metrics","natural-language-processing","non-negative-matrix-factorization","neural-topic-models","bayesian-optimization","hyperparameter-optimization","hyperparameter-tuning","hyperparameter-search","topic-models","nlp","nlproc","nlp-library"],"description":"OCTIS: Comparing Topic Models is Simple! A python package to optimize and evaluate topic models (accepted at EACL2021 demo track)"}
{"name":"davidbau\/rewriting","full_name":"davidbau\/rewriting","topics":["vision","machine-learning","graphics","hci","gans","deep-learning","research"],"description":"Rewriting a Deep Generative Model, ECCV 2020 (oral).  Interactive tool to directly edit the rules of a GAN to synthesize scenes with objects added, removed, or altered.  Change StyleGANv2 to make extravagant eyebrows, or horses wearing hats."}
{"name":"yuangongnd\/ast","full_name":"YuanGongND\/ast","topics":["pytorch","audio-classification","deep-learning","audio","representation-learning","keyword-spotting","speech-commands","speech-classification"],"description":"Code for the Interspeech 2021 paper \"AST: Audio Spectrogram Transformer\"."}
{"name":"neuspell\/neuspell","full_name":"neuspell\/neuspell","topics":["spelling-correction","spell-checkers","spellcheck","neural-models","neural-spell-check","spell-checker","nlp","spell-correction","dataset","spell-correction-datasets","ngrams"],"description":"NeuSpell: A Neural Spelling Correction Toolkit"}
{"name":"bubbliiiing\/ssd-pytorch","full_name":"bubbliiiing\/ssd-pytorch","topics":[],"description":"\u8fd9\u662f\u4e00\u4e2assd-pytorch\u7684\u6e90\u7801\uff0c\u53ef\u4ee5\u7528\u4e8e\u8bad\u7ec3\u81ea\u5df1\u7684\u6a21\u578b\u3002"}
{"name":"nvidia\/nvtabular","full_name":"NVIDIA-Merlin\/NVTabular","topics":["deep-learning","feature-engineering","feature-selection","gpu","machine-learning","nvidia","preprocessing","recommendation-system","recommender-system"],"description":"NVTabular is a feature engineering and preprocessing library for tabular data designed to quickly and easily manipulate terabyte scale datasets used to train deep learning based recommender systems."}
{"name":"lucidrains\/timesformer-pytorch","full_name":"lucidrains\/TimeSformer-pytorch","topics":["artificial-intelligence","deep-learning","attention-mechanism","transformers","video-classification"],"description":"Implementation of TimeSformer from Facebook AI, a pure attention-based solution for video classification"}
{"name":"xingangpan\/gan2shape","full_name":"XingangPan\/GAN2Shape","topics":["generative-adversarial-network","deep-learning","3d-reconstruction","gan","inverse-graphics"],"description":"Code for GAN2Shape (ICLR2021 oral)"}
{"name":"microsoft\/innereye-deeplearning","full_name":"microsoft\/InnerEye-DeepLearning","topics":["azure","medical-imaging","healthcare","deep-learning"],"description":"Medical Imaging Deep Learning library to train and deploy 3D segmentation models on Azure Machine Learning"}
{"name":"frotms\/paddleocr2pytorch","full_name":"frotms\/PaddleOCR2Pytorch","topics":["paddleocr","pytorch","ocr","paddlepaddle","multilingual-models","db","crnn","pytorchocr"],"description":"PaddleOCR inference in PyTorch. Converted from [PaddleOCR](https:\/\/github.com\/PaddlePaddle\/PaddleOCR)"}
{"name":"patrick-kidger\/neuralcde","full_name":"patrick-kidger\/NeuralCDE","topics":["machine-learning","rough-paths","neural-differential-equations","time-series","controlled-differential-equations","deep-learning","deep-neural-networks","pytorch","dynamical-systems","differential-equations","neural-networks"],"description":"Code for \"Neural Controlled Differential Equations for Irregular Time Series\" (Neurips 2020 Spotlight)"}
{"name":"raminmh\/cfc","full_name":"raminmh\/CfC","topics":["deep-learning","neural-ode","pytorch","recurrent-neural-networks","sequence-models","tensorflow"],"description":"Closed-form Continuous-time Neural Networks"}
{"name":"patrickhua\/simsiam","full_name":"PatrickHua\/SimSiam","topics":[],"description":"A pytorch implementation for paper 'Exploring Simple Siamese Representation Learning'"}
{"name":"rentruewang\/learning-machine","full_name":"rentruewang\/learning-machine","topics":["machine-learning","deep-learning","handbooks"],"description":"A handbook for ML built on answers."}
{"name":"chaofengc\/iqa-pytorch","full_name":"chaofengc\/IQA-PyTorch","topics":["iqa","image-quality-assessment","blind-image-quality-assessment","pytorch","python3","pytorch-implementation"],"description":"PyTorch Toolbox for Image Quality Assessment, including LPIPS, FID, NIQE, NRQM(Ma), MUSIQ, NIMA, DBCNN, WaDIQaM, BRISQUE, PI and more..."}
{"name":"datacanvasio\/deeptables","full_name":"DataCanvasIO\/DeepTables","topics":["tabular-data","deep-learning","deepfm","fm","afm","dcn-model","ctr-prediction","pnn","xdeepfm","wide-and-deep","autoint","fgcnn","fibinet","factorization-machines","structured-data"],"description":"DeepTables:  Deep-learning Toolkit for Tabular data"}
{"name":"microsoft\/semi-supervised-learning","full_name":"microsoft\/Semi-supervised-learning","topics":["classification","semi-supervised-learning","transformer","computer-vision","deep-learning","machine-learning","natural-language-processing","pytorch","audio-classification","low-resource","semisupervised-learning"],"description":"A Unified Semi-Supervised Learning Codebase (NeurIPS'22)"}
{"name":"wjf5203\/vnext","full_name":"wjf5203\/VNext","topics":["instance-segmentation","object-detection","transformer","video-instance-segmentation","tracking"],"description":"Next-generation Video instance recognition framework on top of Detectron2 which supports SeqFormer(ECCV Oral) and IDOL(ECCV Oral))"}
{"name":"swz30\/mirnet","full_name":"swz30\/MIRNet","topics":["image-denoising","super-resolution","image-enhancement","image-restoration","low-level-vision","computer-vision","multi-resolution-streams","attention-mechanism","pytorch","eccv2020"],"description":"[ECCV 2020] Learning Enriched Features for Real Image Restoration and Enhancement. SOTA results for image denoising, super-resolution, and image enhancement."}
{"name":"zyddnys\/manga-image-translator","full_name":"zyddnys\/manga-image-translator","topics":["manga","anime","ocr","deep-learning","image-processing","auto-translation","machine-translation","pytorch-implementation","text-detection","text-detection-recognition","chinese-translation","japanese-translations","neural-network","inpainting","transformer"],"description":"Translate manga\/image \u4e00\u952e\u7ffb\u8bd1\u5404\u7c7b\u56fe\u7247\u5185\u6587\u5b57 https:\/\/touhou.ai\/imgtrans\/"}
{"name":"alpa-projects\/alpa","full_name":"alpa-projects\/alpa","topics":["deep-learning","machine-learning","compiler","distributed-training","high-performance-computing","alpa","jax","distributed-computing","llm","auto-parallelization"],"description":"Training and serving large-scale neural networks"}
{"name":"ranahanocka\/point2mesh","full_name":"ranahanocka\/point2mesh","topics":["3d-graphics","deep-learning","mesh-processing","pointcloud","pytorch","reconstruction"],"description":"Reconstruct Watertight Meshes from Point Clouds [SIGGRAPH 2020]"}
{"name":"rinnakk\/japanese-pretrained-models","full_name":"rinnakk\/japanese-pretrained-models","topics":["nlp","japanese","gpt2","roberta"],"description":"Code for producing Japanese pretrained models provided by rinna Co., Ltd."}
{"name":"paddlepaddle\/rocketqa","full_name":"PaddlePaddle\/RocketQA","topics":["question-answering","nlp","information-retrieval","dense-retrieval"],"description":"\ud83d\ude80 RocketQA, dense retrieval for information retrieval and question answering, including both Chinese and English state-of-the-art models. "}
{"name":"princeton-nlp\/densephrases","full_name":"princeton-nlp\/DensePhrases","topics":["nlp","open-domain-qa","slot-filling","knowledge-base","information-retrieval","passage-retrieval"],"description":"ACL'2021: Learning Dense Representations of Phrases at Scale; EMNLP'2021: Phrase Retrieval Learns Passage Retrieval, Too https:\/\/arxiv.org\/abs\/2012.12624"}
{"name":"cure-lab\/ltsf-linear","full_name":"cure-lab\/LTSF-Linear","topics":["deep-learning","forecasting","forecasting-model","linear-models","pytorch","time-series","time-series-forecasting","time-series-prediction","aaai","aaai2023"],"description":"This is the official implementation for AAAI-23 Oral paper \"Are Transformers Effective for Time Series Forecasting?\""}
{"name":"sforaidl\/kd_lib","full_name":"SforAiDl\/KD_Lib","topics":["knowledge-distillation","model-compression","pruning","quantization","pytorch","deep-learning-library","machine-learning","data-science","benchmarking","algorithm-implementations"],"description":"A Pytorch Knowledge Distillation library for benchmarking and extending works in the domains of Knowledge Distillation, Pruning, and Quantization."}
{"name":"mahmoodlab\/clam","full_name":"mahmoodlab\/CLAM","topics":["histopathology","pathology","weakly-supervised-learning","whole-slide-imaging","data-efficient","computational-pathology","mahmoodlab","bioimage-informatics","deep-learning","tcga-data","camelyon16","camelyon17","clam"],"description":"Data-efficient and weakly supervised computational pathology on whole slide images - Nature Biomedical Engineering"}
{"name":"google-research\/long-range-arena","full_name":"google-research\/long-range-arena","topics":["transformers","nlp","deep-learning","attention","jax","flax"],"description":"Long Range Arena for Benchmarking Efficient Transformers"}
{"name":"allenai\/allennlp-models","full_name":"allenai\/allennlp-models","topics":["nlp","allennlp","pytorch"],"description":"Officially supported AllenNLP models"}
{"name":"open-mmlab\/mmfewshot","full_name":"open-mmlab\/mmfewshot","topics":["pytorch","openmmlab","few-shot-learning"],"description":"OpenMMLab FewShot Learning Toolbox and Benchmark"}
{"name":"eloialonso\/iris","full_name":"eloialonso\/iris","topics":["deep-learning","machine-learning","reinforcement-learning","artificial-intelligence","atari","world-models","research","transformers"],"description":"Transformers are Sample Efficient World Models"}
{"name":"mims-harvard\/tdc","full_name":"mims-harvard\/TDC","topics":["machine-learning","therapeutics","drug-discovery","datasets","biology","chemistry","biomedicine","bioinformatics","cheminformatics","deep-learning","benchmarks","artificial-intelligence","precision-medicine"],"description":"Therapeutics Data Commons: Artificial Intelligence Foundation for Therapeutic Science"}
{"name":"jeshraghian\/snntorch","full_name":"jeshraghian\/snntorch","topics":["pytorch","spiking-neural-networks","neuron-models","python","neural-networks","machine-learning","neuroscience","snn","spiking","spike"],"description":"Deep and online learning with spiking neural networks in Python"}
{"name":"cvxgrp\/pymde","full_name":"cvxgrp\/pymde","topics":["embedding","visualization","feature-vectors","machine-learning","dimensionality-reduction","graph-embedding","pytorch","cuda","gpu"],"description":"Minimum-distortion embedding with PyTorch"}
{"name":"deepregnet\/deepreg","full_name":"DeepRegNet\/DeepReg","topics":["image-registration","medical-image-registration","image-fusion","deep-learning","deep-neural-networks","neural-network","convolutional-neural-networks","tensorflow2","deepreg"],"description":"Medical image registration using deep learning"}
{"name":"lucidrains\/palm-pytorch","full_name":"lucidrains\/PaLM-pytorch","topics":["deep-learning","transformers","attention-mechanism","artificial-general-intelligence"],"description":"Implementation of the specific Transformer architecture from PaLM - Scaling Language Modeling with Pathways"}
{"name":"ika-rwth-aachen\/cam2bev","full_name":"ika-rwth-aachen\/Cam2BEV","topics":["computer-vision","machine-learning","deep-learning","autonomous-vehicles","ipm","segmentation","sim2real","simulation","birds-eye-view"],"description":"TensorFlow Implementation for Computing a Semantically Segmented Bird's Eye View (BEV) Image Given the Images of Multiple Vehicle-Mounted Cameras."}
{"name":"alvinwan\/neural-backed-decision-trees","full_name":"alvinwan\/neural-backed-decision-trees","topics":["decision-trees","neural-networks","image-classification","explainability","tiny-imagenet","cifar10","cifar100","interpretability","imagenet","neural-backed-decision-trees","pretrained-weights","pretrained-models","pytorch"],"description":"Making decision trees competitive with neural networks on CIFAR10, CIFAR100, TinyImagenet200, Imagenet"}
{"name":"project-splinter\/monoport","full_name":"Project-Splinter\/MonoPort","topics":["deep-learning","machine-learning","volumetric","3d-reconstruction","3d-vision","siggraph","monocular","performance-capture","eccv2020","virtual-reality","pifu","clothed-humans","reconstruction","pytorch","pifuhd","real-time","teleportation","virtual-conference","teleportvr","sdf"],"description":"Volumetric Human Teleportation (SIGGRAPH 2020 Real-Time Live) Monocular Real-Time Volumetric Performance Capture(ECCV 2020)"}
{"name":"ukplab\/beir","full_name":"beir-cellar\/beir","topics":["nlp","information-retrieval","bert","benchmark","sentence-transformers","question-generation","retrieval","passage-retrieval","elasticsearch","dpr","sbert","retrieval-models","dataset","ance","colbert","zero-shot-retrieval","use-qa","deep-learning","pytorch"],"description":"A Heterogeneous Benchmark for Information Retrieval. Easy to use, evaluate your models across 15+ diverse IR datasets."}
{"name":"brummi\/monorec","full_name":"Brummi\/MonoRec","topics":["depth-estimation","deep-learning","unsupervised-learning","cvpr2021"],"description":"Official implementation of the paper: MonoRec: Semi-Supervised Dense Reconstruction in Dynamic Environments from a Single Moving Camera (CVPR 2021)"}
{"name":"lucidrains\/audiolm-pytorch","full_name":"lucidrains\/audiolm-pytorch","topics":["artificial-intelligence","attention-mechanisms","audio-synthesis","deep-learning","transformers"],"description":"Implementation of AudioLM, a SOTA Language Modeling Approach to Audio Generation out of Google Research, in Pytorch"}
{"name":"nianticlabs\/manydepth","full_name":"nianticlabs\/manydepth","topics":["kitti","cityscapes","depths","monodepth","depth-estimation","pytorch","cvpr2021","cvpr","self-supervised-learning","self-supervised","cost-volumes","estimating-depths"],"description":"[CVPR 2021] Self-supervised depth estimation from short sequences"}
{"name":"spijkervet\/simclr","full_name":"Spijkervet\/SimCLR","topics":["simclr","pytorch","contrastive-learning","unsupervised-learning","representation-learning"],"description":"PyTorch implementation of SimCLR: A Simple Framework for Contrastive Learning of Visual Representations by T. Chen et al."}
{"name":"yzhao062\/pyhealth","full_name":"sunlabuiuc\/PyHealth","topics":["healthcare","data-mining","deep-learning","preprocessing","clinical-data","clinical-research","electronic-medical-record","medical-code","electronic-health-record"],"description":"A Python Library for Healthcare Predictive Tasks"}
{"name":"yatingmusic\/remi","full_name":"YatingMusic\/remi","topics":["music-generation","transformer","tensorflow"],"description":"\"Pop Music Transformer: Beat-based Modeling and Generation of Expressive Pop Piano Compositions\", ACM Multimedia 2020"}
{"name":"libcity\/bigscity-libcity","full_name":"LibCity\/Bigscity-LibCity","topics":["traffic","traffic-prediction","traffic-flow-prediction","traffic-speed-prediction","on-demand-service","trajectory-prediction","toolkit","deep-learning","spatio-temporal-prediction","spatio-temporal","pytorch-implementation","traffic-forecasting","map-matching","representation-learning","estimated-time-of-arrival","traffic-accident-prediction","od-matrix","time-series-prediction","eta","libcity"],"description":"LibCity: An Open Library for Urban Spatio-temporal Data Mining"}
{"name":"maudzung\/ttnet-real-time-analysis-system-for-table-tennis-pytorch","full_name":"maudzung\/TTNet-Real-time-Analysis-System-for-Table-Tennis-Pytorch","topics":["ttnet","pytorch","tabletennis","sport-analytics","multi-task-learning","dice-loss","distributed-data-parallel","table-tennis","segmentation","spatial-video-analysis","event-spotting","event-detection"],"description":"Unofficial implementation of \"TTNet: Real-time temporal and spatial video analysis of table tennis\" (CVPR 2020)"}
{"name":"intel-isl\/open3d-ml","full_name":"isl-org\/Open3D-ML","topics":["3d-perception","datasets","pretrained-models","lidar","rgbd","tensorflow","pytorch","visualization","semantic-segmentation","object-detection","3d-object-detection"],"description":"An extension of Open3D to address 3D Machine Learning tasks"}
{"name":"google-research\/bigbird","full_name":"google-research\/bigbird","topics":["transformer","bert","nlp","longer-sequences","deep-learning"],"description":"Transformers for Longer Sequences"}
{"name":"poets-ai\/elegy","full_name":"poets-ai\/elegy","topics":["deep-learning","jax"],"description":"A High Level API for Deep Learning in JAX"}
{"name":"prithivirajdamodaran\/styleformer","full_name":"PrithivirajDamodaran\/Styleformer","topics":["style-transfer","slang","informal-sentences","formal-languages","nlp","active","passive","text-style-transfer","text-style","text-style-transfer-benchmark"],"description":"A Neural Language Style Transfer framework to transfer natural language text smoothly between fine-grained language styles like formal\/casual, active\/passive, and many more. Created by Prithiviraj Damodaran. Open to pull requests and other forms of collaboration."}
{"name":"underneathall\/pinferencia","full_name":"underneathall\/pinferencia","topics":["ai","inference-server","predict","inference","deep-learning","modelserver","machine-learning","python","serving","model-deployment","huggingface","pytorch","tensorflow","transformers","artificial-intelligence","data-science","model-serving","computer-vision","nlp","paddlepaddle"],"description":"Python + Inference - Model Deployment library in Python. Simplest model inference server ever."}
{"name":"alibaba-miil\/tresnet","full_name":"Alibaba-MIIL\/TResNet","topics":["tresnet","multi-label-classification","accuracy","architecture","imagenet"],"description":"Official Pytorch Implementation of \"TResNet: High-Performance GPU-Dedicated Architecture\" (WACV 2021)"}
{"name":"hkchengrex\/stcn","full_name":"hkchengrex\/STCN","topics":["computer-vision","deep-learning","pytorch","segmentation","video-segmentation","video-object-segmentation","neurips-2021"],"description":"[NeurIPS 2021] Rethinking Space-Time Networks with Improved Memory Coverage for Efficient Video Object Segmentation"}
{"name":"mgarcher\/text_select_captcha","full_name":"MgArcher\/Text_select_captcha","topics":[],"description":"pytorch\u5b9e\u73b0\u6587\u5b57\u70b9\u9009\u3001\u9009\u5b57\u3001\u9009\u62e9\u6587\u5b57\u9a8c\u8bc1\u7801\u8bc6\u522b"}
{"name":"lmnt-com\/diffwave","full_name":"lmnt-com\/diffwave","topics":["machine-learning","text-to-speech","neural-network","paper","pytorch","speech-synthesis","diffwave","vocoder","speech","pretrained-models","tts","deep-learning"],"description":"DiffWave is a fast, high-quality neural vocoder and waveform synthesizer."}
{"name":"bubbliiiing\/yolov5-pytorch","full_name":"bubbliiiing\/yolov5-pytorch","topics":[],"description":"\u8fd9\u662f\u4e00\u4e2aYoloV5-pytorch\u7684\u6e90\u7801\uff0c\u53ef\u4ee5\u7528\u4e8e\u8bad\u7ec3\u81ea\u5df1\u7684\u6a21\u578b\u3002"}
{"name":"kennymckormick\/pyskl","full_name":"kennymckormick\/pyskl","topics":["action-recognition","deep-learning","skeleton-based-action-recognition","stgcn","posec3d"],"description":"A toolbox for skeleton-based action recognition."}
{"name":"chenrocks\/uniter","full_name":"ChenRocks\/UNITER","topics":["transformers","pre-training","vision-and-language","pytorch"],"description":"Research code for ECCV 2020 paper \"UNITER: UNiversal Image-TExt Representation Learning\""}
{"name":"scalaconsultants\/aspect-based-sentiment-analysis","full_name":"ScalaConsultants\/Aspect-Based-Sentiment-Analysis","topics":["aspect-based-sentiment-analysis","tensorflow","sentiment-analysis","machine-learning","interpretability","distill","transformers","transformer-models","bert-embeddings","deep-learning","explainable-ml","explainable-ai"],"description":"\ud83d\udcad Aspect-Based-Sentiment-Analysis: Transformer & Explainable ML (TensorFlow)"}
{"name":"clovaai\/rexnet","full_name":"clovaai\/rexnet","topics":["rexnet","deep-learning","image-classification","object-detection","transfer-learning","pytorch","imagenet","pretrained-model"],"description":"Official Pytorch implementation of ReXNet (Rank eXpansion Network) with pretrained models"}
{"name":"lucidrains\/nuwa-pytorch","full_name":"lucidrains\/nuwa-pytorch","topics":["artificial-intelligence","deep-learning","transformers","attention-mechanism","text-to-video","text-to-audio"],"description":"Implementation of N\u00dcWA, state of the art attention network for text to video synthesis, in Pytorch"}
{"name":"ermongroup\/sdedit","full_name":"ermongroup\/SDEdit","topics":["pytorch","score-matching","image-editing","image-generation","controllable-generation","image-manipulation"],"description":"PyTorch implementation for SDEdit: Image Synthesis and Editing with Stochastic Differential Equations"}
{"name":"theaiguyscode\/yolov4-custom-functions","full_name":"theAIGuysCode\/yolov4-custom-functions","topics":["yolov4","yolov3","object-detection","tensorflow","tflite","custom-yolov4","yolov4-tiny","tf2","tensorrt"],"description":"A Wide Range of Custom Functions for YOLOv4, YOLOv4-tiny, YOLOv3, and YOLOv3-tiny Implemented in TensorFlow, TFLite, and TensorRT."}
{"name":"njustkmg\/paddlemm","full_name":"njustkmg\/OMML","topics":["multimodal","multimodal-learning","python","paddlepaddle","pytorch","crossmodal-retrieval","imagecaptioning","classification"],"description":"Multi-Modal learning toolkit based on PaddlePaddle and PyTorch, supporting multiple applications such as multi-modal classification, cross-modal retrieval and image caption."}
{"name":"lucidrains\/retro-pytorch","full_name":"lucidrains\/RETRO-pytorch","topics":["artificial-intelligence","deep-learning","transformers","attention-mechanism","retrieval"],"description":"Implementation of RETRO, Deepmind's Retrieval based Attention net, in Pytorch"}
{"name":"qdrant\/quaterion","full_name":"qdrant\/quaterion","topics":["contrastive-learning","cosine-similarity","deep-learning","knn","machine-learning","metric-learning","nearest-neighbor-search","python","pytorch","pytorch-lightning","similarity-learning","similarity-search"],"description":"Blazing fast framework for fine-tuning similarity learning models"}
{"name":"mit-han-lab\/spvnas","full_name":"mit-han-lab\/spvnas","topics":["computer-vision","deep-learning","pytorch","point-cloud","lidar","architecture-search","efficiency","3d-deep-learning","semantickitti"],"description":"[ECCV 2020] Searching Efficient 3D Architectures with Sparse Point-Voxel Convolution"}
{"name":"lucidrains\/point-transformer-pytorch","full_name":"lucidrains\/point-transformer-pytorch","topics":["artificial-intelligence","deep-learning","attention-mechanism","point-cloud"],"description":"Implementation of the Point Transformer layer, in Pytorch"}
{"name":"r9y9\/nnsvs","full_name":"nnsvs\/nnsvs","topics":["singing-voice-synthesis","dnn","pytorch","kiritan","singing-voice","python","deep-learning","singing-synthesis"],"description":"Neural network-based singing voice synthesis library for research"}
{"name":"tensorspeech\/tensorflowasr","full_name":"TensorSpeech\/TensorFlowASR","topics":["automatic-speech-recognition","deepspeech2","speech-recognition","speech-to-text","tensorflow2","rnn-transducer","conformer","tflite","tflite-model","tflite-convertion","ctc","tensorflow","subword-speech-recognition","end2end","contextnet","jasper","streaming-transducer"],"description":":zap: TensorFlowASR: Almost State-of-the-art Automatic Speech Recognition in Tensorflow 2. Supported languages that can use characters or subwords"}
{"name":"endlesssora\/focal-frequency-loss","full_name":"EndlessSora\/focal-frequency-loss","topics":["generative-models","loss-function","frequency-domain","frequency-analysis","complementary","autoencoder","variational-autoencoder","gan","pix2pix","spade","loss","image-reconstruction","image-synthesis","stylegan2","iccv2021","generative-adversarial-network","generic","image-generation"],"description":"[ICCV 2021] Focal Frequency Loss for Image Reconstruction and Synthesis"}
{"name":"yingkaisha\/keras-unet-collection","full_name":"yingkaisha\/keras-unet-collection","topics":["unet","attention-unet","unet-plusplus","r2u-net","resunet","u2net","unet-threeplus","pypi","tensorflow","vnet","backbone","imagenet","transunet","swinunet"],"description":"The Tensorflow, Keras implementation of U-net, V-net, U-net++, UNET 3+, Attention U-net, R2U-net, ResUnet-a, U^2-Net, TransUNET, and Swin-UNET with optional ImageNet-trained backbones."}
{"name":"fatescript\/centernet-better","full_name":"FateScript\/CenterNet-better","topics":["deep-learning","computer-vision","object-detection"],"description":"An easy to understand and better performance version of CenterNet"}
{"name":"dvlab-research\/entity","full_name":"dvlab-research\/Entity","topics":["image-segmentation","segmentation","pytorch","instance-segmentation","panoptic-segmentation","semantic-segmentation","object-detection","fcos","condinst","detectron2","pretrained-weights","pretrained-models","computer-vision","deep-learning","cnn","pretraining"],"description":" EntitySeg Toolbox: Towards Open-World and High-Quality Image Segmentation"}
{"name":"megvii-research\/mdistiller","full_name":"megvii-research\/mdistiller","topics":["pytorch","knowledge-distillation","computer-vision","deep-learning","cifar","coco","cvpr2022","imagenet"],"description":"The official implementation of [CVPR2022] Decoupled Knowledge Distillation https:\/\/arxiv.org\/abs\/2203.08679"}
{"name":"raminmh\/liquid_time_constant_networks","full_name":"raminmh\/liquid_time_constant_networks","topics":["deep-learning","liquid-neural-networks","recurrent-neural-networks","sequence-modeling","state-space-models","time-series"],"description":"Code Repository for Liquid Time-Constant Networks (LTCs)"}
{"name":"lezcano\/geotorch","full_name":"lezcano\/geotorch","topics":["pytorch","constrained-optimization","manifold-optimization","orthogonality","invertible-neural-networks","positive-definite-matrices","positive-semi-definite","low-rank"],"description":"Constrained optimization toolkit for PyTorch"}
{"name":"yarkable\/awesome-computer-vision-paper-list","full_name":"yarkable\/Awesome-Computer-Vision-Paper-List","topics":["cvpr","iccv","nips","computer-vision","artificial-intelligence","paper","eccv","neurips","icml","iclr","ijcai","deep-learning","acmmm","aaai","wacv","bmvc","accv2020","accv2018","machine-learning","awesome-list"],"description":"This repository contains all the papers accepted in top conference of computer vision, with convenience to search related papers."}
{"name":"booknlp\/booknlp","full_name":"booknlp\/booknlp","topics":["natural-language-processing","cultural-analytics","digital-humanities","computational-social-science"],"description":"BookNLP, a natural language processing pipeline for books"}
{"name":"tusen-ai\/sst","full_name":"tusen-ai\/SST","topics":["pytorch","3d-object-detection","autonomous-driving"],"description":"Codes for \u201cFully Sparse 3D Object Detection\u201d & \u201cEmbracing Single Stride 3D Object Detector with Sparse Transformer\u201d"}
{"name":"jina-ai\/examples","full_name":"jina-ai\/examples","topics":["jina","examples","tutorials","onboarding","neural-search","python","deep-learning","semantic-search","nlp"],"description":"Jina examples and demos to help you get started"}
{"name":"hpcaitech\/fastfold","full_name":"hpcaitech\/FastFold","topics":["alphafold2","protein-structure","pytorch","gpu","evoformer","parallelism","protein-folding","cuda","habana-gaudi"],"description":"Optimizing AlphaFold Training and Inference on GPU Clusters"}
{"name":"fantasy-studio\/paint-by-example","full_name":"Fantasy-Studio\/Paint-by-Example","topics":["computer-vision","deep-learning","diffusion-models","image-editing","image-generation","image-manipulation","pytorch","stable-diffusion","paint-by-example"],"description":"Paint by Example: Exemplar-based Image Editing with Diffusion Models"}
{"name":"georgian-io\/multimodal-toolkit","full_name":"georgian-io\/Multimodal-Toolkit","topics":["huggingface-transformers","transformer","natural-language-processing","tabular-data","multimodal-learning"],"description":"Multimodal model for text and tabular data with HuggingFace transformers as building block for text data"}
{"name":"braindecode\/braindecode","full_name":"braindecode\/braindecode","topics":["deep-learning","eeg","electroencephalogram","electroencephalography","neuroimaging","neuroscience","python","pytorch","meg","magnetoencephalography","electrocorticography","ecog"],"description":"Deep learning software to decode EEG, ECG or MEG signals"}
{"name":"archinetai\/audio-diffusion-pytorch","full_name":"archinetai\/audio-diffusion-pytorch","topics":["artificial-intelligence","audio-generation","deep-learning","denoising-diffusion"],"description":"Audio generation using diffusion models, in PyTorch."}
{"name":"menyifang\/adgan","full_name":"menyifang\/ADGAN","topics":["pose-transfer","generative-adversarial-network","gan","pytorch","virtual-try-on","image-synthesis"],"description":"The Implementation of paper \"Controllable Person Image Synthesis with Attribute-Decomposed GAN\" CVPR 2020 (Oral); Pose and Appearance Attributes Transfer;"}
{"name":"alibaba\/tinyneuralnetwork","full_name":"alibaba\/TinyNeuralNetwork","topics":["pytorch","deep-learning","model-compression","pruning","model-converter","quantization-aware-training","deep-neural-networks","post-training-quantization"],"description":"TinyNeuralNetwork is an efficient and easy-to-use deep learning model compression framework."}
{"name":"syscv\/transfiner","full_name":"SysCV\/transfiner","topics":["cvpr","cvpr2022","efficient-transformers","high-quality","instance-segmentation","transformer"],"description":"Mask Transfiner for High-Quality Instance Segmentation, CVPR 2022"}
{"name":"prbonn\/lidar-mos","full_name":"PRBonn\/LiDAR-MOS","topics":["lidar","point-cloud","segmentation","slam","mapping","deep-learning","deep-neural-networks","moving-object-segmentation","lidar-slam","dynamic-slam","motion-detection"],"description":"(LMNet) Moving Object Segmentation in 3D LiDAR Data: A Learning-based Approach Exploiting Sequential Data (RAL\/IROS 2021)"}
{"name":"hrnet\/hrformer","full_name":"HRNet\/HRFormer","topics":["vision","transformer","segmentation","pose-estimation","classification","hrnet"],"description":"This is an official implementation of our NeurIPS 2021 paper \"HRFormer: High-Resolution Transformer for Dense Prediction\"."}
{"name":"zhendongwang6\/uformer","full_name":"ZhendongWang6\/Uformer","topics":["deep-learning","pytorch","image-restoration","image-denoising","image-deblurring","image-deraining","image-demoireing"],"description":"[CVPR 2022] Official repository for the paper \"Uformer: A General U-Shaped Transformer for Image Restoration\"."}
{"name":"minqi824\/adbench","full_name":"Minqi824\/ADBench","topics":["anomaly-detection","benchmark","data-mining","deep-learning","machine-learning","outlier-detection","semi-supervised-learning","supervised-learning","unsupervised-learning","data-sicence","ensemble-learning","neural-networks","python"],"description":"Official Implement of \"ADBench: Anomaly Detection Benchmark\"."}
{"name":"koaning\/whatlies","full_name":"koaning\/whatlies","topics":["nlp","embeddings","visualisations"],"description":"Toolkit to help understand \"what lies\" in word embeddings. Also benchmarking! "}
{"name":"nvlabs\/fan","full_name":"NVlabs\/FAN","topics":["backbone","deep-learning","image-classification","object-detection","vision-transformers","visual-recognition","semantic-segmentation","corruption","imagenet","out-of-distribution","pre-train","cityscapes","coco","information-bottleneck","self-attention","visual-grouping"],"description":"Official PyTorch implementation of Fully Attentional Networks"}
{"name":"xwying\/torchshow","full_name":"xwying\/torchshow","topics":["visualization","tensor","image-tensor","notebook","pytorch"],"description":"Visualize PyTorch tensors with a single line of code."}
{"name":"edisonleeeee\/graphgallery","full_name":"EdisonLeeeee\/GraphGallery","topics":["graph-neural-networks","models","graph","geometric-deep-learning","pytorch","graphgallery","adversarial-machine-learning","dgl","pyg"],"description":"GraphGallery is a gallery for benchmarking Graph Neural Networks."}
{"name":"modelscope\/modelscope","full_name":"modelscope\/modelscope","topics":["nlp","cv","speech","multi-modal","science","deep-learning","machine-learning","python"],"description":"ModelScope is committed to empowering a wide-spectrum of developers to leverage AI models from various domains. (\u81f4\u529b\u4e8e\u901a\u8fc7\u5f00\u653e\u7684\u793e\u533a\u5408\u4f5c\uff0c\u5f00\u6e90AI\u6a21\u578b\u4ee5\u53ca\u76f8\u5173\u521b\u65b0\u6280\u672f\uff0c\u63a8\u52a8\u57fa\u4e8e\u6a21\u578b\u5373\u670d\u52a1\u7684\u751f\u6001\u7e41\u8363\u53d1\u5c55\u3002)"}
{"name":"xue-pai\/fuxictr","full_name":"xue-pai\/FuxiCTR","topics":["ctr-prediction","recommender-systems","ctr","cvr","pytorch"],"description":"A configurable, tunable, and reproducible library for CTR prediction"}
{"name":"media-smart\/vedastr","full_name":"Media-Smart\/vedastr","topics":["pytorch","scene-text-recognition","ocr","ocr-recognition","text-recognition","transformer"],"description":"A scene text recognition toolbox based on PyTorch"}
{"name":"swz30\/cycleisp","full_name":"swz30\/CycleISP","topics":["image-denoising","data-synthesis","camera-imaging-pipeline","low-level-vision","cycleisp","computer-vision","image-restoration","pytorch","rgb2raw","raw2rgb","cvpr2020"],"description":"[CVPR 2020--Oral] CycleISP: Real Image Restoration via Improved Data Synthesis"}
{"name":"jik876\/hifi-gan","full_name":"jik876\/hifi-gan","topics":["speech-synthesis","gan","text-to-speech","tts","deep-learning","hifi-gan","pytorch","vocoder"],"description":"HiFi-GAN: Generative Adversarial Networks for Efficient and High Fidelity Speech Synthesis"}
{"name":"visualdatabase\/fastdup","full_name":"visual-layer\/fastdup","topics":["data-curation","dataset","deep-learning","image-duplicate-detection","machine-learning","novelty-detection","object-detection","outlier-detection","python","visual-search","data-augmentation","image-classification","kaggle","similarity","image","image-classfication","image-processing","visualization-tools"],"description":"FastDup is a tool for gaining insights from a large image collection. It can find anomalies, duplicate and near duplicate images, clusters of similaritity, learn the normal behavior and temporal interactions between images. It can be used for smart subsampling of a higher quality dataset, outlier removal, novelty detection of new information to be sent for tagging. FastDup scales to millions of images running on CPU only."}
{"name":"opendilab\/interfuser","full_name":"opendilab\/InterFuser","topics":["autonomous-driving","bird-view-image","transformer"],"description":"[CoRL 2022] InterFuser: Safety-Enhanced Autonomous Driving Using Interpretable Sensor Fusion Transformer"}
{"name":"crowsonkb\/style-transfer-pytorch","full_name":"crowsonkb\/style-transfer-pytorch","topics":["pytorch","style-transfer","neural-art"],"description":"Neural style transfer in PyTorch."}
{"name":"vas3k\/infomate.club","full_name":"vas3k\/infomate.club","topics":["rss","feed","python","telegram","nltk","nlp"],"description":"RSS feed aggregator with collections and NLP article summarization"}
{"name":"webis-de\/small-text","full_name":"webis-de\/small-text","topics":["active-learning","text-classification","pytorch","transformers","natural-language-processing","python","machine-learning","deep-learning","nlp"],"description":"Active Learning for Text Classification in Python"}
{"name":"mindslab-ai\/faceshifter","full_name":"mindslab-ai\/faceshifter","topics":["pytorch","pytorch-lightning","face-swapping"],"description":"Unofficial PyTorch Implementation for FaceShifter (https:\/\/arxiv.org\/abs\/1912.13457)"}
{"name":"murufeng\/awesome_lightweight_networks","full_name":"murufeng\/awesome_lightweight_networks","topics":["mobile-networks","awesome-list","deep-learning","mobilenet"],"description":"The implementation of various lightweight networks by using PyTorch. such as\uff1aMobileNetV2\uff0cMobileNeXt\uff0cGhostNet\uff0cParNet\uff0cMobileViT\u3001AdderNet\uff0cShuffleNetV1-V2\uff0cLCNet\uff0cConvNeXt\uff0cetc. \u2b50\u2b50\u2b50\u2b50\u2b50"}
{"name":"microsoft\/deepspeed-mii","full_name":"microsoft\/DeepSpeed-MII","topics":["deep-learning","inference","pytorch"],"description":"MII makes low-latency and high-throughput inference possible, powered by DeepSpeed."}
{"name":"sb-ai-lab\/lightautoml","full_name":"sb-ai-lab\/LightAutoML","topics":["automl","data-science","machine-learning","python","automated-machine-learning","automatic-machine-learning","automl-algorithms","binary-classification","kaggle","lama","multiclass-classification","nlp","regression"],"description":"Fast and customizable framework for automatic ML model creation (AutoML)"}
{"name":"carefree0910\/carefree-learn","full_name":"carefree0910\/carefree-learn","topics":["pytorch","automl","algorithm","ensemble","numpy","machine-learning","tabular-data","python","deep-learning","data-science","tabular-datasets","computer-vision"],"description":"Deep Learning \u2764\ufe0f PyTorch"}
{"name":"researchmm\/stark","full_name":"researchmm\/Stark","topics":["transformer"],"description":"[ICCV'21] Learning Spatio-Temporal Transformer for Visual Tracking"}
{"name":"vector-ai\/vectorhub","full_name":"RelevanceAI\/vectorhub","topics":["python","vector","embeddings","encodings","vector-similarity","transformers","tfhub","machine-learning","deeplearning","artificial-intelligence","neural-network","deep-learning","tensorflow","pytorch","word2vec","image2vec","audio-processing","video-processing"],"description":"Vector Hub - Library for easy discovery, and consumption of State-of-the-art models to turn data into vectors. (text2vec, image2vec, video2vec, graph2vec, bert, inception, etc)"}
{"name":"intel\/openfl","full_name":"intel\/openfl","topics":["federated-learning","secure-computation","openfl","distributed-computing","deep-learning","collaborative-learning","privacy-preserving-machine-learning","machine-learning","fedprox","fedavg","federated-analytics","python","federated-learning-framework","federated-deep-learning","pytorch-federated-learning","tensorflow-federated-learning","keras-federated-learning","distributed-learning","fedcurv","fedopt"],"description":"An open framework for Federated Learning."}
{"name":"simonvandenhende\/multi-task-learning-pytorch","full_name":"SimonVandenhende\/Multi-Task-Learning-PyTorch","topics":["multi-task-learning","computer-vision","pytorch","nyud","pascal","segmentation","scene-understanding","eccv2020"],"description":"PyTorch implementation of multi-task learning architectures, incl. MTI-Net (ECCV2020). "}
{"name":"lucidrains\/parti-pytorch","full_name":"lucidrains\/parti-pytorch","topics":["artificial-intelligence","attention-mechanism","deep-learning","text-to-image","transformers"],"description":"Implementation of Parti, Google's pure attention-based text-to-image neural network, in Pytorch"}
{"name":"bubbliiiing\/unet-pytorch","full_name":"bubbliiiing\/unet-pytorch","topics":[],"description":"\u8fd9\u662f\u4e00\u4e2aunet-pytorch\u7684\u6e90\u7801\uff0c\u53ef\u4ee5\u8bad\u7ec3\u81ea\u5df1\u7684\u6a21\u578b"}
{"name":"scalsol\/mega.pytorch","full_name":"Scalsol\/mega.pytorch","topics":["video-object-detection","pytorch"],"description":"Memory Enhanced Global-Local Aggregation for Video Object Detection, CVPR2020"}
{"name":"neuml\/codequestion","full_name":"neuml\/codequestion","topics":["python","machine-learning","search","nlp","txtai"],"description":"\ud83d\udcad Semantic search for developers"}
{"name":"sforaidl\/genrl","full_name":"SforAiDl\/genrl","topics":["reinforcement-learning-algorithms","reinforcement-learning","machine-learning","gym","openai","python","data-science","pytorch","algorithm-implementations","benchmarking","deep-learning","neural-network","hacktoberfest"],"description":"A PyTorch reinforcement learning library for generalizable and reproducible algorithm implementations with an aim to improve accessibility in RL"}
{"name":"microsoft\/lora","full_name":"microsoft\/LoRA","topics":["gpt-2","adaptation","language-model","gpt-3","low-rank","pytorch","deep-learning","roberta","deberta"],"description":"Code for loralib, an implementation of \"LoRA: Low-Rank Adaptation of Large Language Models\""}
{"name":"thuwangcy\/rechorus","full_name":"THUwangcy\/ReChorus","topics":["recommendation","framework","pytorch","ranking"],"description":"\u201cChorus\u201d of recommendation models: a light and flexible PyTorch framework for Top-K recommendation."}
{"name":"yyzharry\/imbalanced-regression","full_name":"YyzHarry\/imbalanced-regression","topics":["imbalanced-data","imbalanced-learning","imbalanced-classification","imbalance","regression","long-tail","imbalanced-regression","icml","icml-2021","computer-vision","natural-language-processing","healthcare"],"description":"[ICML 2021, Long Talk] Delving into Deep Imbalanced Regression"}
{"name":"pykale\/pykale","full_name":"pykale\/pykale","topics":["machine-learning","knowledge-aware-learning","computer-vision","graph-analysis","pytorch","medical-image-analysis","multimodal-learning","transfer-learning","domain-adaptation","data-science","deep-learning","meta-learning","python","multimodal"],"description":"Knowledge-Aware machine LEarning (KALE): accessible machine learning from multiple sources for interdisciplinary research, part of the \ud83d\udd25PyTorch ecosystem"}
{"name":"jdai-cv\/centerx","full_name":"JDAI-CV\/centerX","topics":["centernet","detectron2","deep-learning","object-detection","fast-reid","caffe","onnx","tensorrt","centerx"],"description":"This repo is implemented based on detectron2 and centernet"}
{"name":"vinits5\/learning3d","full_name":"vinits5\/learning3d","topics":[],"description":"This is a complete package of recent deep learning methods for 3D point clouds in pytorch (with pretrained models)."}
{"name":"rucaibox\/crslab","full_name":"RUCAIBox\/CRSLab","topics":["conversational-recommendation","pytorch","graph-neural-network","pretrained-models","human-machine-interaction","deep-learning","dialog-system","recommender-system","conversation-system","recommendation","text-generation","knowledge-graph"],"description":"CRSLab is an open-source toolkit for building Conversational Recommender System (CRS)."}
{"name":"tsingz0\/pfl-non-iid","full_name":"TsingZ0\/PFL-Non-IID","topics":["non-iid","federated-learning","personalization","pytorch","python","distributed-computing","nlp","cv","cnn","rnn","heterogeneity","differential-privacy","privacy","amazon-reviews","imagenet","transformer","domainnet","iot"],"description":"Personalized federated learning simulation platform with non-IID and unbalanced dataset"}
{"name":"diyago\/gan-for-tabular-data","full_name":"Diyago\/GAN-for-tabular-data","topics":["tabular-data","gans","train-dataframe","adversarial-filtering","deep-learning","feature-engineering","gan","machine-learning","python"],"description":"We well know GANs for success in the realistic image generation. However, they can be applied in tabular data generation. We will review and examine some recent papers about tabular GANs in action."}
{"name":"xingangpan\/deep-generative-prior","full_name":"XingangPan\/deep-generative-prior","topics":["generative-adversarial-network","gan","deep-learning","image-restoration","image-manipulation","image-prior"],"description":"Code for deep generative prior (ECCV2020 oral)"}
{"name":"untitled-ai\/self_supervised","full_name":"untitled-ai\/self_supervised","topics":[],"description":"A Pytorch-Lightning implementation of self-supervised algorithms"}
{"name":"imlixinyang\/hisd","full_name":"imlixinyang\/HiSD","topics":["image-to-image-translation","gan","disentangled-representations"],"description":"Official pytorch implementation of paper \"Image-to-image Translation via Hierarchical Style Disentanglement\" (CVPR2021 Oral)."}
{"name":"kenziyuliu\/ms-g3d","full_name":"kenziyuliu\/MS-G3D","topics":["action-recognition","pretrained-models","deep-learning","computer-vision","skeleton","pytorch"],"description":"[CVPR 2020 Oral] PyTorch implementation of \"Disentangling and Unifying Graph Convolutions for Skeleton-Based Action Recognition\""}
{"name":"mackelab\/sbi","full_name":"mackelab\/sbi","topics":["simulation-based-inference","likelihood-free-inference","bayesian-inference","parameter-estimation","pytorch","machine-learning"],"description":"Simulation-based inference toolkit"}
{"name":"hongsukchoi\/pose2mesh_release","full_name":"hongsukchoi\/Pose2Mesh_RELEASE","topics":["single-view","graph-convolutional-network","3d-mesh","2d-human-pose","3d-human-pose","3d-human-mesh","rgb-image","eccv2020","eccv"],"description":"Official Pytorch implementation of \"Pose2Mesh: Graph Convolutional Network for 3D Human Pose and Mesh Recovery from a 2D Human Pose\", ECCV 2020"}
{"name":"alex04072000\/fusta","full_name":"alex04072000\/FuSta","topics":["video-stabilization","iccv2021","pytorch","view-synthesis"],"description":"Hybrid Neural Fusion for Full-frame Video Stabilization"}
{"name":"hkunlp\/unifiedskg","full_name":"HKUNLP\/UnifiedSKG","topics":["natural-language-processing","pytorch","huggingface-transformers","huggingface-datasets","structured-knowledge-grounding","semantic-parsing","question-answering","data-to-text","text-generation","fact-verification","multi-task-learning","prompt-learning"],"description":"[EMNLP 2022] A Unified Framework and Analysis for Structured Knowledge Grounding with Text-to-Text Language Models"}
{"name":"haoxiangsnr\/fullsubnet","full_name":"haoxiangsnr\/FullSubNet","topics":["speech-enhancement","speech-processing","speech-separation","pytorch","pretrained-model","paper","full-band","sub-band","single-channel","noise-reduction","denoising","audio","band","narrow-band","reproducible-research","speech"],"description":"PyTorch implementation of \"FullSubNet: A Full-Band and Sub-Band Fusion Model for Real-Time Single-Channel Speech Enhancement.\""}
{"name":"cavalleria\/cavaface","full_name":"cavalleria\/cavaface","topics":["face-recognition","pytorch","network","loss","arcnegface","arcface","resnest","attention-irse","apex","randaugment","mixup","dataparallel","model-parallel","resnet-irse","curricularface","cosface","amsoftmax","circleloss","ghostnet","efficientnet"],"description":"face recognition training project(pytorch)"}
{"name":"maghoumi\/pytorch-softdtw-cuda","full_name":"Maghoumi\/pytorch-softdtw-cuda","topics":["dynamic-time-warping","pytorch","cuda","deep-learning","soft-dtw"],"description":"Fast CUDA implementation of (differentiable) soft dynamic time warping for PyTorch using Numba"}
{"name":"tri-ml\/dd3d","full_name":"TRI-ML\/dd3d","topics":["deep-learning","pytorch","computer-vision"],"description":"Official PyTorch implementation of DD3D: Is Pseudo-Lidar needed for Monocular 3D Object detection? (ICCV 2021), Dennis Park*, Rares Ambrus*, Vitor Guizilini, Jie Li, and Adrien Gaidon."}
{"name":"sicara\/easy-few-shot-learning","full_name":"sicara\/easy-few-shot-learning","topics":["few-shot-learning","few-shot-recognition","few-shot-classifcation","meta-learning","machine-learning","pytorch","image-classification","deep-learning"],"description":"Ready-to-use code and tutorial notebooks to boost your way into few-shot learning for image classification. "}
{"name":"cardwing\/codes-for-pvkd","full_name":"cardwing\/Codes-for-PVKD","topics":["cvpr2022","lidar-segmentation","nuscenes","point-cloud-segmentation","pytorch","range-image","semantickitti","waymo-dataset"],"description":"Point-to-Voxel Knowledge Distillation for LiDAR Semantic Segmentation (CVPR 2022)"}
{"name":"mmasana\/facil","full_name":"mmasana\/FACIL","topics":["framework","deep-learning","machine-learning","reproducible-research","incremental-learning","continual-learning","lifelong-learning","survey"],"description":"Framework for Analysis of Class-Incremental Learning with 12 state-of-the-art methods and 3 baselines."}
{"name":"lucidrains\/memorizing-transformers-pytorch","full_name":"lucidrains\/memorizing-transformers-pytorch","topics":["artificial-intelligence","deep-learning","attention-mechanism","transformers","memory","retrieval","approximate-nearest-neighbors"],"description":"Implementation of Memorizing Transformers (ICLR 2022), attention net augmented with indexing and retrieval of memories using approximate nearest neighbors, in Pytorch"}
{"name":"samuela\/git-re-basin","full_name":"samuela\/git-re-basin","topics":["deep-learning","deeplearning","jax","machine-learning","neural-networks"],"description":"Code release for \"Git Re-Basin: Merging Models modulo Permutation Symmetries\""}
{"name":"andrew-qibin\/coordattention","full_name":"houqb\/CoordAttention","topics":["attention","mobilenetv2","mobilenext"],"description":"Code for our CVPR2021 paper coordinate attention"}
{"name":"microsoft\/archai","full_name":"microsoft\/archai","topics":["python","pytorch","machine-learning","deep-learning","neural-architecture-search","nas","automated-machine-learning","model-compression","darts","petridish","hyperparameter-optimization","automl"],"description":"Accelerate your Neural Architecture Search (NAS) through fast, reproducible and modular research."}
{"name":"lucmos\/nn-template","full_name":"grok-ai\/nn-template","topics":["pytorch","template","pytorch-lightning","wandb","dvc","hydra","research","deep-learning","best-practices","reproducibility","project-structure","weights-and-biases","streamlit","mkdocs","github-actions","best-practises","pre-commit","cookiecutter"],"description":"Generic template to bootstrap your PyTorch project."}
{"name":"lucidrains\/video-diffusion-pytorch","full_name":"lucidrains\/video-diffusion-pytorch","topics":["artificial-intelligence","deep-learning","ddpm","video-generation","text-to-video"],"description":"Implementation of Video Diffusion Models, Jonathan Ho's new paper extending DDPMs to Video Generation - in Pytorch"}
{"name":"yinboc\/few-shot-meta-baseline","full_name":"yinboc\/few-shot-meta-baseline","topics":["machine-learning","few-shot-learning","pytorch"],"description":"Meta-Baseline: Exploring Simple Meta-Learning for Few-Shot Learning, in ICCV 2021"}
{"name":"xuyige\/bert4doc-classification","full_name":"xuyige\/BERT4doc-Classification","topics":["natural-language-processing","bert","text-classification"],"description":"Code and source for paper ``How to Fine-Tune BERT for Text Classification?``"}
{"name":"kaijieshi7\/dynamic-convolution-pytorch","full_name":"kaijieshi7\/Dynamic-convolution-Pytorch","topics":["dynamic-convolution"],"description":"Pytorch!!!Pytorch!!!Pytorch!!!  Dynamic Convolution: Attention over Convolution Kernels (CVPR-2020)"}
{"name":"project-monai\/monailabel","full_name":"Project-MONAI\/MONAILabel","topics":["3d-slicer-extension","active-learning","pytorch","deep-learning","monai","segmentation","medical-imaging","machine-learning","3d"],"description":"MONAI Label is an intelligent open source image labeling and learning tool."}
{"name":"kevinzakka\/torchnca","full_name":"kevinzakka\/torchnca","topics":["pytorch","nca-python","neighbourhood-components-analysis","python","python3"],"description":"A PyTorch implementation of Neighbourhood Components Analysis."}
{"name":"microsoft\/tutel","full_name":"microsoft\/tutel","topics":["pytorch","moe","mixture-of-experts","nlp","transformer"],"description":"Tutel MoE: An Optimized Mixture-of-Experts Implementation"}
{"name":"zikangzhou\/hivt","full_name":"ZikangZhou\/HiVT","topics":["autonomous-driving","motion-prediction","transformer","cvpr2022"],"description":"[CVPR 2022] HiVT: Hierarchical Vector Transformer for Multi-Agent Motion Prediction"}
{"name":"hellonlp\/classifier-multi-label","full_name":"hellonlp\/classifier-multi-label","topics":["multi-label-classification","text-classification","tensorflow","multi-label","textcnn","cnn","bert","albert","classifier-multi-label","text-classifier"],"description":"\u591a\u6807\u7b7e\u6587\u672c\u5206\u7c7b\uff0c\u591a\u6807\u7b7e\u5206\u7c7b\uff0c\u6587\u672c\u5206\u7c7b\uff0cmulti-label\uff0cclassifier\uff0ctext classification\uff0cBERT\uff0cALBERT\uff0cmulti-label-classification"}
{"name":"media-smart\/vedadet","full_name":"Media-Smart\/vedadet","topics":["object-detection","single-stage","toolbox","pytorch"],"description":"A single stage object detection toolbox based on PyTorch"}
{"name":"shinya7y\/universenet","full_name":"shinya7y\/UniverseNet","topics":["object-detection","pytorch","mmdetection","waymo-open-dataset"],"description":"USB: Universal-Scale Object Detection Benchmark (BMVC\u20092022)"}
{"name":"tongjilibo\/bert4torch","full_name":"Tongjilibo\/bert4torch","topics":["bert","nlp","pytorch","bert4keras","named-entity-recognition","relation-extraction","seq2seq","text-classification","transformers","bert4torch"],"description":"pytorch implement of transformers refer to bert4keras"}
{"name":"layumi\/seg-uncertainty","full_name":"layumi\/Seg-Uncertainty","topics":["ijcai","domain-adaptation","semantic-segmentation","pytorch","ijcai2020","pytorch-implementation","gta5","cityscapes","synthia","robotcar","self-driving-car","domainadaptation","transfer-learning","mrnet"],"description":"IJCAI2020 & IJCV2021 :city_sunrise: Unsupervised Scene Adaptation with Memory Regularization in vivo "}
{"name":"mpolaris\/onnx2tflite","full_name":"MPolaris\/onnx2tflite","topics":["onnx2keras","onnx2tflite","onnx2tensorflow","yolov5","yolov6","yolov7","deployment","onnx","pytorch2tensorflow","quantization"],"description":"Tool for onnx->keras or onnx->tflite. If tool is useful for you, please star it."}
{"name":"parthaeth\/gif","full_name":"ParthaEth\/GIF","topics":["generative-interpretable-faces","photorealistic-faces","gan","photorealism","gans","conditonal-gan","latent-variable-models","generative-adversarial-network","generative-models"],"description":"GIF is a photorealistic generative face model with explicit 3D geometric and photometric control."}
{"name":"lturing\/tacotronv2_wavernn_chinese","full_name":"lturing\/tacotronv2_wavernn_chinese","topics":[],"description":"tacotronV2 + wavernn \u5b9e\u73b0\u4e2d\u6587\u8bed\u97f3\u5408\u6210(Tensorflow + pytorch) "}
{"name":"microsoft\/cocosnet","full_name":"microsoft\/CoCosNet","topics":["image-synthesis","image-translation","generative-adversarial-network","image-manipulation","gans","cocosnet","pytorch","computer-vision","deep-learning"],"description":"Cross-domain Correspondence Learning for Exemplar-based Image Translation. (CVPR 2020 Oral)"}
{"name":"microsoft\/godel","full_name":"microsoft\/GODEL","topics":["data-processing","dialogue","dialogue-systems","machine-learning","text-data","text-generation","transformers","conversational-ai","language-grounding","grounded-generation","dialogpt","language-model","pretrained-model","pytorch","transformer"],"description":"Large-scale pretrained models for goal-directed dialog"}
{"name":"rbbrdckybk\/ai-art-generator","full_name":"rbbrdckybk\/ai-art-generator","topics":["machine-learning","vqgan-clip","deep-learning","image-generation","clip-guided-diffusion","generative-art","stable-diffusion"],"description":"For automating the creation of large batches of AI-generated artwork locally."}
{"name":"bowenc0221\/panoptic-deeplab","full_name":"bowenc0221\/panoptic-deeplab","topics":["bottom-up","instance-segmentation","semantic-segmentation","deeplab","panoptic-segmentation","sementation","cvpr2020","cityscapes","pytorch","detectron2"],"description":"This is Pytorch re-implementation of our CVPR 2020 paper \"Panoptic-DeepLab: A Simple, Strong, and Fast Baseline for Bottom-Up Panoptic Segmentation\" (https:\/\/arxiv.org\/abs\/1911.10194)"}
{"name":"petuum\/adaptdl","full_name":"petuum\/adaptdl","topics":["deep-learning","kubernetes","pytorch","distributed-systems","aws","distributed-training","machine-learning","cloud"],"description":"Resource-adaptive cluster scheduler for deep learning training."}
{"name":"hellonlp\/classifier_multi_label_textcnn","full_name":"hellonlp\/classifier-multi-label","topics":["multi-label-classification","text-classification","tensorflow","multi-label","textcnn","cnn","bert","albert","classifier-multi-label","text-classifier"],"description":"\u591a\u6807\u7b7e\u6587\u672c\u5206\u7c7b\uff0c\u591a\u6807\u7b7e\u5206\u7c7b\uff0c\u6587\u672c\u5206\u7c7b\uff0cmulti-label\uff0cclassifier\uff0ctext classification\uff0cBERT\uff0cALBERT\uff0cmulti-label-classification"}
{"name":"tensorflow\/cloud","full_name":"tensorflow\/cloud","topics":["tensorflow","cloud","gcp","keras"],"description":"The TensorFlow Cloud repository provides APIs that will allow to easily go from debugging and training your Keras and TensorFlow code in a local environment to distributed training in the cloud."}
{"name":"google-research\/ravens","full_name":"google-research\/ravens","topics":["deep-learning","robotics","manipulation","pick-and-place","computer-vision","artificial-intelligence","vision","rearrangement","reinforcement-learning","imitation-learning","tensorflow","openai-gym","transporter-nets","pybullet"],"description":"Train robotic agents to learn pick and place with deep learning for vision-based manipulation in PyBullet. Transporter Nets, CoRL 2020."}
{"name":"nvidia-merlin\/merlin","full_name":"NVIDIA-Merlin\/Merlin","topics":["deep-learning","end-to-end","gpu-acceleration","machine-learning","recommendation-system","recommender-system"],"description":"NVIDIA Merlin is an open source library providing end-to-end GPU-accelerated recommender systems, from feature engineering and preprocessing to training deep learning models and running inference in production."}
{"name":"yinyunie\/total3dunderstanding","full_name":"yinyunie\/Total3DUnderstanding","topics":["scene-understanding","scene-reconstruction","cvpr2020","pytorch"],"description":"Implementation of CVPR'20 Oral: Total3DUnderstanding: Joint Layout, Object Pose and Mesh Reconstruction for Indoor Scenes from a Single Image"}
{"name":"hkchengrex\/mivos","full_name":"hkchengrex\/MiVOS","topics":["computer-vision","segmentation","deep-learning","pytorch","cvpr2021","interactive-segmentation","video-object-segmentation","video-segmentation"],"description":"[CVPR 2021] Modular Interactive Video Object Segmentation: Interaction-to-Mask, Propagation and Difference-Aware Fusion. Semi-supervised VOS as well!"}
{"name":"postech-cvlab\/scnerf","full_name":"POSTECH-CVLab\/SCNeRF","topics":["nerf","implicit-representions","calibration","computer-vision","deep-learning","self-calibration","pytorch"],"description":"[ICCV21] Self-Calibrating Neural Radiance Fields"}
{"name":"nightsnack\/yolobile","full_name":"nightsnack\/YOLObile","topics":["deep-learning","object-detection","yolov4"],"description":"This is the implementation of YOLObile: Real-Time Object Detection on Mobile Devices via Compression-Compilation Co-Design"}
{"name":"layumi\/aicity-reid-2020","full_name":"layumi\/AICIty-reID-2020","topics":["vehicle","pytorch","paddlepaddle","vehicle-reid","veri-776","aicity","cityflow","cvpr2020"],"description":":red_car:  The 1st Place Submission to AICity Challenge 2020 re-id track (Baidu-UTS submission)"}
{"name":"breezedeus\/cnstd","full_name":"breezedeus\/CnSTD","topics":["object-detection","pytorch","text-detection","deep-learning","math-formula-detection"],"description":"CnSTD: \u57fa\u4e8e PyTorch\/MXNet \u7684 \u4e2d\u6587\/\u82f1\u6587 \u573a\u666f\u6587\u5b57\u68c0\u6d4b\uff08Scene Text Detection\uff09Python3 \u5305"}
{"name":"tensorflow\/model-card-toolkit","full_name":"tensorflow\/model-card-toolkit","topics":["deep-learning","machine-learning","model-cards","responsible-ai","responsible-ml","tensorflow","transparency"],"description":"A toolkit that streamlines and automates the generation of model cards "}
{"name":"maclory\/spsr","full_name":"Maclory\/SPSR","topics":["structure-preserving","super-resolution","image-restoration","computer-vision","deep-learning"],"description":"Pytorch implementation of Structure-Preserving Super Resolution with Gradient Guidance (CVPR 2020 & TPAMI 2021) "}
{"name":"assafshocher\/resizeright","full_name":"assafshocher\/ResizeRight","topics":[],"description":"The correct way to resize images or tensors. For Numpy or Pytorch (differentiable)."}
{"name":"peizhuoli\/neural-blend-shapes","full_name":"PeizhuoLi\/neural-blend-shapes","topics":["computer-graphics","computer-animation","deep-learning","character-animation","rigging-framework"],"description":"An end-to-end library for automatic character rigging, skinning, and blend shapes generation, as well as a visualization tool [SIGGRAPH 2021]"}
{"name":"paulgavrikov\/visualkeras","full_name":"paulgavrikov\/visualkeras","topics":[],"description":"Visualkeras is a Python package to help visualize Keras (either standalone or included in TensorFlow) neural network architectures. It allows easy styling to fit most needs. This module supports layered style architecture generation which is great for CNNs (Convolutional Neural Networks), and a graph style architecture, which works great for most models including plain feed-forward networks."}
{"name":"yxuansu\/simctg","full_name":"yxuansu\/SimCTG","topics":["textgeneration","contrastive-learning","nlp","languagemodel","decode","language-modeling","deeplearning"],"description":"[NeurIPS'22 Spotlight] A Contrastive Framework for Neural Text Generation"}
{"name":"snap-stanford\/deepsnap","full_name":"snap-stanford\/deepsnap","topics":["pytorch","deep-learning","graph-neural-networks"],"description":"Python library assists deep learning on graphs"}
{"name":"sniklaus\/softmax-splatting","full_name":"sniklaus\/softmax-splatting","topics":["pytorch","python","cuda","deep-learning","cupy"],"description":"an implementation of softmax splatting for differentiable forward warping using PyTorch"}
{"name":"salesforce\/warp-drive","full_name":"salesforce\/warp-drive","topics":["reinforcement-learning","gpu","cuda","multiagent-reinforcement-learning","deep-learning","high-throughput","pytorch","numba"],"description":"Extremely Fast End-to-End Deep Multi-Agent Reinforcement Learning Framework on a GPU (JMLR 2022)"}
{"name":"xinjli\/allosaurus","full_name":"xinjli\/allosaurus","topics":["speech","speech-recognition","pytorch","phonetics"],"description":"Allosaurus is a pretrained universal phone recognizer for more than 2000 languages"}
{"name":"hhousen\/transformersum","full_name":"HHousen\/TransformerSum","topics":["automatic-summarization","machine-learning","extractive-summarization","bert","roberta","distilbert","albert","summarization","transformer-models","pytorch-lightning","summarization-dataset","text-summarization"],"description":"Models to perform neural summarization (extractive and abstractive) using machine learning transformers and a tool to convert abstractive summarization datasets to the extractive task."}
{"name":"jtl1207\/comic-translation","full_name":"jtl1207\/comic-translation","topics":["ocr","deep-learning","manga","paddleocr","chinese-translation","text-detection"],"description":"\u57fa\u4e8e\u6df1\u5ea6\u5b66\u4e60\u7684\u6f2b\u753b\u7ffb\u8bd1\u8f85\u52a9\u5de5\u5177\uff0c\u5305\u542b\u7ffb\u8bd1\u3001\u6717\u8bfb\u3001\u56fe\u50cf\u53bb\u5b57\u3001\u81ea\u52a8\u5d4c\u5b57\u529f\u80fd\u3002  \u76ee\u7684\u662f\u5e2e\u52a9\u975e\u4e13\u4e1a\u6c49\u5316\u4eba\u5458\u5b8c\u6210\u66f4\u7b80\u5355\uff0c\u5feb\u901f\u7684\u7ffb\u8bd1\u4efb\u52a1\u3002"}
{"name":"yl305237731\/flexible-yolov5","full_name":"Bobo-y\/flexible-yolov5","topics":["yolov5","resnet","moblienet","backbone","neck","se","cbam","efficientnet","pytorch","shufflenet","hrnet","dcnv2","tensorrt","object-detection","swin-transformer","gcn","yolov3"],"description":"More readable and flexible yolov5 with more backbone(gcn, resnet, shufflenet, moblienet, efficientnet, hrnet, swin-transformer, etc) and (cbam\uff0cdcn and so on), and tensorrt"}
{"name":"ai-forever\/ghost","full_name":"ai-forever\/ghost","topics":["computer-vision","deep-learning","deepfake","faceswap","pytorch","deep-face-swap","face-swap","ghost","ghost-faceswap","ghost-swap"],"description":"A new one shot face swap approach for image and video domains"}
{"name":"miemie2013\/keras-yolov4","full_name":"miemie2013\/Keras-YOLOv4","topics":["yolov4","yolo","keras","diou","ciou","ppyolo"],"description":"yolov4 42.0% mAP.ppyolo 45.1% mAP."}
{"name":"microsoft\/cvt","full_name":"microsoft\/CvT","topics":["cvt","deep-learning","classification","imagenet","computer-vision"],"description":"This is an official implementation of CvT: Introducing Convolutions to Vision Transformers."}
{"name":"phamquiluan\/residualmaskingnetwork","full_name":"phamquiluan\/ResidualMaskingNetwork","topics":["fer2013","facial-expression-recognition","residual-masking-network","pytorch","image-classification"],"description":"ICPR 2020: Facial Expression Recognition using Residual Masking Network"}
{"name":"jankrepl\/mltype","full_name":"jankrepl\/mltype","topics":["typing-practice","typing","typingspeedtest","typing-trainer","machine-learning","deep-learning","touch-typing"],"description":"Command line tool for improving typing skills (programmers friendly)"}
{"name":"archinetai\/surgeon-pytorch","full_name":"archinetai\/surgeon-pytorch","topics":["artificial-intelligence","deep-learning","pytorch"],"description":"A library to inspect and extract intermediate layers of PyTorch models."}
{"name":"da-southampton\/read_bert_code","full_name":"DA-southampton\/Read_Bert_Code","topics":[],"description":"Bert\u6e90\u7801\u9605\u8bfb\u4e0e\u8bb2\u89e3(Pytorch\u7248\u672c)-\u4ee5BERT\u6587\u672c\u5206\u7c7b\u4ee3\u7801\u4e3a\u4f8b\u5b50"}
{"name":"mit-han-lab\/torchquantum","full_name":"mit-han-lab\/torchquantum","topics":["pytorch-quantum","quantum","quantum-machine-learning","neural-network","machine-learning","quantum-computing","pytorch","deep-learning","system","ml-for-systems","quantum-simulation","quantum-neural-network","parameterized-quantum-circuit"],"description":"A PyTorch-based framework for Quantum Simulation, Quantum Machine Learning, Quantum Neural Networks, Parameterized Quantum Circuits with support for easy deployments on real quantum computers."}
{"name":"allenai\/dont-stop-pretraining","full_name":"allenai\/dont-stop-pretraining","topics":["natural-language-processing","pretrained-language-model"],"description":"Code associated with the Don't Stop Pretraining ACL 2020 paper"}
{"name":"continvvm\/continuum","full_name":"Continvvm\/continuum","topics":["continual-learning","lifelong-learning","incremental-learning","online-learning","pytorch","dataloader","dataset"],"description":"A clean and simple data loading library for Continual Learning"}
{"name":"majumderb\/rezero","full_name":"majumderb\/rezero","topics":["pytroch","transformer","resnet","language-modeling","deep-neural-networks"],"description":"Official PyTorch Repo for \"ReZero is All You Need: Fast Convergence at Large Depth\""}
{"name":"gretelai\/gretel-synthetics","full_name":"gretelai\/gretel-synthetics","topics":["differential-privacy","artificial-intelligence","tensorflow","privacy","synthetic-data"],"description":"Synthetic data generators for structured and unstructured text, featuring differentially private learning."}
{"name":"yandex-research\/ddpm-segmentation","full_name":"yandex-research\/ddpm-segmentation","topics":["deep-learning","semantic-segmentation"],"description":"Label-Efficient Semantic Segmentation with Diffusion Models (ICLR'2022)"}
{"name":"rasahq\/whatlies","full_name":"koaning\/whatlies","topics":["nlp","embeddings","visualisations"],"description":"Toolkit to help understand \"what lies\" in word embeddings. Also benchmarking! "}
{"name":"iampara0x\/yuno","full_name":"IAmPara0x\/Yuno","topics":["search-engine","anime","deep-learning","python","transformers"],"description":"Yuno is context based search engine for anime."}
{"name":"microsoft\/styleswin","full_name":"microsoft\/StyleSwin","topics":["computer-vision","deep-learning","deep-neural-networks","pytorch","generative-adversarial-network","gans","image-generation","image-synthesis","styleswin","transformer"],"description":"[CVPR 2022] StyleSwin: Transformer-based GAN for High-resolution Image Generation"}
{"name":"kakaoenterprise\/jorldy","full_name":"kakaoenterprise\/JORLDY","topics":["framework","reinforcement-learning","gym","mlagents","pytorch"],"description":"Repository for Open Source Reinforcement Learning Framework JORLDY"}
{"name":"tatp22\/linformer-pytorch","full_name":"tatp22\/linformer-pytorch","topics":["artificial-intelligence","deep-learning","attention-mechanism","pytorch","machine-learning","linformer","paper"],"description":"My take on a practical implementation of Linformer for Pytorch."}
{"name":"julesbelveze\/time-series-autoencoder","full_name":"JulesBelveze\/time-series-autoencoder","topics":["autoencoder","lstm-autoencoder","attention-mechanisms","time-series","multivariate-timeseries","pytorch","forecasting"],"description":":chart_with_upwards_trend: PyTorch dual-attention LSTM-autoencoder for multivariate Time Series :chart_with_upwards_trend:"}
{"name":"fangjinhuawang\/patchmatchnet","full_name":"FangjinhuaWang\/PatchmatchNet","topics":["multi-view-stereo","deep-learning","3d-reconstruction"],"description":"Official code of PatchmatchNet (CVPR 2021 Oral)"}
{"name":"nupurkmr9\/vision-aided-gan","full_name":"nupurkmr9\/vision-aided-gan","topics":["computer-vision","computer-graphics","pytorch","generative-adversarial-network","gans","pretrained-models","image-generation"],"description":"Ensembling Off-the-shelf Models for GAN Training (CVPR 2022 Oral)"}
{"name":"yuxumin\/pointr","full_name":"yuxumin\/PoinTr","topics":["deep-learning","computer-vision","pointcloud-completion","vision-transformers","3dvision","iccv2021"],"description":"[ICCV 2021 Oral] PoinTr: Diverse Point Cloud Completion with Geometry-Aware Transformers"}
{"name":"leondgarse\/keras_cv_attention_models","full_name":"leondgarse\/keras_cv_attention_models","topics":["tensorflow","visualizing","keras","attention","model","imagenet","coco","recognition","detection","anchor-free","tf","tf2"],"description":"Keras beit,botnet,CMT,CoaT,CoAtNet,convnext,cotnet,davit,efficientdet,edgenext,efficientformer,efficientnet,fbnet,flexivit,gcvit,ghostnet,gmlp,gpvit,halonet,hornet,iformer,lcnet,levit,maxvit,mlp-mixer,mobilevit,nat,nfnets,pvt,regnet,resmlp,resnest,resnext,resnetd,swin,tinynet,uniformer,volo,wavemlp,yolor,yolov7,yolox"}
{"name":"csteinmetz1\/auraloss","full_name":"csteinmetz1\/auraloss","topics":["loss-functions","pytorch","audio"],"description":"Collection of audio-focused loss functions in PyTorch"}
{"name":"ternaus\/retinaface","full_name":"ternaus\/retinaface","topics":["pytorch","deeplearning","face-detection","retinaface","object-detection"],"description":"The remake of the https:\/\/github.com\/biubug6\/Pytorch_Retinaface"}
{"name":"derrickxunu\/opencood","full_name":"DerrickXuNu\/OpenCOOD","topics":["autonomous-driving","multi-agent-perception","multi-agent-systems","simulations","collaborative-perception","computer-vision","deep-learning","pytorch"],"description":"[ICRA 2022&2023] An opensource framework for cooperative detection. Official implementation for OPV2V."}
{"name":"yeyupiaoling\/ppasr","full_name":"yeyupiaoling\/PPASR","topics":["asr","paddlepaddle","deep-learning","chinese","speech-to-text","speech","speech-recognition","streaming-asr","conformer","squeezeformer","deepspeech2"],"description":"\u57fa\u4e8ePaddlePaddle\u5b9e\u73b0\u7aef\u5230\u7aef\u4e2d\u6587\u8bed\u97f3\u8bc6\u522b\uff0c\u4ece\u5165\u95e8\u5230\u5b9e\u6218\uff0c\u8d85\u7b80\u5355\u7684\u5165\u95e8\u6848\u4f8b\uff0c\u8d85\u5b9e\u7528\u7684\u4f01\u4e1a\u9879\u76ee\u3002\u652f\u6301\u5f53\u524d\u6700\u6d41\u884c\u7684DeepSpeech2\u3001Conformer\u3001Squeezeformer\u6a21\u578b"}
{"name":"filyp\/autocorrect","full_name":"filyp\/autocorrect","topics":["autocorrection","spelling","spellchecker","levenshtein-distance","python","english","polish","turkish","ukrainian","russian","multilingual","multilanguage","spanish","nlp","spelling-corrector","autocorrect","languages","czech","portuguese","ocr"],"description":"Spelling corrector in python"}
{"name":"vballoli\/nfnets-pytorch","full_name":"vballoli\/nfnets-pytorch","topics":["pytorch","image-classification","deepmind","adaptive-gradient-clipping","nfnets","sota","paper","sgd"],"description":"NFNets and Adaptive Gradient Clipping for SGD implemented in PyTorch. Find explanation at tourdeml.github.io\/blog\/"}
{"name":"cavalleria\/cavaface.pytorch","full_name":"cavalleria\/cavaface","topics":["face-recognition","pytorch","network","loss","arcnegface","arcface","resnest","attention-irse","apex","randaugment","mixup","dataparallel","model-parallel","resnet-irse","curricularface","cosface","amsoftmax","circleloss","ghostnet","efficientnet"],"description":"face recognition training project(pytorch)"}
{"name":"noahcao\/oc_sort","full_name":"noahcao\/OC_SORT","topics":["tracking","computer-vision","deep-learning","object-detection","object-tracking"],"description":"The official repo for OC-SORT: Observation-Centric SORT on video Multi-Object Tracking. OC-SORT is simple, online and robust to occlusion\/non-linear motion."}
{"name":"thunlp\/opendelta","full_name":"thunlp\/OpenDelta","topics":["nlp","nlp-library","pretrained-language-model","parameter-efficient-learning","deep-learning"],"description":"A plug-and-play library for parameter-efficient-tuning (Delta Tuning)"}
{"name":"shoumikchow\/bbox-visualizer","full_name":"shoumikchow\/bbox-visualizer","topics":["computer-vision","computer-vision-tools","cv","labeling","data-labeling","object-detection","object-recognition","bboxes","python3","deep-learning","image-annotation","annotations","annotation","image-labeling","image-labeling-tool","bounding-boxes","bounding-box","boundingbox","hacktoberfest"],"description":"Make drawing and labeling bounding boxes easy as cake "}
{"name":"onion-liu\/blendgan","full_name":"onion-liu\/BlendGAN","topics":["generative-adversarial-network","gan","image-generation","style-transfer"],"description":"Official PyTorch implementation of \"BlendGAN: Implicitly GAN Blending for Arbitrary Stylized Face Generation\" (NeurIPS 2021)"}
{"name":"mvig-sjtu\/alphaction","full_name":"MVIG-SJTU\/AlphAction","topics":["action-detection","spatio-temporal-action-localization","alphaction","alpha-action","action-recognition","state-of-the-art","pytorch","torch","gpu","ava","demo-video","ava-dataset","model-zoo"],"description":"Spatio-Temporal Action Localization System"}
{"name":"wuba\/qa_match","full_name":"wuba\/qa_match","topics":["nlp","machine-learning","deep-learning","ai","58","tensorflow","lstm","dssm","qabot","qatools"],"description":"A simple effective ToolKit for short text matching"}
{"name":"dvlab-research\/blocknerfpytorch","full_name":"sjtuytc\/LargeScaleNeRFPytorch","topics":["nerf","nerf-w","pytorch-implementation","block-nerf","city-nerf","custum-nerf","mega-nerf","view-synthesis","weekly-nerf","weekly","classified","pytorch-implementations","pytorch","pytorch-lightning","chinese-translation","deep-learning"],"description":"1. Non-official implementation of Block-NeRF and Mega-NeRF in Pytorch. 2. Train your large-scale NeRF in the wild. 3. Weekly classified NeRF literature."}
{"name":"clovaai\/assembled-cnn","full_name":"clovaai\/assembled-cnn","topics":["convolutional-neural-networks","tensorflow","image-classification","deep-learning","transfer-learning","computer-vision","mce","imagenet","inference-throughput","robustness","food-101"],"description":"Tensorflow implementation of \"Compounding the Performance Improvements of Assembled Techniques in a Convolutional Neural Network\""}
{"name":"justin-tan\/high-fidelity-generative-compression","full_name":"Justin-Tan\/high-fidelity-generative-compression","topics":["image-compression","generative-adversarial-networks","entropy-coding","pytorch","computer-vision","machine-learning"],"description":"Pytorch implementation of High-Fidelity Generative Image Compression + Routines for neural image compression"}
{"name":"westlake-ai\/openmixup","full_name":"Westlake-AI\/openmixup","topics":["pytorch","awesome-list","awesome-mim","awesome-mixup","contrastive-learning","data-augmentation","image-classifcation","imagenet","masked-image-modeling","mixup","self-supervised-learning","semi-supervised-learning","vision-transformer","deep-learning","benchmark"],"description":"CAIRI Supervised, Semi- and Self-Supervised Visual Representation Learning Toolbox and Benchmark"}
{"name":"haofanwang\/score-cam","full_name":"haofanwang\/Score-CAM","topics":["score-cam","cam","cnn-visualization-technique","saliency","cnn-visualization","pytorch","visual-explanations","explainability","class-activation-maps","gradient-free","heatmap","scorecam","grad-cam","gradcam"],"description":"Official implementation of Score-CAM in PyTorch"}
{"name":"uvipen\/tetris-deep-q-learning-pytorch","full_name":"uvipen\/Tetris-deep-Q-learning-pytorch","topics":["reinforcement-learning","deep-q-network","deep-q-learning","pytorch","cv2"],"description":"Deep Q-learning for playing tetris game"}
{"name":"danijar\/dreamer","full_name":"danijar\/dreamer","topics":["reinforcement-learning","artificial-intelligence","deep-learning","robotics","world-models"],"description":"Dream to Control: Learning Behaviors by Latent Imagination"}
{"name":"mishalaskin\/curl","full_name":"MishaLaskin\/curl","topics":["deep-learning","contrastive-loss","contrastive-learning","contrastive-predictive-coding","deep-reinforcement-learning","deep-rl","reinforcement-learning","reinforcement-learning-algorithms","curl","sac","gpu","off-policy","model-free-rl","deep-neural-networks","deeplearning","deep-q-network","deep-q-learning","deep-learning-algorithms","deeplearning-ai","reinforcement-agents"],"description":"CURL: Contrastive Unsupervised Representation Learning for Sample-Efficient Reinforcement Learning"}
{"name":"wiki2020\/facepose_pytorch","full_name":"WIKI2020\/FacePose_pytorch","topics":["pytorch","facepose-pytorch","headpose","emotion-detection","emotion-recognition"],"description":"\ud83d\udd25\ud83d\udd25The pytorch implement of the head pose estimation(yaw,roll,pitch) and emotion detection with SOTA performance in real time.Easy to deploy, easy to use, and high accuracy.Solve all problems of face detection at one time.(\u6781\u7b80\uff0c\u6781\u5feb\uff0c\u9ad8\u6548\u662f\u6211\u4eec\u7684\u5b97\u65e8)"}
{"name":"microsoft\/cocosnet-v2","full_name":"microsoft\/CoCosNet-v2","topics":["pytorch","generative-adversarial-network","image-synthesis","image-translation","gans","image-manipulation","cocosnet","computer-vision","deep-learning","image-generation"],"description":"CoCosNet v2: Full-Resolution Correspondence Learning for Image Translation"}
{"name":"thunlp\/few-nerd","full_name":"thunlp\/Few-NERD","topics":["nlp","named-entity-recognition","entity-typing","deep-learning","few-shot-learning"],"description":"Code and data of ACL 2021 paper \"Few-NERD: A Few-shot Named Entity Recognition Dataset\""}
{"name":"mcg-nju\/tdn","full_name":"MCG-NJU\/TDN","topics":["action-recognition","video-understanding","video-classification","cvpr2021","pytorch","temporal-modeling"],"description":"[CVPR 2021] TDN: Temporal Difference Networks for Efficient Action Recognition "}
{"name":"pdebench\/pdebench","full_name":"pdebench\/PDEBench","topics":["ai","benchmark","jax","machine-learning","pytorch","scientific","scientific-computing","sciml","simulation"],"description":"PDEBench: An Extensive Benchmark for Scientific Machine Learning"}
{"name":"zwwwayne\/k-net","full_name":"ZwwWayne\/K-Net","topics":["panoptic-segmentation","image-segmentation","pytorch","mmsegmentation","mmdetection","semantic-segmentation"],"description":"[NeurIPS2021] Code Release of K-Net: Towards Unified Image Segmentation"}
{"name":"microsoft\/ptgnn","full_name":"microsoft\/ptgnn","topics":["graph-neural-networks","deep-learning","pytorch","geometric-deep-learning","gnn"],"description":"A PyTorch Graph Neural Network Library"}
{"name":"breizhn\/dtln","full_name":"breizhn\/DTLN","topics":["noise-reduction","deep-learning","audio","real-time-audio","audio-processing","noise-suppression","tensorflow","dns-challenge","dtln-model","speech-denoising","speech-processing","speech-enhancement","keras","tf-lite","raspberry-pi","onnx"],"description":"Tensorflow 2.x implementation of the DTLN real time speech denoising model. With TF-lite, ONNX and real-time audio processing support."}
{"name":"bubbliiiing\/yolov4-tf2","full_name":"bubbliiiing\/yolov4-tf2","topics":[],"description":"\u8fd9\u662f\u4e00\u4e2ayolo4-tf2\uff08tensorflow2\uff09\u7684\u6e90\u7801\uff0c\u53ef\u4ee5\u7528\u4e8e\u8bad\u7ec3\u81ea\u5df1\u7684\u6a21\u578b\u3002"}
{"name":"princeton-nlp\/pure","full_name":"princeton-nlp\/PURE","topics":["nlp","relation-extraction"],"description":"NAACL'2021: A Frustratingly Easy Approach for Entity and Relation Extraction https:\/\/arxiv.org\/abs\/2010.12812"}
{"name":"sangyx\/deep-finance","full_name":"sangyx\/deep-finance","topics":["finance","deep-learning","paper-list","fintech","artificial-intelligence","awesome-list"],"description":"Datasets, papers and books on AI & Finance."}
{"name":"rikorose\/deepfilternet","full_name":"Rikorose\/DeepFilterNet","topics":["pytorch","audio","deep-learning","speech-enhancement","noise-suppression","speech","rust"],"description":"Noise supression using deep filtering"}
{"name":"dmmaze\/ballonstranslator","full_name":"dmMaze\/BallonsTranslator","topics":["comics","computer-aided-translation","deep-learning","manga","ocr","pyqt5","qt5","scene-text-detection","inpainting","pytorch","computer-vision","anime","auto-translation","chinese-translation","qt","qt6","pyqt"],"description":"\u6df1\u5ea6\u5b66\u4e60\u8f85\u52a9\u6f2b\u753b\u7ffb\u8bd1\u5de5\u5177, \u652f\u6301\u4e00\u952e\u673a\u7ffb\u548c\u7b80\u5355\u7684\u56fe\u50cf\/\u6587\u672c\u7f16\u8f91 | Yet another computer-aided comic\/manga translation tool powered by deeplearning"}
{"name":"indonlp\/indonlu","full_name":"IndoNLP\/indonlu","topics":["indonesian","bahasa","bert","benchmark","datasets","nlp","nlu","aacl","indobert","indobert-models","indonlu","indo4b","indobert-lite","indonlp"],"description":"The first-ever vast natural language processing benchmark for Indonesian Language. We provide multiple downstream tasks, pre-trained IndoBERT models, and a starter code! (AACL-IJCNLP 2020)"}
{"name":"smilelab-fl\/fedlab","full_name":"SMILELab-FL\/FedLab","topics":["fedlab","federated-learning","pytorch","machine-learning","federated-learning-framework","pytorch-federated-learning","deep-learning"],"description":"A flexible Federated Learning Framework based on PyTorch, simplifying your Federated Learning research."}
{"name":"vanderschaarlab\/mlforhealthlabpub","full_name":"vanderschaarlab\/mlforhealthlabpub","topics":["machine-learning","healthcare","deep-learning"],"description":"Machine Learning and Artificial Intelligence for Medicine. "}
{"name":"zgcr\/simpleaicv_pytorch_training_examples_on_imagenet_coco_ade20k","full_name":"zgcr\/SimpleAICV_pytorch_training_examples_on_ImageNet_COCO_ADE20K","topics":["pytorch","coco","imagenet","cifar100","darknet","fcos","resnet","retinanet","centernet","ttfnet","repvgg","mae","dino","vit","voc","ade20k","regnet"],"description":"SimpleAICV:pytorch training and testing examples on ImageNet(ILSVRC2012)\/COCO2017\/VOC2007+2012\/CIFAR100\/AED20K datasets.Include classification\/object detection\/distillation\/contrastive learning\/masked image modeling."}
{"name":"youngwanlee\/vovnet-detectron2","full_name":"youngwanLEE\/vovnet-detectron2","topics":["vovnet","detectron2","object-detection","instance-segmentation","pytorch","panoptic-segmentation","cvpr2020"],"description":"VoVNet backbone networks for detectron2, in CVPR 2020"}
{"name":"eleutherai\/dalle-mtf","full_name":"EleutherAI\/DALLE-mtf","topics":["artificial-intelligence","transformers","multimodal","text-to-image","variational-autoencoder","autoregressive"],"description":"Open-AI's DALL-E for large scale training in mesh-tensorflow."}
{"name":"yueliu1999\/awesome-deep-graph-clustering","full_name":"yueliu1999\/Awesome-Deep-Graph-Clustering","topics":["deep-clustering","graph-neural-networks","self-supervised-learning","representation-learning","surveys","data-mining","deep-learning","graph-convolutional-networks","graph-embedding","network-embedding","gcn","machine-learning","clustering","data-mining-algorithms","graphclustering"],"description":"Awesome Deep Graph Clustering is a collection of SOTA, novel deep graph clustering methods (papers, codes, and datasets)."}
{"name":"lilanxiao\/rotated_iou","full_name":"lilanxiao\/Rotated_IoU","topics":["pytorch","rotated-boxes-iou","object-detection","iou-loss","differentiable-iou"],"description":"Differentiable IoU of rotated bounding boxes using Pytorch"}
{"name":"autonomousvision\/unimatch","full_name":"autonomousvision\/unimatch","topics":["cross-attention","depth","stereo","transformer","matching","unified-model","optical-flow","correspondence"],"description":"Unifying Flow, Stereo and Depth Estimation"}
{"name":"fuy34\/superpixel_fcn","full_name":"fuy34\/superpixel_fcn","topics":["superpixel","deep-learning","pytorch"],"description":"[CVPR\u201820] SpixelFCN: Superpixel Segmentation with Fully Convolutional Network"}
{"name":"dog-qiuqiu\/fastestdet","full_name":"dog-qiuqiu\/FastestDet","topics":["computer-vision","deep-learning","object-detection"],"description":":zap: A newly designed ultra lightweight anchor free target detection algorithm\uff0c weight only 250K parameters\uff0c reduces the time consumption by 10% compared with yolo-fastest, and the post-processing is simpler"}
{"name":"torchmd\/torchmd","full_name":"torchmd\/torchmd","topics":["molecular-dynamics","coarse-grained-molecular-dynamics","machine-learning","neural-networks","pytorch","pytorch-lightning"],"description":"End-To-End Molecular Dynamics (MD) Engine using PyTorch"}
{"name":"facebookresearch\/neuralcompression","full_name":"facebookresearch\/NeuralCompression","topics":["python","machine-learning","deep-learning","compression","neural-compression","pytorch","jax"],"description":"A collection of tools for neural compression enthusiasts."}
{"name":"mir-group\/nequip","full_name":"mir-group\/nequip","topics":["machine-learning","atomistic-simulations","molecular-dynamics","computational-chemistry","deep-learning","interatomic-potentials","force-fields","pytorch","drug-discovery","materials-science"],"description":"NequIP is a code for building E(3)-equivariant interatomic potentials"}
{"name":"dvl-tum\/mot_neural_solver","full_name":"dvl-tum\/mot_neural_solver","topics":["multi-object-tracking","graph-neural-networks","pytorch"],"description":"Official PyTorch implementation of \"Learning a Neural Solver for Multiple Object Tracking\" (CVPR 2020 Oral)."}
{"name":"ma-dan\/keras-yolo4","full_name":"Ma-Dan\/keras-yolo4","topics":["keras","yolov4","object-detection"],"description":"A Keras implementation of YOLOv4 (Tensorflow backend)"}
{"name":"angeloucn\/dc-unet","full_name":"AngeLouCN\/DC-UNet","topics":["dc-unet","medical-image-segmentation","keras-tensorflow","python3","dcunet","pytorch","segmentation"],"description":"We proposed a novel U-Net-based model -- DC-UNet to do medical image segmentation."}
{"name":"ai-forever\/sber-swap","full_name":"ai-forever\/ghost","topics":["computer-vision","deep-learning","deepfake","faceswap","pytorch","deep-face-swap","face-swap","ghost","ghost-faceswap","ghost-swap"],"description":"A new one shot face swap approach for image and video domains"}
{"name":"gradsflow\/gradsflow","full_name":"gradsflow\/gradsflow","topics":["automl","pytorch","autoai","deeplearning","artificial-intelligence","python","machine-learning"],"description":"An open-source AutoML Library based on PyTorch"}
{"name":"jerryji1993\/dnabert","full_name":"jerryji1993\/DNABERT","topics":["kmer","dnabert-model","kmer-format","gpu","sequence","genome","machine-learning","deep-learning","natural-language-processing","nlp"],"description":"DNABERT: pre-trained Bidirectional Encoder Representations from Transformers model for DNA-language in genome"}
{"name":"tinyzeamays\/circleloss","full_name":"TinyZeaMays\/CircleLoss","topics":[],"description":"Pytorch implementation of the paper \"Circle Loss: A Unified Perspective of Pair Similarity Optimization\""}
{"name":"katanaml\/katana-skipper","full_name":"katanaml\/katana-skipper","topics":["katana","pipeline","orchestration","tensorflow","machine-learning","kubernetes","k8s","docker","ingress","docker-compose"],"description":"Simple and flexible ML workflow engine"}
{"name":"megvii-research\/crestereo","full_name":"megvii-research\/CREStereo","topics":["stereo-matching","cvpr","dataset","megengine","computer-vision","deep-learning","stereo","stereo-vision"],"description":"Official MegEngine implementation of CREStereo(CVPR 2022 Oral)."}
{"name":"astra-vision\/monoscene","full_name":"astra-vision\/MonoScene","topics":["nyu-depth-v2","semantic-scene-completion","semantic-scene-understanding","single-image-reconstruction","monocular","2d-to-3d","semantic-kitti","kitti-360","mayavi","pytorch","deep-learning","computer-vision","cvpr22","cvpr2022"],"description":"MonoScene: Monocular 3D Semantic Scene Completion. CVPR 2022"}
{"name":"r1j1t\/contextualspellcheck","full_name":"R1j1t\/contextualSpellCheck","topics":["spacy","spacy-extension","nlp","spellcheck","preprocessing","bert","help-wanted","chatbot","spellchecker","python-spelling-corrector","oov","spelling-correction","spelling-corrections","natural-language-processing","python"],"description":"\u2714\ufe0fContextual word checker for better suggestions"}
{"name":"adefossez\/julius","full_name":"adefossez\/julius","topics":["dsp","pytorch"],"description":"Fast PyTorch based DSP for audio and 1D signals"}
{"name":"datasystemslab\/geotorchai","full_name":"DataSystemsLab\/GeoTorchAI","topics":["classification-model","convlstm-pytorch","deep-learning","deep-neural-networks","deepsat","prediction-model","raster-data","satellite-images","segmentation-models","sequence-models","spatial-data-analysis","spatio-temporal-analysis","spatio-temporal-models","spatio-temporal-prediction","st-resnet","satellite-classification"],"description":"GeoTorchAI: A Spatiotemporal Deep Learning Framework (https:\/\/dl.acm.org\/doi\/abs\/10.1145\/3557915.3561036)"}
{"name":"sangyx\/deep-stock","full_name":"sangyx\/deep-finance","topics":["finance","deep-learning","paper-list","fintech","artificial-intelligence","awesome-list"],"description":"Datasets, papers and books on AI & Finance."}
{"name":"lucidrains\/g-mlp-pytorch","full_name":"lucidrains\/g-mlp-pytorch","topics":["artificial-intelligence","deep-learning","multilayer-perceptron"],"description":"Implementation of gMLP, an all-MLP replacement for Transformers, in Pytorch"}
{"name":"nvlabs\/gcvit","full_name":"NVlabs\/GCVit","topics":["vision-transformer","ade20k","coco","deep-learning","imagenet","imagenet-classification","object-detection","pre-train","pre-trained-model","self-attention","semantic-segmentation","backbone","visual-recognition"],"description":"Official PyTorch implementation of Global Context Vision Transformers"}
{"name":"microsoft\/lmops","full_name":"microsoft\/LMOps","topics":["nlp","agi","gpt","llm","lm","pretraining","prompt","lmops","promptist","x-prompt","language-model"],"description":"General technology for enabling AI capabilities w\/ LLMs and Generative AI models"}
{"name":"eliahuhorwitz\/deepsim","full_name":"eliahuhorwitz\/DeepSIM","topics":["single-image","image-editing","deep-neural-networks","generative-adversarial-network","computer-vision","computer-graphics","edge-to-image","segmantation-to-image","pytorch","image-to-image-translation","deep-learning","iccv2021"],"description":"Official PyTorch implementation of the paper: \"DeepSIM: Image Shape Manipulation from a Single Augmented Training Sample\" (ICCV 2021 Oral)"}
{"name":"openbmb\/bminf","full_name":"OpenBMB\/BMInf","topics":["deep-learning","gpu","pretrained-language-models"],"description":"Efficient Inference for Big Models"}
{"name":"karolzak\/ipyplot","full_name":"karolzak\/ipyplot","topics":["image-processing","image-classification","images","plotting-in-python","jupyter-notebook","notebooks","html","machine-learning","deep-learning","visualization","image-viewer","notebook","python"],"description":"IPyPlot is a small python package offering fast and efficient plotting of images inside Python Notebooks. It's using IPython with HTML for faster, richer and more interactive way of displaying big numbers of images."}
{"name":"davidefiocco\/streamlit-fastapi-model-serving","full_name":"davidefiocco\/streamlit-fastapi-model-serving","topics":["fastapi","streamlit","docker-compose","pytorch","pycones"],"description":"Simple web app example serving a PyTorch model using streamlit and FastAPI"}
{"name":"wutong16\/distributionbalancedloss","full_name":"wutong16\/DistributionBalancedLoss","topics":[],"description":"Pytorch implementation for \"Distribution-Balanced Loss for Multi-Label Classification in Long-Tailed Datasets\" (ECCV 2020 Spotlight)"}
{"name":"tarun005\/flavr","full_name":"tarun005\/FLAVR","topics":["slomo-filter","video","8x-interpolation","artificial-intelligence","deep-learning","machine-learning"],"description":"Code for FLAVR: A fast and efficient frame interpolation technique."}
{"name":"jackaduma\/cyclegan-vc2","full_name":"jackaduma\/CycleGAN-VC2","topics":["voice-conversion","cyclegan-vc2","cyclegan","gan","deeplearning","voice-cloning","pytorch-implementation","cyclegan-vc","speech-synthesis","deep-learning","pix2pix"],"description":"Voice Conversion by CycleGAN (\u8bed\u97f3\u514b\u9686\/\u8bed\u97f3\u8f6c\u6362): CycleGAN-VC2"}
{"name":"lava-nc\/lava","full_name":"lava-nc\/lava","topics":["neuromorphic-computing","neuromorphic","deep-learning","neural-networks","neuroscience","python"],"description":"A Software Framework for Neuromorphic Computing"}
{"name":"graphdeeplearning\/graphtransformer","full_name":"graphdeeplearning\/graphtransformer","topics":["graph-transformer","transformers","transformer","attention","graph-neural-networks","graph-deep-learning","aaai","transformer-networks"],"description":"Graph Transformer Architecture. Source code for \"A Generalization of Transformer Networks to Graphs\", DLG-AAAI'21."}
{"name":"aimagelab\/mammoth","full_name":"aimagelab\/mammoth","topics":["pytorch","continual-learning","neurips2020","knowledge-distillation","deep-learning","der","experience-replay","dark-experience-replay"],"description":"An Extendible (General) Continual Learning Framework based on Pytorch - official codebase of Dark Experience for General Continual Learning"}
{"name":"thohemp\/6drepnet","full_name":"thohemp\/6DRepNet","topics":["head","pose","estimation","facial","analysis","biwi","aflw2000","orientation","6d","head-pose-estimation","head-pose","pytorch","pytorch-implementation"],"description":"Official Pytorch implementation of  6DRepNet: 6D Rotation representation for unconstrained head pose estimation."}
{"name":"ki6an\/fastt5","full_name":"Ki6an\/fastT5","topics":["python","t5","onnx","onnxruntime","quantization","fastt5","nlp","fast","quantized-onnx-models","translation","question-answering","inference-speed","pytorch","inference","deep-learning","transformer"],"description":"\u26a1 boost inference speed of T5 models by 5x & reduce the model size by 3x."}
{"name":"longmaoteamtf\/deep_recommenders","full_name":"LongmaoTeamTf\/deep_recommenders","topics":["deep-learning","ranking","retrieval","recommendation-system","multi-task-learning"],"description":"Deep Recommenders"}
{"name":"theaiguyscode\/yolov3_deepsort","full_name":"theAIGuysCode\/yolov3_deepsort","topics":["yolov3","object-tracker","deep-sort","tensorflow"],"description":"Object tracking implemented with YOLOv3, Deep Sort and Tensorflow."}
{"name":"dengpingfan\/pranet","full_name":"DengPingFan\/PraNet","topics":["medical-image-segmentation","polyp-segmentation","reverse-attention","deep-learning"],"description":"PraNet: Parallel Reverse Attention Network for Polyp Segmentation, MICCAI 2020 (Oral). Code using Jittor Framework is available."}
{"name":"jasoncao11\/nlp-notebook","full_name":"jasoncao11\/nlp-notebook","topics":["textcnn","textrcnn","bilstm-crf-model","bilstm-attention","fasttext-embeddings","transformer-pytorch","bert-chinese","textrcnn-bert","distill-bert","seq2seq","gpt2","text-classification","glove","skip-gram","nlp","pytorch","bert","natural-language-processing","bert-ner","electra"],"description":"NLP \u9886\u57df\u5e38\u89c1\u4efb\u52a1\u7684\u5b9e\u73b0\uff0c\u5305\u62ec\u65b0\u8bcd\u53d1\u73b0\u3001\u4ee5\u53ca\u57fa\u4e8epytorch\u7684\u8bcd\u5411\u91cf\u3001\u4e2d\u6587\u6587\u672c\u5206\u7c7b\u3001\u5b9e\u4f53\u8bc6\u522b\u3001\u6458\u8981\u6587\u672c\u751f\u6210\u3001\u53e5\u5b50\u76f8\u4f3c\u5ea6\u5224\u65ad\u3001\u4e09\u5143\u7ec4\u62bd\u53d6\u3001\u9884\u8bad\u7ec3\u6a21\u578b\u7b49\u3002"}
{"name":"keras-team\/keras-nlp","full_name":"keras-team\/keras-nlp","topics":["deep-learning","keras","machine-learning","nlp","tensorflow"],"description":"Modular Natural Language Processing workflows with Keras"}
{"name":"ma-xu\/pointmlp-pytorch","full_name":"ma-xu\/pointMLP-pytorch","topics":["pointcloud","modelnet40","scanobjectnn","pytorch"],"description":"[ICLR 2022 poster] Official PyTorch implementation of \"Rethinking Network Design and Local Geometry in Point Cloud: A Simple Residual MLP Framework\""}
{"name":"amirbar\/detreg","full_name":"amirbar\/DETReg","topics":["object-detection","pytorch","deep-learning","unsupervised-learning"],"description":"Official implementation of the CVPR 2022 paper \"DETReg: Unsupervised Pretraining with Region Priors for Object Detection\"."}
{"name":"zgcr\/simpleaicv-pytorch-imagenet-coco-training","full_name":"zgcr\/SimpleAICV_pytorch_training_examples_on_ImageNet_COCO_ADE20K","topics":["pytorch","coco","imagenet","cifar100","darknet","fcos","resnet","retinanet","centernet","ttfnet","repvgg","mae","dino","vit","voc","ade20k","regnet"],"description":"SimpleAICV:pytorch training and testing examples on ImageNet(ILSVRC2012)\/COCO2017\/VOC2007+2012\/CIFAR100\/AED20K datasets.Include classification\/object detection\/distillation\/contrastive learning\/masked image modeling."}
{"name":"godweiyang\/nn-cuda-example","full_name":"godweiyang\/NN-CUDA-Example","topics":["pytorch","tensorflow","cuda","cpp","python","neural-network"],"description":"Several simple examples for popular neural network toolkits calling custom CUDA operators."}
{"name":"opendr-eu\/opendr","full_name":"opendr-eu\/opendr","topics":["deep-learning","robotics"],"description":"A modular, open and non-proprietary toolkit for core robotic functionalities by harnessing deep learning"}
{"name":"indobenchmark\/indonlu","full_name":"IndoNLP\/indonlu","topics":["indonesian","bahasa","bert","benchmark","datasets","nlp","nlu","aacl","indobert","indobert-models","indonlu","indo4b","indobert-lite","indonlp"],"description":"The first-ever vast natural language processing benchmark for Indonesian Language. We provide multiple downstream tasks, pre-trained IndoBERT models, and a starter code! (AACL-IJCNLP 2020)"}
{"name":"google-research\/prompt-tuning","full_name":"google-research\/prompt-tuning","topics":["prompt-tuning","nlp","machine-learning","jax","flax","language-model"],"description":"Original Implementation of Prompt Tuning from Lester, et al, 2021"}
{"name":"marload\/deeprl-tensorflow2","full_name":"marload\/DeepRL-TensorFlow2","topics":["tensorflow","machine-learning","reinforcement-learning","a2c","a3c","reinforce","dqn","trpo","ppo","sac","ddpg","deep-learning","deep-reinforcement-learning","tensorflow2","dueling-dqn","double-dqn","rainbow-dqn"],"description":"\ud83d\udc0b Simple implementations of various popular Deep Reinforcement Learning algorithms using TensorFlow2"}
{"name":"microsoft\/unispeech","full_name":"microsoft\/UniSpeech","topics":["pytorch","speech-recognition","speech-processing","speech","diarization","speech-separation","speech-diarization","speaker-verification"],"description":"UniSpeech  - Large Scale Self-Supervised Learning for Speech"}
{"name":"menyifang\/dct-net","full_name":"menyifang\/DCT-Net","topics":["cartoonization","gan","generative-adversarial-network","portrait","siggraph2022","style-transfer"],"description":"Official implementation of \"DCT-Net: Domain-Calibrated Translation for Portrait Stylization\", SIGGRAPH 2022 (TOG); Multi-style cartoonization"}
{"name":"afiaka87\/clip-guided-diffusion","full_name":"afiaka87\/clip-guided-diffusion","topics":["multimodal","image-generation","text-to-image-synthesis","text-to-image","openai","openai-clip","deep-learning","artificial-intelligence","diffusion","multimodality"],"description":"A CLI tool\/python module for generating images from text using guided diffusion and CLIP from OpenAI."}
{"name":"haofeixu\/gmflow","full_name":"haofeixu\/gmflow","topics":["optical-flow","global-matching","transformer","cvpr2022"],"description":"[CVPR 2022 Oral] GMFlow: Learning Optical Flow via Global Matching"}
{"name":"hrnet\/lite-hrnet","full_name":"HRNet\/Lite-HRNet","topics":["lite-hrnet","human-pose-estimation","high-resolution-net"],"description":"This is an official pytorch implementation of Lite-HRNet: A Lightweight High-Resolution Network. "}
{"name":"xiangking\/ark-nlp","full_name":"xiangking\/ark-nlp","topics":["nlp","transfomer","bert"],"description":"A private nlp coding package, which quickly implements the SOTA solutions."}
{"name":"openvinotoolkit\/datumaro","full_name":"openvinotoolkit\/datumaro","topics":["deep-learning","neural-networks","openvino-toolkit","computer-vision","datasets","format-converter","dataset","coco","imagenet","pascal-voc","yolo"],"description":"Dataset Management Framework, a Python library and a CLI tool to build, analyze and manage Computer Vision datasets."}
{"name":"lucidrains\/linear-attention-transformer","full_name":"lucidrains\/linear-attention-transformer","topics":["artificial-intelligence","deep-learning","attention-mechanism","transformer","pytorch"],"description":"Transformer based on a variant of attention that is linear complexity in respect to sequence length"}
{"name":"vitae-transformer\/vitae-transformer-remote-sensing","full_name":"ViTAE-Transformer\/ViTAE-Transformer-Remote-Sensing","topics":["remote-sensing","deep-learning"],"description":"The official repo for [TGRS'22] \"An Empirical Study of Remote Sensing Pretraining\""}
{"name":"tusimple\/sst","full_name":"tusen-ai\/SST","topics":["pytorch","3d-object-detection","autonomous-driving"],"description":"Codes for \u201cFully Sparse 3D Object Detection\u201d & \u201cEmbracing Single Stride 3D Object Detector with Sparse Transformer\u201d"}
{"name":"xinntao\/facexlib","full_name":"xinntao\/facexlib","topics":["pytorch","deep-learning","face","detection","alignment","recognition","parsing","matting","headpose","tracking","assessment"],"description":"FaceXlib aims at providing ready-to-use face-related functions based on current STOA open-source methods."}
{"name":"rizwanmunawar\/yolov7-object-tracking","full_name":"RizwanMunawar\/yolov7-object-tracking","topics":["deep-learning","object-detection","opencv-python","tracking-algorithm","yolov7"],"description":"YOLOv7 Object Tracking Using PyTorch, OpenCV and Sort Tracking"}
{"name":"guitarml\/guitarlstm","full_name":"GuitarML\/GuitarLSTM","topics":["deep-learning","guitar","machine-learning","keras-tensorflow"],"description":"Deep learning models for guitar amp\/pedal emulation using LSTM with Keras."}
{"name":"pemistahl\/lingua-py","full_name":"pemistahl\/lingua-py","topics":["nlp","natural-language-processing","language-detection","language-recognition","language-identification","language-classification","python-library"],"description":"The most accurate natural language detection library for Python, suitable for long and short text alike"}
{"name":"weizhepei\/casrel","full_name":"weizhepei\/CasRel","topics":["knowledge-graph","relation-extraction","relational-triple-extraction","information-extraction","keras","bert"],"description":"A Novel Cascade Binary Tagging Framework for Relational Triple Extraction. Accepted by ACL 2020. "}
{"name":"zhanglonghao1992\/one-shot_free-view_neural_talking_head_synthesis","full_name":"zhanglonghao1992\/One-Shot_Free-View_Neural_Talking_Head_Synthesis","topics":[],"description":"Unofficial pytorch implementation of paper \"One-Shot Free-View Neural Talking-Head Synthesis for Video Conferencing\""}
{"name":"bradyz\/cross_view_transformers","full_name":"bradyz\/cross_view_transformers","topics":["deep-learning","pytorch","transformer","cvpr2022"],"description":"Cross-view Transformers for real-time Map-view Semantic Segmentation (CVPR 2022 Oral)"}
{"name":"chatopera\/efaqa-corpus-zh","full_name":"chatopera\/efaqa-corpus-zh","topics":["natural-language-processing","natural-language-understanding","corpus","psychology"],"description":"\u2764\ufe0fEmotional First Aid Dataset, \u5fc3\u7406\u54a8\u8be2\u95ee\u7b54\u3001\u804a\u5929\u673a\u5668\u4eba\u8bed\u6599\u5e93"}
{"name":"threedle\/geocode","full_name":"threedle\/GeoCode","topics":["3d","computer-graphics","deep-learning","mesh-generation","point-cloud","pytorch","sketch"],"description":"GeoCode maps 3D shapes to a human-interpretable parameter space, allowing to intuitively edit the recovered 3D shapes from a point cloud or sketch input."}
{"name":"francois-rozet\/piqa","full_name":"francois-rozet\/piqa","topics":["pytorch","image","image-quality","quality","image-quality-assessment","pytorch-image-quality","psnr","ssim","lpips","metrics"],"description":"PyTorch Image Quality Assessement package"}
{"name":"awslabs\/mlm-scoring","full_name":"awslabs\/mlm-scoring","topics":["language-model","nlp","speech-recognition","pytorch","mxnet","bert","xlm"],"description":"Python library & examples for Masked Language Model Scoring (ACL 2020)"}
{"name":"xuebinqin\/dis","full_name":"xuebinqin\/DIS","topics":["background-removal","deep-learning","dichotomous-image-segmentation","computer-vision","u-2-net"],"description":"This is the repo for our new project Highly Accurate Dichotomous Image Segmentation"}
{"name":"hikaritju\/ld","full_name":"HikariTJU\/LD","topics":["detection","knowledge-distillation","ld","object-detection","pytorch","deep-learning"],"description":"Localization Distillation for Dense Object Detection (CVPR 2022)"}
{"name":"ibaigorordo\/pykinectazure","full_name":"ibaiGorordo\/pyKinectAzure","topics":["opencv-python","opencv","depth-camera","body-tracking","deep-learning","k4a","k4abt","kinect","python3","python","kinect-azure","azure-kinect-sdk","azure-kinect","azure-kinect-dk"],"description":"Python library to run Kinect Azure DK SDK functions"}
{"name":"deci-ai\/super-gradients","full_name":"Deci-AI\/super-gradients","topics":["deep-learning","neural-network","pretrained-weights","pretrained-models","pytorch","object-detection","image-classification","computer-vision","semantic-segmentation","imagenet","transfer-learning"],"description":"Easily train or fine-tune SOTA computer vision models with one open source training library"}
{"name":"turoad\/lanedet","full_name":"Turoad\/lanedet","topics":["lane-detection","scnn","resa","ufld","laneatt","culane","lane-line-detection","deep-learning","lane-detection-toolbox","tusimple","conditional-lane-detection"],"description":"An open source lane detection toolbox based on PyTorch, including SCNN, RESA, UFLD, LaneATT, CondLane, etc."}
{"name":"nasirkhalid24\/clip-mesh","full_name":"NasirKhalid24\/CLIP-Mesh","topics":["3d","pytorch"],"description":"Official implementation of CLIP-Mesh: Generating textured meshes from text using pretrained image-text models"}
{"name":"hellohaptik\/multi-task-nlp","full_name":"hellohaptik\/multi-task-NLP","topics":["pytorch","multitask-learning","sentence-classification","sequence-labeling","entailment","ranking","intent-classification","named-entity-recognition","machine-comprehension","context-awareness","transformers","nlp","nlp-library","nli-tasks","nlp-datasets","nlp-apis"],"description":"multi_task_NLP is a utility toolkit enabling NLP developers to easily train and infer a single model for multiple tasks."}
{"name":"lukecavabarrett\/pna","full_name":"lukecavabarrett\/pna","topics":["graph-machine-learning","graph-neural-networks","pytorch","dgl","pytorch-geometric"],"description":"Implementation of Principal Neighbourhood Aggregation for Graph Neural Networks in PyTorch, DGL and PyTorch Geometric"}
{"name":"neuralmagic\/sparsezoo","full_name":"neuralmagic\/sparsezoo","topics":["sparsification-recipe","sparse-quantized-models","smaller-models","deep-learning-algorithms","deep-learning-models","computer-vision","object-detection-model","nlp","pruning","transfer-learning","quantization","resnet","mobilenet","yolo","pretrained-models","models-optimized"],"description":"Neural network model repository for highly sparse and sparse-quantized models with matching sparsification recipes"}
{"name":"henry1iu\/tnt-trajectory-prediction","full_name":"Henry1iu\/TNT-Trajectory-Prediction","topics":[],"description":"A Pytorch Implementation of TNT: Target-driveN Trajectory Prediction"}
{"name":"datasystemslab\/geotorch","full_name":"DataSystemsLab\/GeoTorchAI","topics":["classification-model","convlstm-pytorch","deep-learning","deep-neural-networks","deepsat","prediction-model","raster-data","satellite-images","segmentation-models","sequence-models","spatial-data-analysis","spatio-temporal-analysis","spatio-temporal-models","spatio-temporal-prediction","st-resnet","satellite-classification"],"description":"GeoTorchAI: A Spatiotemporal Deep Learning Framework (https:\/\/dl.acm.org\/doi\/abs\/10.1145\/3557915.3561036)"}
{"name":"symbioticlab\/fedscale","full_name":"SymbioticLab\/FedScale","topics":["benchmark","dataset","machine-learning","federated-learning","icml","deep-learning","mlsys","osdi","deployment","distributed","pytorch","tensorflow"],"description":"FedScale is a scalable and extensible open-source federated learning (FL) platform."}
{"name":"clovaai\/adamp","full_name":"clovaai\/AdamP","topics":["deep-learning","optimizer","optimizer-algorithms","machine-learning","pytorch","iclr2021"],"description":"AdamP: Slowing Down the Slowdown for Momentum Optimizers on Scale-invariant Weights (ICLR 2021)"}
{"name":"ucinlp\/autoprompt","full_name":"ucinlp\/autoprompt","topics":["nlp","language-model","evaluation"],"description":"AutoPrompt: Automatic Prompt Construction for Masked Language Models."}
{"name":"yongzhuo\/macadam","full_name":"yongzhuo\/Macadam","topics":["tensorflow","keras","bert","sequence-labeling","text-classification","relation-extraction","embedding","ner","python3"],"description":"Macadam\u662f\u4e00\u4e2a\u4ee5Tensorflow(Keras)\u548cbert4keras\u4e3a\u57fa\u7840\uff0c\u4e13\u6ce8\u4e8e\u6587\u672c\u5206\u7c7b\u3001\u5e8f\u5217\u6807\u6ce8\u548c\u5173\u7cfb\u62bd\u53d6\u7684\u81ea\u7136\u8bed\u8a00\u5904\u7406\u5de5\u5177\u5305\u3002\u652f\u6301RANDOM\u3001WORD2VEC\u3001FASTTEXT\u3001BERT\u3001ALBERT\u3001ROBERTA\u3001NEZHA\u3001XLNET\u3001ELECTRA\u3001GPT-2\u7b49EMBEDDING\u5d4c\u5165;     \u652f\u6301FineTune\u3001FastText\u3001TextCNN\u3001CharCNN\u3001BiRNN\u3001RCNN\u3001DCNN\u3001CRNN\u3001DeepMoji\u3001SelfAttention\u3001HAN\u3001Capsule\u7b49\u6587\u672c\u5206\u7c7b\u7b97\u6cd5;      \u652f\u6301CRF\u3001Bi-LSTM-CRF\u3001CNN-LSTM\u3001DGCNN\u3001Bi-LSTM-LAN\u3001Lattice-LSTM-Batch\u3001MRC\u7b49\u5e8f\u5217\u6807\u6ce8\u7b97\u6cd5\u3002"}
{"name":"linkedai\/flip","full_name":"LinkedAi\/flip","topics":["synthetic-data","generated-labels","computer-vision","object-detection","deep-learning"],"description":"Synthetic Image generation with Flip. Generate thousands of new 2D images from a small batch of objects and backgrounds."}
{"name":"boschresearch\/unetgan","full_name":"boschresearch\/unetgan","topics":["gan","image-generation","cvpr2020","computer-vision","machine-learning","ffhq","unet-gan","biggan","bcai","u-net","generative-adversarial-network"],"description":"Official Implementation of the paper \"A U-Net Based Discriminator for Generative Adversarial Networks\" (CVPR 2020)"}
{"name":"lucidrains\/tab-transformer-pytorch","full_name":"lucidrains\/tab-transformer-pytorch","topics":["artificial-intelligence","deep-learning","transformer","attention-mechanism","tabular-data"],"description":"Implementation of TabTransformer, attention network for tabular data, in Pytorch"}
{"name":"kaleidophon\/deep-significance","full_name":"Kaleidophon\/deep-significance","topics":["significance-testing","deep-learning","dl","hypothesis-testing","hypothesis-tests","statistical-significance","statistical-significance-test","machine-learning","ml","deeplearning","machinelearning","compare-scores","deep-neural-networks"],"description":"Enabling easy statistical significance testing for deep neural networks. "}
{"name":"malllabiisc\/compgcn","full_name":"malllabiisc\/CompGCN","topics":["link-prediction","relation-embeddings","iclr2020","graph-convolutional-networks","deep-learning","pytorch","graph-representation-learning"],"description":"ICLR 2020: Composition-Based Multi-Relational Graph Convolutional Networks"}
{"name":"janspiry\/palette-image-to-image-diffusion-models","full_name":"Janspiry\/Palette-Image-to-Image-Diffusion-Models","topics":["ddpm","image-restoration","ddp","implementation","pytorch","diffusion-model"],"description":"Unofficial implementation of Palette: Image-to-Image Diffusion Models by Pytorch"}
{"name":"bubbliiiing\/centernet-pytorch","full_name":"bubbliiiing\/centernet-pytorch","topics":[],"description":"\u8fd9\u662f\u4e00\u4e2acenternet-pytorch\u7684\u6e90\u7801\uff0c\u53ef\u4ee5\u7528\u4e8e\u8bad\u7ec3\u81ea\u5df1\u7684\u6a21\u578b\u3002"}
{"name":"zsyzzsoft\/co-mod-gan","full_name":"zsyzzsoft\/co-mod-gan","topics":["image-completion","image-inpainting","image-to-image-translation","iclr2021","gans","tensorflow","generative-adversarial-network"],"description":"[ICLR 2021, Spotlight] Large Scale Image Completion via Co-Modulated Generative Adversarial Networks"}
{"name":"lornatang\/srgan-pytorch","full_name":"Lornatang\/SRGAN-PyTorch","topics":["srgan-pytorch","resolution","aritificial-intelligence","pytorch","gan"],"description":"A simple and complete implementation of super-resolution paper."}
{"name":"owen-liuyuxuan\/visualdet3d","full_name":"Owen-Liuyuxuan\/visualDet3D","topics":["computer-vision","object-detection","stereo-3d-detection","icra","monocular-3d-detection","pytorch"],"description":"Official Repo for Ground-aware Monocular 3D Object Detection for Autonomous Driving \/ YOLOStereo3D: A Step Back to 2D for Efficient Stereo 3D Detection"}
{"name":"extreme-bert\/extreme-bert","full_name":"extreme-bert\/extreme-bert","topics":["machine-learning","natural-language-processing","nlp","python","deep-learning","bert","language-model","language-models","pytorch","transformer"],"description":"ExtremeBERT is a toolkit that accelerates the pretraining of customized language models on customized datasets, described in the paper \u201cExtremeBERT: A Toolkit for Accelerating Pretraining of Customized BERT\u201d."}
{"name":"bubbliiiing\/faster-rcnn-keras","full_name":"bubbliiiing\/faster-rcnn-keras","topics":[],"description":"\u8fd9\u662f\u4e00\u4e2afaster-rcnn\u7684keras\u5b9e\u73b0\u7684\u5e93\uff0c\u53ef\u4ee5\u5229\u7528voc\u6570\u636e\u96c6\u683c\u5f0f\u7684\u6570\u636e\u8fdb\u884c\u8bad\u7ec3\u3002"}
{"name":"pinto0309\/openvino2tensorflow","full_name":"PINTO0309\/openvino2tensorflow","topics":["openvino","tensorflow","pytorch","onnx","tensorflow-lite","keras","coreml","tf-trt","tensorrt","edgetpu","caffe","mxnet","tflite","tfjs","tensorflowjs","converter","models-converter","docker"],"description":"This script converts the ONNX\/OpenVINO IR model to Tensorflow's saved_model, tflite, h5, tfjs, tftrt(TensorRT), CoreML, EdgeTPU, ONNX and pb. PyTorch (NCHW) -> ONNX (NCHW) -> OpenVINO (NCHW) -> openvino2tensorflow -> Tensorflow\/Keras (NHWC\/NCHW) -> TFLite (NHWC\/NCHW). And the conversion from .pb to saved_model and from saved_model to .pb and from .pb to .tflite and saved_model to .tflite and saved_model to onnx. Support for building environments with Docker. It is possible to directly access the host PC GUI and the camera to verify the operation. NVIDIA GPU (dGPU) support. Intel iHD GPU (iGPU) support."}
{"name":"wonjongg\/stylecarigan","full_name":"wonjongg\/StyleCariGAN","topics":["deep-learning","pytorch"],"description":"[SIGGRAPH 2021] Official implementation of \"StyleCariGAN: Caricature Generation via StyleGAN Feature Map Modulation\""}
{"name":"saic-vul\/ritm_interactive_segmentation","full_name":"saic-vul\/ritm_interactive_segmentation","topics":["interactive-segmentation","segmentation","pytorch","pretrained-models","hrnets"],"description":"Reviving Iterative Training with Mask Guidance for Interactive Segmentation"}
{"name":"zielon\/mica","full_name":"Zielon\/MICA","topics":["3dmm","computer-vision","machine-learning","neural-network","flame","fitting-algorithm","optimization"],"description":"MICA - Towards Metrical Reconstruction of Human Faces [ECCV2022]"}
{"name":"boschresearch\/oasis","full_name":"boschresearch\/OASIS","topics":["semantic-image-synthesis","gan","image-to-image-translation","computer-vision","multi-modal","generative-adversarial-networks","deep-learning","pytorch","image-generation","label-to-image-translation","oasis","iclr2021","machine-learning","bcai"],"description":"Official implementation of the paper \"You Only Need Adversarial Supervision for Semantic Image Synthesis\" (ICLR 2021)"}
{"name":"enot-autodl\/onnx2torch","full_name":"ENOT-AutoDL\/onnx2torch","topics":["onnx","pytorch","convert","export"],"description":"Convert ONNX models to PyTorch."}
{"name":"theaiguyscode\/object-detection-api","full_name":"theAIGuysCode\/Object-Detection-API","topics":["yolov3","object-detection","tensorflow","yolo","inference","deep-learning"],"description":"Yolov3 Object Detection implemented as APIs, using TensorFlow and Flask"}
{"name":"gordicaleksa\/pytorch-gans","full_name":"gordicaleksa\/pytorch-GANs","topics":["gans","generative-adversarial-nets","generative-adversarial-networks","vanilla-gan","conditional-gan","dc-gan","pytorch","python","machine-learning","deep-learning","deep-learning-tutorial","gan-tutorial"],"description":"My implementation of various GAN (generative adversarial networks) architectures like vanilla GAN (Goodfellow et al.), cGAN (Mirza et al.), DCGAN (Radford et al.), etc."}
{"name":"fabro66\/gast-net-3dposeestimation","full_name":"fabro66\/GAST-Net-3DPoseEstimation","topics":["pytorch","gast-net","3d-pose-estimation-video"],"description":"A Graph Attention Spatio-temporal Convolutional Networks for 3D Human Pose Estimation in Video (GAST-Net)"}
{"name":"liyuanlucasliu\/transformer-clinic","full_name":"LiyuanLucasLiu\/Transformer-Clinic","topics":["transformer","nmt","initialization","wmt"],"description":"Understanding the Difficulty of Training Transformers"}
{"name":"fudan-zvg\/soft","full_name":"fudan-zvg\/SOFT","topics":["transformer","linear-transformer","self-attention","linear-complexity","softmax-free"],"description":"[NeurIPS 2021 Spotlight] SOFT: Softmax-free Transformer with Linear Complexity"}
{"name":"hyunwoongko\/kss","full_name":"hyunwoongko\/kss","topics":["nlp","korean","kss","sentences","split-sentences","korean-nlp"],"description":"Kss: A Toolkit for Korean sentence segmentation"}
{"name":"chatopera\/efa.corpus.osc","full_name":"chatopera\/efaqa-corpus-zh","topics":["natural-language-processing","natural-language-understanding","corpus","psychology"],"description":"\u2764\ufe0fEmotional First Aid Dataset, \u5fc3\u7406\u54a8\u8be2\u95ee\u7b54\u3001\u804a\u5929\u673a\u5668\u4eba\u8bed\u6599\u5e93"}
{"name":"jaywalnut310\/glow-tts","full_name":"jaywalnut310\/glow-tts","topics":["pytorch","speech-synthesis","tts","deep-learning","text-to-speech"],"description":"A Generative Flow for Text-to-Speech via Monotonic Alignment Search"}
{"name":"cool-rr\/marley","full_name":"cool-RR\/marley","topics":["hacktoberfest","machine-learning","reinforcement-learning","ai","q-learning","python","keras","tensorflow"],"description":"A framework for multi-agent reinforcement learning."}
{"name":"omerbt\/text2live","full_name":"omerbt\/Text2LIVE","topics":["eccv2022","image-editing","text2live","clip","generative-model","image-manipulation","video-editing","text-driven-editing","single-image","single-video"],"description":"Official Pytorch Implementation for \"Text2LIVE: Text-Driven Layered Image and Video Editing\" (ECCV 2022 Oral)"}
{"name":"krasserm\/perceiver-io","full_name":"krasserm\/perceiver-io","topics":["perceiver","deep-learning","machine-learning","pytorch","pytorch-lightning","perceiver-io","perceiver-ar"],"description":"A PyTorch implementation of Perceiver, Perceiver IO and Perceiver AR with PyTorch Lightning scripts for distributed training"}
{"name":"zhen-dong\/hawq","full_name":"Zhen-Dong\/HAWQ","topics":["quantization","tvm","model-compression","distillation","quantized-neural-networks","pytorch","hardware-aware","mixed-precision","efficient-neural-networks","8-bit","4-bit","tensorcore","hessian"],"description":"Quantization library for PyTorch. Support low-precision and mixed-precision quantization, with hardware implementation through TVM."}
{"name":"i-hope-peace\/changedetectionrepository","full_name":"ChenHongruixuan\/ChangeDetectionRepository","topics":["remote-sensing","change-detection","image-processing","multi-temporal","deep-learning","python"],"description":"This repository contains some python code of some traditional change detection methods or provides their original websites, such as SFA, MAD, and some deep learning-based change detection methods, such as SiamCRNN, DSFA, and some FCN-based methods. "}
{"name":"abhimishra91\/insight","full_name":"abhimishra91\/insight","topics":["fastapi","streamlit","streamlit-webapp","natural-language-processing","nlp","machine-learning","transformer","huggingface-transformer","huggingface","docker","microservice","transformers-models"],"description":"Repository for Project Insight: NLP as a Service"}
{"name":"nvlabs\/sionna","full_name":"NVlabs\/sionna","topics":["communications","5g","6g","machine-learning","deep-learning","link-level-simulation","reproducible-research","open-source","gpu-acceleration"],"description":"Sionna: An Open-Source Library for Next-Generation Physical Layer Research"}
{"name":"soubhiksanyal\/flame_pytorch","full_name":"soubhiksanyal\/FLAME_PyTorch","topics":["3d-models","morphable-model","face-model","computer-vision","computer-graphics","python3","pytorch","flame","3d","3d-graphics","3d-reconstruction","fitting","face","3d-landmarks","dynamic-conture","pose-dependent-conture","statistical-models","3d-mesh","face-reconstruction","flame-model"],"description":"This is a implementation of the 3D FLAME model in PyTorch"}
{"name":"tjddus9597\/proxy-anchor-cvpr2020","full_name":"tjddus9597\/Proxy-Anchor-CVPR2020","topics":["proxy-anchor-loss","cvpr2020","deep-metric-learning","image-retrieval","pytorch"],"description":"Official PyTorch Implementation of Proxy Anchor Loss for Deep Metric Learning, CVPR 2020"}
{"name":"dena\/handyrl","full_name":"DeNA\/HandyRL","topics":["reinforcement-learning","pytorch","games","policy-gradient","deep-learning","machine-learning","distributed-training"],"description":"HandyRL is a handy and simple framework based on Python and PyTorch for distributed reinforcement learning that is applicable to your own environments."}
{"name":"atten4vis\/conditionaldetr","full_name":"Atten4Vis\/ConditionalDETR","topics":["transformer","detr","object-detection","iccv2021"],"description":"This repository is an official implementation of the ICCV 2021 paper \"Conditional DETR for Fast Training Convergence\". (https:\/\/arxiv.org\/abs\/2108.06152)"}
{"name":"g-u-n\/pycil","full_name":"G-U-N\/PyCIL","topics":["incremental-learning","lifelong-learning","continual-learning","machine-learning","reproducible-research","deep-learning","pytorch"],"description":"PyCIL: A Python Toolbox for Class-Incremental Learning"}
{"name":"astrazeneca\/rexmex","full_name":"AstraZeneca\/rexmex","topics":["deep-learning","machine-learning","coverage","personalization","mrr","ranking","rank","recall","precision","rsquared","evaluation","metrics","recsys","recommender","recommender-system","metric"],"description":"A general purpose recommender metrics library for fair evaluation."}
{"name":"1033020837\/basic4ai","full_name":"1033020837\/Basic4AI","topics":["ai","nlp","machine-learning","python"],"description":"\u673a\u5668\u5b66\u4e60\u3001\u6df1\u5ea6\u5b66\u4e60\u3001\u81ea\u7136\u8bed\u8a00\u5904\u7406\u7b49\u4eba\u5de5\u667a\u80fd\u57fa\u7840\u77e5\u8bc6\u603b\u7ed3\u3002"}
{"name":"datamllab\/autovideo","full_name":"datamllab\/autovideo","topics":["automl","video","deep-learning","video-recognition","automated"],"description":"AutoVideo: An Automated Video Action Recognition System"}
{"name":"dazinovic\/neural-rgbd-surface-reconstruction","full_name":"dazinovic\/neural-rgbd-surface-reconstruction","topics":["3d-reconstruction","computer-vision","deep-learning","computer-graphics"],"description":"Official implementation of the CVPR 2022 Paper \"Neural RGB-D Surface Reconstruction\""}
{"name":"lucidrains\/siren-pytorch","full_name":"lucidrains\/siren-pytorch","topics":["artificial-intelligence","deep-learning","activation-functions"],"description":"Pytorch implementation of SIREN -  Implicit Neural Representations with Periodic Activation Function"}
{"name":"leonlok\/deep-sort-yolov4","full_name":"LeonLok\/Deep-SORT-YOLOv4","topics":["yolov4","deep-sort","deep-sort-tracking","people-tracker","people-tracking","asynchronous","asynchronous-io","yolo","tensorflow","asynchronous-processing","tracking-algorithm","object-detection","object-tracking","tensorflow2","detection-algorithm","yolov3"],"description":"People detection and optional tracking with Tensorflow backend."}
{"name":"dessa-oss\/atlas","full_name":"dessa-oss\/atlas","topics":["machine-learning","data-science","artificial-intelligence","python","deep-learning","gpu","ai","ml","model-management"],"description":"An Open Source, Self-Hosted Platform For Applied Deep Learning Development"}
{"name":"jacobgil\/vit-explain","full_name":"jacobgil\/vit-explain","topics":["vision-transformer","pytorch","explainable-ai","deep-learning","transformer"],"description":"Explainability for Vision Transformers"}
{"name":"avbuffer\/yolov5_tf","full_name":"avBuffer\/Yolov5_tf","topics":["yolov5","yolov4","yolov3","tensorflow","yolo-tiny","tensorflow2","mobilenetv2","mobilenetv3"],"description":"Yolov5\/Yolov4\/ Yolov3\/ Yolo_tiny  in tensorflow"}
{"name":"openbmb\/bmlist","full_name":"OpenBMB\/BMList","topics":["api","code","computer-vision","deep-learning","nlp","paper","pretrained-models","speech-recognition","visualization","natural-language-processing","ai"],"description":"A List of Big Models"}
{"name":"jusperlee\/dual-path-rnn-pytorch","full_name":"JusperLee\/Dual-Path-RNN-Pytorch","topics":["pytorch","speech-separation-algorithm","deep-learning","rnn-model","speech-separation"],"description":"Dual-path RNN: efficient long sequence modeling for time-domain single-channel speech separation implemented by Pytorch"}
{"name":"crishy1995\/headnerf","full_name":"CrisHY1995\/headnerf","topics":[],"description":"This repository contains a pytorch implementation of \"HeadNeRF: A Real-time NeRF-based Parametric Head Model (CVPR 2022)\"."}
{"name":"open-mmlab\/mmengine","full_name":"open-mmlab\/mmengine","topics":["computer-vision","deep-learning","pytorch"],"description":"OpenMMLab Foundational Library for Training Deep Learning Models"}
{"name":"dsxiangli\/ctr","full_name":"DSXiangLi\/CTR","topics":["ctr-prediction","recommendation-algorithms","wide-and-deep","fm","ffm","tensorflow","pnn","fnn","deepfm","afm","nfm","frappe","deep-cross","dcn","xdeepfm","fibinet","deepinterestnetwork"],"description":"CTR\u6a21\u578b\u4ee3\u7801\u548c\u5b66\u4e60\u7b14\u8bb0\u603b\u7ed3"}
{"name":"lucidrains\/transformer-in-transformer","full_name":"lucidrains\/transformer-in-transformer","topics":["artificial-intelligence","deep-learning","transformers","image-classification"],"description":"Implementation of Transformer in Transformer, pixel level attention paired with patch level attention for image classification, in Pytorch"}
{"name":"skylark0924\/machine-learning-is-all-you-need","full_name":"Skylark0924\/Machine-Learning-is-ALL-You-Need","topics":["deep-reinforcement-learning","keras","pytorch","tensorflow","convolutional-neural-networks","lstm","dqn","ddpg","actor-critic","ppo","trpo","qlearning","logistic-regression","support-vector-machine","k-nearest-neighbours","naive-bayes-classifier","decision-trees","random-forest","gan","resnet"],"description":"\ud83d\udd25\ud83c\udf1f\u300aMachine Learning \u683c\u7269\u5fd7\u300b: ML + DL + RL basic codes and notes by sklearn, PyTorch, TensorFlow, Keras & the most important, from scratch!\ud83d\udcaa This repository is ALL You Need!"}
{"name":"duanshengliu\/end-to-end-for-chinese-plate-recognition","full_name":"duanshengliu\/End-to-end-for-chinese-plate-recognition","topics":["tensorflow","keras","computer-vision","image-segmentation","image-recognition","opencv","python"],"description":"\u57fa\u4e8eu-net\uff0ccv2\u4ee5\u53cacnn\u7684\u4e2d\u6587\u8f66\u724c\u5b9a\u4f4d\uff0c\u77eb\u6b63\u548c\u7aef\u5230\u7aef\u8bc6\u522b\u8f6f\u4ef6\uff0c\u5176\u4e2dunet\u548ccv2\u7528\u4e8e\u8f66\u724c\u5b9a\u4f4d\u548c\u77eb\u6b63\uff0ccnn\u8fdb\u884c\u8f66\u724c\u8bc6\u522b\uff0cunet\u548ccnn\u90fd\u662f\u57fa\u4e8etensorflow\u7684keras\u5b9e\u73b0"}
{"name":"apple\/ml-gmpi","full_name":"apple\/ml-gmpi","topics":["3d","eccv2022","generative-adversarial-network","neural-rendering","pytorch","generative-model","multiplane-images"],"description":"Official PyTorch implementation of GMPI (ECCV 2022, Oral Presentation)"}
{"name":"cool-rr\/grid_royale","full_name":"cool-RR\/marley","topics":["hacktoberfest","machine-learning","reinforcement-learning","ai","q-learning","python","keras","tensorflow"],"description":"A framework for multi-agent reinforcement learning."}
{"name":"wangt-cn\/vc-r-cnn","full_name":"Wangt-CN\/VC-R-CNN","topics":[],"description":"[CVPR 2020] The official pytorch implementation of ``Visual Commonsense R-CNN''"}
{"name":"natooz\/miditok","full_name":"Natooz\/MidiTok","topics":["midi","music","deep-learning","generative-model","music-generation","music-information-retrieval","machine-learning"],"description":"Convenient MIDI \/ symbolic music tokenizers for Deep Learning networks \ud83c\udfb6"}
{"name":"feipan664\/intrada","full_name":"feipan664\/IntraDA","topics":["pytorch","domain-adaptation","semantic-segmentation"],"description":"Unsupervised Intra-domain Adaptation for Semantic Segmentation through Self-Supervision (CVPR 2020 Oral)"}
{"name":"zjunlp\/openue","full_name":"zjunlp\/OpenUE","topics":["triple-extraction","relation-extraction","named-entity-recognition","event-extraction","intent-classification","slot-filling","nlp-extraction-tasks","openue","nlp","pytorch","bert","natural-language-processing"],"description":"OpenUE\u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u77e5\u8bc6\u56fe\u8c31\u62bd\u53d6\u5de5\u5177 (An Open Toolkit for Universal  Extraction from Text published at EMNLP2020: https:\/\/aclanthology.org\/2020.emnlp-demos.1.pdf)"}
{"name":"peteryux\/retinaface-tf2","full_name":"peteryuX\/retinaface-tf2","topics":["facedetection","face-detection","retinaface","retinaface-detector","tensorflow","tensorflow2","tf2","resnet-50","mobilenetv2","colab-notebook","colab"],"description":"RetinaFace (Single-stage Dense Face Localisation in the Wild, 2019) implemented (ResNet50, MobileNetV2 trained on single GPU) in Tensorflow 2.0+. This is an unofficial implementation. With Colab."}
{"name":"yeyupiaoling\/masr","full_name":"yeyupiaoling\/MASR","topics":["deepspeech","pytorch","asr","deep-learning","speech-recognition","speech-to-text","speech","conformer","squeezeformer"],"description":"Pytorch\u5b9e\u73b0\u7684\u6d41\u5f0f\u4e0e\u975e\u6d41\u5f0f\u7684\u81ea\u52a8\u8bed\u97f3\u8bc6\u522b\u6846\u67b6\uff0c\u540c\u65f6\u517c\u5bb9\u5728\u7ebf\u548c\u79bb\u7ebf\u8bc6\u522b\uff0c\u76ee\u524d\u652f\u6301Conformer\u3001Squeezeformer\u3001DeepSpeech2\u6a21\u578b\uff0c\u652f\u6301\u591a\u79cd\u6570\u636e\u589e\u5f3a\u65b9\u6cd5\u3002"}
{"name":"duncanzauss\/keypoint_communities","full_name":"DuncanZauss\/Keypoint_Communities","topics":["deep-learning","computer-vision","human-pose-estimation","pose-estimation","ms-coco","ms-coco-keypoints","coco-wholebody"],"description":"[ICCV '21] In this repository you find the code to our paper \"Keypoint Communities\"."}
{"name":"hancyran\/repsurf","full_name":"hancyran\/RepSurf","topics":["cvpr2022","modelnet40","point-cloud","pytorch","s3dis","scannet","scanobjectnn","sunrgbd"],"description":"[CVPR 2022 Oral] Official implementation for \"Surface Representation for Point Clouds\""}
{"name":"mhamilton723\/stego","full_name":"mhamilton723\/STEGO","topics":["computer-vision","deep-learning","iclr2022","pytorch","semantic-segmentation","unsupervised-learning"],"description":"Unsupervised Semantic Segmentation by Distilling Feature Correspondences"}
{"name":"hustvl\/maptr","full_name":"hustvl\/MapTR","topics":["bev","end-to-end","real-time","transformer","online-hdmap-construction","shape-representation","vectorized-hdmap","autonomous-driving","iclr2023"],"description":"[ICLR'23 Spotlight] MapTR: Structured Modeling and Learning for Online Vectorized HD Map Construction"}
{"name":"wwzzz\/easyfl","full_name":"WwZzz\/easyFL","topics":["pytorch","federated-learning","distributed-computing","deep-learning","fairness","machine-learning"],"description":"An experimental platform to quickly realize and compare with popular centralized federated learning algorithms. A realization of federated learning algorithm on fairness (FedFV, Federated Learning with Fair Averaging,  https:\/\/fanxlxmu.github.io\/publication\/ijcai2021\/)  was accepted by IJCAI-21 (https:\/\/www.ijcai.org\/proceedings\/2021\/223)."}
{"name":"merantix-momentum\/squirrel-core","full_name":"merantix-momentum\/squirrel-core","topics":["python","ml","machine-learning","data-science","computer-vision","cv","nlp","natural-language-processing","ai","pytorch","tensorflow","jax","datasets","distributed","dataops","collaboration","deep-learning","data-mesh","data-ingestion","cloud-computing"],"description":"A Python library that enables ML teams to share, load, and transform data in a collaborative, flexible, and efficient way :chestnut:"}
{"name":"digitalphonetics\/ims-toucan","full_name":"DigitalPhonetics\/IMS-Toucan","topics":["text-to-speech","toolkit","speech-synthesis","deep-learning","speech-processing","tts","pytorch","speech"],"description":"Text-to-Speech Toolkit of the Speech and Language Technologies Group at the University of Stuttgart. Objectives of the development are simplicity, modularity, controllability and multilinguality."}
{"name":"richarddwang\/electra_pytorch","full_name":"richarddwang\/electra_pytorch","topics":["electra","pytorch","fastai","huggingface","glue","language-model","deeplearning","nlp"],"description":"Pretrain and finetune ELECTRA with fastai and huggingface. (Results of the paper replicated !)"}
{"name":"moon-hotel\/bertwithpretrained","full_name":"moon-hotel\/BertWithPretrained","topics":["bert","pytorch","nlp","swag","deep-learning","pretrained-models","question-answering","squad","text-classification"],"description":"An implementation of the BERT model and its related downstream tasks based on the PyTorch framework"}
{"name":"cfzd\/ultra-fast-lane-detection-v2","full_name":"cfzd\/Ultra-Fast-Lane-Detection-v2","topics":["deep-learning","lane-detection","pytorch"],"description":"Ultra Fast Deep Lane Detection With Hybrid Anchor Driven Ordinal Classification (TPAMI 2022)"}
{"name":"asahi417\/tner","full_name":"asahi417\/tner","topics":["nlp","transformers","named-entity-recognition","language-model"],"description":"Language model fine-tuning on NER with an easy interface and cross-domain evaluation. \"T-NER: An All-Round Python Library for Transformer-based Named Entity Recognition, EACL 2021\""}
{"name":"thudm\/swissarmytransformer","full_name":"THUDM\/SwissArmyTransformer","topics":["pytorch","transformer","pretrained-models"],"description":"SwissArmyTransformer is a flexible and powerful library to develop your own Transformer variants."}
{"name":"qgallouedec\/panda-gym","full_name":"qgallouedec\/panda-gym","topics":["franka-emika","robotics","reinforcement-learning","python","deep-learning","machine-learning","artificial-intelligence"],"description":"Set of robotic environments based on PyBullet physics engine and gymnasium."}
{"name":"microsoft\/nn-meter","full_name":"microsoft\/nn-Meter","topics":["python","deep-neural-networks","latency","inference","edge-computing","edge-ai","tensorflow-models","onnx-models","pytorch","machine-learning","deep-learning","neural-architecture-search","efficient-model"],"description":"A DNN inference latency prediction toolkit for accurately modeling and predicting the latency on diverse edge devices. "}
{"name":"muqiujun-ai\/bert4pytorch","full_name":"MuQiuJun-AI\/bert4pytorch","topics":["pytorch","bert","nlp","transformer"],"description":"\u8d85\u8f7b\u91cf\u7ea7bert\u7684pytorch\u7248\u672c\uff0c\u5927\u91cf\u4e2d\u6587\u6ce8\u91ca\uff0c\u5bb9\u6613\u4fee\u6539\u7ed3\u6784\uff0c\u6301\u7eed\u66f4\u65b0"}
{"name":"dalmia\/siren","full_name":"dalmia\/siren","topics":["machine-learning","deep-learning","pytorch","activation-functions"],"description":"PyTorch implementation of Sinusodial Representation networks (SIREN)"}
{"name":"peizhuoli\/ganimator","full_name":"PeizhuoLi\/ganimator","topics":["character-animation","computer-animation","computer-graphics","deep-learning"],"description":"A motion generation model learned from a single example [SIGGRAPH 2022]"}
{"name":"jeya-maria-jose\/kiu-net-pytorch","full_name":"jeya-maria-jose\/KiU-Net-pytorch","topics":["segmentation","medical-imaging","semantic-segmentation","deep-neural-networks","pytorch","deep-learning","medical-image-segmentation","kiunet","brats","lits-challenge"],"description":"Official Pytorch Code of KiU-Net for Image\/3D Segmentation - MICCAI 2020 (Oral), IEEE TMI"}
{"name":"lucidrains\/enformer-pytorch","full_name":"lucidrains\/enformer-pytorch","topics":["artificial-intelligence","deep-learning","gene-expression","attention-mechanism","transformer","dna-sequences","genomics"],"description":"Implementation of Enformer, Deepmind's attention network for predicting gene expression, in Pytorch"}
{"name":"megvii-research\/motr","full_name":"megvii-research\/MOTR","topics":["end-to-end","multi-object-tracking","pytorch","transformer"],"description":"[ECCV2022] MOTR: End-to-End Multiple-Object Tracking with TRansformer"}
{"name":"mlnlp-world\/simbiber","full_name":"MLNLP-World\/SimBiber","topics":["deep-learning","latex","machine-learning","natural-language-processing","python","mlnlp"],"description":"MLNLP\u793e\u533a\u7528\u6765\u5e2e\u52a9\u7f29\u77ed\u53c2\u8003\u6587\u732e\u7684\u5de5\u5177\u3002A tool for simplifying bibtex with official info"}
{"name":"waldo-vision\/optical-flow-demo","full_name":"waldo-vision\/optical.flow.demo","topics":["machine-learning","deep-learning","optical-flow","opencv","opencv-python","gaming","anticheat","fps","fps-shooter","anti-cheat"],"description":"A project that uses optical flow and machine learning to detect aimhacking in video clips."}
{"name":"rinnakk\/japanese-gpt2","full_name":"rinnakk\/japanese-pretrained-models","topics":["nlp","japanese","gpt2","roberta"],"description":"Code for producing Japanese pretrained models provided by rinna Co., Ltd."}
{"name":"lhoyer\/daformer","full_name":"lhoyer\/DAFormer","topics":["semantic-segmentation","unsupervised-domain-adaptation","transformer","cvpr2022"],"description":"[CVPR22] Official Implementation of DAFormer: Improving Network Architectures and Training Strategies for Domain-Adaptive Semantic Segmentation"}
{"name":"nianticlabs\/stereo-from-mono","full_name":"nianticlabs\/stereo-from-mono","topics":["deep-learning","deeplearning","stereo-matching","stereo","stereo-algorithms","monodepth","megadepth","monocular-depth-estimation","single-image-depth-prediction","depth-estimation"],"description":"[ECCV 2020] Learning stereo from single images using monocular depth estimation networks"}
{"name":"gajuuzz\/human-falling-detect-tracks","full_name":"GajuuzZ\/Human-Falling-Detect-Tracks","topics":["pytorch","pose-estimation","sort","st-gcn","fall-detection"],"description":"AlphaPose + ST-GCN + SORT."}
{"name":"jasonwu0731\/tod-bert","full_name":"jasonwu0731\/ToD-BERT","topics":["task-oriented-dialogues","dialogue","pretrained-models","natural-language-processing","natural-language-understanding","bert"],"description":"Pre-Trained Models for ToD-BERT"}
{"name":"jxmorris12\/language_tool_python","full_name":"jxmorris12\/language_tool_python","topics":["python","nlp","grammar","spellchecker","grammar-parser","languagetool","grammar-checker"],"description":"a free python grammar checker \ud83d\udcdd\u2705"}
{"name":"openperceptionx\/persformer_3dlane","full_name":"OpenPerceptionX\/PersFormer_3DLane","topics":["lane-detection","3d-lane-detection","autonomous-driving","computer-vision","deep-learning"],"description":"[ECCV2022 oral] Perspective Transformer on 3D Lane Detection"}
{"name":"overlappredator\/overlappredator","full_name":"prs-eth\/OverlapPredator","topics":["point-cloud","registration","3dvision","transformer","attention-mechanism"],"description":"[CVPR 2021, Oral] PREDATOR: Registration of 3D Point Clouds with Low Overlap. "}
{"name":"we0091234\/chinese_license_plate_detection_recognition","full_name":"we0091234\/Chinese_license_plate_detection_recognition","topics":["deep-learning","pytorch","plate-recognition","yolov5"],"description":"yolov5 \u8f66\u724c\u68c0\u6d4b   \u8f66\u724c\u8bc6\u522b   \u4e2d\u6587\u8f66\u724c\u8bc6\u522b \u68c0\u6d4b \u652f\u630113\u79cd\u4e2d\u6587\u8f66\u724c \u652f\u6301\u53cc\u5c42\u8f66\u724c"}
{"name":"aiff22\/pynet","full_name":"aiff22\/PyNET","topics":["pynet","image-enhancement","image-processing","image-reconstruction","deep-learning","raw-to-rgb","computer-vision","mobile","photography","isp","camera","image-to-image-translation","raw","photos"],"description":"Generating RGB photos from RAW image files with PyNET"}
{"name":"vector-ai\/vectorai","full_name":"vector-ai\/vectorai","topics":["python","vector","embeddings","encodings","search","semantic-search","search-engine","machine-learning","artificial-intelligence","neural-networks","deep-learning","clustering","tensorflow","pytorch","transformers","vector-similarity","vector-search","vector-similarity-database","vector-analytics","compare-vectors"],"description":"Vector AI \u2014 A platform for building vector based applications. Encode, query and analyse data using vectors. "}
{"name":"hanqer\/deep-hough-transform","full_name":"Hanqer\/deep-hough-transform","topics":["jittor","hough-transform","deep-learning"],"description":"Jittor and Pytorch code for paper \"Deep Hough Transform for Semantic Line Detection\" (ECCV 2020, PAMI 2021)"}
{"name":"clovaai\/synthtiger","full_name":"clovaai\/synthtiger","topics":["ocr","recognition","synthetic","generation","dataset","deep-learning","ocr-recognition","text-recognition","icdar2021","scene-text-recognition","scene-text"],"description":"Official Implementation of SynthTIGER (Synthetic Text Image Generator), ICDAR 2021"}
{"name":"antao97\/dgcnn.pytorch","full_name":"antao97\/dgcnn.pytorch","topics":["point-cloud","classification","segmentation","pytorch"],"description":"A PyTorch implementation of Dynamic Graph CNN for Learning on Point Clouds (DGCNN)"}
{"name":"shadow2496\/viton-hd","full_name":"shadow2496\/VITON-HD","topics":["pytorch","deep-learning"],"description":"Official PyTorch implementation of \"VITON-HD: High-Resolution Virtual Try-On via Misalignment-Aware Normalization\" (CVPR 2021)"}
{"name":"dome272\/diffusion-models-pytorch","full_name":"dome272\/Diffusion-Models-pytorch","topics":[],"description":"Pytorch implementation of Diffusion Models (https:\/\/arxiv.org\/pdf\/2006.11239.pdf)"}
{"name":"jermmy\/pytorch-quantization-demo","full_name":"Jermmy\/pytorch-quantization-demo","topics":[],"description":"A simple network quantization demo using pytorch from scratch."}
{"name":"weiyithu\/nerfingmvs","full_name":"weiyithu\/NerfingMVS","topics":["computer-vision","deep-learning","3d-reconstruction","3dvision","neural-radiance-fields","multi-view-stereo"],"description":"[ICCV 2021 Oral] NerfingMVS: Guided Optimization of Neural Radiance Fields for Indoor Multi-view Stereo"}
{"name":"operatorai\/modelstore","full_name":"operatorai\/modelstore","topics":["python-library","modelstore","machine-learning","data-science","scikit-learn","pytorch","tensorflow","mlops","s3-storage","transformer","keras"],"description":"\ud83c\udfec modelstore is a Python library that allows you to version, export, and save a machine learning model to your filesystem or a cloud storage provider."}
{"name":"stanislasbertrand\/retinaface-tf2","full_name":"StanislasBertrand\/RetinaFace-tf2","topics":["face-detection","retinaface","tf2","tensorflow2","tensorflow","deep-learning","insightface"],"description":"RetinaFace (RetinaFace: Single-stage Dense Face Localisation in the Wild, published in 2019) reimplemented in Tensorflow 2.0, with pretrained weights available ! "}
{"name":"gangweix\/acvnet","full_name":"gangweiX\/ACVNet","topics":["pytorch","stereo-matching","stereo-vision","cost-volume"],"description":"ACVNet: Attention Concatenation Volume for Accurate and Efficient Stereo Matching (CVPR 2022)"}
{"name":"ai4bharat\/indic-bert","full_name":"AI4Bharat\/indic-bert","topics":["indian-languages","bert","multilingual-models","language-model","nlp"],"description":"BERT-based Multilingual Model for Indian Languages"}
{"name":"caillonantoine\/rave","full_name":"acids-ircam\/RAVE","topics":["deep-learning","neural-network","audio","generative-model","ai"],"description":"Official implementation of the RAVE model: a Realtime Audio Variational autoEncoder"}
{"name":"miemie2013\/miemiedetection","full_name":"miemie2013\/miemiedetection","topics":["yolox","yolo","yolov3","ppyolo","fcos","ppyolov2","ppyoloe","ncnn","solo","solov2"],"description":"Pytorch and ncnn implementation of PPYOLOE\u3001YOLOX\u3001PPYOLO\u3001PPYOLOv2\u3001SOLOv2 an so on."}
{"name":"galliot-us\/neuralet","full_name":"galliot-us\/neuralet","topics":["edge-ai","edgetpu","deep-learning","deep-neural-networks","jetson-nano","edge-computing","coral-tpu","jetsonnano","jetson-nano-developer-kit","ros-kinetic","ros","ros-melodic","object-detection","social-distancing","social-distancing-detection","edge-tpu"],"description":"Neuralet is an open-source platform for edge deep learning models on edge TPU, Jetson Nano, and more. "}
{"name":"vincentstimper\/normalizing-flows","full_name":"VincentStimper\/normalizing-flows","topics":["normalizing-flow","variational-autoencoder","variational-inference","real-nvp","residual-flow","glow","pytorch","neural-spline-flow","density-estimation","invertible-neural-networks"],"description":"PyTorch implementation of normalizing flow models"}
{"name":"graykode\/commit-autosuggestions","full_name":"graykode\/commit-autosuggestions","topics":["commit-autosuggestions","natural-language","bert","text-generation","nlp"],"description":"A tool that AI automatically recommends commit messages."}
{"name":"haochen-wang409\/u2pl","full_name":"Haochen-Wang409\/U2PL","topics":["mechine-learning","computer-vision","semantic-segmentation","semi-supervised-learning","contrastive-learning","cvpr2022","pytorch","cityscapes","pascal-voc","deep-learning"],"description":"[CVPR'22] Semi-Supervised Semantic Segmentation Using Unreliable Pseudo-Labels"}
{"name":"sithu31296\/semantic-segmentation","full_name":"sithu31296\/semantic-segmentation","topics":["semantic-segmentation","pytorch","transformer","vision-transformer","cityscapes","ade20k","camvid","coco-stuff","pascal-context","deep-learning","dataset"],"description":"SOTA Semantic Segmentation Models in PyTorch"}
{"name":"sangwoomo\/freezed","full_name":"sangwoomo\/FreezeD","topics":["generative-models","generative-adversarial-network","transfer-learning","gan"],"description":"Freeze the Discriminator: a Simple Baseline for Fine-Tuning GANs (CVPRW 2020)"}
{"name":"deepvac\/deepvac","full_name":"DeepVAC\/deepvac","topics":["pytorch","deepvac","python","tensorboard","quantization","amp","torchscript","onnx","ncnn","coreml","ddp","tensorrt"],"description":"PyTorch Project Specification."}
{"name":"sjtmusicteam\/muskits","full_name":"SJTMusicTeam\/Muskits","topics":["music-synthesis","pytorch","singing-synthesis","singing-voice-synthesis"],"description":"An opensource music processing toolkit"}
{"name":"maclory\/deep-iterative-collaboration","full_name":"Maclory\/Deep-Iterative-Collaboration","topics":["image-restoration","super-resolution","face-hallucination","deep-learning","computer-vision","iterative-reconstruction"],"description":"Pytorch implementation of Deep Face Super-Resolution with Iterative Collaboration between Attentive Recovery and Landmark Estimation (CVPR 2020)"}
{"name":"ranchlai\/mandarin-tts","full_name":"ranchlai\/mandarin-tts","topics":["tts","tts-chinese","tts-hanzi","tacotron","pytorch","fastspeech2","aishell3","multi-speaker"],"description":"Chinese Mandarin tts text-to-speech  \u4e2d\u6587 (\u666e\u901a\u8bdd) \u8bed\u97f3 \u5408\u6210 , by fastspeech 2 , implemented in pytorch, using waveglow as vocoder,  with biaobei and aishell3 datasets"}
{"name":"microsoft\/rat-sql","full_name":"microsoft\/rat-sql","topics":["program-synthesis","semantic-parsing","nlp","question-answering","dbqa","nl2sql","transformers"],"description":"A relation-aware semantic parsing model from English to SQL"}
{"name":"torchsynth\/torchsynth","full_name":"torchsynth\/torchsynth","topics":["audio","synthesizers","gpu","torch","machine-learning","pytorch"],"description":"A GPU-optional modular synthesizer in pytorch, 16200x faster than realtime, for audio ML researchers."}
{"name":"neuml\/tldrstory","full_name":"neuml\/tldrstory","topics":["python","search","nlp","machine-learning","txtai"],"description":"\ud83d\udcca Semantic search for headlines and story text"}
{"name":"yzd-v\/fgd","full_name":"yzd-v\/FGD","topics":["object-detection","knowledge-distillation","deep-learning","pytorch"],"description":"Focal and Global Knowledge Distillation for Detectors (CVPR 2022)"}
{"name":"zhanggongjie\/meta-detr","full_name":"ZhangGongjie\/Meta-DETR","topics":["object-detection","few-shot-object-detection","meta-learning","computer-vision","pytorch"],"description":"[T-PAMI  2022]  Meta-DETR for Few-Shot Object Detection: Official PyTorch Implementation"}
{"name":"tobran\/df-gan","full_name":"tobran\/DF-GAN","topics":["generative-adversarial-network","text-to-image"],"description":" A Simple and Effective Baseline for Text-to-Image Synthesis (CVPR2022 oral)"}
{"name":"jrieke\/awesome-machine-learning-startups-berlin","full_name":"jrieke\/awesome-machine-learning-startups-berlin","topics":["machine-learning","artificial-intelligence","startups","startup","berlin","germany","berlin-startup-jobs","deep-learning"],"description":"\ud83e\udd16 A curated list of machine learning & artificial intelligence startups in Berlin (Germany)"}
{"name":"tzysjtu\/sketch-generation-with-drawing-process-guided-by-vector-flow-and-grayscale","full_name":"TZYSJTU\/Sketch-Generation-with-Drawing-Process-Guided-by-Vector-Flow-and-Grayscale","topics":["computer-vision","pencil-drawing","python3","pytorch","numpy"],"description":"This is the official implementation of the AAAI 2021 accepted paper \"Sketch Generation with Drawing Process Guided by Vector Flow and Grayscale\""}
{"name":"gsunshine\/enjoy-hamburger","full_name":"Gsunshine\/Enjoy-Hamburger","topics":["attention","differentiable-programming","implicit","deq","matrix-factorization","optimization"],"description":"[ICLR 2021 top 3%] Is Attention Better Than Matrix Decomposition?"}
{"name":"saimj7\/people-counting-in-real-time","full_name":"saimj7\/People-Counting-in-Real-Time","topics":["deep-learning","centroid-tracking","people-counter","ip-camera","threading","opencv","covid-19","ssd"],"description":"People Counting in Real-Time with an IP camera."}
{"name":"alexa\/dialoglue","full_name":"alexa\/dialoglue","topics":["deep-learning","natural-language-processing","natural-language-understanding","machinelearning"],"description":"DialoGLUE: A Natural Language Understanding Benchmark for Task-Oriented Dialogue"}
{"name":"jonathanking\/sidechainnet","full_name":"jonathanking\/sidechainnet","topics":["machine-learning","structural-biology","protein-structure","deep-learning","dataset"],"description":"An all-atom protein structure dataset for machine learning."}
{"name":"minar09\/cp-vton-plus","full_name":"minar09\/cp-vton-plus","topics":["cp-vton-plus","pytorch","pytorch-implementation","official-implementation","emcom","emcom-lab","seoultech","virtual-try-on","image-based","2d-virtual-try-on","virtual-tryon","vton"],"description":"Official implementation for \"CP-VTON+: Clothing Shape and Texture Preserving Image-Based Virtual Try-On\", CVPRW 2020"}
{"name":"megvii-model\/motr","full_name":"megvii-research\/MOTR","topics":["end-to-end","multi-object-tracking","pytorch","transformer"],"description":"[ECCV2022] MOTR: End-to-End Multiple-Object Tracking with TRansformer"}
{"name":"hustvl\/mimdet","full_name":"hustvl\/MIMDet","topics":["computer-vision","object-detection","vision-transformer","masked-image-modeling","mae","transformer","instance-segmentation"],"description":"MIMDet: Unleashing Vanilla Vision Transformer with Masked Image Modeling for Object Detection"}
{"name":"zzh-tech\/estrnn","full_name":"zzh-tech\/ESTRNN","topics":["video-deblurring","dataset","real-world-data","deep-learning","deblurring","motion-blur","eccv2020"],"description":"[ECCV2020 Spotlight] Efficient Spatio-Temporal Recurrent Neural Network for Video Deblurring"}
{"name":"shengliu66\/elr","full_name":"shengliu66\/ELR","topics":["noisy-labels","robust-learning","deep-learning","statistical-learning"],"description":"Official Implementation of Early-Learning Regularization Prevents Memorization of Noisy Labels"}
{"name":"artitw\/text2text","full_name":"artitw\/text2text","topics":["bert","nlp","question-generation","natural-language-processing","natural-language-generation","data-augmentation","translator","cross-lingual","multi-lingual","question-answering","transformers","levenshtein-distance","embeddings","backtranslation","search","tf-idf","tokenizer","information-retrieval","summarization"],"description":"Text2Text: Crosslingual NLP\/G toolkit"}
{"name":"pkhungurn\/talking-head-anime-3-demo","full_name":"pkhungurn\/talking-head-anime-3-demo","topics":["ai","computer-graphics","computer-vision","machine-learning","pytorch","vtuber","anime","python"],"description":"Demo Programs for the \"Talking Head(?) Anime from a Single Image 3: Now the Body Too\" Project"}
{"name":"yzhq97\/transmomo.pytorch","full_name":"yzhq97\/transmomo.pytorch","topics":["motion-retargeting","cvpr","dance","unsupervised-learning","generative-adversarial-network"],"description":"This is the official PyTorch implementation of the CVPR 2020 paper \"TransMoMo: Invariance-Driven Unsupervised Video Motion Retargeting\"."}
{"name":"grammarly\/ua-gec","full_name":"grammarly\/ua-gec","topics":["dataset","corpus","gec","grammatical-error-correction","ukrainian-language","corpus-data","corpus-tools","natural-language-processing","nlp-datasets"],"description":"UA-GEC: Grammatical Error Correction and Fluency Corpus for the Ukrainian Language"}
{"name":"kaixhin\/imitation-learning","full_name":"Kaixhin\/imitation-learning","topics":["deep-learning","deep-reinforcement-learning","imitation-learning"],"description":"Imitation learning algorithms"}
{"name":"raphaelsty\/cherche","full_name":"raphaelsty\/cherche","topics":["neural-search","search","searching","neural-networks","bm25","flashtext","retrieval","reader","question-answering","nlp","information-retrieval","natural-language-processing","semantic-search","vector-search","machine-learning"],"description":"\ud83d\udcd1 Neural Search"}
{"name":"martinsbruveris\/tensorflow-image-models","full_name":"martinsbruveris\/tensorflow-image-models","topics":["tensorflow","imagenet","vision-transformer"],"description":"TensorFlow port of PyTorch Image Models (timm) - image models with pretrained weights."}
{"name":"ericlee2021-72324\/handpose_x","full_name":"EricLee2021-72324\/handpose_x","topics":[],"description":"\u624b\u90e821\u4e2a\u5173\u952e\u70b9\u68c0\u6d4b\uff0c\u4e8c\u7ef4\u624b\u52bf\u59ff\u6001\uff0c\u624b\u52bf\u8bc6\u522b\uff0cpytorch,handpose"}
{"name":"csuhan\/s2anet","full_name":"csuhan\/s2anet","topics":["object-detection","feature-alignment","mmdetection","pytorch","aerial-image-detection"],"description":"Official code of the paper \"Align Deep Features for Oriented Object Detection\""}
{"name":"fcakyon\/yolov5-pip","full_name":"fcakyon\/yolov5-pip","topics":["yolo","yolov5","object-detection","pytorch","python","pip","ultralytics","yolov3","yolov4","machine-learning","deep-learning","computer-vision","aws","coco","neptune","neptune-ai","s3","pypi","cli"],"description":"Packaged version of ultralytics\/yolov5 + many extra features"}
{"name":"keyu-tian\/spark","full_name":"keyu-tian\/SparK","topics":["bert","convnet","convolutional-neural-networks","masked-image-modeling","pre-trained-model","self-supervised-learning","sparse-convolution","ssl","cnn","iclr","iclr2023"],"description":"[ICLR'23 Spotlight] The first successful BERT-style pretraining on any *convolutional network*; Pytorch impl. of \"Designing BERT for Convolutional Networks: Sparse and Hierarchical Masked Modeling\""}
{"name":"mindslab-ai\/hififace","full_name":"mindslab-ai\/hififace","topics":["pytorch","face-swapping","pytorch-lightning","wandb"],"description":"Unofficial PyTorch Implementation for HifiFace (https:\/\/arxiv.org\/abs\/2106.09965)"}
{"name":"turoad\/clrnet","full_name":"Turoad\/CLRNet","topics":[],"description":"Pytorch implementation of our paper \"CLRNet: Cross Layer Refinement Network for Lane Detection\" (CVPR2022 Acceptance)."}
{"name":"srush\/annotated-s4","full_name":"srush\/annotated-s4","topics":["deep-learning","jax"],"description":"Implementation of https:\/\/srush.github.io\/annotated-s4"}
{"name":"yanx27\/2dpass","full_name":"yanx27\/2DPASS","topics":["nuscenes","semantic-segmentation","semantickitti","lidar-point-cloud","deep-learning","knowledge-distillation","pytorch"],"description":"2DPASS: 2D Priors Assisted Semantic Segmentation on LiDAR Point Clouds (ECCV 2022) :fire:"}
{"name":"castorini\/daam","full_name":"castorini\/daam","topics":["explainable-ai","huggingface","pytorch","stable-diffusion","generative-ai","diffusion"],"description":"Diffusion attentive attribution maps for interpreting Stable Diffusion."}
{"name":"kaushikjadhav01\/stock-market-prediction-web-app-using-machine-learning-and-sentiment-analysis","full_name":"kaushikjadhav01\/Stock-Market-Prediction-Web-App-using-Machine-Learning-And-Sentiment-Analysis","topics":["stock-market","stock-price-prediction","flask","twitter","tweepy","sentiment-analysis","machine-learning","arima","lstm","linear-regression","python","yfinance","alphavantage","keras","tensorflow","wordpress"],"description":"Stock Market Prediction Web App based on Machine Learning and Sentiment Analysis of Tweets (API keys included in code). The front end of the Web App is based on Flask and Wordpress. The App forecasts stock prices of the next seven days for any given stock under NASDAQ or NSE as input by the user. Predictions are made using three algorithms: ARIMA, LSTM, Linear Regression. The Web App combines the predicted prices of the next seven days with the sentiment analysis of tweets to give recommendation whether the price is going to rise or fall"}
{"name":"alphajia\/pytorch-faster-rcnn","full_name":"AlphaJia\/pytorch-faster-rcnn","topics":["faster-rcnn","pytorch","detection"],"description":"pytorch based implementation faster rcnn"}
{"name":"iduta\/pyconv","full_name":"iduta\/pyconv","topics":["image-recognition","imagenet","pytorch","deep-learning","convolutional-neural-networks","residual-networks","residual-learning","cnn","computer-vision","deep-neural-networks","neural-network","artificial-intelligence","pattern-recognition","pyconv","machine-learning"],"description":"Pyramidal Convolution: Rethinking Convolutional Neural Networks for Visual Recognition (https:\/\/arxiv.org\/pdf\/2006.11538.pdf)"}
{"name":"raivokoot\/video-dataset-loading-pytorch","full_name":"RaivoKoot\/Video-Dataset-Loading-Pytorch","topics":["pytorch","machine-learning","dataloader","deep-learning","video-dataset","action-recognition","videos"],"description":"Generic PyTorch dataset implementation to load and augment VIDEOS for deep learning training loops."}
{"name":"kevinmusgrave\/pytorch-adapt","full_name":"KevinMusgrave\/pytorch-adapt","topics":["pytorch","domain-adaptation","machine-learning","deep-learning","transfer-learning","computer-vision"],"description":"Domain adaptation made easy. Fully featured, modular, and customizable."}
{"name":"erre-quadro\/spikex","full_name":"erre-quadro\/spikex","topics":["spacy","spacy-pipes","nlp","named-entity-recognition","entity-linking","wikipedia","sentence-splitting","abbreviations-detection","acronym-recognition","noun-phrase-extract","verb-phrase-extract","clustering","wikigraph","wikipedia-graph"],"description":"SpikeX - SpaCy Pipes for Knowledge Extraction"}
{"name":"wuzhihao7788\/yolodet-pytorch","full_name":"wuzhihao7788\/yolodet-pytorch","topics":["yolov5","yolov4","ppyolo","yolov3","pytorch","object-detection","yolov5-yolov3","yolo"],"description":"reproduce the YOLO series of papers in pytorch, including YOLOv4, PP-YOLO, YOLOv5\uff0cYOLOv3, etc."}
{"name":"chonyy\/ml-auto-baseball-pitching-overlay","full_name":"chonyy\/ML-auto-baseball-pitching-overlay","topics":["baseball","pitch","machine-learning","ai","artificial-intelligence","data-science","sport","object-detection","pose-estimation","yolov4","deep-learning"],"description":"\u26be\ud83e\udd16\u26be Automatic baseball pitching overlay in realtime"}
{"name":"bubbliiiing\/efficientdet-pytorch","full_name":"bubbliiiing\/efficientdet-pytorch","topics":[],"description":"\u8fd9\u662f\u4e00\u4e2aefficientdet-pytorch\u7684\u6e90\u7801\uff0c\u53ef\u4ee5\u7528\u4e8e\u8bad\u7ec3\u81ea\u5df1\u7684\u6a21\u578b\u3002"}
{"name":"patrick-kidger\/torchcde","full_name":"patrick-kidger\/torchcde","topics":["time-series","machine-learning","neural-differential-equations","controlled-differential-equations","deep-learning","deep-neural-networks","pytorch","dynamical-systems","differential-equations","neural-networks"],"description":"Differentiable controlled differential equation solvers for PyTorch with GPU support and memory-efficient adjoint backpropagation."}
{"name":"cheerss\/crossformer","full_name":"cheerss\/CrossFormer","topics":["pytorch","object-detection","deep-learning","semantic-segmentation","vision-transformer","classification","instance-segmentation"],"description":"The official code for the paper: https:\/\/openreview.net\/forum?id=_PHymLIxuI"}
{"name":"ppogg\/shufflev2-yolov5","full_name":"ppogg\/YOLOv5-Lite","topics":["ncnn","yolov5","android-app","mnn","shufflenetv2","repvgg","transformer","tensorrt","pplcnet","openvivo","mobilenet","tflite","pytorch","picodet","onnxruntime"],"description":"\ud83c\udf45\ud83c\udf45\ud83c\udf45YOLOv5-Lite: lighter, faster and easier to deploy. Evolved from yolov5 and the size of model is only 930+kb (int8) and 1.7M (fp16). It can reach 10+ FPS on the Raspberry Pi 4B when the input size is 320\u00d7320~"}
{"name":"ha0tang\/xinggan","full_name":"Ha0Tang\/XingGAN","topics":["image-generation","generation","eccv-2020","appearance-features","shape-features","feature-fusion","non-local","crossing","eccv2020","pytorch","deepfashion","selectiongan"],"description":"[ECCV 2020] XingGAN for Person Image Generation"}
{"name":"iigroup\/tedigan","full_name":"IIGROUP\/TediGAN","topics":["image-synthesis","gan-inversion","cvpr2021"],"description":"[CVPR 2021] Pytorch implementation for TediGAN: Text-Guided Diverse Face Image Generation and Manipulation"}
{"name":"yeyupiaoling\/voiceprintrecognition-pytorch","full_name":"yeyupiaoling\/VoiceprintRecognition-Pytorch","topics":["pytorch","voice-recognition","arcface","speaker-recognition","ecapa-tdnn"],"description":"\u672c\u9879\u76ee\u4f7f\u7528\u4e86EcapaTdnn\u6a21\u578b\u5b9e\u73b0\u7684\u58f0\u7eb9\u8bc6\u522b"}
{"name":"confusezius\/revisiting_deep_metric_learning_pytorch","full_name":"Confusezius\/Revisiting_Deep_Metric_Learning_PyTorch","topics":["deep-learning","metric-learning","deep-metric-learning","image-retrieval","cub200-2011","cars196","stanford-online-products","wandb","icml2020"],"description":"(ICML 2020) This repo contains code for our paper \"Revisiting Training Strategies and Generalization Performance in Deep Metric Learning\" (https:\/\/arxiv.org\/abs\/2002.08473) to facilitate consistent research in the field of Deep Metric Learning."}
{"name":"kumapowerliu\/rethinking-inpainting-medfe","full_name":"KumapowerLIU\/Rethinking-Inpainting-MEDFE","topics":["inpainting","activation-functions","generative-adversarial-network","eccv-2020"],"description":"Rethinking Image Inpainting via a Mutual Encoder Decoder with Feature Equalizations. ECCV 2020 Oral"}
{"name":"google-research\/fast-soft-sort","full_name":"google-research\/fast-soft-sort","topics":["differentiable","sorting","ranking","pytorch","tensorflow","jax"],"description":"Fast Differentiable Sorting and Ranking"}
{"name":"enlite-ai\/maze","full_name":"enlite-ai\/maze","topics":["reinforcement-learning","python","machine-learning","simulation","deep-learning","monitoring","distributed","documentation","data-science","framework","applied-machine-learning","optimization","decision-making","automation"],"description":"Maze Applied Reinforcement Learning Framework"}
{"name":"jankrepl\/mildlyoverfitted","full_name":"jankrepl\/mildlyoverfitted","topics":["pytorch","tutorial","deep-learning","youtube"],"description":"Paper implementations from scratch and machine learning tutorials"}
{"name":"qinzheng93\/geotransformer","full_name":"qinzheng93\/GeoTransformer","topics":["point-cloud-registration","transformer","computer-vision","deep-learning","neural-network","point-cloud","pytorch","attention-mechanism","registration"],"description":"[CVPR2022] Geometric Transformer for Fast and Robust Point Cloud Registration"}
{"name":"sisinflab\/elliot","full_name":"sisinflab\/elliot","topics":["recommender-system","machine-learning","collaborative-filtering","content-based-recommendation","bprmf","matrix-factorization","vae","svdpp","funksvd","slim","neural-collaborative-filtering","k-nn","k-nearest-neighbours","nfm","knowledge-graph","recommendations","tensorflow2","keras","deepfm"],"description":"Comprehensive and Rigorous Framework for Reproducible Recommender Systems Evaluation"}
{"name":"tatp22\/multidim-positional-encoding","full_name":"tatp22\/multidim-positional-encoding","topics":["tensorflow","pytorch","deep-learning"],"description":"An implementation of 1D, 2D, and 3D positional encoding in Pytorch and TensorFlow"}
{"name":"jeff-sjtu\/res-loglikelihood-regression","full_name":"Jeff-sjtu\/res-loglikelihood-regression","topics":["pytorch","human-pose-estimation","iccv","iccv2021","regression","2d-human-pose","3d-human-pose"],"description":"Code for \"Human Pose Regression with Residual Log-likelihood Estimation\", ICCV 2021 Oral"}
{"name":"kahst\/birdnet-analyzer","full_name":"kahst\/BirdNET-Analyzer","topics":["bioacoustics","birds","birdsong","acoustic-monitoring","deep-learning"],"description":"BirdNET analyzer for scientific audio data processing."}
{"name":"cwlroda\/falldetection_openpifpaf","full_name":"cwlroda\/falldetection_openpifpaf","topics":["openpifpaf","detection","human-pose-estimation","computer-vision","deep-learning","composite-fields","video-analytics","object-tracking","gpu","cpu","fall-detection"],"description":"Fall Detection using OpenPifPaf's Human Pose Estimation model"}
{"name":"datacanvasio\/hypernets","full_name":"DataCanvasIO\/Hypernets","topics":["neural-architecture-search","hyperparameter-optimization","hyperparameter-tuning","evolutionary-algorithms","monte-carlo-tree-search","automl","autodl","reinforcement-learning","mcts","nas","keras","nasnet","enas"],"description":"A General Automated Machine Learning framework to simplify the development of End-to-end AutoML toolkits in specific domains."}
{"name":"jiawangbian\/sc_depth_pl","full_name":"JiawangBian\/sc_depth_pl","topics":["depth-estimation","deep-learning","self-supervised-learning","pose-estimation","computer-vision"],"description":"SC-Depth (V1, V2, and V3) for Unsupervised Monocular Depth Estimation  Webpage:https:\/\/jiawangbian.github.io\/sc_depth_pl\/"}
{"name":"tianyu0207\/rtfm","full_name":"tianyu0207\/RTFM","topics":["pytorch","deep-learning","anomaly-detection","video-anomaly-detection"],"description":"Official code for 'Weakly-supervised Video Anomaly Detection with Robust Temporal Feature Magnitude Learning' [ICCV 2021]"}
{"name":"shoufachen\/cyclemlp","full_name":"ShoufaChen\/CycleMLP","topics":["pytorch","mlp","backbone-models"],"description":"[ICLR'22 Oral] Implementation of \"CycleMLP: A MLP-like Architecture for Dense Prediction\""}
{"name":"zhanggongjie\/sam-detr","full_name":"ZhangGongjie\/SAM-DETR","topics":["pytorch","object-detection","detr","computer-vision","transformer","detection","vision-transformer","deep-learning","vision","machine-learning","cvpr","cvpr2022"],"description":"[CVPR'2022] SAM-DETR & SAM-DETR++: Official PyTorch Implementation"}
{"name":"mmaaz60\/edgenext","full_name":"mmaaz60\/EdgeNeXt","topics":["classification","cnn","edge-computing","hybrid-model","mobile-application","transformers"],"description":"[CADL'22, ECCVW] Official repository of paper titled \"EdgeNeXt: Efficiently Amalgamated CNN-Transformer Architecture for Mobile Vision Applications\"."}
{"name":"neomatrix369\/nlp_profiler","full_name":"neomatrix369\/nlp_profiler","topics":["nlp","nlp-library","nlp-parsing","nlp-keywords-extraction","nlp-machine-learning","text-mining","natural-language-processing","nlp-profiler","kaggle-kernels","google-colab","jupyter","profiling-datasets","grammar-checks","profiler","profiling","hacktoberfest"],"description":"A simple NLP library allows profiling datasets with one or more text columns. When given a dataset and a column name containing text data, NLP Profiler will return either high-level insights or low-level\/granular statistical information about the text in that column."}
{"name":"alibaba-research\/chineseblue","full_name":"alibaba-research\/ChineseBLUE","topics":["benchmark","bert","chinese","biomedical","medical","natural-language-processing"],"description":"Chinese Biomedical Language Understanding Evaluation benchmark (ChineseBLUE)"}
{"name":"ekzhang\/fastseg","full_name":"ekzhang\/fastseg","topics":["computer-vision","semantic-segmentation","mobilenetv3","efficientnet","deep-learning","cityscapes","kitti-dataset","mapillary-vistas-dataset","edge-computing","pytorch","aspp","deeplabv3"],"description":"\ud83d\udcf8 PyTorch implementation of MobileNetV3 for real-time semantic segmentation, with pretrained weights & state-of-the-art performance"}
{"name":"endlesssora\/tsit","full_name":"EndlessSora\/TSIT","topics":["generative-adversarial-network","gan","image-to-image-translation","image-generation","image-manipulation","two-stream-networks","versatile","feature-transformation","multi-scale","style-transfer","multi-modal","semantic-image-synthesis","eccv2020"],"description":"[ECCV 2020 Spotlight] A Simple and Versatile Framework for Image-to-Image Translation"}
{"name":"fedml-ai\/fednlp","full_name":"FedML-AI\/FedNLP","topics":["federated-learning","natural-language-processing","nlp","machine-learning"],"description":"FedNLP: An Industry and Research Integrated Platform for Federated Learning in Natural Language Processing, Backed by FedML, Inc. The Previous Research Version is Accepted to NAACL 2022"}
{"name":"keonlee9420\/portaspeech","full_name":"keonlee9420\/PortaSpeech","topics":["text-to-speech","normalizing-flows","generative-model","deep-neural-networks","pytorch","tts","speech-synthesis","neural-tts","non-autoregressive","portable-tts","vae","fastspeech","hifi-gan","non-ar","mel-gan","high-quality"],"description":"PyTorch Implementation of PortaSpeech: Portable and High-Quality Generative Text-to-Speech"}
{"name":"yuanmingqi\/rl-exploration-baselines","full_name":"yuanmingqi\/rl-exploration-baselines","topics":["reinforcement-learning","efficient-algorithm","exploration-strategy","baselines","gym","machine-learning","pybullet","pytorch","robotics","toolbox"],"description":"RLeXplore provides stable baselines of exploration methods in reinforcement learning, such as intrinsic curiosity module (ICM), random network distillation (RND) and rewarding impact-driven exploration (RIDE)."}
{"name":"danijar\/crafter","full_name":"danijar\/crafter","topics":["artificial-intelligence","reinforcement-learning","minecraft","environment","simulation","deep-learning"],"description":"Benchmarking the Spectrum of Agent Capabilities"}
{"name":"zumolabs\/zpy","full_name":"ZumoLabs\/zpy","topics":["ml","ai","data","synthetic","blender","python","synthetic-data","blender-addon","deep-learning","computer-vision"],"description":"Synthetic data for computer vision. An open source toolkit using Blender and Python."}
{"name":"liuruoze\/mini-alphastar","full_name":"liuruoze\/mini-AlphaStar","topics":["mini-alphastar","supervised-learning","reinforcement-learning","starcraft2","deep-learning","pytorch","self-playing-bot","multi-agent-systems","gaming","imitation-learning","starcraft2-ai","starcraft-ii-bot","sc2replay","deep-reinforcement-learning","deep-neural-networks"],"description":"A mini-scale reproduction code of the AlphaStar program. Note: the original AlphaStar is the AI proposed by DeepMind to play StarCraft II."}
{"name":"wenwenyu\/master-pytorch","full_name":"wenwenyu\/MASTER-pytorch","topics":["scene-text-recognition","transformer","self-attention","non-local-network","ocr"],"description":"Code for the paper \"MASTER: Multi-Aspect Non-local Network for Scene Text Recognition\" (Pattern Recognition 2021)"}
{"name":"abelriboulot\/onnxt5","full_name":"abelriboulot\/onnxt5","topics":["nlp","nlp-machine-learning","onnx","onnxruntime","transformer","transformers","inference","summarization","translation","text-generation","text-classification","sentiment-analysis"],"description":"Summarization, translation, sentiment-analysis, text-generation and more at blazing speed using a T5 version implemented in ONNX."}
{"name":"cgarciae\/treex","full_name":"cgarciae\/treex","topics":["jax","deep-learning"],"description":"A Pytree Module system for Deep Learning in JAX"}
{"name":"mindslab-ai\/nuwave","full_name":"mindslab-ai\/nuwave","topics":["upsampling","super-resolution","deep-learning","deep-generative-model","pytorch","neural-audio-upsampling"],"description":"NU-Wave: A Diffusion Probabilistic Model for Neural Audio Upsampling @ INTERSPEECH 2021"}
{"name":"sberbank-ai\/sber-swap","full_name":"ai-forever\/ghost","topics":["computer-vision","deep-learning","deepfake","faceswap","pytorch","deep-face-swap","face-swap","ghost","ghost-faceswap","ghost-swap"],"description":"A new one shot face swap approach for image and video domains"}
{"name":"angeloucn\/cfpnet-medicine","full_name":"AngeLouCN\/CFPNet-Medicine","topics":["medical-image-segmentation","real-time-semantic-segmentation","keras","python3"],"description":"A keras-based real-time model for medical image segmentation (CFPNet-M)"}
{"name":"arthur151\/centerhmr","full_name":"Arthur151\/ROMP","topics":["3d-mesh-recovery","bottom-up","multi-person-3d-mesh-recovery","smpl","multi-person","pytorch","pose-estimation"],"description":"Monocular, One-stage, Regression of Multiple 3D People, ROMP[ICCV21], BEV[CVPR22]"}
{"name":"jiaxi-jiang\/fbcnn","full_name":"jiaxi-jiang\/FBCNN","topics":["image-restoration","jpeg-artifacts-removal","deep-learning","iccv2021","pytorch","computer-vision","image-processing","image-denoising","fbcnn","jpeg-compression","jpeg-deblocking","image-forensics","image-compression"],"description":"Official Code for ICCV 2021 paper \"Towards Flexible Blind JPEG Artifacts Removal (FBCNN)\""}
{"name":"haochen-rye\/nerv","full_name":"haochen-rye\/NeRV","topics":[],"description":"Official Pytorch implementation for video neural representation (NeRV)"}
{"name":"babelscape\/rebel","full_name":"Babelscape\/rebel","topics":["nlp","natural-language-processing","natural-language-generation","relation-extraction","entity-linking"],"description":"REBEL is a seq2seq model that simplifies Relation Extraction (EMNLP 2021)."}
{"name":"wenxuan-1119\/transbts","full_name":"Wenxuan-1119\/TransBTS","topics":["pytorch","medical-image-segmentation","transformer"],"description":"This repo provides the official code for : 1) TransBTS: Multimodal Brain Tumor Segmentation Using Transformer (https:\/\/arxiv.org\/abs\/2103.04430) , accepted by MICCAI2021.  2) TransBTSV2: Towards Better and More Efficient Volumetric Segmentation of Medical Images(https:\/\/arxiv.org\/abs\/2201.12785)."}
{"name":"mcahny\/vps","full_name":"mcahny\/vps","topics":[],"description":"Official pytorch implementation for \"Video Panoptic Segmentation\" (CVPR 2020 Oral)"}
{"name":"intellabs\/bayesian-torch","full_name":"IntelLabs\/bayesian-torch","topics":["bayesian-deep-learning","bayesian-neural-networks","stochastic-variational-inference","uncertainty-estimation","pytorch","bayesian-layers","deep-learning","bayesian-inference","uncertainty-quantification","uncertainty-neural-networks","deep-neural-networks"],"description":"A library for Bayesian neural network layers and uncertainty estimation in Deep Learning extending the core of PyTorch"}
{"name":"nvlabs\/wetectron","full_name":"NVlabs\/wetectron","topics":["object-detection","weakly-supervised-learning","computer-vision","deep-learning"],"description":"Weakly-supervised object detection."}
{"name":"casualganpapers\/make-a-scene","full_name":"CasualGANPapers\/Make-A-Scene","topics":["gans","generative-adversarial-network","vqgan"],"description":"Pytorch implementation of Make-A-Scene: Scene-Based Text-to-Image Generation with Human Priors"}
{"name":"ayaka14732\/tpu-starter","full_name":"ayaka14732\/tpu-starter","topics":["tpu","deep-learning","cloud-tpu","google-cloud-platform","gcp","machine-learning","jax"],"description":"Everything you want to know about Google Cloud TPU"}
{"name":"lucidrains\/segformer-pytorch","full_name":"lucidrains\/segformer-pytorch","topics":["artificial-intelligence","deep-learning","attention-mechanism","multilayer-perceptron","segmentation","image-segmentation"],"description":"Implementation of Segformer, Attention + MLP neural network for segmentation, in Pytorch"}
{"name":"abhishekkrthakur\/mlspace","full_name":"abhishekkrthakur\/mlspace","topics":["machine-learning","deep-learning","docker","cuda","cudnn","code-server","jupyter"],"description":"MLSpace: Hassle-free machine learning & deep learning development"}
{"name":"materialsvirtuallab\/maml","full_name":"materialsvirtuallab\/maml","topics":["materials-science","machine-learning","deep-learning","machine-learning-force-field","spectroscopy","materials-discovery"],"description":"Python for Materials Machine Learning, Materials Descriptors, Machine Learning Force Fields, Deep Learning, etc."}
{"name":"lucidrains\/egnn-pytorch","full_name":"lucidrains\/egnn-pytorch","topics":["artificial-intelligence","deep-learning","equivariance","graph-neural-network"],"description":"Implementation of E(n)-Equivariant Graph Neural Networks, in Pytorch"}
{"name":"lucidrains\/se3-transformer-pytorch","full_name":"lucidrains\/se3-transformer-pytorch","topics":["artificial-intelligence","deep-learning","attention-mechanism","transformer","equivariance","se3"],"description":"Implementation of SE3-Transformers for Equivariant Self-Attention, in Pytorch. This specific repository is geared towards integration with eventual Alphafold2 replication."}
{"name":"iffix\/machin","full_name":"iffiX\/machin","topics":["reinforcement-learning","deep-learning","pytorch","pytorch-reinforcement-learning","dqn","ddpg","sac","ppo","td3","prioritized-experience-replay","distributed","a3c-pytorch","python","pytorch-lightning"],"description":"Reinforcement learning library(framework) designed for PyTorch, implements DQN, DDPG, A2C, PPO, SAC, MADDPG, A3C, APEX, IMPALA ..."}
{"name":"as-ideas\/deepphonemizer","full_name":"as-ideas\/DeepPhonemizer","topics":["pytorch","deep-learning","transformer","grapheme-to-phoneme","g2p","ipa","phonemization","phonemes"],"description":"Grapheme to phoneme conversion with deep learning."}
{"name":"j-marple-dev\/model_compression","full_name":"j-marple-dev\/model_compression","topics":["pruning","quantization","lottey-ticket-hypothesis","pytorch"],"description":"PyTorch Model Compression"}
{"name":"lmnt-com\/wavegrad","full_name":"lmnt-com\/wavegrad","topics":["machine-learning","neural-network","speech-synthesis","text-to-speech","wavegrad","paper","pytorch","vocoder","speech","pretrained-models","tts","deep-learning"],"description":"A fast, high-quality neural vocoder."}
{"name":"nmwsharp\/diffusion-net","full_name":"nmwsharp\/diffusion-net","topics":[],"description":"Pytorch implementation of DiffusionNet for fast and robust learning on 3D surfaces like meshes or point clouds."}
{"name":"leopard-ai\/betty","full_name":"leopard-ai\/betty","topics":["autodiff","automatic-differentiation","bilevel-optimization","meta-learning","multilevel-optimization","hyperparameter-optimization","neural-architecture-search","reinforcement-learning","artificial-intelligence","machine-learning","deep-learning","implicit-differentiation","pytorch"],"description":"Betty: an automatic differentiation library for generalized meta-learning and multilevel optimization"}
{"name":"google-research\/l2p","full_name":"google-research\/l2p","topics":["deep-learning","continual-learning","jax"],"description":"Learning to Prompt (L2P) for Continual Learning @ CVPR22 and DualPrompt: Complementary Prompting for Rehearsal-free Continual Learning @ ECCV22"}
{"name":"oneflow-inc\/libai","full_name":"Oneflow-Inc\/libai","topics":["oneflow","nlp","deep-learning","large-scale","data-parallelism","model-parallelism","distributed-training","pipeline-parallelism","transformer","self-supervised-learning","vision-transformer"],"description":"LiBai(\u674e\u767d): A Toolbox for Large-Scale Distributed Parallel Training"}
{"name":"allenai\/allenact","full_name":"allenai\/allenact","topics":["reinforcement-learning","embodied-agent","ai","research","python","deep-learning","ai2","computer-vision"],"description":"An open source framework for research in Embodied-AI from AI2."}
{"name":"zjjconan\/simam","full_name":"ZjjConan\/SimAM","topics":[],"description":"The official pytorch implemention of our ICML paper \"SimAM: A Simple, Parameter-Free Attention Module for Convolutional Neural Networks\"."}
{"name":"xyupeng\/contrastivecrop","full_name":"xyupeng\/ContrastiveCrop","topics":["pytorch","self-supervised-learning","contrastive-learning"],"description":"[CVPR 2022 Oral] Crafting Better Contrastive Views for Siamese Representation Learning"}
{"name":"mit-han-lab\/e3d","full_name":"mit-han-lab\/e3d","topics":["3d-perception","deep-learning","point-cloud"],"description":"Efficient 3D Deep Learning"}
{"name":"kyzhouhzau\/nlpgnn","full_name":"kyzhouhzau\/NLPGNN","topics":["tensorflow2","bert","gpt2","albert","bert-ner","bert-cls","textcnn","bilstm-attention","albert-ner","tf2","message-passing","gcn","gin","gan","graph-convolutional-networks","graphsage","graph-classfication","textgcn","nlp","gnn"],"description":"1. Use BERT, ALBERT and GPT2 as  tensorflow2.0's layer.  2. Implement GCN, GAN, GIN and GraphSAGE based on message passing."}
{"name":"plantl-gob-es\/lm-spanish","full_name":"PlanTL-GOB-ES\/lm-spanish","topics":["language-model","embeddings","corpora","benchmarks","transformers","nlp"],"description":"Official source for spanish Language Models and resources made @ BSC-TEMU within the \"Plan de las Tecnolog\u00edas del Lenguaje\" (Plan-TL)."}
{"name":"decile-team\/cords","full_name":"decile-team\/cords","topics":["energy","machine-learning","deep-learning","energy-requirements","compute-efficient-ml","speedups-training"],"description":"Reduce end to end training time from days to hours (or hours to minutes), and energy requirements\/costs by an order of magnitude using coresets and data selection."}
{"name":"opendilab\/di-engine-docs","full_name":"opendilab\/DI-engine-docs","topics":["reinforcement-learning","reinforcement-learning-algorithms","imitation-learning","inverse-reinforcement-learning","multi-agent-reinforcement-learning","offline-rl","model-based-reinforcement-learning","deep-learning","pytorch-rl"],"description":"DI-engine docs (Chinese and English)"}
{"name":"superinsight\/superinsight-db","full_name":"superinsight\/superinsight-db","topics":["approximate-nearest-neighbor-search","database","faiss","image-search","machine-learning","nearest-neighbor-search","postgres","postgresql","relational-database","similarity-search","sql","vector-database","vector-search","superinsight","transformer","embeddings","transformers"],"description":"Relational Database for Unstructured Data"}
{"name":"lucidrains\/routing-transformer","full_name":"lucidrains\/routing-transformer","topics":["artificial-intelligence","deep-learning","attention-mechanism","transformer","pytorch"],"description":"Fully featured implementation of Routing Transformer"}
{"name":"replicable-marl\/marllib","full_name":"Replicable-MARL\/MARLlib","topics":["multi-agent-reinforcement-learning","ray","reinforcement-learning","rllib","pytorch"],"description":"The MARL extension for RLlib. A benchmark for research and industry."}
{"name":"wenet-e2e\/wespeaker","full_name":"wenet-e2e\/wespeaker","topics":["asv","ecapa-tdnn","production-ready","pytorch","resnet","speaker-recognition","speaker-verification","tdnn","xvector","speaker-diarization","cn-celeb","voxceleb","repvgg"],"description":"Research and Production Oriented Speaker Recognition Toolkit"}
{"name":"dvlab-research\/stratified-transformer","full_name":"dvlab-research\/Stratified-Transformer","topics":["cvpr2022","point-cloud","semantic-segmentation","transformer"],"description":"Stratified Transformer for 3D Point Cloud Segmentation (CVPR 2022)"}
{"name":"carla-recourse\/carla","full_name":"carla-recourse\/CARLA","topics":["python","machine-learning","artificial-intelligence","explainable-ai","explainable-ml","explainability","counterfactual-explanations","counterfactuals","counterfactual","recourse","benchmark","benchmarking","tensorflow","tensorflow2","pytorch"],"description":"CARLA: A Python Library to Benchmark Algorithmic Recourse and Counterfactual Explanation Algorithms"}
{"name":"stable-baselines-team\/stable-baselines3-contrib","full_name":"Stable-Baselines-Team\/stable-baselines3-contrib","topics":["reinforcement-learning","stable-baselines","pytorch","rl","gym","research","experimental","robotics","openai","machine-learning","reinforcement-learning-algorithms","gsde","sde"],"description":"Contrib package for Stable-Baselines3 -  Experimental reinforcement learning (RL) code"}
{"name":"longxingtan\/tfyolo","full_name":"LongxingTan\/tfyolo","topics":["yolov5","object-detection","you-only-look-once","tensorflow"],"description":"tfyolo: Efficient implementation of Yolov5 in TensorFlow2"}
{"name":"pinatafarms\/dad-3dheads","full_name":"PinataFarms\/DAD-3DHeads","topics":["3d-computer-vision","3d-face-alignment","3d-face-modelling","3d-face-reconstruction","3d-head","3d-reconstruction","computer-vision","cvpr","cvpr2022","machine-learning","papers-with-code","pytorch","3dmm","dataset","face-alignment","face-reenactment","first-order-motion-model","flame","head-pose-estimation"],"description":"Official repo for DAD-3DHeads: A Large-scale Dense, Accurate and Diverse Dataset for 3D Head Alignment from a Single Image (CVPR 2022)."}
{"name":"sczhou\/ignn","full_name":"sczhou\/IGNN","topics":["deep-learning","super-resolution","image-preprocessing","image-restoration"],"description":"[NeurIPS 2020] Cross-Scale Internal Graph Neural Network for Image Super-Resolution"}
{"name":"henry1iu\/tnt-trajectory-predition","full_name":"Henry1iu\/TNT-Trajectory-Prediction","topics":[],"description":"A Pytorch Implementation of TNT: Target-driveN Trajectory Prediction"}
{"name":"graspnet\/graspnet-baseline","full_name":"graspnet\/graspnet-baseline","topics":["point-cloud","grasping","3d","deep-learning","robotics","graspnet-1billion"],"description":"Baseline model for \"GraspNet-1Billion: A Large-Scale Benchmark for General Object Grasping\" (CVPR 2020)"}
{"name":"nicholasli1995\/evoskeleton","full_name":"Nicholasli1995\/EvoSkeleton","topics":["human-pose-estimation","3d-pose-estimation","data-augmentation","2d-to-3d","deep-learning","evolutionary-algorithms","bias-correction","dataset","annotaton-tool","3d-computer-vision","cvpr2020","geometric-deep-learning","generalization-on-diverse-scenes","feed-forward-neural-networks","synthetic-data","kinematic-trees","3d-human-pose","smpl","cvpr"],"description":"Official project website for the CVPR 2020 paper (Oral Presentation) \"Cascaded deep monocular 3D human pose estimation wth evolutionary training data\""}
{"name":"unbabel\/comet","full_name":"Unbabel\/COMET","topics":["machine-translation","evaluation-metrics","natural-language-processing","machine-learning","artificial-intelligence","nlp"],"description":" A Neural Framework for MT Evaluation"}
{"name":"deliton\/idt","full_name":"deliton\/idt","topics":["deep-learning","duckgo","search-engine","mount","idt","download","download-images","flickr-api","bing","bing-api","scraping","scraping-web","image-datasets","image-download","download-dataset"],"description":"Image Dataset Tool (idt) is a cli tool designed to make the otherwise repetitive and slow task of creating image datasets into a fast and intuitive process."}
{"name":"edilgin\/deepforspeed","full_name":"edilgin\/DeepForSpeed","topics":["neural-network","deep-learning","self-driving-car","convolutional-neural-networks"],"description":"ConvNet learns to play Need For Speed"}
{"name":"yl4579\/starganv2-vc","full_name":"yl4579\/StarGANv2-VC","topics":["voice-conversion","speech-synthesis","gan","deep-learning","speech","stargan-v2","interspeech2021"],"description":"StarGANv2-VC: A Diverse, Unsupervised, Non-parallel Framework for Natural-Sounding Voice Conversion"}
{"name":"gandersen101\/spaczz","full_name":"gandersen101\/spaczz","topics":["natural-language-processing","data-science","python","nlp","artificial-intelligence","ai","spacy","nlp-library","fuzzy-matching","regex","spacy-extensions","spacy-extension","rapidfuzz"],"description":"Fuzzy matching and more functionality for spaCy."}
{"name":"smousavi05\/eqtransformer","full_name":"smousavi05\/EQTransformer","topics":["earthquakes","detection","phase-picking","deep-learning","neural-network","lstm-neural-networks","attention-mechanism","transformer","multi-task-learning","global","stead"],"description":"EQTransformer, a python package for earthquake signal detection and phase picking using AI."}
{"name":"zihangjiang\/tokenlabeling","full_name":"zihangJiang\/TokenLabeling","topics":["imagenet","vision","transformer","lv-vit","pytorch","segmentation"],"description":"Pytorch implementation of \"All Tokens Matter: Token Labeling for Training Better Vision Transformers\""}
{"name":"longxingtan\/tf-yolo","full_name":"LongxingTan\/tfyolo","topics":["yolov5","object-detection","you-only-look-once","tensorflow"],"description":"tfyolo: Efficient implementation of Yolov5 in TensorFlow2"}
{"name":"huggingface\/exporters","full_name":"huggingface\/exporters","topics":["coreml","deep-learning","machine-learning","model-converter","pytorch","tensorflow","tflite","transformer","coremltools"],"description":"Export Hugging Face models to Core ML and TensorFlow Lite"}
{"name":"sunyilgdx\/nsp-bert","full_name":"sunyilgdx\/NSP-BERT","topics":["bert","zero-shot","prompt-learning","sentence-classification","sentiment-analysis","natural-language-inference","correference-resolution","entity-linking","entity-typing","nlp","text-classification","tensorflow"],"description":"The code for our paper \"NSP-BERT: A Prompt-based Zero-Shot Learner Through an Original Pre-training Task \u2014\u2014 Next Sentence Prediction\""}
{"name":"wpeebles\/g.pt","full_name":"wpeebles\/G.pt","topics":["deep-learning","diffusion-models","pytorch","transformers"],"description":"Official PyTorch Implementation of Learning to Learn with Generative Models of Neural Network Checkpoints"}
{"name":"pandora-intelligence\/concise-concepts","full_name":"Pandora-Intelligence\/concise-concepts","topics":["few-shot-classifcation","ner","spacy","gensim","natural-language-processing","nlp","machine-learning","hacktoberfest"],"description":"This repository contains an easy and intuitive approach to few-shot NER using most similar expansion over spaCy embeddings. Now with entity scoring. "}
{"name":"ain-soph\/trojanzoo","full_name":"ain-soph\/trojanzoo","topics":["pytorch","backdoor-attacks","image-classification","adversarial-attacks","deep-learning"],"description":"TrojanZoo provides a universal pytorch platform to conduct security researches (especially backdoor attacks\/defenses) of image classification in deep learning."}
{"name":"bubbliiiing\/deeplabv3-plus-pytorch","full_name":"bubbliiiing\/deeplabv3-plus-pytorch","topics":[],"description":"\u8fd9\u662f\u4e00\u4e2adeeplabv3-plus-pytorch\u7684\u6e90\u7801\uff0c\u53ef\u4ee5\u7528\u4e8e\u8bad\u7ec3\u81ea\u5df1\u7684\u6a21\u578b\u3002"}
{"name":"jordicorbilla\/stock-prediction-deep-neural-learning","full_name":"JordiCorbilla\/stock-prediction-deep-neural-learning","topics":["machine-learning","deep-learning","deep-neural-networks","yfinance","lstm-neural-networks","lstm-model","recurrent-neural-networks","stock-prediction","stock-prices","market-data","finance","cryptocurrency","crypto","lstm","stock","time-series","jupyter-notebook"],"description":"Predicting stock prices using a TensorFlow LSTM (long short-term memory) neural network for times series forecasting"}
{"name":"nvlabs\/ssv","full_name":"NVlabs\/SSV","topics":[],"description":"Pytorch implementation of SSV: Self-Supervised Viewpoint Learning from Image Collections (CVPR 2020)"}
{"name":"thudm\/graphmae","full_name":"THUDM\/GraphMAE","topics":["graph-neural-networks","self-supervised-learning","deep-learning","pytorch"],"description":"GraphMAE: Self-Supervised Masked Graph Autoencoders in KDD'22"}
{"name":"v-iashin\/video_features","full_name":"v-iashin\/video_features","topics":["pytorch","multi-gpu","feature-extraction","parallel","video-features","visual-features","audio-features","i3d","pwc-net","vggish","r2plus1d","resnet","raft","optical-flow","ig65m","windows","clip","s3d"],"description":"Extract video features from raw videos using multiple GPUs. We support RAFT and PWC flow frames as well as S3D, I3D, R(2+1)D, VGGish, CLIP, ResNet features."}
{"name":"bethgelab\/model-vs-human","full_name":"bethgelab\/model-vs-human","topics":["pytorch","tensorflow","robustness","benchmark","toolbox"],"description":"Benchmark your model on out-of-distribution datasets with carefully collected human comparison data (NeurIPS 2021 Oral)"}
{"name":"diambra\/arena","full_name":"diambra\/arena","topics":["reinforcement-learning","deep-reinforcement-learning","video-games","artificial-intelligence","machine-learning","deep-learning","esports","tournaments","competitions"],"description":"DIAMBRA Arena: a New Reinforcement Learning Platform for Research and Experimentation"}
{"name":"ibm\/zshot","full_name":"IBM\/zshot","topics":["few-shot","few-shot-learning","ned","ner","relation-extraction","zero-shot","zero-shot-learning","spacy","nlp","ai","deep-learning","machine-learning","named-entity-recognition","natural-language-processing","natural-language-understanding","nlp-library","pytorch","relationship-extraction","transformer"],"description":"Zero and Few shot named entity & relationships recognition"}
{"name":"dpressel\/mint","full_name":"dpressel\/mint","topics":["transformer-models","transformer","transformers","pytorch","bert","gpt2","gpt","bart","t5","roberta","sentence-transformers","tutorials","opt"],"description":"MinT: Minimal Transformer Library and Tutorials"}
{"name":"junnyu\/roformer_pytorch","full_name":"JunnYu\/RoFormer_pytorch","topics":["pytorch","roformer-v1","roformer-v2","language-model"],"description":"RoFormer V1 & V2 pytorch"}
{"name":"golsun\/dialogrpt","full_name":"golsun\/DialogRPT","topics":["dialog","pretrained-models","transformers","pytorch","conversational-ai","dialogpt","gpt-2","human-feedback-data","dataset","dialog-datasets"],"description":"EMNLP 2020: \"Dialogue Response Ranking Training with Large-Scale Human Feedback Data\""}
{"name":"quiver-team\/torch-quiver","full_name":"quiver-team\/torch-quiver","topics":["pytorch","geometric-deep-learning","graph-learning","gpu-acceleration","graph-neural-networks","distributed-computing"],"description":"PyTorch Library for Fast and Easy Distributed Graph Learning"}
{"name":"ericyangyu\/ppo-for-beginners","full_name":"ericyangyu\/PPO-for-Beginners","topics":["ppo","reinforcement-learning","reinforcement-learning-algorithms","machine-learning","pytorch"],"description":"A simple and well styled PPO implementation. Based on my Medium series: https:\/\/medium.com\/@eyyu\/coding-ppo-from-scratch-with-pytorch-part-1-4-613dfc1b14c8."}
{"name":"pytorch\/torchx","full_name":"pytorch\/torchx","topics":["pytorch","machine-learning","kubernetes","slurm","distributed-training","pipelines","components","deep-learning","python","aws-batch","ray","airflow"],"description":"TorchX is a universal job launcher for PyTorch applications. TorchX is designed to have fast iteration time for training\/research and support for E2E production ML pipelines when you're ready."}
{"name":"gradsflow\/chitra","full_name":"gradsflow\/chitra","topics":["tensorflow","image-processing","object-detection","deep-learning","image-dataset","visualization","gradcam","model-interpretation","model-visualization","image-classification","bounding-boxes","model-deployment","mlops","model-serving","python","machine-learning","fastapi","hacktoberfest","pytorch"],"description":"A multi-functional library for full-stack Deep Learning. Simplifies Model Building, API development, and Model Deployment."}
{"name":"zhaogaofeng611\/textmatch","full_name":"zhaogaofeng611\/TextMatch","topics":[],"description":"\u57fa\u4e8ePytorch\u7684\uff0c\u4e2d\u6587\u8bed\u4e49\u76f8\u4f3c\u5ea6\u5339\u914d\u6a21\u578b\uff08ABCNN\u3001Albert\u3001Bert\u3001BIMPM\u3001DecomposableAttention\u3001DistilBert\u3001ESIM\u3001RE2\u3001Roberta\u3001SiaGRU\u3001XlNet\uff09"}
{"name":"nianticlabs\/footprints","full_name":"nianticlabs\/footprints","topics":["computer-vision","deep-learning","depth-estimation","monodepth","pytorch"],"description":"[CVPR 2020] Estimation of the visible and hidden traversable space from a single color image"}
{"name":"thomas-yanxin\/smart_container","full_name":"thomas-yanxin\/Smart_container","topics":["paddlepaddle","paddleclas","django","nano","deep-learning","pp-shitu","wxapp","image-recognition","product-recognition","image-retrieval-system"],"description":"\ud83c\udf70\ud83c\udf4eColugoMum: Intelligent Retail Settlement Platform can accurately locate and identify each commodity, and can return a complete shopping list and the actual total price of commodities that customers should pay."}
{"name":"dptech-corp\/uni-mol","full_name":"dptech-corp\/Uni-Mol","topics":["molecular-modeling","pre-trained-model","pretraining","deep-learning"],"description":"A Universal 3D Molecular Representation Learning Framework"}
{"name":"twhui\/liteflownet3","full_name":"twhui\/LiteFlowNet3","topics":["liteflownet3","computer-vision","cnn","deeplearning","opitcal-flow","eccv2020","flow-warping","cost-volume-modulation","flow-field-deformation","flow-propagation"],"description":"LiteFlowNet3: Resolving Correspondence Ambiguity for More Accurate Optical Flow Estimation, ECCV 2020"}
{"name":"shivanandroy\/simplet5","full_name":"Shivanandroy\/simpleT5","topics":["t5","transformers","summarization","translation","classification","pytorch","simplet5","finetune","fine-tuning","t5-model","training"],"description":"simpleT5 is built on top of PyTorch-lightning\u26a1\ufe0f and Transformers\ud83e\udd17 that lets you quickly train your T5 models."}
{"name":"lucidrains\/adan-pytorch","full_name":"lucidrains\/Adan-pytorch","topics":["artificial-intelligence","deep-learning","optimizer"],"description":"Implementation of the Adan (ADAptive Nesterov momentum algorithm) Optimizer in Pytorch"}
{"name":"nikolazubic\/2dimageto3dmodel","full_name":"NikolaZubic\/2dimageto3dmodel","topics":["3d-computer-graphics","3d-reconstruction","pose-prediction","single-view-reconstruction","computer-vision","computer-graphics","kaolin","pytorch","deep-learning","neural-networks","loss-functions","rendering","gan","shapenet","shapenet-dataset","cub-dataset","pascal3d","mesh","voxel","point-cloud"],"description":"We evaluate our method on different datasets (including ShapeNet, CUB-200-2011, and Pascal3D+) and achieve state-of-the-art results, outperforming all the other supervised and unsupervised methods and 3D representations, all in terms of performance, accuracy, and training time."}
{"name":"google-research\/ibc","full_name":"google-research\/ibc","topics":["reinforcement-learning","deep-learning","imitation-learning"],"description":"Official implementation of Implicit Behavioral Cloning, as described in our CoRL 2021 paper, see more at https:\/\/implicitbc.github.io\/"}
{"name":"clovaai\/generative-evaluation-prdc","full_name":"clovaai\/generative-evaluation-prdc","topics":["deep-learning","generative-adversarial-network","evaluation-metrics","precision","recall","machine-learning","generative-model","fidelity","diversity","evaluation","icml","icml-2020","icml2020"],"description":"Code base for the precision, recall, density, and coverage metrics for generative models. ICML 2020."}
{"name":"dipeshpal\/jarvis_ai","full_name":"Dipeshpal\/Jarvis_AI","topics":["assistant","python","machine-learning","virtual-assistant","deep-learning"],"description":"Jarvis AI is a Python Module which is able to perform task like Chatbot, Assistant etc. It provides base functionality for any assistant application. This JarvisAI is built using Tensorflow, Pytorch, Transformers and other opensource libraries and frameworks."}
{"name":"pinto0309\/tflite2tensorflow","full_name":"PINTO0309\/tflite2tensorflow","topics":["tflite","tensorflow","tensorflow-lite","converter","models-converter","coreml","tf-trt","tfjs","tensorflowjs","edgetpu","models-conver","tensorflow-models","mediapipe","onnx","openvino","depthai","tensorrt","docker"],"description":"Generate saved_model, tfjs, tf-trt, EdgeTPU, CoreML, quantized tflite, ONNX, OpenVINO, Myriad Inference Engine blob and .pb from .tflite. Support for building environments with Docker. It is possible to directly access the host PC GUI and the camera to verify the operation. NVIDIA GPU (dGPU) support.  Intel iHD GPU (iGPU) support. Supports inverse quantization of INT8 quantization model."}
