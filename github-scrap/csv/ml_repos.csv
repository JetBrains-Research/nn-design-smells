wzhe06/sparrowrecsys,wzhe06/SparrowRecSys,"['recommender-system', 'deep-learning', 'machine-learning']",A Deep Learning Recommender System
zqpei/dssd,ZQPei/DSSD,"['dssd', 'object-detection', 'one-stage', 'one-shot-object-detection']",Pytorch implementation of DSSD (Deconvolutional Single Shot Detector)
guoshnbjtu/astgcn-r-pytorch,guoshnBJTU/ASTGCN-r-pytorch,[],"Attention Based Spatial-Temporal Graph Convolutional Networks for Traffic Flow Forecasting, AAAI 2019, pytorch version"
seominseok0429/label-smoothing-visualization-pytorch,seominseok0429/label-smoothing-visualization-pytorch,[],When Does Label Smoothing Help?_pytorch_implementationimp
suicao/pytorch-audio-emotion-recognition,suicao/Pytorch-Audio-Emotion-Recognition,"['audio', 'sentiment-classification', 'cnn', 'pytorch']",1st Place Public Leaderboard Solution for ERC2019
wxdang/mscred,wxdang/MSCRED,[],tensorflow implement the paper A Deep Neural Network for Unsupervised Anomaly Detection and Diagnosis in Multivariate Time Series Data 
kevinzakka/torchsdf-fusion,kevinzakka/torchsdf-fusion,"['tsdf-fusion', 'pytorch', 'robotics', 'computer-vision']",Benchmarking PyTorch variants of TSDF fusion.
silentmoebuta/simple_bert_for_tf2,SilentMoebuta/simple_bert_for_tf2,[],Build bert as a keras layer using TF2.0 .
liu-nlper/dialogue-utterance-rewriter,liu-nlper/dialogue-utterance-rewriter,"['transformer', 'rewriter', 'bert', 'pointer', 'pointer-networks']",ACL 2019论文复现：Improving Multi-turn Dialogue Modelling with Utterance ReWriter
monologuesmw/bearing-fault-diagnosis-cnn,monologuesmw/bearing-fault-diagnosis-cnn,"['fault-diagnosis', 'siamese-neural-network', 'tensorflow', 'bearing-fault-diagnosis']",Siamese network for bearing fault diagnosis
etetteh/sota-data-augmentation-and-optimizers,etetteh/sota-data-augmentation-and-optimizers,[],This repository contains some of the latest data augmentation techniques and optimizers for image classification using pytorch and the CIFAR10 dataset
seominseok0429/learning-loss-for-active-learning-pytorch,seominseok0429/Learning-Loss-for-Active-Learning-Pytorch,[],"Learning Loss for Active Learning Pytorch Implementation,(reproduction)"
cerebroai/reformers,cerebroai/reformers,"['reformers', 'pytorch', 'tensorflow']","Efficient Transformers for research, PyTorch and Tensorflow using Locality Sensitive Hashing"
maciejczyzewski/batchboost,maciejczyzewski/batchboost,"['deep-learning', 'machine-learning', 'pytorch']","batchboost is a variation on MixUp that instead of mixing just two images, mixes many images together."
leviborodenko/dgcnn,LeviBorodenko/dgcnn,"['deep-learning', 'deep-neural-networks', 'graphical-models', 'graph-embedding', 'graph-classification', 'paper-implementations', 'gnn', 'attention-mechanism', 'graph-signals', 'dgcnn', 'graph-convolutions']","Clean & Documented TF2  implementation of ""An end-to-end deep learning architecture for graph classification"" (M. Zhang et al., 2018)."
banditml/faucetml,banditml/faucetml,"['machine-learning', 'features', 'feature-engineering', 'bigquery', 'preprocessing', 'ml', 'pytorch']",High speed mini-batch data reading & preprocessing from BigQuery.
j911/deeplabv3plus-for-beginners,J911/DeepLabV3Plus-for-Beginners,"['pytorch', 'deeplabv3plus', 'cityscapes', 'segmentation']",DeepLabV3Plus for Beginners in Cityscapes Dataset
jingzhaozhang/why-clipping-accelerates,JingzhaoZhang/why-clipping-accelerates,[],A pytorch implementation for the LSTM experiments in the paper: Why Gradient Clipping Accelerates Training: A Theoretical Justification for Adaptivity
leewise9/segmentation-based-surface-defect-detection,LeeWise9/Segmentation-Based-Surface-Defect-Detection,[],"This is a deep learning application project in the industrial field, intended to detect defects on the workpiece surface. The code is based on keras and runs on GPU."
fmahoudeau/shelfnet-human-pose-estimation,fmahoudeau/ShelfNet-Human-Pose-Estimation,"['human-pose-estimation', 'deep-learning', 'ms-coco', 'shelfnet', 'real-time', 'pytorch', 'keypoint-detection', 'keypoint-localization', 'ms-coco-keypoints', 'hrnet', 'human-pose-tracking']",Fast and accurate Human Pose Estimation using ShelfNet with PyTorch
opium-sh/prl,opium-sh/prl,"['reinforcement-learning', 'machine-learning', 'artificial-intelligence', 'deep-learning', 'neural-networks', 'openai-gym', 'opium-sh', 'python']",Open-source library for a reinforcement learning research.
sailordiary/m3f.pytorch,sailordiary/m3f.pytorch,"['emotion-recognition', 'affective-computing', 'deep-learning']","PyTorch code for ""M³T: Multi-Modal Multi-Task Learning for Continuous Valence-Arousal Estimation"""
nlp-love/introduction-nlp,NLP-LOVE/Introduction-NLP,"['nlp', 'mechine-learing', 'deep-learning', 'ai']",HanLP作者的新书《自然语言处理入门》详细笔记！业界良心之作，书中不是枯燥无味的公式罗列，而是用白话阐述的通俗易懂的算法模型。从基本概念出发，逐步介绍中文分词、词性标注、命名实体识别、信息抽取、文本聚类、文本分类、句法分析这几个热门问题的算法原理与工程实现。
jia-zhuang/pytorch-multi-gpu-training,jia-zhuang/pytorch-multi-gpu-training,"['pytorch', 'multi-gpu-training']",整理 pytorch 单机多 GPU 训练方法与原理
midasklr/ssd.pytorch,midasklr/SSD.Pytorch,[],Pytorch implementation of SSD512
hibugs/centernet,HiBugs/CenterNet,"['pytorch', 'centernet', 'face-detection', 'seaships-detection', 'centerface']",pytorch 使用centernet进行 人脸检测Face Detection (bbox + landmark)、 船只检测SeaShips Detection
abishekvashok/rep-counter,abishekvashok/Rep-Counter,"['tensorflow', 'deep-learning', 'machine-learning', 'repetition', 'repetion-counter', 'artificial-intelligence', 'neural-networks', 'rnn', 'rnn-tensorflow', 'posenet']",AI Exercise Rep Counter based on Google's Human Pose Estimation Library (Posenet)
ansleliu/efficientnet.pytorch,linksense/EfficientNet.PyTorch,"['efficientnet', 'efficient-model', 'efficient-inference', 'pytorch', 'efficientnet-pytorch', 'efficientnet-pretrained', 'efficientseg', 'imagenet', 'pretrained-weights']","Concise, Modular, Human-friendly PyTorch implementation of EfficientNet with Pre-trained Weights."
lonepatient/bert-attribute-value-extract,lonePatient/BERT-Attribute-Value-Extract,"['pytorch', 'bert', 'attribute-value-extract', 'lstm', 'crf', 'attention']","A Pytorch implementation of ""Scaling Up Open Tagging from Tens to Thousands: Comprehension Empowered Attribute Value Extraction from Product Title"" (ACL 2019)."
pengjieren/repeatnet-pytorch,PengjieRen/RepeatNet-pytorch,[],This is a pytorch (>=1.3.0) implementation of RepeatNet
imlhf/se_dcunet,IMLHF/SE_DCUNet,[],"Deep Complex UNet for speech enhancement, init from ""https://github.com/chanil1218/DCUnet.pytorch"""
zzz1515151/self-supervised_learning_sketch,zzz1515151/self-supervised_learning_sketch,"['self-supervised-learning', 'self-supervised', 'deep-learning', 'representation-learning', 'free-hand-sketch', 'sketch-recognition', 'sketch-retrieval', 'sketch-classificaton', 'temporal-convolutional-network', 'temporal-convolutions', 'rotnet']","self-supervised learning, deep learning, representation learning, RotNet, temporal convolutional network(TCN), deformation transformation, sketch pre-train, sketch classification, sketch retrieval, free-hand sketch,  official code of paper ""Deep Self-Supervised Representation Learning for Free-Hand Sketch"""
codingchaozhang/yolov3_keras,CodingChaozhang/yolov3_keras,[],yolo3-keras的源码
slientge/attrec,slientGe/AttRec,"['python', 'tensorflow', 'recommender-system']","TensorFlow simple implemenation of AttRec model in paper ""Next Item Recommendation with Self-Attention"""
antoinetheb/rnn-rl,AntoineTheb/RNN-RL,"['reinforcement-learning', 'pytorch', 'recurrent-neural-networks']",Experiments with reinforcement learning and recurrent neural networks
tangxianfeng/pa-gnn,tangxianfeng/PA-GNN,"['machine-learning', 'meta-learning', 'graph-mining', 'adversarial-defense', 'deep-learning', 'neural-networks', 'graph-neural-networks']","Implementation of paper ""Transferring Robustness for Graph Neural Network Against Poisoning Attacks""."
andrew-zzz/tree-based-deep-model,andrew-zzz/tree-based-deep-model,[],it's the realization of Tree-based Deep Model with tensorflow
oelesin/autogluon-tabular-sagemaker-container,OElesin/autogluon-tabular-sagemaker-container,"['sagemaker', 'autogluon', 'autogluon-mxnet', 'algorithm', 'ecr', 'deep-learning', 'automl']",Deploy automl models for tabular tasks on AWS Sagemaker with AutoGluon
liu2231665/taan-mtl,yingrliu/TAAN-MTL,"['multi-task-learning', 'deep-neural-networks', 'pytorch']",Adaptive Activation Network and Functional Regularization for Efficient and Flexible Deep Multi-Task Learning
cluebenchmark/cluedatasetsearch,CLUEbenchmark/CLUEDatasetSearch,"['nlp', 'datasets', 'chinese', 'ner', 'qa', 'match', 'text-classification', 'machine-translation', 'knowledge-graph', 'corpus', 'machine-reading-comprehension', 'sentiment-analysis', 'text-similarity', 'text-summarization']",搜索所有中文NLP数据集，附常用英文NLP数据集
whu-wxy/non-local-u-nets-2d-block,Whu-wxy/Non-local-U-Nets-2D-block,[],Inplement 2D global aggregation block of Non-local-U-Nets. Written in pytorch.
ainrichman/peppa-facial-landmark-pytorch,ainrichman/Peppa-Facial-Landmark-PyTorch,"['face', 'landmark', 'landmarks', 'alignment', 'onnx', 'mnn', 'facial', 'pytorch']",Facial Landmark Detection based on PyTorch
hanlard/transformer-based-pretrained-model-for-event-extraction,Hanlard/Transformer-based-pretrained-model-for-event-extraction,"['event-extraction', 'transformer', 'bert', 'ace2005', 'muti-task']",使用基于Transformer的预训练模型在ACE2005数据集上进行事件抽取任务
rick-mccoy/reformer-pytorch,Rick-McCoy/Reformer-pytorch,[],Implements Reformer: The Efficient Transformer in pytorch.
wangwenhao0716/adapted-center-and-scale-prediction,WangWenhao0716/Adapted-Center-and-Scale-Prediction,[],"Pytorch implementation of ""Adapted Center and Scale Prediction: More stable and More Accurate"""
pputzky/irim_fastmri,pputzky/irim_fastMRI,"['fastmri', 'inverse-problems', 'large-scale-learning', 'deep-learning', 'mri']",i-RIM applied to the fastMRI challenge data.
wangbq18/distillation_model_keras_bert,wangbq18/distillation_model_keras_bert,[],CNN、BiLSTM、Bert(3layers)对Bert(12layers)模型的蒸馏的keras实现
aiff22/pynet-pytorch,aiff22/PyNET-PyTorch,"['pynet', 'pytorch-implementation', 'image-enhancement', 'image-processing', 'image-reconstruction', 'deep-learning', 'raw-to-rgb', 'computer-vision', 'mobile', 'photography', 'isp', 'camera', 'image-to-image-translation', 'raw', 'photos']",Generating RGB photos from RAW image files with PyNET (PyTorch)
waterzxj/unf,waterzxj/UNF,"['pytorch', 'text-classification', 'sequence-labeling', 'torchtext']",UNF(Universal NLP Framework)
snakers4/russian_stt_text_normalization,snakers4/russian_stt_text_normalization,"['speech', 'russian-language', 'python3', 'pytorch', 'torchscript', 'text-normalization', 'speech-to-text']",Russian text normalization pipeline for speech-to-text and other applications based on tagging s2s networks
zhengyima/ncov_sentiment,zhengyima/ncov_sentiment,"['tensorflow', 'bert', 'fine-tuning', 'nlp', 'python', 'sentiment-analysis', 'sentiment-classification', 'bert-chinese', 'deep-learning', 'datafountain', 'machine-learning', 'nerual-network']",疫情期间网民情绪识别比赛baseline，使用BERT进行端到端的fine-tuning，datafountain平台，平台评测F1值0.716。
fmu2/gradfeat20,fmu2/gradfeat20,"['deep-learning', 'representation-learning', 'transfer-learning']",Gradients as Features for Deep Representation Learning
sfme/rvae_mixedtypes,sfme/RVAE_MixedTypes,"['outlier-detection', 'robust-variational-autoencoders', 'repair', 'tabular-data', 'deep-learning', 'generative-model', 'data-analysis', 'unsupervised-learning', 'pytorch', 'python']","Repository for code release of paper ""Robust Variational Autoencoders for Outlier Detection and Repair of Mixed-Type Data"" (AISTATS 2020)"
hiredscorelabs/seqtolang,hiredscorelabs/seqtolang,"['machine-learning', 'deep-learning', 'natural-language-processing', 'language-identification']",Multi-Langauge Identification
eazydammy/violence-detection-with-c3d,eazydammy/violence-detection-with-C3D,"['c3d', 'convolutional-neural-networks', 'classification', 'deep-learning', 'computer-vision', 'edge-computing', 'intel', 'violence-detection']",Violence Detection using 3D Convolutional Neural Networks
walsvid/generation3d,walsvid/Generation3D,"['3d-reconstruction', 'deep-learning', 'shape-generation', '3d-deep-learning', 'disn', 'pixel2mesh']", 3D Shape Generation Baselines in PyTorch.
daixiangzi/mask-detection,daixiangzi/Mask-Detection,"['no-mask-dataset', 'keras', 'mask-detection', 'unet', 'segmentation']",we don't use any face maks dataset to complete face mask Detection
jhultman/vision3d,jhultman/vision3d,"['3d-deep-learning', 'object-detection', 'lidar', 'point-cloud', 'pytorch', 'voxel', 'detection', 'codebase', 'perception', 'autonomous-vehicles', 'real-time']",Research platform for 3D object detection in PyTorch.
shilrley6/faster-r-cnn-with-model-pretrained-on-visual-genome,shilrley6/Faster-R-CNN-with-model-pretrained-on-Visual-Genome,[],"Faster RCNN model in Pytorch version, pretrained on the Visual Genome with ResNet 101"
alldbi/supermix,alldbi/SuperMix,"['pytorch', 'augmentation', 'supervised', 'deep-learning', 'saliency-detection', 'distillation', 'cvpr2021']",Pytorch implementation of CVPR2021 paper: SuperMix: Supervising the Mixing Data Augmentation
mohammadkhalifa/xlm-roberta-ner,mukhal/xlm-roberta-ner,"['named-entity-recognition', 'roberta', 'nlp', 'nlp-machine-learning', 'transfer-learning', 'sequence-labeling', 'part-of-speech-tagging']",Named Entity Recognition with Pretrained XLM-RoBERTa
hexops/azure-kinect-python,hexops/Azure-Kinect-Python,"['python', 'python3', 'azure', 'kinect', 'k4a', 'k4abt', 'azure-kinect', 'azure-kinect-sdk', 'opencv', 'deep-learning', 'azure-kinect-dk', 'body-tracking', 'mocap']",Python 3 bindings for the Azure Kinect SDK
610265158/face_landmark_pytorch,610265158/face_landmark_pytorch,[],pytorch face_landmark
kenneth111/transformerdemo,Kenneth111/TransformerDemo,[],Pytorch nn.Transformer Demo
sthalles/simclr-tensorflow,sthalles/SimCLR-tensorflow,"['tensorflow', 'contrastive-loss', 'contrastive-learning', 'simclr', 'representation-learning', 'unsupervised-learning', 'self-supervised-learning']",TensorFlow Implementation of SimCLR: A Simple Framework for Contrastive Learning of Visual Representations
fendouai/opencvtutorials,fendouai/OpenCVTutorials,"['opencv', 'machine-learning', 'computer-vision', 'deep-learning', 'object-detection', 'opencv-python', 'python']",OpenCV-Python4.1 中文文档
majumderb/rezero,majumderb/rezero,"['pytroch', 'transformer', 'resnet', 'language-modeling', 'deep-neural-networks']","Official PyTorch Repo for ""ReZero is All You Need: Fast Convergence at Large Depth"""
zhaogaofeng611/textmatch,zhaogaofeng611/TextMatch,[],基于Pytorch的，中文语义相似度匹配模型（ABCNN、Albert、Bert、BIMPM、DecomposableAttention、DistilBert、ESIM、RE2、Roberta、SiaGRU、XlNet）
peijiyang/bert-bilstm-crf-ner-pytorch,hertz-pj/BERT-BiLSTM-CRF-NER-pytorch,"['named-entity-recognition', 'chinese', 'pytorch', 'bert', 'bilstm-crf']",Pytorch BERT-BiLSTM-CRF For NER
lbin/centernet-better-plus,lbin/CenterNet-better-plus,"['centernet', 'detectron2', 'pytorch']",centernet
bestburning/mhxy,BestBurning/mhxy,"['tensorflow2', 'python', 'kmclass', 'opencv', 'tensorflow']",tensorflow实践：梦幻西游人物弹窗识别
hysts/pytorch_mpiigaze_demo,hysts/pytorch_mpiigaze_demo,"['computer-vision', 'gaze-estimation', 'gaze', 'pytorch']",Gaze estimation using MPIIGaze and MPIIFaceGaze
simon3dv/frustum_pointnets_pytorch,simon3dv/frustum_pointnets_pytorch,[],A pytorch version of frustum-pointnets
prunetruong/glampoints_pytorch,PruneTruong/GLAMpoints_pytorch,[],Official Pytorch implementation of GLAMpoints 
guoyi0/alphafive,GuoYi0/alphaFive,"['alphago', 'alphago-zero', 'alphazero', 'gomoku', 'reinforcement-learning', 'tensorflow', 'gobang']","alphaGo版本的五子棋(gobang, gomoku)"
hanyoseob/pytorch-noise2void,hanyoseob/pytorch-noise2void,"['deep-learning', 'deep-neural-networks', 'unsupervised-learning', 'noise2void', 'cnn', 'pytorch-gan']",Noise2Void - Learning Denoising from Single Noisy Images
longmaoteamtf/keras_ernie,LongmaoTeamTf/keras_ernie,"['ernie', 'keras', 'machine-learning']",Pre-trained ERNIE models could be loaded with Keras for feature extraction and prediction.
mxl1990/tsne-pytorch,mxl1990/tsne-pytorch,"['tsne', 'tsne-algorithm', 'tsne-cuda', 'tsne-visualization', 'pytorch']",Pytorch implementation for t-SNE with cuda to accelerate
junqi-zhang/aetn,Junqi-Zhang/AETN,"['python', 'tensorflow', 'estimator', 'transformer']",The implementation of the AutoEncoder-coupled Transformer Network by TensorFlow
szq0214/cmc_with_image_mixture,szq0214/CMC_with_Image_Mixture,[],"pytorch implementation of ""Contrastive Multiview Coding"", ""Momentum Contrast for Unsupervised Visual Representation Learning"", and ""Unsupervised Feature Learning via Non-Parametric Instance-level Discrimination"""
xggiou/tensorflow_keras_to_caffe,xggIoU/tensorflow_keras_to_caffe,[],This script implements the tensorflow1.x and keras model into a caffe inference model.
ansleliu/mixnet-pytorch,linksense/MixNet-PyTorch,"['mixnet', 'mixnets', 'pytorch', 'efficient-model', 'efficientnet', 'image-classification', 'mixnet-pytorch', 'mixseg', 'bifpn', 'lightnet']","Concise, Modular, Human-friendly PyTorch implementation of MixNet with Pre-trained Weights."
dsgiitr/audio-super-resolution,dsgiitr/Audio-Super-Resolution,"['pytorch', 'super-resolution', 'deep-learning']",Enhancment of Audio Quality (Bit-Depth and Sampling-Rate) using Deep Learning. 
a-lincui/adversarial_patch_attack,A-LinCui/Adversarial_Patch_Attack,[],Pytorch implementation of Adversarial Patch on ImageNet (arXiv: https://arxiv.org/abs/1712.09665)
dongwuuu/covid-19-classification,dongwuuu/COVID-19-Classification,"['ncp', 'covid-19', 'classification', 'cnn', 'deep-learning', 'medical-images']",COVID-19  NCP CNN classification medical image
jlian2/cnn-lstm_wind_power_prediction,jlian2/Tensorflow-Wind-Power-Prediction,"['lstm', 'cnn', 'tensorflow', 'deep-learning']",Release a public wind power dataset
cheind/pytorch-debayer,cheind/pytorch-debayer,"['debayer', 'demosaicing', 'bayer', 'bayer-filter-array', 'pytorch', 'convolution']",Convolutional PyTorch debayering / demosaicing layers
cyril-sterling/evflownet-pytorch,Cyril-Sterling/EVFlowNet-pytorch,[],EVFlowNet in pytorch
youngwanlee/vovnet-detectron2,youngwanLEE/vovnet-detectron2,"['vovnet', 'detectron2', 'object-detection', 'instance-segmentation', 'pytorch', 'panoptic-segmentation', 'cvpr2020']","VoVNet backbone networks for detectron2, in CVPR 2020"
bl0/moco,bl0/moco,"['unsupervised-learning', 'self-supervised-learning', 'pytorch', 'imagenet', 'resnet-50', 'moco', 'contrast-learning', 'momentum-contrast']","Unofficial implementation with pytorch DistributedDataParallel for ""MoCo: Momentum Contrast for Unsupervised Visual Representation Learning"""
xiongma/roberta-wwm-base-distill,xiongma/roberta-wwm-base-distill,"['bert', 'pretrained-models', 'roberta', 'tensorflow', 'natural-language-processing', 'distillation']",this is roberta wwm base distilled model which was distilled from roberta wwm  by roberta wwm large
chunyuwang/imu-human-pose-pytorch,CHUNYUWANG/imu-human-pose-pytorch,[],"This is an official Pytorch implementation of ""Fusing Wearable IMUs with Multi-View Images for Human Pose Estimation: A Geometric Approach, CVPR 2020"". "
bubbliiiing/seq2seq-keras,bubbliiiing/seq2seq-keras,[],这是一个利用keras实现seq2seq模型的仓库，大家可以通过这个仓库学习到许多的seq2seq的例子
human-analysis/muxconv,human-analysis/MUXConv,[],"MUXConv: Information Multiplexing in Convolutional Neural Networks (CVPR '20), Pytorch Implementation"
hpc203/facemaskdetection-dnn,hpc203/FaceMaskDetection-dnn,"['opencv', 'dnn', 'facemask-detection', 'deep-learning']",用opencv的dnn模块实现人脸口罩检测，包含C++和Python两种版本的实现
fabio-deep/rezero-resnet,fabio-deep/ReZero-ResNet,"['resnet', 'rezero', 'deep-learning', 'deep-neural-networks', 'residual-networks', 'pytorch', 'cifar10', 'python', 'machine-learning']",Unofficial pytorch implementation of ReZero in ResNet
charlesdong1991/hackerbert,charlesdong1991/HackerBERT,"['elasticsearch', 'bert', 'bert-embeddings', 'hacker-news', 'docker', 'docker-compose', 'nlp', 'flask']",A showcase of combining Elasticsearch with BERT on the HackerNews public data
gyunggyung/albert-text-classification,gyunggyung/ALBERT-Text-Classification,"['tensorflow', 'tensorflow2', 'bert', 'bert-model', 'bert-classifier', 'classification', 'albert', 'text-classification']","ALBERT Text Classification Tensorflow, Resume Classification"
uvipen/tetris-deep-q-learning-pytorch,uvipen/Tetris-deep-Q-learning-pytorch,"['reinforcement-learning', 'deep-q-network', 'deep-q-learning', 'pytorch', 'cv2']",Deep Q-learning for playing tetris game
fuy34/superpixel_fcn,fuy34/superpixel_fcn,"['superpixel', 'deep-learning', 'pytorch']",[CVPR‘20] SpixelFCN: Superpixel Segmentation with Fully Convolutional Network
svip-lab/fastmvsnet,svip-lab/FastMVSNet,"['pytorch', 'cvpr2020', 'multi-view-stereo']",[CVPR'20] Fast-MVSNet: Sparse-to-Dense Multi-View Stereo With Learned Propagation and Gauss-Newton Refinement
leijue222/portrait-matting-unet-flask,leijue222/portrait-matting-unet-flask,"['pytorch', 'matting', 'segmentation', 'flask', 'portrait']",Portrait Mating  implementation in UNet with PyTorch.
qianjinhao/circle-loss,qianjinhao/circle-loss,[],Circleloss pytorch version
dr-costas/dnd-sed,dr-costas/dnd-sed,"['sound-event-detection', 'depthwise-separable-convolutions', 'dilated-convolution', 'depthwiseseparableconvolution', 'dilated-cnn', 'audio-signal-processing', 'machine-listening', 'deep-learning', 'deep-neural-networks', 'machine-learning']",Sound event detection with depthwise separable and dilated convolutions. 
habout632/stargan2,habout632/StarGAN2,[],Unofficial Pytorch version StarGAN v2
adrienchaton/perceptualaudio_pytorch,adrienchaton/PerceptualAudio_Pytorch,[],"Pytorch implementation of ""A Differentiable Perceptual Audio Metric Learned from Just Noticeable Differences"", Pranay Manocha et al. - unofficial work in progress"
carrychang/real_time_datamining_software,CarryChang/Real_Time_DataMining_Software,"['data-mining-software', 'nlp', 'real-time-anslysis', 'data-spider', 'ugc-analysis', 'sentiment-analysis', 'demo']",携程/榛果民宿实时评论挖掘软件，包含数据的实时采集/数据清洗/结构化保存/ UGC 数据主题提取/情感分析/后结构化可视化等技术的综合性演示 Demo。基于在线民宿 UGC 数据的意见挖掘项目，包含数据挖掘和 NLP 相关的处理，负责数据采集、主题抽取、情感分析等任务。主要克服用户打分和评论不一致，实时对携程和美团在线民宿的满意度进行评测以及对额外数据进行可视化的综合性工具，多维度的对在线 UGC 进行数据挖掘并可视化，demo 视频演示见链接。
yuta-hi/pytorch_bayesian_unet,yuta-hi/pytorch_bayesian_unet,"['pytorch', 'cnn', 'unet', 'bayesian', 'uncertainty', 'pix2pix', 'adversarial-training']",Migrate to PyTorch. Re-implementation of Bayesian Convolutional Neural Networks (BCNNs)
therayfitzgerald/annie,TheRayFitzgerald/Annie,"['python', 'chatbot', 'nlp-machine-learning', 'nlp', 'ntlk', 'mental-health', 'dataframe', 'data-science', 'reddit-data', 'corpus', 'pandas']",A bespoke NLP Chatbot trained using a corpus of Reddit data.
aboerzel/german_license_plate_recognition,aboerzel/German_License_Plate_Recognition,"['machine-learning', 'deep-learning', 'tensorflow2', 'udacity-machine-learning-nanodegree', 'computer-vision', 'android-app', 'capstone-project', 'tflite', 'number-plate-recognition', 'plate-detection', 'detection-api', 'udacity']",Android camera app for automatic recognition of German license plates using TensorFlow / TensorFlow Lite 2.4.1
clear-nus/ocfgan,clear-nus/OCFGAN,"['generative-adversarial-network', 'gan', 'probability-metric', 'characteristic-functions']","Pytorch implementation of OCFGAN-GP (CVPR 2020, Oral)."
goktug97/pepg-es,goktug97/PEPG-ES,"['evolution-strategies', 'neural-network', 'artificial-intelligence', 'policy-gradient']",Python Implementation of Parameter-exploring Policy Gradients Evolution Strategy 
tinyzeamays/circleloss,TinyZeaMays/CircleLoss,[],"Pytorch implementation of the paper ""Circle Loss: A Unified Perspective of Pair Similarity Optimization"""
meijieru/yet_another_mobilenet_series,meijieru/yet_another_mobilenet_series,[],Yet Another Pytorch Distributed MobileNetV2-based Networks Implementation
chienwong/resunet-a,ChienWong/ResUnet-a,[],"For the semantic segmentation of remote sensing image, tensorflow implementation"
cyang0515/pytorch_ssn,CYang0515/pytorch_ssn,[],A pytorch version of SSN
minerva-j/pytorch-segmentation-multi-models,Minerva-J/Pytorch-Segmentation-multi-models,[],"Pytorch implementation for Semantic Segmentation with multi models (Deeplabv3, Deeplabv3_plus, PSPNet, UNet, UNet_AutoEncoder, UNet_nested, R2AttUNet, AttentionUNet, RecurrentUNet,, SEGNet, CENet, DsenseASPP, RefineNet, RDFNet)"
sarsbug/smp,sarsbug/SMP,[],Pytorch implementation for Deep Self-Learning From Noisy Labels
qs956/latex_ocr_pytorch,qs956/Latex_OCR_Pytorch,[],基于Pytorch实现的End-to-End图像Latex公式识别 inspire by LinXueyuanStdio/LaTeX_OCR_PRO
liviniuk/dorn_depth_estimation_pytorch,liviniuk/DORN_depth_estimation_Pytorch,"['depth-estimation', 'monocular-depth-estimation', 'pytorch', 'deep-learning', 'neural-network', 'computer-vision']","Pytorch implementation of ""Deep Ordinal Regression Network for Monocular Depth Estimation"" paper by Fu et. al."
leebebeto/pytorch-gan,leebebeto/pytorch-GAN,"['computer-vision', 'pytorch', 'gan', 'generative-model', 'generative-adversarial-network']",My pytorch implementation for GAN
islanna/dynamicrelu,Islanna/DynamicReLU,"['pytorch', 'relu', 'dynamic']",Implementation of Dynamic ReLU on Pytorch
lolei/redditcleaner,LoLei/redditcleaner,"['reddit', 'pushshift', 'data-cleaning', 'text-data', 'nlp', 'python', 'praw', 'psaw', 'hacktoberfest']",Cleans Reddit Text Data :scroll: :broom:
velebit-ai/covid-next-pytorch,velebit-ai/COVID-Next-Pytorch,"['pytorch', 'xray', 'covid-19', 'resnext']",COVID-Next -> Pytorch upgrade of the COVID-Net for COVID-19 detection in X-Ray images
evanmy/sae,evanmy/sae,"['segmentation', 'autoencoder', 'mri', 'pytorch', 'deep-learning', 'variational-autoencoder', 'unsupervised', 'brain']",Accepted in MIDL 2020
lehduong/knowledge-distillation-by-replacing-cheap-conv,lehduong/Knowledge-Distillation-by-Replacing-Cheap-Conv,"['convolutional-neural-networks', 'knowledge-distillation', 'semantic-segmentation', 'deeplabv3', 'deeplabv3plus', 'pytorch', 'low-resource']",In search of effective and efficient Pipeline for Distillating Knowledge in Convolutional Neural Networks
theobdt/aerial_pc_classification,theobdt/aerial_pc_classification,"['point-cloud', 'pytorch', 'deep-learning', 'machine-learning', 'pointcloud', 'aerial-point-clouds', 'artificial-intelligence', 'python', 'aerial-imagery']",Segmentation of urban aerial point clouds with Deep Learning in Pytorch.
ahmetfurkandemir/mask-detection-v1,AhmetFurkanDEMIR/Mask-Detection-V1,"['deep-learning', 'maskdetection', 'keras', 'keras-tensorflow', 'tensorflow', 'detection', 'object-detection', 'opencv', 'python']",Mask Detection
hyeongminlee/adacof-pytorch,HyeongminLEE/AdaCoF-pytorch,"['video-frame-interpolation', 'deep-learning', 'pytorch', 'cuda', 'cupy', 'python']","Official source code for our paper ""AdaCoF: Adaptive Collaboration of Flows for Video Frame Interpolation"" (CVPR 2020)"
selimsef/xview2_solution,selimsef/xview2_solution,"['satellite-imagery', 'deep-learning', 'semantic-segmentation']",2nd place solution for Xview2 challenge https://xview2.org/
palver7/equiconvpytorch,palver7/EquiConvPytorch,[],Pytorch implementation of EquiConv 
luanyunteng/pytorch-be-your-own-teacher,luanyunteng/pytorch-be-your-own-teacher,"['knowledge-distillation', 'self-distillation']","A pytorch implementation of paper 'Be Your Own Teacher: Improve the Performance of Convolutional Neural Networks via Self Distillation', https://arxiv.org/abs/1905.08094"
gouxiangchen/soft-q-learning,gouxiangchen/soft-Q-learning,[],"discrete soft Q learning(SQL) and soft Q imitation learning(SQIL) implementation in pytorch, simple!"
seungjunlee96/pointnet2_randaugment,seungjunlee96/PointNet2_RandAugment,"['pointnet2', 'pointnet2-pytorch', 'pytorch', 'randaugment', 'pointcloud', 'data-augmentation', 'classification', 'segmentation', '3d']",Applying RandAugment on PointNet++
imranulashrafi/banner,imranulashrafi/banner,"['bangla', 'bengali', 'ner', 'bert', 'contextualized', 'cost-sensitive-learning']",Pytorch implementation for paper 'BANNER: A Cost-Sensitive Contextualized Model for Bangla Named Entity Recognition'
agrija9/deep-unsupervised-domain-adaptation,agrija9/Deep-Unsupervised-Domain-Adaptation,"['domain-adaptation', 'convolutional-neural-networks', 'coral-loss', 'unsupervised-learning', 'deep-coral', 'deep-domain-confusion', 'conditional-adversarial-da']","Pytorch implementation of four neural network based domain adaptation techniques: DeepCORAL, DDC, CDAN and CDAN+E. Evaluated on benchmark dataset Office31."
aydinnyunus/ur-ai,aydinnyunus/UR-AI,"['chatbot', 'chatbots', 'chatbot-application', 'machine-learning', 'deep-learning', 'artificial-intelligence', 'python', 'python3', 'whatsapp', 'whatsapp-web', 'selenium', 'selenium-webdriver', 'selenium-python', 'whatsapp-chat', 'python-3', 'chat', 'bot', 'bots', 'silicon-valley', 'series']",Create Your AI ChatBot and Connect it to the Whatsapp !
blackhc/toma,BlackHC/toma,"['pytorch', 'python', 'machine-learning', 'data-science', 'gpu']",Helps you write algorithms in PyTorch that adapt to the available (CUDA) memory
iit-pavis/ai-thermometer,IIT-PAVIS/AI-Thermometer,"['ai', 'deep-learning', 'thermal-imaging']",Code for automatically measuring the temperature of people using a thermal camera.
donglee-afar/logdeep,donglee-afar/logdeep,"['log-analysis', 'anomaly-detection', 'aiops', 'deeplog', 'log-anomaly', 'pytorch', 'sequence-prediction', 'failure-detection']",log anomaly detection toolkit including DeepLog
mickeystroller/r-bert,mickeysjm/R-BERT,"['relation-extraction', 'semeval-2010', 'tacred', 'bert-model', 'relation-classification', 'pytorch']",Pytorch re-implementation of R-BERT model
erfaniaa/commit-type-detection,Erfaniaa/commit-type-detection,"['pytorch', 'tf-idf', 'deep-learning', 'neural-network', 'classification', 'paper', 'python']",Classify Git commits with deep learning
whitegive-boy/cws-hmm_bilstm-crf,WhiteGive-Boy/CWS-Hmm_BiLSTM-CRF,[],CWS中文分词 HMM BiLSTM+CRF pytorch 细致实现
kyfafyd/mirrorgan,Kyfafyd/MirrorGAN,"['text2image', 'image-captioning', 'mirrorgan', 'pytorch']",Reproduction of the paper MirrorGAN: Learning Text-to-image Generation by Redescription
image-py/planer,Image-Py/planer,"['cnn', 'deep-learning', 'inference-engine']",Powerful Light Artificial NEuRon inference framework for CNN
sicara/tf2-evonorm,sicara/tf2-evonorm,"['tensorflow', 'keras', 'deep-learning']",TensorFlow 2.0 implementation of Evonorm
felixopolka/deep-gaussian-process,FelixOpolka/Deep-Gaussian-Process,"['bayesian-inference', 'gpflow', 'tensorflow', 'deep-gaussian-processes', 'gaussian-processes', 'machine-learning']",🤿 Implementation of doubly stochastic deep Gaussian Process using GPflow and TensorFlow 2.0
stephenfang51/image_classification_pytorch,Stephenfang51/image_classification_pytorch,[],Pytorch实践简单， 方便， 快速训练 图像分类模型
tianheyu927/pcgrad,tianheyu927/PCGrad,"['multi-task-learning', 'deep-learning', 'deep-reinforcement-learning']","Code for ""Gradient Surgery for Multi-Task Learning"""
seewoo5/kt,seewoo5/KT,"['knowledge-tracing', 'pytorch']",Knowledge Tracing Models with PyTorch
riroaki/capsnet,Riroaki/CapsNet,"['pytorch', 'capsule-network', 'capsule', 'capsule-neural-networks']",A pytorch implementation of Capsule Network.
zjuter0126/resnest_in_tensorflow2.2,Holidays1999/ResNest_in_tensorflow2.2,[],ResNest_in_tensorflow.2.2
marload/distrl-tensorflow2,marload/DistRL-TensorFlow2,"['machine-learning', 'deep-learning', 'tensorflow', 'tensorflow2', 'c51', 'qr-dqn', 'dqn', 'rainbow-dqn', 'distributional-rl']",🐳 Implementation of various Distributional Reinforcement Learning Algorithms using TensorFlow2.
tensorbfs/cmpo,TensorBFS/cMPO,"['tensor-networks', 'pytorch']",continuous-time matrix product operator for finite temperature quantum states
mtics/deep-photo-enhancer,mtics/deep-photo-enhancer,"['image-enhancement', 'python', 'pytorch', 'deep-photo-enhancer']",the Pytorch implementation of Deep Photo Enhancer
juliagusak/neural-ode-norm,juliagusak/neural-ode-norm,"['neural-ode', 'anode', 'normalization', 'pytorch', 'ordinary-differential-equations', 'neural-network']","Models and code for the ICLR 2020 workshop paper ""Towards Understanding Normalization in Neural ODEs"""
gatsby2016/fast-wsi-prediction,gatsby2016/Fast-WSI-Prediction,"['pytorch', 'whole-slide-image', 'classification-task', 'pathological-images', 'deep-learning', 'medical-image-computing']",Unofficial implementation for ScanNet (a fast WSI prediction method) in PyTorch.
marload/deeprl-tensorflow2,marload/DeepRL-TensorFlow2,"['tensorflow', 'machine-learning', 'reinforcement-learning', 'a2c', 'a3c', 'reinforce', 'dqn', 'trpo', 'ppo', 'sac', 'ddpg', 'deep-learning', 'deep-reinforcement-learning', 'tensorflow2', 'dueling-dqn', 'double-dqn', 'rainbow-dqn']",🐋 Simple implementations of various popular Deep Reinforcement Learning algorithms using TensorFlow2
curiousily/deploy-bert-for-sentiment-analysis-with-fastapi,curiousily/Deploy-BERT-for-Sentiment-Analysis-with-FastAPI,"['transformers', 'bert', 'huggingface-transformer', 'huggingface', 'pytorch', 'deployment', 'fastapi', 'python', 'machine-learning', 'deep-learning', 'deploy-machine-learning', 'sentiment-analysis', 'rest', 'rest-api', 'uvicorn']","Deploy BERT for Sentiment Analysis as REST API using FastAPI, Transformers by Hugging Face and PyTorch"
hltchkust/xpersona,HLTCHKUST/Xpersona,"['crosslingual', 'dataset', 'bert', 'chatbot', 'transformer', 'dialog']",XPersona: Evaluating Multilingual Personalized Chatbot
bojone/keras_recompute,bojone/keras_recompute,[],saving memory by recomputing for keras
lucifer443/efficientdet-pytorch,lucifer443/EfficientDet-Pytorch,"['efficientdet', 'mmdetection', 'pytorch', 'detection', 'bifpn']",This project is a kind of implementation of EfficientDet(CVPR 2020) using mmdetection. 
dulaku/progan-for-humans,dulaku/ProGAN-for-Humans,[],Pytorch code for ProGAN optimized for human reading over machine execution
waterhorse1/melu_pytorch,waterhorse1/MELU_pytorch,[],An unofficial pytorch implementation of MELU
jiayiwang5/machinetranslation-transformer,jayeew/MachineTranslation-Transformer,"['transformer', 'keras', 'chinese-translation', 'machine-translation', 'chinese-nlp']",中文->英文的机器翻译，完全基于kreas-transformer。模型已上传，可直接跑。
natanielruiz/disrupting-deepfakes,natanielruiz/disrupting-deepfakes,"['adversarial-attacks', 'disrupting-deepfakes', 'deepfakes', 'deep-learning', 'machine-learning', 'computer-vision', 'deepfake-detection', 'face-swap', 'faceswap', 'fake-news', 'defending', 'defending-deepfakes']",🔥🔥Defending Against Deepfakes Using Adversarial Attacks on Conditional Image Translation Networks
heshuting555/aicity2020_dmt_vehiclereid,heshuting555/AICITY2020_DMT_VehicleReID,"['aicity', 'pytorch', 'veri-776', 'vehicle-reidentification']",The 3rd Place Submission to AICity Challenge 2020 Track2
marload/convnets-tensorflow2,marload/ConvNets-TensorFlow2,"['tensorflow', 'machine-learning', 'deep-learning', 'resnet', 'googlenet', 'vgg', 'inception-v3', 'inception-v4', 'mobilenet', 'mobilenet-v2', 'shufflenet', 'shufflenet-v2']","⛵️ Implementation a variety of popular Image Classification Models using TensorFlow2. [ResNet, GoogLeNet, VGG, Inception-v3, Inception-v4, MobileNet, MobileNet-v2, ShuffleNet, ShuffleNet-v2, etc...]"
pris-cv/oslnet,PRIS-CV/OSLNet,"['python', 'pytorch', 'small-sample', 'orthogonal']",Code release for  OSLNet: Deep Small-Sample Classification with an Orthogonal Softmax Layer (TIP2020)
declare-lab/kingdom,declare-lab/kingdom,"['sentiment-analysis', 'domain-adaptation', 'opinion-mining', 'deep-learning', 'deep-neural-networks', 'adversarial-networks', 'adversarial-learning']",Domain Adaptation using External Knowledge for Sentiment Analysis
yeyupiaoling/audioclassification-tensorflow,yeyupiaoling/AudioClassification-Tensorflow,"['tensorflow', 'urbansound8k', 'audioclassification']",基于Tensorflow实现声音分类，博客地址：
switchablenorms/adax,switchablenorms/AdaX,"['gradient-descent', 'deep-learning', 'adaptive-gradient-descent']",AdaX: Adaptive Gradient Descent with Exponential Long Term Momery
chaovven/pyrl,chaovven/PyRL,"['pytorch', 'dqn', 'ddpg', 'td3', 'reinforcement-learning', 'deep-reinforcement-learning', 'ppo', 'soft-actor-critic']","PyRL - Reinforcement Learning Framework in Pytorch (Policy Gradient, DQN, DDPG, TD3, PPO, SAC, etc.)"
dontlovebugs/superviseddepthprediction,dontLoveBugs/SupervisedDepthPrediction,"['dorn', 'depth-estimation', 'monocular', 'apex']",Pytorch framework for supervised depth prediction
guhuozhengling/deepsort_yolov4,guhuozhengling/deepsort_yolov4,"['deepsort', 'pytorch', 'yolov4']",
ankushmalaker/huse,AnkushMalaker/HUSE,"['tensorflow', 'huse', 'tf2', 'keras', 'universal-embedding']",Tensorflow implimentation of HUSE: Hierarchical Universal Semantic Embeddings
tongjinle123/speech-transformer-pytorch_lightning,tongjinle123/speech-transformer-pytorch_lightning,"['pytorch-lightning', 'speech', 'asr']",ASR project with pytorch-lightning
yananren2137/huawei-ai-food-challenge,yananren2137/huawei-ai-food-challenge,"['image-classification', 'pytorch', 'auto-augment']",
vlomonaco/ar1-pytorch,vlomonaco/ar1-pytorch,"['continual-learning', 'continualai', 'pytorch', 'incremental-learning', 'core50', 'computer-vision', 'deep-learning', 'lifelong-learning']","AR1* with Latent Replay, implemented in PyTorch"
allanyiin/yolov4,AllanYiin/YoloV4,"['yolo', 'pytorch']","Yolo v4 in pytorch, tensorflow and onnx"
jerrodparker20/adaptive-transformers-in-rl,jerrodparker20/adaptive-transformers-in-rl,"['rl', 'pomdp', 'transformer', 'attention-mechanism', 'stabilizing-transformers-for-rl', 'adaptive-attention', 'transformers-in-rl', 'torchbeast', 'impala', 'monobeast']",Adaptive Attention Span for Reinforcement Learning
marload/gans-tensorflow2,marload/GANs-TensorFlow2,"['tensorflow2', 'deeplearning', 'gan', 'dcgan', 'lsgan', 'wgan', 'wgan-gp', 'ssgan', 'generative-adversarial-network', 'tf2', 'tf', 'tensorflow']","🚀 Variants of GANs most easily implemented as TensorFlow2. GAN, DCGAN, LSGAN, WGAN, WGAN-GP, DRAGAN, ETC..."
wqt2019/tacotron-2_wavernn,wqt2019/tacotron-2_wavernn,[],tacotron-2(tensorflow) + wavernn(pytorch) chinese TTS
facebookresearch/safetorch,facebookresearch/SAFEtorch,[],pytorch version of the SAFE neural network
rishabh-karmakar/facial-recognition-based-attendance-system,rishabh-karmakar/Facial-Recognition-Based-Attendance-System,"['python-3', 'python', 'python3', 'facial-recognition', 'attendance', 'attendance-system', 'attendance-management-system', 'attendance-record', 'tensorflow', 'keras', 'keras-tensorflow', 'sqlite3', 'tkinter', 'tkinter-graphic-interface', 'opencv']","Facial Recognition Based Attendance System using Python, Tensorflow, Keras, SqlLite3, Tkinter, OpenCV"
xifengguo/dsc-net,XifengGuo/DSC-Net,[],"A Pytorch implementation of DSC-Net (Deep subspace clustering networks, NIPS17)"
lukepark327/keras-only-rl,lukepark327/keras-only-RL,[],implementing RLs using keras only
seannaren/cord-19-ann,SeanNaren/CORD-19-ANN,"['pytorch', 'covid-19', 'cord-19', 'spacy', 'scispacy', 'machine-learning', 'transformer']",ANN Search through the COVID CORD-19 Dataset using SBERT.
enghock1/real-time-2d-and-3d-hand-pose-estimation,enghock1/Real-Time-2D-and-3D-Hand-Pose-Estimation,"['deep-learning', 'computer-vision', '3d-hand-pose-estimation', '2d-hand-pose-estimation', 'real-time']",Real-Time 2D and 3D Hand Pose Estimation from RGB Image
turtlesoupy/this-word-does-not-exist,turtlesoupy/this-word-does-not-exist,"['machine-learning', 'gpt-2', 'transformers', 'natural-language-processing', 'natural-language-understanding', 'natural-language-generation']",This Word Does Not Exist
xiao9616/yolo4_tensorflow2,xiao9616/yolo4_tensorflow2,"['yolov4', 'tensorflow2']",yolo 4th edition  implemented by tensorflow2.0
ai-light/2020-zhihuihaiyang,Ai-Light/2020-zhihuihaiyang,"['datamining', 'nlp', 'time-series-analysis']",2020数字中国创新大赛-数字政府赛道-智能算法赛：智慧海洋建设算法赛道代码
seraphlabs-ca/sentencemim-demo,seraphlabs-ca/SentenceMIM-demo,"['pytorch', 'python3', 'mim', 'seraphlabs', 'nlp', 'variational-inference']","This repo contains code to reproduce some of the results presented in the paper ""SentenceMIM: A Latent Variable Language Model"""
sxjyjay/transformer-backbone,SxJyJay/Transformer-backbone,"['transformer', 'encoder', 'decoder', 'pytorch']","The reproduce of Transformer architecture in paper ""Attention is all your need"""
coder-nlper/gpt2-chinese-tf2,Coder-nlper/gpt2-chinese-tf2,[],chinese gpt2 for tensorflow2.0
titu1994/tf_neural_deconvolution,titu1994/tf_neural_deconvolution,"['tensorflow2', 'tensorflow', 'keras']",Neural Deconvolutions in Tensorflow
akshaydnicator/twitter-sentiment-analysis-nlp-hackathon,akshaydnicator/Twitter-Sentiment-Analysis-NLP-Hackathon,"['twitter', 'nlp', 'hackathon', 'analytics-vidhya', 'pre-processing', 'punctuation-marks', 'lemmetization', 'sentiment-analysis', 'spacy', 'bert-embeddings', 'elmo-vectors', 'features-extraction', 'sklearn-library', 'keras-tensorflow', 'neural-networks', 'machine-learning', 'deep-learning', 'cnn-classification', 'cross-validation', 'wordvectors']","Problem Statement: Given the tweets from customers about various tech firms who manufacture and sell mobiles, computers, laptops, etc, the task is to identify if the tweets have a negative sentiment towards such companies or products."
yanx27/pointasnl,yanx27/PointASNL,"['point-cloud', 'segmentation', 'classification', 'sample', 'tensorflow', 'self-driving', 'modelnet-dataset', 'semantickitti', 'scannet-dataset']",PointASNL: Robust Point Clouds Processing using Nonlocal Neural Networks with Adaptive Sampling （CVPR 2020）
digantamisra98/evonorm,digantamisra98/EvoNorm,"['deep-learning', 'neural-networks', 'computer-vision', 'normalization', 'neural-architecture-search', 'nas']",Unofficial PyTorch Implementation of EvoNorm
dingkeyan93/dists,dingkeyan93/DISTS,"['dists', 'iqa', 'texture', 'structure', 'similarity', 'optimization', 'loss-functions', 'pytorch', 'quality-metrics', 'image-quality-assessment']",IQA: Deep Image Structure and Texture Similarity Metric
rsanshierli/easybert,rsanshierli/EasyBert,[],基于Pytorch的Bert应用，包括命名实体识别、情感分析、文本分类以及文本相似度等
perseus784/vehicle_collision_prediction_using_cnn-lstms,perseus784/Vehicle_Collision_Prediction_Using_CNN-LSTMs,"['carla-simulator', 'carla', 'tensorflow', 'cnn', 'lstm', 'cnn-lstm', 'collision-detection', 'python', 'tensorflow-examples', 'time-distributed', 'image-series-prediction', 'scene-understanding', 'autopilot-script', 'lstms', 'vehicle-collision-prediction', 'action-recognition']",Predict Vehicle collision moments before it happens in Carla!. CNN and LSTM hybrid architecture is used to understand a series of images.
yeyupiaoling/voiceprintrecognition-tensorflow,yeyupiaoling/VoiceprintRecognition-Tensorflow,"['tensorflow', 'voice-recognition', 'arcface', 'speaker-recognition']",使用Tensorflow实现声纹识别
ashwinvin/visionlib,ashwinvin/Visionlib,"['gender-detection', 'face-detection', 'visionlib', 'yolo', 'object-detection', 'deep-learning', 'machine-learning', 'python3', 'very-easy-to-use', 'library']","A simple, easy to use, feature rich, customizable cv library"
monologg/ner-multimodal-pytorch,monologg/NER-Multimodal-pytorch,"['ner', 'named-entity-recognition', 'pytorch', 'multimodal', 'coattention', 'tweets', 'attention-network']","Pytorch Implementation of ""Adaptive Co-attention Network for Named Entity Recognition in Tweets"" (AAAI 2018)"
younggyoseo/cadm,younggyoseo/CaDM,"['reinforcement-learning', 'rl', 'deep-learning', 'mujoco', 'codebase', 'model-based', 'deep-reinforcement-learning', 'ppo', 'deep-learning-algorithms']",CaDM: Context-aware Dynamics Model for Generalization in Model-based Reinforcement Learning
tanulsingh/humour.ai-language-model-that-can-crack-jokes,tanulsingh/Humour.ai-Language-model-that-can-crack-Jokes,"['pytorch', 'language-model', 'nlg', 'nlp', 'joke', 'joker', 'humour-generator', 'gpt-2', 'transformers', 'python']",Language Model that makes you Laugh . 
trigram19/m5-python-starter,Trigram19/m5-python-starter,"['m5-competition', 'transformer']",Python framework for a good neural network for the Makidrakis 5 (M5) competition hosted on Kaggle.
kodiks/pyzemberek,kodiks/pyzemberek,"['zemberek', 'nlp', 'turkish-nlp', 'natural-language-processing', 'turkish', 'pyjnius']",pyzemberek (v0.0.1-beta) | Python implementation of the Turkish NLP library Zemberek.
farrandtom/social-distancing,FarrandTom/social-distancing,"['social-distancing', 'computer-vision', 'deep-learning', 'python', 'opencv-python', 'opencv']",:star: An easy end-to-end social distancing implementation created using OpenCV! :camera:
hugoycj/incremental-learning-with-weight-aligning,hugoycj/Incremental-Learning-with-Weight-Aligning,[],Pytorch implementation of Maintaining Discrimination and Fairness in Class Incremental Learning
jeevesh8/ghi-prediction,Jeevesh8/GHI-prediction,"['ghi', 'weather', 'forecasting', 'dhi', 'dni', 'solar-irradiance', 'machine-learning', 'time-series-forecasting', 'transformer', 'lstm-cnn', 'lstm', 'ghi-prediction', 'confidence-intervals', 'series-models', 'hacktoberfest']",PyTorch Code for running various time series models for different time stamps and confidence intervals for Solar Irradiance prediction.
epiphqny/solov2,Epiphqny/SOLOv2,"['instance-segmentation', 'mmdetection', 'pytorch']","SOLOv2: Dynamic, Faster and Stronger, achives 39.5mAP on coco test-dev (36 epochs result)"
johnbetacode/social-distancing-analyser,JohnBetaCode/Social-Distancing-Analyser,"['computer-vision', 'ai', 'object-detection', 'extrinsic', 'intrinsic', 'calibration', 'social-distancing', 'opencv', 'tensorflow', 'yolov4', 'covid19', 'anaconda', 'calibration-process', 'detection-model', 'yolo', 'opencv4', 'opensource', 'image-processing', 'deep-learning']","Considering the big change that the world is facing, as well as our lives due to the COVID-19, we provide to people and companies a complete open-source tool to analyze the social distancing for streets, parks, offices, and even crowded places like malls, train stations, and others."
leaderj1001/synthesizer-rethinking-self-attention-transformer-models,leaderj1001/Synthesizer-Rethinking-Self-Attention-Transformer-Models,"['transformer', 'synthesizer', 'pytorch']",Implementing SYNTHESIZER: Rethinking Self-Attention in Transformer Models using Pytorch
lotayou/cocosnet,Lotayou/CoCosNet,[],"Pytorch Implementation of the paper [""Cross-domain Correspondence Learning for Exemplar-based Image Translation""](https://panzhang0212.github.io/CoCosNet)"
angry-coder-room/naruto-handsigns-predict-dl,shreyas-jk/Naruto-Handsigns-Predict-DL,"['deep-learning', 'convolutional-neural-networks', 'cnn-keras']",Using Convolution Neural Networks to classify Naruto Hand Signs.
snnclsr/ner,snnclsr/ner,"['ner', 'nlp']",Turkish Named Entity Recognition
wqt2019/tacotron-2_melgan,wqt2019/tacotron-2_melgan,[],tacotron-2(tensorflow) + melgan(pytorch) chinese TTS
mayurji/social-distancing-using-deep-learning-and-opencv,Mayurji/Social-DIstancing-Using-Deep-Learning-and-OpenCV,"['social-distancing-detection', 'python', 'yolov3', 'deep-learning', 'opencv', 'covid-19']",Considering the unfortunate circumstances due to COVID-19 keeping distance from one person to another is crucial.
isp1tze/maproj,isp1tze/MAProj,"['multi-agent-reinforcement-learning', 'pytorch', 'commnet', 'bicnet', 'maddpg']","Multi-agent project (commnet, bicnet, maddpg) in pytorch for Multi-Agent Particle Environment"
junqiangchen/lunglobesegmentation,junqiangchen/LungLobeSegmentation,"['tensorflow', 'python', 'lung', 'lung-segmentation', 'lobe', 'vnet', 'focal']",Lobe Segmentation
sgrvinod/a-pytorch-tutorial-to-super-resolution,sgrvinod/a-PyTorch-Tutorial-to-Super-Resolution,"['pytorch-tutorial', 'pytorch', 'super-resolution', 'srgan', 'generative-adversarial-network', 'gan', 'gans']",Photo-Realistic Single Image Super-Resolution Using a Generative Adversarial Network | a PyTorch Tutorial to Super-Resolution
miaoshuyu/object-detection-usages,miaoshuyu/object-detection-usages,[],"The brief implementation and using examples of object detection usages like, IoU, NMS, soft-NMS, SmoothL1、IoU loss、GIoU loss、 DIoU loss、CIoU loss, cross-entropy、focal-loss、GHM, AP/MAP and so on by Pytorch."
liuyukid/transformers-ner,liuyukid/transformers-ner,"['ner', 'pytorch', 'transformers', 'bert', 'electra', 'roberta', 'albert', 'adversarial-training', 'crf', 'softmax', 'span', 'distilbert', 'camembert', 'xlm', 'xlmroberta', 'pgd', 'fgm']",Pytorch-Named-Entity-Recognition-with-transformers
furkanom/tf-faster-rcnn,FurkanOM/tf-faster-rcnn,"['faster-rcnn', 'object-detection', 'tensorflow2', 'keras-tensorflow', 'deep-learning', 'batch-processing', 'tf2', 'mobilenetv2']",Tensorflow 2 Faster-RCNN implementation from scratch supporting to the batch processing with MobileNetV2 and VGG16 backbones
cluebenchmark/lightlm,CLUEbenchmark/LightLM,"['nlpcc', 'nlpcc2020', 'nlp', 'languagemodel', 'bert', 'chinese', 'chinese-language-model']",高性能小模型测评 Shared Tasks in NLPCC 2020. Task 1 - Light Pre-Training Chinese Language Model for NLP Task
98zyx/hetero-center-loss-for-cross-modality-person-re-id,98zyx/Hetero-center-loss-for-cross-modality-person-re-id,"['pytorch', 'person-reidentification', 'cross-modality-re-identification']","Code for paper ""Hetero-center loss for cross-modality person re-identification"""
yas-sim/gaze-estimation-with-laser-sparking,yas-sim/gaze-estimation-with-laser-sparking,"['intel', 'openvino', 'openvino-toolkit', 'deep-learning', 'face-detection', 'head-pose-estimation', 'face-landmark-detection', 'gaze-estimation', 'python', 'inference-engine', 'inference', 'gaze', 'head-pose', 'face-landmarks', 'face-landmarking', 'face-landmark', 'laser-beams', 'head-rotation-angles', 'landmark-points', 'demo']",Deep learning based gaze estimation demo with a fun feature :-)
inmoonlight/koco,inmoonlight/koco,"['natural-language-processing', 'dataset-loader', 'korean', 'korean-nlp']",Easy installer of kocohub dataset
yas-sim/object-tracking-line-crossing-area-intrusion,yas-sim/object-tracking-line-crossing-area-intrusion,"['intel', 'openvino', 'openvino-toolkit', 'inference-engine', 'inference', 'object-detection', 'object-tracking', 'pedestrian-detection', 'pedestrian-tracking', 'line-crossing-detection', 'intrusion-detection', 'python', 'area-intrusion-detection', 'deep-learning', 'identification', 'identification-model', 'trajectory', 'surveillance-systems', 'video-surveillance', 'surveillance']",Deep learning based object tracking with line crossing and area intrusion detection
chenwwweixiang/opencoviddetector,ChenWWWeixiang/OpenCovidDetector,"['python', 'covid19', 'covid-19', 'diagnosis', 'pytorch']","New virsion for multi-categories were available. Since too many changes above old virsion, please refer to this site https://github.com/ChenWWWeixiang/diagnosis_covid19"
timchen0618/pytorch-leo,timchen0618/pytorch-leo,"['meta-learning', 'machine-learning', 'pytorch-implementation', 'python3', 'leo']",Pytorch Implemtation of Meta-Learning with Latent Embedding Optimization
yas-sim/person-detect-reidentification,yas-sim/person-detect-reidentification,"['intel', 'openvino', 'openvino-toolkit', 'inference', 'inference-engine', 'people-detection', 'face-detection', 'matching-problems', 'feature-extraction', 'deep-learning', 'python', 'hungarian-assignment', 'identification', 'identification-model', 'dl-models', 'demo', 'feature-vectores', 'multiple-cameras', 'surveillance']",Person or face detection and matching from multiple image inputs using Intel OpenVINO toolkit
cilame/yidun_icon,cilame/yidun_icon,[],易盾图标识别，包含定位以及点选顺序的识别，定位 pytorch 模型大小只有3M，执行速度极快。内附代码和测试用例，直接使用即可测试。定位准确率 95% 以上，识别用的sift算法，测试通过率大概 50%。
simeonedef/time-series_imaging_forecasting,Simeonedef/Time-Series_Imaging_Forecasting,"['time-series-forecasting', 'tensorflow2', 'conv-lstm', 'holt-winter', 'conv-mlp', 'lstm-architecture', 'series', 'predictions', 'convolutional-layers', 'convolutional-lstm', 'matplotlib', 'deep-learning', 'eth-zurich', 'ethz']","In this project we have explored the use of imaging time series to enhance forecasting results with Neural Networks. The approach has revealed itself to be extremely promising as, both in combination with an LSTM architecture and without, it has out-performed the pure LSTM architecture by a solid margin within our test datasets."
yas-sim/handwritten-japanese-ocr,yas-sim/handwritten-japanese-ocr,"['intel', 'openvino', 'ocr', 'japanese', 'text-recognition', 'text-detection', 'deep-learning', 'inference-engine', 'handwritten-text-recognition', 'ocr-demo', 'dl-models', 'text-regions', 'touch-panel', 'python']",Handwritten Japanese OCR demo using touch panel to draw the input text using Intel OpenVINO toolkit
kuangcaomvp/speech-recognize,kuangcaomvp/speech-recognize,[],transformer的 encoder-decoder结构基于tensorflow实现的中文语音识别项目
tanulsingh/emotion-and-its-stimulus-detection,tanulsingh/Emotion-and-its-Stimulus-Detection,"['nlp', 'transformer', 'huggingface-library', 't5', 'emotion-detection', 'question-answering']",Detection of Emotion and its cause from text
alexklwong/unsupervised-depth-completion-visual-inertial-odometry,alexklwong/unsupervised-depth-completion-visual-inertial-odometry,"['ucla', 'depth-completion', '3d-reconstruction', 'unsupervised-learning', 'machine-learning', 'sensor-fusion', 'deep-learning', 'self-supervised-learning', 'depth', 'icra', 'ral', 'tensorflow', 'computer-vision', 'kitti', 'void', '3d-vision', 'depth-estimation']",Tensorflow implementation of Unsupervised Depth Completion from Visual Inertial Odometry (in RA-L January 2020 & ICRA 2020)
avinashpaliwal/deep-slomo,avinashpaliwal/Deep-SloMo,"['hybrid-imaging', 'video-frame-interpolation', 'deep-slomo', 'slow-motion', 'deep-learning', 'slomo', 'convolutional-neural-networks', 'frame-interpolation', 'pytorch-implementation', 'pytorch', 'dual-cameras', 'super-resolution', 'video-super-resolution']","Official PyTorch implementation of ""Deep Slow Motion Video Reconstruction with Hybrid Imaging System"" (TPAMI)"
raghavian/graph_refinement,raghavian/graph_refinement,[],"This is official Pytorch implementation of ""Graph Refinement based Airway Extraction using Mean-Field Networks and Graph Neural Networks"", Raghavendra Selvan et al. 2020"
audio-captioning/dcase-2020-baseline,audio-captioning/dcase-2020-baseline,"['audio-captioning', 'audio-signal-processing', 'captioning', 'deep-learning', 'deep-neural-networks', 'machine-listening', 'machine-learning', 'signal-processing', 'dcase2020', 'dcase']",Audio captioning baseline system for DCASE 2020 challenge. 
yas-sim/interactive-image-inpainting,yas-sim/interactive-image-inpainting,"['intel', 'openvino', 'openvino-toolkit', 'deep-learning', 'inpaint', 'inference-engine', 'inference', 'image-ret', 'image-retrieval', 'image-inpainting', 'demo', 'dl-models', 'undesired-objects', 'picture', 'python', 'draw', 'interactive-demo']",Deep Learning Based Interactive Image Inpainting Demo
furkanom/tf-ssd,FurkanOM/tf-ssd,"['ssd', 'object-detection', 'ssd300', 'trained-models', 'tensorflow', 'tensorflow2', 'tf2', 'deep-learning', 'mobilenet-ssd', 'mobilenetv2', 'vgg16']",Tensorflow 2 single shot multibox detector (SSD) implementation from scratch with MobileNetV2 and VGG16 backbones
krishnadn/attentive-statistics-pooling-for-deep-speaker-embedding,KrishnaDN/Attentive-Statistics-Pooling-for-Deep-Speaker-Embedding,"['speaker-recognition', 'speaker-identification', 'speech', 'attention-model']","Implementation of the paper ""Attentive Statistics Pooling for Deep Speaker Embedding"" in Pytorch"
huffon/semantic-search-faiss,Huffon/semantic-search-faiss,"['faiss', 'semantic-search', 'elasticsearch', 'natural-language-processing']",Semantic Search using FAISS & ElasticSearch
nullbyte91/computer-pointer-controller,nullbyte91/Computer-Pointer-Controller,"['computer-pointer-controller', 'python3', 'gaze-estimation', 'head-pose-estimation', 'face-detection', 'face-landmark-detection', 'mouse-controls', 'openvino', 'adas', 'deep-learning', 'opencv']",Deep learning based Gaze detection model to control the mouse pointer of your computer
alfonmedela/triplet-loss-pytorch,alfonmedela/triplet-loss-pytorch,"['triplet-loss', 'triplet', 'loss-functions', 'metric-learning', 'constellation', 'pytorch', 'pytorch-implementation']",Highly efficient PyTorch version of the Semi-hard Triplet loss ⚡️
saic-vul/image_harmonization,saic-vul/image_harmonization,"['image-harmonization', 'harmonization', 'pytorch', 'hrnets']",[WACV2021] Foreground-aware Semantic Representations for Image Harmonization https://arxiv.org/abs/2006.00809
sicara/gpumonitor,sicara/gpumonitor,"['tensorflow', 'pytorch-lightning', 'gpu-monitoring']",TF 2.x and PyTorch Lightning Callbacks for GPU monitoring
elephantmipt/bert-distillation,elephantmipt/bert-distillation,"['catalyst', 'bert', 'nlp', 'distillation', 'distilbert', 'rubert']",Distillation of BERT model with catalyst framework
lht-curry/covid19_qa_baseline,LHT-Curry/COVID19_QA_baseline,[],DataFountain疫情问答助手keras-bert实现
mohammadkhalifa/fairseq-tagging,mukhal/fairseq-tagging,"['nlp', 'nlp-machine-learning', 'fairseq', 'machine-learning', 'sequence-labeling', 'named', 'ner', 'labeling-tasks', 'prediction', 'pos-tagging']",a Fairseq fork for sequence tagging/labeling tasks
chenao-phys/pytorch-jacobian,ChenAo-Phys/pytorch-Jacobian,[],Implement efficient jacobian method available for most pytorch networks
kyzhouhzau/nlpgnn,kyzhouhzau/NLPGNN,"['tensorflow2', 'bert', 'gpt2', 'albert', 'bert-ner', 'bert-cls', 'textcnn', 'bilstm-attention', 'albert-ner', 'tf2', 'message-passing', 'gcn', 'gin', 'gan', 'graph-convolutional-networks', 'graphsage', 'graph-classfication', 'textgcn', 'nlp', 'gnn']","1. Use BERT, ALBERT and GPT2 as  tensorflow2.0's layer.  2. Implement GCN, GAN, GIN and GraphSAGE based on message passing."
d-li14/ghostnet.pytorch,d-li14/ghostnet.pytorch,"['ghostnet', 'pytorch', 'reproduction', 'mobilenetv3', 'pretrained-models', 'imagenet']",73.6% GhostNet 1.0x pre-trained model on ImageNet
liujiaheng/compression,liujiaheng/compression,"['pytorch', 'compression', 'image-compression']",Learned image compression
uds-lsv/bert-stable-fine-tuning,uds-lsv/bert-stable-fine-tuning,"['nlp', 'bert', 'fine-tuning']","On the Stability of Fine-tuning BERT: Misconceptions, Explanations, and Strong Baselines"
confusezius/cvpr2020_pads,Confusezius/CVPR2020_PADS,"['deep-metric-learning', 'cvpr2020', 'pytorch', 'deep-learning', 'retrieval', 'cub200-2011', 'cars196', 'metric-learning']","(CVPR 2020) This repo contains code for ""PADS: Policy-Adapted Sampling for Visual Similarity Learning"", which proposes learnable triplet mining with Reinforcement Learning."
theshadow29/vognet-pytorch,TheShadow29/vognet-pytorch,"['grounding', 'visual-grounding', 'video', 'video-object-grounding', 'pytorch-implementation', 'vision', 'vision-and-language', 'nlp', 'object-grounding', 'video-grounding', 'captioning-videos']",[CVPR20] Video Object Grounding using Semantic Roles in Language Description (https://arxiv.org/abs/2003.10606)
goktug97/estorch,goktug97/estorch,"['evolutionary-algorithms', 'evolution-strategies', 'pytorch', 'neural-network', 'reinforcement-learning', 'mpi', 'parallel-computing', 'evolution-strategy-library']",Evolution Strategy Library
ajitrajasekharan/unsupervised_ner,ajitrajasekharan/unsupervised_NER,"['nlp', 'natural-language-processing', 'ner', 'self-supervised-learning']",Self-supervised NER prototype - updated version (69 entity types - 17 broad entity groups). Uses pretrained BERT models with no fine tuning. State-of-art performance on 3 biomedical datasets
gatsby2016/augmentation-pytorch-transforms,gatsby2016/Augmentation-PyTorch-Transforms,"['image-augmentation', 'augmentation', 'pytorch', 'pytorch-transforms', 'affine-transformation', 'elastic-transformation', 'color-deconvolution', 'pathology-image', 'histopathology-images']",Image data augmentation on-the-fly by add new class on transforms in PyTorch and torchvision.
inhwanbae/enet-sad_pytorch,InhwanBae/ENet-SAD_Pytorch,"['lane-detection', 'enet', 'self-attention-distillation', 'pytorch-implementation', 'deep-learning', 'semantic-segmentation', 'pytorch', 'python']","Pytorch implementation of ""Learning Lightweight Lane Detection CNNs by Self Attention Distillation (ICCV 2019)"""
menon92/banglatranslator,menon92/BanglaTranslator,"['tensorflow', 'attention', 'encoder-decoder', 'lstm', 'translators', 'bangla', 'bangla-nlp', 'bangla-machine-translation']",Bangla Machine Translator
syuntoku14/pytorch-rl-il,syuntoku14/pytorch-rl-il,[],A library for building reinforcement learning and imitation learning agents in Pytorch
grohith327/simplegan,grohith327/simplegan,"['deep-learning', 'gan', 'tensorflow', 'python-library', 'computer-vision', 'generative-adversarial-network', 'generative-model', 'python3', 'neural-networks']",Tensorflow-based framework to ease training of generative models
xialuxi/circleloss_face,xialuxi/CircleLoss_Face,"['pytorch', 'circleloss']",pytorch CircleLoss for Face recognition
zgcr/aicity2020_track2_reid_bebetter,zgcr/AICITY2020_track2_reid_BeBetter,"['aicitychallenge', 'aicity2020', 'vehicle-reid', 'pytorch']",AICITY2020 track2 reid open source code.
nlpatvcu/multitasking_transformers,NLPatVCU/multitasking_transformers,"['clinical-nlp', 'deep-learning', 'bert', 'multi-task-learning']",Multitask Learning with Pretrained Transformers
lululxvi/deep-learning-for-indentation,lululxvi/deep-learning-for-indentation,"['deep-learning', 'indentation', 'mechanics-of-materials', 'additive-manufacturing']",Extraction of mechanical properties of materials through deep learning from instrumented indentation
lucidrains/axial-positional-embedding,lucidrains/axial-positional-embedding,"['artificial-intelligence', 'deep-learning', 'pytorch']",Axial Positional Embedding for Pytorch
lukasruff/classification-ad,lukasruff/Classification-AD,"['anomaly-detection', 'deep-learning', 'one-class-classification', 'one-class-learning', 'deep-anomaly-detection', 'machine-learning', 'pytorch', 'python', 'python3']","Repository for the paper ""Rethinking Assumptions in Anomaly Detection"""
amanjain1397/huse,amanjain1397/HUSE,"['pytorch', 'universal-embedding', 'huse']",PyTorch implementation of HUSE: Hierarchical Universal Semantic Embeddings
alessiacosmos/trashdetection-huaweicloud,Alessiacosmos/TrashDetection-HuaweiCloud,"['pytorch', '2020huaweicloud', 'modelarts']",“华为云杯”2020深圳开放数据应用创新大赛·生活垃圾图片分类 Pytorch版本基础配置文件
lucidrains/product-key-memory,lucidrains/product-key-memory,"['artificial-intelligence', 'deep-learning', 'transformers', 'pytorch']",Standalone Product Key Memory module in Pytorch - for augmenting Transformer models
brendanxwhitaker/asta,langfield/asta,[],Shape annotations for numpy arrays and pytorch/tensorflow tensors.
pierresegonne/vinf,pierresegonne/VINF,"['variational-inference', 'python3', 'tensorflow', 'distributions']","Repository for DTU Special Course, focusing on Variational Inference using Normalizing Flows (VINF). Supervised by Michael Riis Andersen"
elliottwu/unsup3d,elliottwu/unsup3d,"['3d-objects', '3d', '3d-reconstuction', 'unsupervised', 'unsupervised-learning', 'cvpr', 'cvpr-2020', 'cvpr2020', 'pytorch']",(CVPR'20 Oral) Unsupervised Learning of Probably Symmetric Deformable 3D Objects from Images in the Wild
alvinwan/neural-backed-decision-trees,alvinwan/neural-backed-decision-trees,"['decision-trees', 'neural-networks', 'image-classification', 'explainability', 'tiny-imagenet', 'cifar10', 'cifar100', 'interpretability', 'imagenet', 'neural-backed-decision-trees', 'pretrained-weights', 'pretrained-models', 'pytorch']","Making decision trees competitive with neural networks on CIFAR10, CIFAR100, TinyImagenet200, Imagenet"
maclory/spsr,Maclory/SPSR,"['structure-preserving', 'super-resolution', 'image-restoration', 'computer-vision', 'deep-learning']",Pytorch implementation of Structure-Preserving Super Resolution with Gradient Guidance (CVPR 2020 & TPAMI 2021) 
nvlabs/ssv,NVlabs/SSV,[],Pytorch implementation of SSV: Self-Supervised Viewpoint Learning from Image Collections (CVPR 2020)
aiff22/pynet,aiff22/PyNET,"['pynet', 'image-enhancement', 'image-processing', 'image-reconstruction', 'deep-learning', 'raw-to-rgb', 'computer-vision', 'mobile', 'photography', 'isp', 'camera', 'image-to-image-translation', 'raw', 'photos']",Generating RGB photos from RAW image files with PyNET
prasunroy/stefann,prasunroy/stefann,"['stefann', 'fannet', 'colornet', 'scene-text-editor', 'font-generation', 'color-transfer', 'computer-vision', 'deep-learning', 'cvpr', 'cvpr2020']",:fire: [CVPR 2020] STEFANN: Scene Text Editor using Font Adaptive Neural Network @ The IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR) 2020.
chenmingxiang110/growing-neural-cellular-automata,chenmingxiang110/Growing-Neural-Cellular-Automata,"['cellular-automata', 'neural-cellular-automata', 'neural-networks', 'deep-learning', 'conway-s-game-of-life']",A reproduction of growing neural cellular automata using PyTorch.
rmokady/structural-analogy,rmokady/structural-analogy,[],"Pytorch implementation for the paper ""Structural-analogy from a Single Image Pair"""
aiff22/pynet-bokeh,aiff22/PyNET-Bokeh,"['pynet', 'bokeh', 'bokeh-effect', 'shallow-depth-of-field', 'blur', 'blurred-background', 'aperture', 'image-processing', 'image-reconstruction', 'image-to-image-translation', 'deep-learning', 'computer-vision', 'mobile', 'photography', 'smartphones', 'camera', 'photos', 'inference']",Rendering Realistic Bokeh Images with PyNET
kaixhin/imitation-learning,Kaixhin/imitation-learning,"['deep-learning', 'deep-reinforcement-learning', 'imitation-learning']",Imitation learning algorithms
visualcomputinginstitute/dcm-net,JonasSchult/dcm-net,"['dcm-net', '3d-deep-learning', 'deep-learning', 'semantic-segmentation', '3d-segmentation', 'scannet', 'cvpr2020', 'cvpr']","This work is based on our paper ""DualConvMesh-Net: Joint Geodesic and Euclidean Convolutions on 3D Meshes"", which appeared at the IEEE Conference On Computer Vision And Pattern Recognition (CVPR) 2020."
joffery/m-ada,joffery/M-ADA,[],"The Pytorch implementation for ""Learning to Learn Single Domain Generalization"" (CVPR 2020)"
glam-imperial/emotionalconversionstargan,glam-imperial/EmotionalConversionStarGAN,"['generative-adversarial-network', 'stargan', 'stargan-vc', 'data-augmentation', 'emotion-recognition', 'speech-synthesis', 'deep-learning', 'deep-neural-networks', 'icassp-2020', 'icassp', 'imperial-college-london', 'augsburg-university', 'imperial-glam']","This repository contains code to replicate results from the ICASSP 2020 paper ""StarGAN for Emotional Speech Conversion: Validated by Data Augmentation of End-to-End Emotion Recognition""."
clovaai/embedding-expansion,clovaai/embedding-expansion,"['metric-learning', 'image-retrieval', 'image-clustering', 'deep-learning', 'synthesis', 'cars196', 'stanford-online-products', 'cub200-2011', 'cvpr2020', 'mxnet']","Official MXNet implementation of ""Embedding Expansion: Augmentation in Embedding Space for Deep Metric Learning"" (CVPR 2020)"
claying/gckn,claying/GCKN,[],Pytorch Implementation of Graph Convolutional Kernel Networks
haamoon/mmtm,haamoon/mmtm,"['multimodal-deep-learning', 'multimodal-learning', 'cnn-fusion', 'pytorch', 'action-recognition', 'speech-enhancement', 'gesture-recognition']","Implementation of CVPR 2020 paper ""MMTM: Multimodal Transfer Module for CNN Fusion"""
murtyshikhar/expbert,MurtyShikhar/ExpBERT,"['nlp', 'bert']","Code for our ACL '20 paper ""Representation Engineering with Natural Language Explanations"""
linzichuan/admrl,LinZichuan/AdMRL,"['meta-reinforcement-learning', 'model-based-rl', 'adversarial-training', 'tensorflow']","Code for paper ""Model-based Adversarial Meta-Reinforcement Learning"" (https://arxiv.org/abs/2006.08875)"
angelwmab/time-flies,angelwmab/Time-Flies,"['pytorch', 'style-transfer', 'cvpr2020']","Time Flies: Animating a Still Image with Time-Lapse Video as Reference, CVPR2020"
gt-ripl/multiagentperception,GT-RIPL/MultiAgentPerception,"['cvpr2020', 'multi-agent-systems', 'semantic-segmentation', 'multi-view', 'deep-learning']","Official source code to CVPR'20 paper, ""When2com: Multi-Agent Perception via Communication Graph Grouping"""
yukariin/san_pytorch,Yukariin/SAN_pytorch,"['pytorch', 'super-resolution', 'single-image-super-resolution', 'attention']",Second-order Attention Network for Single Image Super-resolution (CVPR-2019)
cdj0311/two_tower_recommendation_system,cdj0311/two_tower_recommendation_system,[],"A two tower recommendation system  implementation with tensorflow estimator, for CTR or Recall."
oscarshu0719/pytorch-stargan-vc2,Oscarshu0719/pytorch-StarGAN-VC2,"['pytorch', 'python', 'python3', 'stargan', 'stargan-vc', 'stargan-vc2', 'voice-conversion']",A PyTorch implementation of StarGAN-VC2.
mingchaozhu/deeplearning,MingchaoZhu/DeepLearning,"['python', 'deep-learning', 'machine-learning', 'xgboost', 'ensemble-learning', 'bayesian', 'regularization']",Python for《Deep Learning》，该书为《深度学习》(花书) 数学推导、原理剖析与源码级别代码实现
alshedivat/meta-blocks,alshedivat/meta-blocks,"['learning-to-learn', 'meta-learning', 'deep-learning', 'benchmark', 'toolbox', 'tensorflow', 'python', 'api']",A modular toolbox for meta-learning research with a focus on speed and reproducibility.
raminmh/liquid_time_constant_networks,raminmh/liquid_time_constant_networks,"['deep-learning', 'liquid-neural-networks', 'recurrent-neural-networks', 'sequence-modeling', 'state-space-models', 'time-series']",Code Repository for Liquid Time-Constant Networks (LTCs)
mikoto10032/automaticweightedloss,Mikoto10032/AutomaticWeightedLoss,"['multi-task', 'multi-task-learning', 'weigh-losses', 'auxiliary-tasks', 'pytorch', 'deep-learning']","Multi-task learning using uncertainty to weigh losses for scene geometry and semantics, Auxiliary Tasks in Multi-task Learning"
xuyuan/waymo_2d_tracking,xuyuan/waymo_2d_tracking,"['autonomous-driving', 'deep-learning', 'object-detection', 'tracking', 'pytorch']",3rd place solution of Waymo open dataset challenge 2D tracking track
d-li14/regnet.pytorch,d-li14/regnet.pytorch,"['pytorch', 'regnet', 'resnext', 'imagenet', 'pretrained-models', 'neural-architecture-search']",PyTorch-style and human-readable RegNet with a spectrum of pre-trained models
positivepeng/nlp-beginner-projects,positivepeng/nlp-beginner-projects,[],NLP常见任务实现（pytorch版）
rmlin/comhe,rmlin/CoMHE,"['mhe', 'hyperspherical', 'energy', 'sphereface', 'regularization', 'neural-network', 'deep-learning', 'comhe', 'cvpr2020']",Implementation for <Regularizing Neural Networks via Minimizing Hyperspherical Energy> in CVPR'20.
gouthamvgk/facemesh_coreml_tf,gouthamvgk/facemesh_coreml_tf,[],This repository contains the code for converting tflite model of Real-time Facial Surface Geometry from Monocular Video on Mobile GPUs and Blazeface to tensorflow and coreml.
malteos/semantic-document-relations,malteos/semantic-document-relations,"['wikipedia', 'pytorch', 'document', 'similarity', 'transformer', 'bert', 'xlnet', 'document-classification']","Implementation, trained models and result data for the paper ""Pairwise Multi-Class Document Classification for Semantic Relations between Wikipedia Articles"""
monologg/goemotions-pytorch,monologg/GoEmotions-pytorch,"['goemotions', 'emotion-classification', 'pytorch', 'multi-label-classification', 'transformers', 'bert', 'pipeline']",Pytorch Implementation of GoEmotions 😍😢😱
jerrywei03/covid-q,JerryWei03/COVID-Q,"['nlp', 'covid-19', 'question-answering', 'questions', 'text-classification', 'sentence-classification', 'bert', 'bert-embeddings', 'svm', 'svm-model', 'knn-classification', 'few-shot-learning', 'triplet-loss']","COVID-19 Question Dataset from the paper ""What Are People Asking About COVID-19? A Question Classification Dataset"""
alejandrobarrera/birdnet2,AlejandroBarrera/birdnet2,"['deep-learning', 'object-detection', 'point-cloud', 'pytorch', 'neural-network', 'autonomous-driving']",Official Pytorch implementation of Birdnet+
xuyige/bert4doc-classification,xuyige/BERT4doc-Classification,"['natural-language-processing', 'bert', 'text-classification']",Code and source for paper ``How to Fine-Tune BERT for Text Classification?``
microsoft/cocosnet,microsoft/CoCosNet,"['image-synthesis', 'image-translation', 'generative-adversarial-network', 'image-manipulation', 'gans', 'cocosnet', 'pytorch', 'computer-vision', 'deep-learning']",Cross-domain Correspondence Learning for Exemplar-based Image Translation. (CVPR 2020 Oral)
zlthinker/kfnet,zlthinker/KFNet,"['kalman-filtering', 'uncertainties', 'optical-flows', 'tensorflow', '7scenes', 'localization']",KFNet: Learning Temporal Camera Relocalization using Kalman Filtering (CVPR 2020 Oral)
sahith02/machine-learning-algorithms,Sahith02/machine-learning-algorithms,"['machine-learning-algorithms', 'machine-learning', 'python', 'tutorial', 'implementation', 'implementation-of-algorithms', 'deep-learning', 'deep-learning-algorithms', 'deep-learning-tutorial', 'neural-network', 'regression', 'classification', 'trees']",A curated list of all machine learning algorithms and deep learning algorithms grouped by category.
chenrocks/distill-bert-textgen,ChenRocks/Distill-BERT-Textgen,"['natural-language-processing', 'machine-translation', 'knowledge-distillation', 'bert-model']","Research code for ACL 2020 paper: ""Distilling Knowledge Learned in BERT for Text Generation""."
spytensor/pytorch_img_classification_for_competition,spytensor/pytorch_img_classification_for_competition,"['pytorch', 'image-classification', 'competition']",use pytorch to do image classification
marload/aquvitae,marload/aquvitae,"['tensorflow', 'pytorch', 'light-weight', 'deep-learning', 'machine-learning', 'knowledge-distillation', 'model-compression']",Knowledge Distillation Toolkit
nlp-love/model_log,NLP-LOVE/Model_Log,"['machine-learning', 'deep-learning', 'model', 'log', 'tensorflow', 'pytorch', 'metric']",Model Log 是一款基于 Python3 的轻量级机器学习(Machine Learning)、深度学习(Deep Learning)模型训练评估指标可视化工具，可以记录模型训练过程当中的超参数、Loss、Accuracy、Precision、F1值等，并以曲线图的形式进行展现对比，轻松三步即可实现。
seongmin-kye/mct,seongmin-kye/MCT,"['few-shot-learning', 'meta-learning', 'transductive-learning']",Pytorch implementation of Meta-Learned Confidence for Few-shot Learning
parthpathak27/social-distancing-detector,parthsompura/Social-Distancing-Detector,"['python', 'opencv', 'yolov3', 'computer-vision', 'convolutional-neural-networks', 'deep-learning', 'social-distancing', 'social-distancing-detection', 'coronavirus']",An AI Tool to Help Customers Monitor Social Distancing in the Workplace.
pytorchlightning/lightning-covid19,Lightning-AI/lightning-Covid19,"['pytorch', 'xray', 'medical-imaging', 'classification', 'covid-19']",Classification for covid-19 chest X-ray images using Lightning
ml4bio/e2efold,ml4bio/e2efold,[],"pytorch implementation for ""RNA Secondary Structure Prediction By Learning Unrolled Algorithms"""
lucidrains/contrastive-learner,lucidrains/contrastive-learner,"['artificial-intelligence', 'self-supervised-learning', 'contrastive-loss', 'deep-learning']",A simple to use pytorch wrapper for contrastive self-supervised learning on any neural network
cyk1337/highway-transformer,cyk1337/Highway-Transformer,"['highway-transformer', 'transformer-xl', 'language-model', 'pytorch', 'transformer', 'gating-transformer', 'gated-attention']",[ACL‘20] Highway Transformer: A Gated Transformer.
suessmann/intelligent_traffic_lights,suessmann/intelligent_traffic_lights,"['q-learning', 'deep-learning', 'neural-network', 'reinforcement-learning', 'traffic-lights', 'traffic-control']",Traffic Lights Control with Deep Learning
hitlic/bijou,hitlic/bijou,[],"A fastai-like framework for training, tuning and probing pytorch models, which is compatible with pytorch_geometric and DGL."
grishavak/lidia-denoiser,grishavak/LIDIA-denoiser,"['image-denoising', 'residual-learning', 'pytorch', 'adaptation', 'lightweight', 'lightweight-neural-network', 'fine-tuning', 'deep-learning', 'machine-learning', 'image-processing']","LIDIA: Lightweight Learned Image Denoising with Instance Adaptation (NTIRE, 2020)"
miemie2013/keras-solo,miemie2013/Keras-SOLO,"['keras', 'solo', 'solov2', 'solov1']",Keras-SOLO(Segmenting Objects by Locations)
affjljoo3581/expanda,affjljoo3581/Expanda,"['dataset', 'deep-learning', 'nlp', 'bert', 'gpt2', 'wikipedia', 'corpus', 'build', 'machine-learning', 'python', 'natural-language-processing', 'datasets', 'pytorch', 'tensorflow']",The universal integrated corpus-building environment.
frank-zyw/chinese-text-classification,Frank-ZYW/Chinese-Text-Classification,[],基于Pytorch实现的一些经典自然语言处理模型中文短文本分类任务，包含TextCNN，TextRCNN，FastText，BERT，ROBERT以及ERNIE
mnamysl/nat-acl2020,mnamysl/nat-acl2020,"['deep-learning', 'nlp', 'natural-language-processing', 'sequence-labeling', 'named-entity-recognition', 'robustness', 'ocr', 'optical-character-recognition', 'nat', 'flair', 'typos', 'flair-framework', 'misspellings', 'ner', 'data-augmentation', 'stability-training']",
zxpzhong/3d-recgan-pytorch,zxpzhong/3D-RecGAN-pytorch,"['deep-learning', '3d-reconstruction', 'gan', 'unet', 'pytorch']",A pytorch implement of 3D-RecGAN
woodywff/nas_3d_unet,woodywff/nas_3d_unet,"['neural-architecture-search', 'segmentation', 'brain-tumor-segmentation', 'brats', 'pytorch']",Neural Architecture Search for Gliomas Segmentation on Multimodal Magnetic Resonance Imaging
ai4ce/deepsoro,ai4ce/DeepSoRo,"['robotics', 'softrobot', 'perception', 'data-driven', 'deep-learning', 'soft-robotics', 'softrobotics']",[RA-L/ICRA2020] Real-time Soft Body 3D Proprioception via Deep Vision-based Sensing
breezedeus/cnstd,breezedeus/CnSTD,"['object-detection', 'pytorch', 'text-detection', 'deep-learning', 'math-formula-detection']",CnSTD: 基于 PyTorch/MXNet 的 中文/英文 场景文字检测（Scene Text Detection）Python3 包
lonepatient/electra_pytorch,lonePatient/electra_pytorch,"['electra', 'pytorch', 'bert', 'nlp', 'deeplearning', 'glue', 'language-model']", ELECTRA: Pre-training Text Encoders as Discriminators Rather Than Generators 
slientge/sequential_recommendation_tensorflow,slientGe/Sequential_Recommendation_Tensorflow,"['recommendation', 'tensorflow', 'python', 'caser', 'gru4rec', 'attrec', 'fpmc', 'transrec', 'sequential-recommendation', 'sasrec']",Several sequential recommended models implemented by tenosrflow1.x
mhashas/document-image-unwarping-pytorch,mhashas/Document-Image-Unwarping-pytorch,"['computer-vision', 'deep-learning', 'convolutional-neural-networks', 'unet', 'deeplab-v3-plus', 'pytorch', 'document-unwarping', 'mobilenet-v2', 'resnet']","Pytorch implementation and extension of ""DocUnet: Document Image Unwarping via A Stacked U-Net"""
he-dhamo/simsg,he-dhamo/simsg,"['scene-graphs', 'image-manipulation', 'gans', 'generative-models', 'pytorch', 'deep-learning', 'graph-convolution']",Semantic Image Manipulation using Scene Graphs (CVPR 2020)
szzexpoi/air,szzexpoi/AiR,"['saliency-maps', 'attention-supervision', 'attention', 'machine-attention']","Official Repository for ECCV 2020 paper ""AiR: Attention with Reasoning Capability"""
jenojp/extractacy,jenojp/extractacy,"['nlp', 'spacy', 'spacy-extension', 'ner', 'entity-extraction', 'spacy-pipeline', 'pattern-matching', 'entity-linking']","Spacy pipeline object for extracting values that correspond to a named entity (e.g., birth dates, account numbers, laboratory results)"
weixmath/view-gcn,weixmath/view-GCN,[],Pytorch code for view-GCN (CVPR2020)
ligouhai-bigone/sentiment-analysis-chinese-pytorch,Ligouhai-bigone/Sentiment-Analysis-Chinese-pytorch,[],Sentiment Analysis-Pytorch(情感分析的Pytorch实现)
saminens/medi-coqa,saminens/Medi-CoQA,"['conversational-ai', 'pytorch', 'question-answering', 'dockerfile', 'coqa', 'squad', 'albert', 'clinicalbert', 'bert']",Conversational Question Answering on Clinical Text
jintao-huang/efficientdet_pytorch,Jintao-Huang/EfficientDet_PyTorch,"['efficientdet', 'pytorch', 'object-detection']",EfficientDet_PyTorch 目标检测(Object Detection)
dongpoli/ec-bert,DongPoLI/EC-BERT,"['bert', 'relation-extraction', 'bert-relation-extraction', 'pytorch', 'relation-classification', 'r-bert', 'ec-bert']",Relation Classificaton based on information enhanced BERT
vsainteuf/lightweight-temporal-attention-pytorch,VSainteuf/lightweight-temporal-attention-pytorch,"['deep-learning', 'deep-neural-networks', 'deeplearning', 'self-attention', 'satellite', 'satellite-imagery', 'satellite-data', 'time-series', 'classification', 'pytorch', 'remote-sensing', 'time-series-classification', 'machine-learning']",A PyTorch implementation of the Light Temporal Attention Encoder (L-TAE) for satellite image time series. classification
chandar-lab/patchup,chandar-lab/PatchUp,"['regularization-methods', 'convolutional-neural-network', 'pytorch']",
includeamin/covid-19,includeamin/COVID-19,"['covid-19', 'classification', 'coronavirus', 'covid-virus', 'covid-data', 'x-ray', 'coronavirus-analysis', 'tensorflow', 'keras', 'deep-learning', 'docker', 'python3', 'python', 'fastapi', 'xray-image', 'detection', 'dataset', 'label', 'ct', 'computer-vision']",detection of covid-19 from X-ray images Using keras and tensorflow
puneesh00/cs-mri-gan,puneesh00/cs-mri-gan,"['mri', 'reconstruction', 'compressive-sensing', 'gan', 'cvpr2020', 'cvprw', 'inverse-problems', 'deep-learning', 'cvpr']",Structure preserving Compressive Sensing MRI Reconstruction using Generative Adversarial Networks (CVPRW 2020)
fxmeng/filter-grafting,fxmeng/filter-grafting,"['filter', 'grafting', 'pruning', 'distillation', 'multi-network', 'pytorch']",Filter Grafting for Deep Neural Networks(CVPR 2020)
cientgu/giqa,cientgu/GIQA,"['generative-model', 'image-quality-assessment', 'generative-adversarial-networks']",Pytorch implementation of Generated Image Quality Assessment
badbadbadboy/pytorch.ctpn,BADBADBADBOY/pytorch.ctpn,"['ctpn', 'pytorch', 'ocr', 'text-detection', 'python3', 'ohem']","pytorch, ctpn ,text detection ,ocr,文本检测"
chriswu1997/pq-net,ChrisWu1997/PQ-NET,"['paper', '3d-shapes', 'deep-learning', 'cvpr2020']","code for our CVPR 2020 paper ""PQ-NET: A Generative Part Seq2Seq Network for 3D Shapes"""
manpreet1130/realtime-sudoku-solver,manpreet1130/RealTime-Sudoku-Solver,"['pytorch', 'opencv-python', 'image-processing', 'cnn', 'artificial-intelligence', 'sudoku-solver', 'realtime']",Solving sudoku puzzles with the help of OpenCV and PyTorch(CNN)
hasnainraz/fast-aginggan,HasnainRaz/Fast-AgingGAN,"['gan', 'generative-adversarial-network', 'face-aging', 'cycle-gan', 'pytorch', 'pytorch-lightning', 'neural-network', 'tensorboard', 'cnn', 'realtime-face-aging', 'faceapp']","A deep learning model to age faces in the wild, currently runs at 60+ fps on GPUs"
csyanbin/scot,csyanbin/SCOT,"['semantic-correspondence', 'pytorch', 'optimal-transport']","CVPR 2020, Semantic Correspondence as an Optimal Transport Problem, Pytorch Implementation. "
justusthies/neuraltexgen,JustusThies/NeuralTexGen,"['texture-mapping', 'pytorch', 'optimization', 'image-generation']",Image-space texture optimization of 3D meshes using PyTorch
raymond-sci/pica,Raymond-sci/PICA,[],Official Pytorch Implementation for CVPR'20 paper: Deep Semantic Clustering by Partition Confidence Maximisation
chenchongthu/ensfm,chenchongthu/ENSFM,"['recommender-system', 'neural-network', 'efficient-algorithm', 'non-sampling', 'recommendation', 'context', 'feature']",This is our implementation of ENSFM: Efficient Non-Sampling Factorization Machines (WWW 2020)
yangrui2015/sparse-reward-algorithms,YangRui2015/Sparse-Reward-Algorithms,"['sparse-reward-algorithms', 'hindsight-experience-replay', 'ddpg', 'curriculum-learning', 'imitation-learning', 'tensorflow']",Implement many Sparse Reward algorithms in Gym Fetch environment
dwromero/att_gconvs,dwromero/att_gconvs,"['equivariance', 'group-convolution', 'cnns', 'attention', 'pytorch']","Code repository for the paper ""Attentive Group Equivariant Convolutional Neural Networks"" published at ICML 2020. https://arxiv.org/abs/2002.03830"
pvlachas/rnn-rc-chaos,pvlachas/RNN-RC-Chaos,"['rnn', 'rc', 'chaos', 'echo-state-networks', 'recurrent-neural-networks', 'kuramoto-sivashinsky', 'lorenz-96', 'lorenz-3d', 'reservoir-computing', 'reservoir-computer', 'backpropagation', 'forecasting', 'esn', 'rnn-tensorflow', 'rnn-gru', 'rnn-lstm']",RNN architectures trained with Backpropagation and Reservoir Computing (RC) methods for forecasting high-dimensional chaotic dynamical systems.
daintlab/confidence-aware-learning,daintlab/confidence-aware-learning,['pytorch'],Confidence-Aware Learning for Deep Neural Networks (ICML2020)
wuxinwang1997/wheatdetection,wuxinwang1997/wheatdetection,[],Pytorch project for https://www.kaggle.com/c/global-wheat-detection
iduta/pyconvsegnet,iduta/pyconvsegnet,"['semantic-segmentation', 'scene-parsing', 'ade20k', 'pytorch', 'scene-recognition', 'deep-learning', 'computer-vision', 'pattern-recognition', 'machine-learning', 'neural-networks', 'pyconv', 'segmentation']",Semantic Segmentation PyTorch code for our paper: Pyramidal Convolution: Rethinking Convolutional Neural Networks for Visual Recognition (https://arxiv.org/pdf/2006.11538.pdf)
prasanna1991/latentmixing,Prasanna1991/LatentMixing,"['semi-supervised', 'latent-mixmatch', 'manifold-mixmatch', 'latent-mixing', 'pytorch']","The implementation of ""Semi-supervised Medical Image Classification with Global Latent Mixing"". [MICCAI2020]"
erenbalatkan/depthvisualizer,ErenBalatkan/DepthVisualizer,"['point-clouds', 'depth-maps', 'computer-vision', 'deep-learning', 'tools']",OpenGL Based Python Library for 3D visualization of Point Clouds & Depth Maps
clovaai/assembled-cnn,clovaai/assembled-cnn,"['convolutional-neural-networks', 'tensorflow', 'image-classification', 'deep-learning', 'transfer-learning', 'computer-vision', 'mce', 'imagenet', 'inference-throughput', 'robustness', 'food-101']","Tensorflow implementation of ""Compounding the Performance Improvements of Assembled Techniques in a Convolutional Neural Network"""
jusperlee/dual-path-rnn-pytorch,JusperLee/Dual-Path-RNN-Pytorch,"['pytorch', 'speech-separation-algorithm', 'deep-learning', 'rnn-model', 'speech-separation']",Dual-path RNN: efficient long sequence modeling for time-domain single-channel speech separation implemented by Pytorch
d-li14/psconv,d-li14/PSConv,"['convolution', 'multi-scale', 'feature-pyramids', 'object-detection', 'instance-segmentation', 'mmdetection', 'pytorch', 'eccv2020']",[ECCV 2020] PSConv: Squeezing Feature Pyramid into One Compact Poly-Scale Convolutional Layer
eliahuhorwitz/deepsim,eliahuhorwitz/DeepSIM,"['single-image', 'image-editing', 'deep-neural-networks', 'generative-adversarial-network', 'computer-vision', 'computer-graphics', 'edge-to-image', 'segmantation-to-image', 'pytorch', 'image-to-image-translation', 'deep-learning', 'iccv2021']","Official PyTorch implementation of the paper: ""DeepSIM: Image Shape Manipulation from a Single Augmented Training Sample"" (ICCV 2021 Oral)"
yeh-yu-hsuan/bifuse,Yeh-yu-hsuan/BiFuse,"['depth', 'depth-estimation', 'monocular-depth-estimation', 'spherical', 'deep-learning', 'computer-vision', 'cvpr2020', '360-camera', 'pytorch']",[CVPR2020] BiFuse: Monocular 360 Depth Estimation via Bi-Projection Fusion
pokaxpoka/sunrise,pokaxpoka/sunrise,"['reinforcement-learning', 'rl', 'deep-learning', 'mujoco', 'dm-control', 'codebase', 'model-free', 'off-policy', 'deep-reinforcement-learning', 'deep-neural-networks', 'deep-q-learning', 'deep-q-network', 'soft-actor-critic', 'sac', 'rainbow']",SUNRISE: A Simple Unified Framework for Ensemble Learning in Deep Reinforcement Learning
suoivy/lpd-net,Suoivy/LPD-net,"['computer-vision', 'point-cloud', 'deep-learning', 'place-recognition']","LPD-Net: 3D Point Cloud Learning for Large-Scale Place Recognition and Environment Analysis, ICCV 2019, Seoul, Korea"
autosoft-dev/code-bert,autosoft-dev/code-bert,"['machine-learning', 'machine-learning-on-source-code', 'bert-model', 'roberta', 'mlmodel', 'python3', 'deep-learning', 'transformer', 'function-docstring-pairs', 'python']",Automatically check mismatch between code and comments using AI and ML
jind11/titlestylist,jind11/TitleStylist,"['natural-language-processing', 'summarization', 'transformer', 'style-transfer', 'pytorch-implementation']","Source code for our ""TitleStylist"" paper at ACL 2020"
maartengr/reinlife,MaartenGr/ReinLife,"['python', 'reinforcement-learning', 'artificial-intelligence', 'artificial-life', 'deep-learning']",Creating Artificial Life with Reinforcement Learning
yiqun-wang/mgcn,yiqun-wang/MGCN,"['pytorch', 'descriptor-learning', 'multiscale-gcns', 'graphics', 'siggraph']",MGCN: Descriptor Learning using Multiscale GCNs (SIGGRAPH 2020)
jywa/overlap_local_sgd,JYWa/Overlap_Local_SGD,"['pytorch', 'distributed-optimization', 'sgd-optimizer', 'deep-learning']",Implementation of (overlap) local SGD in Pytorch
bojone/adafactor,bojone/adafactor,[],adafactor optimizer for keras
deepraj1729/yplate,deepraj1729/yplate,"['machine-learning', 'deep-learning', 'neural-networks', 'yolov3', 'opencv', 'detect-plates', 'number-plate-recognition', 'numpy', 'tensorflow', 'computer-vision']",License Plate Detection library powered by YOLO v3 and OpenCV with Command Line Interface
kaist-amsg/composition-conditioned-crystal-gan,kaist-amsg/Composition-Conditioned-Crystal-GAN,[],Composition-Conditioned Crystal GAN pytorch code
mrrobot2211/pytorch-deep-photo-enhancer,MrRobot2211/pytorch-deep-photo-enhancer,"['deep-photo-enhancer', 'pytorch', 'gans']",pytorch implementation of deep photo enhancer
jelly54/pytorch_train,tf2jaguar/pytorch_train,"['resnet-34', 'pytorch-tutorial']",毕业设计 使用pytorch进行深度学习网络模型训练，实现车型识别
pvjosue/waveblocks,pvjosue/WaveBlocks,"['pytorch', 'microscopy', 'psf-engineering', 'optimization-framework', 'wave-optics', 'calibration']","Optimization framework developed in Pytorch, allowing calibration, and joint optimization of optics and deep learning models."
apockill/creepycrawlai,apockill/CreepyCrawlAI,"['godot-python', 'tensorflow', 'reinforcement-learning', 'genetic-algorithm', 'godot']","A deep neural network evolutionary sim, built with Godot, godot-python, and tensorflow."
twni2016/meta-sac,twni2016/Meta-SAC,"['automl', 'sac', 'soft-actor-critic', 'mujoco', 'deep-reinforcement-learning', 'hyperparameter-optimization', 'pytorch', 'meta-learning']",Auto-tune the Entropy Temperature of Soft Actor-Critic via Metagradient - 7th ICML AutoML workshop 2020
ma-dan/keras-yolo4,Ma-Dan/keras-yolo4,"['keras', 'yolov4', 'object-detection']",A Keras implementation of YOLOv4 (Tensorflow backend)
yangnaruto/fq-gan,YangNaruto/FQ-GAN,"['biggan', 'gans', 'pytorch', 'tensorflow', 'image-translation', 'image-generation', 'stylegan']",Official implementation of FQ-GAN
d-li14/dhm,d-li14/DHM,"['pytorch', 'imagenet', 'pretrained-models', 'deeply-supervised', 'knowledge-distillation', 'cvpr2020']",[CVPR 2020] Dynamic Hierarchical Mimicking Towards Consistent Optimization Objectives
tatigabru/kaggle-rsna,tatigabru/kaggle-rsna,"['object-detection', 'python', 'machine-learning', 'deep-learning', 'detection', 'image-processing', 'image-augmentation', 'pneumonia-detection', 'retinanet', 'neural-networks', 'classification', 'medical-imaging', 'computer-assisted-diagnosis']","Deep Learning for Automatic Pneumonia Detection, RSNA challenge"
ncarraz/esrganplus,ncarraz/ESRGANplus,"['super-resolution', 'deep-learning', 'generative-adversarial-network', 'convolutional-neural-network']",ICASSP 2020 - ESRGAN+ : Further Improving Enhanced Super-Resolution Generative Adversarial Network - ICPR 2020 - Tarsier: Evolving Noise Injection in Super-Resolution GANs
zlinao/variational-transformer,zlinao/Variational-Transformer,"['machine-learning', 'transformer', 'variational-transformer', 'dialog', 'dialogue-systems']",Variational Transformers for Diverse Response Generation
lyhue1991/torchkeras,lyhue1991/torchkeras,[],Pytorch❤️  Keras 😋😋
bojone/bert-of-theseus,bojone/bert-of-theseus,[],bert-of-theseus via bert4keras
tshrjn/finetune-qa,tshrjn/Finetune-QA,[],"BERT, RoBERTa fine-tuning over SQuAD Dataset using pytorch-lightning⚡️, 🤗-transformers & 🤗-nlp."
utahnlp/infotabs-code,utahnlp/infotabs-code,"['nlp', 'nlp-datasets', 'nlp-machine-learning', 'acl2020', 'wikipedia', 'tables', 'semi-structured-data', 'svm', 'roberta', 'transformer', 'nli', 'inference', 'infotabs']","Implementation of the semi-structured inference model in our ACL 2020 paper, INFOTABS: Inference on Tables as Semi-structured Data."
lyqun/pu-net_pytorch,lyqun/PU-Net_pytorch,"['pytorch', 'cvpr2018', 'point-cloud', 'pu-net', 'upsampled-point-clouds']","PyTorch Implementation of PU-Net. PU-Net: Point Cloud Upsampling Network, CVPR 2018"
maheshkkumar/fscc,maheshkkumar/fscc,"['crowd-counting', 'few-shot-learning', 'meta-learning', 'pytorch']",Few-Shot Scene Adaptive Crowd Counting Using Meta-Learning (WACV 2020)
gkunnan97/fastgcn_pytorch,Gkunnan97/FastGCN_pytorch,"['fastgcn', 'pytorch', 'as-gcn']",an implementation of FastGCN with pytorch
malllabiisc/compgcn,malllabiisc/CompGCN,"['link-prediction', 'relation-embeddings', 'iclr2020', 'graph-convolutional-networks', 'deep-learning', 'pytorch', 'graph-representation-learning']",ICLR 2020: Composition-Based Multi-Relational Graph Convolutional Networks
yinyunie/total3dunderstanding,yinyunie/Total3DUnderstanding,"['scene-understanding', 'scene-reconstruction', 'cvpr2020', 'pytorch']","Implementation of CVPR'20 Oral: Total3DUnderstanding: Joint Layout, Object Pose and Mesh Reconstruction for Indoor Scenes from a Single Image"
lucidrains/siren-pytorch,lucidrains/siren-pytorch,"['artificial-intelligence', 'deep-learning', 'activation-functions']",Pytorch implementation of SIREN -  Implicit Neural Representations with Periodic Activation Function
guolinke/tupe,guolinke/TUPE,"['bert', 'pretraining', 'language-model', 'transformer']","Transformer with Untied Positional Encoding (TUPE). Code of paper ""Rethinking Positional Encoding in Language Pre-training"". Improve existing models like BERT."
ziwei-zh/corrpm,ziwei-zh/CorrPM,"['human-parsing', 'semantic-segmantation', 'pytorch', 'cvpr2020', 'cvpr']","Pytorch implementation of CVPR2020 paper ""Correlating Edge, Pose with Parsing"""
svip-lab/indoor-sfmlearner,svip-lab/Indoor-SfMLearner,"['pytorch', 'eccv2020', 'unsupervised-learning', 'indoor', 'depth-estimation', 'nyuv2', 'extract-superpixel', 'scannet', 'pose-estimation', 'self-supervised']",[ECCV'20] Patch-match and Plane-regularization for Unsupervised Indoor Depth Estimation
dingmyu/dapn,dingmyu/DAPN,[],"A pytorch implementation of ""Domain-Adaptive Few-Shot Learning"""
mikel-brostrom/yolov3_deepsort_pytorch,mikel-brostrom/Yolov3_DeepSort_Pytorch,"['deep-sort', 'yolo-v3', 'pytorch', 'real-time', 'multple-object-tracking', 'pedestrian-tracking', 'computer-camera', 'yolov3', 'deep-association-metric', 'pytorch-yolov3', 'video', 'web-camera', 'rtsp-stream', 'http-stream', 'simple-online-and-realtime-tracking', 'you-only-look-once']",Real-time multi-person tracker using YOLO v3 and deep sort
mdeib/berkeley-deep-rl-pytorch-starter,mdeib/berkeley-deep-RL-pytorch-starter,"['cs285', 'reinforcement-learning', 'pytorch-rl']",Pytorch starter code for UC Berkeley's cs285 assignments
jimmychame/sadnet,JimmyChame/SADNet,[],"Pytorch code for ""Spatial-Adaptive Network for Single Image Denoising"""
cendelian/yolov4-hat-detection,yumulinfeng1/YOLOv4-Hat-detection,"['yolov4', 'hat-detection', 'pytorch']",基于YOLOv4的安全帽佩戴检测
xcmyz/fastspeech2,xcmyz/FastSpeech2,"['fastspeech', 'fastspeech2', 'speech-synthesis', 'pytorch', 'tts']",The Implementation of FastSpeech2 Based on Pytorch.
christophreich1996/semantic_pyramid_for_image_generation,ChristophReich1996/Semantic_Pyramid_for_Image_Generation,"['generative-adversarial-network', 'gan', 'adversarial-learning', 'semantic-pyramid', 'image-generation', 'pytorch', 'deep-learning', 'deep-neural-networks', 'machine-learning', 'convolutional-neural-networks', 'cnn', 'semantic-pyramid-image-generation']","PyTorch reimplementation of the paper: ""Semantic Pyramid for Image Generation"" [CVPR 2020]."
jojonki/beamsearch,jojonki/BeamSearch,[],Beam search decoding with Pytorch
anyleopeace/durleca,AnyLeoPeace/DURLECA,"['reinforcement-learning', 'deep-learning']",The released code for DUal-objective Reinforcement-Learning Epidemic Control Agent.
adumrewal/imagematting,adumrewal/imageMatting,"['deep-image-matting', 'deep-learning', 'deep-neural-networks', 'model-training', 'flexible-code', 'foreground-segmentation', 'foreground-detection', 'foreground-background', 'background-image', 'foreground-extraction', 'foreground-segmentation-network', 'image-segmentation', 'image-matting', 'matting', 'computer-vision', 'background-subtraction', 'background-removal']",Simplified Deep Image Matting training code with keras on tensorflow
c8241998/cv_attention,c8241998/CV_attention,[],pytorch-version implementation codes of some CV attention models
justusschock/dl-utils,justusschock/dl-utils,"['pytorch', 'python', 'cnn', 'deep-learning', 'neural-network', 'deep-neural-networks', 'models', 'loss-functions', 'metrics']","Utilities for Deep Learning with PyTorch (models, losses, metrics etc.)"
google-research/fast-soft-sort,google-research/fast-soft-sort,"['differentiable', 'sorting', 'ranking', 'pytorch', 'tensorflow', 'jax']",Fast Differentiable Sorting and Ranking
allenai/dont-stop-pretraining,allenai/dont-stop-pretraining,"['natural-language-processing', 'pretrained-language-model']",Code associated with the Don't Stop Pretraining ACL 2020 paper
clovaai/clovacall,clovaai/ClovaCall,"['speech-recognition', 'speech-corpus', 'korean-speech', 'call-based-speech-corpus', 'goal-oriented-dialog', 'interspeech2020']",ClovaCall dataset and Pytorch LAS baseline code (Interspeech 2020)
da-southampton/read_bert_code,DA-southampton/Read_Bert_Code,[],Bert源码阅读与讲解(Pytorch版本)-以BERT文本分类代码为例子
alexeykarnachev/full_stack_transformer,alexeykarnachev/full_stack_transformer,"['transformers', 'pytorch-lightning', 'language-model', 'telegram-bot', 'language-model-generation', 'language-model-finetuning', 'gpt-2']","Pytorch library for end-to-end transformer models training, inference and serving"
ejcgt/attention-target-detection,ejcgt/attention-target-detection,"['cvpr2020', 'attention', 'gaze-estimation', 'pytorch', 'gaze', 'cvpr', 'dataset']","[CVPR2020] ""Detecting Attended Visual Targets in Video"""
zsyoaoa/danet,zsyOAOA/DANet,[],Dual Adversarial Network: Toward Real-world Noise Removal and Noise Generation (ECCV 2020) (Pytorch)
michaelharms/comcrawl,michaelharms/comcrawl,"['commoncrawl', 'python', 'data', 'common-crawl', 'scraping', 'deep-learning', 'training-dataset']",A python utility for downloading Common Crawl data
kayoyin/transformer-slt,kayoyin/transformer-slt,"['sign-language-translation', 'neural-machine-translation', 'transformer', 'machine-learning', 'deep-learning']","Sign Language Translation with Transformers (COLING'2020, ECCV'20 SLRTP Workshop)"
borchero/pycave,borchero/pycave,"['machine-learning', 'gaussian-mixture-models', 'markov-model', 'pytorch', 'kmeans', 'pytorch-lightning']",Traditional Machine Learning Models for Large-Scale Datasets in PyTorch.
cdj0311/dssm,cdj0311/dssm,[],A BiGRU-Attention DSSM implementation with tensorflow estimator.
lucidrains/compressive-transformer-pytorch,lucidrains/compressive-transformer-pytorch,"['artificial-intelligence', 'deep-learning', 'transformer', 'attention-mechanism']","Pytorch implementation of Compressive Transformers, from Deepmind"
martinomensio/spacy-sentence-bert,MartinoMensio/spacy-sentence-bert,"['nlp', 'spacy', 'models', 'bert', 'sentence-bert', 'sentence-transformers']",Sentence transformers models for SpaCy
zacario-li/fast-scnn_pytorch,zacario-li/Fast-SCNN_pytorch,"['pytorch', 'fast-scnn', 'semantic-segmentation', 'segmentation']",A PyTorch Implementation of Fast-SCNN: Fast Semantic Segmentation Network(PyTorch >= 1.4)
yuk6heo/ivos-atnet,yuk6heo/IVOS-ATNet,['video-object-segmentation'],"Pytorch implementation of ECCV2020 paper, ""Interactive Video Object Segmentation Using Global and Local Transfer Modules"""
hairlab/pbsgd,HAIRLAB/pbSGD,"['deep-learning', 'machine-learning', 'optimization', 'pytorch']",Powered Stochastic Gradient Descent Methods for AcceleratedNonconvex Optimization
microsoft/reconner,microsoft/reconner,"['ner-data', 'nlp', 'ai', 'data']","ReconNER, Debug annotated Named Entity Recognition (NER) data for inconsistencies and get insights on improving the quality of your data."
zassou65535/image_generator,zassou65535/image_generator,"['python', 'gan', 'image-generation', 'dcgan', 'pytorch']",GANのpytorch実装
lucidrains/memory-compressed-attention,lucidrains/memory-compressed-attention,"['artificial-intelligence', 'deep-learning', 'attention-mechanism']","Implementation of Memory-Compressed Attention, from the paper ""Generating Wikipedia By Summarizing Long Sequences"""
maraoz/gpt-scrolls,maraoz/gpt-scrolls,"['openai', 'gpt-3', 'language-model', 'transformer', 'generator', 'safety']",A collaborative collection of open-source safe GPT-3 prompts that work well
qiaoranc/tf_resnest_regnet_model,QiaoranC/tf_ResNeSt_RegNet_model,[],"tensorflow 2.x version of ResNeSt,RegNet,DETR"
abdelrahman-gaber/tf2-object-detection-api-tutorial,abdelrahman-gaber/tf2-object-detection-api-tutorial,"['tf2', 'tensorflow2', 'tensorflow', 'object-detection', 'object-detection-api', 'tensorflow2-models', 'keras-tensorflow', 'tf2-tutorial', 'object-detection-api-tutorial', 'tensorflow-object-detection-api', 'tf2-object-detection-api', 'detection-models']","Tensorflow 2 Object Detection API Tutorial. This tutorial will take you from installation, to running pre-trained detection model, and training your model with a custom dataset, then exporting it for inference."
siyuhuang/posestylizer,siyuhuang/PoseStylizer,"['person-image-generation', 'pytorch']",PyTorch implementation of Generating Person Images with Appearance-aware Pose Stylizer (IJCAI 2020)
longlongman/casrel-pytorch-reimplement,longlongman/CasRel-pytorch-reimplement,[],"Pytorch reimplement of the paper ""A Novel Cascade Binary Tagging Framework for Relational Triple Extraction"" ACL2020. The original code is written in keras."
mdeib/berkeley-deep-rl-pytorch-solutions,mdeib/berkeley-deep-RL-pytorch-solutions,"['cs285', 'reinforcement-learning', 'pytorch-rl']",Pytorch solutions for UC Berkeley's cs285 assignments
audioku/meta-transfer-learning,audioku/meta-transfer-learning,"['meta-learning', 'speech', 'speech-recognition', 'asr', 'code-switching', 'multi-lingual', 'language', 'language-model', 'neural-network', 'transformer', 'pytorch', 'meta-transfer-learning', 'mixed-language', 'acl']",Implementation of meta-transfer-learning for ASR and LM (ACL 2020)
chihyaoma/cyclical-visual-captioning,chihyaoma/cyclical-visual-captioning,"['pytorch', 'vision-and-language', 'visual-grounding', 'captioning-images', 'captioning-videos']",PyTorch code for: Learning to Generate Grounded Visual Captions without Localization Supervision
anisha2102/docvqa,anisha2102/docvqa,"['visual-question-answering', 'computer-vision', 'deep-learning', 'document-analysis']",Document Visual Question Answering
ricolike/mmgnn_textvqa,likenneth/mmgnn_textvqa,"['gnn', 'vqa', 'pytorch']",A Pytorch implementation of CVPR 2020 paper: Multi-Modal Graph Neural Network for Joint Reasoning on Vision and Scene Text
hanxunh/active-passive-losses,HanxunH/Active-Passive-Losses,"['icml-2020', 'label-noise', 'pytorch', 'icml', 'noisy-labels', 'deep-learning', 'deep-neural-networks', 'noisy-data', 'unreliable-labels', 'robust-learning']",[ICML2020] Normalized Loss Functions for Deep Learning with Noisy Labels
rajghugare19/rl-algorithms,RajGhugare19/RL-algorithms,[],Pytorch implementations deep RL research papers
lucidrains/memory-transformer-xl,lucidrains/memory-transformer-xl,"['artificial-intelligence', 'deep-learning', 'transformer', 'attention-mechanism', 'memory']","A variant of Transformer-XL where the memory is updated not with a queue, but with attention"
minivision-ai/silent-face-anti-spoofing,minivision-ai/Silent-Face-Anti-Spoofing,"['computer-vision', 'deep-learning', 'face-anti-spoofing', 'android-app', 'sdk']",静默活体检测（Silent-Face-Anti-Spoofing）
wangt-cn/vc-r-cnn,Wangt-CN/VC-R-CNN,[],[CVPR 2020] The official pytorch implementation of ``Visual Commonsense R-CNN''
nerminsamet/houghnet,nerminsamet/houghnet,"['object-detection', 'deep-learning', 'pytorch', 'voting', 'voting-classifier', 'bottom-up-model', 'hough-transform', 'hough', 'hough-transformation', 'instance-segmentation', 'video-object-detection', 'video-object-tracking', '3d-object-detection', 'human-pose-estimation', '2d-pose-estimation', 'pose-estimation', 'kitti-dataset', 'coco-dataset', 'eccv', 'eccv-2020']","[ECCV-20] Official PyTorch implementation of HoughNet, a voting-based object detector."
takapy0210/nlplot,takapy0210/nlplot,"['visualization', 'nlp', 'plotly', 'wordcloud', 'analytics', 'python']",Visualization Module for Natural Language Processing
gyunggyung/kogpt2-finetuning,gyunggyung/KoGPT2-FineTuning,"['nlp', 'gpt2', 'kogpt2', 'finetuning', 'korean-nlp', 'fine-tuning', 'korean', 'text-generation', 'lyrics-generator', 'language-model']","🔥 Korean GPT-2, KoGPT2 FineTuning cased. 한국어 가사 데이터 학습 🔥"
dido1998/recurrent-independent-mechanisms,dido1998/Recurrent-Independent-Mechanisms,"['deep-learning', 'generalization', 'rim', 'attention', 'recurrent-networks', 'lstms', 'grus', 'pytorch']",Implementation of the paper Recurrent Independent Mechanisms (https://arxiv.org/pdf/1909.10893.pdf)
apple/ml-mkqa,apple/ml-mkqa,"['dataset', 'nlp', 'multilingual-evaluation']","We introduce MKQA, an open-domain question answering evaluation set comprising 10k question-answer pairs aligned across 26 typologically diverse languages (260k question-answer pairs in total). The goal of this dataset is to provide a challenging benchmark for question answering quality across a wide set of languages. Please refer to our paper for details, MKQA: A Linguistically Diverse Benchmark for Multilingual Open Domain Question Answering"
firyuza/graphsage,Firyuza/GraphSAGE,"['graphsage', 'gat', 'tensorflow']",Graph Neural Networks
kpoeppel/pytorch_probgraph,kpoeppel/pytorch_probgraph,"['probabilistic-graphical-models', 'pytorch', 'restricted-boltzmann-machine', 'deep-belief-network']",A Library for Modelling Probabilistic Hierarchical Graphical Models in PyTorch
ericguo5513/action-to-motion,EricGuo5513/action-to-motion,"['deep-learning', 'human-motion-analysis', 'motion-generation', 'motion-synthesis']","Official implementations for ""Action2Motion: Conditioned Generation of 3D Human Motions (ACM MultiMedia 2020)"""
qiqihaer/3dssd-pytorch,qiqihaer/3DSSD-pytorch,[],3DSSD's implementation with Pytorch
tpaul1611/python_tflite_for_amazonlinux,tpaul1611/python_tflite_for_amazonlinux,"['tensorflow-lite', 'aws-lambda-python', 'amazonlinux', 'tflite', 'tensorflow', 'tensorflow-python', 'dockerfile']",Python TensorFlow Lite (tflite) for amazonlinux/aws lambda.
lironui/linear-attention-mechanism,lironui/Linear-Attention-Mechanism,"['attention-mechanism', 'attention', 'segmentation']",Attention mechanism
cli98/dmnet,Cli98/DMNet,"['deep-learning', 'aerial-image-detection', 'remote-sensing']",Official implementation for DMNet: Density map guided object detection in aerial image (CVPR 2020 EarthVision workshop)
mrkieumy/task-conditioned,mrkieumy/task-conditioned,"['computer-vision', 'object-detection', 'pedestrian-detection', 'thermal-imaging', 'yolov3-kaist', 'domain-adaptation', 'transfer-learning', 'fine-tuning', 'cnn', 'detector', 'deep-learning', 'python']","This source code implements our ECCV paper ""task-conditioned domain adaptation for pedestrian detection in thermal imagery""."
zhaogangthu/keras-yolo3-ocr-tensorrt,zhaogangthu/keras-yolo3-ocr-tensorrt,[],"ocr with yolo3 as feature extractor, implemented by keras, and accelerated by tensorrt"
sicara/tf2-yolov4,sicara/tf2-yolov4,"['tensorflow', 'keras', 'object-detection', 'yolo', 'yolov4']",A TensorFlow 2.0 implementation of YOLOv4: Optimal Speed and Accuracy of Object Detection
phamquiluan/residualmaskingnetwork,phamquiluan/ResidualMaskingNetwork,"['fer2013', 'facial-expression-recognition', 'residual-masking-network', 'pytorch', 'image-classification']",ICPR 2020: Facial Expression Recognition using Residual Masking Network
raoyongming/pointglr,raoyongming/PointGLR,"['3d-point-clouds', 'deep-learning', 'unsupervised-learning', 'computer-vision', 'representation-learning', 'metric-learning']",[CVPR 2020] Global-Local Bidirectional Reasoning for Unsupervised Representation Learning of 3D Point Clouds
clovaai/rebias,clovaai/rebias,"['machine-learning', 'deep-learning', 'rebias', 'bias-generalisation', 'bias-generalization', 'pytorch', 'icml2020', 'icml-2020', 'icml']","Official Pytorch implementation of ReBias (Learning De-biased Representations with Biased Representations), ICML 2020"
snunlp/kr-bert,snunlp/KR-BERT,['nlp'],KoRean based BERT pre-trained models (KR-BERT) for Tensorflow and PyTorch
neuml/cord19q,neuml/cord19q,"['python', 'machine-learning', 'nlp', 'covid-19', 'medical', 'search', 'scientific-papers', 'document-search']",COVID-19 Open Research Dataset (CORD-19) Analysis
yusukeurakami/dreamer-pytorch,yusukeurakami/dreamer-pytorch,[],pytorch-implementation of Dreamer (Model-based Image RL Algorithm)
raivnlab/str,RAIVNLab/STR,"['sparsity', 'learnable-sparsity', 'sparsity-optimization', 'cnn', 'efficient-inference', 'edge-machine-learning', 'soft-thresholding', 'str', 'imagenet', 'resource-efficient', 'icml-2020', 'icml', 'icml2020', 'soft-threshold-reparameterization']",Soft Threshold Weight Reparameterization for Learnable Sparsity
liucongg/unilmchatchitrobot,liucongg/UnilmChatchitRobot,"['unilm', 'nlp', 'generation', 'chatbot', 'chinese']",Unilm for Chinese Chitchat Robot.基于Unilm模型的夸夸式闲聊机器人项目。
xinshengwang/s2igan,xinshengwang/S2IGAN,[],Pytorch Code for S2IGAN
zassou65535/image_generator_2,zassou65535/image_generator_2,"['python', 'gan', 'image-generation', 'progressive-gan', 'pytorch']",Progressive GANによる画像生成器
miaoyunzhao/gantransferlimiteddata,MiaoyunZhao/GANTransferLimitedData,[],"This is a pytorch implementation of the paper ""On Leveraging Pretrained GANs for Limited-Data Generation""."
ternaus/facemask_detection,ternaus/facemask_detection,"['python', 'pytorch', 'classification', 'image-processing', 'mask-detection']",Detection masks on faces.
lornatang/ugatit-pytorch,Lornatang/UGATIT-PyTorch,"['pytorch', 'pytorch-implmention', 'cnn', 'gan', 'ugatit', 'simple', 'speed', 'pre-trained-model']","Simple, fast and easy to read. Yes, we use the pytorch framework!"
pfnet-research/tgan2,pfnet-research/tgan2,"['generative-adversarial-network', 'video-generation', 'machine-learning', 'deep-learning']","The official implementation of ""Train Sparsely, Generate Densely: Memory-efficient Unsupervised Training of High-resolution Temporal GAN"""
audioku/cross-accent-maml-asr,audioku/cross-accent-maml-asr,"['maml', 'meta-learning', 'asr', 'cross-accent', 'accent', 'pytorch', 'speech']",Meta-learning model agnostic (MAML) implementation for cross-accented ASR
mandubian/codenets,mandubian/codenets,"['deep-learning', 'nlp', 'programming-language', 'huggingface', 'transformer', 'bert', 'tokenizer', 'ai']",My own playground for PLP (Programming Language Processing) using DeepLearning techniques
statguyuser/textfeatureselection,StatguyUser/TextFeatureSelection,"['feature-selection', 'nlp', 'nlp-machine-learning', 'machine-learning', 'machinelearning', 'natural-language-processing', 'natural-language-understanding', 'text-classification', 'text-categorization', 'natural-language', 'natural-language-generation', 'nlp-library', 'nlp-resources', 'nlproc', 'naturallanguageprocessing', 'natural-language-inference']","Python library for feature selection for text features. It has filter method, genetic algorithm and TextFeatureSelectionEnsemble for improving text classification models. Helps improve your machine learning models"
eliasnehme/deepstorm3d,EliasNehme/DeepSTORM3D,[],DeepSTORM3D implemented in Pytorch
massanishi/document_similarity_algorithms_experiments,massanishi/document_similarity_algorithms_experiments,"['tf-idf', 'jaccard', 'algorithm', 'universal-sentence-encoder', 'bert', 'document-similarity', 'new-york-times', 'deep-learning']","Document similarity algorithms experiment - Jaccard, TF-IDF, Doc2vec, USE, and BERT."
armanihm/gdc,armanihm/GDC,"['graphneuralnetwork', 'deep-learning', 'deep-neural-networks', 'gcn', 'gcnn', 'machine-learning', 'bayesian-neural-networks', 'bayesian-deep-learning', 'graph-deep-learning', 'graph-neural-networks', 'graph-neural-network', 'graph-convolutional-networks']",Bayesian Graph Neural Networks with Adaptive Connection Sampling - Pytorch
qz-cmd/yolov3-trt-jetson-nano,QZ-cmd/YOLOv3-TRT-jetson-nano,[],基于pytorch-yolov3的trt加速方案
hyoungsungkim/pytorch-tensorboard_tutorial,HyoungsungKim/Pytorch-tensorboard_tutorial,[],Pytorch-tensorboard simple tutorial and example for a beginner
microsoft/lid-tool,microsoft/LID-tool,"['language-identification', 'natural-language-processing', 'python3', 'mallet', 'language-tags', 'code-mixing', 'code-switching', 'linguistics']","This code provides word level language identification tool for identifying language for individual words in Code-Mixed text. e.g. The text that includes words from two languages such as Hindi written in roman script, mixed with English."
maudzung/rtm3d,maudzung/RTM3D,"['rtm3d', 'real-time', 'monocular-images', 'centernet', 'pytorch-implementation', '3d-object-detection', 'autonomous-vehicles', 'self-driving-car', 'autonomous-driving', 'pytorch', 'kitti-dataset']","Unofficial PyTorch implementation of ""RTM3D: Real-time Monocular 3D Detection from Object Keypoints for Autonomous Driving"" (ECCV 2020)"
didi/dlflow,didi/dlflow,"['deeplearning', 'tensorflow', 'deeplearning-framework']",DLFlow is a deep learning framework.
nerminsamet/ppdet,nerminsamet/ppdet,"['object-detection', 'deep-learning', 'pytorch', 'fpn', 'noise-reduction', 'small-object-detection', 'pooling', 'top-down', 'bmvc', 'bmvc20']",[BMVC-20] Official PyTorch implementation of PPDet.
fcakyon/craft-text-detector,fcakyon/craft-text-detector,"['text', 'ocr', 'text-detection', 'computer-vision', 'deep-learning', 'neural-network', 'pytorch', 'python', 'pypi', 'anaconda', 'windows', 'macos', 'linux', 'document', 'vision', 'actions', 'workflow', 'craft', 'hacktoberfest']","Packaged, Pytorch-based, easy to use, cross-platform version of the CRAFT text detector"
myungsub/meta-interpolation,myungsub/meta-interpolation,"['frame-interpolation', 'meta-learning', 'slow-motion', 'pytorch', 'cvpr2020', 'video-frame-interpolation', 'deep-learning', 'computer-vision']","Source code for CVPR 2020 paper ""Scene-Adaptive Video Frame Interpolation via Meta-Learning"""
slgero/receipt_parser,slgero/receipt_parser,"['receipt', 'receipt-validation', 'nlp']",Allow parsing Russian receipts
huangtinglin/ngcf-pytorch,huangtinglin/NGCF-PyTorch,"['pytorch', 'pytorch-implementation', 'machine-learning', 'graph-algorithms', 'recommender-system', 'neural-collaborative-filtering', 'deep-learning']",PyTorch Implementation for Neural Graph Collaborative Filtering
zzhanghub/gicd,zzhanghub/gicd,"['eccv', 'eccv2020', 'co-saliency', 'pytorch', 'coca', 'gicd', 'salient-object-detection', 'segmentation', 'jigsaw', 'saliency-detection', 'paper']",[ECCV 2020] Gradient-Induced Co-Saliency Detection
pingyu-iris/sa-gcn,PingYu-iris/SA-GCN,[],This code repository presents the pytorch implementation of the paper “Structure-Aware Human-ActionGeneration”(ECCV 2020).
biparnakroy/pseudolabelgeneratorforyolo,biparnakroy/pseudoLabelGeneratorForYOLO,"['yolov3', 'yolov4-darknet', 'darknet', 'dataset-generation', 'yololabel', 'semi-supervised-learning', 'python-script', 'deep-neural-networks', 'deep-learning', 'yolov4', 'pseudo-labeling']",Creating datasets in YOLO format using pretrained YOLO model in Darknet framework which could be used to train the model further
zeroized/deeprec-torch,zeroized/DeepRec-torch,"['fm', 'deepfm', 'pnn', 'fnn', 'pytorch', 'ctr', 'deep-learning', 'afm', 'wide-and-deep', 'dcn', 'flen', 'autoint']",Easy-to-use pytorch-based framework for RecSys models
pranavsastry/neowise,pranftw/neowise,"['neural-network', 'artificial-intelligence', 'deeplearning', 'framework', 'pypi-package', 'machine-learning', 'python', 'numpy']",Deep Learning library built from scratch with Python and NumPy
sparkjiao/self-training-mrc,SparkJiao/Self-Training-MRC,[],This is the pytorch implementation of the long paper on ACL 2020: A Self-Training Method for Machine Reading Comprehension with Soft Evidence Extraction.
lavieluo/drmea,LavieLuo/DRMEA,"['domain-adaptation', 'manifold-learning', 'aaai2020']",Pytorch code for “Unsupervised Domain Adaptation via Discriminative Manifold Embedding and Alignment ” (DRMEA) (AAAI 2020).
iantaehoonyoo/semantic-segmentation-pytorch,IanTaehoonYoo/semantic-segmentation-pytorch,"['pytorch', 'computer-vision', 'semantic-segmentation', 'fcn', 'fcn8s', 'resnet50', 'resnet', 'unet', 'pspnet', 'mobileunet', 'vgg', 'vgg16', 'convolutional-networks', 'deep-learning']","Pytorch implementation of FCN, UNet, PSPNet, and various encoder models."
dmburd/s-dcnet,dmburd/S-DCNet,"['deep-learning', 'convolutional-neural-networks', 'pytorch', 'crowd-counting', 'computer-vision', 'crowd-analysis']",Unofficial Pytorch implementation of S-DCNet and SS-DCNet
shuuchen/frelu.pytorch,shuuchen/frelu.pytorch,"['activation-functions', 'cnn']",A PyTorch implementation of funnel activation https://arxiv.org/pdf/2007.11824.pdf
layer6ai-labs/tafa,layer6ai-labs/TAFA,"['python', 'pytorch', 'autoencoder', 'recommender-system']","Code for the RecSys'20 paper ""TAFA: Two-headed Attention Fused Autoencoder for Context-Aware Recommendations"""
nekitmm/funnelact_pytorch,nekitmm/FunnelAct_Pytorch,"['frelu', 'funnel-act', 'funnel-activation', 'pytorch', 'resnet', 'deep-learning', 'deep-neural-networks']",pytorch implementation of Funnel Activation (FReLU)
daixiangzi/grad_cam-pytorch-resnet50,daixiangzi/Grad_Cam-pytorch-resnet50,"['pytorch', 'grad-cam']",Class activate map 
leonlok/deep-sort-yolov4,LeonLok/Deep-SORT-YOLOv4,"['yolov4', 'deep-sort', 'deep-sort-tracking', 'people-tracker', 'people-tracking', 'asynchronous', 'asynchronous-io', 'yolo', 'tensorflow', 'asynchronous-processing', 'tracking-algorithm', 'object-detection', 'object-tracking', 'tensorflow2', 'detection-algorithm', 'yolov3']",People detection and optional tracking with Tensorflow backend.
saic-vul/iterdet,saic-vul/iterdet,"['iterdet', 'object-detection', 'mmdetection', 'pytorch', 'faster-rcnn', 'retinanet', 'crowdhuman', 'widerperson']",[S+SSPR2020] IterDet: Iterative Scheme for Object Detection in Crowded Environments
hrnet/hrnet-bottom-up-pose-estimation,HRNet/HRNet-Bottom-Up-Pose-Estimation,[],This is an official pytorch implementation of “Bottom-Up Human Pose Estimation by Ranking Heatmap-Guided Adaptive Keypoint Estimates” (https://arxiv.org/abs/2006.15480). 
yangyanli/do-conv,yangyanli/DO-Conv,"['deep-learning', 'convolutional-neural-networks', 'tensorflow', 'pytorch', 'gluoncv']",Depthwise Over-parameterized Convolutional Layer
hoya012/carrier-of-tricks-for-classification-pytorch,hoya012/carrier-of-tricks-for-classification-pytorch,"['deep-learning', 'deep-neural-networks', 'classification-pytorch', 'classification', 'pytorch', 'pytorch-tutorial', 'pytorch-cnn']",carrier of tricks for image classification tutorials using pytorch.
patrick-kidger/torchcubicspline,patrick-kidger/torchcubicspline,"['pytorch', 'interpolation', 'spline']","Interpolating natural cubic splines. Includes batching, GPU support, support for missing values, evaluating derivatives of the spline, and backpropagation."
fu0511/xgrad-cam,Fu0511/XGrad-CAM,[],Axiom-based Grad-CAM implementation in Pytorch
avbuffer/unet3plus_pth,avBuffer/UNet3plus_pth,"['pytorch', 'unet', 'unet-plusplus', 'unet3plus', 'portrait-matting']","UNet3+/ UNet++/UNet, used in Deep Automatic Portrait Matting in Pytorth"
perrying/pytorch-consistency-regularization,perrying/pytorch-consistency-regularization,"['pytorch', 'python', 'semi-supervised', 'semi-supervised-learning', 'fixmatch']",PyTorch implementation of consistency regularization methods for semi-supervised learning
adityap27/face-mask-detector,adityap27/face-mask-detector,"['computer-vision', 'deep-learning', 'yolo', 'machine-learning', 'artificial-intelligence', 'neural-network']",𝐑𝐞𝐚𝐥-𝐓𝐢𝐦𝐞 𝐅𝐚𝐜𝐞 𝐦𝐚𝐬𝐤 𝐝𝐞𝐭𝐞𝐜𝐭𝐢𝐨𝐧 𝐮𝐬𝐢𝐧𝐠 𝐝𝐞𝐞𝐩𝐥𝐞𝐚𝐫𝐧𝐢𝐧𝐠 𝐰𝐢𝐭𝐡 𝐀𝐥𝐞𝐫𝐭 𝐬𝐲𝐬𝐭𝐞𝐦 💻🔔
csjunxu/noisy-as-clean-tip2020,csjunxu/Noisy-As-Clean-TIP2020,['pytorch'],"PyTorch Code for ""Noisy-As-Clean: Learning Self-supervised Denoising from Corrupted Image"", TIP 2020."
lewis-morris/mapextrackt,lewis-morris/mapextrackt,"['pytorch', 'feature-extraction', 'neural-network']",Pytorch Feature Map Extractor
sundw2014/dcm,sundw2014/DCM,"['cnn', 'deep-learning', 'machine-learning', 'image-classification', 'knowledge-transfer', 'knowledge-distillation']",Knowledge Transfer via Dense Cross-layer Mutual-distillation (ECCV'2020)
wwdkl/aabo,wwdkl/AABO,"['detection', 'pytorch', 'anchor-optimization']",Implementation for ECCV 2020 paper: AABO: Adaptive Anchor Box Optimization for Object Detection via Bayesian Sub-sampling.
zhiqiangdon/online-augment,zhiqiangdon/online-augment,"['data-augmentation', 'automl', 'less-domain-knowledge', 'auto-augment', 'online-augment', 'stn', 'autoaugment', 'pytorch', 'vae', 'efficient-training', 'generative-adversarial-network', 'online-learning']","Code for ""OnlineAugment: Online Data Augmentation with Less Domain Knowledge"" (ECCV 2020)"
openredact/nerwhal,openredact/nerwhal,"['named-entities', 'ner', 'suite', 'recognize', 'recognition', 'entity-ruler', 'flashtext', 'keyword', 'deep-learning', 'statistical', 'regular-expressions']",This is a prototype of a multi-lingual suite for named-entity recognition in Python.
jd730/strg,jd730/STRG,[],Pytorch Implementation of  Videos as Space-Time Region Graphs
baowentz/advancedeast-pytorch,BaoWentz/AdvancedEAST-PyTorch,"['pytorch', 'advancedeast', 'lmdb-dataset']","将原本Keras版本的AdvancedEAST改写成PyTorch版，将数据集由.npy文件改成一个LMDB文件，加入Precision，Recall, F1 score方便训练以及调试，底层网络仍然用VGG16。"
xingangpan/deep-generative-prior,XingangPan/deep-generative-prior,"['generative-adversarial-network', 'gan', 'deep-learning', 'image-restoration', 'image-manipulation', 'image-prior']",Code for deep generative prior (ECCV2020 oral)
project-splinter/monoport,Project-Splinter/MonoPort,"['deep-learning', 'machine-learning', 'volumetric', '3d-reconstruction', '3d-vision', 'siggraph', 'monocular', 'performance-capture', 'eccv2020', 'virtual-reality', 'pifu', 'clothed-humans', 'reconstruction', 'pytorch', 'pifuhd', 'real-time', 'teleportation', 'virtual-conference', 'teleportvr', 'sdf']",Volumetric Human Teleportation (SIGGRAPH 2020 Real-Time Live) Monocular Real-Time Volumetric Performance Capture(ECCV 2020)
microsoft/rat-sql,microsoft/rat-sql,"['program-synthesis', 'semantic-parsing', 'nlp', 'question-answering', 'dbqa', 'nl2sql', 'transformers']",A relation-aware semantic parsing model from English to SQL
ethanrosenthal/nannernest,EthanRosenthal/nannernest,"['machine-learning', 'computer-vision', 'sandwiches', 'deep-learning']",Optimal peanut butter and banana sandwiches
zxhuang1698/interpretability-by-parts,zxhuang1698/interpretability-by-parts,"['cvpr2020', 'explainable-ai', 'interpretability', 'fine-grained-classification', 'part-based-models', 'celeba-dataset', 'cvpr-2020', 'cvpr-oral', 'pytorch', 'pytorch-implementation', 'face-segmentation', 'celeba', 'weakly-supervised-segmentation', 'weakly-supervised-localization', 'cub-dataset']","Code repository for ""Interpretable and Accurate Fine-grained Recognition via Region Grouping"", CVPR 2020 (Oral)"
antoninodimaggio/hugging-captions,antoninodimaggio/Hugging-Captions,"['transformers', 'nlp', 'instagram', 'huggingface', 'gpt-2', 'language-models']",Generate realistic Instagram captions using transformers 🤗 
music-x-lab/pop909-dataset,music-x-lab/POP909-Dataset,"['dataset', 'music', 'python', 'jupyter-notebook', 'deep-learning', 'music-generation']",This is the dataset repository for the paper: POP909: A Pop-song Dataset for Music Arrangement Generation
kubraturker/social_distancing-cv,KubraTurker/Social_Distancing-CV,"['social-distancing', 'covid-19', 'computer-vision', 'opencv', 'tensorflow', 'ai', 'python', 'covid19', 'deep-learning', 'coronavirus', 'caffe', 'ssd', 'object-detection', 'social-distancing-detection', 'social-distance-monitoring']",I developed a computer vision project that measures the distance between people to check whether a specific distance exists between them or not.
jermmy/pytorch-quantization-demo,Jermmy/pytorch-quantization-demo,[],A simple network quantization demo using pytorch from scratch.
chargedmonk/social-distancing-using-yolov5,ChargedMonk/Social-Distancing-using-YOLOv5,"['python', 'opencv', 'yolo', 'computer-vision', 'deep-learning', 'social-distancing', 'social-distancing-detection', 'social-distance-monitoring', 'pytorch']",Classifying people as high risk and low risk based on their distance to other people.
dmgutierrez/spotify-musixmatch-data-collector,dmgutierrez/spotify-musixmatch-data-collector,"['natural-language-processing', 'spotify-api', 'musixmatch-api', 'audio-processing', 'data-science', 'dataset-generation']",A Python module to generate large scale Music datasets using both Spotify and MusixMatch API's.
xytpai/detx-retinanet,xytpai/DetX-Retinanet,"['retinanet', 'pytorch', 'object-detection', 'deep-learning']",(Pytorch) Beyond Paper ! 35.9mAP@r50-700px-1x
luckydc/generalizing-reid,LuckyDC/generalizing-reid,"['domain-adaptation', 'person-reidentification', 'deep-learning']","Repository of the paper ""Generalizing Person Re-Identification by Camera-Aware Instance Learning and Cross-Domain Mixup"""
confusezius/eccv2020_diva_multifeature_dml,Confusezius/ECCV2020_DiVA_MultiFeature_DML,"['deep-metric-learning', 'metric-learning', 'deep-learning', 'image-retrieval', 'wandb', 'cub200-2011', 'cars196', 'stanford-online-products']","(ECCV 2020) This repo contains code for ""DiVA: Diverse Visual Feature Aggregation for Deep Metric Learning"" (https://arxiv.org/abs/2004.13458), which extends vanilla DML with auxiliary and self-supervised features."
weichengtseng/pytorch-pcgrad,WeiChengTseng/Pytorch-PCGrad,"['deep-reinforcement-learning', 'multi-task-learning', 'deep-learning', 'reinforcement-learning', 'multi-task-reinforcement-learning', 'rl', 'multi-task-rl', 'pytorch-pcgrad', 'pytorch', 'gradient-surgery', 'mnist', 'mulit-mnist', 'reimplementation', 'cifar-100']","Pytorch reimplementation for ""Gradient Surgery for Multi-Task Learning"""
stuartemiddleton/geoparsepy,stuartemiddleton/geoparsepy,"['natural-language-processing', 'artificial-intelligence', 'information-extraction', 'geoparse', 'location-extraction', 'toponym-resolution', 'nlp', 'openstreetmap', 'postgresql']","geoparsepy is a Python geoparsing library that will extract and disambiguate locations from text. It uses a local OpenStreetMap database which allows very high and unlimited geoparsing throughput, unlike approaches that use a third-party geocoding service (e.g.  Google Geocoding API). this repository holds Python examples to use the PyPI library."
raghavian/lungvae,raghavian/lungVAE,[],"This is the official Pytorch implementation of ""Lung Segmentation from Chest X-rays using Variational Data Imputation"", Raghavendra Selvan et al. 2020"
rowanz/turingadvice,rowanz/turingadvice,"['natural-language-understanding', 'natural-language-processing', 'natural-language-generation']",Evaluating Machines by their Real-World Language Use
hhaandroid/deep_learning_codesegment,hhaAndroid/deep_learning_codesegment,[],Code segment are often used in deep learning algorithms(pytorch/numpy)
mbchang/decentralized-rl,mbchang/decentralized-rl,"['mechanism-design', 'machine-learning', 'deep-reinforcement-learning', 'pytorch', 'artificial-intelligence', 'deep-learning']",Decentralized Reinforcment Learning: Global Decision-Making via Local Economic Transactions (ICML 2020)
vevenom/scannet-layout,vevenom/ScanNet-Layout,"['3d-vision', 'room-layout', 'computer-vision', 'deep-learning', 'projective-geometry', 'augmented-reality']",We introduce the ScanNet-Layout dataset for benchmarking general 3D room layout estimation from single view. 
yeyupiaoling/tensorflow-facerecognition,yeyupiaoling/Tensorflow-FaceRecognition,"['face-recognition', 'tensorflow', 'mtcnn', 'mobilefacenet']",基于MTCNN和MobileFaceNet实现的人脸识别，提供三种预测方式，满足各种需求 。
ostamand/tensorflow-tabnet,ostamand/tensorflow-tabnet,"['tensorflow2', 'tabnet', 'keras']",Improved TabNet for TensorFlow
junleen/expression-manipulator,junleen/Expression-manipulator,"['expression-manipulator', 'pytorch', 'eccv']",ECCV'20 paper 'Toward Fine-grained Facial Expression Manipulation' code
omni-us/research-ganwriting,omni-us/research-GANwriting,"['generative-adversarial-network', 'handwriting-synthesis']","Source code for ECCV20 ""GANwriting: Content-Conditioned Generation of Styled Handwritten Word Images"""
horenbergerb/friendsimulator,horenbergerb/FriendSimulator,"['ai', 'ml', 'gpt2', 'gpt2-chatbot', 'machine-learning', 'huggingface', 'huggingface-transformers', 'nlp', 'gpt-2']",Uses GPT2 to simulate your friends
xu-peng-tao/ssd-pruning-and-quantization,xu-peng-tao/SSD-Pruning-and-quantization,"['ssd', 'prune', 'pruning', 'quantization', 'quantification', 'compression', 'pytorch']",Pruning and quantization for SSD.  Model compression.
mzhang367/dcdh-pytorch,mzhang367/DCDH-PyTorch,"['deep-hashing', 'face-image-retrieval', 'pytorch', 'deep-learning']",Official codes of the paper: Deep Center-Based Dual-Constrained Hashing for Discriminative Face Image Retrieval (DCDH)
hamanlp/hama-py,hamanlp/hama-py,"['natural-language-processing', 'text-processing', 'korean', 'python']",🦛 파이썬 한글 처리 라이브러리. Python Korean Morphological Analyzer
jianningli/autoimplant,Jianningli/autoimplant,"['autoimplant', 'skull', 'cranioplasty', 'shape-analysis', 'deep-learning', 'cranial-implant-design', 'volumetric-shape-completion', 'skull-reconstruction', 'craniotomy']",A Baseline Approach for the AutoImplant Challenge
abhimishra91/insight,abhimishra91/insight,"['fastapi', 'streamlit', 'streamlit-webapp', 'natural-language-processing', 'nlp', 'machine-learning', 'transformer', 'huggingface-transformer', 'huggingface', 'docker', 'microservice', 'transformers-models']",Repository for Project Insight: NLP as a Service
abelriboulot/onnxt5,abelriboulot/onnxt5,"['nlp', 'nlp-machine-learning', 'onnx', 'onnxruntime', 'transformer', 'transformers', 'inference', 'summarization', 'translation', 'text-generation', 'text-classification', 'sentiment-analysis']","Summarization, translation, sentiment-analysis, text-generation and more at blazing speed using a T5 version implemented in ONNX."
kb-bank-ai/kb-albert-ko,KB-AI-Research/KB-ALBERT,"['albert', 'korean-nlp', 'pytorch', 'transformers', 'nlp', 'language-model', 'financial-nlp']",KB국민은행에서 제공하는 경제/금융 도메인에 특화된 한국어 ALBERT 모델 
bshall/vectorquantizedcpc,bshall/VectorQuantizedCPC,"['pytorch', 'voice-conversion', 'contrastive-predictive-coding', 'vq-vae', 'speech-synthesis', 'zerospeech', 'acoustic-features']",Vector-Quantized Contrastive Predictive Coding for Acoustic Unit Discovery and Voice Conversion
bubblyyi/coronary-artery-tracking-via-3d-cnn-classification,BubblyYi/Coronary-Artery-Tracking-via-3D-CNN-Classification,"['3d-cnn', '3d-classification', 'pytorch', 'coronary-artery', 'centerline-extraction', '3d-cnn-tracker', 'centerline', 'medical-image-processing', 'deep-learning', 'blood-vessel', 'vessel', 'centerline-detection']",The PyTorch re-implement of a 3D CNN Tracker to extract coronary artery centerlines with state-of-the-art (SOTA) performance. (paper: 'Coronary artery centerline extraction in cardiac CT angiography using a CNN-based orientation classiﬁer')
mangye16/ddag,mangye16/DDAG,[],Pytorch Code of DDAG for Visible-Infrared Person Re-Identification (ECCV20)
ioangatop/srvae,ioangatop/srVAE,"['vae', 'vae-pytorch', 'super-resolution', 'representation-learning', 'unsupervised-learning', 'unsupervised-machine-learning', 'pytorch', 'python3', 'generative-model', 'variational-autoencoder', 'cifar10', 'cifar-10']",VAE with RealNVP prior and Super-Resolution VAE in PyTorch. Code release for https://arxiv.org/abs/2006.05218.
hoya012/automatic-mixed-precision-tutorials-pytorch,hoya012/automatic-mixed-precision-tutorials-pytorch,[],"Automatic Mixed Precision Tutorials using pytorch. Based on PyTorch 1.6 Official Features,  implement classification codebase using custom dataset."
valencebond/fixmatch_pytorch,valencebond/FixMatch_pytorch,"['semi-supervised-learning', 'pytorch', 'fixmatch']","Unofficial PyTorch implementation of ""FixMatch: Simplifying Semi-Supervised Learning with Consistency and Confidence"""
kajyuuen/allennlp-book,kajyuuen/allennlp-book,"['allennlp', 'nlp']",本リポジトリは「AllenNLP入門」のソースコード置き場です。
tomasbrezina/neuralnetworkracing,TomasBrezina/NeuralNetworkRacing,"['neural-network', 'deep-learning']",Neural networks race
laura-wang/video_repres_sts,laura-wang/video_repres_sts,[],Pytorch implementation of  our T-PAMI 2021 paper: Self-supervised Video Representation Learning by Uncovering Motion and Appearance Statistics
scagin/neurallogicreasoning,Scagin/NeuralLogicReasoning,"['paper', 'neural-network', 'reasoning']","An Implementation of NLR: Neural Collaborative Reasoning, paper: https://arxiv.org/abs/2005.08129"
je-santos/poreflow-net,je-santos/PoreFlow-Net,"['cnn', '3d', 'keras-tensorflow', 'porous-media-flow', '3d-images', 'lbm', 'surrogate-models', 'convolutional-neural-networks', 'digital-rockphysics', 'digital-rocks', 'permeability', 'poreflow-net', 'convolutional-neural-network', 'single-phase', 'lattice-boltzmann', 'neural-networks', 'machine-learning', 'keras', 'tensorflow', 'gpu']",3D CNN to predict single-phase flow velocity fields
taufeeque9/humanfalldetection,taufeeque9/HumanFallDetection,"['video-processing', 'multiple-cameras', 'fall-detection', 'human-pose-estimation', 'long-short-term-memory', 'lstm', 'neural-networks', 'deep-learning', 'python3-fall-detector']","Real-time, Multi-person & Multi-camera Fall Detector in Python"
mianzhang/dialogue_gcn,mianzhang/dialogue_gcn,[],"Pytorch implementation to paper ""DialogueGCN: A Graph Convolutional Neural Network for Emotion Recognition in Conversation"". "
rizavelioglu/challenge-aido_rl-il,rizavelioglu/challenge-aido_RL-IL,"['reinforcement-learning', 'self-driving-cars', 'imitation-learning', 'pytorch', 'keras', 'tensorflow', 'supervised-learning', 'behavioral-cloning']",Reinforcement Learning + Imitation Learning based approach to AI Driving Olympics
ktho22/vctts,ktho22/vctts,[],"pytorch implementation of ""Emotional Voice Conversion using Multitask Learning with Text-to-Speech"", Accepted to ICASSP 2020 "
dessa-oss/atlas,dessa-oss/atlas,"['machine-learning', 'data-science', 'artificial-intelligence', 'python', 'deep-learning', 'gpu', 'ai', 'ml', 'model-management']","An Open Source, Self-Hosted Platform For Applied Deep Learning Development"
tonyngjichun/solar,tonyngjichun/SOLAR,"['image-retrieval', 'global-descriptors', 'local-descriptors', 'second-order', 'non-local-block', 'eccv-2020', 'eccv2020', 'eccv', 'computer-vision', 'deep-learning', 'pytorch', 'cnn']","PyTorch code for ""SOLAR: Second-Order Loss and Attention for Image Retrieval"". In ECCV 2020"
vita-group/autospeech,VITA-Group/AutoSpeech,"['automl', 'autospeech', 'neural-architecture-search', 'speaker-recognition', 'pytorch']","[InterSpeech 2020] ""AutoSpeech: Neural Architecture Search for Speaker Recognition"" by Shaojin Ding*, Tianlong Chen*, Xinyu Gong, Weiwei Zha, Zhangyang Wang "
richardkxu/distributed-pytorch,richardkxu/distributed-pytorch,"['distributed-training', 'deep-learning', 'computer-vision', 'imagenet', 'mixed-precision-training', 'pytorch', 'nvidia-apex', 'tensorboard', 'horovod']","Distributed, mixed-precision training with PyTorch"
cattaneod/maskflownet-pytorch,cattaneod/MaskFlownet-Pytorch,"['deep-learning', 'computer-vision', 'convolutional-neural-networks', 'optical-flow', 'kitti-dataset', 'dnn', 'cnn', 'pytorch', 'maskflownet']",Pytorch implementation of MaskFlownet
rishikksh20/resunet,rishikksh20/ResUnet,"['resunet', 'unet', 'image-processing', 'image-segmentation', 'unet-pytorch', 'medical-image-processing', 'satellite-imagery', 'deep-residual-network', 'segmentation', 'image-to-image-translation']",Pytorch implementation of ResUnet and ResUnet ++
ahmdtaha/constrained_attention_filter,ahmdtaha/constrained_attention_filter,"['tensorflow', 'deep-neural-networks', 'attention-visualization', 'python-3', 'python3', 'imagenet', 'convolutional-neural-networks', 'weakly-supervised-localization', 'autonomous-vehicles', 'autonomous-driving', 'classification', 'retrieval', 'feature-embedding']",(ECCV2020) Tensorflow implementation of A Generic Visualization Approach for Convolutional Neural Networks
mattdl/clsurvey,Mattdl/CLsurvey,"['continual-learning', 'tpami', 'defy-forgetting', 'classification-tasks', 'deep-learning', 'neural-networks', 'framework', 'hyperparameter-tuning', 'inaturalist', 'tinyimagenet', 'icarl', 'synaptic-intelligence', 'gradient-episodic-memory', 'packnet', 'hat', 'memory-aware-synapses', 'elastic-weight-consolidation', 'incremental-learning', 'incremental-moment-matching']","Continual Hyperparameter Selection Framework. Compares 11 state-of-the-art Lifelong Learning methods and  4 baselines. Official Codebase of ""A continual learning survey: Defying forgetting in classification tasks."" in  IEEE TPAMI."
ocatak/malware_api_class,ocatak/malware_api_class,"['dataset', 'sandbox', 'cuckoo-sandbox', 'malware', 'machine-learning', 'malware-families', 'malware-dataset', 'adware', 'study', 'classification', 'deep-learning', 'lstm-neural-networks']","Malware dataset for security researchers, data scientists. Public malware dataset generated by Cuckoo Sandbox based on Windows OS API calls analysis for cyber security researchers"
wenxuecui/csnet-pytorch,WenxueCui/CSNet-Pytorch,[],"Pytorch code for paper ""Deep Networks for Compressed Image Sensing"" and ""Image Compressed Sensing Using Convolutional Neural Network"""
juliawolleb/descargan,JuliaWolleb/DeScarGAN,[],Official Pytorch implementation of the paper DeScarGAN
milvlg/mt-captioning,MILVLG/mt-captioning,"['image-captioning', 'pytorch', 'multimodal-transformer']",A PyTorch implementation of the paper Multimodal Transformer with Multiview Visual Representation for Image Captioning
mchughes288/emotion_detection_cpc,McHughes288/emotion_detection_cpc,"['emotion', 'emotion-recognition', 'emotion-detection', 'machine-learning', 'pytorch', 'self-supervised-learning', 'speech']",Emotion detection in audio utilising self-supervised representations trained with Contrastive Predictive Coding (CPC).
incheon-cho/dynamic_model_pruning_with_feedback,INCHEON-CHO/Dynamic_Model_Pruning_with_Feedback,"['pruning', 'pytorch-implementation', 'prune', 'pruning-structures']",Implement of Dynamic Model Pruning with Feedback with pytorch
choiw-public/crack-segmentation,choiw-public/Crack-segmentation,"['tensorflow', 'segmentation', 'crack-segmentation', 'crack-detection', 'python']",This repo contains customized deep learning models for segmenting cracks.
is2ai/chest-x-ray-module,IS2AI/Chest-X-ray-module,"['deep-learning', 'densenet121', 'medical-imaging', 'machine-learning', 'computer-vision', 'pytorch', 'catalyst']",
yang-han/p-reg,yang-han/P-reg,"['graph-neural-networks', 'gcn', 'gnn', 'regularization', 'aaai2021']",Rethinking Graph Regularization for Graph Neural Networks (AAAI2021)
kevinzakka/torchnca,kevinzakka/torchnca,"['pytorch', 'nca-python', 'neighbourhood-components-analysis', 'python', 'python3']",A PyTorch implementation of Neighbourhood Components Analysis.
neuml/codequestion,neuml/codequestion,"['python', 'machine-learning', 'search', 'nlp', 'txtai']",💭 Semantic search for developers
minyoungg/pix2latent,minyoungg/pix2latent,"['pytorch', 'cma-es', 'inverting-images', 'nevergrad', 'biggan', 'stylegan2', 'gan']",Code for: Transforming and Projecting Images into Class-conditional Generative Networks
samuelbroughton/stargan-voice-conversion-2,SamuelBroughton/StarGAN-Voice-Conversion-2,"['pytorch', 'voice-conversion', 'stargan-vc2', 'stagan-vc', 'speech', 'speech-synthesis']",A pytorch implementation of StarGAN-VC2
mhso/bombsolver,mhso/BombSolver,"['machine-learning', 'python', 'neural-network', 'image-recognition']",Defusing bombs in Keep Talking and Nobody Explodes
oke-aditya/image_similarity,oke-aditya/image_similarity,"['image-similarity', 'pytorch', 'image-retrieval', 'autoencoder', 'unsupervised-learning', 'auto-encoders']",PyTorch Blog Post On Image Similarity Search
zhenghao977/fcos-pytorch-37.2ap,zhenghao977/FCOS-PyTorch-37.2AP,"['anchor-free', 'fcos', 'object-detection']",A pure torch implement of FCOS 37.2AP
akwasigroch/pretext-invariant-representations,akwasigroch/Pretext-Invariant-Representations,"['machine-learning', 'deep-learning', 'self-supervised-learning', 'self-supervised', 'computer-vision']",Implementation of the paper Self-Supervised Learning of Pretext-Invariant Representations 
mihir135/yolov5,mihir135/yolov5,[],YOLO v5 pytorch implementation. This repository contains code for this tutorial.
xming521/ctai,xming521/CTAI,"['pytorch', 'flask', 'vue']",基于深度学习的肿瘤辅助诊断系统，以图像分割为核心，利用人工智能完成肿瘤区域的识别勾画并提供肿瘤区域的特征来辅助医生进行诊断。有完整的模型构建、后端架设和前端访问功能。
jingliang-duan/distributional-soft-actor-critic,Jingliang-Duan/Distributional-Soft-Actor-Critic,"['reinforcement-learning', 'pytorch']",
zhou13/holicity,zhou13/holicity,"['cad-models', 'panorama-image', 'dataset', 'deep-learning', 'deep-neural-networks', '3d-reconstruction', 'streetview']",HoliCity: A City-Scale Data Platform for Learning Holistic 3D Structures
yanbeic/val,yanbeic/VAL,"['image-search', 'vision-and-language', 'attention', 'cvpr2020', 'tensorflow', 'retrieval']",Tensorflow Implementation on Paper [CVPR2020]Image Search with Text Feedback by Visiolinguistic Attention Learning
unicredit/charade,andreaferretti/charade,"['nlp', 'nlp-apis', 'python']","A server for multilanguage, composable NLP API in Python"
lipairui/textgo,Lipairui/textgo,"['text-preprocessing', 'nlp', 'text-classification', 'text-search', 'text-similarity', 'text-representation', 'bert']","Text preprocessing, representation, similarity calculation, text search and classification. Let's go and play with text!"
qinnzou/deepcrack,qinnzou/DeepCrack,"['deepcrack', 'pavement-images', 'crack-detection', 'cnn', 'deep-learning', 'pavement-crack-detection', 'convolutional-neural-network']",DeepCrack: Learning Hierarchical Convolutional Features for Crack Detection
developers-cosmos/covid-race-game,developers-cosmos/COVID-Race-Game,"['artificial-intelligence', 'pygame', 'deep-learning', 'covid-19', 'python-game-development', 'game', 'covid-race-game', '2d-game']",A Game is developed with pygame and AI where the user can control the actions through his hands (gestures)
philipperemy/keras-sde-net,philipperemy/keras-sde-net,"['sde-net', 'keras', 'keras-tensorflow', 'tensorflow', 'neural-networks']",Keras implementation of SDE-Net (ICML 2020).
tianweidadada/smp2020---weibo-sentiment-classification,Tianweidadada/SMP2020---Weibo-sentiment-classification,"['nlp', 'smp']",SMP 2020年微博情感分类评测任务 第六名解决方案
mahmoodlab/toad,mahmoodlab/TOAD,"['histology', 'pathology', 'wsi-images', 'histopathology', 'cancer-imaging-research', 'cancer-research', 'cancer-detection', 'mahmoodlab', 'deep', 'deep-learning', 'bioimage-analysis', 'bioimage-informatics', 'toad', 'unknown-primary', 'cup']",AI-based pathology predicts origins for cancers of unknown primary - Nature
debeshjha/resunetplusplus-with-crf-and-tta,DebeshJha/ResUNetPlusPlus-with-CRF-and-TTA,"['semantic-segmentation', 'convolutional-neural-networks', 'computer-vision', 'image-segmentation', 'unet-image-segmentation', 'deep-learning', 'unet', 'resunet', 'resunet-architecture', 'medical-imaging', 'pytorch', 'pytorch-implementation', 'segmentation', 'tensorflow', 'image-segmantation']","ResUNet++, CRF, and TTA  for segmentation of medical images  (IEEE JBIHI)"
umitkaanusta/mint-youtube,umitkaanusta/mint-youtube,"['youtube-videos', 'youtube', 'youtube-api', 'video', 'nlp', 'text-classification', 'text-analysis', 'comment', 'self-hosted', 'channel']",Comment analytics tool for YouTube videos
gabrielspadon/regenn,gabrielspadon/ReGENN,"['deep-learning', 'neural-network', 'evolution', 'series-forecasting', 'paper', 'gse', 'artificial-intelligence']",Recurrent Graph Evolution Neural Network (ReGENN) using Graph Soft Evolution (GSE)
weizhepei/casrel,weizhepei/CasRel,"['knowledge-graph', 'relation-extraction', 'relational-triple-extraction', 'information-extraction', 'keras', 'bert']",A Novel Cascade Binary Tagging Framework for Relational Triple Extraction. Accepted by ACL 2020. 
cripac-dig/texting,CRIPAC-DIG/TextING,"['text-classification', 'graph-neural-networks', 'natural-language-processing', 'inductive-learning']","[ACL 2020] Tensorflow implementation for ""Every Document Owns Its Structure: Inductive Text Classification via Graph Neural Networks"""
badbadbadboy/dbnet-lite.pytorch,BADBADBADBOY/DBnet-lite.pytorch,"['dbnet', 'textdetection', 'ocr', 'lightweight', 'pytorch', 'python3']",A pytorch re-implementation of Real-time Scene Text Detection with Differentiable Binarization
mbrossar/denoise-imu-gyro,mbrossar/denoise-imu-gyro,"['imu', 'attitude-estimation', 'deep-learning']",Convolutional Neural Networks for Denoising Gyroscopes of Low-Cost IMUs
clovaai/dmfont,clovaai/dmfont,"['font-generation', 'pytorch', 'eccv2020', 'dmfont', 'few-shot']",Official PyTorch implementation of DM-Font (ECCV 2020)
lorenmt/shape-adaptor,lorenmt/shape-adaptor,"['neural-shape-learning', 'pytorch', 'automl', 'nas', 'pooling']","The implementation of ""Shape Adaptor: A Learnable Resizing Module"" [ECCV 2020]."
progamergov/neural-dream,ProGamerGov/neural-dream,"['deepdream', 'pytorch', 'visualization', 'computer-vision', 'resnet', 'googlenet', 'inception', 'vgg', 'nin', 'pytorch-deepdream', 'deep-dream', 'neural-dream', 'tiling']",PyTorch implementation of DeepDream algorithm
rdroste/unisal,rdroste/unisal,"['machine-learning', 'deep-learning', 'saliency-detection', 'saliency-prediction', 'visual-saliency', 'visual-salience', 'video-saliency-prediction', 'video-saliency', 'image-saliency', 'eccv2020', 'eccv-2020', 'eccv', 'saliency', 'saliency-map', 'saliency-model', 'salicon', 'dhf1k', 'ucf-sports']",Unified Image and Video Saliency Modeling (ECCV 2020)
puzzlelib/puzzlelib,puzzlelib/PuzzleLib,"['deep-learning', 'data-science', 'neural-network', 'machine-learning', 'library', 'python', 'deep-neural-networks', 'gpu', 'tensor', 'numpy', 'ml']",Deep Learning framework with NVIDIA & AMD support
seongmin-kye/meta-sr,seongmin-kye/meta-SR,"['speaker-recognition', 'short-utterances', 'speaker-verification', 'meta-learning']","Pytorch implementation of Meta-Learning for Short Utterance Speaker Recognition with Imbalance Length Pairs (Interspeech, 2020)"
crs4/atlantanet,crs4/AtlantaNet,"['3d-reconstruction', 'computer-vision', 'indoor-scenes', 'panorama-image']",Pytorch implementation of the ECCV 2020 paper: AtlantaNet: Inferring the 3D Indoor Layout from a Single 360 Image beyond the Manhattan World Assumption
amontgomerie/question_generator,AMontgomerie/question_generator,"['nlp', 'natural-language-processing', 'natural-language-generation', 'nlg', 'transformers', 't5', 'bert', 'question-generation']",An NLP system for generating reading comprehension questions
haoheliu/subband-music-separation,haoheliu/Subband-Music-Separation,[],Pytorch: Channel-wise subband (CWS) input for better voice and accompaniment separation
mmphego/face_mask_detection_openvino,mmphego/face_mask_detection_openvino,"['face-mask-detection', 'openvino', 'intel-openvino-toolkit', 'deep-learning', 'intel', 'edge', 'inference', 'blogpost', 'edgeai', 'covid-19', 'opencv']",Detect faces and determine whether people are wearing mask.
kaiyuyue/mgd,KaiyuYue/mgd,"['matching-guided-distillation', 'mgd', 'model-distillation', 'knowledge-distillation', 'pytorch', 'detectron2', 'kd', 'detection', 'classification', 'moco-v2', 'unsupervised-learning', 'deep-learning']",Matching Guided Distillation (ECCV 2020)
eugeneyan/recsys-nlp-graph,eugeneyan/recsys-nlp-graph,"['recommender-system', 'pytorch', 'nlp', 'graph', 'matrix-factorization']","🛒 Simple recommender with matrix factorization, graph, and NLP. Beating the regular collaborative filtering baseline."
amazon-research/meta-q-learning,amazon-science/meta-q-learning,"['deep-learning', 'meta-learning', 'reinforcement-learning', 'multi-task-learning']","Code for the paper ""Meta-Q-Learning""( ICLR 2020)"
ai4ce/spare3d,ai4ce/SPARE3D,"['line-drawings', 'spatial-reasoning', 'deep-learning', 'pythonocc', 'reasoning', 'line-drawing']",[CVPR2020] A Dataset for SPAtial REasoning on Three-View Line Drawings
chenchongthu/jnskr,chenchongthu/JNSKR,"['recommender-system', 'neural-network', 'efficient-algorithm', 'non-sampling']",This is our implementation of JNSKR: Jointly Non-Sampling Learning for Knowledge Graph Enhanced Recommendation (SIGIR 2020)
selfishgene/neuron_as_deep_net,SelfishGene/neuron_as_deep_net,"['deep-learning', 'convolutional-neural-networks', 'biological-modeling', 'neuroscience-inspired-ai', 'neuroscience-data']","Code behind the work ""Single Cortical Neurons as Deep Artificial Neural Networks"", published in Neuron 2021"
renovamen/text-classification,Renovamen/Text-Classification,"['text-classification', 'han', 'nlp', 'hierarchical-attention-networks', 'fasttext', 'bilstm-attention', 'textcnn', 'lstm', 'cnn', 'document-classification', 'transformer']","PyTorch implementation of some text classification models (HAN, fastText, BiLSTM-Attention, TextCNN, Transformer) | 文本分类"
googlecloudplatform/dataflow-contact-center-speech-analysis,GoogleCloudPlatform/dataflow-contact-center-speech-analysis,"['speech-to-text', 'natural-language-processing', 'google-cloud', 'dataflow', 'cloud-functions', 'data-loss-prevention']","Speech Analysis Framework, a collection of components and code from Google Cloud that you can use to transcribe audio files to create analytics."
pd3f/dehyphen,pd3f/dehyphen,"['python', 'pdf', 'dehyphenation', 'hyphens', 'nlp', 'german', 'flair-embeddings', 'flair', 'hyphen', 'pd3f']","📜 Dehyphenation of broken text (mainly German), i.e., extracted from a PDF"
nithin-holla/metalifelonglanguage,Nithin-Holla/MetaLifelongLanguage,"['meta-learning', 'lifelong-learning', 'continual-learning', 'text-classification', 'relation-extraction', 'natural-language-processing', 'experience-replay']","Repository containing code for the paper ""Meta-Learning with Sparse Experience Replay for Lifelong Language Learning""."
icbcbicc/focuslitenn,icbcbicc/FocusLiteNN,"['image-processing', 'digital-pathology', 'deep-learning', 'deep-neural-networks', 'convolutional-neural-network', 'medical-image-processing', 'image-quality-assessment', 'network-distillation', 'pathological-images', 'pytorch']","Official PyTorch and MATLAB implementations of our MICCAI 2020 paper ""FocusLiteNN: High Efficiency Focus Quality Assessment for Digital Pathology"""
venkanna37/label-pixels,venkanna37/Label-Pixels,"['semantic-segmentation', 'deep-learning', 'fully-convolutional-networks', 'keras', 'tensorflow', 'road-extraction', 'pixel-labeling', 'artificial-intelligence', 'msc-project', 'label-pixels', 'unet', 'segnet', 'resunet', 'satellite-image-segmentation', 'gdal', 'machine-learning', 'remote-sensing', 'satellite-imagery', 'segmentation']","Label-Pixels is the tool for semantic segmentation of remote sensing images using Fully Convolutional Networks. Initially, it is designed for extracting the road network from remote sensing imagery and now, it can be used to extract different features from remote sensing imagery."
dorukkarinca/keras-buoy,dorukkarinca/keras-buoy,"['keras', 'checkpointing', 'autosave', 'data-science', 'machine-learning', 'colab-notebook', 'colaboratory', 'colab', 'colab-automation']",Keras wrapper that autosaves what ModelCheckpoint cannot.
deng-mit/reactorch,DENG-MIT/reactorch,"['combustion', 'pytorch', 'chemical-kinetics', 'fluid-dynamics', 'scientific-machine-learning', 'kinetics']",A Differentiable Reacting Flow Simulation Package in PyTorch
yoonseok312/watch-out,yoonseok312/watch-out,"['ios', 'tensorflow']",Watch Out: Apple Watch App to detect dangerous sounds for people with hearing disablities.
knight825/models-pytorch,Knight825/models-pytorch,"['pytorch', 'self-attention', 'senet', 'cbam', 'cbam-resnet', 'se-resnet', 'attention-mechanism', 'cnn-model', 'crossstagepartial', 'csp-resnet', 'csp-densenet', 'exactfusionmodel']",This is a torchvision style CNN models collection based on pytorch.
taufikxu/triple-gan,taufikxu/Triple-GAN,[],Pytorch for Triple-GAN
asjidkalam/scrawl,Asjidkalam/Scrawl,"['ocr', 'machine-learning', 'keras', 'deep-learning', 'lstm']",Reverse OCR using DeepLearning
denisyarats/pytorch_sac,denisyarats/pytorch_sac,"['reinforcement-learning', 'dm-control', 'soft-actor-critic', 'pytorch', 'deep-reinforcement-learning', 'actor-critic', 'mujoco', 'gym', 'deep-learning', 'sac', 'continuous-control', 'd4pg']",PyTorch implementation of Soft Actor-Critic (SAC)
zeiss-microscopy/bsconv,zeiss-microscopy/BSConv,"['cvpr2020', 'pytorch', 'depthwise-separable-convolutions', 'resnet', 'mobilenet', 'image-classification', 'deep-learning', 'efficient-neural-networks', 'zeiss', 'cifar10', 'cifar100', 'blueprint-separable-convolutions']",Reference implementation for Blueprint Separable Convolutions (CVPR 2020)
amirassov/kaggle-global-wheat-detection,amirassov/kaggle-global-wheat-detection,"['kaggle', 'deep-learning', 'computer-vision', 'object-detection', 'mmdetection']",9th Place Solution of Kaggle Global Wheat Detection
affjljoo3581/canrevan,affjljoo3581/canrevan,"['naver', 'news', 'news-articles', 'nlp', 'naver-news', 'dataset', 'datasets', 'natural-language-processing', 'python']",대량의 네이버 뉴스 기사를 수집하는 라이브러리입니다.
andrewzlee/neuralblock,andrewzlee/NeuralBlock,"['video-youtube-sponsorships', 'neural-network', 'sponsorships']",Neural Network that detects in-video YouTube sponsorships.
patrick-kidger/fasterneuraldiffeq,patrick-kidger/FasterNeuralDiffEq,"['deep-neural-networks', 'deep-learning', 'pytorch', 'dynamical-systems', 'differential-equations', 'ordinary-differential-equations', 'controlled-differential-equations', 'neural-differential-equations', 'numerical-methods', 'numerical-analysis', 'machine-learning']","Code for ""'Hey, that's not an ODE:' Faster ODE Adjoints via Seminorms"" (ICML 2021)"
soongja/basic-image-eda,Soongja/basic-image-eda,"['eda', 'image-dataset', 'visualization', 'cnn', 'image-classification', 'image-segmentation', 'computer-vision', 'dataset', 'deep-learning']",A simple image dataset EDA tool (CLI / Code)
sjenni/temporal-ssl,sjenni/temporal-ssl,"['self-supervised-learning', 'action-recognition', 'tensorflow', 'ucf101', 'hmdb51', 'unsupervised-learning', 'c3d', 'transfer-learning']","Video Representation Learning by Recognizing Temporal Transformations. In ECCV, 2020."
dheeraj7596/conwea,dheeraj7596/ConWea,"['weakly-supervised-learning', 'contextualized-representation', 'contextualized-programming', 'text-classification', 'natural-language-processing', 'datamining', 'acl2020', 'acl']","Code for the paper ""Contextualized Weak Supervision for Text Classification"""
zonasw/dbnet,zonasw/DBNet,[],"This is a tensorflow2.x implementation of ""Real-time Scene Text Detection with Differentiable Binarization"""
narasimha1997/wavenet-stt,Narasimha1997/wavenet-stt,"['cplusplus-11', 'pybind', 'python3', 'python', 'wavenet', 'tensorflow', 'tensorflow2', 'tensorflowlite', 'speech-recognition']",An end-to-end speech recognition system with Wavenet. Built using C++ and python.
levindabhi/sievenet,levindabhi/SieveNet,"['pytorch', 'pytorch-implementation', 'vton', 'vitual-tryon', 'sievenet', '2d-virtual-try-on', 'image-based-tryon']",This is the unofficial implementation of SieveNet: A Unified Framework for Robust Image-Based Virtual Try-On
mlforhealth/s2sd,MLforHealth/S2SD,"['deep-metric-learning', 'metric-learning', 'deep-learning', 'pytorch', 'cub200-2011', 'cars196', 'stanford-online-products', 'image-retrieval', 'zero-shot-learning']",(ICML 2021) Implementation for S2SD - Simultaneous Similarity-based Self-Distillation for Deep Metric Learning. Paper Link: https://arxiv.org/abs/2009.08348
knowledgedefinednetworking/routenet-challenge,BNN-UPC/GNNetworkingChallenge,"['gnn', 'networking', 'ml', 'machine-learning', 'graph-neural-networks', 'communication-networks', 'computer-networks']",RouteNet baseline for the Graph Neural Networking Challenge (https://bnn.upc.edu/challenge/)
clutchsoftware/simurg,clutchsoftware/Simurg,"['nlp', 'python', 'pyqt5', 'bash', 'acikhack2']","Simurg - Yazım Yardımcınız. Simurg Python ve PyQt5 işbirliği ile ClutchSoftware tarafından inşa edilmiş, Türkçe Doğal Dil İşleme alanında kaynak ve araç oluşturma amacı ile tasarlanmıştır."
francesco-p/gpwho,francesco-p/gpwho,"['gpu-monitoring', 'gpu', 'logging', 'deep-learning']","gpwho? GPU usage logger, with Telegram bot integration."
alvinwan/nbdt-pytorch-image-models,alvinwan/nbdt-pytorch-image-models,"['pytorch', 'neural-backed-decision-trees', 'imagenet', 'efficientnet']",Neural-Backed Decision Tree sample integration with pytorch-image-models
keremzaman/semantic-sh,KeremZaman/semantic-sh,"['simhash', 'word-vectors', 'fasttext', 'bert', 'locality-sensitive-hashing', 'transformer', 'text-similarity', 'text-clustering', 'text-search']",semantic-sh is a SimHash implementation to detect and group similar texts by taking power of word vectors and transformer-based language models (BERT).
domyounglee/transformer-summarization,domyounglee/Transformer-Summarization,"['summarization', 'tensorflow', 'abstractive-summarization', 'abstractive-text-summarization', 'transformer', 'transformer-models']",An optimized Transformer based abstractive summarization model with Tensorflow
sunweikes/da-rnn,SunWeiKeS/DA-RNN,[],根据Seanny123复现论文A Dual-Stage Attention-Based Recurrent Neural Network for Time Series Prediction的pytorch代码进行相关修改，适应pytorch1.2版本
nrsyed/pytorch-yolov3,nrsyed/pytorch-yolov3,"['yolov3', 'object-detection', 'pytorch', 'yolo', 'python']",A (mostly from scratch) PyTorch implementation of YOLOv3 for real-time webcam object detection
leputa/mann-meta-learning,Leputa/MANN-meta-learning,"['tensorflow', 'meta-learning', 'few-shot-learning', 'neural-turing-machines', 'memory-augmented-neural-networks']",A tensorflow implement of Memory-Augmented Neural Network
spijkervet/simclr,Spijkervet/SimCLR,"['simclr', 'pytorch', 'contrastive-learning', 'unsupervised-learning', 'representation-learning']",PyTorch implementation of SimCLR: A Simple Framework for Contrastive Learning of Visual Representations by T. Chen et al.
sjmoran/deeplpf,sjmoran/DeepLPF,"['cvpr2020', 'raw2rgb', 'deep-learning', 'computational-photography', 'computer-vision', 'adobe-upe', 'paper', 'rgb', 'cvpr']","Code for CVPR 2020 paper ""Deep Local Parametric Filters for Image Enhancement"""
nvlabs/dream,NVlabs/DREAM,"['pose-estimation', 'camera-calibration', 'deep-learning', 'pytorch', 'ros']",DREAM: Deep Robot-to-Camera Extrinsics for Articulated Manipulators (ICRA 2020)
lucidrains/axial-attention,lucidrains/axial-attention,"['artificial-intelligence', 'deep-learning', 'attention-mechanism', 'pytorch']",Implementation of Axial attention - attending to multi-dimensional data efficiently
smoke-trees/voice-synthesis,smoke-trees/Voice-synthesis,"['voice-synthesis', 'voice-cloning', 'sv2tts', 'pytorch-implementation', 'tensorflow', 'keras', 'speech-to-text']","This repository is an implementation of Transfer Learning from Speaker Verification to Multispeaker Text-To-Speech Synthesis (SV2TTS) with a vocoder that works in real-time. SV2TTS is a three-stage deep learning framework that allows to create a numerical representation of a voice from a few seconds of audio, and to use it to condition a text-to-speech model trained to generalize to new voices."
think989/real-time-stock-market-prediction-using-ensemble-dl-and-rainbow-dqn,THINK989/Real-Time-Stock-Market-Prediction-using-Ensemble-DL-and-Rainbow-DQN,"['real-time-prediction', 'rainbow-dqn', 'stock-price-forecasting', 'lstm', 'gru', 'ensemble', 'keras', 'trade-bot', 'tensorflow']",
dumitrescustefan/romanian-transformers,dumitrescustefan/Romanian-Transformers,"['romanian-bert', 'bert', 'huggingface-transformers', 'nlp', 'pytorch', 'language-model', 'romanian-language']",This repo is the home of Romanian Transformers. 
khrylx/dlow,Khrylx/DLow,"['eccv2020', 'motion-prediction', 'motion-forecasting', 'pose-prediction', 'pose-forecasting', 'generative-models', 'diversity', 'diversifying-latent-flows', 'vae', 'pytorch', 'deep-learning']","[ECCV 2020] Official PyTorch Implementation of ""DLow: Diversifying Latent Flows for Diverse Human Motion Prediction"". ECCV 2020."
mac-automl/xnas,MAC-AutoML/XNAS,"['pytorch', 'automl', 'neural-architecture-search']","XNAS: An effective, modular, and flexible Neural Architecture Search (NAS) framework."
itsuki8914/voice-morphing-relgan,itsuki8914/Voice-morphing-RelGAN,[],A implementation voice morphing using relgan with tensorflow
peteryux/pcdarts-tf2,peteryuX/pcdarts-tf2,"['neural-architecture-search', 'darts', 'pc-darts', 'pcdarts', 'tensorflow', 'tf2', 'tensorflow2', 'cifar10', 'cifar-10', 'iclr2020']","PC-DARTS (PC-DARTS: Partial Channel Connections for Memory-Efficient Differentiable Architecture Search, published in ICLR 2020) implemented in Tensorflow 2.0+. This is an unofficial implementation."
matheushent/covid-19-detector,matheushent/covid-19-detector,"['tensorflow', 'deep-learning', 'covid-19', 'grad-cam', 'occlusion-sensitivity', 'keras', 'python3', 'vgg16', 'vgg19', 'resnet-50', 'resnet-152', 'machine-learning-algorithms', 'transfer-learning', 'cuda', 'gpu-tensorflow', 'convolutional-neural-networks', 'efficientnet']",Repository containing scripts to train and test a neural network whose goal is to detect presence of COVID-19
nju-jet/sr_framework,NJU-Jet/SR_Framework,"['model-zoo', 'latticenet', 'imdn', 'srfbn', 'idn', 'carn', 'edsr', 'drrn', 'lapsrn', 'drcn', 'vdsr', 'pytorch', 'super-resolution']",A generic framework which implements some famouts super-resolution models
cyrilzakka/stylegan2-tpu,cyrilzakka/stylegan2-tpu,"['deep-learning', 'tensorflow']",StyleGAN2 but rewritten for TPUs.
theaiguyscode/yolov4-deepsort,theAIGuysCode/yolov4-deepsort,"['yolov4', 'yolov4-deepsort', 'deep-sort', 'object-tracker', 'tensorflow', 'object-tracking', 'object-detection']","Object tracking implemented with YOLOv4, DeepSort, and TensorFlow."
theaiguyscode/yolov3_deepsort,theAIGuysCode/yolov3_deepsort,"['yolov3', 'object-tracker', 'deep-sort', 'tensorflow']","Object tracking implemented with YOLOv3, Deep Sort and Tensorflow."
theaiguyscode/object-detection-api,theAIGuysCode/Object-Detection-API,"['yolov3', 'object-detection', 'tensorflow', 'yolo', 'inference', 'deep-learning']","Yolov3 Object Detection implemented as APIs, using TensorFlow and Flask"
developers-cosmos/meme-generator,developers-cosmos/Meme-Generator,"['cnn-classification', 'image-augmentation', 'chef-cookbook', 'flask-server', 'gcp', 'image-classification', 'gcp-auto-ml', 'balanced-data', 'meme-generator', 'artificial-intelligence', 'neural-networks', 'memegen', 'cnn', 'memes', 'projects', 'automated']",MemeGen is a web application where the user gives an image as input and our tool generates a meme at one click for the user.
stefanopini/simple-higherhrnet,stefanopini/simple-HigherHRNet,"['pytorch', 'hrnet', 'higher-hrnet', 'human-pose-estimation', 'keypoint-detection', 'coco-dataset', 'mscoco-keypoint', 'deep-learning']","Multi-person Human Pose Estimation with HigherHRNet in Pytorch, with TensorRT support"
affjljoo3581/gpt2,affjljoo3581/GPT2,"['pytorch', 'nlp', 'language-model', 'gpt2', 'natural-language-processing', 'natural-language-generation', 'transformer']",PyTorch Implementation of OpenAI GPT-2
antonior92/automatic-ecg-diagnosis,antonior92/automatic-ecg-diagnosis,"['deep-learning', 'convolutional-neural-networks', 'ecg', 'ecg-signal', 'ecg-classification', 'atrial-fibrillation', 'atrial-fibrillation-detection']","Scripts and modules for training and testing neural network for ECG automatic classification. Companion code to the paper  ""Automatic diagnosis of the 12-lead ECG using a deep neural network"". "
claying/otk,claying/OTK,[],A Pytorch implementation of the optimal transport kernel embedding
cripac-dig/grace,CRIPAC-DIG/GRACE,"['contrastive-learning', 'graph-representation-learning', 'deep-learning', 'machine-learning']","[GRL+ @ ICML 2020] PyTorch implementation for ""Deep Graph Contrastive Representation Learning"" (https://arxiv.org/abs/2006.04131v2)"
pkshatechnology-research/tdmelodic,PKSHATechnology-Research/tdmelodic,"['japanese', 'accent', 'nlp', 'speech-synthesis']",A Japanese accent dictionary generator
tsujuifu/pytorch_sscr,tsujuifu/pytorch_sscr,"['emnlp2020', 'pytorch', 'computer-vision', 'image-editing']",A PyTorch implementation of SSCR
hejingwenhejingwen/csrnet,hejingwenhejingwen/CSRNet,"['photo-retouching', 'deep-learning', 'image-enhancement', 'image-processing', 'color-enhancement', 'csrnet']",(ECCV 2020) Conditional Sequential Modulation for Efficient Global Image Retouching
quasarlight/pytorch_face_recognition-,QuasarLight/Pytorch_Face_Recognition-,[],"Pytorch implementation of mainstream face recognition algorithms(ArcFace, CosFace)."
renmin1991/dyamic_graph_representation,RenMin1991/Dyamic_Graph_Representation,"['pytorch', 'feature-graphs', 'feature-extraction', 'biometrics', 'iris-recognition', 'face-recognition', 'aaai2020']",Official Dynamic Graph Representation PyTorch implement for iris/face recognition
lukewys/dcase_2020_t6,lukewys/dcase_2020_T6,"['audio-captioning', 'deep-learning']",2nd place solution for 2020 DCASE challenge task 6 audio captioning. http://dcase.community/challenge2020/task-automatic-audio-captioning-results#wuyusong2020_t6
bm777/object_detection,bm777/object_detection,"['object-detection', 'python', 'tensorflow', 'opencv', 'detection', 'absl', 'yolov3', 'transfer-learning', 'darknet', 'graph-mode']",Implementatoin of object detection using Tensorflow 2.1.0 | this can be use in a car for object detection
deepraj1729/tchatbot,deepraj1729/TChatBot,"['machine-learning', 'nlp', 'nltk', 'python3', 'tensorflow', 'pypi', 'deep-learning', 'artificial-intelligence', 'neural-networks', 'speech-recognition', 'numpy', 'virtual-environment', 'pip', 'conda', 'sklearn', 'git', 'github', 'framework', 'chatbot-framework']","A ChatBot framework to create customizable all purpose Chatbots using NLP, Tensorflow, Speech Recognition "
liangheming/auto_assignv2,liangheming/auto_assignv2,[],An unofficial pytorch implementation of <<AutoAssign: Differentiable Label Assignment for Dense Object Detection>>
hccho2/transformer_dateconversion,hccho2/Transformer_DateConversion,[],"pytorch.nn.Transformer, torchtext, Tensorflow 2, Keras"
dkurt/openvino_practice,dkurt/openvino_practice,"['openvino', 'intel', 'computer-vision', 'practice', 'opencv', 'deep-learning']","Practice git, Travis CI and Intel OpenVINO"
ktho22/vctts,ktho22/vctts,[],"pytorch implementation of ""Emotional Voice Conversion using Multitask Learning with Text-to-Speech"", Accepted to ICASSP 2020 "
dessa-oss/atlas,dessa-oss/atlas,"['machine-learning', 'data-science', 'artificial-intelligence', 'python', 'deep-learning', 'gpu', 'ai', 'ml', 'model-management']","An Open Source, Self-Hosted Platform For Applied Deep Learning Development"
tonyngjichun/solar,tonyngjichun/SOLAR,"['image-retrieval', 'global-descriptors', 'local-descriptors', 'second-order', 'non-local-block', 'eccv-2020', 'eccv2020', 'eccv', 'computer-vision', 'deep-learning', 'pytorch', 'cnn']","PyTorch code for ""SOLAR: Second-Order Loss and Attention for Image Retrieval"". In ECCV 2020"
vita-group/autospeech,VITA-Group/AutoSpeech,"['automl', 'autospeech', 'neural-architecture-search', 'speaker-recognition', 'pytorch']","[InterSpeech 2020] ""AutoSpeech: Neural Architecture Search for Speaker Recognition"" by Shaojin Ding*, Tianlong Chen*, Xinyu Gong, Weiwei Zha, Zhangyang Wang "
richardkxu/distributed-pytorch,richardkxu/distributed-pytorch,"['distributed-training', 'deep-learning', 'computer-vision', 'imagenet', 'mixed-precision-training', 'pytorch', 'nvidia-apex', 'tensorboard', 'horovod']","Distributed, mixed-precision training with PyTorch"
cattaneod/maskflownet-pytorch,cattaneod/MaskFlownet-Pytorch,"['deep-learning', 'computer-vision', 'convolutional-neural-networks', 'optical-flow', 'kitti-dataset', 'dnn', 'cnn', 'pytorch', 'maskflownet']",Pytorch implementation of MaskFlownet
rishikksh20/resunet,rishikksh20/ResUnet,"['resunet', 'unet', 'image-processing', 'image-segmentation', 'unet-pytorch', 'medical-image-processing', 'satellite-imagery', 'deep-residual-network', 'segmentation', 'image-to-image-translation']",Pytorch implementation of ResUnet and ResUnet ++
ahmdtaha/constrained_attention_filter,ahmdtaha/constrained_attention_filter,"['tensorflow', 'deep-neural-networks', 'attention-visualization', 'python-3', 'python3', 'imagenet', 'convolutional-neural-networks', 'weakly-supervised-localization', 'autonomous-vehicles', 'autonomous-driving', 'classification', 'retrieval', 'feature-embedding']",(ECCV2020) Tensorflow implementation of A Generic Visualization Approach for Convolutional Neural Networks
mattdl/clsurvey,Mattdl/CLsurvey,"['continual-learning', 'tpami', 'defy-forgetting', 'classification-tasks', 'deep-learning', 'neural-networks', 'framework', 'hyperparameter-tuning', 'inaturalist', 'tinyimagenet', 'icarl', 'synaptic-intelligence', 'gradient-episodic-memory', 'packnet', 'hat', 'memory-aware-synapses', 'elastic-weight-consolidation', 'incremental-learning', 'incremental-moment-matching']","Continual Hyperparameter Selection Framework. Compares 11 state-of-the-art Lifelong Learning methods and  4 baselines. Official Codebase of ""A continual learning survey: Defying forgetting in classification tasks."" in  IEEE TPAMI."
ocatak/malware_api_class,ocatak/malware_api_class,"['dataset', 'sandbox', 'cuckoo-sandbox', 'malware', 'machine-learning', 'malware-families', 'malware-dataset', 'adware', 'study', 'classification', 'deep-learning', 'lstm-neural-networks']","Malware dataset for security researchers, data scientists. Public malware dataset generated by Cuckoo Sandbox based on Windows OS API calls analysis for cyber security researchers"
wenxuecui/csnet-pytorch,WenxueCui/CSNet-Pytorch,[],"Pytorch code for paper ""Deep Networks for Compressed Image Sensing"" and ""Image Compressed Sensing Using Convolutional Neural Network"""
juliawolleb/descargan,JuliaWolleb/DeScarGAN,[],Official Pytorch implementation of the paper DeScarGAN
milvlg/mt-captioning,MILVLG/mt-captioning,"['image-captioning', 'pytorch', 'multimodal-transformer']",A PyTorch implementation of the paper Multimodal Transformer with Multiview Visual Representation for Image Captioning
mchughes288/emotion_detection_cpc,McHughes288/emotion_detection_cpc,"['emotion', 'emotion-recognition', 'emotion-detection', 'machine-learning', 'pytorch', 'self-supervised-learning', 'speech']",Emotion detection in audio utilising self-supervised representations trained with Contrastive Predictive Coding (CPC).
incheon-cho/dynamic_model_pruning_with_feedback,INCHEON-CHO/Dynamic_Model_Pruning_with_Feedback,"['pruning', 'pytorch-implementation', 'prune', 'pruning-structures']",Implement of Dynamic Model Pruning with Feedback with pytorch
choiw-public/crack-segmentation,choiw-public/Crack-segmentation,"['tensorflow', 'segmentation', 'crack-segmentation', 'crack-detection', 'python']",This repo contains customized deep learning models for segmenting cracks.
is2ai/chest-x-ray-module,IS2AI/Chest-X-ray-module,"['deep-learning', 'densenet121', 'medical-imaging', 'machine-learning', 'computer-vision', 'pytorch', 'catalyst']",
yang-han/p-reg,yang-han/P-reg,"['graph-neural-networks', 'gcn', 'gnn', 'regularization', 'aaai2021']",Rethinking Graph Regularization for Graph Neural Networks (AAAI2021)
kevinzakka/torchnca,kevinzakka/torchnca,"['pytorch', 'nca-python', 'neighbourhood-components-analysis', 'python', 'python3']",A PyTorch implementation of Neighbourhood Components Analysis.
neuml/codequestion,neuml/codequestion,"['python', 'machine-learning', 'search', 'nlp', 'txtai']",💭 Semantic search for developers
minyoungg/pix2latent,minyoungg/pix2latent,"['pytorch', 'cma-es', 'inverting-images', 'nevergrad', 'biggan', 'stylegan2', 'gan']",Code for: Transforming and Projecting Images into Class-conditional Generative Networks
samuelbroughton/stargan-voice-conversion-2,SamuelBroughton/StarGAN-Voice-Conversion-2,"['pytorch', 'voice-conversion', 'stargan-vc2', 'stagan-vc', 'speech', 'speech-synthesis']",A pytorch implementation of StarGAN-VC2
mhso/bombsolver,mhso/BombSolver,"['machine-learning', 'python', 'neural-network', 'image-recognition']",Defusing bombs in Keep Talking and Nobody Explodes
oke-aditya/image_similarity,oke-aditya/image_similarity,"['image-similarity', 'pytorch', 'image-retrieval', 'autoencoder', 'unsupervised-learning', 'auto-encoders']",PyTorch Blog Post On Image Similarity Search
zhenghao977/fcos-pytorch-37.2ap,zhenghao977/FCOS-PyTorch-37.2AP,"['anchor-free', 'fcos', 'object-detection']",A pure torch implement of FCOS 37.2AP
akwasigroch/pretext-invariant-representations,akwasigroch/Pretext-Invariant-Representations,"['machine-learning', 'deep-learning', 'self-supervised-learning', 'self-supervised', 'computer-vision']",Implementation of the paper Self-Supervised Learning of Pretext-Invariant Representations 
mihir135/yolov5,mihir135/yolov5,[],YOLO v5 pytorch implementation. This repository contains code for this tutorial.
xming521/ctai,xming521/CTAI,"['pytorch', 'flask', 'vue']",基于深度学习的肿瘤辅助诊断系统，以图像分割为核心，利用人工智能完成肿瘤区域的识别勾画并提供肿瘤区域的特征来辅助医生进行诊断。有完整的模型构建、后端架设和前端访问功能。
jingliang-duan/distributional-soft-actor-critic,Jingliang-Duan/Distributional-Soft-Actor-Critic,"['reinforcement-learning', 'pytorch']",
zhou13/holicity,zhou13/holicity,"['cad-models', 'panorama-image', 'dataset', 'deep-learning', 'deep-neural-networks', '3d-reconstruction', 'streetview']",HoliCity: A City-Scale Data Platform for Learning Holistic 3D Structures
yanbeic/val,yanbeic/VAL,"['image-search', 'vision-and-language', 'attention', 'cvpr2020', 'tensorflow', 'retrieval']",Tensorflow Implementation on Paper [CVPR2020]Image Search with Text Feedback by Visiolinguistic Attention Learning
unicredit/charade,andreaferretti/charade,"['nlp', 'nlp-apis', 'python']","A server for multilanguage, composable NLP API in Python"
lipairui/textgo,Lipairui/textgo,"['text-preprocessing', 'nlp', 'text-classification', 'text-search', 'text-similarity', 'text-representation', 'bert']","Text preprocessing, representation, similarity calculation, text search and classification. Let's go and play with text!"
qinnzou/deepcrack,qinnzou/DeepCrack,"['deepcrack', 'pavement-images', 'crack-detection', 'cnn', 'deep-learning', 'pavement-crack-detection', 'convolutional-neural-network']",DeepCrack: Learning Hierarchical Convolutional Features for Crack Detection
developers-cosmos/covid-race-game,developers-cosmos/COVID-Race-Game,"['artificial-intelligence', 'pygame', 'deep-learning', 'covid-19', 'python-game-development', 'game', 'covid-race-game', '2d-game']",A Game is developed with pygame and AI where the user can control the actions through his hands (gestures)
philipperemy/keras-sde-net,philipperemy/keras-sde-net,"['sde-net', 'keras', 'keras-tensorflow', 'tensorflow', 'neural-networks']",Keras implementation of SDE-Net (ICML 2020).
tianweidadada/smp2020---weibo-sentiment-classification,Tianweidadada/SMP2020---Weibo-sentiment-classification,"['nlp', 'smp']",SMP 2020年微博情感分类评测任务 第六名解决方案
mahmoodlab/toad,mahmoodlab/TOAD,"['histology', 'pathology', 'wsi-images', 'histopathology', 'cancer-imaging-research', 'cancer-research', 'cancer-detection', 'mahmoodlab', 'deep', 'deep-learning', 'bioimage-analysis', 'bioimage-informatics', 'toad', 'unknown-primary', 'cup']",AI-based pathology predicts origins for cancers of unknown primary - Nature
debeshjha/resunetplusplus-with-crf-and-tta,DebeshJha/ResUNetPlusPlus-with-CRF-and-TTA,"['semantic-segmentation', 'convolutional-neural-networks', 'computer-vision', 'image-segmentation', 'unet-image-segmentation', 'deep-learning', 'unet', 'resunet', 'resunet-architecture', 'medical-imaging', 'pytorch', 'pytorch-implementation', 'segmentation', 'tensorflow', 'image-segmantation']","ResUNet++, CRF, and TTA  for segmentation of medical images  (IEEE JBIHI)"
umitkaanusta/mint-youtube,umitkaanusta/mint-youtube,"['youtube-videos', 'youtube', 'youtube-api', 'video', 'nlp', 'text-classification', 'text-analysis', 'comment', 'self-hosted', 'channel']",Comment analytics tool for YouTube videos
gabrielspadon/regenn,gabrielspadon/ReGENN,"['deep-learning', 'neural-network', 'evolution', 'series-forecasting', 'paper', 'gse', 'artificial-intelligence']",Recurrent Graph Evolution Neural Network (ReGENN) using Graph Soft Evolution (GSE)
weizhepei/casrel,weizhepei/CasRel,"['knowledge-graph', 'relation-extraction', 'relational-triple-extraction', 'information-extraction', 'keras', 'bert']",A Novel Cascade Binary Tagging Framework for Relational Triple Extraction. Accepted by ACL 2020. 
cripac-dig/texting,CRIPAC-DIG/TextING,"['text-classification', 'graph-neural-networks', 'natural-language-processing', 'inductive-learning']","[ACL 2020] Tensorflow implementation for ""Every Document Owns Its Structure: Inductive Text Classification via Graph Neural Networks"""
badbadbadboy/dbnet-lite.pytorch,BADBADBADBOY/DBnet-lite.pytorch,"['dbnet', 'textdetection', 'ocr', 'lightweight', 'pytorch', 'python3']",A pytorch re-implementation of Real-time Scene Text Detection with Differentiable Binarization
mbrossar/denoise-imu-gyro,mbrossar/denoise-imu-gyro,"['imu', 'attitude-estimation', 'deep-learning']",Convolutional Neural Networks for Denoising Gyroscopes of Low-Cost IMUs
clovaai/dmfont,clovaai/dmfont,"['font-generation', 'pytorch', 'eccv2020', 'dmfont', 'few-shot']",Official PyTorch implementation of DM-Font (ECCV 2020)
lorenmt/shape-adaptor,lorenmt/shape-adaptor,"['neural-shape-learning', 'pytorch', 'automl', 'nas', 'pooling']","The implementation of ""Shape Adaptor: A Learnable Resizing Module"" [ECCV 2020]."
progamergov/neural-dream,ProGamerGov/neural-dream,"['deepdream', 'pytorch', 'visualization', 'computer-vision', 'resnet', 'googlenet', 'inception', 'vgg', 'nin', 'pytorch-deepdream', 'deep-dream', 'neural-dream', 'tiling']",PyTorch implementation of DeepDream algorithm
rdroste/unisal,rdroste/unisal,"['machine-learning', 'deep-learning', 'saliency-detection', 'saliency-prediction', 'visual-saliency', 'visual-salience', 'video-saliency-prediction', 'video-saliency', 'image-saliency', 'eccv2020', 'eccv-2020', 'eccv', 'saliency', 'saliency-map', 'saliency-model', 'salicon', 'dhf1k', 'ucf-sports']",Unified Image and Video Saliency Modeling (ECCV 2020)
puzzlelib/puzzlelib,puzzlelib/PuzzleLib,"['deep-learning', 'data-science', 'neural-network', 'machine-learning', 'library', 'python', 'deep-neural-networks', 'gpu', 'tensor', 'numpy', 'ml']",Deep Learning framework with NVIDIA & AMD support
seongmin-kye/meta-sr,seongmin-kye/meta-SR,"['speaker-recognition', 'short-utterances', 'speaker-verification', 'meta-learning']","Pytorch implementation of Meta-Learning for Short Utterance Speaker Recognition with Imbalance Length Pairs (Interspeech, 2020)"
crs4/atlantanet,crs4/AtlantaNet,"['3d-reconstruction', 'computer-vision', 'indoor-scenes', 'panorama-image']",Pytorch implementation of the ECCV 2020 paper: AtlantaNet: Inferring the 3D Indoor Layout from a Single 360 Image beyond the Manhattan World Assumption
amontgomerie/question_generator,AMontgomerie/question_generator,"['nlp', 'natural-language-processing', 'natural-language-generation', 'nlg', 'transformers', 't5', 'bert', 'question-generation']",An NLP system for generating reading comprehension questions
haoheliu/subband-music-separation,haoheliu/Subband-Music-Separation,[],Pytorch: Channel-wise subband (CWS) input for better voice and accompaniment separation
mmphego/face_mask_detection_openvino,mmphego/face_mask_detection_openvino,"['face-mask-detection', 'openvino', 'intel-openvino-toolkit', 'deep-learning', 'intel', 'edge', 'inference', 'blogpost', 'edgeai', 'covid-19', 'opencv']",Detect faces and determine whether people are wearing mask.
kaiyuyue/mgd,KaiyuYue/mgd,"['matching-guided-distillation', 'mgd', 'model-distillation', 'knowledge-distillation', 'pytorch', 'detectron2', 'kd', 'detection', 'classification', 'moco-v2', 'unsupervised-learning', 'deep-learning']",Matching Guided Distillation (ECCV 2020)
eugeneyan/recsys-nlp-graph,eugeneyan/recsys-nlp-graph,"['recommender-system', 'pytorch', 'nlp', 'graph', 'matrix-factorization']","🛒 Simple recommender with matrix factorization, graph, and NLP. Beating the regular collaborative filtering baseline."
amazon-research/meta-q-learning,amazon-science/meta-q-learning,"['deep-learning', 'meta-learning', 'reinforcement-learning', 'multi-task-learning']","Code for the paper ""Meta-Q-Learning""( ICLR 2020)"
ai4ce/spare3d,ai4ce/SPARE3D,"['line-drawings', 'spatial-reasoning', 'deep-learning', 'pythonocc', 'reasoning', 'line-drawing']",[CVPR2020] A Dataset for SPAtial REasoning on Three-View Line Drawings
chenchongthu/jnskr,chenchongthu/JNSKR,"['recommender-system', 'neural-network', 'efficient-algorithm', 'non-sampling']",This is our implementation of JNSKR: Jointly Non-Sampling Learning for Knowledge Graph Enhanced Recommendation (SIGIR 2020)
selfishgene/neuron_as_deep_net,SelfishGene/neuron_as_deep_net,"['deep-learning', 'convolutional-neural-networks', 'biological-modeling', 'neuroscience-inspired-ai', 'neuroscience-data']","Code behind the work ""Single Cortical Neurons as Deep Artificial Neural Networks"", published in Neuron 2021"
renovamen/text-classification,Renovamen/Text-Classification,"['text-classification', 'han', 'nlp', 'hierarchical-attention-networks', 'fasttext', 'bilstm-attention', 'textcnn', 'lstm', 'cnn', 'document-classification', 'transformer']","PyTorch implementation of some text classification models (HAN, fastText, BiLSTM-Attention, TextCNN, Transformer) | 文本分类"
googlecloudplatform/dataflow-contact-center-speech-analysis,GoogleCloudPlatform/dataflow-contact-center-speech-analysis,"['speech-to-text', 'natural-language-processing', 'google-cloud', 'dataflow', 'cloud-functions', 'data-loss-prevention']","Speech Analysis Framework, a collection of components and code from Google Cloud that you can use to transcribe audio files to create analytics."
pd3f/dehyphen,pd3f/dehyphen,"['python', 'pdf', 'dehyphenation', 'hyphens', 'nlp', 'german', 'flair-embeddings', 'flair', 'hyphen', 'pd3f']","📜 Dehyphenation of broken text (mainly German), i.e., extracted from a PDF"
nithin-holla/metalifelonglanguage,Nithin-Holla/MetaLifelongLanguage,"['meta-learning', 'lifelong-learning', 'continual-learning', 'text-classification', 'relation-extraction', 'natural-language-processing', 'experience-replay']","Repository containing code for the paper ""Meta-Learning with Sparse Experience Replay for Lifelong Language Learning""."
icbcbicc/focuslitenn,icbcbicc/FocusLiteNN,"['image-processing', 'digital-pathology', 'deep-learning', 'deep-neural-networks', 'convolutional-neural-network', 'medical-image-processing', 'image-quality-assessment', 'network-distillation', 'pathological-images', 'pytorch']","Official PyTorch and MATLAB implementations of our MICCAI 2020 paper ""FocusLiteNN: High Efficiency Focus Quality Assessment for Digital Pathology"""
venkanna37/label-pixels,venkanna37/Label-Pixels,"['semantic-segmentation', 'deep-learning', 'fully-convolutional-networks', 'keras', 'tensorflow', 'road-extraction', 'pixel-labeling', 'artificial-intelligence', 'msc-project', 'label-pixels', 'unet', 'segnet', 'resunet', 'satellite-image-segmentation', 'gdal', 'machine-learning', 'remote-sensing', 'satellite-imagery', 'segmentation']","Label-Pixels is the tool for semantic segmentation of remote sensing images using Fully Convolutional Networks. Initially, it is designed for extracting the road network from remote sensing imagery and now, it can be used to extract different features from remote sensing imagery."
dorukkarinca/keras-buoy,dorukkarinca/keras-buoy,"['keras', 'checkpointing', 'autosave', 'data-science', 'machine-learning', 'colab-notebook', 'colaboratory', 'colab', 'colab-automation']",Keras wrapper that autosaves what ModelCheckpoint cannot.
deng-mit/reactorch,DENG-MIT/reactorch,"['combustion', 'pytorch', 'chemical-kinetics', 'fluid-dynamics', 'scientific-machine-learning', 'kinetics']",A Differentiable Reacting Flow Simulation Package in PyTorch
yoonseok312/watch-out,yoonseok312/watch-out,"['ios', 'tensorflow']",Watch Out: Apple Watch App to detect dangerous sounds for people with hearing disablities.
knight825/models-pytorch,Knight825/models-pytorch,"['pytorch', 'self-attention', 'senet', 'cbam', 'cbam-resnet', 'se-resnet', 'attention-mechanism', 'cnn-model', 'crossstagepartial', 'csp-resnet', 'csp-densenet', 'exactfusionmodel']",This is a torchvision style CNN models collection based on pytorch.
taufikxu/triple-gan,taufikxu/Triple-GAN,[],Pytorch for Triple-GAN
asjidkalam/scrawl,Asjidkalam/Scrawl,"['ocr', 'machine-learning', 'keras', 'deep-learning', 'lstm']",Reverse OCR using DeepLearning
denisyarats/pytorch_sac,denisyarats/pytorch_sac,"['reinforcement-learning', 'dm-control', 'soft-actor-critic', 'pytorch', 'deep-reinforcement-learning', 'actor-critic', 'mujoco', 'gym', 'deep-learning', 'sac', 'continuous-control', 'd4pg']",PyTorch implementation of Soft Actor-Critic (SAC)
zeiss-microscopy/bsconv,zeiss-microscopy/BSConv,"['cvpr2020', 'pytorch', 'depthwise-separable-convolutions', 'resnet', 'mobilenet', 'image-classification', 'deep-learning', 'efficient-neural-networks', 'zeiss', 'cifar10', 'cifar100', 'blueprint-separable-convolutions']",Reference implementation for Blueprint Separable Convolutions (CVPR 2020)
amirassov/kaggle-global-wheat-detection,amirassov/kaggle-global-wheat-detection,"['kaggle', 'deep-learning', 'computer-vision', 'object-detection', 'mmdetection']",9th Place Solution of Kaggle Global Wheat Detection
affjljoo3581/canrevan,affjljoo3581/canrevan,"['naver', 'news', 'news-articles', 'nlp', 'naver-news', 'dataset', 'datasets', 'natural-language-processing', 'python']",대량의 네이버 뉴스 기사를 수집하는 라이브러리입니다.
andrewzlee/neuralblock,andrewzlee/NeuralBlock,"['video-youtube-sponsorships', 'neural-network', 'sponsorships']",Neural Network that detects in-video YouTube sponsorships.
patrick-kidger/fasterneuraldiffeq,patrick-kidger/FasterNeuralDiffEq,"['deep-neural-networks', 'deep-learning', 'pytorch', 'dynamical-systems', 'differential-equations', 'ordinary-differential-equations', 'controlled-differential-equations', 'neural-differential-equations', 'numerical-methods', 'numerical-analysis', 'machine-learning']","Code for ""'Hey, that's not an ODE:' Faster ODE Adjoints via Seminorms"" (ICML 2021)"
soongja/basic-image-eda,Soongja/basic-image-eda,"['eda', 'image-dataset', 'visualization', 'cnn', 'image-classification', 'image-segmentation', 'computer-vision', 'dataset', 'deep-learning']",A simple image dataset EDA tool (CLI / Code)
sjenni/temporal-ssl,sjenni/temporal-ssl,"['self-supervised-learning', 'action-recognition', 'tensorflow', 'ucf101', 'hmdb51', 'unsupervised-learning', 'c3d', 'transfer-learning']","Video Representation Learning by Recognizing Temporal Transformations. In ECCV, 2020."
dheeraj7596/conwea,dheeraj7596/ConWea,"['weakly-supervised-learning', 'contextualized-representation', 'contextualized-programming', 'text-classification', 'natural-language-processing', 'datamining', 'acl2020', 'acl']","Code for the paper ""Contextualized Weak Supervision for Text Classification"""
zonasw/dbnet,zonasw/DBNet,[],"This is a tensorflow2.x implementation of ""Real-time Scene Text Detection with Differentiable Binarization"""
narasimha1997/wavenet-stt,Narasimha1997/wavenet-stt,"['cplusplus-11', 'pybind', 'python3', 'python', 'wavenet', 'tensorflow', 'tensorflow2', 'tensorflowlite', 'speech-recognition']",An end-to-end speech recognition system with Wavenet. Built using C++ and python.
levindabhi/sievenet,levindabhi/SieveNet,"['pytorch', 'pytorch-implementation', 'vton', 'vitual-tryon', 'sievenet', '2d-virtual-try-on', 'image-based-tryon']",This is the unofficial implementation of SieveNet: A Unified Framework for Robust Image-Based Virtual Try-On
mlforhealth/s2sd,MLforHealth/S2SD,"['deep-metric-learning', 'metric-learning', 'deep-learning', 'pytorch', 'cub200-2011', 'cars196', 'stanford-online-products', 'image-retrieval', 'zero-shot-learning']",(ICML 2021) Implementation for S2SD - Simultaneous Similarity-based Self-Distillation for Deep Metric Learning. Paper Link: https://arxiv.org/abs/2009.08348
knowledgedefinednetworking/routenet-challenge,BNN-UPC/GNNetworkingChallenge,"['gnn', 'networking', 'ml', 'machine-learning', 'graph-neural-networks', 'communication-networks', 'computer-networks']",RouteNet baseline for the Graph Neural Networking Challenge (https://bnn.upc.edu/challenge/)
clutchsoftware/simurg,clutchsoftware/Simurg,"['nlp', 'python', 'pyqt5', 'bash', 'acikhack2']","Simurg - Yazım Yardımcınız. Simurg Python ve PyQt5 işbirliği ile ClutchSoftware tarafından inşa edilmiş, Türkçe Doğal Dil İşleme alanında kaynak ve araç oluşturma amacı ile tasarlanmıştır."
francesco-p/gpwho,francesco-p/gpwho,"['gpu-monitoring', 'gpu', 'logging', 'deep-learning']","gpwho? GPU usage logger, with Telegram bot integration."
alvinwan/nbdt-pytorch-image-models,alvinwan/nbdt-pytorch-image-models,"['pytorch', 'neural-backed-decision-trees', 'imagenet', 'efficientnet']",Neural-Backed Decision Tree sample integration with pytorch-image-models
keremzaman/semantic-sh,KeremZaman/semantic-sh,"['simhash', 'word-vectors', 'fasttext', 'bert', 'locality-sensitive-hashing', 'transformer', 'text-similarity', 'text-clustering', 'text-search']",semantic-sh is a SimHash implementation to detect and group similar texts by taking power of word vectors and transformer-based language models (BERT).
domyounglee/transformer-summarization,domyounglee/Transformer-Summarization,"['summarization', 'tensorflow', 'abstractive-summarization', 'abstractive-text-summarization', 'transformer', 'transformer-models']",An optimized Transformer based abstractive summarization model with Tensorflow
sunweikes/da-rnn,SunWeiKeS/DA-RNN,[],根据Seanny123复现论文A Dual-Stage Attention-Based Recurrent Neural Network for Time Series Prediction的pytorch代码进行相关修改，适应pytorch1.2版本
nrsyed/pytorch-yolov3,nrsyed/pytorch-yolov3,"['yolov3', 'object-detection', 'pytorch', 'yolo', 'python']",A (mostly from scratch) PyTorch implementation of YOLOv3 for real-time webcam object detection
leputa/mann-meta-learning,Leputa/MANN-meta-learning,"['tensorflow', 'meta-learning', 'few-shot-learning', 'neural-turing-machines', 'memory-augmented-neural-networks']",A tensorflow implement of Memory-Augmented Neural Network
spijkervet/simclr,Spijkervet/SimCLR,"['simclr', 'pytorch', 'contrastive-learning', 'unsupervised-learning', 'representation-learning']",PyTorch implementation of SimCLR: A Simple Framework for Contrastive Learning of Visual Representations by T. Chen et al.
sjmoran/deeplpf,sjmoran/DeepLPF,"['cvpr2020', 'raw2rgb', 'deep-learning', 'computational-photography', 'computer-vision', 'adobe-upe', 'paper', 'rgb', 'cvpr']","Code for CVPR 2020 paper ""Deep Local Parametric Filters for Image Enhancement"""
nvlabs/dream,NVlabs/DREAM,"['pose-estimation', 'camera-calibration', 'deep-learning', 'pytorch', 'ros']",DREAM: Deep Robot-to-Camera Extrinsics for Articulated Manipulators (ICRA 2020)
lucidrains/axial-attention,lucidrains/axial-attention,"['artificial-intelligence', 'deep-learning', 'attention-mechanism', 'pytorch']",Implementation of Axial attention - attending to multi-dimensional data efficiently
smoke-trees/voice-synthesis,smoke-trees/Voice-synthesis,"['voice-synthesis', 'voice-cloning', 'sv2tts', 'pytorch-implementation', 'tensorflow', 'keras', 'speech-to-text']","This repository is an implementation of Transfer Learning from Speaker Verification to Multispeaker Text-To-Speech Synthesis (SV2TTS) with a vocoder that works in real-time. SV2TTS is a three-stage deep learning framework that allows to create a numerical representation of a voice from a few seconds of audio, and to use it to condition a text-to-speech model trained to generalize to new voices."
think989/real-time-stock-market-prediction-using-ensemble-dl-and-rainbow-dqn,THINK989/Real-Time-Stock-Market-Prediction-using-Ensemble-DL-and-Rainbow-DQN,"['real-time-prediction', 'rainbow-dqn', 'stock-price-forecasting', 'lstm', 'gru', 'ensemble', 'keras', 'trade-bot', 'tensorflow']",
dumitrescustefan/romanian-transformers,dumitrescustefan/Romanian-Transformers,"['romanian-bert', 'bert', 'huggingface-transformers', 'nlp', 'pytorch', 'language-model', 'romanian-language']",This repo is the home of Romanian Transformers. 
khrylx/dlow,Khrylx/DLow,"['eccv2020', 'motion-prediction', 'motion-forecasting', 'pose-prediction', 'pose-forecasting', 'generative-models', 'diversity', 'diversifying-latent-flows', 'vae', 'pytorch', 'deep-learning']","[ECCV 2020] Official PyTorch Implementation of ""DLow: Diversifying Latent Flows for Diverse Human Motion Prediction"". ECCV 2020."
mac-automl/xnas,MAC-AutoML/XNAS,"['pytorch', 'automl', 'neural-architecture-search']","XNAS: An effective, modular, and flexible Neural Architecture Search (NAS) framework."
itsuki8914/voice-morphing-relgan,itsuki8914/Voice-morphing-RelGAN,[],A implementation voice morphing using relgan with tensorflow
peteryux/pcdarts-tf2,peteryuX/pcdarts-tf2,"['neural-architecture-search', 'darts', 'pc-darts', 'pcdarts', 'tensorflow', 'tf2', 'tensorflow2', 'cifar10', 'cifar-10', 'iclr2020']","PC-DARTS (PC-DARTS: Partial Channel Connections for Memory-Efficient Differentiable Architecture Search, published in ICLR 2020) implemented in Tensorflow 2.0+. This is an unofficial implementation."
matheushent/covid-19-detector,matheushent/covid-19-detector,"['tensorflow', 'deep-learning', 'covid-19', 'grad-cam', 'occlusion-sensitivity', 'keras', 'python3', 'vgg16', 'vgg19', 'resnet-50', 'resnet-152', 'machine-learning-algorithms', 'transfer-learning', 'cuda', 'gpu-tensorflow', 'convolutional-neural-networks', 'efficientnet']",Repository containing scripts to train and test a neural network whose goal is to detect presence of COVID-19
nju-jet/sr_framework,NJU-Jet/SR_Framework,"['model-zoo', 'latticenet', 'imdn', 'srfbn', 'idn', 'carn', 'edsr', 'drrn', 'lapsrn', 'drcn', 'vdsr', 'pytorch', 'super-resolution']",A generic framework which implements some famouts super-resolution models
cyrilzakka/stylegan2-tpu,cyrilzakka/stylegan2-tpu,"['deep-learning', 'tensorflow']",StyleGAN2 but rewritten for TPUs.
theaiguyscode/yolov4-deepsort,theAIGuysCode/yolov4-deepsort,"['yolov4', 'yolov4-deepsort', 'deep-sort', 'object-tracker', 'tensorflow', 'object-tracking', 'object-detection']","Object tracking implemented with YOLOv4, DeepSort, and TensorFlow."
theaiguyscode/yolov3_deepsort,theAIGuysCode/yolov3_deepsort,"['yolov3', 'object-tracker', 'deep-sort', 'tensorflow']","Object tracking implemented with YOLOv3, Deep Sort and Tensorflow."
theaiguyscode/object-detection-api,theAIGuysCode/Object-Detection-API,"['yolov3', 'object-detection', 'tensorflow', 'yolo', 'inference', 'deep-learning']","Yolov3 Object Detection implemented as APIs, using TensorFlow and Flask"
developers-cosmos/meme-generator,developers-cosmos/Meme-Generator,"['cnn-classification', 'image-augmentation', 'chef-cookbook', 'flask-server', 'gcp', 'image-classification', 'gcp-auto-ml', 'balanced-data', 'meme-generator', 'artificial-intelligence', 'neural-networks', 'memegen', 'cnn', 'memes', 'projects', 'automated']",MemeGen is a web application where the user gives an image as input and our tool generates a meme at one click for the user.
stefanopini/simple-higherhrnet,stefanopini/simple-HigherHRNet,"['pytorch', 'hrnet', 'higher-hrnet', 'human-pose-estimation', 'keypoint-detection', 'coco-dataset', 'mscoco-keypoint', 'deep-learning']","Multi-person Human Pose Estimation with HigherHRNet in Pytorch, with TensorRT support"
affjljoo3581/gpt2,affjljoo3581/GPT2,"['pytorch', 'nlp', 'language-model', 'gpt2', 'natural-language-processing', 'natural-language-generation', 'transformer']",PyTorch Implementation of OpenAI GPT-2
antonior92/automatic-ecg-diagnosis,antonior92/automatic-ecg-diagnosis,"['deep-learning', 'convolutional-neural-networks', 'ecg', 'ecg-signal', 'ecg-classification', 'atrial-fibrillation', 'atrial-fibrillation-detection']","Scripts and modules for training and testing neural network for ECG automatic classification. Companion code to the paper  ""Automatic diagnosis of the 12-lead ECG using a deep neural network"". "
claying/otk,claying/OTK,[],A Pytorch implementation of the optimal transport kernel embedding
cripac-dig/grace,CRIPAC-DIG/GRACE,"['contrastive-learning', 'graph-representation-learning', 'deep-learning', 'machine-learning']","[GRL+ @ ICML 2020] PyTorch implementation for ""Deep Graph Contrastive Representation Learning"" (https://arxiv.org/abs/2006.04131v2)"
pkshatechnology-research/tdmelodic,PKSHATechnology-Research/tdmelodic,"['japanese', 'accent', 'nlp', 'speech-synthesis']",A Japanese accent dictionary generator
tsujuifu/pytorch_sscr,tsujuifu/pytorch_sscr,"['emnlp2020', 'pytorch', 'computer-vision', 'image-editing']",A PyTorch implementation of SSCR
hejingwenhejingwen/csrnet,hejingwenhejingwen/CSRNet,"['photo-retouching', 'deep-learning', 'image-enhancement', 'image-processing', 'color-enhancement', 'csrnet']",(ECCV 2020) Conditional Sequential Modulation for Efficient Global Image Retouching
quasarlight/pytorch_face_recognition-,QuasarLight/Pytorch_Face_Recognition-,[],"Pytorch implementation of mainstream face recognition algorithms(ArcFace, CosFace)."
renmin1991/dyamic_graph_representation,RenMin1991/Dyamic_Graph_Representation,"['pytorch', 'feature-graphs', 'feature-extraction', 'biometrics', 'iris-recognition', 'face-recognition', 'aaai2020']",Official Dynamic Graph Representation PyTorch implement for iris/face recognition
lukewys/dcase_2020_t6,lukewys/dcase_2020_T6,"['audio-captioning', 'deep-learning']",2nd place solution for 2020 DCASE challenge task 6 audio captioning. http://dcase.community/challenge2020/task-automatic-audio-captioning-results#wuyusong2020_t6
bm777/object_detection,bm777/object_detection,"['object-detection', 'python', 'tensorflow', 'opencv', 'detection', 'absl', 'yolov3', 'transfer-learning', 'darknet', 'graph-mode']",Implementatoin of object detection using Tensorflow 2.1.0 | this can be use in a car for object detection
deepraj1729/tchatbot,deepraj1729/TChatBot,"['machine-learning', 'nlp', 'nltk', 'python3', 'tensorflow', 'pypi', 'deep-learning', 'artificial-intelligence', 'neural-networks', 'speech-recognition', 'numpy', 'virtual-environment', 'pip', 'conda', 'sklearn', 'git', 'github', 'framework', 'chatbot-framework']","A ChatBot framework to create customizable all purpose Chatbots using NLP, Tensorflow, Speech Recognition "
liangheming/auto_assignv2,liangheming/auto_assignv2,[],An unofficial pytorch implementation of <<AutoAssign: Differentiable Label Assignment for Dense Object Detection>>
hccho2/transformer_dateconversion,hccho2/Transformer_DateConversion,[],"pytorch.nn.Transformer, torchtext, Tensorflow 2, Keras"
dkurt/openvino_practice,dkurt/openvino_practice,"['openvino', 'intel', 'computer-vision', 'practice', 'opencv', 'deep-learning']","Practice git, Travis CI and Intel OpenVINO"
dgriffiths3/finding-your-center,dgriffiths3/finding-your-center,"['deep-learning', '3d', 'point-cloud', '3d-vision']","Public repository for paper ""Finding Your (3D) Center: 3D object detection using a learned loss"""
ekzhang/fastseg,ekzhang/fastseg,"['computer-vision', 'semantic-segmentation', 'mobilenetv3', 'efficientnet', 'deep-learning', 'cityscapes', 'kitti-dataset', 'mapillary-vistas-dataset', 'edge-computing', 'pytorch', 'aspp', 'deeplabv3']","📸 PyTorch implementation of MobileNetV3 for real-time semantic segmentation, with pretrained weights & state-of-the-art performance"
nianticlabs/footprints,nianticlabs/footprints,"['computer-vision', 'deep-learning', 'depth-estimation', 'monodepth', 'pytorch']",[CVPR 2020] Estimation of the visible and hidden traversable space from a single color image
lee-zq/3dunet-pytorch,lee-zq/3DUNet-Pytorch,"['pytorch', '3dunet', 'segmentation']",3DUNet implemented with pytorch
lmnt-com/graftr,lmnt-com/graftr,"['deep-learning', 'machine-learning', 'ai', 'pytorch', 'torch', 'pytorch-checkpoints']",graftr: an interactive shell to view and edit PyTorch checkpoints.
hellonlp/classifier_multi_label,hellonlp/classifier_multi_label,"['multi-label-classification', 'multi-label', 'tensorflow', 'text-classification', 'text-classifier', 'bert', 'albert', 'classifier-multi-label']",multi-label，classifier，text classification，多标签文本分类，文本分类，BERT，ALBERT，multi-label-classification
arpanmangal/covidaid,arpanmangal/CovidAID,"['coronavirus', 'covid-19', 'chest-xray', 'machine-learning', 'deep-learning', 'cnn', 'densenet121', 'pytorch', 'chexnet']",COVID-19 Detection Using Chest X-Ray
yuuho/stylegans-pytorch,yuuho/stylegans-pytorch,"['pytorch', 'stylegan2', 'stylegan']","PyTorch StyleGAN2, StyleGANの再現実装"
changlee0903/seril,ChangLee0903/SERIL,[],Official Implementation of SERIL in Pytorch
raghavian/lotenet_pytorch,raghavian/loTeNet_pytorch,[],"Official Pytorch implementation of model in  ""Tensor Networks for Medical Image Classification"", Raghavendra Selvan & Erik Dam, MIDL 2020"
ahmedfgad/kerasga,ahmedfgad/KerasGA,"['genetic-algorithm', 'keras-tensorflow', 'keras', 'pygad', 'python', 'python3', 'neural-network', 'convolutional-neural-networks', 'deep-learning', 'machine-learning', 'numpy']",Training Keras Models by the Genetic Algorithm using PyGAD
pranayjoshi/medico,pranayjoshi/Medico,"['natural-language-processing', 'word-embeddings', 'speech-recognition', 'speech-to-text', 'doc2vec', 'ai', 'medical-application', 'medico', 'medical-terms-detection', 'conversation', 'punctuations', 'voice', 'hacktoberfest']",AI-powered medical terms detection tool.
13952522076/efficient_imagenet_classification,ma-xu/Efficient_ImageNet_Classification,"['pytorch', 'imagenet', 'dali', 'apex']",An efficient implementation for ImageNet classification
shmsw25/ambigqa,shmsw25/AmbigQA,"['question-answering', 'nlp', 'dataset']","An original implementation of EMNLP 2020, ""AmbigQA: Answering Ambiguous Open-domain Questions"""
klauspa/yolov4-tensorflow,klauspa/Yolov4-tensorflow,[],tensorflow implementation for Yolo v4
yahshibu/nested-ner-tacl2020-flair,yahshibu/nested-ner-tacl2020-flair,"['named-entity-recognition', 'information-extraction', 'natural-language-processing', 'nested-named-entity-recognition']",Implementation of Nested Named Entity Recognition using Flair
lucidrains/phasic-policy-gradient,lucidrains/phasic-policy-gradient,"['artificial-intelligence', 'reinforcement-learning', 'proximal-policy-optimization']","An implementation of Phasic Policy Gradient, a proposed improvement of Proximal Policy Gradients, in Pytorch"
giusenso/seld-tcn,giusenso/seld-tcn,"['seldnet', 'seld-tcn', 'neural-network', 'tensorflow', 'keras', 'keras-tensorflow', 'convolutional-neural-networks', 'audio-processing', 'audio-recognition', 'direction-of-arrival', 'sound-event-detection']",SELD-TCN: Sound Event Detection & Localization via Temporal Convolutional Network | Python w/ Tensorflow
stanislasbertrand/retinaface-tf2,StanislasBertrand/RetinaFace-tf2,"['face-detection', 'retinaface', 'tf2', 'tensorflow2', 'tensorflow', 'deep-learning', 'insightface']","RetinaFace (RetinaFace: Single-stage Dense Face Localisation in the Wild, published in 2019) reimplemented in Tensorflow 2.0, with pretrained weights available ! "
moving-ai/virtual-walk,Moving-AI/virtual-walk,"['lstm-model', 'google-street', 'posenet', 'webcam', 'tensorflow', 'virtual-reality', 'google-maps']",Virtual walks in Google Street View using PoseNet and applying Deep Learning models to recognize actions.
google-research/dads,google-research/dads,"['reinforcement-learning', 'skill-discovery', 'unsupervised-learning', 'model-based-rl', 'deep-learning']","Code for 'Dynamics-Aware Unsupervised Discovery of Skills' (DADS). Enables skill discovery without supervision, which can be combined with model-based control. "
christopher-thornton/hmni,Christopher-Thornton/hmni,"['natural-language-processing', 'fuzzy-matching', 'nlp', 'machine-learning', 'data-science', 'python', 'artificial-intelligence', 'ai']",📛 Fuzzy Name Matching with Machine Learning
svjan5/medtype,svjan5/medtype,"['entity-linking', 'bert-as-service', 'pytorch', 'biomedical', 'medical', 'state-of-the-art', 'deep-learning']",MedType: Improving Medical Entity Linking with Semantic Type Prediction
chagmgang/distributed_reinforcement_learning,chagmgang/distributed_reinforcement_learning,"['distributed-reinforcement-learning', 'tensorflow', 'distributed-tensorflow', 'reinforcement-learning', 'distributed-rl', 'impala', 'r2d2', 'apex', 'scalable-reinforcement-learning']",implementation of distributed reinforcement learning with distributed tensorflow
daigo0927/tf-raft,daigo0927/tf-raft,[],RAFT (Recurrent All Pairs Field Transforms for Optical Flow) implementation via tf.keras
nandan91/ulsam,Nandan91/ULSAM,"['self-attention', 'computer-vision', 'pytorch', 'fine-grained-classification', 'mobile-networks', 'compact-neural-network']",ULSAM: Ultra-Lightweight Subspace Attention Module for Compact Convolutional Neural Networks
mr7495/covid-ctset,mr7495/COVID-CTset,"['covid-19', 'covid19', 'coro', 'dataset', 'covid19-data', 'deep-learning', 'ct-scan-images', 'ct-scan', 'radiology', 'covid-ctset', 'covid-dataset', 'covid-data', 'ctscan-daraset', 'covid19-dataset']",Large Covid-19 CT scans dataset from the paper: https://doi.org/10.1016/j.bspc.2021.102588
hmdolatabadi/denoising_diffusion,hmdolatabadi/denoising_diffusion,"['generative-modeling', 'image-generation', 'pytorch-lightning', 'denoising-diffusion']","Unofficial Implementation of ""Denoising Diffusion Probabilistic Models"" in PyTorch(Lightning)"
jabertuhin/image-classification-api,jabertuhin/image-classification-api,"['fastapi', 'pytorch-lightning', 'pytorch']",Serving model through api. FastApi + PytorchLightning
yaozhenfa/ml,OrvilleX/MachineLearning,"['machine-learning', 'numpy', 'sklearn', 'knn', 'svm', 'spark-mllib', 'tensorflow', 'scipy']",机器学习教程，本教程包含基于numpy、sklearn与tensorflow机器学习，也会包含利用spark、flink加快模型训练等用法。本着能够较全的引导读者入门机器学习。
the-ai-summer/gans-in-computer-vision,The-AI-Summer/GANs-in-Computer-Vision,"['gan', 'gans', 'computer-vision', 'deep-learning', 'adverserial', 'learning']",GANs in computer vision AI Summer article series
tchaton/lightning-hydra-seed,tchaton/lightning-hydra-seed,[],Pytorch Lightning seed project with hydra
maggie0830/dccrn,maggie0830/DCCRN,[],"implementation of ""DCCRN-Deep Complex Convolution Recurrent Network for Phase-Aware Speech Enhancement"" by pytorch"
explosion/spacy-ray,explosion/spacy-ray,"['spacy', 'ray', 'machine-learning', 'natural-language-processing', 'training', 'distributed-computing', 'parallel-training']",☄️ Parallel and distributed training with spaCy and Ray
lexuanhieu131297/torchbox,eric-le-12/torchbox,"['pytorch', 'pytorch-tutorial']","implement your ideas in an easy, customizable and fast way"
jeremdona/spatiotemporal_variable_separation,JeremDona/spatiotemporal_variable_separation,"['pytorch', 'deep-learning', 'predictive-models', 'disentanglement']",Official implementation of the paper *PDE-Driven Spatiotemporal Disentanglement*
tatp22/linformer-pytorch,tatp22/linformer-pytorch,"['artificial-intelligence', 'deep-learning', 'attention-mechanism', 'pytorch', 'machine-learning', 'linformer', 'paper']",My take on a practical implementation of Linformer for Pytorch.
wutong16/distributionbalancedloss,wutong16/DistributionBalancedLoss,[],"Pytorch implementation for ""Distribution-Balanced Loss for Multi-Label Classification in Long-Tailed Datasets"" (ECCV 2020 Spotlight)"
chatopera/efaqa-corpus-zh,chatopera/efaqa-corpus-zh,"['natural-language-processing', 'natural-language-understanding', 'corpus', 'psychology']","❤️Emotional First Aid Dataset, 心理咨询问答、聊天机器人语料库"
alexa/dialoglue,alexa/dialoglue,"['deep-learning', 'natural-language-processing', 'natural-language-understanding', 'machinelearning']",DialoGLUE: A Natural Language Understanding Benchmark for Task-Oriented Dialogue
akashsengupta1997/straps-3dhumanshapepose,akashsengupta1997/STRAPS-3DHumanShapePose,"['3d-reconstruction', 'human-pose-estimation', 'human-shape-recover', 'smpl', 'deep-learning']",Code repository for the paper: Synthetic Training for Accurate 3D Human Pose and Shape Estimation in the Wild (BMVC 2020)
toon-it/cartoonizer,Toon-It/Cartoonizer,"['hacktoberfest', 'tensorflow', 'webapp']",A web-app to white box cartoonize your images!
hltchkust/ke-dialogue,HLTCHKUST/ke-dialogue,"['dialogue', 'dialogue-system', 'pytorch', 'gpt', 'gpt-2', 'knowledge-graph', 'knowledge', 'mwoz', 'smd', 'kvr', 'opendialkg']",KE-Dialogue: Injecting knowledge graph into a fully end-to-end dialogue system.
ryandsilva/nn-from-scratch,RyanDsilva/nn-from-scratch,"['neural-network', 'deep-learning', 'python', 'numpy', 'machine-learning', 'hacktoberfest']",:star: Implementation of Neural Networks from Scratch Using Python & Numpy :star:
juanfmontesinos/torch_mir_eval,JuanFMontesinos/torch_mir_eval,[],Backpropagable pytorch implementation of https://craffel.github.io/mir_eval/. 
timoschick/pet,timoschick/pet,"['nlp', 'python', 'machine-learning']","This repository contains the code for ""Exploiting Cloze Questions for Few-Shot Text Classification and Natural Language Inference"""
clovaai/adamp,clovaai/AdamP,"['deep-learning', 'optimizer', 'optimizer-algorithms', 'machine-learning', 'pytorch', 'iclr2021']",AdamP: Slowing Down the Slowdown for Momentum Optimizers on Scale-invariant Weights (ICLR 2021)
menyifang/adgan,menyifang/ADGAN,"['pose-transfer', 'generative-adversarial-network', 'gan', 'pytorch', 'virtual-try-on', 'image-synthesis']","The Implementation of paper ""Controllable Person Image Synthesis with Attribute-Decomposed GAN"" CVPR 2020 (Oral); Pose and Appearance Attributes Transfer;"
mcahny/vps,mcahny/vps,[],"Official pytorch implementation for ""Video Panoptic Segmentation"" (CVPR 2020 Oral)"
alpc91/nice-gan-pytorch,alpc91/NICE-GAN-pytorch,"['gan', 'pytorch', 'reusing-discriminators', 'deep-learning', 'image-to-image-translation', 'computer-vision', 'deep-neural-networks', 'generative-adversarial-network']",Official PyTorch implementation of NICE-GAN:  Reusing Discriminators for Encoding: Towards Unsupervised Image-to-Image Translation
pengboxiangshang/torchsketch,PengBoXiangShang/torchsketch,"['sketch', 'deep-learning', 'pytorch', 'cnn', 'rnn', 'gnn', 'tcn']",TPAMI 2022
phoenix1327/tea-action-recognition,Phoenix1327/tea-action-recognition,[],The Pytorch code of the TEA module (Temporal Excitation and Aggregation for Action Recognition)
lucidrains/denoising-diffusion-pytorch,lucidrains/denoising-diffusion-pytorch,"['artificial-intelligence', 'deep-learning', 'generative-model', 'score-matching']",Implementation of Denoising Diffusion Probabilistic Model in Pytorch
s-aiueo32/lpips-pytorch,S-aiueo32/lpips-pytorch,"['perceptual-similarity', 'perceptual-metric', 'lpips', 'deep-learning', 'deep-neural-networks']",A simple and useful implementation of LPIPS.
jonathanlanemcdonald/ml_for_sla,JonathanLaneMcDonald/ML_for_SLA,"['japanese', 'machine-learning', 'natural-language-processing', 'second-language-acquisition']",Training a neural network to isolate comprehensible input from unstructured text to aid vocabulary acquisition.
pvjosue/lfmnet,pvjosue/LFMNet,"['neural-network', 'lightfield', '4d', 'reconstruction', 'inverse-problems', 'pytorch-cnn', 'pytorch', 'deep-learning', 'conv4d', '3d-volume']",Deep neural network to reconstruct Confocal 3D stacks from Light Field Microscopy images.
koukyo1994/kaggle-birdcall-6th-place,koukyo1994/kaggle-birdcall-6th-place,"['python', 'pytorch', 'kaggle', 'kaggle-solution', 'birdsong-recognition', 'audio-tagging', 'sound-event-detection']",Training code of Cornell Birdcall Identification Challenge 6th place solution
andreybicalho/vrpdr,andreybicalho/vrpdr,"['ocr', 'pytorch', 'opencv', 'deep-learning', 'license-plate-recognition', 'license-plate-detection', 'yolo', 'yolov3', 'vehicle-registration-plate', 'neural-networks', 'convolutional-neural-networks', 'optical-character-recognition', 'character-recognition', 'attention-ocr']",Deep Learning Applied To Vehicle Registration Plate Detection and Recognition in PyTorch.
md-experiments/picture_text,md-experiments/picture_text,"['sbert', 'embeddings', 'natural-language-processing', 'artificial-intelligence', 'transformers', 'sentence-transformers', 'clustering', 'visualization', 'interactive-visualizations', 'text-embeddings', 'text-visualization', 'hierarchical-clustering', 'tree-maps', 'clusters', 'nlp']",Interactive tree-maps with SBERT & Hierarchical Clustering (HAC)
skywalker023/pragmatic-consistency,skywalker023/pragmatic-consistency,"['emnlp', 'paper', 'dialogues', 'nlp', 'pragmatics', 'consistency', 'social-cognition', 'natural-language-processing']","🤖 Code for our EMNLP 2020 paper: ""Will I Sound Like Me? Improving Persona Consistency in Dialogues through Pragmatic Self-Consciousness"""
smaranjitghose/img_ai_app_boilerplate,smaranjitghose/img_ai_app_boilerplate,"['streamlit', 'webapp', 'python', 'deeplearning', 'tensorflow', 'keras', 'convolutional-neural-networks', 'artificial-intelligence', 'heroku', 'slop20', 'slop', 'hacktoberfest', 'heroku-deployment', 'gcp', 'aws-ec2', 'aws', 'azure', 'digitalocean', 'swoc2021']",An image classification app boilerplate to serve your deep learning models asap!
canokaue/immunolynk,canokaue/ImmunoLynk,"['covid-19', 'immune-testing', 'blockchain', 'ipfs-blockchain', 'infura', 'python3', 'flask-server', 'http-api', 'trustless', 'healthcare-service', 'covid-tracking', 'mit-hack', 'ipfs-api', 'ipfs-gateway', 'private-blockchain', 'bigchaindb', 'tensorflow', 'keras-tensorflow', 'opencv', 'image-recognition']",[Lumiata COVID-19 Winner] COVID Immunity testing results registered to the Blockchain for healthcare safety.
core-ml/coreml,core-ml/coreml,"['machine-learning', 'deep-learning', 'classification', 'framework', 'artificial-intelligence', 'neural-network']",Generic framework for ML projects
foreverps/content-aware-rotation,ForeverPs/content-aware-rotation,"['formula-derivation', 'reproduction', 'tensorflow', 'image-warping', 'image-rotation', 'content-aware-rotation']",Implementation of Kaiming He's Paper Content-Aware Rotation on ICCV 2013
reafly/acsnet,ReaFly/ACSNet,[],MICCAI 2020 : Adaptive Context Selection for Polyp Segmentation (Pytorch implementation).
princeton-nlp/calm-textgame,princeton-nlp/calm-textgame,"['text-based-game', 'nlp', 'rl', 'gpt', 'n-gram', 'calm']",[EMNLP 2020] Keep CALM and Explore: Language Models for Action Generation in Text-based Games
sooftware/tacotron2,sooftware/tacotron2,"['tacotron', 'tacotron2', 'pytorch', 'speech-synthesis']","Pytorch implementation of ""Natural TTS Synthesis by Conditioning WaveNet on Mel Spectrogram Predictions"", ICASSP, 2018."
acids-ircam/wavae,acids-ircam/wavae,[],Realtime Variational Autoencoder built on top of libtorch and PureData
sanjana7395/grape-disease-classification,Sanjana7395/Grape-disease-classification,"['ensemble-models', 'majority-voting', 'cnn', 'augment-data', 'random-forest', 'svm', 'stacked-prediction', 'vgg16']",This project classifies diseases in grape plant using various Machine Learning classification algorithms.
jimmyyhwu/spatial-action-maps,jimmyyhwu/spatial-action-maps,"['spatial-action-maps', 'robotics', 'pybullet', 'pytorch', 'deep-reinforcement-learning', 'mobile-manipulation', 'dqn', 'anki-vector']",Learning robotic mobile manipulation with deep reinforcement learning
lmnt-com/wavegrad,lmnt-com/wavegrad,"['machine-learning', 'neural-network', 'speech-synthesis', 'text-to-speech', 'wavegrad', 'paper', 'pytorch', 'vocoder', 'speech', 'pretrained-models', 'tts', 'deep-learning']","A fast, high-quality neural vocoder."
lmnt-com/diffwave,lmnt-com/diffwave,"['machine-learning', 'text-to-speech', 'neural-network', 'paper', 'pytorch', 'speech-synthesis', 'diffwave', 'vocoder', 'speech', 'pretrained-models', 'tts', 'deep-learning']","DiffWave is a fast, high-quality neural vocoder and waveform synthesizer."
tongchangd/bert_for_corrector,tongchangD/bert_for_corrector,"['bert', 'corrector', 'nlp']",基于bert进行中文文本纠错
szymonmaszke/torchlambda,szymonmaszke/torchlambda,"['pytorch', 'aws', 'aws-lambda', 'cpp', 'python', 'minimalistic', 'lightweight', 'cmake', 'docker', 'deep-learning', 'machine-learning', 'deployment', 'production', 'yaml', 'cli', 'aws-cli', 'lambda', 'torchscript', 'libtorch', 'performance']",Lightweight tool to deploy PyTorch models to AWS Lambda
chengchunhsu/everypixelmatters,chengchunhsu/EveryPixelMatters,"['object-detection', 'domain-adaptation', 'transfer-learning', 'adversarial-learning', 'anchor-free', 'fcos', 'computer-vision', 'pytorch', 'eccv', 'eccv2020', 'eccv-2020', 'unsupervised-domain-adaptation']","Implementation of ECCV 2020 paper ""Every Pixel Matters: Center-aware Feature Alignment for Domain Adaptive Object Detector"""
kyubyong/name2nat,Kyubyong/name2nat,"['nlp', 'nationality', 'names']",name2nat: a Python package for nationality prediction from a name
na-z/sess,Na-Z/sess,"['pytorch', 'semi-supervised-learning', '3d-object-detection', 'point-cloud']",[CVPR2020 Oral] SESS: Self-Ensembling Semi-Supervised 3D Object Detection
kazuhito00/naruto-handsigndetection,Kazuhito00/NARUTO-HandSignDetection,"['tensorflow2', 'object-detection', 'opencv', 'handsign', 'naruto', 'efficientdet', 'mobilenetv2-ssd', 'deep-learning', 'deep-neural-networks', 'tensorflow-lite', 'naruto-handsigndetection']",物体検出を用いてNARUTOの印(子～亥、壬、合掌)を検出するモデルとサンプルプログラムです。このリポジトリでは、YOLOXを使用しています(This is a model and sample program that detects NARUTO's hand sign using object detection. This repository use YOLOX.)
powerycy/lic2020-,powerycy/Lic2020-,[],lic2020关系抽取比赛，使用Pytorch实现苏神的模型。
v-iashin/bmt,v-iashin/BMT,"['pytorch', 'bi-modal-transformer', 'dense-video-captioning', 'audio', 'video', 'i3d', 'activitynet-captions', 'multimodal-fusion', 'temporal-action-proposals', 'bmvc', 'bmvc20', 'bmt', 'proposal-generator', 'video-features', 'bi-modal-encoder', 'transformer']","Source code for ""Bi-modal Transformer for Dense Video Captioning"" (BMVC 2020)"
lmbxmu/rbnn,lmbxmu/RBNN,"['binary-network', 'binary-neural-networks', 'network-compression-acceleration', 'network-quantization', 'neurips2020', 'neurips-2020']",Pytorch implementation of our paper accepted by NeurIPS 2020 -- Rotated Binary Neural Network
miulab/dualug,MiuLab/DuaLUG,"['dual-learning', 'nlg', 'papers', 'nlp', 'nlu', 'emnlp2020', 'acl2019', 'acl2020']","The implementation of the papers on dual learning of natural language understanding and generation. (ACL2019,2020; Findings of EMNLP 2020)"
prajjwal1/fluence,prajjwal1/fluence,"['transformers', 'pytorch', 'attention', 'nlp', 'deep-learning']",A deep learning library based on Pytorch focussed on low resource language research and robustness
ssisyphustao/ssd-knowledge-distillation,SsisyphusTao/Object-Detection-Knowledge-Distillation,"['pytorch', 'knowledge-distillation', 'ssd', 'object-detection', 'deep-learning', 'yolov5']","An Object Detection Knowledge Distillation framework powered by pytorch, now having SSD and yolov5."
dylanjcastillo/twitter-sentiment-tracker,dylanjcastillo/twitter-sentiment-tracker,"['python3', 'dash', 'pytorch', 'nlp']",Dash app for classifying tweets in real-time
ternaus/people_segmentation,ternaus/people_segmentation,"['deep-learning', 'image-segmentation', 'semantic-segmentation', 'computer-vision', 'python', 'people-segmentation']",Code for the model to segment people at the image
imirzadeh/stable-continual-learning,imirzadeh/stable-continual-learning,"['continual-learning', 'catastrophic-forgetting', 'pytorch', 'lifelong-learning', 'deep-learning']",Towards increasing stability of neural networks for continual learning: https://arxiv.org/abs/2006.06958.pdf (NeurIPS'20)
gitycc/crnn-pytorch,GitYCC/crnn-pytorch,"['pytorch', 'ocr-recognition', 'crnn-ctc']",Convolutional Recurrent Neural Network (CRNN) for image-based sequence recognition using Pytorch
cceyda/torchserve-dashboard,cceyda/torchserve-dashboard,"['torchserve', 'streamlit', 'ml-deployment', 'pytorch']",Management Dashboard for Torchserve
tri-ml/dgp,TRI-ML/dgp,"['machine-learning', 'autonomous-driving', 'pytorch', 'data-management', 'deep-learning']",ML Dataset Governance Policy for Autonomous Vehicle Datasets
lourencovazpato/seeing-without-looking,LourencoVazPato/seeing-without-looking,"['deep-learning', 'object-detection', 'recurrent-neural-networks', 'pytorch', 'cvpr2020']",PyTorch implementation for Seeing without Looking: Contextual Rescoring of Object Detections for AP Maximization (CVPR 2020)
dvlp-cmaterju/rectinet,DVLP-CMATERJU/RectiNet,"['ssim', 'dewarping', 'deep-learning', 'artificial-intelligence', 'neural-networks', 'computer-vision', 'bifurcation', 'predictions']",A Gated and Bifurcated Stacked U-Net Module for Document Image Dewarping
media-smart/vedacls,Media-Smart/vedacls,"['classification-toolbox', 'pytorch']",A classification toolbox based on PyTorch
rg2/deepfluorolabeling-ipcai2020,rg2/DeepFluoroLabeling-IPCAI2020,"['landmark-detection', 'semantic-segmentation', 'registration', '2d-3d-registration', 'x-ray-navigation', 'orthopaedics', 'pytorch', 'u-net', 'convolutional-neural-networks', 'fluoroscopy', 'x-ray']","Code and data for the ""annotation"" component of the IPCAI 2020 paper: ""Automatic Annotation of Hip Anatomy in Fluoroscopy for Robust and Efficient 2D/3D Registration."" https://arxiv.org/abs/1911.07042 or https://doi.org/10.1007/s11548-020-02162-7"
zhangqianhui/swapping-autoencoder-tf,zhangqianhui/Swapping-Autoencoder-tf,"['generative-adversarial-network', 'gans', 'image-editing', 'facial-attribute-editing']",The unofficial  tensorflow implementation of Swapping Autoencoder for Deep Image Manipulation
rlai-lab/regularized-gradienttd,rlai-lab/Regularized-GradientTD,"['learning-algorithm', 'neural-network', 'reinforcement-learning', 'icml-2020']",Code repo for Gradient Temporal-Difference Learning with Regularized Corrections paper.
pragativerma18/mlh-quizzet,PragatiVerma18/MLH-Quizzet,"['nlp', 'nlp-machine-learning', 'question-answering', 'machine-learning', 'flask-application', 'upload-file', 'jinja2', 'mlh-fellowship', 'hackathon', 'mlh', 'html-css-javascript', 'html', 'css', 'javascript', 'python', 'quiz', 'question-generation', 'question-generator']","This is a smart Quiz Generator that generates a dynamic quiz from any uploaded text/PDF document using NLP. This can be used for self-analysis, question paper generation, and evaluation, thus reducing human effort."
idealwhite/tdanet,idealwhite/tdanet,"['image-inpainting', 'image-completion', 'image-restoration', 'text-to-image-synthesis', 'computer-vision', 'pytorch']","The pytorch implementation of the paper ""text-guided neural image inpainting"" at MM'2020 (oral)"
zaccharieramzi/tfkbnufft,zaccharieramzi/tfkbnufft,"['tensorflow', 'non-uniform-fourier', 'mri', 'nfft', 'nufft']","A robust, easy-to-deploy non-uniform Fast Fourier Transform in TensorFlow."
piesposito/transformers-low-code-experiments,piEsposito/transformers-low-code-experiments,"['nlp', 'pytorch', 'transformer', 'machine-learning', 'deep-learning']",Low-code pre-built pipelines for experiments with huggingface/transformers for Data Scientists in a rush.
zzy99/epidemic-sentence-pair,zzy99/epidemic-sentence-pair,['nlp'],天池 疫情相似句对判定大赛 线上第一名方案
stevewongv/instanceshadowdetection,stevewongv/InstanceShadowDetection,"['cvpr2020', 'computer-vision', 'deep-learning', 'shadow-detection', 'detectron2', 'instance-shadow-detection', 'instance-detection']",Instance Shadow Detection (CVPR 2020)
miemie2013/pytorch-diou-yolov3,miemie2013/Pytorch-DIOU-YOLOv3,[],Pytorch复现YOLOv3，使用最新的DIOU loss训练
emla2805/vision-transformer,emla2805/vision-transformer,"['vision-transformer', 'transformer', 'computer-vision', 'tensorflow']",Tensorflow implementation of the Vision Transformer (An Image is Worth 16x16 Words: Transformers for Image Recognition at Scale)
rusty1s/himp-gnn,rusty1s/himp-gnn,"['pytorch', 'geometric-deep-learning', 'graph-neural-networks', 'molecular-graph', 'junction-tree', 'graph-pooling']",Hierarchical Inter-Message Passing for Learning on Molecular Graphs
jerryji1993/dnabert,jerryji1993/DNABERT,"['kmer', 'dnabert-model', 'kmer-format', 'gpu', 'sequence', 'genome', 'machine-learning', 'deep-learning', 'natural-language-processing', 'nlp']",DNABERT: pre-trained Bidirectional Encoder Representations from Transformers model for DNA-language in genome
denguir/student-teacher-anomaly-detection,denguir/student-teacher-anomaly-detection,"['artificial-intelligence', 'deep-learning', 'neural-network', 'unsupervised-learning', 'computer-vision']",Student–Teacher Anomaly Detection with Discriminative Latent Embeddings
tharindudr/transquest,TharinduDR/TransQuest,"['deep-learning', 'transformers', 'quality-estimation']",Transformer based translation quality estimation
mohsenfayyaz89/sct,MohsenFayyaz89/SCT,"['cvpr2020', 'cvpr', 'computer-vision', 'deep-learning']",SCT: Set Constrained Temporal Transformer for Set Supervised Action Segmentation (CVPR2020) https://arxiv.org/abs/2003.14266
samuelbroscheit/entity_knowledge_in_bert,samuelbroscheit/entity_knowledge_in_bert,"['nlp', 'entity-linking', 'machine-learning']","This repository contains the code for the CONLL 2019 paper ""Investigating Entity Knowledge in BERT with Simple Neural End-To-End Entity Linking"". The code is provided as a documentation for the paper and also for follow-up research."
sina-baharlou/depth-vrd,Sina-Baharlou/Depth-VRD,"['visual-relationship-detection', 'scene-graph-generation', 'depth-maps', 'visual-genome', 'vg-depth', 'pytorch', 'faster-rcnn', 'computer-vision', 'icpr-2020', 'icpr2020', 'scene-graphs', 'scene-graph', 'deep-learning', 'predicate-classification', 'scene-graph-classification']",Improving Visual Relation Detection using Depth Maps (ICPR 2020)
adrijano/virtual-assistant-alpha,adrijano/virtual-assistant-Alpha,"['virtual-assistant', 'virtual-assistant-ai', 'virtual', 'assistant', 'python', 'pythongui', 'pysimplegui', 'python3', 'py', 'python-3gui', 'pysimpleguiweb', 'alpha', 'paypal', 'bitcoin', 'paypal-account', 'donations', 'forthebadge', 'cnn', 'capture', 'credit-card']",Virtual assistant Alpha
realrate/causing,realrate/Causing,"['causality-analysis', 'mediation-analysis', 'effects-modeling', 'causal-networks', 'latent-variables', 'dag', 'graph-theory', 'do-calculus', 'structural-equation-modeling', 'structural-analysis', 'simultaneous-equation', 'neural-networks', 'derivatives', 'automatic-differentiation', 'python', 'pytorch', 'graphs', 'gnn']",Causing: CAUsal INterpretation using Graphs
vloison/handwritten_text_recognition,vloison/Handwritten_Text_Recognition,"['crnn', 'htr', 'iam-dataset', 'ctcloss', 'handwritten-text-recognition', 'data-augmentation', 'pytorch', 'deep-learning', 'computer-vision']",
chenwwweixiang/diagnosis_covid19,ChenWWWeixiang/diagnosis_covid19,"['covid-19', 'pneumonia-detection', 'opencoviddetector', 'pytorch']","OpenCovidDetector is an opensource COVID-19 diagnosis system implementing on pytorch, which is also as presented in our paper: Development and evaluation of an artificial intelligence system for COVID-19 diagnosis. Nat Commun 11, 5088 (2020).(https://doi.org/10.1038/s41467-020-18685-1)"
idealwei/asanet,idealwei/ASANet,"['domain-adaptation', 'semantic-segmentation', 'pixel-affinity', 'cityscapes', 'gta5', 'synthia', 'pytorch', 'scene-parsing']",The code and trained models of:  Affinity Space Adaptation for Semantic Segmentation Across Domains.
mindslab-ai/cotatron,mindslab-ai/cotatron,"['voice-conversion', 'pytorch', 'speech-synthesis']",Official code for Cotatron @ INTERSPEECH 2020
wangle1218/deep_text_matching,wangle1218/deep_text_matching,[],"implementation several deep text match (text similarly) models for keras . cdssm, arc-ii,match_pyramid, mvlstm ,esim, drcn ,bimpm, bert, albert, raberta"
bigpon/vcc20_baseline_cyclevae,bigpon/vcc20_baseline_cyclevae,"['voice-conversion', 'vcc2020', 'baseline', 'pytorch', 'cyclevae-vc', 'parallel-wavenet-vocoder']",Voice Conversion Challenge 2020 CycleVAE baseline system 
sxhxliang/detectron2_backbone,sxhxliang/detectron2_backbone,"['detectron2', 'backbone', 'resnet18', 'efficientnet', 'hrnet', 'pytorch']","detectron2 backbone: resnet18, efficientnet, hrnet, mobilenet v2, resnest, bifpn"
jasonfenggit/rnn-language-classifier,JasonFengGit/RNN-Language-Classifier,"['artificial-intelligence', 'rnn', 'recurrent-neural-network', 'language-classification', 'numpy', 'word-classifier']",A Language Classifier powered by Recurrent Neural Network implemented in Python without AI libraries. AI from scratch.
thudm/grand,THUDM/GRAND,"['graphs', 'gnn', 'semi-supervised-learning', 'neurips-2020', 'data-augmentation', 'graph-neural-networks']","Source code and dataset of the NeurIPS 2020 paper ""Graph Random Neural Network for Semi-Supervised Learning on Graphs"""
lucidrains/mixture-of-experts,lucidrains/mixture-of-experts,"['artificial-intelligence', 'deep-learning', 'transformer', 'mixture-of-experts']","A Pytorch implementation of Sparsely-Gated Mixture of Experts, for massively increasing the parameter count of language models"
thammegowda/mtdata,thammegowda/mtdata,"['machine-translation', 'natural-language-processing', 'natural-language-generation', 'parallel-data', 'multilingual', 'dataset']","A tool that locates, downloads, and extracts machine translation corpora"
agwave/pdf-resume-information-extraction,Agwave/PDF-Resume-Information-Extraction,"['bilstm-crf', 'pytorch', 'resume', 'ner']",天池比赛作品整理。实现从pdf中提取出姓名、出生年月、性别、电话、最高学历、籍贯、落户市县、政治面貌、毕业院校、工作单位、工作内容、职务、项目名称、项目责任、学位、毕业时间、工作时间、项目时间共18个字段。
evergrow/gdn_inpainting,Evergrow/GDN_Inpainting,"['image-inpainting', 'deep-learning', 'artifacts-detection', 'image-synthesis']",Pixel-wise Dense Detector for Image Inpainting (PG 2020)
separius/simclrv2-pytorch,Separius/SimCLRv2-Pytorch,"['simclr', 'contrastive', 'pretrained', 'selfsupervised', 'resnet', 'pytorch']",Pretrained SimCLRv2 models in Pytorch
lucaslie/provable_pruning,lucaslie/torchprune,"['neural-networks', 'filter-pruning', 'weight-pruning', 'coresets', 'deep-learning', 'generalization-ability', 'pytorch', 'machine-learning', 'tensor-decomposition', 'sparsification', 'sparsity', 'compression', 'neural-architecture-search', 'tinyml', 'pruning', 'pruning-algorithms']","A research library for pytorch-based neural network pruning, compression, and more."
yule-buaa/dstgcn,yule-BUAA/DSTGCN,"['deep-learning', 'spatial-temporal-data', 'graph-convolutional-networks', 'traffic-accident-prediction']",codes of Deep Spatio-Temporal Graph Convolutional Network for Traffic Accident Prediction
basiralab/multigraphgan,basiralab/MultiGraphGAN,"['brain-graphs', 'graph-generation', 'source-graph', 'target-graph', 'gan', 'generative-adversarial-network', 'geometric-deep-learning', 'brain-connectivity', 'morphological-brain-networks', 'multimodal-deep-learning', 'predictive-learning', 'predictive-intelligence', 'multi-view-learning']",MultiGraphGAN for predicting multiple target graphs from a source graph using geometric deep learning.
australia/aboriginal-flag-cv-model,australia/aboriginal-flag-cv-model,"['aboriginal-flags', 'detecto', 'pytorch', 'machine-learning']",A tutorial and trained model that can identify Aboriginal flags in images using PyTorch and Detecto
jac99/footandball,jac99/FootAndBall,"['player-detector', 'ball-detector', 'deep-learning', 'soccer', 'football']",FootAndBall: Integrated player and ball detector
alibaba-miil/tresnet,Alibaba-MIIL/TResNet,"['tresnet', 'multi-label-classification', 'accuracy', 'architecture', 'imagenet']","Official Pytorch Implementation of ""TResNet: High-Performance GPU-Dedicated Architecture"" (WACV 2021)"
siriusdemon/build-your-own-face-model,siriusdemon/Build-Your-Own-Face-Model,"['arcface', 'face-model', 'pytorch', 'tutorial', 'centerface']","Build your own ArcFace, CenterFace/Centernet"
makgyver/rectorch,makgyver/rectorch,"['recommender-system', 'collaborative-filtering', 'autoencoder', 'variational-autoencoder', 'generative-adversarial-network', 'pypi', 'pytorch', 'matrix-factorization', 'top-n-recommendations']",rectorch is a pytorch-based framework for state-of-the-art top-N recommendation
dlr-rm/singleviewreconstruction,DLR-RM/SingleViewReconstruction,"['deep-learning', 'paper', 'reconstruction', 'eccv2020', 'open-source', 'singleview', 'computer-vision']",Official Code: 3D Scene Reconstruction from a Single Viewport
boschresearch/unetgan,boschresearch/unetgan,"['gan', 'image-generation', 'cvpr2020', 'computer-vision', 'machine-learning', 'ffhq', 'unet-gan', 'biggan', 'bcai', 'u-net', 'generative-adversarial-network']","Official Implementation of the paper ""A U-Net Based Discriminator for Generative Adversarial Networks"" (CVPR 2020)"
thanhhau097/ml_project_template,thanhhau097/ml_project_template,"['machine-learning', 'deep-learning', 'template', 'project', 'ml-project', 'ml-boilerplate', 'machine-learning-engineer']",Machine Learning Project Template - Ready to production
rubenwiersma/hsn,rubenwiersma/hsn,"['geometric-deep-learning', 'pytorch-geometric', '3d', 'convolutional-neural-networks', 'pytorch', 'siggraph']",Code for SIGGRAPH paper CNNs on Surfaces using Rotation-Equivariant Features
lingkai-kong/sde-net,Lingkai-Kong/SDE-Net,"['deep-learning', 'uncertainty-quantification', 'robustness', 'open-world-classification']",Code for paper: SDE-Net: Equipping Deep Neural network with Uncertainty Estimates
liyingwei/shapetexturedebiasedtraining,LiYingwei/ShapeTextureDebiasedTraining,"['imagenet', 'texture', 'shape', 'pytorch', 'paper']",Code and models for the paper Shape-Texture Debiased Neural Network Training (ICLR 2021)
mims-harvard/g-meta,mims-harvard/G-Meta,"['massive-interactomics', 'graph-neural-networks', 'meta-learning', 'deep-learning', 'few-shot-learning', 'transfer-learning', 'machine-learning']",Graph meta learning via local subgraphs (NeurIPS 2020)
saimj7/people-counting-in-real-time,saimj7/People-Counting-in-Real-Time,"['deep-learning', 'centroid-tracking', 'people-counter', 'ip-camera', 'threading', 'opencv', 'covid-19', 'ssd']",People Counting in Real-Time with an IP camera.
csdongxian/awp,csdongxian/AWP,"['neurips-2020', 'adversarial-attacks', 'pytorch', 'adversarial-training']","Codes for NeurIPS 2020 paper ""Adversarial Weight Perturbation Helps Robust Generalization"""
openmined/threepio,OpenMined/Threepio,"['pytorch', 'tensorflow', 'tensorflowjs', 'hacktoberfest']","A multi-language library for translating commands between PyTorch, TensorFlow, and TensorFlow.js"
erfanmhi/deep-reinforcement-learning-cs285-pytorch,erfanMhi/Deep-Reinforcement-Learning-CS285-Pytorch,"['pytorch', 'reinforcement-learning', 'deep-learning', 'berkeley', 'python', 'deep-reinforcement-learning', 'neural-networks', 'openai-gym', 'mujoco', 'deep-q-learning', 'policy-gradient', 'actor-critic-algorithm', 'model-based-rl', 'model-free-rl']","Solutions of assignments of Deep Reinforcement Learning course presented by the University of California, Berkeley (CS285) in Pytorch framework"
zjysteven/dverge,zjysteven/DVERGE,"['pytorch', 'ensembles', 'diversifying-vulnerabilities', 'adversarial-robustness', 'adversarial-attack-and-defense']","Pytorch implementation of our NeurIPS'20 *Oral* paper ""DVERGE: Diversifying Vulnerabilities for Enhanced Robust Generation of Ensembles""."
voidful/nlprep,voidful/NLPrep,"['nlp', 'dataset', 'prepare', 'pytorch', 'tfkit']",🍳 NLPrep - dataset tool for many natural language processing task
wangzhenqing-rs/unet_rsimage_multi-band_multi-class,WangZhenqing-RS/Unet_RSimage_Multi-band_Multi-class,[],keras遥感图像Unet语义分割(支持多波段&多类)
lucidrains/vector-quantize-pytorch,lucidrains/vector-quantize-pytorch,"['artificial-intelligence', 'deep-learning', 'pytorch', 'vector-quantization']","Vector Quantization, in Pytorch"
jinheonbaek/gen,JinheonBaek/GEN,"['meta-learning', 'graph-neural-network', 'few-shot-learning', 'link-prediction', 'graph-link-prediction', 'graph-neural-networks', 'knowledge-graph', 'deep-learning']","Official Code Repository for the paper ""Learning to Extrapolate Knowledge: Transductive Few-shot Out-of-Graph Link Prediction"" (NeurIPS 2020)"
d-cota/covid-monitor,d-cota/covid-monitor,"['machine-learning', 'computer-vision', 'covid-19', 'covid', 'cctv', 'deep-learning', 'social-distancing', 'mask-detection', 'counting-people']","This repo contains the code for the thesis ""Monitoring COVID-19 prevention measures using Deep Learning"""
ikergarcia1996/self-driving-car-in-video-games,ikergarcia1996/Self-Driving-Car-in-Video-Games,"['python', 'pytorch', 'self-driving-car', 'videogame', 'videogame-bot', 'neural-network', 'deep-learning', 'supervised-learning', 'machine-learning', 'autonomous-driving', 'deep-neural-network', 'video-games', 'pretrained-models']",A deep neural network that learns to drive in video games
lucidrains/slot-attention,lucidrains/slot-attention,"['artificial-intelligence', 'deep-learning', 'attention-mechanism', 'clustering']",Implementation of Slot Attention from GoogleAI
vita-group/agd,VITA-Group/AGD,"['pytorch', 'compression', 'neural-architecture-search', 'generative-adversarial-network']","[ICML2020] ""AutoGAN-Distiller: Searching to Compress Generative Adversarial Networks"" by Yonggan Fu, Wuyang Chen, Haotao Wang, Haoran Li, Yingyan Lin, Zhangyang Wang"
ink-usc/commongen,INK-USC/CommonGen,"['natural-language-processing', 'commonsense-reasoning', 'nlg-dataset', 'natural-language-generation', 'language-generation-dataset', 'machine-reasoning', 'deep-learning', 'text-generation', 'nlp-datasets']",A Constrained Text Generation Challenge Towards Generative Commonsense Reasoning
daquincy/deepmusicvstyle,daQuincy/DeepMusicvStyle,"['variational-autoencoder', 'deep-learning', 'music-composition', 'vae', 'music-generation']","Code repo for ICME 2020 paper ""Style-Conditioned Music Generation"". VAE model that allows style-conditioned music generation."
zlinao/mintl,zlinao/MinTL,"['task-oriented-dialogue', 'transfer-learning', 'language-model', 'transformer']",MinTL: Minimalist Transfer Learning for Task-Oriented Dialogue Systems
fushengwuyu/chinese_spelling_correction,fushengwuyu/chinese_spelling_correction,[],中文文本纠错模型，keras实现
guyulongcs/awesome-deep-learning-papers-for-search-recommendation-advertising,guyulongcs/Awesome-Deep-Learning-Papers-for-Search-Recommendation-Advertising,"['deep-learning', 'recommender-system', 'search', 'advertising', 'ctr', 'cvr', 'reinforcement-learning', 'search-engine']","Awesome Deep Learning papers for industrial Search, Recommendation and Advertising. They focus on Embedding, Matching, Ranking (CTR and CVR prediction), Post Ranking, Multi-task Learning, Graph Neural Networks, Transfer Learning, Reinforcement Learning, Self-supervised Learning and so on."
baiksung/l2f,baiksung/L2F,"['meta-learning', 'pytorch', 'maml', 'deep-learning', 'machine-learning', 'few-shot-learning', 'reinforcement-learning', 'cvpr2020', 'computer-vision']","Source code for CVPR 2020 paper ""Learning to Forget for Meta-Learning"" "
hanson0910/retinatrack,Hanson0910/RetinaTrack,[],The pytorch implement of the retina track original paper link: https://arxiv.org/abs/2003.13870
ranahanocka/point2mesh,ranahanocka/point2mesh,"['3d-graphics', 'deep-learning', 'mesh-processing', 'pointcloud', 'pytorch', 'reconstruction']",Reconstruct Watertight Meshes from Point Clouds [SIGGRAPH 2020]
danijar/dreamer,danijar/dreamer,"['reinforcement-learning', 'artificial-intelligence', 'deep-learning', 'robotics', 'world-models']",Dream to Control: Learning Behaviors by Latent Imagination
eladrich/pix2vertex.pytorch,eladrich/pix2vertex.pytorch,"['pytorch', 'iccv', 'reconstruction', 'deep-learning']",An official pyTorch port of the pix2vertex paper from ICCV2017
theaiguyscode/yolov4-custom-functions,theAIGuysCode/yolov4-custom-functions,"['yolov4', 'yolov3', 'object-detection', 'tensorflow', 'tflite', 'custom-yolov4', 'yolov4-tiny', 'tf2', 'tensorrt']","A Wide Range of Custom Functions for YOLOv4, YOLOv4-tiny, YOLOv3, and YOLOv3-tiny Implemented in TensorFlow, TFLite, and TensorRT."
lucidrains/conformer,lucidrains/conformer,"['artificial-intelligence', 'deep-learning', 'transformer']","Implementation of the convolutional module from the Conformer paper, for use in Transformers"
ibaigorordo/pykinectazure,ibaiGorordo/pyKinectAzure,"['opencv-python', 'opencv', 'depth-camera', 'body-tracking', 'deep-learning', 'k4a', 'k4abt', 'kinect', 'python3', 'python', 'kinect-azure', 'azure-kinect-sdk', 'azure-kinect', 'azure-kinect-dk']",Python library to run Kinect Azure DK SDK functions
heylynne/focalloss_for_multiclass,HeyLynne/FocalLoss_for_multiclass,"['classification', 'pytorch']",Focal loss for multiple class classification
novoic/blabla,novoic/blabla,"['alzheimers-disease', 'aphasia', 'blabla', 'computational-linguistics', 'healthcare', 'machine-learning', 'ml', 'natural-language-processing', 'nlp', 'novoic', 'speech-processing', 'speech-and-language-processing', 'feature-extraction', 'text-processing', 'stanza', 'corenlp']",Novoic's linguistic feature extraction library
arogozhnikov/readable_capsnet,arogozhnikov/readable_capsnet,[],Blazingly fast capsule networks in 75 lines of pytorch+einops
xavierfav/coala,xavierfav/coala,"['deep-learning', 'contrastive-loss', 'audio-representation', 'autoencoders']",COALA: Co-Aligned Autoencoders for Learning Semantically Enriched Audio Representations
wangcongcong123/auto_coding,wangcongcong123/auto_coding,"['auto-code-generator', 'generative-model', 'gpt-2', 'natural-language-processing', 'python-programming']",A basic and simple tool for code auto completion
karthikeyu/indian-sign-language-recognition,Karthikeyu/Indian-sign-language-recognition,"['indian-sign-language', 'python', 'bag-of-visual-words', 'deep-learning', 'computer-vision', 'image-processing', 'gesture-detection']",This repository contains python implementation for recognizing Indian sign language (ISL) gestures for deaf and dumb people.
letsupgrade/chit-chat,LetsUpgrade/CHIT-CHAT,"['rasa', 'artificial-intelligence', 'machine-learning', 'chatbot-application', 'serve-humans-queries', 'chatbot', 'python', 'rasax', 'tensorflow', 'chit-chat', 'conversations']",A Covid-19 Chatbot that aims to serve humans queries and give a feasible answer to their queries.
owlting/ai_basketball_games_video_editor,OwlTing/AI_basketball_games_video_editor,"['basketball', 'machine-learning', 'ai', 'computer-vision', 'artificial-intelligence', 'deep-learning', 'yolov4', 'pytorch', 'pytorch-yolov4', 'tensorrt', 'objection-detection']",AI Basketball Games Video Editor is a program to get basketball highlight video by PyTorch YOLOv4 object detection
declare-lab/mime,declare-lab/MIME,"['dialogue-systems', 'conversational-bots', 'natural-language-processing', 'transformer-encoder', 'empathetic-dialogues', 'empathetic-responses']",This repository contains PyTorch implementations of the models from the paper An Empirical Study MIME: MIMicking Emotions for Empathetic Response Generation.
mishalaskin/curl,MishaLaskin/curl,"['deep-learning', 'contrastive-loss', 'contrastive-learning', 'contrastive-predictive-coding', 'deep-reinforcement-learning', 'deep-rl', 'reinforcement-learning', 'reinforcement-learning-algorithms', 'curl', 'sac', 'gpu', 'off-policy', 'model-free-rl', 'deep-neural-networks', 'deeplearning', 'deep-q-network', 'deep-q-learning', 'deep-learning-algorithms', 'deeplearning-ai', 'reinforcement-agents']",CURL: Contrastive Unsupervised Representation Learning for Sample-Efficient Reinforcement Learning
wtjiang98/psgan,wtjiang98/PSGAN,"['psgan', 'pytorch', 'makeup-transfer', 'makeup', 'generative-adversarial-network', 'gan']","PyTorch code for ""PSGAN: Pose and Expression Robust Spatial-Aware GAN for Customizable Makeup Transfer"" (CVPR 2020 Oral)"
utsaslab/monet,utsaslab/MONeT,"['machine-learning', 'dnn', 'ml-training', 'memory-consumption', 'deep-neural-networks', 'dnn-training', 'pytorch']",MONeT framework for reducing memory consumption of DNN training
kaleidophon/token2index,Kaleidophon/token2index,"['indexing', 'token', 'nlp', 'pytorch', 'tensorflow', 'numpy', 'w2i', 't2i', 'stoi', 'itos', 'i2t', 'i2w', 'deeplearning', 'seq2seq', 'deep-learning', 'python', 'transformers', 'rnn', 'rnns', 'transformer']","A lightweight but powerful library to build token indices for NLP tasks, compatible with major Deep Learning frameworks like PyTorch and Tensorflow."
abrazinskas/copycat-abstractive-opinion-summarizer,abrazinskas/Copycat-abstractive-opinion-summarizer,"['summarization', 'machine-learning', 'natural-language-processing', 'natural-language-generation', 'deep-learning', 'algorithms', 'data-science', 'abstractive-text-summarization', 'abstractive-summarization', 'reviews', 'amazon', 'yelp', 'opinion-summarization', 'vae']",ACL 2020 Unsupervised Opinion Summarization as Copycat-Review Generation
kracekumar/facetouch,kracekumar/facetouch,"['python3', 'pytorch', 'yolov3', 'covid-19', 'facetouch']","Neural Network to predict face touch on live feed and warn you, ""don't touch the face"". "
evanbernard/minineuralnets,evanbernard/MiniNeuralNets,"['neural-network', 'backpropagation', 'genetic-algorithm', 'perceptrons', 'weight-adjustment', 'training-algorithms']","A framework for mini neural networks (perceptrons), written from scratch in python. The goal of the project is to demystify the workings of a neural network and various training algorithms by providing code written from scratch for the simplest neural network one could have."
bm-k/styling-chatbot-with-transformer,BM-K/Styling-Chatbot-with-Transformer,['natural-language-processing'],Language Style과 감정에 따른 챗봇 답변 변화 모델
m3dv/alignshift,M3DV/AlignShift,"['deeplesion', 'miccai', 'deep-learning', '3d-anisotropic-volumes', 'imaging-thickness']",[MICCAI'21] A3D + [MICCAI'20] AlignShift: A Codebase for Universal Lesion Detection (DeepLesion)
cloud-cv/vilbert-multi-task,Cloud-CV/vilbert-multi-task,"['machine-learning', 'deep-learning', 'cnn', 'visual-question-answering', 'python3', 'javascript', 'redis', 'rabbitmq', 'postgresql', 'channels', 'web-sockets']",:eyes: :speaking_head: :memo:12-in-1: Multi-Task Vision and Language Representation Learning Web Demo
stanfordmlgroup/chexbert,stanfordmlgroup/CheXbert,"['deep-learning', 'medical-imaging', 'bert', 'natural-language-processing', 'radiology']",Combining Automatic Labelers and Expert Annotations for Accurate Radiology Report Labeling Using BERT
arangesh/gpcyclegan,arangesh/GPCycleGAN,"['gaze-estimation', 'generative-adversarial-network', 'driver-behavior', 'conditional-gans']","Datasets, code and models from our driver gaze estimation works over the last few years."
aiwizo/template-nvae,nextml-code/template-nvae,"['nvae', 'pytorch', 'generative-model']",Simple NVAE implementation intended for effective reuse and learning purposes
jakartaresearch/maleo,jakartaresearch/maleo,"['machine-learning', 'nlp-library', 'nlp', 'indonesian-language']","Wrapper library for text cleansing, preprocessing in NLP"
explosion/spacy-streamlit,explosion/spacy-streamlit,"['spacy', 'nlp', 'natural-language-processing', 'visualizers', 'dependency-parsing', 'part-of-speech-tagging', 'named-entity-recognition', 'ner', 'streamlit', 'visualizer', 'text-classification', 'word-vectors', 'tokenization', 'machine-learning']",👑 spaCy building blocks and visualizers for Streamlit apps
yatingmusic/remi,YatingMusic/remi,"['music-generation', 'transformer', 'tensorflow']","""Pop Music Transformer: Beat-based Modeling and Generation of Expressive Pop Piano Compositions"", ACM Multimedia 2020"
hellloxiaotian/cfsrcnn,hellloxiaotian/CFSRCNN,"['super-resolution', 'deep-learning', 'low-level-vision', 'cnn', 'deep-neural-networks', 'deep-networks', 'pytorch', 'cnn-pytorch', 'image-processing', 'pytorch-cnn', 'python2', 'python27', 'cascaded-refinement-networks', 'low-resolution', 'high-resolution']","Coarse-to-Fine CNN for Image Super-Resolution (IEEE Transactions on Multimedia,2021)"
whj363636/adversarial-attack-on-person-reid-with-deep-mis-ranking,whj363636/Adversarial-attack-on-Person-ReID-With-Deep-Mis-Ranking,[],"This is a pytorch implementation of the CVPR2020 paper: Transferable, Controllable, and Inconspicuous Adversarial Attacks on Person Re-identification With Deep Mis-Ranking"
lilanxiao/rotated_iou,lilanxiao/Rotated_IoU,"['pytorch', 'rotated-boxes-iou', 'object-detection', 'iou-loss', 'differentiable-iou']",Differentiable IoU of rotated bounding boxes using Pytorch
thstkdgus35/bicubic_pytorch,sanghyun-son/bicubic_pytorch,"['pytorch', 'imageprocessing', 'superresolution']","A PyTorch implementation of widely-used bicubic interpolation, which is fully compatible with MATLAB."
chandlerbang/selftask-gnn,ChandlerBang/SelfTask-GNN,"['graph-neural-networks', 'self-supervised-learning', 'machine-learning', 'deep-learning', 'graph-mining']","Implementation of  paper ""Self-supervised Learning on Graphs:Deep Insights and New Directions"""
shahules786/twitter-sentiment,shahules786/Twitter-Sentiment,"['sentiment-analyzer', 'twitter-domain', 'natural-language-processing', 'pytorch', 'embedding-vectors']",Sentiment analyzer for your tweets.
lingualytics/py-lingualytics,lingualytics/py-lingualytics,"['pytorch', 'pytorch-nlp', 'nlp-library', 'bert', 'nlp']",A text analytics library with support for codemixed data
yingtongdou/care-gnn,YingtongDou/CARE-GNN,"['fraud-detection', 'fraud-prevention', 'security', 'machine-learning', 'graphneuralnetwork', 'deep-learning', 'datamining', 'reinforcement-learning']",Code for CIKM 2020 paper Enhancing Graph Neural Network-based Fraud Detectors against Camouflaged Fraudsters
regenerator/dpf-nets,Regenerator/dpf-nets,"['deep-learning', 'generative-modeling', 'normalizing-flows', 'point-clouds', 'autoencoder', 'reconstruction']",Flow-based generative model for 3D point clouds.
superlouis/gatgnn,superlouis/GATGNN,[],Pytorch Repository for our work: Graph convolutional neural networks with global attention for improved materials property prediction
lromul/gramtion,lRomul/gramtion,"['twitter', 'twitter-bot', 'image-captioning', 'alt-text', 'deep-learning', 'accessibility']",Twitter bot for generating photo descriptions (alt text)
jmribeiro/yaaf,jmribeiro/yaaf,"['autonomous-agents', 'reinforcement-learning', 'deep-learning']",Yet Another Agents Framework - An RL research-oriented framework for agent prototyping and evaluation
kaist-hcil/deepfisheyenet,KAIST-HCIL/DeepFisheyeNet,"['fisheye-camera', 'deep-learning', 'hci', 'paper']",DeepFisheye: Near-Surface Multi-Finger Tracking Technology Using Fisheye Camera (UIST 2020)
codeslake/color_transfer_histogram_analogy,codeslake/Color_Transfer_Histogram_Analogy,"['color-transfer', 'histogram-analogy', 'deep-learning', 'pytorch']","[CGI 2020] Official PyTorch Implementation for ""Deep Color Transfer using Histogram Analogy"""
pyretri/pyretri,PyRetri/PyRetri,"['deep-learning', 'image-retrieval', 'pytorch', 'toolbox']",Open source deep learning based unsupervised image retrieval toolbox built on PyTorch🔥
kenziyuliu/ms-g3d,kenziyuliu/MS-G3D,"['action-recognition', 'pretrained-models', 'deep-learning', 'computer-vision', 'skeleton', 'pytorch']","[CVPR 2020 Oral] PyTorch implementation of ""Disentangling and Unifying Graph Convolutions for Skeleton-Based Action Recognition"""
prakhar21/textaugmentation-gpt2,prakhar21/TextAugmentation-GPT2,"['gpt-2', 'nlp-machine-learning', 'transformer-architecture', 'text-augmentation', 'natural-language-processing', 'natural-language-generation', 'textclassification']",Fine-tuned pre-trained GPT2 for custom topic specific text generation. Such system can be used for Text Augmentation.
ze-yang/context-transformer,Ze-Yang/Context-Transformer,"['few-shot', 'pytorch', 'rfbnet', 'transfer-learning', 'transformer', 'object-detection']","Context-Transformer: Tackling Object Confusion for Few-Shot Detection, AAAI 2020"
leonardo-blanger/detr_tensorflow,Leonardo-Blanger/detr_tensorflow,"['detr', 'object-detection', 'tensorflow']",A Tensorflow implementation of the DETR object detection architecture.
dirtyharrylyl/symnet,DirtyHarryLYL/SymNet,"['attribute-object', 'compositional-zero-shot-learning', 'deep-learning', 'object-recognition']","As a part of the HAKE project (HAKE-Object), code for SymNet (CVPR'20 and TPAMI'21)."
shrubb/latent-pose-reenactment,shrubb/latent-pose-reenactment,"['deep-learning', 'head-reenactment', 'face-reenactment', 'talking-head', 'generative-model', 'pose-estimation', 'landmark-detection', 'facial-landmarks', 'self-supervised-learning', 'voxceleb', 'voxceleb2', 'head-avatar', 'avatar', 'pytorch']","The authors' implementation of the ""Neural Head Reenactment with Latent Pose Descriptors"" (CVPR 2020) paper."
deepbrains/tsception,deepBrains/TSception,"['deep-learning', 'eeg', 'emotion-recognition', 'time-series']",PyTorch implementation of TSception
shuhanchen/ras-pytorch,ShuhanChen/RAS-pytorch,[],Pytorch code for our  TIP20 paper: Reverse Attention Based Residual Network for Salient Object Detection..
kamalesh0406/audio-classification,kamalesh0406/Audio-Classification,[],"Pytorch code for ""Rethinking CNN Models for Audio Classification"""
osamhack2020/iot_covid19-detector_co-vision,osamhack2020/IoT_COVID19-Detector_CO-vision,"['iot', 'osam', 'raspberry-pi', 'deep-learning', 'opencv', 'python', 'flir-lepton', 'tensorflow', 'keras', 'face-mask-detection', 'telegram-bot']", Identify and Alert people at risk of COVID-19 infection in REAL-TIME using raspberry-pi.
radioactive11/alpr-india,radioactive11/ALPR-India,"['cnn', 'opencv', 'pytesseract-ocr']",Detect and scan the license plate number from vehicle images
kwotsin/mimicry,kwotsin/mimicry,"['generative-adversarial-networks', 'gans', 'reproducibility', 'pytorch', 'generative-models', 'machine-learning', 'gan', 'sngan', 'sngan-projection', 'wgan-gp', 'ssgan', 'dcgan', 'infomax-gan', 'cgan', 'cvpr', 'python', 'cvpr2020', 'cvpr20']",[CVPR 2020 Workshop] A PyTorch GAN library that reproduces research results for popular GANs.
haofanwang/score-cam,haofanwang/Score-CAM,"['score-cam', 'cam', 'cnn-visualization-technique', 'saliency', 'cnn-visualization', 'pytorch', 'visual-explanations', 'explainability', 'class-activation-maps', 'gradient-free', 'heatmap', 'scorecam', 'grad-cam', 'gradcam']",Official implementation of Score-CAM in PyTorch
jasonwu0731/tod-bert,jasonwu0731/ToD-BERT,"['task-oriented-dialogues', 'dialogue', 'pretrained-models', 'natural-language-processing', 'natural-language-understanding', 'bert']",Pre-Trained Models for ToD-BERT
leedoyup/fixmatch-pytorch,LeeDoYup/FixMatch-pytorch,[],"Unofficial Pytorch code for  ""FixMatch: Simplifying Semi-Supervised Learning with Consistency and Confidence"" in NeurIPS'20. This repo contains reproduced checkpoints."
breizhn/dtln,breizhn/DTLN,"['noise-reduction', 'deep-learning', 'audio', 'real-time-audio', 'audio-processing', 'noise-suppression', 'tensorflow', 'dns-challenge', 'dtln-model', 'speech-denoising', 'speech-processing', 'speech-enhancement', 'keras', 'tf-lite', 'raspberry-pi', 'onnx']","Tensorflow 2.x implementation of the DTLN real time speech denoising model. With TF-lite, ONNX and real-time audio processing support."
chenzhaowei13/light-condition-style-transfer,Chenzhaowei13/Light-Condition-Style-Transfer,"['lane-detection', 'instance-segmentation', 'culane', 'light-conditions', 'deep-learning', 'self-driving-car', 'lane-lines-detection', 'data-enhancement']",Lane Detection in Low-light Conditions Using an Efficient Data Enhancement : Light Conditions Style Transfer (IV 2020)
taishi-i/toiro,taishi-i/toiro,"['nlp', 'natural-language-processing', 'japanese', 'bert', 'word-segmentation', 'nlp-library']",A comparison tool of Japanese tokenizers
gmvandeven/brain-inspired-replay,GMvandeVen/brain-inspired-replay,"['continual-learning', 'lifelong-learning', 'incremental-learning', 'generative-replay', 'brain-inspired', 'deep-learning', 'artificial-neural-networks', 'split-mnist', 'permuted-mnist', 'split-cifar100', 'internal-replay', 'replay-through-feedback', 'replay', 'synaptic-intelligence', 'elastic-weight-consolidation', 'variational-autoencoder', 'distillation']","A brain-inspired version of generative replay for continual learning with deep neural networks (e.g., class-incremental learning on CIFAR-100; PyTorch code)."
monologg/hanbert-transformers,monologg/HanBert-Transformers,"['hanbert', 'transformers', 'pytorch', 'bert', 'korean-nlp']",HanBert on 🤗 Huggingface Transformers 🤗
medelman17/blackstone-api,medelman17/blackstone-api,"['legaltech', 'nlp', 'microservice']","Blackstone is a spaCy model and library for processing long-form, unstructured legal text. Here, we wrap Blackstone with a performant API layer written in Go."
hengyicai/contrastivelearning4dialogue,hengyicai/ContrastiveLearning4Dialogue,"['dialog', 'pytorch', 'parlai', 'conversational-ai', 'contrastive-learning']","The codebase for ""Group-wise Contrastive Learning for Neural Dialogue Generation"" (Cai et al., Findings of EMNLP 2020)"
wangcongcong123/ttt,wangcongcong123/ttt,"['transformers', 'tpus', 'tensorflow2', 'nlp', 't5']","A package for fine-tuning Transformers with TPUs, written in Tensorflow2.0+"
subhadityamukherjee/pytorchtutorialrepo,SubhadityaMukherjee/pytorchTutorialRepo,"['pytorch', 'tutorials', 'easy-to-use']",Unified/Standardized pytorch tutorials
shanesmiskol/konverter,sshane/Konverter,"['keras-tensorflow', 'neural-networks', 'model-converter', 'keras', 'python', 'tensorflow']",Convert simple Keras models to pure Python 🐍+ NumPy
naszilla/nas-encodings,naszilla/nas-encodings,"['automl', 'nas', 'nasbench', 'deep-learning', 'automl-algorithms', 'automl-experiments', 'neural-architecture-search', 'tensorflow', 'pytorch']",Encodings for neural architecture search
baiksung/alfa,baiksung/ALFA,"['maml', 'pytorch', 'meta-learning', 'deep-learning', 'machine-learning', 'few-shot-learning', 'neurips', 'neurips-2020']","Source code for NeurIPS 2020 paper ""Meta-Learning with Adaptive Hyperparameters"""
aserdega/convlstmgru,aserdega/convlstmgru,"['convlstm', 'convgru', 'pytorch', 'video-prediction', 'moving-mnist', 'bouncing-mnist', 'seq-to-seq', 'encoder-decoder']",Pytorch implementations of ConvLSTM and ConvGRU modules with examples
yule-buaa/dnntsp,yule-BUAA/DNNTSP,"['data-minig', 'deep-learning', 'temporal-sets-prediction', 'temporal-data']",codes of DNNTSP model for Temporal Sets Prediction
sanweiliti/place,sanweiliti/PLACE,"['human-scene-interaction', '3d-human-mesh', '3d-scenes', 'pytorch']","Official Pytorch implementation for 2020 3DV paper ""PLACE: Proximity Learning of Articulation and Contact in 3D Environments"" and trained models"
jesseyule/objectdetection-yolov3,JesseYule/ObjectDetection-YOLOv3,[],面向华为Atlas500的实时目标检测（YOLOv3，tensorflow实现）
davidiommi/pytorch-unet3d-single_channel,davidiommi/Pytorch-Unet3D-single_channel,[],3D-Unet: patched based Pytorch implementation for medical images segmentation
deliton/idt,deliton/idt,"['deep-learning', 'duckgo', 'search-engine', 'mount', 'idt', 'download', 'download-images', 'flickr-api', 'bing', 'bing-api', 'scraping', 'scraping-web', 'image-datasets', 'image-download', 'download-dataset']",Image Dataset Tool (idt) is a cli tool designed to make the otherwise repetitive and slow task of creating image datasets into a fast and intuitive process.
kumapowerliu/rethinking-inpainting-medfe,KumapowerLIU/Rethinking-Inpainting-MEDFE,"['inpainting', 'activation-functions', 'generative-adversarial-network', 'eccv-2020']",Rethinking Image Inpainting via a Mutual Encoder Decoder with Feature Equalizations. ECCV 2020 Oral
saic-mdal/deep-landscape,saic-mdal/deep-landscape,"['deep-learning', 'gan', 'generative-adversarial-network', 'video-generation', 'reenactment']","Official repository for the paper ""DeepLandscape: Adversarial Modeling of Landscape Videos"" (ECCV2020)"
aaltovision/hscnet,AaltoVision/hscnet,"['pytorch', 'computer-vision', 'visual-localization', 'camera-relocalization']",Hierarchical Scene Coordinate Classification and Regression for Visual Localization 
lucidrains/aoa-pytorch,lucidrains/AoA-pytorch,"['attention', 'attention-mechanism', 'vqa', 'visual-question-answering', 'captioning']","A Pytorch implementation of Attention on Attention module (both self and guided variants), for Visual Question Answering"
jbakermans/torch_tem,jbakermans/torch_tem,[],Implementation of the Tolman Eichenbaum Machine in pytorch
textdatasetcleaner/textdatasetcleaner,TextDatasetCleaner/TextDatasetCleaner,"['natural-language-processing', 'nlp', 'text-analytics', 'preprocessing', 'machine-learning', 'normalization', 'linguistics', 'text-processing', 'text-mining', 'hacktoberfest', 'hactoberfest2021']","🔬 Очистка датасетов от мусора (нормализация, препроцессинг)"
yistlin/universal-vocoder,yistLin/universal-vocoder,"['neural-vocoder', 'vocoder', 'torchscript', 'pytorch']",A PyTorch implementation of the universal neural vocoder
charliedinh/fedl_pytorch,CharlieDinh/FEDL_pytorch,"['pytorch', 'federated-learning', 'second-order-optimization', 'fedl']",This repository implements FEDL using pytorch
bmycheez/c3net,bmycheez/C3Net,"['pytorch', 'demoireing', 'ntire2020', 'cvpr2020', 'python', 'moire', 'channel-attention', 'loss-functions', 'sangmin-kim']","C3Net: Demoireing Network Attentive in Channel, Color and Concatenation (CVPRW 2020)"
menghuanlater/tianchi2020chinesemedicinener,menghuanlater/Tianchi2020ChineseMedicineNER,"['pytorch', 'roberta', 'machine-reading-comprehension', 'named-entity-recognition']",2020阿里云天池大数据竞赛-中医药命名实体识别挑战赛
zxz7/zfundpredictor,ZxZ7/ZFundPredictor,"['lstm', 'fund', 'stock', 'price-prediction', 'web-scraping', 'deep-learning']","A Fund Price Prediction Framework (LSTM-based, web scraping included) 天天基金网爬虫+基金预测"
coder-nlper/chinese-ner-tf2,Coder-nlper/chinese-ner-tf2,[],中文ner模型使用tensorflow2.1构建
mgarcher/text_select_captcha,MgArcher/Text_select_captcha,[],pytorch实现文字点选、选字、选择文字验证码识别
mit-han-lab/hardware-aware-transformers,mit-han-lab/hardware-aware-transformers,"['hardware-aware', 'transformer', 'specialization', 'efficient-model', 'natural-language-processing', 'machine-translation']",[ACL'20] HAT: Hardware-Aware Transformers for Efficient Natural Language Processing
dvl-tum/mot_neural_solver,dvl-tum/mot_neural_solver,"['multi-object-tracking', 'graph-neural-networks', 'pytorch']","Official PyTorch implementation of ""Learning a Neural Solver for Multiple Object Tracking"" (CVPR 2020 Oral)."
awslabs/mlm-scoring,awslabs/mlm-scoring,"['language-model', 'nlp', 'speech-recognition', 'pytorch', 'mxnet', 'bert', 'xlm']",Python library & examples for Masked Language Model Scoring (ACL 2020)
lucidrains/unet-stylegan2,lucidrains/unet-stylegan2,"['artificial-intelligence', 'deep-learning', 'generative-adversarial-network', 'u-net']",A Pytorch implementation of Stylegan2 with UNet Discriminator
intuit/fawkes,intuit/fawkes,"['user-reviews', 'categorization', 'deep-learning', 'machine-learning', 'sentiment-analysis', 'summarization', 'python', 'hacktoberfest', 'fawkes', 'tensorflow']","🚀🚀  Fetch, parse, categorize, summarize user reviews 🚀🚀"
sleepychord/cogltx,Sleepychord/CogLTX,"['bert', 'pytorch']","The source code of NeurIPS 2020 paper ""CogLTX: Applying BERT to Long Texts"""
ternaus/cloths_segmentation,ternaus/cloths_segmentation,"['deep-learning', 'computer-vision', 'image-segmentation']",Code for binary segmentation of cloths
yzhangcs/crfpar,yzhangcs/crfpar,"['pytorch', 'treecrf', 'dependency-parsing', 'constituency-parsing', 'acl2020', 'ijcai2020']","[ACL'20, IJCAI'20] Code for ""Efficient Second-Order TreeCRF for Neural Dependency Parsing"" and ""Fast and Accurate Neural CRF Constituency Parsing""."
bogihsu/wg-wavenet,BogiHsu/WG-WaveNet,"['speech-synthesis', 'neural-vocoder', 'waveglow', 'wavenet', 'wg-wavenet', 'pytorch', 'tts', 'vocoder', 'realtime']",Real-Time High-Fidelity Speech Synthesis without GPU
hoytta0/knowledgedistillation,HoyTta0/KnowledgeDistillation,"['knowledge-distillation', 'bert', 'pytorch', 'model-compression', 'distillation']",Knowledge distillation in text classification with pytorch. 知识蒸馏，中文文本分类，教师模型BERT、XLNET，学生模型biLSTM。
chriswu1997/multimodal-shape-completion,ChrisWu1997/Multimodal-Shape-Completion,"['eccv-2020', 'shape-completion', 'computer-vision', 'deep-learning', 'computer-graphics']","code for our ECCV 2020 spotlight paper ""Multimodal Shape Completion via Conditional Generative Adversarial Networks"""
feymanpriv/pymetric,feymanpriv/pymetric,"['metric-learning', 'classification', 'pytorch', 'retrieval']",pytorch metric learning tools and pycls
bigpon/qppwg,bigpon/QPPWG,"['speech-synthesis', 'neural-vocoder', 'wavenet', 'parallel-wavenet-vocoder', 'pytorch', 'real-time']",Quasi-Periodic Parallel WaveGAN Pytorch implementation
otaheri/mano,otaheri/MANO,"['hand', 'hand-modeling', 'human-hand-model', 'mano', '3d-viewer', 'pytorch']",A PyTorch Implementation of MANO hand model.
ternaus/midv-500-models,ternaus/midv-500-models,"['deep-learning', 'computer-vision', 'semantic-segmentation', 'image-segmentation', 'document-scanner', 'pytorch', 'python']",Model for document segmentation trained on the midv-500-models dataset.
yashsmehta/personality-prediction,yashsmehta/personality-prediction,"['language-model', 'personality-predicting', 'pytorch', 'bert-fine-tuning', 'personality-detection']",Experiments for automated personality detection using Language Models and psycholinguistic features on various famous personality datasets including the Essays dataset (Big-Five)
davidalami/convert,davidalami/ConveRT,"['nlp', 'natural-language-processing', 'natural-language-understanding', 'tensorflow']",Dual Encoders for State-of-the-art Natural Language Processing.
nguyenvo09/emnlp2020,nguyenvo09/EMNLP2020,"['pytorch', 'fact-checking', 'information-retrieval', 'learning-to-rank', 'fake-news-detection', 'emnlp2020']","This is official Pytorch code and datasets of the paper ""Where Are the Facts? Searching for Fact-checked Information to Alleviate the Spread of Fake News"", EMNLP 2020. "
alinajafi1998/comstream,AliNajafi1998/ComStream,"['nlp', 'topic-detection', 'multi-agent', 'data-stream', 'elixir', 'clustering-algorithm', 'labse']","In this project, we implemented a topic detection system on Twitter. This system reads tweets from a data stream and assigns them to one of the existing clusters or a new one. Each cluster acts as an agent, which makes the proposed approach a multi-agent system. There is also a coordinator, who monitors the whole system and coordinates the agent."
wjddn279/deeplearning_mimo-noma,wjddn279/DeepLearning_MIMO-NOMA,"['mimo', 'noma', 'deep-learning', 'communication']","Realization of MIMO-NOMA signal detection system based on **C. Lin et al., “A deep learning approach for MIMO-NOMA downlink signal detection,” MDPI Sensors, vol. 19, no. 11, pp. 2526, 2019."
tinglok/cvc,Tinglok/CVC,"['voice-conversion', 'speech', 'pytorch', 'cyclegan', 'contrastive-learning']","CVC: Contrastive Learning for Non-parallel Voice Conversion (INTERSPEECH 2021, in PyTorch)"
cfzd/ultra-fast-lane-detection,cfzd/Ultra-Fast-Lane-Detection,"['lane-detection', 'autonomous-driving', 'lane-detector', 'lane-finding', 'road-detection', 'autonomous-vehicles', 'cnn', 'pytorch']",Ultra Fast Structure-aware Deep Lane Detection (ECCV 2020)
sangwoomo/freezed,sangwoomo/FreezeD,"['generative-models', 'generative-adversarial-network', 'transfer-learning', 'gan']",Freeze the Discriminator: a Simple Baseline for Fine-Tuning GANs (CVPRW 2020)
labteral/ernie,labteral/ernie,"['bert', 'roberta', 'albert', 'distilbert', 'tensorflow', 'keras', 'tensorflow2', 'nlp', 'sentence-classification', 'transformers', 'huggingface', 'bert-model', 'bert-models', 'bert-as-service', 'bert-embeddings', 'huggingface-transformer', 'transformer-architecture', 'transformer-tensorflow2', 'natural-language-processing']",Simple State-of-the-Art BERT-Based Sentence Classification with Keras / TensorFlow 2. Built with HuggingFace's Transformers.
kevinlu1248/pyate,kevinlu1248/pyate,"['nlp', 'term-extraction', 'ai', 'symbolic-ai']",PYthon Automated Term Extraction
ziweiwangthu/bidet,ZiweiWangTHU/BiDet,[],"This is the official pytorch implementation for paper: BiDet: An Efficient Binarized Object Detector, which is accepted by CVPR2020. "
milleniums/high-resolution-remote-sensing-semantic-segmentation-pytorch,milleniums/High-Resolution-Remote-Sensing-Semantic-Segmentation-PyTorch,"['remote-sensing', 'dataset', 'land-cover-classification', 'semantic-segmentation', 'deeplabv3', 'pytorch']",PyTorch实现高分遥感语义分割（地物分类）
davda54/ada-hessian,davda54/ada-hessian,"['adahessian', 'hessian', 'optimizer', 'pytorch', 'second-order', 'adam']",Easy-to-use AdaHessian optimizer (PyTorch)
swapniljadhav1921/asamiasami,swapniljadhav1921/asamiasami,"['nlp', 'ai', 'indic-languages', 'machine-learning', 'bert', 'deep-learning', 'fairseq', 'nmt', 'neural-machine-translation', 'nsfw-detection', 'language-detection']",State-Of-The-Art & ready to use mini NLP models for Indian Languages
bubbliiiing/retinaface-pytorch,bubbliiiing/retinaface-pytorch,[],这是一个retinaface-pytorch的源码，可以用于训练自己的模型。
bubbliiiing/pspnet-pytorch,bubbliiiing/pspnet-pytorch,[],这是一个pspnet-pytorch的源码，可以用于训练自己的模型。
rangilyu/mobilenext,RangiLyu/mobilenext,"['deep-neural-networks', 'pytorch', 'mobilenet']",non-official PyTorch implementation of MobileNeXt from paper [Rethinking Bottleneck Structure for Efficient Mobile Network Design]
trojai/trojai,trojai/trojai,"['deep-learning', 'deep-neural-networks', 'deep-reinforcement-learning', 'adversarial-machine-learning', 'poisoning-attack']",A repository to quickly generate synthetic data and associated trojaned deep learning models
xuyangbai/d3feat.pytorch,XuyangBai/D3Feat.pytorch,"['pointcloud', 'registration', '3d', 'pytorch', 'descriptor']",[PyTorch] Official Implementation of CVPR'20 oral paper - D3Feat: Joint Learning of Dense Detection and Description of 3D Local Features https://arxiv.org/abs/2003.03164
joelcthomas/ml-azuredatabricks,joelcthomas/ml-azuredatabricks,"['azure', 'databricks', 'machine-learning', 'deep-learning', 'mlflow']",Collection of Machine Learning Examples for Azure Databricks
mswzeus/plus,mswzeus/PLUS,"['plus', 'protein-transfer-learning', 'pytorch']","Official Pytorch implementation of PLUS (Protein sequence representations Learned Using Structural information), IEEE Access 2021"
bubbliiiing/retinanet-pytorch,bubbliiiing/retinanet-pytorch,[],这是一个retinanet-pytorch的源码，可以用于训练自己的模型。
pmixer/sasrec.pytorch,pmixer/SASRec.pytorch,"['pytorch', 'recommender-system', 'sasrec', 'sequential-models']",PyTorch(1.6+) implementation of https://github.com/kang205/SASRec
vasilescur/parse_context,vasilescur/parse_context,"['gpt-3', 'ai', 'natural-language', 'nlp', 'semantic-analysis', 'assistants']","Use GPT-3 to process human conversations and extract context, identify information that would be useful, and suggest data sources to get that information. Intended for a voice assistant."
easoncai-dev/torch_backbones,Cai-Yichao/torch_backbones,"['backbones', 'backbone-cnns', 'pytorch']",Unofficial implementations of some classical  CNN backbones with pytorch
johncai117/meta-fine-tuning,johncai117/Meta-Fine-Tuning,"['gnn', 'meta-fine-tuning', 'few-shot-learning', 'computer-vision', 'deep-learning', 'cvpr', 'cvpr2020', 'transfer-learning', 'meta-learning-algorithm']",[CVPR 2020 VL3] The repository for meta fine-tuning in cross-domain few-shot learning.
oke-aditya/pytorch_paper_implementations,oke-aditya/pytorch_paper_implementations,"['pytorch', 'implementation-of-research-paper', 'deep-learning', 'deep-learning-papers']",Deep Learning Paper Implementations in PyTorch
tuvovan/vision_transformer_keras,tuvovan/Vision_Transformer_Keras,"['transformer', 'computer-vision', 'image-recognition', 'vision', 'keras', 'tensorflow']",Keras Implementation of Vision Transformer (An Image is Worth 16x16 Words: Transformers for Image Recognition at Scale)
bubbliiiing/unet-keras,bubbliiiing/unet-keras,[],这是一个unet-keras的源码，可以用于训练自己的模型。
google-research/big_transfer,google-research/big_transfer,"['deep-learning', 'convolutional-neural-networks', 'imagenet', 'tensorflow2', 'jax', 'pytorch', 'transfer-learning']","Official repository for the ""Big Transfer (BiT): General Visual Representation Learning"" paper."
chonyy/ai-basketball-analysis,chonyy/AI-basketball-analysis,"['basketball', 'machine-learning', 'tensorflow', 'api', 'computer-vision', 'object-detection', 'artificial-intelligence', 'openpose', 'deep-learning', 'pose-estimation', 'yolo', 'yolov4']",:basketball::robot::basketball: AI web app and API to analyze basketball shots and shooting pose.
hellohaptik/multi-task-nlp,hellohaptik/multi-task-NLP,"['pytorch', 'multitask-learning', 'sentence-classification', 'sequence-labeling', 'entailment', 'ranking', 'intent-classification', 'named-entity-recognition', 'machine-comprehension', 'context-awareness', 'transformers', 'nlp', 'nlp-library', 'nli-tasks', 'nlp-datasets', 'nlp-apis']",multi_task_NLP is a utility toolkit enabling NLP developers to easily train and infer a single model for multiple tasks.
lturing/tacotronv2_wavernn_chinese,lturing/tacotronv2_wavernn_chinese,[],tacotronV2 + wavernn 实现中文语音合成(Tensorflow + pytorch) 
tjddus9597/proxy-anchor-cvpr2020,tjddus9597/Proxy-Anchor-CVPR2020,"['proxy-anchor-loss', 'cvpr2020', 'deep-metric-learning', 'image-retrieval', 'pytorch']","Official PyTorch Implementation of Proxy Anchor Loss for Deep Metric Learning, CVPR 2020"
peteryux/retinaface-tf2,peteryuX/retinaface-tf2,"['facedetection', 'face-detection', 'retinaface', 'retinaface-detector', 'tensorflow', 'tensorflow2', 'tf2', 'resnet-50', 'mobilenetv2', 'colab-notebook', 'colab']","RetinaFace (Single-stage Dense Face Localisation in the Wild, 2019) implemented (ResNet50, MobileNetV2 trained on single GPU) in Tensorflow 2.0+. This is an unofficial implementation. With Colab."
zilliztech/phantoscope,zilliztech/phantoscope,"['deep-learning', 'deep-neural-networks', 'machine-learning', 'cloud-native', 'image-search', 'microservices', 'milvus']","Open Source, Cloud Native, RESTful Search Engine Powered by Neural Networks  "
yongzhuo/macadam,yongzhuo/Macadam,"['tensorflow', 'keras', 'bert', 'sequence-labeling', 'text-classification', 'relation-extraction', 'embedding', 'ner', 'python3']",Macadam是一个以Tensorflow(Keras)和bert4keras为基础，专注于文本分类、序列标注和关系抽取的自然语言处理工具包。支持RANDOM、WORD2VEC、FASTTEXT、BERT、ALBERT、ROBERTA、NEZHA、XLNET、ELECTRA、GPT-2等EMBEDDING嵌入;     支持FineTune、FastText、TextCNN、CharCNN、BiRNN、RCNN、DCNN、CRNN、DeepMoji、SelfAttention、HAN、Capsule等文本分类算法;      支持CRF、Bi-LSTM-CRF、CNN-LSTM、DGCNN、Bi-LSTM-LAN、Lattice-LSTM-Batch、MRC等序列标注算法。
toshas/torch-fidelity,toshas/torch-fidelity,"['pytorch', 'metrics', 'gan', 'generative-model', 'evaluation', 'inception-score', 'frechet-inception-distance', 'kernel-inception-distance', 'perceptual-path-length', 'precision', 'reproducibility', 'reproducible-research']",High-fidelity performance metrics for generative models in PyTorch
shathe/3d-mininet,Shathe/3D-MiniNet,[],Official Implementation in Pytorch and Tensorflow of 3D-MiniNet: Learning a 2D Representation from Point Clouds for Fast and Efficient 3D LIDAR Semantic Segmentation
kaushikjadhav01/stock-market-prediction-web-app-using-machine-learning-and-sentiment-analysis,kaushikjadhav01/Stock-Market-Prediction-Web-App-using-Machine-Learning-And-Sentiment-Analysis,"['stock-market', 'stock-price-prediction', 'flask', 'twitter', 'tweepy', 'sentiment-analysis', 'machine-learning', 'arima', 'lstm', 'linear-regression', 'python', 'yfinance', 'alphavantage', 'keras', 'tensorflow', 'wordpress']","Stock Market Prediction Web App based on Machine Learning and Sentiment Analysis of Tweets (API keys included in code). The front end of the Web App is based on Flask and Wordpress. The App forecasts stock prices of the next seven days for any given stock under NASDAQ or NSE as input by the user. Predictions are made using three algorithms: ARIMA, LSTM, Linear Regression. The Web App combines the predicted prices of the next seven days with the sentiment analysis of tweets to give recommendation whether the price is going to rise or fall"
svjan5/kg-reeval,svjan5/kg-reeval,"['acl2020', 'knowledge-graph', 'knowledge-graph-completion', 'deep-learning']",ACL 2020: A Re-evaluation of Knowledge Graph Completion Methods
clovaai/symmetrical-synthesis,clovaai/symmetrical-synthesis,"['metric-learning', 'image-retrieval', 'image-clustering', 'deep-learning', 'synthesis', 'cars196', 'stanford-online-products', 'cub200-2011', 'aaai2020', 'tensorflow']","Official Tensorflow implementation of ""Symmetrical Synthesis for Deep Metric Learning"" (AAAI 2020)"
y-kawagu/dcase2020_task2_baseline,y-kawagu/dcase2020_task2_baseline,"['audio-signal-processing', 'anomaly-detection', 'acoustic-scene-classification', 'machine-learning', 'unsupervised-learning', 'dcase2020', 'dcase', 'signal-processing', 'machine-listening', 'fault-detection', 'sound', 'deep-learning', 'audio-classification', 'autoencoder', 'audio']",DCASE2020 Challenge Task 2 baseline system
xwhan/proqa,xwhan/ProQA,"['natural-language-processing', 'question-answering', 'pytorch', 'information-retrieval']",Progressively Pretrained Dense Corpus Index for Open-Domain QA and Information Retrieval
slseanwu/jazz_transformer,slSeanWU/jazz_transformer,"['ai-music', 'jazz', 'transformer', 'python3', 'tensorflow']","Transformer-XL for Jazz music composition. Paper: ""The Jazz Transformer on the Front Line: Exploring the Shortcomings of AI-Composed Music through Quantitative Measures"", ISMIR 2020"
bdsaglam/torch-scae,bdsaglam/torch-scae,"['deep-learning', 'capsule-network', 'pytorch', 'computer-vision']",PyTorch implementation of Stacked Capsule Auto-Encoders
parkseobin/mlsr,parkseobin/MLSR,"['super-resolution', 'meta-learning', 'deep-learning', 'tensorflow']","Source code for ECCV2020 ""Fast Adaptation to Super-Resolution Networks via Meta-Learning"""
lucidrains/memformer,lucidrains/memformer,"['artificial-intelligence', 'transformers', 'attention-mechanism', 'memory']","Implementation of Memformer, a Memory-augmented Transformer, in Pytorch"
frankkramer-lab/covid19.miscnn,frankkramer-lab/covid19.MIScnn,"['covid-19', 'medical-image-analysis', 'covid-19-ct', 'segmentation', 'pneumonia', 'lung-disease', 'infection', '3d-unet', 'lung-segmentation', 'medical-imaging', 'lung-lobes', 'computer-vision', 'u-net', 'healthcare-imaging', 'deep-learning', 'tensorflow', 'medical-image-processing']",Robust Chest CT Image Segmentation of COVID-19 Lung Infection based on limited data
akanyaani/ranknet-tensorflow2.0,akanyaani/ranknet-tensorflow2.0,"['ranknet', 'lambdarank', 'ltr', 'learning-to-rank', 'tensorflow', 'tensorflow2']",Implementation of RankNet to LambdaRank in TensorFlow 2.0
stijnverdenius/snip-it,StijnVerdenius/SNIP-it,"['machine-learning', 'deep-learning', 'pruning', 'structured-pruning', 'unstructured-pruning', 'structured-pruning-before-training', 'artificial-intelligence', 'neural-networks', 'model-compression', 'science', 'science-research', 'computer-vision', 'publication', 'speedup']","This repository is the official implementation of the paper Pruning via Iterative Ranking of Sensitivity Statistics and implements novel pruning / compression algorithms for deep learning / neural networks. Amongst others it implements structured pruning before training, its actual parameter shrinking and unstructured before/during training. "
filippoaleotti/reversing,FilippoAleotti/Reversing,"['stereo-matching', 'monocular-depth-estimation', 'computer-vision', 'deep-learning', 'eccv-2020']","Code for ""Reversing the cycle: self-supervised deep stereo through enhanced monocular distillation"""
jramapuram/byol,jramapuram/BYOL,[],Bootstrap Your Own Latent (BYOL) pytorch implementation using DistributedDataParallel.
thetobysiu/deepstory,thetobysiu/deepstory,"['pytorch', 'dctts', 'dc-tts', 'deep-learning', 'jquery', 'flask', 'gpt-2', 'gpt2', 'witcher-3', 'witcher3', 'deep-fake', 'fan-fiction']", Deepstory turns a text/generated text into a video where the character is animated to speak your story using his/her voice.
google-research/pisac,google-research/pisac,"['reinforcement-learning', 'robotics', 'deep-learning', 'machine-learning', 'deep-reinforcement-learning', 'information-theory', 'vision']","Tensorflow 2 source code for the PI-SAC agent from ""Predictive Information Accelerates Learning in RL"" (NeurIPS 2020)"
hltchkust/caire-covid,HLTCHKUST/CAiRE-COVID,"['question-answering', 'qa', 'summarization', 'search-engine', 'nlp', 'kaggle']",A machine learning-based system that uses state-of-the-art natural language processing (NLP) question answering (QA) techniques combined with summarization for mining the available scientific literature
nauyan/segmentation,nauyan/Segmentation,"['segmentation', 'medical-imaging', 'deep-learning', 'keras', 'tensorflow', 'segnet', 'u-net', 'deeplabv3']",Contains code for Semantic Segmentation of MoNuSeg 2018 challenge.
zaynmi/seada-vqa,zaynmi/seada-vqa,[],A pytorch implemetation of data augmentation method for visual question answering
sforaidl/decepticonlp,SforAiDl/decepticonlp,"['natural-language-processing', 'adversarial-attacks', 'deep-learning', 'robust-optimization', 'text-processing', 'python']",Python Library for Robustness Monitoring and Adversarial Debugging of NLP models
jramapuram/simclr,jramapuram/SimCLR,[],SimCLR pytorch implementation using DistributedDataParallel.
abd-shoumik/face-mask-detector,abd-shoumik/Face-Mask-detector,"['mask', 'facemask-detection', 'deep-learning', 'computer-vision', 'face-mask', 'face-mask-detector', 'real-time-detection', 'image-classification', 'opencv', 'keras']","It can detect face mask from images and real time videos.(VGG 16,OPENCV & KERAS)"
zyjacya-in-love/pedestrian-detection-on-yolov3_research-and-app,Zyjacya-In-love/Pedestrian-Detection-on-YOLOv3_Research-and-APP,"['keras-train', 'model-evaluation', 'data-convert', 'detection', 'yolov3', 'model-weights', 'flask']",":mortar_board: 2020 Undergraduate Graduation Project in Jiangnan University ALL codes including Data-convert, keras-Train, model-Evaluate and Web-App"
samuelkim314/deepsymreg,samuelkim314/DeepSymReg,"['deep-learning', 'equation-discovery', 'neural-network', 'symbolic-regression']","Official repository for the paper ""Integration of Neural Network-Based Symbolic Regression in Deep Learning for Scientific Discovery"""
nauyan/zindiweekends_spotthemaskchallenge,nauyan/ZindiWeekends_SpotTheMaskChallenge,"['deep-learning', 'deep-neural-networks', 'machine-learning', 'keras-tensorflow', 'keras', 'keras-models', 'tensorflow', 'cuda', 'cud', 'classification', 'challenge', 'hackathon', 'zindi', 'opencv', 'python']",Contains code that I had used for participation at Spot the Mask Challenge by #ZindiWeekendz and achieved 9th (Top 6%) position.
ertis-research/kafka-ml,ertis-research/kafka-ml,"['kafka', 'machine-learning', 'kubernetes', 'tensorflow', 'docker', 'data-stream', 'iot', 'keras-tensorflow', 'gpu-acceleration', 'deep-learning', 'keras', 'pytorch']",Kafka-ML: connecting the data stream with ML/AI frameworks (now TensorFlow and PyTorch!)
maudzung/ttnet-real-time-analysis-system-for-table-tennis-pytorch,maudzung/TTNet-Real-time-Analysis-System-for-Table-Tennis-Pytorch,"['ttnet', 'pytorch', 'tabletennis', 'sport-analytics', 'multi-task-learning', 'dice-loss', 'distributed-data-parallel', 'table-tennis', 'segmentation', 'spatial-video-analysis', 'event-spotting', 'event-detection']","Unofficial implementation of ""TTNet: Real-time temporal and spatial video analysis of table tennis"" (CVPR 2020)"
alibaba-research/chineseblue,alibaba-research/ChineseBLUE,"['benchmark', 'bert', 'chinese', 'biomedical', 'medical', 'natural-language-processing']",Chinese Biomedical Language Understanding Evaluation benchmark (ChineseBLUE)
doccano/doccano-transformer,doccano/doccano-transformer,"['conll', 'annotation', 'dataset', 'machine-learning', 'natural-language-processing', 'doccano']",The official tool for transforming doccano format into common dataset formats.
inmoonlight/detox,inmoonlight/detox,"['hate-speech-detection', 'korean-nlp', 'korean', 'nlp']",Korean Hate Speech Detection Model
shoarora/transformers-trainers,shoarora/transformers-trainers,[],Tools for training pytorch language models
yashk2000/sneakysketchers,yashk2000/SneakySketchers,"['python3', 'pyqt5', 'pyqt5-desktop-application', 'jupyter-notebook', 'inpainting', 'image-inpainting', 'computer-vision', 'pytorch', 'desktop-application', 'sneaky-sketchers', 'google-colab', 'opencv-python']",A python desktop application that allows you to do image inpainting by directly drawing on it. 
nvidia-ai-iot/ros2_torch_trt,NVIDIA-AI-IOT/ros2_torch_trt,"['ros2', 'robotics', 'pytorch', 'tensorrt', 'real-time', 'jetson', 'deep-learning', 'ai-iot', 'object-detection', 'resnet-18', 'classification-model', 'ssd-mobilenet']",ROS 2 packages for PyTorch and TensorRT for real-time classification and object detection on Jetson Platforms
twni2016/f-irl,twni2016/f-IRL,"['imitation-learning', 'deep-reinforcement-learning', 'inverse-reinforcement-learning', 'maxent', 'pytorch', 'mujoco']",Inverse Reinforcement Learning via State Marginal Matching - CoRL 2020
peterh0323/smart_construction,PeterH0323/Smart_Construction,"['yolov5', 'helmet', 'pytorch', 'python', 'detection', 'object-detection']",Head Person Helmet Detection on Construction Sites，基于目标检测工地安全帽和禁入危险区域识别系统，🚀😆附 YOLOv5 训练自己的数据集超详细教程🚀😆2021.3新增可视化界面❗❗
jankrepl/mltype,jankrepl/mltype,"['typing-practice', 'typing', 'typingspeedtest', 'typing-trainer', 'machine-learning', 'deep-learning', 'touch-typing']",Command line tool for improving typing skills (programmers friendly)
lucidrains/hamburger-pytorch,lucidrains/hamburger-pytorch,"['artificial-intelligence', 'deep-learning', 'matrix-decomposition']","Pytorch implementation of the hamburger module from the ICLR 2021 paper ""Is Attention Better Than Matrix Decomposition"""
hli1221/imagefusion-nestfuse,hli1221/imagefusion-nestfuse,"['imagefusion', 'deep-learning', 'nest-connection', 'pytorch']",NestFuse (IEEE TIM 2020)- Pytorch >= 0.4.1
daiquocnguyen/quatre,daiquocnguyen/QuatRE,"['knowledge-graph-embeddings', 'knowledge-graph-completion', 'knowledge-base-completion', 'link-prediction', 'quaternion-algebra', 'hamilton-product']",QuatRE: Relation-Aware Quaternions for Knowledge Graph Embeddings (TheWebConf WWW 2022) (Pytorch)
google-research/electra,google-research/electra,"['nlp', 'deep-learning', 'tensorflow']",ELECTRA: Pre-training Text Encoders as Discriminators Rather Than Generators
cleardusk/3ddfa_v2,cleardusk/3DDFA_V2,"['eccv', '3d-face-alignment', 'pytorch', 'face-alignment', '3d-face', '3dmm', 'alignment', '3d', 'computer-vision', 'onnx', '3d-landmarks', 'single-image-reconstruction', 'eccv-2020']","The official PyTorch implementation of Towards Fast, Accurate and Stable 3D Dense Face Alignment, ECCV 2020."
argusswift/yolov4-pytorch,argusswift/YOLOv4-pytorch,"['yolov4', 'object-detection', 'pytorch', 'senet', 'cbam', 'mobilenetv2', 'mobilenetv3', 'attention']","This is a pytorch repository of YOLOv4, attentive YOLOv4 and mobilenet YOLOv4 with PASCAL VOC and COCO"
ternaus/retinaface,ternaus/retinaface,"['pytorch', 'deeplearning', 'face-detection', 'retinaface', 'object-detection']",The remake of the https://github.com/biubug6/Pytorch_Retinaface
thinklab-sjtu/csl_retinanet_tensorflow,Thinklab-SJTU/CSL_RetinaNet_Tensorflow,"['object-detection', 'tensorflow', 'smooth-label', 'angle-classification']",Code for ECCV 2020 paper: Arbitrary-Oriented Object Detection with Circular Smooth Label
kaijieshi7/dynamic-convolution-pytorch,kaijieshi7/Dynamic-convolution-Pytorch,['dynamic-convolution'],Pytorch!!!Pytorch!!!Pytorch!!!  Dynamic Convolution: Attention over Convolution Kernels (CVPR-2020)
hongsukchoi/pose2mesh_release,hongsukchoi/Pose2Mesh_RELEASE,"['single-view', 'graph-convolutional-network', '3d-mesh', '2d-human-pose', '3d-human-pose', '3d-human-mesh', 'rgb-image', 'eccv2020', 'eccv']","Official Pytorch implementation of ""Pose2Mesh: Graph Convolutional Network for 3D Human Pose and Mesh Recovery from a 2D Human Pose"", ECCV 2020"
jackaduma/cyclegan-vc2,jackaduma/CycleGAN-VC2,"['voice-conversion', 'cyclegan-vc2', 'cyclegan', 'gan', 'deeplearning', 'voice-cloning', 'pytorch-implementation', 'cyclegan-vc', 'speech-synthesis', 'deep-learning', 'pix2pix']",Voice Conversion by CycleGAN (语音克隆/语音转换): CycleGAN-VC2
lliuz/arflow,lliuz/ARFlow,"['optical-flow', 'unsupervised-learning', 'self-supervised-learning', 'pytorch', 'cvpr2020']","The official PyTorch implementation of the paper ""Learning by Analogy: Reliable Supervision from Transformations for Unsupervised Optical Flow Estimation""."
crux82/ganbert,crux82/ganbert,"['generative-adversarial-network', 'semi-supervised-learning', 'few-shot-learning', 'bert', 'python']",Enhancing the BERT training with Semi-supervised Generative Adversarial Networks
kevinzakka/torchkit,kevinzakka/torchkit,"['pytorch', 'deep-learning']",Research boilerplate for PyTorch.
maghoumi/pytorch-softdtw-cuda,Maghoumi/pytorch-softdtw-cuda,"['dynamic-time-warping', 'pytorch', 'cuda', 'deep-learning', 'soft-dtw']",Fast CUDA implementation of (differentiable) soft dynamic time warping for PyTorch using Numba
moono/stylegan2-tf-2.x,moono/stylegan2-tf-2.x,[],"stylegan2, tensorflow 2, keras subclassing"
martinomensio/spacy-universal-sentence-encoder,MartinoMensio/spacy-universal-sentence-encoder,"['nlp', 'use', 'spacy', 'tensorflow-hub', 'models']",Google USE (Universal Sentence Encoder) for spaCy
isarandi/metro-pose3d,isarandi/metro-pose3d,"['human-pose-estimation', '3d-human-pose', 'computer-vision', 'tensorflow', 'python', 'deep-learning']",Metric-Scale Truncation-Robust Heatmaps for 3D Human Pose Estimation
enochkan/torch-metrics,enochkan/torch-metrics,"['pytorch', 'machine-learning', 'deep-learning', 'metrics', 'pytorch-implementation', 'pytorch-cnn', 'computer-vision', 'torch-metrics']",Metrics for model evaluation in pytorch
zhangzhiqiangccm/nlp-project,zhangzhiqiangccm/NLP-project,[],自然语言处理中的基础任务，包含但不限于文本表示，文本分类，命名实体识别，关系抽取，文本生成，文本摘要等，基于tensorflow2或Pytorch，所有代码均经过测试，项目中也包含相关数据。
frgfm/torch-scan,frgfm/torch-scan,"['python', 'pytorch', 'flops-counter', 'benchmark', 'deep-learning', 'pytorch-utils', 'deep-neural-networks', 'keras', 'summary', 'flops', 'receptive-field']","Seamless analysis of your PyTorch models (RAM usage, FLOPs, MACs, receptive field, etc.)"
youngkyunjang/gpq,youngkyunJang/GPQ,"['semi-supervised-learning', 'metric-learning', 'deep-learning', 'cvpr2020', 'tensorflow', 'image-retrieval', 'product-quantization', 'hashing']",Generalized Product Quantization Network For Semi-supervised Image Retrieval - CVPR 2020
adeelh/pytorch-multi-class-focal-loss,AdeelH/pytorch-multi-class-focal-loss,"['pytorch', 'deep-learning', 'loss-functions', 'classification', 'neural-network', 'retinanet', 'multiclass-classification', 'imbalanced-classes', 'pytorch-implementation', 'implementation-of-research-paper', 'machine-learning']","An (unofficial) implementation of Focal Loss, as described in the RetinaNet paper, generalized to the multi-class case."
cwlroda/falldetection_openpifpaf,cwlroda/falldetection_openpifpaf,"['openpifpaf', 'detection', 'human-pose-estimation', 'computer-vision', 'deep-learning', 'composite-fields', 'video-analytics', 'object-tracking', 'gpu', 'cpu', 'fall-detection']",Fall Detection using OpenPifPaf's Human Pose Estimation model
vcl3d/structurenet,VCL3D/StructureNet,"['calibration', 'extrinsic-calibration', 'volumetric-video', 'multi-sensor', 'depth-camera', 'kinect4azure', 'realsense2', 'kinect-sensor', 'kinect-camera', 'realsense-camera', 'realsense', 'cnn', 'pytorch', 'markerless', 'multi-sensor-image-fusion', 'rgbd']","Markerless volumetric alignment for depth sensors. Contains the code of the work ""Deep Soft Procrustes for Markerless Volumetric Sensor Alignment"" (IEEE VR 2020). "
karol-g/gcam,Karol-G/Gcam,"['pytorch', 'gradcam', 'gradcam-plus-plus', 'grad-cam', 'guided-backpropagation', 'guidedgradcam', 'visualization', 'saliency', 'cnn-visualization', 'guided-grad-cam', 'segmentation', '2d', '3d', 'medical-imaging', 'gradient-visualization', 'gcam']","Gcam is an easy to use Pytorch library that makes model predictions more interpretable for humans.  It allows the generation of attention maps with multiple methods like Guided Backpropagation,  Grad-Cam, Guided Grad-Cam and Grad-Cam++."
jiangyanting/taidi_2020_data_ming_c,JiangYanting/Taidi_2020_Data_Ming_C,"['data-mining', 'natural-language-processing', 'machine-learning', 'bert']",2020年第八届泰迪杯数据挖掘C题“智慧政务文本挖掘”特等奖作品（论文与代码）
qznan/qiznlp,Qznan/QizNLP,"['nlp', 'chinese', 'classification', 'match', 'sequence-labeling', 'sequence-to-sequence', 'tensorflow', 'horovod', 'beam-search']",Quick run NLP in many task     快速运行分类、序列标注、匹配、生成等NLP任务的Tensorflow框架  (中文 NLP 支持分布式）
lingkai-kong/calibrated-bert-fine-tuning,Lingkai-Kong/Calibrated-BERT-Fine-Tuning,"['calibration', 'language-model', 'uncertainty-quantification', 'uncertainty-estimation', 'bert', 'open-world-classification', 'robustness', 'text-classification', 'ood-detection', 'deep-learning', 'nlp-machine-learning', 'nlp']",Code for Paper: Calibrated Language Model Fine-Tuning for In- and Out-of-Distribution Data
harlen520/semantic-similarity,Tanh-wink/semantic-similarity,"['semantic', 'similarity', 'word2vec', 'wmd', 'bert']",semantic similarity， word2vec + wmd， bert+wmd， pytorch
podidiving/lgsc-for-fas-pytorch,Podidiving/lgsc-for-fas-pytorch,[],Learning Generalized Spoof Cues for FaceAnti-spoofing reimplementation in pytorch
ronmckay/oodretrieval,RonMcKay/OODRetrieval,"['pytorch', 'deep-learning', 'semantic-segmentation', 'machine-learning', 'out-of-distribution-dectection', 'uncertainty', 'retrieval']",Detection and Retrieval of Out-of-Distribution Objects in Semantic Segmentation
rasbt/coral_pytorch,Raschka-research-group/coral-pytorch,"['deep-learning', 'ordinal-regression', 'ordinal-classification']",CORAL and CORN implementations for ordinal regression with deep neural networks.
crane-toolbox/analysis-pipelines,CRANE-toolbox/analysis-pipelines,"['racism', 'data-visualization', 'data-science', 'hackathon', 'nlp', 'word-embedding', 'python3', 'pipenv', 'covid19', 'help-wanted', 'sociology', 'hacktoberfest', 'hacktoberfest2020']","Project CRANE (Crisis Racism and Narrative Evaluation) aims to support researchers and anti-racist organisations that wish to use state-of-the-art text analysis algorithms to study how specific events impact online hate speech and racist narratives. CRANE Toolbox is a Python package: once installed, the tools in CRANE are available as functions that users can use in their Python programs or directly through their terminal. CRANE targets users with basic programming but no machine learning skills."
aniketmaurya/tensorflow-fastapi-starter-pack,aniketmaurya/tensorflow-fastapi-starter-pack,"['fastapi', 'tensorflow-web', 'tensorflow', 'machine-learning', 'machinelearning', 'swaggerui']",tensorflow web app starter pack
lucidrains/lambda-networks,lucidrains/lambda-networks,"['artificial-intelligence', 'deep-learning', 'computer-vision', 'attention-mechanism', 'attention']","Implementation of LambdaNetworks, a new approach to image recognition that reaches SOTA with less compute"
magicleap/supergluepretrainednetwork,magicleap/SuperGluePretrainedNetwork,"['deep-learning', 'feature-matching', 'pose-estimation', 'graph-neural-networks']","SuperGlue: Learning Feature Matching with Graph Neural Networks (CVPR 2020, Oral)"
google-research/tapas,google-research/tapas,"['nlp-machine-learning', 'question-answering', 'table-parsing', 'tensorflow']",End-to-end neural table-text understanding models.
dalmia/siren,dalmia/siren,"['machine-learning', 'deep-learning', 'pytorch', 'activation-functions']",PyTorch implementation of Sinusodial Representation networks (SIREN)
wuzhihao7788/yolodet-pytorch,wuzhihao7788/yolodet-pytorch,"['yolov5', 'yolov4', 'ppyolo', 'yolov3', 'pytorch', 'object-detection', 'yolov5-yolov3', 'yolo']","reproduce the YOLO series of papers in pytorch, including YOLOv4, PP-YOLO, YOLOv5，YOLOv3, etc."
adobe/stringlifier,adobe/stringlifier,"['machine-learning', 'python3', 'api', 'analysis', 'unsupervised-machine-learning', 'clustering', 'tf-idf', 'raw-text', 'pytorch', 'convolutional-networks', 'long-short-term-memory', 'classification']","Stringlifier is on Opensource ML Library for detecting random strings in raw text. It can be used in sanitising logs, detecting accidentally exposed credentials and as a pre-processing step in unsupervised ML-based analysis of application text data."
fsondej/autocorrect,filyp/autocorrect,"['autocorrection', 'spelling', 'spellchecker', 'levenshtein-distance', 'python', 'english', 'polish', 'turkish', 'ukrainian', 'russian', 'multilingual', 'multilanguage', 'spanish', 'nlp', 'spelling-corrector', 'autocorrect', 'languages', 'czech', 'portuguese', 'ocr']",Spelling corrector in python
searchableai/kitanaqa,searchableai/KitanaQA,"['nlp', 'natural-language-processing', 'pytorch', 'adversarial-attacks', 'adversarial-training', 'data-augmentation', 'ml-automation', 'question-answering', 'bert', 'transformer']",KitanaQA: Adversarial training and data augmentation for neural question-answering models
mdiephuis/simclr,mdiephuis/SimCLR,"['pytorch', 'simclr', 'contrastive-learning', 'representation-learning', 'unsupervised-learning']","Pytorch implementation of ""A Simple Framework for Contrastive Learning of Visual Representations"""
hellonlp/sentiment_analysis_albert,hellonlp/sentiment-analysis,"['text-classification', 'tensorflow', 'text-cnn', 'sentiment-analysis', 'bert', 'albert', 'cnn', 'textcnn']",情感分析、文本分类、词典、bayes、sentiment analysis、TextCNN、classification、tensorflow、BERT、CNN、text classification
tsafavi/codex,tsafavi/codex,"['knowledge-graph', 'link-prediction', 'knowledge-graph-embeddings', 'triple-classification', 'wikidata', 'wikipedia', 'nlp', 'knowledge-representation', 'knowledge-representation-learning', 'knowledge-representation-reasoning', 'knowledge-base']",CoDEx: A set of knowledge graph Completion Datasets Extracted from Wikidata and Wikipedia
ternaus/check_orientation,ternaus/check_orientation,"['deep-learning', 'image-classification', 'orientation-detection', 'computer-vision']","Model to check if image was rotated by 90, 180, 270 degrees."
xuxingya/tf2crf,xuxingya/tf2crf,[],CRF layer for tensorflow 2 keras
pluslabnlp/geanet-biomed-event-extraction,PlusLabNLP/GEANet-BioMed-Event-Extraction,"['event-extraction', 'biomedical', 'covid-19', 'cord-19', 'natural-language-processing', 'bert', 'multitask-learning', 'deep-learning']",Code for the paper Biomedical Event Extraction with Hierarchical Knowledge Graphs
yaofanguk/video-subtitle-extractor,YaoFANGUK/video-subtitle-extractor,"['deep-learning', 'ocr', 'subtitles', 'srt', 'hardsub', 'extract', 'ripper', 'subrip']",视频硬字幕提取，生成srt文件。无需申请第三方API，本地实现文本识别。基于深度学习的视频字幕提取框架，包含字幕区域检测、字幕内容提取。A GUI tool for extracting hard-coded subtitle (hardsub) from videos and generating srt files. 
sforaidl/playground,SforAiDl/Playground,"['python', 'machine-learning', 'deep-learning', 'computer-vision', 'pytorch', 'sports-analytics']",A python library consisting of pipelines for visual analysis of different sports using Computer Vision and Deep Learning.
samyak0210/saliency,samyak0210/saliency,"['pytorch-implementation', 'saliency-prediction', 'simplenet', 'saliency-models']","Pytorch Implementation of the paper - ""Tidying Deep Saliency Prediction Architectures"""
gpauloski/kfac_pytorch,gpauloski/kfac-pytorch,"['pytorch', 'optimizer', 'kfac', 'distributed', 'second-order-optimization', 'deep-learning']",Distributed K-FAC Preconditioner for PyTorch
ifnspaml/cil_segmentation,ifnspaml/CIL_Segmentation,"['semantic-segmentation', 'incremental-learning', 'neural-network', 'deep-learning', 'erfnet']",[ITSC 2020] Class-Incremental Learning for Semantic Segmentation Re-Using Neither Old Data Nor Old Labels
skycrapers/tecogan-pytorch,skycrapers/TecoGAN-PyTorch,"['pytorch', 'super-resolution', 'tecogan', 'frvsr', 'computer-vision', 'video-processing']",A PyTorch Reimplementation of TecoGAN: Temporally Coherent GAN for Video Super-Resolution
openai/jukebox,openai/jukebox,"['paper', 'audio', 'music', 'pytorch', 'generative-model', 'vq-vae', 'transformer']","Code for the paper ""Jukebox: A Generative Model for Music"""
jiupinjia/skyar,jiupinjia/SkyAR,"['dynamic-sky-replacement', 'sky-matting', 'harmonization', 'skyar']","Official Pytorch implementation of the preprint paper ""Castle in the Sky: Dynamic Sky Replacement and Harmonization in Videos"", in arXiv:2010.11800."
zalandoresearch/pytorch-ts,zalandoresearch/pytorch-ts,"['pytorch', 'time-series', 'probabilistic', 'deepar', 'lstnet', 'n-beats']",PyTorch based Probabilistic Time Series forecasting framework based on GluonTS backend
swz30/cycleisp,swz30/CycleISP,"['image-denoising', 'data-synthesis', 'camera-imaging-pipeline', 'low-level-vision', 'cycleisp', 'computer-vision', 'image-restoration', 'pytorch', 'rgb2raw', 'raw2rgb', 'cvpr2020']",[CVPR 2020--Oral] CycleISP: Real Image Restoration via Improved Data Synthesis
appleholic/multiband_melgan,AppleHolic/multiband_melgan,"['multiband-melgan', 'pytorch', 'audio', 'neural-vocoder']",An unofficial implementation of https://arxiv.org/abs/2005.05106
z-zheng/farseg,Z-Zheng/FarSeg,"['semantic-segmentation', 'deep-learning', 'computer-vision', 'remote-sensing', 'high-resolution-rs-image', 'object-segmentation', 'convolutional-neural-networks']",Foreground-Aware Relation Network for Geospatial Object Segmentation in High Spatial Resolution Remote Sensing Imagery (CVPR 2020) https://arxiv.org/pdf/2011.09766.pdf
jiupinjia/deep-adversarial-decomposition,jiupinjia/Deep-adversarial-decomposition,[],"Pytorch implementation of the paper: ""A Unified Framework for Separating Superimposed Images"", in CVPR 2020."
bojone/cdial-gpt-tf,bojone/CDial-GPT-tf,[],用bert4keras加载CDial-GPT
smaranjitghose/artcv,smaranjitghose/ArtCV,"['python', 'opencv', 'image-processing', 'art', 'slop-20', 'slop', 'deep-learning', 'hacktoberfest', 'jwoc', 'swoc2021', 'dwoc2020']",Randomly Exploring Computer Vision techniques to create eye catching art out of plain boring images!
sapienzanlp/ewiser,SapienzaNLP/ewiser,"['word-sense-disambiguation', 'natural-language-processing', 'nlp', 'wsd']",A Word Sense Disambiguation system integrating implicit and explicit external knowledge.
nvidia-ai-iot/ros2_deepstream,NVIDIA-AI-IOT/ros2_deepstream,"['ros2', 'eloquent', 'jetson', 'robotics', 'real-time', 'deepstream', 'deep-learning']",ROS 2 package for NVIDIA DeepStream applications on Jetson Platforms 
imed-lab/cs-net,iMED-Lab/CS-Net,"['deep-learning', 'pytorch', 'segmentation', 'medical-imaging']",CS-Net (MICCAI 2019) and CS2-Net (MedIA 2020)
dinghanshen/cutoff,dinghanshen/Cutoff,"['nlp-machine-learning', 'deep-learning', 'huggingface-transformers', 'fairseq', 'augmentation']","The source code for the Cutoff data augmentation approach proposed in this paper: ""A Simple but Tough-to-Beat Data Augmentation Approach for Natural Language Understanding and Generation"". "
mrtkp9993/deeplearningexamples,mrtkp9993/DeepLearningExamples,"['deep-learning', 'deep-neural-networks', 'machine-learning', 'artificial-intelligence', 'data-science', 'regression', 'classification', 'python3', 'dense-neural-network', 'convolutional-neural-networks', 'deep-learning-example', 'deeplearningexamples', 'colab', 'python', 'tensorflow', 'keras']",Deep learning examples with Python and Tensorflow & Keras.
elmar999/snake-reinforcement-dnn,Elmar999/snake-reinforcement-DNN,"['neural-network', 'snake-game', 'deep-reinforcement-learning', 'machine-learning', 'deep-learning']",Developing a deep neural network to play a snake game
noahs-ark/groc,Noahs-ARK/GroC,[],"Pytorch implementation of models described in ""Grounded compositional outputs for adaptive language modeling"", EMNLP 2020."
chunjingxiao/deepseg,ChunjingXiao/DeepSeg,"['activity-segmentation', 'activity-recognition', 'wifi-channel-state-information', 'deep-learning']",A deep learning-based activity segmentation framework for activity recognition using WiFi  Channel State Information (CSI).
ximilar-com/tf-metric-learning,Ximilar-com/tf-metric-learning,"['metric-learning', 'computer-vision', 'similarity-search', 'image-retrieval', 'machine-learning', 'python', 'tensorflow', 'deep-learning', 'deep-metric-learning', 'visual-search']","Minimalistic TensorFlow2+ deep metric/similarity learning library with loss functions, miners, and utils as embedding projector."
alphajia/pytorch-faster-rcnn,AlphaJia/pytorch-faster-rcnn,"['faster-rcnn', 'pytorch', 'detection']",pytorch based implementation faster rcnn
nianticlabs/stereo-from-mono,nianticlabs/stereo-from-mono,"['deep-learning', 'deeplearning', 'stereo-matching', 'stereo', 'stereo-algorithms', 'monodepth', 'megadepth', 'monocular-depth-estimation', 'single-image-depth-prediction', 'depth-estimation']",[ECCV 2020] Learning stereo from single images using monocular depth estimation networks
swz30/mirnet,swz30/MIRNet,"['image-denoising', 'super-resolution', 'image-enhancement', 'image-restoration', 'low-level-vision', 'computer-vision', 'multi-resolution-streams', 'attention-mechanism', 'pytorch', 'eccv2020']","[ECCV 2020] Learning Enriched Features for Real Image Restoration and Enhancement. SOTA results for image denoising, super-resolution, and image enhancement."
zhmiao/opencompounddomainadaptation-ocda,zhmiao/OpenCompoundDomainAdaptation-OCDA,"['open-compound-domain-adaptation', 'pytorch-implementation', 'computer-vision', 'domain-adaptation', 'ocda', 'cvpr2020', 'deep-learning']","Pytorch implementation for ""Open Compound Domain Adaptation"" (CVPR 2020 ORAL)"
tobran/df-gan,tobran/DF-GAN,"['generative-adversarial-network', 'text-to-image']", A Simple and Effective Baseline for Text-to-Image Synthesis (CVPR2022 oral)
spijkervet/byol,Spijkervet/BYOL,"['byol', 'pytorch', 'self-supervised-learning', 'deep-learning']",Bootstrap Your Own Latent: A New Approach to Self-Supervised Learning
intel-isl/deeplagrangianfluids,isl-org/DeepLagrangianFluids,"['deeplearning', 'fluids', 'simulation', 'convolutional-neural-networks', 'convnet', 'cnn']","Code repository for ""Lagrangian Fluid Simulation with Continuous Convolutions"", ICLR 2020."
lucidrains/global-self-attention-network,lucidrains/global-self-attention-network,"['artificial-intelligence', 'attention-mechanism', 'attention', 'self-attention', 'image-classification']","A Pytorch implementation of Global Self-Attention Network, a fully-attention backbone for vision tasks"
richermans/gpv,RicherMans/GPV,"['voice-activity-detection', 'speech-activity-detection', 'sound-activity', 'noise-robust-asr', 'machine-learning', 'pytorch']",Repository for our Interspeech2020 general-purpose voice activity detection (GPVAD) paper
grimoire/torch2trt_dynamic,grimoire/torch2trt_dynamic,[],A pytorch to tensorrt convert with dynamic shape support
stefandenn3r/unsupervised_anomaly_detection_brain_mri,StefanDenn3r/Unsupervised_Anomaly_Detection_Brain_MRI,"['deep-learning', 'unsupervised-learning', 'anomaly-detection', 'segmentation', 'mri', 'gan', 'autoencoder', 'variational-autoencoder']",Autoencoders for Unsupervised Anomaly Segmentation in Brain MR Images: A Comparative Study
okkteam/transformer-transducer,oshindow/Transformer-Transducer,[],A pytorch_lightning reimplementation of the Transducer module from ESPnet.
4paradigm/sparksqlwithfedb,4paradigm/DemoApps,"['sql', 'feature-engineering', 'sparksql', 'machine-learning', 'tensorflow', 'lightgbm', 'realtime', 'realtime-decision']",demo applications that show how to deploy offline feature engineering solutions to online in one minute with fedb and nativespark
saro00/dgn,Saro00/DGN,"['graph-machine-learning', 'graph-neural-networks', 'pytorch', 'dgl', 'spectral-methods']",Implementation of Directional Graph Networks in PyTorch and DGL
tuvovan/rfdnet-imagesuperresolution,tuvovan/RFDNet-ImageSuperResolution,"['image-super-resolution', 'keras', 'tensorflow', 'tensorflow2', 'computational-imaging', 'image-enhancement', 'computer-vision', 'deep-learning', 'convolutional-neural-networks']",Keras Implementation of the paper Residual Feature Distillation Network for Lightweight Image Super-Resolution
itchyhiker/iris_landmarks_pytorch,digital-nomad-cheng/Iris_Landmarks_PyTorch,"['iris-dataset', 'iris-recognition', 'iris-landmarks', 'computer-vision', 'deep-learning', 'ncnn']",Iris landmarks localization
liangheming/retinanetv1,liangheming/retinanetv1,[],"pytorch implement of retinanet,37.4 mAp(coco) at 640px(max side) ,44.24fps(RTX2080TI)"
zyx423/gae_vgae,zyx423/Graph-Embeddding,"['gae', 'graphembedding', 'graph-neural-networks']",Reimplementation of Graph Embedding methods by Pytorch. 
liangheming/free_anchorv1,liangheming/free_anchorv1,[],"pytorch implement of FreeAnchor(not strict),640 px(max side),39.5mAP on COCO,43.18fps(RTX 2080TI)"
stefanpantic/asr,stefanpantic/asr,"['machine-learning', 'automatic-speech-recognition', 'jasper', 'quartznet', 'asr', 'neural-networks', 'python', 'tensorflow', 'librispeech', 'common-voice']",Automatic speech recognition using neural networks
deeplabcut/deeplabcut-core,DeepLabCut/DeepLabCut-core,"['deeplabcut', 'deep-learning', 'pose-estimation', 'pose-tracking', 'behavior-analysis']",Headless DeepLabCut (no GUI support)
aladdinpersson/machine-learning-collection,aladdinpersson/Machine-Learning-Collection,"['pytorch', 'pytorch-implementation', 'pytorch-tutorial', 'pytorch-gan', 'pytorch-examples', 'tensorflow2', 'tensorflow-tutorials', 'tensorflow-examples', 'machine-learning', 'machine-learning-algorithms', 'pytorch-tutorials']",A resource for learning about Machine learning & Deep Learning
mvig-sjtu/alphaction,MVIG-SJTU/AlphAction,"['action-detection', 'spatio-temporal-action-localization', 'alphaction', 'alpha-action', 'action-recognition', 'state-of-the-art', 'pytorch', 'torch', 'gpu', 'ava', 'demo-video', 'ava-dataset', 'model-zoo']",Spatio-Temporal Action Localization System
mit-han-lab/torchsparse,mit-han-lab/torchsparse,"['pytorch', 'point-cloud', 'acceleration']",[MLSys'22] TorchSparse: Efficient Point Cloud Inference Engine
hideunderbush/ui2i_via_stylegan2,HideUnderBush/UI2I_via_StyleGAN2,"['stylegan2', 'image-translation', 'pytorch']",Unsupervised image-to-image translation method via pre-trained StyleGAN2 network
asyml/vision-transformer-pytorch,asyml/vision-transformer-pytorch,"['vision-transformer', 'pytorch']",Pytorch version of Vision Transformer (ViT) with pretrained models. This is part of CASL (https://casl-project.github.io/) and ASYML project.
declare-lab/dialogue-understanding,declare-lab/dialogue-understanding,"['dialogue-systems', 'dialogue-understanding', 'emotion-recognition-in-conversation', 'dialogue-act', 'conversational-ai', 'conversational-agents', 'bert-embeddings', 'bert', 'pretrained-models', 'emotion-recognition', 'emotion-analysis', 'natural-language-processing', 'natural-language-understanding', 'lstm', 'pytorch', 'sentiment-analysis', 'adversarial-attacks', 'explainable-ai', 'utterance-level-dialogue', 'dialogue']",This repository contains PyTorch implementation for the baseline models from the paper Utterance-level Dialogue Understanding: An Empirical Study
leaderj1001/lambdanetworks,leaderj1001/LambdaNetworks,"['lambda-networks', 'self-attention', 'image-classification', 'pytorch', 'lambda-convolution']",Implementing Lambda Networks using Pytorch
cdjhz/multigen,cdjhz/multigen,"['pytorch', 'kg', 'nlg']",EMNLP2020 - Language Generation with Multi-hop Reasoning on Commonsense Knowledge Graph
dreaminvoker/gain,DreamInvoker/GAIN,"['relation-extraction', 'natural-language-processing', 'graph-neural-networks', 'document-level-relation-extraction', 'dgl']",Source code for EMNLP 2020 paper: Double Graph Based Reasoning for Document-level Relation Extraction
hhousen/docsum,HHousen/DocSum,"['machine-learning', 'nlp', 'summarization', 'automatic-summarization', 'python', 'pdf', 'xml-parser', 'abstractive-summarization', 'abstractive-text-summarization', 'text-summarization', 'bart', 'xml', 'transformers']",A tool to automatically summarize documents abstractively using the BART or PreSumm Machine Learning Model.
mccreezhao/qamface,MccreeZhao/QAMFace,[],Pytorch implementation of Quadratic Additive Angular Margin Loss for Face Recognition
sjleo/dmad,SJLeo/DMAD,[],"Pytorch implementation of our paper accepted by IEEE TMM, 2022 --Learning Efficient GANs for Image Translation via Differentiable Masks and co-Attention Distillation"
alexandrosstergiou/squeeze-and-recursion-temporal-gates,alexandrosstergiou/Squeeze-and-Recursion-Temporal-Gates,"['action-recognition', 'activity-recognition', '3d-cnn', 'spatio-temporal-modeling', 'pytorch', 'recursion-temporal-gates', 'hacs', 'kinetics-datasets', 'moments-in-time']","Code for : [Pattern Recognit. Lett. 2021] ""Learn to cycle: Time-consistent feature discovery for action recognition"" and [IJCNN 2021] ""Multi-Temporal Convolutions for Human Action Recognition in Videos""."
directgroup/direct,NKI-AI/direct,"['pytorch', 'deep-learning', 'mri-reconstruction', 'inverse-problems', 'medical-imaging', 'fastmri-challenge']",Deep learning framework for MRI reconstruction
yuweihao/reclor,yuweihao/reclor,"['nlp', 'natural-language-processing', 'natural-language-understanding', 'machine-reading-comprehension']","Code for ""ReClor: A Reading Comprehension Dataset Requiring Logical Reasoning"" (ICLR 2020)"
nitin-rathi/hybrid-snn-conversion,nitin-rathi/hybrid-snn-conversion,"['pytorch', 'snn', 'ann-snn-conversion', 'deep-learning', 'backpropagation-algorithm', 'spiking-neural-networks']",Training spiking networks with hybrid ann-snn conversion and spike-based backpropagation
ipapakis/gcnnmatch,IPapakis/GCNNMatch,"['multi-object-tracking', 'graph-neural-networks', 'deep-learning', 'computer-vision']",This repository is the official code implementation of the paper GCNNMatch: Graph Convolutional Neural Networks for Multi-Object Tracking via Sinkhorn Normalization.
toriving/text-classification-transformers,toriving/text-classification-transformers,"['huggingface-transformers', 'transformers', 'text-classification', 'deep-learning', 'pytorch', 'korean', 'bert-model', 'kobert', 'huggingface-models']",Easy text classification for everyone : Bert based models via Huggingface transformers (KR / EN)
bojone/cpm_lm_bert4keras,bojone/CPM_LM_bert4keras,[],在bert4keras下加载CPM_LM模型
wuaalb/pytorch_template_audio,wuaalb/pytorch_template_audio,[],Basic Pytorch template for audio projects
sap-samples/acl2020-commonsense,SAP-samples/acl2020-commonsense,"['sample', 'sample-code', 'machine-learning', 'nlp', 'commonsense-reasoning', 'deep-learning', 'self-supervised', 'contrastive']",Source code for paper on commonsense reasoning for 2020 Annual Conference of the Association for Computational Linguistics (ACL) 2020.
tibhannover/cross-modal_entity_consistency,TIBHannover/cross-modal_entity_consistency,"['cross-modal-consistency', 'cross-modal-entity-verification', 'multimodal-retrieval', 'image-repurposing-detection', 'deep-learning']","This repository contains the dataset and source files to reproduce the results in the publication Müller-Budack et al. 2021: ""Multimodal news analytics using measures of cross-modal entity and context consistency"", In: International Journal on Multimedia Information Retrieval (IJMIR), Vol. 10, Art. no. 2, 2021."
engineeringsoftware/roosterize,EngineeringSoftware/roosterize,"['coq', 'machine-learning', 'name-generation', 'pytorch', 'neural-networks', 'serapi', 'mathcomp', 'deep-learning']",Tool for suggesting lemma names in Coq verification projects
mindslab-ai/faceshifter,mindslab-ai/faceshifter,"['pytorch', 'pytorch-lightning', 'face-swapping']",Unofficial PyTorch Implementation for FaceShifter (https://arxiv.org/abs/1912.13457)
antao97/dgcnn.pytorch,antao97/dgcnn.pytorch,"['point-cloud', 'classification', 'segmentation', 'pytorch']",A PyTorch implementation of Dynamic Graph CNN for Learning on Point Clouds (DGCNN)
jiangxiluning/master-tf,jiangxiluning/MASTER-TF,"['ocr', 'ocr-recognition', 'transformer', 'deep-learning', 'cv', 'scene-text-recognition']",MASTER
jittor/gan-jittor,Jittor/JGAN,"['gan', 'generative-adversarial-network', 'deep-learning', 'gans', 'jittor']",JGAN model zoo supports 27 kinds of mainstream GAN models with high speed for jittor.
jacobkrantz/vln-ce,jacobkrantz/VLN-CE,"['ai', 'computer-vision', 'robotics', 'deep-learning', 'research', 'python']",Vision-and-Language Navigation in Continuous Environments using Habitat
nicklashansen/policy-adaptation-during-deployment,nicklashansen/policy-adaptation-during-deployment,"['reinforcement-learning', 'deep-reinforcement-learning', 'pytorch', 'dm-control', 'mujoco', 'gym', 'deep-learning', 'robotics', 'self-supervised-learning']","Training code and evaluation benchmarks for the ""Self-Supervised Policy Adaptation during Deployment"" paper."
danielhcarranza/ml-production-template,DanielhCarranza/ml-production-template,"['deep-learning', 'deep-learning-production']",This codebase is a starting point to get your Machine Learning project into Production.
thunlp/re-context-or-names,thunlp/RE-Context-or-Names,"['relation-extraction', 'pytorch', 'bert', 'contrastive-learning', 'pretrain']","Bert-based models(BERT, MTB, CP) for relation extraction. "
sinaahmadi/klpt,sinaahmadi/klpt,"['kurdish-language-processing', 'natural-language-processing', 'kurdish', 'toolkit', 'kurdish-tokenization', 'kurdish-stemming', 'kurdish-oss', 'less-resource-languages', 'language-technology']",The Kurdish Language Processing Toolkit
doyosae/deep_complex_unet,dirichlet1223/Phase-aware-Deep-Complex-UNet,"['deep-learning', 'speech-enhancement', 'complex-networks']",(NOT Official) Implementation DC-UNet (ICLR 2019)
zhanghang1989/resnest,zhanghang1989/ResNeSt,"['deep-learning', 'resnet', 'resnest', 'pytorch', 'detectron-models', 'split-attention-networks']",ResNeSt: Split-Attention Networks
taesungp/contrastive-unpaired-translation,taesungp/contrastive-unpaired-translation,"['pytorch', 'computervision', 'deeplearning', 'cyclegan', 'image-generation', 'computer-vision', 'computer-graphics', 'image-manipulation', 'gans', 'generative-adversarial-network']","Contrastive unpaired image-to-image translation, faster and lighter training than cyclegan (ECCV 2020, in PyTorch)"
idiap/fast-transformers,idiap/fast-transformers,[],Pytorch library for fast transformer implementations
sforaidl/genrl,SforAiDl/genrl,"['reinforcement-learning-algorithms', 'reinforcement-learning', 'machine-learning', 'gym', 'openai', 'python', 'data-science', 'pytorch', 'algorithm-implementations', 'benchmarking', 'deep-learning', 'neural-network', 'hacktoberfest']",A PyTorch reinforcement learning library for generalizable and reproducible algorithm implementations with an aim to improve accessibility in RL
alibaba-miil/asl,Alibaba-MIIL/ASL,"['multi-label-classification', 'loss', 'detection', 'classification']","Official Pytorch Implementation of: ""Asymmetric Loss For Multi-Label Classification""(ICCV, 2021) paper"
clovaai/generative-evaluation-prdc,clovaai/generative-evaluation-prdc,"['deep-learning', 'generative-adversarial-network', 'evaluation-metrics', 'precision', 'recall', 'machine-learning', 'generative-model', 'fidelity', 'diversity', 'evaluation', 'icml', 'icml-2020', 'icml2020']","Code base for the precision, recall, density, and coverage metrics for generative models. ICML 2020."
rajcscw/nlp-gym,rajcscw/nlp-gym,"['nlp-tasks', 'rl-agents', 'gym-environment', 'nlp']",NLPGym - A toolkit to develop RL agents to solve NLP tasks.
bubbliiiing/retinanet-keras,bubbliiiing/retinanet-keras,[],这是一个retinanet-keras的源码，可以用于训练自己的模型。
lxc86739795/human_vehicle_parsing_platform,lxc86739795/human_vehicle_parsing_platform,"['human', 'person', 'vehicle', 'parsing', 'pytorch', 'codebase', 'segmentation', 'veri776', 'vehicleid', 'veri-wild']",A pytorch codebase for human parsing and vehicle parsing 
tomek-l/ai-thermometer,tomek-l/ai-thermometer,"['cnn', 'flir', 'lepton', 'flir-lepton', 'flir-lepton-purethermal', 'opencv', 'jetson-nano', 'nvidia-jetson']",Fever screening with IR & RGB cameras and Deep CNNs
mchancan/deepseqslam,mchancan/deepseqslam,"['slam', 'robotics', 'deep-learning', 'computer-vision', 'place-recognition', 'deep-neural-networks', 'convolutional-neural-networks', 'recurrent-neural-networks', 'autonomous-driving', 'navigation', 'deepseqslam', 'driving-datasets', 'lstm', 'rnn', 'cnn', 'sequential-place-recognition', 'sequential-place-learning', 'heuristic-free', 'high-performance-place-recognition', 'route-based-place-recognition']",The Official Deep Learning Framework for Robot Place Learning
zengxianyu/crfill,zengxianyu/crfill,"['inpainting', 'image-inpainting', 'gan', 'generative-adversarial-network', 'generative-adversarial-networks', 'pytorch', 'iccv2021', 'image-completion']",CR-Fill: Generative Image Inpainting with Auxiliary Contextual Reconstruction. ICCV 2021
sayednadim/global-and-local-attention-based-free-form-image-inpainting,SayedNadim/Global-and-Local-Attention-Based-Free-Form-Image-Inpainting,"['inpainting', 'attention-mechanism', 'generative-adversarial-network']","Official implementation of ""Global and local attention-based free-form image inpainting"""
liznerski/fcdd,liznerski/fcdd,"['anomaly-detection', 'deep-learning', 'one-class-learning', 'xai', 'explanations', 'explainable-deepneuralnetwork', 'machine-learning', 'deep-anomaly-detection', 'pytorch', 'python', 'mvtec-ad']",Repository for the Explainable Deep One-Class Classification paper
bubbliiiing/pspnet-keras,bubbliiiing/pspnet-keras,[],这是一个pspnet-keras的源码，可以用于训练自己的模型。
jackaduma/cyclegan-vc3,jackaduma/CycleGAN-VC3,"['voice-conversion', 'gan', 'pytorch', 'voice-cloning', 'cyclegan', 'cyclegan-vc3', 'cyclegan-vc', 'cyclegan-vc2', 'pytorch-implementation']",Voice Conversion by CycleGAN (语音克隆/语音转换)：CycleGAN-VC3
pomonam/self-tuning-networks,pomonam/Self-Tuning-Networks,"['hyperparameter-optimization', 'bilevel-optimization', 'self-tuning-network', 'pytorch', 'neurips-2020', 'deep-learning']","PyTorch implementation of ""STNs"" and ""Delta-STNs""."
dyfine/sphericalembedding,Dyfine/SphericalEmbedding,['deep-metric-learning'],"official pytorch implementation of ""Deep Metric Learning with Spherical Embedding"", NeurIPS 2020"
awslabs/sagemaker-deep-demand-forecast,awslabs/sagemaker-deep-demand-forecast,"['gluonts', 'time-series', 'aws-sagemaker', 'demand-forecast', 'deep-learning', 'forecasting']",Using Deep Learning for Demand Forecasting with Amazon SageMaker
xxradon/onnxtocaffe,xxradon/ONNXToCaffe,"['pytorch', 'caffe', 'onnx']","pytorch -> onnx -> caffe, pytorch to caffe, or other deep learning framework to onnx and onnx to caffe."
pratogab/batch-transforms,pratogab/batch-transforms,"['pytorch', 'batch', 'transform', 'transforms', 'image', 'images', 'torchvision', 'normalize', 'randomcrop', 'randomhorizontalflip', 'totensor']",Batch equivalent of PyTorch Transforms.
tuvovan/mirnet---keras,tuvovan/MIRNet-Keras,"['image-processing', 'denoising', 'super-resolution', 'sota', 'deep-learning', 'neural-network', 'computer-vision', 'low-light-image-enhancement', 'resolution', 'artificial-intelligence']","Keras Implementation of MIRNet - SoTA in Image Denoising, Super Resolution and Image Enhancement - CVPR 2020"
him4318/transformer_ocr,him4318/Transformer-ocr,"['handwritten-text-recognition', 'transformer', 'google-colab', 'ocr-recognition', 'deep-learning', 'bentham', 'pytorch', 'detr', 'iam', 'python', 'ocr', 'nlp', 'htr']",Handwritten text recognition using transformers.
xuyingjie521/xbert,xuyingjie521/xbert,"['tensorflow2', 'bert', 'variants', 'albert', 'albert-chinese', 'roberta']",基于tensorflow2.x实现bert及其变体的预训练模型加载架构
lxucs/coref-hoi,lxucs/coref-hoi,"['coreference-resolution', 'higher-order', 'nlp', 'pytorch']",PyTorch implementation of the end-to-end coreference resolution model with different higher-order inference methods.
williamcchuang/graphlime,WilliamCCHuang/GraphLIME,"['graph-neural-networks', 'graph-algorithms', 'explainable-ai', 'open-source']",This is a Pytorch implementation of GraphLIME
doccano/auto-labeling-pipeline,doccano/auto-labeling-pipeline,"['doccano', 'machine-learning', 'natural-language-processing', 'annotation-tool', 'python', 'data-labeling', 'text-annotation']",doccano auto labeling pipeline helps doccano to annotate a document automatically.
ml4ai/mliis,ml4ai/mliis,"['meta-learning', 'image-segmentation', 'maml', 'tensorflow', 'machine-learning']",Code for meta-learning initializations for image segmentation
tanmoyio/mudkip,tanmoyio/GradMan,"['deep-learning', 'deep-neural-networks', 'autograd']",Baby deep learning library🐣
d-li14/lambda.pytorch,d-li14/lambda.pytorch,"['lambda-network', 'attention', 'pytorch', 'iclr2021', 'imagenet', 'pre-trained-model']",PyTorch implementation of Lambda Network and pretrained Lambda-ResNet
dbtmpl/opmask,dbtmpl/OPMask,"['instance-segmentation', 'partially-supervised', 'pytorch', 'object-mask-prior', 'iccv2021']",Official implementation of the paper 'Prior to Segment: Foreground Cues for Weakly Annotated Classes in Partially Supervised Instance Segmentation' (ICCV 2021)
krumiaa/mindmaker,krumiaa/MindMaker,"['reinforcement-learning', 'learning-agent', 'dqn', 'unreal-engine', 'ue4', 'machine-learning', 'artificial-intelligence', 'neural-network', 'openai', 'gym', 'wrapper', 'deep-learning', 'ai']",MindMaker UE4 Machine Learning Toolkit 
lukecavabarrett/pna,lukecavabarrett/pna,"['graph-machine-learning', 'graph-neural-networks', 'pytorch', 'dgl', 'pytorch-geometric']","Implementation of Principal Neighbourhood Aggregation for Graph Neural Networks in PyTorch, DGL and PyTorch Geometric"
github-luffy/pfld_68points_pytorch,github-luffy/PFLD_68points_Pytorch,['facial-landmarks'],Implementation of PFLD For 68 Facial Landmarks By Pytorch
hellloxiaotian/lesrcnn,hellloxiaotian/LESRCNN,"['image-super-resolution', 'cnn', 'cnn-pytorch', 'lightweight-enhanced-network', 'enhancement-and-compression', 'information-refinement', 'image-processing', 'deep-learning', 'low-level-vision', 'python27']","Lightweight Image Super-Resolution with Enhanced CNN (Knowledge-Based Systems,2020)"
tetratrio/stylegan2_pytorch,adriansahlman/stylegan2_pytorch,[],A Pytorch implementation of StyleGAN2
ha0tang/bigraphgan,Ha0Tang/BiGraphGAN,"['bmvc', 'image-generation', 'graph', 'bipartite-graphs', 'person', 'person-image-generation', 'selectiongan', 'pytorch', 'deepfashion', 'bmvc20']",[BMVC 2020 Oral] Bipartite Graph Reasoning GANs for Person Image Generation
clovaai/frostnet,clovaai/frostnet,"['deep-learning', 'pytorch', 'quantization', 'quantization-aware-training', 'classification', 'object-detection', 'semantic-segmentation', 'style-transfer', 'optimizers', 'computer-vision', 'post-quantization', 'quantization-efficient-network', 'network-architecture', 'int8-quantization']",FrostNet: Towards Quantization-Aware Network Architecture Search
mcg-nju/fcot,MCG-NJU/FCOT,"['deep-learning', 'pytorch', 'tracking']",[CVIU] Fully Convolutional Online Tracking
neuspell/neuspell,neuspell/neuspell,"['spelling-correction', 'spell-checkers', 'spellcheck', 'neural-models', 'neural-spell-check', 'spell-checker', 'nlp', 'spell-correction', 'dataset', 'spell-correction-datasets', 'ngrams']",NeuSpell: A Neural Spelling Correction Toolkit
solacex/ccm,Solacex/CCM,"['pytorch', 'eccv2020', 'domain-adaptation', 'semantic-segmentation']",[ECCV2020] Content-Consistent Matching for Domain Adaptive Semantic Segmentation
sbarratt/torch_interpolations,sbarratt/torch_interpolations,[],Interpolation routines in Pytorch.
yistlin/fragmentvc,yistLin/FragmentVC,"['voice-conversion', 'any-to-any', 'transformer', 'attention-mechanism', 'concatenative', 'pytorch']",Any-to-any voice conversion by end-to-end extracting and fusing fine-grained voice fragments with attention
shengyuh/overlappredator,prs-eth/OverlapPredator,"['point-cloud', 'registration', '3dvision', 'transformer', 'attention-mechanism']","[CVPR 2021, Oral] PREDATOR: Registration of 3D Point Clouds with Low Overlap. "
zhengyiluo/meva,ZhengyiLuo/MEVA,"['human-pose-estimation', 'accv2020', '3d-pose-estimation', '3d-human-pose', 'smpl', 'pytorch']","Official implementation of ACCV 2020 paper ""3D Human Motion Estimation via Motion Compression and Refinement"" (Identical repo to https://github.com/KlabCMU/MEVA, will be kept in sync)"
tachibanayoshino/remote-sensing-image-semantic-segmentation-tf2,TachibanaYoshino/Remote-sensing-image-semantic-segmentation-tf2,"['remote-sensing-image', 'semantic-segmentation', 'naic2020', 'deeplabv3plus']","The remote sensing image semantic segmentation repository based on tf.keras includes backbone networks such as resnet, densenet, mobilenet, and segmentation networks such as deeplabv3+, pspnet, panet, and refinenet."
apugoneappu/ask_me_anything,apugoneappu/ask_me_anything,"['vqa', 'attentions', 'pytorch', 'python', 'mfb', 'mcan', 'openvqa']",An easy-to-use app to visualise attentions of various VQA models.
lescientifik/open_brats2020,lescientifik/open_brats2020,"['deep-learning', 'semantic-segmentation', 'medical-imaging', 'medical-image-segmentation', 'pytorch', 'unet', 'brats', 'brats-challenge']",Top 10 brats 2020 Solution
yudidong/channel_estimation_cgan,YudiDong/Channel_Estimation_cGAN,"['channel-estimation', 'cgan', 'generative-adversarial-network', 'massive-mimo', 'deep-learning', 'one-bit']",Channel Estimation for One-Bit Multiuser Massive MIMO Using Conditional GAN
wanghelin1997/nnaudio2,WangHelin1997/nnAudio2,[],Audio processing by using pytorch 1D convolution network (based on nnAudio). Gammatone Spectrogram and SpecAugmentation are now available on GPU. 
ahatamiz/dals,ahatamiz/dals,"['dals-framework', 'lesion', 'levelset', 'dals', 'tensorflow', 'deep-active-lesion-segmentation', 'deeplearning', 'activecontours', 'segmentation']",Official Repository for Deep Active Lesion Segmentation (DALS)
chen-judge/skt,chen-judge/SKT,"['crowd-counting', 'distillation', 'pytorch']","Efficient Crowd Counting via Structured Knowledge Transfer (SKT, ACM MM 2020)"
huangdebo/yolov4-multitask,Huangdebo/YOLOv4-MultiTask,[],YOLOv4-MultiTask for Pytorch
microsoft/bringing-old-photos-back-to-life,microsoft/Bringing-Old-Photos-Back-to-Life,"['image-restoration', 'old-photo-restoration', 'generative-adversarial-network', 'gans', 'pytorch', 'image-manipulation', 'photo-restoration', 'photos']",Bringing Old Photo Back to Life (CVPR 2020 oral)
minivision-ai/photo2cartoon,minivision-ai/photo2cartoon,"['cartoon', 'deep-learning', 'computer-vision', 'gan', 'avatar-generator']",人像卡通化探索项目 (photo-to-cartoon translation project)
hunglc007/tensorflow-yolov4-tflite,hunglc007/tensorflow-yolov4-tflite,"['yolov4', 'yolov3', 'tflite', 'object-detection', 'tensorflow', 'tf2', 'tensorrt', 'yolov3-tiny', 'android']","YOLOv4, YOLOv4-tiny, YOLOv3, YOLOv3-tiny Implemented in Tensorflow 2.0, Android. Convert YOLO v4 .weights tensorflow, tensorrt and tflite"
gradslam/gradslam,gradslam/gradslam,"['slam', 'deep-learning', 'machine-learning', 'robotics', '3d-reconstruction']",gradslam is an open source differentiable dense SLAM library for PyTorch
mit-han-lab/lite-transformer,mit-han-lab/lite-transformer,"['nlp', 'pytorch', 'transformer']",[ICLR 2020] Lite Transformer with Long-Short Range Attention
scalsol/mega.pytorch,Scalsol/mega.pytorch,"['video-object-detection', 'pytorch']","Memory Enhanced Global-Local Aggregation for Video Object Detection, CVPR2020"
grammarly/gector,grammarly/gector,"['grammatical-error-correction', 'natural-language-processing', 'sequence-labeling', 'transformers', 'roberta', 'bert', 'xlnet', 'nlp', 'text-simplification']","Official implementation of the papers ""GECToR – Grammatical Error Correction: Tag, Not Rewrite"" (BEA-20) and ""Text Simplification by Tagging"" (BEA-21)"
kaiyangzhou/dassl.pytorch,KaiyangZhou/Dassl.pytorch,"['pytorch', 'benchmark-datasets', 'semi-supervised-learning', 'domain-adaptation', 'domain-generalization', 'deep-learning', 'machine-learning', 'computer-vision', 'artificial-intelligence', 'deep-neural-networks']","A PyTorch toolbox for domain generalization, domain adaptation and semi-supervised learning."
nvlabs/wetectron,NVlabs/wetectron,"['object-detection', 'weakly-supervised-learning', 'computer-vision', 'deep-learning']",Weakly-supervised object detection.
media-smart/volksdep,Media-Smart/volksdep,"['pytorch', 'onnx', 'tensorrt', 'deploy', 'tensorflow', 'jetson-nano', 'jetson-tx2', 'jetson-xavier', 'inference', 'python', 'keras', 'acceleration']","volksdep is an open-source toolbox for deploying and accelerating PyTorch, ONNX and TensorFlow models with TensorRT."
thuwangcy/rechorus,THUwangcy/ReChorus,"['recommendation', 'framework', 'pytorch', 'ranking']",“Chorus” of recommendation models: a light and flexible PyTorch framework for Top-K recommendation.
sforaidl/kd_lib,SforAiDl/KD_Lib,"['knowledge-distillation', 'model-compression', 'pruning', 'quantization', 'pytorch', 'deep-learning-library', 'machine-learning', 'data-science', 'benchmarking', 'algorithm-implementations']","A Pytorch Knowledge Distillation library for benchmarking and extending works in the domains of Knowledge Distillation, Pruning, and Quantization."
zgcr/pytorch-imagenet-cifar-coco-voc-training,zgcr/SimpleAICV_pytorch_training_examples_on_ImageNet_COCO_ADE20K,"['pytorch', 'coco', 'imagenet', 'cifar100', 'darknet', 'fcos', 'resnet', 'retinanet', 'centernet', 'ttfnet', 'repvgg', 'mae', 'dino', 'vit', 'voc', 'ade20k', 'regnet']",SimpleAICV:pytorch training and testing examples on ImageNet(ILSVRC2012)/COCO2017/VOC2007+2012/CIFAR100/AED20K datasets.Include classification/object detection/distillation/contrastive learning/masked image modeling.
lyqun/fpconv,lyqun/FPConv,"['cvpr2020', 'point-cloud', 'point-convolution', 'scannet', 's3dis', 'scene-understanding', '3d-vision', '3d-convolutions', 'semantic-segmentation', 'pytorch']","FPConv: Learning Local Flattening for Point Convolution, CVPR 2020"
nanguoshun/lsr,nanguoshun/LSR,"['natural-language-processing', 'deep-learning', 'latent-variable-models']","Pytorch Implementation of our ACL 2020 Paper  ""Reasoning with Latent Structure Refinement for Document-Level Relation Extraction"""
demi6od/chatbot,demi6od/ChatBot,[],"Pytorch Generative ChatBot (Dialog System) based on RNN, Transformer, Bert and GPT2"
vita-group/gan-slimming,VITA-Group/GAN-Slimming,"['pytorch', 'compression', 'gan', 'cyclegan']","[ECCV 2020] ""All-in-One GAN Compression by Unified Optimization"" by Haotao Wang, Shupeng Gui, Haichuan Yang, Ji Liu, and Zhangyang Wang"
amosgropp/igr,amosgropp/IGR,"['deep-learning', '3d-reconstruction', 'computer-vision']",Implicit Geometric Regularization for Learning Shapes
bshall/tacotron,bshall/Tacotron,"['speech-synthesis', 'text-to-speech', 'tacotron', 'pytorch', 'tts', 'attention-mechanism']",A PyTorch implementation of Location-Relative Attention Mechanisms For Robust Long-Form Speech Synthesis
mawiszus/toad-gan,Mawiszus/TOAD-GAN,"['mario', 'ai', 'deep-learning', 'super-mario-bros', 'pcg', 'pcgml', 'gan', 'singan']","Official repository for ""TOAD-GAN: Coherent Style Level Generation from a Single Example"" by Maren Awiszus, Frederik Schubert and Bodo Rosenhahn. "
tahmid0007/visualtransformers,tahmid0007/VisualTransformers,[],"A Pytorch Implementation of the following paper ""Visual Transformers: Token-based Image Representation and Processing for Computer Vision"""
unbabel/comet,Unbabel/COMET,"['machine-translation', 'evaluation-metrics', 'natural-language-processing', 'machine-learning', 'artificial-intelligence', 'nlp']", A Neural Framework for MT Evaluation
clovaai/lffont,clovaai/lffont,"['machine-learning', 'deep-learning', 'generative-models', 'font', 'font-generation', 'pytorch', 'lf-font', 'aaai2021']",Official PyTorch implementation of LF-Font (Few-shot Font Generation with Localized Style Representations and Factorization) AAAI 2021
lartpang/hdfnet,lartpang/HDFNet,"['eccv', 'eccv2020', 'saliency-detection', 'salient-object-detection', 'image-processing', 'segmentation', 'imagesegmentation', 'imageprocessing', 'pytorch', 'saliency']",(ECCV 2020) Hierarchical Dynamic Filtering Network for RGB-D Salient Object Detection
csiro-robotics/tce,csiro-robotics/TCE,"['self-supervised-learning', 'computer-vision', 'contrastive-learning', 'metric-learning', 'representation-learning', 'ucf-101', 'pytorch', 'hmdb51', 'kinetics-datasets', 'action-recognition', 'tsne-visualisations', 'contrastive-loss', 'embeddings', 'deep-learning']",This repository contains the code implementation used in the paper Temporally Coherent Embeddings for Self-Supervised Video Representation Learning (TCE). 
zwx8981/unique,zwx8981/UNIQUE,"['image-quality-assessment', 'deep-neural-networks', 'blind-image-quality-assessment', 'learning-to-rank', 'pytorch', 'matlab']",The repository for 'Uncertainty-aware blind image quality assessment in the laboratory and wild' and 'Learning to blindly assess image quality in the laboratory and wild'
ababier/open-kbp,ababier/open-kbp,"['deep-learning', 'machine-learning', 'medical-physics', 'medical-imaging']",Develop dose prediction models for knowledge-based planning in radiotherapy
r0maink/outperformer,r0mainK/outperformer,"['pytorch', 'transformer', 'performer', 'reformer']",Code for scaling Transformers
tahmid0007/visiontransformer,tahmid0007/VisionTransformer,[],"A complete easy to follow implementation of Google's Vision Transformer proposed in ""AN IMAGE IS WORTH 16X16 WORDS"". This pytorch implementation has comments for better understanding."
rintarooo/tsp_drl_ptrnet,Rintarooo/TSP_DRL_PtrNet,"['tsp', 'deep-reinforcement-learning', 'actor-critic', 'pointer-networks', 'active-search', 'pytorch']","""Neural Combinatorial Optimization with Reinforcement Learning""[Bello+, 2016], Traveling Salesman Problem solver"
haoran-song/pip-planning-informed-prediction,Haoran-SONG/PiP-Planning-informed-Prediction,"['deep-learning', 'motion-forecasting', 'trajectory-prediction', 'trajectory-planning', 'autonomous-driving', 'eccv2020']",(ECCV 2020) PiP: Planning-informed Trajectory Prediction for Autonomous Driving
coldmanck/zero-shot-indoor-localization-release,coldmanck/zero-shot-indoor-localization-release,"['pytorch', 'graph-neural-networks', 'indoor-localization', 'place-recognition']","The official code and datasets for ""Zero-Shot Multi-View Indoor Localization via Graph Location Networks"" (ACMMM 2020)"
lucidrains/molecule-attention-transformer,lucidrains/molecule-attention-transformer,"['artificial-intelligence', 'deep-learning', 'transformers', 'molecules']","Pytorch reimplementation of Molecule Attention Transformer, which uses a transformer to tackle the graph-like structure of molecules"
chenqi008/hpgm,chenqi008/HPGM,[],Pytorch implementation for “Intelligent Home 3D: Automatic 3D-House Design from Linguistic Descriptions Only”
elliottzheng/face-detection,elliottzheng/face-detection,"['pytorch', 'face-detection', 'retinaface', 'python']",Fast and reliable face detection with RetinaFace.PyTorch
tuvuumass/task-transferability,tuvuumass/task-transferability,"['transfer-learning', 'natural-language-processing', 'bert', 'task-transferability', 'nlp-tasks', 'emnlp2020']","Data and code for our paper ""Exploring and Predicting Transferability across NLP Tasks"", to appear at EMNLP 2020. "
jac99/minkloc3d,jac99/MinkLoc3D,"['place-recognition', 'point-cloud', 'minkowski-engine', 'deep-learning', 'computer-vision', '3d-convolutional-network', '3d-vision', 'metric-learning']",MinkLoc3D: Point Cloud Based Large-Scale Place Recognition
binliang-nlp/intergcn-absa,BinLiang-NLP/InterGCN-ABSA,"['pytorch', 'graph-neural-networks', 'sentiment-analysis']",[COLING 2020] Jointly Learning Aspect-Focused and Inter-Aspect Relations with Graph Convolutional Networks for Aspect Sentiment Analysis
alexts1980/covid-ct-mask-net,AlexTS1980/COVID-CT-Mask-Net,"['ct-scans', 'covid', 'segmentation-model', 'classification-model', 'covid-19', 'mask-rcnn', 'computer-tomograpy', 'computer-vision', 'deep-learning', 'mask', 'chest']","Segmentation and Classification models for COVID CT scans (COVID, pneumonia, normal) based on Mask R-CNN."
leverxgroup/esrgan,leverxgroup/esrgan,"['super-resolution', 'image-processing', 'computer-vision', 'generative-adversarial-network', 'deep-neural-networks', 'pytorch']",Enhanced SRGAN. Champion PIRM Challenge on Perceptual Super-Resolution
rsanchezgarc/deepemhancer,rsanchezgarc/deepEMhancer,"['deep-learning', 'cryo-em']",Deep learning for cryo-EM maps post-processing
ternaus/datasouls_antispoof,ternaus/datasouls_antispoof,"['deep-learning', 'neural-network', 'antispoofing', 'liveness-detection', 'computer-vision', 'image-classification']",Code and pre-trained models for detecting spoofing attacks from images.
chenrocks/uniter,ChenRocks/UNITER,"['transformers', 'pre-training', 'vision-and-language', 'pytorch']","Research code for ECCV 2020 paper ""UNITER: UNiversal Image-TExt Representation Learning"""
media-smart/vedastr,Media-Smart/vedastr,"['pytorch', 'scene-text-recognition', 'ocr', 'ocr-recognition', 'text-recognition', 'transformer']",A scene text recognition toolbox based on PyTorch
graykode/commit-autosuggestions,graykode/commit-autosuggestions,"['commit-autosuggestions', 'natural-language', 'bert', 'text-generation', 'nlp']",A tool that AI automatically recommends commit messages.
maclory/deep-iterative-collaboration,Maclory/Deep-Iterative-Collaboration,"['image-restoration', 'super-resolution', 'face-hallucination', 'deep-learning', 'computer-vision', 'iterative-reconstruction']",Pytorch implementation of Deep Face Super-Resolution with Iterative Collaboration between Attentive Recovery and Landmark Estimation (CVPR 2020)
golsun/dialogrpt,golsun/DialogRPT,"['dialog', 'pretrained-models', 'transformers', 'pytorch', 'conversational-ai', 'dialogpt', 'gpt-2', 'human-feedback-data', 'dataset', 'dialog-datasets']","EMNLP 2020: ""Dialogue Response Ranking Training with Large-Scale Human Feedback Data"""
iffix/machin,iffiX/machin,"['reinforcement-learning', 'deep-learning', 'pytorch', 'pytorch-reinforcement-learning', 'dqn', 'ddpg', 'sac', 'ppo', 'td3', 'prioritized-experience-replay', 'distributed', 'a3c-pytorch', 'python', 'pytorch-lightning']","Reinforcement learning library(framework) designed for PyTorch, implements DQN, DDPG, A2C, PPO, SAC, MADDPG, A3C, APEX, IMPALA ..."
tntwen/openvino-yolov4,TNTWEN/OpenVINO-YOLOV4,"['openvino', 'yolov4', 'yolov4-relu', 'yolov4-tiny', 'tensorflow', 'yolov4-tiny-3l', 'scaledyolov4']","This is implementation of YOLOv4,YOLOv4-relu,YOLOv4-tiny,YOLOv4-tiny-3l,Scaled-YOLOv4 and INT8 Quantization in OpenVINO2021.3"
longmaoteamtf/deeprecsys,LongmaoTeamTf/deep_recommenders,"['deep-learning', 'ranking', 'retrieval', 'recommendation-system', 'multi-task-learning']",Deep Recommenders
thunlp/sememepso-attack,thunlp/SememePSO-Attack,"['nlp', 'adversarial-examples', 'adversarial-attacks', 'sememe', 'pso']","Code and data of the ACL 2020 paper ""Word-level Textual Adversarial Attacking as Combinatorial Optimization"""
gordicaleksa/pytorch-neural-style-transfer-fast,gordicaleksa/pytorch-neural-style-transfer-johnson,"['neural-style-transfer', 'machine-learning', 'deep-learning', 'python', 'pytorch', 'non-photorealistic-rendering', 'neural-style-transfer-tutorial', 'deep-learning-tutorial', 'style-transfer']","Reconstruction of the fast neural style transfer (Johnson et al.). Some portions of the paper have been improved by the follow-up work like the instance normalization, etc. Checkout transformer_net.py's header for details."
enochkan/plexiglass,enochkan/plexiglass,"['adversarial-attacks', 'deep-learning', 'cybersecurity', 'machine-learning', 'deep-neural-networks', 'security']",A PyTorch toolbox for adversarial attack and deepfake detection research. 
rxn4chemistry/rxnmapper,rxn4chemistry/rxnmapper,"['chemistry', 'reactions', 'rxn', 'atom-mapping', 'smiles', 'transformer']","RXNMapper: Unsupervised attention-guided atom-mapping. Code complementing our Science Advances publication on ""Extraction of organic chemistry grammar from unsupervised learning of chemical reactions"" (https://advances.sciencemag.org/content/7/15/eabe4166). "
guangmingw/doplearning,guangmingw/DOPlearning,"['deep-learning', 'self-supervised-learning', 'unsupervised-learning', 'depth-prediction', 'visual-odometry', 'optical-flow']","Code for T-ITS paper ""Unsupervised Learning of Depth, Optical Flow and Pose with Occlusion from 3D Geometry""  and for ICRA paper ""Unsupervised Learning of Monocular Depth and Ego-Motion Using Multiple Masks""."
monniert/dti-clustering,monniert/dti-clustering,"['clustering', 'pytorch', 'unsupervised-learning', 'image-clustering', 'neurips2020', 'neurips-2020', 'computer-vision', 'deep-learning']","(NeurIPS 2020 oral) Code for ""Deep Transformation-Invariant Clustering"" paper"
team-fastml/fastml,Team-fastML/fastML,"['python', 'machine-learning', 'machine-learning-algorithms', 'data-science', 'algorithms', 'deep-learning', 'neural-network']",A Python package built on sklearn for running a series of classification Algorithms in a faster and easier way.  
monniert/docextractor,monniert/docExtractor,"['document-analysis', 'segmentation', 'historical-data', 'pytorch']","(ICFHR 2020 oral) Code for ""docExtractor: An off-the-shelf historical document element extraction"" paper"
gaborvecsei/sle-gan,gaborvecsei/SLE-GAN,"['gan', 'lighweight-gan', 'image-synthesis', 'tensorflow', 'tensorflow2', 'few-shot-image-generation']",Towards Faster and Stabilized GAN Training for High-fidelity Few-shot Image Synthesis
ardaduz/deep-video-mvs,ardaduz/deep-video-mvs,"['computer-vision', 'deep-learning', 'depth-prediction', 'multi-view-stereo', 'cost-volume', 'depth-estimation', 'plane-sweep']","Code for ""DeepVideoMVS: Multi-View Stereo on Video with Recurrent Spatio-Temporal Fusion"" (CVPR 2021)"
zjufanlab/scdeepsort,ZJUFanLab/scDeepSort,"['single-cell', 'transcriptomics', 'deep-learning', 'graph-neural-network', 'cell-type-classification', 'reference-free', 'annotation', 'scrna-seq', 'gnn']",Cell-type Annotation for Single-cell Transcriptomics using Deep Learning with a Weighted Graph Neural Network
stanleylsx/entity_extractor_by_binary_tagging,StanleyLsx/entity_extractor_by_pointer,"['pytorch', 'bert', 'entity-extraction', 'binary-tagging', 'ner', 'globalpointer']",使用torch整合两种经典的指针NER抽取范式，分别是SpanBert和苏神的GlobalPointer，简单加了些tricks，配置后一键运行
gordicaleksa/pytorch-naive-video-neural-style-transfer,gordicaleksa/pytorch-naive-video-neural-style-transfer,"['neural-style-transfer', 'video', 'python', 'pytorch', 'machine-learning', 'deep-learning', 'non-photorealistic-rendering', 'neural-style-transfer-tutorial', 'semantic-segmentation', 'deep-learning-tutorial', 'style-transfer']","Create naive (no temporal loss) NST for videos with person segmentation. Just place your videos in data/, run and you get your stylized and segmented videos."
saturncloud/dask-pytorch-ddp,saturncloud/dask-pytorch-ddp,"['pytorch', 'machine-learning', 'deep-learning', 'distributed-computing', 'dask', 'nlp', 'computer-vision']",dask-pytorch-ddp is a Python package that makes it easy to train PyTorch models on dask clusters using distributed data parallel. 
tianhongzxy/pytorch-sakt,TianHongZXY/pytorch-SAKT,"['pytorch', 'nlp', 'knowledge-tracing']",a simple pytorch implemention of paper A Self-Attentive model for Knowledge Tracing
kennardwang/vtuber-momosehiyori,KennardWang/VTuber-MomoseHiyori,"['unity', 'live2d', 'opencv', 'cubism', 'python', 'socket', 'deep-learning', 'csharp', 'vtuber', 'pytorch', 'dlib']","😀 Live2D VTuber, made by Unity and Cubism. This project is based on TCP socket, Python OpenCV and deep learning algorithms used in face recognition and alignment."
jintuzheng/zisan,JintuZheng/zisan,[],Integrated CV basic application development kit based on Pytorch 基于Pytorch的集成CV基础应用开发工具包
auto-vaidya/auto_vaidya,smaranjitghose/auto_vaidya,"['python', 'deeplearning', 'tensorflow', 'medical-imaging', 'streamlit', 'slop20', 'slop', 'ch-20', 'hacktoberfest']",An open-source project for applying deep learning to medical scenarios
thinklab-sjtu/dcl_retinanet_tensorflow,Thinklab-SJTU/DCL_RetinaNet_Tensorflow,"['object-detection', 'tensorflow', 'remote-sensing']",Code for CVPR 2021 paper: Dense Label Encoding for Boundary Discontinuity Free Rotation Detection
romesco/hydra-lightning,romesco/hydra-lightning,[],Configuration classes enabling Hydra to configure and manage Pytorch Lightning projects.
ascust/3dmm-fitting-pytorch,ascust/3DMM-Fitting-Pytorch,"['3dmm', 'bfm', 'fitting', 'face-reconstruction', '3d-face-reconstruction', '3d-face', '3d-face-alignment', 'pytorch', 'basel-face-model', '3d-morphable-face-model', '3d-morphable-models', 'monocular-video-reconstruction']",A 3DMM fitting framework using Pytorch.
cgcl-codes/naturalcc,CGCL-codes/naturalcc,"['natural-language-processing', 'programming-language', 'deep-learning', 'toolkit']",NaturalCC: An Open-Source Toolkit for Code Intelligence
kohulan/decimer-image-to-smiles,Kohulan/DECIMER-Image-to-SMILES,"['decimer', 'chemical-image-recognition', 'tensorflow', 'smiles', 'decimer-image']",The repository contains the network and the related scripts for encoder-decoder based Chemical Image Recognition 
ngoquanghuy99/sentiment-classification-of-amazon-fine-food-reviews,ngoquanghuy99/Sentiment-classification-of-Amazon-fine-food-reviews,"['natural-language-processing', 'deep-learning', 'tensorflow', 'sentiment-analysis', 'text-classification', 'keras', 'glove']",A deep learning model (Bidirectional LSTM) using pretrained word embeddings to do sentiment analysis on Amazon fine food reviews dataset.
calciferzh/minimal-hand,CalciferZh/minimal-hand,"['computer-vision', 'deep-learning', '3d-hand-pose-estimation', 'hand-tracking', 'hand-motion-capture']","A minimal solution to hand motion capture from a single color camera at over 100fps. Easy to use, plug to run."
gordicaleksa/pytorch-gans,gordicaleksa/pytorch-GANs,"['gans', 'generative-adversarial-nets', 'generative-adversarial-networks', 'vanilla-gan', 'conditional-gan', 'dc-gan', 'pytorch', 'python', 'machine-learning', 'deep-learning', 'deep-learning-tutorial', 'gan-tutorial']","My implementation of various GAN (generative adversarial networks) architectures like vanilla GAN (Goodfellow et al.), cGAN (Mirza et al.), DCGAN (Radford et al.), etc."
jaywalnut310/glow-tts,jaywalnut310/glow-tts,"['pytorch', 'speech-synthesis', 'tts', 'deep-learning', 'text-to-speech']",A Generative Flow for Text-to-Speech via Monotonic Alignment Search
untitled-ai/self_supervised,untitled-ai/self_supervised,[],A Pytorch-Lightning implementation of self-supervised algorithms
google-research/long-range-arena,google-research/long-range-arena,"['transformers', 'nlp', 'deep-learning', 'attention', 'jax', 'flax']",Long Range Arena for Benchmarking Efficient Transformers
csslab/maia-chess,CSSLab/maia-chess,"['chess', 'chess-engine', 'deep-learning', 'machine-learning', 'computational-social-science']",Maia is a human-like neural network chess engine trained on millions of human games.
indobenchmark/indonlu,IndoNLP/indonlu,"['indonesian', 'bahasa', 'bert', 'benchmark', 'datasets', 'nlp', 'nlu', 'aacl', 'indobert', 'indobert-models', 'indonlu', 'indo4b', 'indobert-lite', 'indonlp']","The first-ever vast natural language processing benchmark for Indonesian Language. We provide multiple downstream tasks, pre-trained IndoBERT models, and a starter code! (AACL-IJCNLP 2020)"
microsoft/ptgnn,microsoft/ptgnn,"['graph-neural-networks', 'deep-learning', 'pytorch', 'geometric-deep-learning', 'gnn']",A PyTorch Graph Neural Network Library
justin-tan/high-fidelity-generative-compression,Justin-Tan/high-fidelity-generative-compression,"['image-compression', 'generative-adversarial-networks', 'entropy-coding', 'pytorch', 'computer-vision', 'machine-learning']",Pytorch implementation of High-Fidelity Generative Image Compression + Routines for neural image compression
confusezius/revisiting_deep_metric_learning_pytorch,Confusezius/Revisiting_Deep_Metric_Learning_PyTorch,"['deep-learning', 'metric-learning', 'deep-metric-learning', 'image-retrieval', 'cub200-2011', 'cars196', 'stanford-online-products', 'wandb', 'icml2020']","(ICML 2020) This repo contains code for our paper ""Revisiting Training Strategies and Generalization Performance in Deep Metric Learning"" (https://arxiv.org/abs/2002.08473) to facilitate consistent research in the field of Deep Metric Learning."
ika-rwth-aachen/cam2bev,ika-rwth-aachen/Cam2BEV,"['computer-vision', 'machine-learning', 'deep-learning', 'autonomous-vehicles', 'ipm', 'segmentation', 'sim2real', 'simulation', 'birds-eye-view']",TensorFlow Implementation for Computing a Semantically Segmented Bird's Eye View (BEV) Image Given the Images of Multiple Vehicle-Mounted Cameras.
megvii-basedetection/autoassign,Megvii-BaseDetection/AutoAssign,"['object-detection', 'coco-dataset', 'computer-vision']","Pytorch implementation of ""AutoAssign: Differentiable Label Assignment for Dense Object Detection"""
twhui/liteflownet3,twhui/LiteFlowNet3,"['liteflownet3', 'computer-vision', 'cnn', 'deeplearning', 'opitcal-flow', 'eccv2020', 'flow-warping', 'cost-volume-modulation', 'flow-field-deformation', 'flow-propagation']","LiteFlowNet3: Resolving Correspondence Ambiguity for More Accurate Optical Flow Estimation, ECCV 2020"
bojone/t5_in_bert4keras,bojone/t5_in_bert4keras,[],整理一下在keras中使用T5模型的要点
gmftbygmftby/opendialog,gmftbyGMFTBY/OpenDialog,"['corpus', 'generative', 'retrieval', 'gpt2', 'bert', 'transformers', 'gan-based', 'wechat-api', 'multi-view', 'wechat', 'chinese', 'open-domain', 'reinforcement-learning', 'pytorch']",An Open-Source Package for Chinese Open-domain Conversational Chatbot (中文闲聊对话系统，一键部署微信闲聊机器人)
stanfordvl/robovat,StanfordVL/robovat,"['robotics', 'deep-learning', 'deep-reinforcement-learning', 'physics-simulation']",RoboVat: A unified toolkit for simulated and real-world robotic task environments.
xv44586/ccf_2020_qa_match,xv44586/ccf_2020_qa_match,"['keras', 'bert', 'ccf', 'top1']",ccf 2020 qa match competition top1
txsun1997/colake,txsun1997/CoLAKE,"['deep-learning', 'knowledge-embedding', 'knowledge-graph', 'language-model', 'natural-language-processing']",COLING'2020: CoLAKE: Contextualized Language and Knowledge Embedding
arcchang1236/ca-noisegan,arcchang1236/CA-NoiseGAN,"['denoisers', 'noise-models', 'camera-sensors', 'eccv2020', 'eccv', 'gan', 'pytorch', 'sidd-dataset']","The official implementation of our ECCV 2020 paper ""Learning Camera-Aware Noise Models""."
kimythanly/again-vc,KimythAnly/AGAIN-VC,"['voice-conversion', 'pytorch', 'zero-shot', 'one-shot', 'any-to-any']",This is the official implementation of the paper AGAIN-VC: A One-shot Voice Conversion using Activation Guidance and Adaptive Instance Normalization.
yeyupiaoling/masr,yeyupiaoling/MASR,"['deepspeech', 'pytorch', 'asr', 'deep-learning', 'speech-recognition', 'speech-to-text', 'speech', 'conformer', 'squeezeformer']",Pytorch实现的流式与非流式的自动语音识别框架，同时兼容在线和离线识别，目前支持Conformer、Squeezeformer、DeepSpeech2模型，支持多种数据增强方法。
lightas/cvpr2020_manet,lightas/CVPR2020_MANet,[]," This is the pytorch implementation of the CVPR2020 paper ""Memory aggregation networks for efficient interactive video object segmentation""."
maxhalford/pytorch-resample,MaxHalford/pytorch-resample,"['pytorch', 'imbalanced-learning', 'undersampling', 'oversampling', 'resampling']",🎲 Iterable dataset resampling in PyTorch
vita-group/self-pu,VITA-Group/Self-PU,"['pytorch', 'pu-learning']","[ICML2020] ""Self-PU: Self Boosted and Calibrated Positive-Unlabeled Training"" by Xuxi Chen, Wuyang Chen, Tianlong Chen, Ye Yuan, Chen Gong, Kewei Chen, Zhangyang Wang"
ardauzunoglu/rte-speech-generator,ardauzunoglu/rte-speech-generator,"['python', 'tensorflow', 'natural-language-processing', 'nlp', 'politics', 'speech-processing', 'turkish', 'turkce', 'turkish-nlp']",Natural Language Processing to generate new speeches for the President of Turkey.
deligentfool/dqn_zoo,deligentfool/dqn_zoo,"['dqn', 'ddqn', 'dueling-dqn', 'prioritized-dqn', 'noisy-dqn', 'categorical-dqn', 'n-step-dqn', 'rainbow-dqn', 'pytorch', 'qr-dqn', 'iqn', 'fqf', 'distributional-dqn', 'mmddqn', 'soft-q-learning']",The implement of all kinds of dqn reinforcement learning with Pytorch
1051003502/cfgan,1051003502/CFGAN,[],A pytorch implementation of CFGAN
onuriel/permutedadain,onuriel/PermutedAdaIN,[],Pytorch Implementation of PermutedAdaIN
qxde01/gastric-cancer-detect,qxde01/gastric-cancer-detect,"['unet', 'tf2', 'u2net', 'unet3plus', 'keras']",胃癌恶性病变组织检测
oliverguhr/german-sentiment-lib,oliverguhr/german-sentiment-lib,"['bert-model', 'german', 'sentiment-analysis', 'sentiment-classification', 'python-library', 'machine-learning', 'deep-learning']",An easy to use python package for deep learning-based german sentiment classification.
menghuanlater/tianchi2020chinesemedicinequestiongeneration,menghuanlater/Tianchi2020ChineseMedicineQuestionGeneration,"['pytorch', 'roberta', 'bert', 'question-generation', 'transformer-xl', 'sequence-to-sequence']",2020 阿里云天池大数据竞赛-中医药文献问题生成挑战赛
deligentfool/policy_based_rl,deligentfool/policy_based_RL,"['reinforce', 'actor-critic', 'a2c', 'trpo', 'ppo', 'ddpg', 'td3', 'sac', 'pytorch', 'acer', 'a3c', 'icm', 'rnd']",The implement of the policy gradient RL algorithm with pytorch
dongkwonjin/semantic-line-drm,dongkwonjin/Semantic-Line-DRM,"['semantic-line-detection', 'pytorch', 'dominant-parallel-lines-detection', 'reflection-symmetry-axes-detection', 'line-detection', 'object-detection']","Official code for ""Semantic Line Detection Using Mirror Attention and Comparative Ranking and Matching"", ECCV 2020"
jbesomi/texthero,jbesomi/texthero,"['text-preprocessing', 'text-representation', 'text-visualization', 'nlp', 'word-embeddings', 'machine-learning', 'text-mining', 'nlp-pipeline', 'text-clustering', 'texthero']","Text preprocessing, representation and visualization from zero to hero."
honglinchu/siamtrackers,HonglinChu/SiamTrackers,"['tracking', 'deep-learning', 'visual-tracking']","(2020-2022)The PyTorch version  of SiamFC，SiamRPN，DaSiamRPN, UpdateNet , SiamDW, SiamRPN++, SiamMask, SiamFC++,  SiamCAR,  SiamBAN, Ocean, LightTrack , TrTr, NanoTrack;  Visual object tracking based on deep learning"
lucastabelini/laneatt,lucastabelini/LaneATT,"['lane-detection', 'deep-learning', 'computer-vision', 'pytorch']","Code for the paper entitled ""Keep your Eyes on the Lane: Real-time Attention-guided Lane Detection"" (CVPR 2021)"
gretelai/gretel-synthetics,gretelai/gretel-synthetics,"['differential-privacy', 'artificial-intelligence', 'tensorflow', 'privacy', 'synthetic-data']","Synthetic data generators for structured and unstructured text, featuring differentially private learning."
nicholasli1995/evoskeleton,Nicholasli1995/EvoSkeleton,"['human-pose-estimation', '3d-pose-estimation', 'data-augmentation', '2d-to-3d', 'deep-learning', 'evolutionary-algorithms', 'bias-correction', 'dataset', 'annotaton-tool', '3d-computer-vision', 'cvpr2020', 'geometric-deep-learning', 'generalization-on-diverse-scenes', 'feed-forward-neural-networks', 'synthetic-data', 'kinematic-trees', '3d-human-pose', 'smpl', 'cvpr']","Official project website for the CVPR 2020 paper (Oral Presentation) ""Cascaded deep monocular 3D human pose estimation wth evolutionary training data"""
charliedinh/pfedme,CharlieDinh/pFedMe,"['federated-learning', 'personalized-federated-learning', 'federated-meta-learning', 'pytorch', 'neurips-2020', 'pfedme', 'paper', 'per-fedavg']",Personalized Federated Learning with Moreau Envelopes (pFedMe) using Pytorch  (NeurIPS 2020)
fangjinhuawang/patchmatchnet,FangjinhuaWang/PatchmatchNet,"['multi-view-stereo', 'deep-learning', '3d-reconstruction']",Official code of PatchmatchNet (CVPR 2021 Oral)
bhpfelix/mtlnas,bhpfelix/MTLNAS,"['neural-architecture-search', 'automl', 'pytorch', 'multitask-learning', 'semantic-segmentation', 'surface-normals-estimation', 'convolutional-neural-networks']",[CVPR 2020] MTL-NAS: Task-Agnostic Neural Architecture Search towards General-Purpose Multi-Task Learning
i-hope-peace/changedetectionrepository,ChenHongruixuan/ChangeDetectionRepository,"['remote-sensing', 'change-detection', 'image-processing', 'multi-temporal', 'deep-learning', 'python']","This repository contains some python code of some traditional change detection methods or provides their original websites, such as SFA, MAD, and some deep learning-based change detection methods, such as SiamCRNN, DSFA, and some FCN-based methods. "
zjunlp/openue,zjunlp/OpenUE,"['triple-extraction', 'relation-extraction', 'named-entity-recognition', 'event-extraction', 'intent-classification', 'slot-filling', 'nlp-extraction-tasks', 'openue', 'nlp', 'pytorch', 'bert', 'natural-language-processing']",OpenUE是一个轻量级知识图谱抽取工具 (An Open Toolkit for Universal  Extraction from Text published at EMNLP2020: https://aclanthology.org/2020.emnlp-demos.1.pdf)
juniorrojas/hookean-springs-pytorch,juniorrojas/hookean-springs-pytorch,"['pytorch', 'physics-simulation', 'simulation']",Hookean springs in PyTorch
clorverccy/gedloss_pytorch,ViEm-ccy/GEDLoss_pytorch,[],a pytorch  implementation of Google GEDLoss
axeldelafosse/stemgen,axeldelafosse/stemgen,"['stems', 'traktor', 'spleeter', 'deep-learning', 'ni-stem', 'native-instruments', 'music', 'audio-processing', 'demucs']",🎛 Stemgen is a Stem file generator. Convert any track into a Stem and have fun with Traktor.
tuvovan/nhdrrnet,tuvovan/NHDRRNet,"['low-light-image-enhancement', 'keras', 'keras-tensorflow']",Keras Implementation of the paper Deep HDR Imaging via A Non-Local Network - TIP 2020
coolephemeroptera/aesrc2020,coolEphemeroptera/AESRC2020,"['ctc', 'resnet', 'keras', 'mtl', 'interspeech', 'accent-recognition', 'asr', 'cosface', 'arcface', 'circle-loss', 'netvlad', 'ghostvlad', 'speaker-recognition', 'crnn']",a deep accent recognition network
loodos/turkish-language-models,loodos/turkish-language-models,"['nlp', 'natural-language-processing', 'language-models', 'turkish']",Transformer based Turkish language models
juniorrojas/springs-integration-pytorch,juniorrojas/springs-integration-pytorch,"['pytorch', 'simulation', 'physics-simulation']",Numerical integration methods for mass-springs systems
nlesc-jcer/qmctorch,NLESC-JCER/QMCTorch,[],Pytorch Implementation of Real Space Quantum Monte Carlo Simulations of Molecular Systems
mukosame/zooming-slow-mo-cvpr-2020,Mukosame/Zooming-Slow-Mo-CVPR-2020,"['pytorch', 'video', 'super-resolution', 'video-frame-interpolation', 'video-super-resolution', 'spatio-temporal', 'cvpr2020', 'cvpr']",Fast and Accurate One-Stage Space-Time Video Super-Resolution (accepted in CVPR 2020)
iduta/pyconv,iduta/pyconv,"['image-recognition', 'imagenet', 'pytorch', 'deep-learning', 'convolutional-neural-networks', 'residual-networks', 'residual-learning', 'cnn', 'computer-vision', 'deep-neural-networks', 'neural-network', 'artificial-intelligence', 'pattern-recognition', 'pyconv', 'machine-learning']",Pyramidal Convolution: Rethinking Convolutional Neural Networks for Visual Recognition (https://arxiv.org/pdf/2006.11538.pdf)
adefossez/julius,adefossez/julius,"['dsp', 'pytorch']",Fast PyTorch based DSP for audio and 1D signals
iduta/iresnet,iduta/iresnet,"['image-recognition', 'imagenet', 'pytorch', 'image-classification', 'deep-learning', 'convolutional-neural-networks', 'residual-networks', 'cnn', 'visual-recognition', 'computer-vision', 'machine-learning', 'artificial-intelligence', 'pattern-recognition', 'residual-learning', 'resnet', 'iresnet', 'neural-networks', 'optimization-problem', 'deep-neural-networks', 'deep-residual-learning']",Improved Residual Networks (https://arxiv.org/pdf/2004.04989.pdf)
banditml/banditml,banditml/banditml,"['contextual-bandits', 'pytorch', 'personalization', 'neural-networks', 'bandits', 'reinforcement-learning']",A lightweight contextual bandit & reinforcement learning library designed to be used in production Python services.
aovoc/nnieqat-pytorch,aovoc/nnieqat-pytorch,"['pytorch', 'quantized-training', 'nnie', 'nnieqat-pytorch']",A nnie quantization aware training tool on pytorch.
dengpingfan/pranet,DengPingFan/PraNet,"['medical-image-segmentation', 'polyp-segmentation', 'reverse-attention', 'deep-learning']","PraNet: Parallel Reverse Attention Network for Polyp Segmentation, MICCAI 2020 (Oral). Code using Jittor Framework is available."
zhangqianhui/gazeanimation,zhangqianhui/GazeAnimation,"['gaze-estimation', 'generative-adversarial-network', 'gaze-correction', 'gaze-redirection', 'facial-attribute-editing']","Give a portrait face, move the gaze up"
linjieli222/hero,linjieli222/HERO,"['pytorch', 'transformers', 'vision-and-language', 'pretraining', 'tvr']","Research code for EMNLP 2020 paper ""HERO: Hierarchical Encoder for Video+Language Omni-representation Pre-training"""
gabeur/mmt,gabeur/mmt,"['multimodal', 'video', 'language', 'vision', 'fusion', 'nlp']",Multi-Modal Transformer for Video Retrieval
zassou65535/image_converter,zassou65535/image_converter,"['python', 'gan', 'image-converter', 'ugatit', 'pytorch', 'image-conversion', 'style-transfer']",UGATITによる画像変換器
jacen789/relation-extraction,Jacen789/relation-extraction,"['relation-extraction', 'chinese', 'nre', 'bert', 'pytorch']",中文关系抽取
cetmann/iunets,cetmann/iunets,[],A fully invertible U-Net for memory efficiency in Pytorch.
borgwardtlab/set_functions_for_time_series,BorgwardtLab/Set_Functions_for_Time_Series,"['time-series-analysis', 'set-functions', 'deep-learning', 'icml-2020']","Repository of the ICML 2020 paper ""Set Functions for Time Series"""
huawei-noah/multi_hyp_cc,huawei-noah/multi_hyp_cc,"['color-constancy', 'cvpr2020', 'convolutional-neural-networks', 'pytorch', 'whitebalance', 'cvpr']",[CVPR2020] A Multi-Hypothesis Approach to Color Constancy
mims-harvard/subgnn,mims-harvard/SubGNN,"['graph-neural-networks', 'subgraphs', 'graph-representation-learning', 'embeddings', 'deep-learning', 'dataset']",Subgraph Neural Networks (NeurIPS 2020)
iteal/wormpose,iteal/wormpose,"['python', 'machine-learning', 'deep-learning', 'pose-estimation', 'animal-pose-estimation', 'tensorflow', 'tensorflow2', 'c-elegans', 'worm', 'synthetic-dataset-generation', 'synthetic-images', 'neural-network', 'tierpsy', 'behavior-analysis', 'elegans', 'wormpose', 'computer-vision']",WormPose: Image synthesis and convolutional networks for pose estimation in C. elegans
flyhighest/unrealperson,FlyHighest/UnrealPerson,"['pytorch', 'unrealengine', 're-identification']",[CVPR-2021]  UnrealPerson: An  adaptive pipeline  for  costless person re-identification
linjieli222/hero_video_feature_extractor,linjieli222/HERO_Video_Feature_Extractor,"['pytorch', 'slowfast', 'resnet', 'video-features', 'vision-and-language']","Video Feature Extraction Code for EMNLP 2020 paper ""HERO: Hierarchical Encoder for Video+Language Omni-representation Pre-training"""
steve-tod/deformsyncnet,Steve-Tod/DeformSyncNet,[],Official pytorch implementation of DeformSyncNet: Deformation Transfer via Synchronized Shape Deformation Spaces
lucidrains/reformer-pytorch,lucidrains/reformer-pytorch,"['artificial-intelligence', 'transformers', 'attention-mechanism', 'machine-learning', 'pytorch']","Reformer, the efficient Transformer, in Pytorch"
ymcui/chinese-electra,ymcui/Chinese-ELECTRA,"['nlp', 'bert', 'electra', 'pre-trained-model', 'chinese', 'chinese-electra', 'language-model', 'pytorch', 'tensorflow']",Pre-trained Chinese ELECTRA（中文ELECTRA预训练模型）
fatescript/centernet-better,FateScript/CenterNet-better,"['deep-learning', 'computer-vision', 'object-detection']",An easy to understand and better performance version of CenterNet
clovaai/rexnet,clovaai/rexnet,"['rexnet', 'deep-learning', 'image-classification', 'object-detection', 'transfer-learning', 'pytorch', 'imagenet', 'pretrained-model']",Official Pytorch implementation of ReXNet (Rank eXpansion Network) with pretrained models
yinboc/few-shot-meta-baseline,yinboc/few-shot-meta-baseline,"['machine-learning', 'few-shot-learning', 'pytorch']","Meta-Baseline: Exploring Simple Meta-Learning for Few-Shot Learning, in ICCV 2021"
kekmodel/fixmatch-pytorch,kekmodel/FixMatch-pytorch,"['semi-supervised-learning', 'deeplearning', 'pytorch', 'fixmatch', 'randaugment']","Unofficial PyTorch implementation of ""FixMatch: Simplifying Semi-Supervised Learning with Consistency and Confidence"""
ai4bharat/indic-bert,AI4Bharat/indic-bert,"['indian-languages', 'bert', 'multilingual-models', 'language-model', 'nlp']",BERT-based Multilingual Model for Indian Languages
lucidrains/routing-transformer,lucidrains/routing-transformer,"['artificial-intelligence', 'deep-learning', 'attention-mechanism', 'transformer', 'pytorch']",Fully featured implementation of Routing Transformer
signatrix/regnet,signatrix/regnet,"['designing-network-design-spaces', 'image-classification', 'pytorch', 'deep-learning', 'regnet', 'anynet', 'fair', 'paradigm', 'squeeze-and-excitation', 'imagenet', 'classification']","Pytorch implementation of network design paradigm described in the paper ""Designing Network Design Spaces"""
karolzak/ipyplot,karolzak/ipyplot,"['image-processing', 'image-classification', 'images', 'plotting-in-python', 'jupyter-notebook', 'notebooks', 'html', 'machine-learning', 'deep-learning', 'visualization', 'image-viewer', 'notebook', 'python']","IPyPlot is a small python package offering fast and efficient plotting of images inside Python Notebooks. It's using IPython with HTML for faster, richer and more interactive way of displaying big numbers of images."
google/tensorflow-recorder,google/tensorflow-recorder,"['tensorflow-recorder', 'tfrecords', 'tensorflow', 'preprocessing', 'image-processing', 'apache-beam']",TFRecorder makes it easy to create TensorFlow records (TFRecords) from Pandas DataFrames and CSVs files containing images or structured data.
phamquiluan/publaynet,phamquiluan/PubLayNet,"['publaynet', 'pytorch', 'mask-rcnn', 'pretrained-models', 'object-detection', 'document-layout-analysis', 'paragraph-detection', 'table-detection', 'figure-detection']","ICDAR 2019: MaskRCNN on PubLayNet datasets. Paragraph detection, table detection, figure detection,..."
raphaelsty/mkb,raphaelsty/mkb,"['knowledge-graph', 'knowledge-graph-embeddings', 'graph-embedding', 'graph', 'machine-learning', 'pytorch', 'wn18', 'knowledge', 'mkb', 'embeddings', 'distillation', 'triplets']",Knowledge Base Embedding By Cooperative Knowledge Distillation
davisyoshida/tf2-gradient-checkpointing,davisyoshida/tf2-gradient-checkpointing,"['tensorflow', 'tensorflow2', 'python', 'gradient-checkpointing', 'ml', 'deep-learning', 'deep-neural-networks']",Simple gradient checkpointing for eager mode execution
l294265421/acsa,l294265421/ACSA,"['aspect-category-sentiment-analysis', 'acd', 'acsc', 'joint-model', 'pytorch', 'aspect-based-sentiment-analysis']","Papers, models and datasets for Aspect-Category Sentiment Analysis."
ultralytics/yolov5,ultralytics/yolov5,"['yolov3', 'yolov4', 'yolov5', 'object-detection', 'pytorch', 'onnx', 'coreml', 'ios', 'tflite', 'yolo', 'deep-learning', 'machine-learning', 'ml']",YOLOv5 🚀 in PyTorch > ONNX > CoreML > TFLite
babysor/mockingbird,babysor/MockingBird,"['ai', 'speech', 'pytorch', 'deep-learning']",🚀AI拟声: 5秒内克隆您的声音并生成任意语音内容 Clone a voice in 5 seconds to generate arbitrary speech in real-time
tencentarc/gfpgan,TencentARC/GFPGAN,"['pytorch', 'gan', 'deep-learning', 'super-resolution', 'face-restoration', 'image-restoration', 'gfpgan']",GFPGAN aims at developing Practical Algorithms for Real-world Face Restoration.
xinntao/real-esrgan,xinntao/Real-ESRGAN,"['esrgan', 'pytorch', 'real-esrgan', 'super-resolution', 'image-restoration', 'denoise', 'jpeg-compression', 'amine']",Real-ESRGAN aims at developing Practical Algorithms for General Image/Video Restoration.
jaidedai/easyocr,JaidedAI/EasyOCR,"['ocr', 'deep-learning', 'crnn', 'pytorch', 'lstm', 'machine-learning', 'scene-text', 'scene-text-recognition', 'optical-character-recognition', 'cnn', 'data-mining', 'image-processing', 'python', 'easyocr', 'information-retrieval']","Ready-to-use OCR with 80+ supported languages and all popular writing scripts including Latin, Chinese, Arabic, Devanagari, Cyrillic and etc."
