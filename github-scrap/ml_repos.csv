wzhe06/sparrowrecsys,wzhe06/SparrowRecSys,"['recommender-system', 'deep-learning', 'machine-learning']",A Deep Learning Recommender System
zqpei/dssd,ZQPei/DSSD,"['dssd', 'object-detection', 'one-stage', 'one-shot-object-detection']",Pytorch implementation of DSSD (Deconvolutional Single Shot Detector)
guoshnbjtu/astgcn-r-pytorch,guoshnBJTU/ASTGCN-r-pytorch,[],"Attention Based Spatial-Temporal Graph Convolutional Networks for Traffic Flow Forecasting, AAAI 2019, pytorch version"
seominseok0429/label-smoothing-visualization-pytorch,seominseok0429/label-smoothing-visualization-pytorch,[],When Does Label Smoothing Help?_pytorch_implementationimp
suicao/pytorch-audio-emotion-recognition,suicao/Pytorch-Audio-Emotion-Recognition,"['audio', 'sentiment-classification', 'cnn', 'pytorch']",1st Place Public Leaderboard Solution for ERC2019
wxdang/mscred,wxdang/MSCRED,[],tensorflow implement the paper A Deep Neural Network for Unsupervised Anomaly Detection and Diagnosis in Multivariate Time Series Data 
kevinzakka/torchsdf-fusion,kevinzakka/torchsdf-fusion,"['tsdf-fusion', 'pytorch', 'robotics', 'computer-vision']",Benchmarking PyTorch variants of TSDF fusion.
silentmoebuta/simple_bert_for_tf2,SilentMoebuta/simple_bert_for_tf2,[],Build bert as a keras layer using TF2.0 .
liu-nlper/dialogue-utterance-rewriter,liu-nlper/dialogue-utterance-rewriter,"['transformer', 'rewriter', 'bert', 'pointer', 'pointer-networks']",ACL 2019论文复现：Improving Multi-turn Dialogue Modelling with Utterance ReWriter
monologuesmw/bearing-fault-diagnosis-cnn,monologuesmw/bearing-fault-diagnosis-cnn,"['fault-diagnosis', 'siamese-neural-network', 'tensorflow', 'bearing-fault-diagnosis']",Siamese network for bearing fault diagnosis
etetteh/sota-data-augmentation-and-optimizers,etetteh/sota-data-augmentation-and-optimizers,[],This repository contains some of the latest data augmentation techniques and optimizers for image classification using pytorch and the CIFAR10 dataset
seominseok0429/learning-loss-for-active-learning-pytorch,seominseok0429/Learning-Loss-for-Active-Learning-Pytorch,[],"Learning Loss for Active Learning Pytorch Implementation,(reproduction)"
cerebroai/reformers,cerebroai/reformers,"['reformers', 'pytorch', 'tensorflow']","Efficient Transformers for research, PyTorch and Tensorflow using Locality Sensitive Hashing"
maciejczyzewski/batchboost,maciejczyzewski/batchboost,"['deep-learning', 'machine-learning', 'pytorch']","batchboost is a variation on MixUp that instead of mixing just two images, mixes many images together."
leviborodenko/dgcnn,LeviBorodenko/dgcnn,"['deep-learning', 'deep-neural-networks', 'graphical-models', 'graph-embedding', 'graph-classification', 'paper-implementations', 'gnn', 'attention-mechanism', 'graph-signals', 'dgcnn', 'graph-convolutions']","Clean & Documented TF2  implementation of ""An end-to-end deep learning architecture for graph classification"" (M. Zhang et al., 2018)."
banditml/faucetml,banditml/faucetml,"['machine-learning', 'features', 'feature-engineering', 'bigquery', 'preprocessing', 'ml', 'pytorch']",High speed mini-batch data reading & preprocessing from BigQuery.
j911/deeplabv3plus-for-beginners,J911/DeepLabV3Plus-for-Beginners,"['pytorch', 'deeplabv3plus', 'cityscapes', 'segmentation']",DeepLabV3Plus for Beginners in Cityscapes Dataset
jingzhaozhang/why-clipping-accelerates,JingzhaoZhang/why-clipping-accelerates,[],A pytorch implementation for the LSTM experiments in the paper: Why Gradient Clipping Accelerates Training: A Theoretical Justification for Adaptivity
leewise9/segmentation-based-surface-defect-detection,LeeWise9/Segmentation-Based-Surface-Defect-Detection,[],"This is a deep learning application project in the industrial field, intended to detect defects on the workpiece surface. The code is based on keras and runs on GPU."
fmahoudeau/shelfnet-human-pose-estimation,fmahoudeau/ShelfNet-Human-Pose-Estimation,"['human-pose-estimation', 'deep-learning', 'ms-coco', 'shelfnet', 'real-time', 'pytorch', 'keypoint-detection', 'keypoint-localization', 'ms-coco-keypoints', 'hrnet', 'human-pose-tracking']",Fast and accurate Human Pose Estimation using ShelfNet with PyTorch
opium-sh/prl,opium-sh/prl,"['reinforcement-learning', 'machine-learning', 'artificial-intelligence', 'deep-learning', 'neural-networks', 'openai-gym', 'opium-sh', 'python']",Open-source library for a reinforcement learning research.
sailordiary/m3f.pytorch,sailordiary/m3f.pytorch,"['emotion-recognition', 'affective-computing', 'deep-learning']","PyTorch code for ""M³T: Multi-Modal Multi-Task Learning for Continuous Valence-Arousal Estimation"""
nlp-love/introduction-nlp,NLP-LOVE/Introduction-NLP,"['nlp', 'mechine-learing', 'deep-learning', 'ai']",HanLP作者的新书《自然语言处理入门》详细笔记！业界良心之作，书中不是枯燥无味的公式罗列，而是用白话阐述的通俗易懂的算法模型。从基本概念出发，逐步介绍中文分词、词性标注、命名实体识别、信息抽取、文本聚类、文本分类、句法分析这几个热门问题的算法原理与工程实现。
jia-zhuang/pytorch-multi-gpu-training,jia-zhuang/pytorch-multi-gpu-training,"['pytorch', 'multi-gpu-training']",整理 pytorch 单机多 GPU 训练方法与原理
midasklr/ssd.pytorch,midasklr/SSD.Pytorch,[],Pytorch implementation of SSD512
hibugs/centernet,HiBugs/CenterNet,"['pytorch', 'centernet', 'face-detection', 'seaships-detection', 'centerface']",pytorch 使用centernet进行 人脸检测Face Detection (bbox + landmark)、 船只检测SeaShips Detection
abishekvashok/rep-counter,abishekvashok/Rep-Counter,"['tensorflow', 'deep-learning', 'machine-learning', 'repetition', 'repetion-counter', 'artificial-intelligence', 'neural-networks', 'rnn', 'rnn-tensorflow', 'posenet']",AI Exercise Rep Counter based on Google's Human Pose Estimation Library (Posenet)
ansleliu/efficientnet.pytorch,linksense/EfficientNet.PyTorch,"['efficientnet', 'efficient-model', 'efficient-inference', 'pytorch', 'efficientnet-pytorch', 'efficientnet-pretrained', 'efficientseg', 'imagenet', 'pretrained-weights']","Concise, Modular, Human-friendly PyTorch implementation of EfficientNet with Pre-trained Weights."
lonepatient/bert-attribute-value-extract,lonePatient/BERT-Attribute-Value-Extract,"['pytorch', 'bert', 'attribute-value-extract', 'lstm', 'crf', 'attention']","A Pytorch implementation of ""Scaling Up Open Tagging from Tens to Thousands: Comprehension Empowered Attribute Value Extraction from Product Title"" (ACL 2019)."
pengjieren/repeatnet-pytorch,PengjieRen/RepeatNet-pytorch,[],This is a pytorch (>=1.3.0) implementation of RepeatNet
imlhf/se_dcunet,IMLHF/SE_DCUNet,[],"Deep Complex UNet for speech enhancement, init from ""https://github.com/chanil1218/DCUnet.pytorch"""
zzz1515151/self-supervised_learning_sketch,zzz1515151/self-supervised_learning_sketch,"['self-supervised-learning', 'self-supervised', 'deep-learning', 'representation-learning', 'free-hand-sketch', 'sketch-recognition', 'sketch-retrieval', 'sketch-classificaton', 'temporal-convolutional-network', 'temporal-convolutions', 'rotnet']","self-supervised learning, deep learning, representation learning, RotNet, temporal convolutional network(TCN), deformation transformation, sketch pre-train, sketch classification, sketch retrieval, free-hand sketch,  official code of paper ""Deep Self-Supervised Representation Learning for Free-Hand Sketch"""
codingchaozhang/yolov3_keras,CodingChaozhang/yolov3_keras,[],yolo3-keras的源码
slientge/attrec,slientGe/AttRec,"['python', 'tensorflow', 'recommender-system']","TensorFlow simple implemenation of AttRec model in paper ""Next Item Recommendation with Self-Attention"""
antoinetheb/rnn-rl,AntoineTheb/RNN-RL,"['reinforcement-learning', 'pytorch', 'recurrent-neural-networks']",Experiments with reinforcement learning and recurrent neural networks
tangxianfeng/pa-gnn,tangxianfeng/PA-GNN,"['machine-learning', 'meta-learning', 'graph-mining', 'adversarial-defense', 'deep-learning', 'neural-networks', 'graph-neural-networks']","Implementation of paper ""Transferring Robustness for Graph Neural Network Against Poisoning Attacks""."
andrew-zzz/tree-based-deep-model,andrew-zzz/tree-based-deep-model,[],it's the realization of Tree-based Deep Model with tensorflow
oelesin/autogluon-tabular-sagemaker-container,OElesin/autogluon-tabular-sagemaker-container,"['sagemaker', 'autogluon', 'autogluon-mxnet', 'algorithm', 'ecr', 'deep-learning', 'automl']",Deploy automl models for tabular tasks on AWS Sagemaker with AutoGluon
liu2231665/taan-mtl,yingrliu/TAAN-MTL,"['multi-task-learning', 'deep-neural-networks', 'pytorch']",Adaptive Activation Network and Functional Regularization for Efficient and Flexible Deep Multi-Task Learning
cluebenchmark/cluedatasetsearch,CLUEbenchmark/CLUEDatasetSearch,"['nlp', 'datasets', 'chinese', 'ner', 'qa', 'match', 'text-classification', 'machine-translation', 'knowledge-graph', 'corpus', 'machine-reading-comprehension', 'sentiment-analysis', 'text-similarity', 'text-summarization']",搜索所有中文NLP数据集，附常用英文NLP数据集
whu-wxy/non-local-u-nets-2d-block,Whu-wxy/Non-local-U-Nets-2D-block,[],Inplement 2D global aggregation block of Non-local-U-Nets. Written in pytorch.
ainrichman/peppa-facial-landmark-pytorch,ainrichman/Peppa-Facial-Landmark-PyTorch,"['face', 'landmark', 'landmarks', 'alignment', 'onnx', 'mnn', 'facial', 'pytorch']",Facial Landmark Detection based on PyTorch
hanlard/transformer-based-pretrained-model-for-event-extraction,Hanlard/Transformer-based-pretrained-model-for-event-extraction,"['event-extraction', 'transformer', 'bert', 'ace2005', 'muti-task']",使用基于Transformer的预训练模型在ACE2005数据集上进行事件抽取任务
rick-mccoy/reformer-pytorch,Rick-McCoy/Reformer-pytorch,[],Implements Reformer: The Efficient Transformer in pytorch.
wangwenhao0716/adapted-center-and-scale-prediction,WangWenhao0716/Adapted-Center-and-Scale-Prediction,[],"Pytorch implementation of ""Adapted Center and Scale Prediction: More stable and More Accurate"""
pputzky/irim_fastmri,pputzky/irim_fastMRI,"['fastmri', 'inverse-problems', 'large-scale-learning', 'deep-learning', 'mri']",i-RIM applied to the fastMRI challenge data.
wangbq18/distillation_model_keras_bert,wangbq18/distillation_model_keras_bert,[],CNN、BiLSTM、Bert(3layers)对Bert(12layers)模型的蒸馏的keras实现
aiff22/pynet-pytorch,aiff22/PyNET-PyTorch,"['pynet', 'pytorch-implementation', 'image-enhancement', 'image-processing', 'image-reconstruction', 'deep-learning', 'raw-to-rgb', 'computer-vision', 'mobile', 'photography', 'isp', 'camera', 'image-to-image-translation', 'raw', 'photos']",Generating RGB photos from RAW image files with PyNET (PyTorch)
waterzxj/unf,waterzxj/UNF,"['pytorch', 'text-classification', 'sequence-labeling', 'torchtext']",UNF(Universal NLP Framework)
snakers4/russian_stt_text_normalization,snakers4/russian_stt_text_normalization,"['speech', 'russian-language', 'python3', 'pytorch', 'torchscript', 'text-normalization', 'speech-to-text']",Russian text normalization pipeline for speech-to-text and other applications based on tagging s2s networks
zhengyima/ncov_sentiment,zhengyima/ncov_sentiment,"['tensorflow', 'bert', 'fine-tuning', 'nlp', 'python', 'sentiment-analysis', 'sentiment-classification', 'bert-chinese', 'deep-learning', 'datafountain', 'machine-learning', 'nerual-network']",疫情期间网民情绪识别比赛baseline，使用BERT进行端到端的fine-tuning，datafountain平台，平台评测F1值0.716。
fmu2/gradfeat20,fmu2/gradfeat20,"['deep-learning', 'representation-learning', 'transfer-learning']",Gradients as Features for Deep Representation Learning
sfme/rvae_mixedtypes,sfme/RVAE_MixedTypes,"['outlier-detection', 'robust-variational-autoencoders', 'repair', 'tabular-data', 'deep-learning', 'generative-model', 'data-analysis', 'unsupervised-learning', 'pytorch', 'python']","Repository for code release of paper ""Robust Variational Autoencoders for Outlier Detection and Repair of Mixed-Type Data"" (AISTATS 2020)"
hiredscorelabs/seqtolang,hiredscorelabs/seqtolang,"['machine-learning', 'deep-learning', 'natural-language-processing', 'language-identification']",Multi-Langauge Identification
eazydammy/violence-detection-with-c3d,eazydammy/violence-detection-with-C3D,"['c3d', 'convolutional-neural-networks', 'classification', 'deep-learning', 'computer-vision', 'edge-computing', 'intel', 'violence-detection']",Violence Detection using 3D Convolutional Neural Networks
walsvid/generation3d,walsvid/Generation3D,"['3d-reconstruction', 'deep-learning', 'shape-generation', '3d-deep-learning', 'disn', 'pixel2mesh']", 3D Shape Generation Baselines in PyTorch.
daixiangzi/mask-detection,daixiangzi/Mask-Detection,"['no-mask-dataset', 'keras', 'mask-detection', 'unet', 'segmentation']",we don't use any face maks dataset to complete face mask Detection
jhultman/vision3d,jhultman/vision3d,"['3d-deep-learning', 'object-detection', 'lidar', 'point-cloud', 'pytorch', 'voxel', 'detection', 'codebase', 'perception', 'autonomous-vehicles', 'real-time']",Research platform for 3D object detection in PyTorch.
shilrley6/faster-r-cnn-with-model-pretrained-on-visual-genome,shilrley6/Faster-R-CNN-with-model-pretrained-on-Visual-Genome,[],"Faster RCNN model in Pytorch version, pretrained on the Visual Genome with ResNet 101"
alldbi/supermix,alldbi/SuperMix,"['pytorch', 'augmentation', 'supervised', 'deep-learning', 'saliency-detection', 'distillation', 'cvpr2021']",Pytorch implementation of CVPR2021 paper: SuperMix: Supervising the Mixing Data Augmentation
mohammadkhalifa/xlm-roberta-ner,mukhal/xlm-roberta-ner,"['named-entity-recognition', 'roberta', 'nlp', 'nlp-machine-learning', 'transfer-learning', 'sequence-labeling', 'part-of-speech-tagging']",Named Entity Recognition with Pretrained XLM-RoBERTa
hexops/azure-kinect-python,hexops/Azure-Kinect-Python,"['python', 'python3', 'azure', 'kinect', 'k4a', 'k4abt', 'azure-kinect', 'azure-kinect-sdk', 'opencv', 'deep-learning', 'azure-kinect-dk', 'body-tracking', 'mocap']",Python 3 bindings for the Azure Kinect SDK
610265158/face_landmark_pytorch,610265158/face_landmark_pytorch,[],pytorch face_landmark
kenneth111/transformerdemo,Kenneth111/TransformerDemo,[],Pytorch nn.Transformer Demo
sthalles/simclr-tensorflow,sthalles/SimCLR-tensorflow,"['tensorflow', 'contrastive-loss', 'contrastive-learning', 'simclr', 'representation-learning', 'unsupervised-learning', 'self-supervised-learning']",TensorFlow Implementation of SimCLR: A Simple Framework for Contrastive Learning of Visual Representations
fendouai/opencvtutorials,fendouai/OpenCVTutorials,"['opencv', 'machine-learning', 'computer-vision', 'deep-learning', 'object-detection', 'opencv-python', 'python']",OpenCV-Python4.1 中文文档
majumderb/rezero,majumderb/rezero,"['pytroch', 'transformer', 'resnet', 'language-modeling', 'deep-neural-networks']","Official PyTorch Repo for ""ReZero is All You Need: Fast Convergence at Large Depth"""
zhaogaofeng611/textmatch,zhaogaofeng611/TextMatch,[],基于Pytorch的，中文语义相似度匹配模型（ABCNN、Albert、Bert、BIMPM、DecomposableAttention、DistilBert、ESIM、RE2、Roberta、SiaGRU、XlNet）
peijiyang/bert-bilstm-crf-ner-pytorch,hertz-pj/BERT-BiLSTM-CRF-NER-pytorch,"['named-entity-recognition', 'chinese', 'pytorch', 'bert', 'bilstm-crf']",Pytorch BERT-BiLSTM-CRF For NER
lbin/centernet-better-plus,lbin/CenterNet-better-plus,"['centernet', 'detectron2', 'pytorch']",centernet
bestburning/mhxy,BestBurning/mhxy,"['tensorflow2', 'python', 'kmclass', 'opencv', 'tensorflow']",tensorflow实践：梦幻西游人物弹窗识别
hysts/pytorch_mpiigaze_demo,hysts/pytorch_mpiigaze_demo,"['computer-vision', 'gaze-estimation', 'gaze', 'pytorch']",Gaze estimation using MPIIGaze and MPIIFaceGaze
simon3dv/frustum_pointnets_pytorch,simon3dv/frustum_pointnets_pytorch,[],A pytorch version of frustum-pointnets
prunetruong/glampoints_pytorch,PruneTruong/GLAMpoints_pytorch,[],Official Pytorch implementation of GLAMpoints 
guoyi0/alphafive,GuoYi0/alphaFive,"['alphago', 'alphago-zero', 'alphazero', 'gomoku', 'reinforcement-learning', 'tensorflow', 'gobang']","alphaGo版本的五子棋(gobang, gomoku)"
hanyoseob/pytorch-noise2void,hanyoseob/pytorch-noise2void,"['deep-learning', 'deep-neural-networks', 'unsupervised-learning', 'noise2void', 'cnn', 'pytorch-gan']",Noise2Void - Learning Denoising from Single Noisy Images
longmaoteamtf/keras_ernie,LongmaoTeamTf/keras_ernie,"['ernie', 'keras', 'machine-learning']",Pre-trained ERNIE models could be loaded with Keras for feature extraction and prediction.
mxl1990/tsne-pytorch,mxl1990/tsne-pytorch,"['tsne', 'tsne-algorithm', 'tsne-cuda', 'tsne-visualization', 'pytorch']",Pytorch implementation for t-SNE with cuda to accelerate
junqi-zhang/aetn,Junqi-Zhang/AETN,"['python', 'tensorflow', 'estimator', 'transformer']",The implementation of the AutoEncoder-coupled Transformer Network by TensorFlow
szq0214/cmc_with_image_mixture,szq0214/CMC_with_Image_Mixture,[],"pytorch implementation of ""Contrastive Multiview Coding"", ""Momentum Contrast for Unsupervised Visual Representation Learning"", and ""Unsupervised Feature Learning via Non-Parametric Instance-level Discrimination"""
xggiou/tensorflow_keras_to_caffe,xggIoU/tensorflow_keras_to_caffe,[],This script implements the tensorflow1.x and keras model into a caffe inference model.
ansleliu/mixnet-pytorch,linksense/MixNet-PyTorch,"['mixnet', 'mixnets', 'pytorch', 'efficient-model', 'efficientnet', 'image-classification', 'mixnet-pytorch', 'mixseg', 'bifpn', 'lightnet']","Concise, Modular, Human-friendly PyTorch implementation of MixNet with Pre-trained Weights."
dsgiitr/audio-super-resolution,dsgiitr/Audio-Super-Resolution,"['pytorch', 'super-resolution', 'deep-learning']",Enhancment of Audio Quality (Bit-Depth and Sampling-Rate) using Deep Learning. 
a-lincui/adversarial_patch_attack,A-LinCui/Adversarial_Patch_Attack,[],Pytorch implementation of Adversarial Patch on ImageNet (arXiv: https://arxiv.org/abs/1712.09665)
dongwuuu/covid-19-classification,dongwuuu/COVID-19-Classification,"['ncp', 'covid-19', 'classification', 'cnn', 'deep-learning', 'medical-images']",COVID-19  NCP CNN classification medical image
jlian2/cnn-lstm_wind_power_prediction,jlian2/Tensorflow-Wind-Power-Prediction,"['lstm', 'cnn', 'tensorflow', 'deep-learning']",Release a public wind power dataset
cheind/pytorch-debayer,cheind/pytorch-debayer,"['debayer', 'demosaicing', 'bayer', 'bayer-filter-array', 'pytorch', 'convolution']",Convolutional PyTorch debayering / demosaicing layers
cyril-sterling/evflownet-pytorch,Cyril-Sterling/EVFlowNet-pytorch,[],EVFlowNet in pytorch
youngwanlee/vovnet-detectron2,youngwanLEE/vovnet-detectron2,"['vovnet', 'detectron2', 'object-detection', 'instance-segmentation', 'pytorch', 'panoptic-segmentation', 'cvpr2020']","VoVNet backbone networks for detectron2, in CVPR 2020"
bl0/moco,bl0/moco,"['unsupervised-learning', 'self-supervised-learning', 'pytorch', 'imagenet', 'resnet-50', 'moco', 'contrast-learning', 'momentum-contrast']","Unofficial implementation with pytorch DistributedDataParallel for ""MoCo: Momentum Contrast for Unsupervised Visual Representation Learning"""
xiongma/roberta-wwm-base-distill,xiongma/roberta-wwm-base-distill,"['bert', 'pretrained-models', 'roberta', 'tensorflow', 'natural-language-processing', 'distillation']",this is roberta wwm base distilled model which was distilled from roberta wwm  by roberta wwm large
chunyuwang/imu-human-pose-pytorch,CHUNYUWANG/imu-human-pose-pytorch,[],"This is an official Pytorch implementation of ""Fusing Wearable IMUs with Multi-View Images for Human Pose Estimation: A Geometric Approach, CVPR 2020"". "
bubbliiiing/seq2seq-keras,bubbliiiing/seq2seq-keras,[],这是一个利用keras实现seq2seq模型的仓库，大家可以通过这个仓库学习到许多的seq2seq的例子
human-analysis/muxconv,human-analysis/MUXConv,[],"MUXConv: Information Multiplexing in Convolutional Neural Networks (CVPR '20), Pytorch Implementation"
hpc203/facemaskdetection-dnn,hpc203/FaceMaskDetection-dnn,"['opencv', 'dnn', 'facemask-detection', 'deep-learning']",用opencv的dnn模块实现人脸口罩检测，包含C++和Python两种版本的实现
fabio-deep/rezero-resnet,fabio-deep/ReZero-ResNet,"['resnet', 'rezero', 'deep-learning', 'deep-neural-networks', 'residual-networks', 'pytorch', 'cifar10', 'python', 'machine-learning']",Unofficial pytorch implementation of ReZero in ResNet
charlesdong1991/hackerbert,charlesdong1991/HackerBERT,"['elasticsearch', 'bert', 'bert-embeddings', 'hacker-news', 'docker', 'docker-compose', 'nlp', 'flask']",A showcase of combining Elasticsearch with BERT on the HackerNews public data
gyunggyung/albert-text-classification,gyunggyung/ALBERT-Text-Classification,"['tensorflow', 'tensorflow2', 'bert', 'bert-model', 'bert-classifier', 'classification', 'albert', 'text-classification']","ALBERT Text Classification Tensorflow, Resume Classification"
uvipen/tetris-deep-q-learning-pytorch,uvipen/Tetris-deep-Q-learning-pytorch,"['reinforcement-learning', 'deep-q-network', 'deep-q-learning', 'pytorch', 'cv2']",Deep Q-learning for playing tetris game
fuy34/superpixel_fcn,fuy34/superpixel_fcn,"['superpixel', 'deep-learning', 'pytorch']",[CVPR‘20] SpixelFCN: Superpixel Segmentation with Fully Convolutional Network
svip-lab/fastmvsnet,svip-lab/FastMVSNet,"['pytorch', 'cvpr2020', 'multi-view-stereo']",[CVPR'20] Fast-MVSNet: Sparse-to-Dense Multi-View Stereo With Learned Propagation and Gauss-Newton Refinement
leijue222/portrait-matting-unet-flask,leijue222/portrait-matting-unet-flask,"['pytorch', 'matting', 'segmentation', 'flask', 'portrait']",Portrait Mating  implementation in UNet with PyTorch.
qianjinhao/circle-loss,qianjinhao/circle-loss,[],Circleloss pytorch version
dr-costas/dnd-sed,dr-costas/dnd-sed,"['sound-event-detection', 'depthwise-separable-convolutions', 'dilated-convolution', 'depthwiseseparableconvolution', 'dilated-cnn', 'audio-signal-processing', 'machine-listening', 'deep-learning', 'deep-neural-networks', 'machine-learning']",Sound event detection with depthwise separable and dilated convolutions. 
habout632/stargan2,habout632/StarGAN2,[],Unofficial Pytorch version StarGAN v2
adrienchaton/perceptualaudio_pytorch,adrienchaton/PerceptualAudio_Pytorch,[],"Pytorch implementation of ""A Differentiable Perceptual Audio Metric Learned from Just Noticeable Differences"", Pranay Manocha et al. - unofficial work in progress"
carrychang/real_time_datamining_software,CarryChang/Real_Time_DataMining_Software,"['data-mining-software', 'nlp', 'real-time-anslysis', 'data-spider', 'ugc-analysis', 'sentiment-analysis', 'demo']",携程/榛果民宿实时评论挖掘软件，包含数据的实时采集/数据清洗/结构化保存/ UGC 数据主题提取/情感分析/后结构化可视化等技术的综合性演示 Demo。基于在线民宿 UGC 数据的意见挖掘项目，包含数据挖掘和 NLP 相关的处理，负责数据采集、主题抽取、情感分析等任务。主要克服用户打分和评论不一致，实时对携程和美团在线民宿的满意度进行评测以及对额外数据进行可视化的综合性工具，多维度的对在线 UGC 进行数据挖掘并可视化，demo 视频演示见链接。
yuta-hi/pytorch_bayesian_unet,yuta-hi/pytorch_bayesian_unet,"['pytorch', 'cnn', 'unet', 'bayesian', 'uncertainty', 'pix2pix', 'adversarial-training']",Migrate to PyTorch. Re-implementation of Bayesian Convolutional Neural Networks (BCNNs)
therayfitzgerald/annie,TheRayFitzgerald/Annie,"['python', 'chatbot', 'nlp-machine-learning', 'nlp', 'ntlk', 'mental-health', 'dataframe', 'data-science', 'reddit-data', 'corpus', 'pandas']",A bespoke NLP Chatbot trained using a corpus of Reddit data.
aboerzel/german_license_plate_recognition,aboerzel/German_License_Plate_Recognition,"['machine-learning', 'deep-learning', 'tensorflow2', 'udacity-machine-learning-nanodegree', 'computer-vision', 'android-app', 'capstone-project', 'tflite', 'number-plate-recognition', 'plate-detection', 'detection-api', 'udacity']",Android camera app for automatic recognition of German license plates using TensorFlow / TensorFlow Lite 2.4.1
clear-nus/ocfgan,clear-nus/OCFGAN,"['generative-adversarial-network', 'gan', 'probability-metric', 'characteristic-functions']","Pytorch implementation of OCFGAN-GP (CVPR 2020, Oral)."
goktug97/pepg-es,goktug97/PEPG-ES,"['evolution-strategies', 'neural-network', 'artificial-intelligence', 'policy-gradient']",Python Implementation of Parameter-exploring Policy Gradients Evolution Strategy 
tinyzeamays/circleloss,TinyZeaMays/CircleLoss,[],"Pytorch implementation of the paper ""Circle Loss: A Unified Perspective of Pair Similarity Optimization"""
meijieru/yet_another_mobilenet_series,meijieru/yet_another_mobilenet_series,[],Yet Another Pytorch Distributed MobileNetV2-based Networks Implementation
chienwong/resunet-a,ChienWong/ResUnet-a,[],"For the semantic segmentation of remote sensing image, tensorflow implementation"
cyang0515/pytorch_ssn,CYang0515/pytorch_ssn,[],A pytorch version of SSN
minerva-j/pytorch-segmentation-multi-models,Minerva-J/Pytorch-Segmentation-multi-models,[],"Pytorch implementation for Semantic Segmentation with multi models (Deeplabv3, Deeplabv3_plus, PSPNet, UNet, UNet_AutoEncoder, UNet_nested, R2AttUNet, AttentionUNet, RecurrentUNet,, SEGNet, CENet, DsenseASPP, RefineNet, RDFNet)"
sarsbug/smp,sarsbug/SMP,[],Pytorch implementation for Deep Self-Learning From Noisy Labels
qs956/latex_ocr_pytorch,qs956/Latex_OCR_Pytorch,[],基于Pytorch实现的End-to-End图像Latex公式识别 inspire by LinXueyuanStdio/LaTeX_OCR_PRO
liviniuk/dorn_depth_estimation_pytorch,liviniuk/DORN_depth_estimation_Pytorch,"['depth-estimation', 'monocular-depth-estimation', 'pytorch', 'deep-learning', 'neural-network', 'computer-vision']","Pytorch implementation of ""Deep Ordinal Regression Network for Monocular Depth Estimation"" paper by Fu et. al."
leebebeto/pytorch-gan,leebebeto/pytorch-GAN,"['computer-vision', 'pytorch', 'gan', 'generative-model', 'generative-adversarial-network']",My pytorch implementation for GAN
islanna/dynamicrelu,Islanna/DynamicReLU,"['pytorch', 'relu', 'dynamic']",Implementation of Dynamic ReLU on Pytorch
lolei/redditcleaner,LoLei/redditcleaner,"['reddit', 'pushshift', 'data-cleaning', 'text-data', 'nlp', 'python', 'praw', 'psaw', 'hacktoberfest']",Cleans Reddit Text Data :scroll: :broom:
velebit-ai/covid-next-pytorch,velebit-ai/COVID-Next-Pytorch,"['pytorch', 'xray', 'covid-19', 'resnext']",COVID-Next -> Pytorch upgrade of the COVID-Net for COVID-19 detection in X-Ray images
evanmy/sae,evanmy/sae,"['segmentation', 'autoencoder', 'mri', 'pytorch', 'deep-learning', 'variational-autoencoder', 'unsupervised', 'brain']",Accepted in MIDL 2020
lehduong/knowledge-distillation-by-replacing-cheap-conv,lehduong/Knowledge-Distillation-by-Replacing-Cheap-Conv,"['convolutional-neural-networks', 'knowledge-distillation', 'semantic-segmentation', 'deeplabv3', 'deeplabv3plus', 'pytorch', 'low-resource']",In search of effective and efficient Pipeline for Distillating Knowledge in Convolutional Neural Networks
theobdt/aerial_pc_classification,theobdt/aerial_pc_classification,"['point-cloud', 'pytorch', 'deep-learning', 'machine-learning', 'pointcloud', 'aerial-point-clouds', 'artificial-intelligence', 'python', 'aerial-imagery']",Segmentation of urban aerial point clouds with Deep Learning in Pytorch.
ahmetfurkandemir/mask-detection-v1,AhmetFurkanDEMIR/Mask-Detection-V1,"['deep-learning', 'maskdetection', 'keras', 'keras-tensorflow', 'tensorflow', 'detection', 'object-detection', 'opencv', 'python']",Mask Detection
hyeongminlee/adacof-pytorch,HyeongminLEE/AdaCoF-pytorch,"['video-frame-interpolation', 'deep-learning', 'pytorch', 'cuda', 'cupy', 'python']","Official source code for our paper ""AdaCoF: Adaptive Collaboration of Flows for Video Frame Interpolation"" (CVPR 2020)"
selimsef/xview2_solution,selimsef/xview2_solution,"['satellite-imagery', 'deep-learning', 'semantic-segmentation']",2nd place solution for Xview2 challenge https://xview2.org/
palver7/equiconvpytorch,palver7/EquiConvPytorch,[],Pytorch implementation of EquiConv 
luanyunteng/pytorch-be-your-own-teacher,luanyunteng/pytorch-be-your-own-teacher,"['knowledge-distillation', 'self-distillation']","A pytorch implementation of paper 'Be Your Own Teacher: Improve the Performance of Convolutional Neural Networks via Self Distillation', https://arxiv.org/abs/1905.08094"
gouxiangchen/soft-q-learning,gouxiangchen/soft-Q-learning,[],"discrete soft Q learning(SQL) and soft Q imitation learning(SQIL) implementation in pytorch, simple!"
seungjunlee96/pointnet2_randaugment,seungjunlee96/PointNet2_RandAugment,"['pointnet2', 'pointnet2-pytorch', 'pytorch', 'randaugment', 'pointcloud', 'data-augmentation', 'classification', 'segmentation', '3d']",Applying RandAugment on PointNet++
imranulashrafi/banner,imranulashrafi/banner,"['bangla', 'bengali', 'ner', 'bert', 'contextualized', 'cost-sensitive-learning']",Pytorch implementation for paper 'BANNER: A Cost-Sensitive Contextualized Model for Bangla Named Entity Recognition'
agrija9/deep-unsupervised-domain-adaptation,agrija9/Deep-Unsupervised-Domain-Adaptation,"['domain-adaptation', 'convolutional-neural-networks', 'coral-loss', 'unsupervised-learning', 'deep-coral', 'deep-domain-confusion', 'conditional-adversarial-da']","Pytorch implementation of four neural network based domain adaptation techniques: DeepCORAL, DDC, CDAN and CDAN+E. Evaluated on benchmark dataset Office31."
aydinnyunus/ur-ai,aydinnyunus/UR-AI,"['chatbot', 'chatbots', 'chatbot-application', 'machine-learning', 'deep-learning', 'artificial-intelligence', 'python', 'python3', 'whatsapp', 'whatsapp-web', 'selenium', 'selenium-webdriver', 'selenium-python', 'whatsapp-chat', 'python-3', 'chat', 'bot', 'bots', 'silicon-valley', 'series']",Create Your AI ChatBot and Connect it to the Whatsapp !
blackhc/toma,BlackHC/toma,"['pytorch', 'python', 'machine-learning', 'data-science', 'gpu']",Helps you write algorithms in PyTorch that adapt to the available (CUDA) memory
iit-pavis/ai-thermometer,IIT-PAVIS/AI-Thermometer,"['ai', 'deep-learning', 'thermal-imaging']",Code for automatically measuring the temperature of people using a thermal camera.
donglee-afar/logdeep,donglee-afar/logdeep,"['log-analysis', 'anomaly-detection', 'aiops', 'deeplog', 'log-anomaly', 'pytorch', 'sequence-prediction', 'failure-detection']",log anomaly detection toolkit including DeepLog
mickeystroller/r-bert,mickeysjm/R-BERT,"['relation-extraction', 'semeval-2010', 'tacred', 'bert-model', 'relation-classification', 'pytorch']",Pytorch re-implementation of R-BERT model
erfaniaa/commit-type-detection,Erfaniaa/commit-type-detection,"['pytorch', 'tf-idf', 'deep-learning', 'neural-network', 'classification', 'paper', 'python']",Classify Git commits with deep learning
whitegive-boy/cws-hmm_bilstm-crf,WhiteGive-Boy/CWS-Hmm_BiLSTM-CRF,[],CWS中文分词 HMM BiLSTM+CRF pytorch 细致实现
kyfafyd/mirrorgan,Kyfafyd/MirrorGAN,"['text2image', 'image-captioning', 'mirrorgan', 'pytorch']",Reproduction of the paper MirrorGAN: Learning Text-to-image Generation by Redescription
image-py/planer,Image-Py/planer,"['cnn', 'deep-learning', 'inference-engine']",Powerful Light Artificial NEuRon inference framework for CNN
sicara/tf2-evonorm,sicara/tf2-evonorm,"['tensorflow', 'keras', 'deep-learning']",TensorFlow 2.0 implementation of Evonorm
felixopolka/deep-gaussian-process,FelixOpolka/Deep-Gaussian-Process,"['bayesian-inference', 'gpflow', 'tensorflow', 'deep-gaussian-processes', 'gaussian-processes', 'machine-learning']",🤿 Implementation of doubly stochastic deep Gaussian Process using GPflow and TensorFlow 2.0
stephenfang51/image_classification_pytorch,Stephenfang51/image_classification_pytorch,[],Pytorch实践简单， 方便， 快速训练 图像分类模型
tianheyu927/pcgrad,tianheyu927/PCGrad,"['multi-task-learning', 'deep-learning', 'deep-reinforcement-learning']","Code for ""Gradient Surgery for Multi-Task Learning"""
seewoo5/kt,seewoo5/KT,"['knowledge-tracing', 'pytorch']",Knowledge Tracing Models with PyTorch
riroaki/capsnet,Riroaki/CapsNet,"['pytorch', 'capsule-network', 'capsule', 'capsule-neural-networks']",A pytorch implementation of Capsule Network.
zjuter0126/resnest_in_tensorflow2.2,Holidays1999/ResNest_in_tensorflow2.2,[],ResNest_in_tensorflow.2.2
marload/distrl-tensorflow2,marload/DistRL-TensorFlow2,"['machine-learning', 'deep-learning', 'tensorflow', 'tensorflow2', 'c51', 'qr-dqn', 'dqn', 'rainbow-dqn', 'distributional-rl']",🐳 Implementation of various Distributional Reinforcement Learning Algorithms using TensorFlow2.
tensorbfs/cmpo,TensorBFS/cMPO,"['tensor-networks', 'pytorch']",continuous-time matrix product operator for finite temperature quantum states
mtics/deep-photo-enhancer,mtics/deep-photo-enhancer,"['image-enhancement', 'python', 'pytorch', 'deep-photo-enhancer']",the Pytorch implementation of Deep Photo Enhancer
juliagusak/neural-ode-norm,juliagusak/neural-ode-norm,"['neural-ode', 'anode', 'normalization', 'pytorch', 'ordinary-differential-equations', 'neural-network']","Models and code for the ICLR 2020 workshop paper ""Towards Understanding Normalization in Neural ODEs"""
gatsby2016/fast-wsi-prediction,gatsby2016/Fast-WSI-Prediction,"['pytorch', 'whole-slide-image', 'classification-task', 'pathological-images', 'deep-learning', 'medical-image-computing']",Unofficial implementation for ScanNet (a fast WSI prediction method) in PyTorch.
marload/deeprl-tensorflow2,marload/DeepRL-TensorFlow2,"['tensorflow', 'machine-learning', 'reinforcement-learning', 'a2c', 'a3c', 'reinforce', 'dqn', 'trpo', 'ppo', 'sac', 'ddpg', 'deep-learning', 'deep-reinforcement-learning', 'tensorflow2', 'dueling-dqn', 'double-dqn', 'rainbow-dqn']",🐋 Simple implementations of various popular Deep Reinforcement Learning algorithms using TensorFlow2
curiousily/deploy-bert-for-sentiment-analysis-with-fastapi,curiousily/Deploy-BERT-for-Sentiment-Analysis-with-FastAPI,"['transformers', 'bert', 'huggingface-transformer', 'huggingface', 'pytorch', 'deployment', 'fastapi', 'python', 'machine-learning', 'deep-learning', 'deploy-machine-learning', 'sentiment-analysis', 'rest', 'rest-api', 'uvicorn']","Deploy BERT for Sentiment Analysis as REST API using FastAPI, Transformers by Hugging Face and PyTorch"
hltchkust/xpersona,HLTCHKUST/Xpersona,"['crosslingual', 'dataset', 'bert', 'chatbot', 'transformer', 'dialog']",XPersona: Evaluating Multilingual Personalized Chatbot
bojone/keras_recompute,bojone/keras_recompute,[],saving memory by recomputing for keras
lucifer443/efficientdet-pytorch,lucifer443/EfficientDet-Pytorch,"['efficientdet', 'mmdetection', 'pytorch', 'detection', 'bifpn']",This project is a kind of implementation of EfficientDet(CVPR 2020) using mmdetection. 
dulaku/progan-for-humans,dulaku/ProGAN-for-Humans,[],Pytorch code for ProGAN optimized for human reading over machine execution
waterhorse1/melu_pytorch,waterhorse1/MELU_pytorch,[],An unofficial pytorch implementation of MELU
jiayiwang5/machinetranslation-transformer,jayeew/MachineTranslation-Transformer,"['transformer', 'keras', 'chinese-translation', 'machine-translation', 'chinese-nlp']",中文->英文的机器翻译，完全基于kreas-transformer。模型已上传，可直接跑。
natanielruiz/disrupting-deepfakes,natanielruiz/disrupting-deepfakes,"['adversarial-attacks', 'disrupting-deepfakes', 'deepfakes', 'deep-learning', 'machine-learning', 'computer-vision', 'deepfake-detection', 'face-swap', 'faceswap', 'fake-news', 'defending', 'defending-deepfakes']",🔥🔥Defending Against Deepfakes Using Adversarial Attacks on Conditional Image Translation Networks
heshuting555/aicity2020_dmt_vehiclereid,heshuting555/AICITY2020_DMT_VehicleReID,"['aicity', 'pytorch', 'veri-776', 'vehicle-reidentification']",The 3rd Place Submission to AICity Challenge 2020 Track2
marload/convnets-tensorflow2,marload/ConvNets-TensorFlow2,"['tensorflow', 'machine-learning', 'deep-learning', 'resnet', 'googlenet', 'vgg', 'inception-v3', 'inception-v4', 'mobilenet', 'mobilenet-v2', 'shufflenet', 'shufflenet-v2']","⛵️ Implementation a variety of popular Image Classification Models using TensorFlow2. [ResNet, GoogLeNet, VGG, Inception-v3, Inception-v4, MobileNet, MobileNet-v2, ShuffleNet, ShuffleNet-v2, etc...]"
pris-cv/oslnet,PRIS-CV/OSLNet,"['python', 'pytorch', 'small-sample', 'orthogonal']",Code release for  OSLNet: Deep Small-Sample Classification with an Orthogonal Softmax Layer (TIP2020)
declare-lab/kingdom,declare-lab/kingdom,"['sentiment-analysis', 'domain-adaptation', 'opinion-mining', 'deep-learning', 'deep-neural-networks', 'adversarial-networks', 'adversarial-learning']",Domain Adaptation using External Knowledge for Sentiment Analysis
yeyupiaoling/audioclassification-tensorflow,yeyupiaoling/AudioClassification-Tensorflow,"['tensorflow', 'urbansound8k', 'audioclassification']",基于Tensorflow实现声音分类，博客地址：
switchablenorms/adax,switchablenorms/AdaX,"['gradient-descent', 'deep-learning', 'adaptive-gradient-descent']",AdaX: Adaptive Gradient Descent with Exponential Long Term Momery
chaovven/pyrl,chaovven/PyRL,"['pytorch', 'dqn', 'ddpg', 'td3', 'reinforcement-learning', 'deep-reinforcement-learning', 'ppo', 'soft-actor-critic']","PyRL - Reinforcement Learning Framework in Pytorch (Policy Gradient, DQN, DDPG, TD3, PPO, SAC, etc.)"
dontlovebugs/superviseddepthprediction,dontLoveBugs/SupervisedDepthPrediction,"['dorn', 'depth-estimation', 'monocular', 'apex']",Pytorch framework for supervised depth prediction
guhuozhengling/deepsort_yolov4,guhuozhengling/deepsort_yolov4,"['deepsort', 'pytorch', 'yolov4']",
ankushmalaker/huse,AnkushMalaker/HUSE,"['tensorflow', 'huse', 'tf2', 'keras', 'universal-embedding']",Tensorflow implimentation of HUSE: Hierarchical Universal Semantic Embeddings
tongjinle123/speech-transformer-pytorch_lightning,tongjinle123/speech-transformer-pytorch_lightning,"['pytorch-lightning', 'speech', 'asr']",ASR project with pytorch-lightning
yananren2137/huawei-ai-food-challenge,yananren2137/huawei-ai-food-challenge,"['image-classification', 'pytorch', 'auto-augment']",
vlomonaco/ar1-pytorch,vlomonaco/ar1-pytorch,"['continual-learning', 'continualai', 'pytorch', 'incremental-learning', 'core50', 'computer-vision', 'deep-learning', 'lifelong-learning']","AR1* with Latent Replay, implemented in PyTorch"
allanyiin/yolov4,AllanYiin/YoloV4,"['yolo', 'pytorch']","Yolo v4 in pytorch, tensorflow and onnx"
jerrodparker20/adaptive-transformers-in-rl,jerrodparker20/adaptive-transformers-in-rl,"['rl', 'pomdp', 'transformer', 'attention-mechanism', 'stabilizing-transformers-for-rl', 'adaptive-attention', 'transformers-in-rl', 'torchbeast', 'impala', 'monobeast']",Adaptive Attention Span for Reinforcement Learning
marload/gans-tensorflow2,marload/GANs-TensorFlow2,"['tensorflow2', 'deeplearning', 'gan', 'dcgan', 'lsgan', 'wgan', 'wgan-gp', 'ssgan', 'generative-adversarial-network', 'tf2', 'tf', 'tensorflow']","🚀 Variants of GANs most easily implemented as TensorFlow2. GAN, DCGAN, LSGAN, WGAN, WGAN-GP, DRAGAN, ETC..."
wqt2019/tacotron-2_wavernn,wqt2019/tacotron-2_wavernn,[],tacotron-2(tensorflow) + wavernn(pytorch) chinese TTS
facebookresearch/safetorch,facebookresearch/SAFEtorch,[],pytorch version of the SAFE neural network
rishabh-karmakar/facial-recognition-based-attendance-system,rishabh-karmakar/Facial-Recognition-Based-Attendance-System,"['python-3', 'python', 'python3', 'facial-recognition', 'attendance', 'attendance-system', 'attendance-management-system', 'attendance-record', 'tensorflow', 'keras', 'keras-tensorflow', 'sqlite3', 'tkinter', 'tkinter-graphic-interface', 'opencv']","Facial Recognition Based Attendance System using Python, Tensorflow, Keras, SqlLite3, Tkinter, OpenCV"
xifengguo/dsc-net,XifengGuo/DSC-Net,[],"A Pytorch implementation of DSC-Net (Deep subspace clustering networks, NIPS17)"
lukepark327/keras-only-rl,lukepark327/keras-only-RL,[],implementing RLs using keras only
seannaren/cord-19-ann,SeanNaren/CORD-19-ANN,"['pytorch', 'covid-19', 'cord-19', 'spacy', 'scispacy', 'machine-learning', 'transformer']",ANN Search through the COVID CORD-19 Dataset using SBERT.
enghock1/real-time-2d-and-3d-hand-pose-estimation,enghock1/Real-Time-2D-and-3D-Hand-Pose-Estimation,"['deep-learning', 'computer-vision', '3d-hand-pose-estimation', '2d-hand-pose-estimation', 'real-time']",Real-Time 2D and 3D Hand Pose Estimation from RGB Image
turtlesoupy/this-word-does-not-exist,turtlesoupy/this-word-does-not-exist,"['machine-learning', 'gpt-2', 'transformers', 'natural-language-processing', 'natural-language-understanding', 'natural-language-generation']",This Word Does Not Exist
xiao9616/yolo4_tensorflow2,xiao9616/yolo4_tensorflow2,"['yolov4', 'tensorflow2']",yolo 4th edition  implemented by tensorflow2.0
ai-light/2020-zhihuihaiyang,Ai-Light/2020-zhihuihaiyang,"['datamining', 'nlp', 'time-series-analysis']",2020数字中国创新大赛-数字政府赛道-智能算法赛：智慧海洋建设算法赛道代码
seraphlabs-ca/sentencemim-demo,seraphlabs-ca/SentenceMIM-demo,"['pytorch', 'python3', 'mim', 'seraphlabs', 'nlp', 'variational-inference']","This repo contains code to reproduce some of the results presented in the paper ""SentenceMIM: A Latent Variable Language Model"""
sxjyjay/transformer-backbone,SxJyJay/Transformer-backbone,"['transformer', 'encoder', 'decoder', 'pytorch']","The reproduce of Transformer architecture in paper ""Attention is all your need"""
coder-nlper/gpt2-chinese-tf2,Coder-nlper/gpt2-chinese-tf2,[],chinese gpt2 for tensorflow2.0
titu1994/tf_neural_deconvolution,titu1994/tf_neural_deconvolution,"['tensorflow2', 'tensorflow', 'keras']",Neural Deconvolutions in Tensorflow
akshaydnicator/twitter-sentiment-analysis-nlp-hackathon,akshaydnicator/Twitter-Sentiment-Analysis-NLP-Hackathon,"['twitter', 'nlp', 'hackathon', 'analytics-vidhya', 'pre-processing', 'punctuation-marks', 'lemmetization', 'sentiment-analysis', 'spacy', 'bert-embeddings', 'elmo-vectors', 'features-extraction', 'sklearn-library', 'keras-tensorflow', 'neural-networks', 'machine-learning', 'deep-learning', 'cnn-classification', 'cross-validation', 'wordvectors']","Problem Statement: Given the tweets from customers about various tech firms who manufacture and sell mobiles, computers, laptops, etc, the task is to identify if the tweets have a negative sentiment towards such companies or products."
yanx27/pointasnl,yanx27/PointASNL,"['point-cloud', 'segmentation', 'classification', 'sample', 'tensorflow', 'self-driving', 'modelnet-dataset', 'semantickitti', 'scannet-dataset']",PointASNL: Robust Point Clouds Processing using Nonlocal Neural Networks with Adaptive Sampling （CVPR 2020）
digantamisra98/evonorm,digantamisra98/EvoNorm,"['deep-learning', 'neural-networks', 'computer-vision', 'normalization', 'neural-architecture-search', 'nas']",Unofficial PyTorch Implementation of EvoNorm
dingkeyan93/dists,dingkeyan93/DISTS,"['dists', 'iqa', 'texture', 'structure', 'similarity', 'optimization', 'loss-functions', 'pytorch', 'quality-metrics', 'image-quality-assessment']",IQA: Deep Image Structure and Texture Similarity Metric
rsanshierli/easybert,rsanshierli/EasyBert,[],基于Pytorch的Bert应用，包括命名实体识别、情感分析、文本分类以及文本相似度等
perseus784/vehicle_collision_prediction_using_cnn-lstms,perseus784/Vehicle_Collision_Prediction_Using_CNN-LSTMs,"['carla-simulator', 'carla', 'tensorflow', 'cnn', 'lstm', 'cnn-lstm', 'collision-detection', 'python', 'tensorflow-examples', 'time-distributed', 'image-series-prediction', 'scene-understanding', 'autopilot-script', 'lstms', 'vehicle-collision-prediction', 'action-recognition']",Predict Vehicle collision moments before it happens in Carla!. CNN and LSTM hybrid architecture is used to understand a series of images.
yeyupiaoling/voiceprintrecognition-tensorflow,yeyupiaoling/VoiceprintRecognition-Tensorflow,"['tensorflow', 'voice-recognition', 'arcface', 'speaker-recognition']",使用Tensorflow实现声纹识别
ashwinvin/visionlib,ashwinvin/Visionlib,"['gender-detection', 'face-detection', 'visionlib', 'yolo', 'object-detection', 'deep-learning', 'machine-learning', 'python3', 'very-easy-to-use', 'library']","A simple, easy to use, feature rich, customizable cv library"
monologg/ner-multimodal-pytorch,monologg/NER-Multimodal-pytorch,"['ner', 'named-entity-recognition', 'pytorch', 'multimodal', 'coattention', 'tweets', 'attention-network']","Pytorch Implementation of ""Adaptive Co-attention Network for Named Entity Recognition in Tweets"" (AAAI 2018)"
younggyoseo/cadm,younggyoseo/CaDM,"['reinforcement-learning', 'rl', 'deep-learning', 'mujoco', 'codebase', 'model-based', 'deep-reinforcement-learning', 'ppo', 'deep-learning-algorithms']",CaDM: Context-aware Dynamics Model for Generalization in Model-based Reinforcement Learning
tanulsingh/humour.ai-language-model-that-can-crack-jokes,tanulsingh/Humour.ai-Language-model-that-can-crack-Jokes,"['pytorch', 'language-model', 'nlg', 'nlp', 'joke', 'joker', 'humour-generator', 'gpt-2', 'transformers', 'python']",Language Model that makes you Laugh . 
trigram19/m5-python-starter,Trigram19/m5-python-starter,"['m5-competition', 'transformer']",Python framework for a good neural network for the Makidrakis 5 (M5) competition hosted on Kaggle.
kodiks/pyzemberek,kodiks/pyzemberek,"['zemberek', 'nlp', 'turkish-nlp', 'natural-language-processing', 'turkish', 'pyjnius']",pyzemberek (v0.0.1-beta) | Python implementation of the Turkish NLP library Zemberek.
farrandtom/social-distancing,FarrandTom/social-distancing,"['social-distancing', 'computer-vision', 'deep-learning', 'python', 'opencv-python', 'opencv']",:star: An easy end-to-end social distancing implementation created using OpenCV! :camera:
hugoycj/incremental-learning-with-weight-aligning,hugoycj/Incremental-Learning-with-Weight-Aligning,[],Pytorch implementation of Maintaining Discrimination and Fairness in Class Incremental Learning
jeevesh8/ghi-prediction,Jeevesh8/GHI-prediction,"['ghi', 'weather', 'forecasting', 'dhi', 'dni', 'solar-irradiance', 'machine-learning', 'time-series-forecasting', 'transformer', 'lstm-cnn', 'lstm', 'ghi-prediction', 'confidence-intervals', 'series-models', 'hacktoberfest']",PyTorch Code for running various time series models for different time stamps and confidence intervals for Solar Irradiance prediction.
epiphqny/solov2,Epiphqny/SOLOv2,"['instance-segmentation', 'mmdetection', 'pytorch']","SOLOv2: Dynamic, Faster and Stronger, achives 39.5mAP on coco test-dev (36 epochs result)"
johnbetacode/social-distancing-analyser,JohnBetaCode/Social-Distancing-Analyser,"['computer-vision', 'ai', 'object-detection', 'extrinsic', 'intrinsic', 'calibration', 'social-distancing', 'opencv', 'tensorflow', 'yolov4', 'covid19', 'anaconda', 'calibration-process', 'detection-model', 'yolo', 'opencv4', 'opensource', 'image-processing', 'deep-learning']","Considering the big change that the world is facing, as well as our lives due to the COVID-19, we provide to people and companies a complete open-source tool to analyze the social distancing for streets, parks, offices, and even crowded places like malls, train stations, and others."
leaderj1001/synthesizer-rethinking-self-attention-transformer-models,leaderj1001/Synthesizer-Rethinking-Self-Attention-Transformer-Models,"['transformer', 'synthesizer', 'pytorch']",Implementing SYNTHESIZER: Rethinking Self-Attention in Transformer Models using Pytorch
lotayou/cocosnet,Lotayou/CoCosNet,[],"Pytorch Implementation of the paper [""Cross-domain Correspondence Learning for Exemplar-based Image Translation""](https://panzhang0212.github.io/CoCosNet)"
angry-coder-room/naruto-handsigns-predict-dl,shreyas-jk/Naruto-Handsigns-Predict-DL,"['deep-learning', 'convolutional-neural-networks', 'cnn-keras']",Using Convolution Neural Networks to classify Naruto Hand Signs.
snnclsr/ner,snnclsr/ner,"['ner', 'nlp']",Turkish Named Entity Recognition
wqt2019/tacotron-2_melgan,wqt2019/tacotron-2_melgan,[],tacotron-2(tensorflow) + melgan(pytorch) chinese TTS
mayurji/social-distancing-using-deep-learning-and-opencv,Mayurji/Social-DIstancing-Using-Deep-Learning-and-OpenCV,"['social-distancing-detection', 'python', 'yolov3', 'deep-learning', 'opencv', 'covid-19']",Considering the unfortunate circumstances due to COVID-19 keeping distance from one person to another is crucial.
isp1tze/maproj,isp1tze/MAProj,"['multi-agent-reinforcement-learning', 'pytorch', 'commnet', 'bicnet', 'maddpg']","Multi-agent project (commnet, bicnet, maddpg) in pytorch for Multi-Agent Particle Environment"
junqiangchen/lunglobesegmentation,junqiangchen/LungLobeSegmentation,"['tensorflow', 'python', 'lung', 'lung-segmentation', 'lobe', 'vnet', 'focal']",Lobe Segmentation
sgrvinod/a-pytorch-tutorial-to-super-resolution,sgrvinod/a-PyTorch-Tutorial-to-Super-Resolution,"['pytorch-tutorial', 'pytorch', 'super-resolution', 'srgan', 'generative-adversarial-network', 'gan', 'gans']",Photo-Realistic Single Image Super-Resolution Using a Generative Adversarial Network | a PyTorch Tutorial to Super-Resolution
miaoshuyu/object-detection-usages,miaoshuyu/object-detection-usages,[],"The brief implementation and using examples of object detection usages like, IoU, NMS, soft-NMS, SmoothL1、IoU loss、GIoU loss、 DIoU loss、CIoU loss, cross-entropy、focal-loss、GHM, AP/MAP and so on by Pytorch."
liuyukid/transformers-ner,liuyukid/transformers-ner,"['ner', 'pytorch', 'transformers', 'bert', 'electra', 'roberta', 'albert', 'adversarial-training', 'crf', 'softmax', 'span', 'distilbert', 'camembert', 'xlm', 'xlmroberta', 'pgd', 'fgm']",Pytorch-Named-Entity-Recognition-with-transformers
furkanom/tf-faster-rcnn,FurkanOM/tf-faster-rcnn,"['faster-rcnn', 'object-detection', 'tensorflow2', 'keras-tensorflow', 'deep-learning', 'batch-processing', 'tf2', 'mobilenetv2']",Tensorflow 2 Faster-RCNN implementation from scratch supporting to the batch processing with MobileNetV2 and VGG16 backbones
cluebenchmark/lightlm,CLUEbenchmark/LightLM,"['nlpcc', 'nlpcc2020', 'nlp', 'languagemodel', 'bert', 'chinese', 'chinese-language-model']",高性能小模型测评 Shared Tasks in NLPCC 2020. Task 1 - Light Pre-Training Chinese Language Model for NLP Task
98zyx/hetero-center-loss-for-cross-modality-person-re-id,98zyx/Hetero-center-loss-for-cross-modality-person-re-id,"['pytorch', 'person-reidentification', 'cross-modality-re-identification']","Code for paper ""Hetero-center loss for cross-modality person re-identification"""
yas-sim/gaze-estimation-with-laser-sparking,yas-sim/gaze-estimation-with-laser-sparking,"['intel', 'openvino', 'openvino-toolkit', 'deep-learning', 'face-detection', 'head-pose-estimation', 'face-landmark-detection', 'gaze-estimation', 'python', 'inference-engine', 'inference', 'gaze', 'head-pose', 'face-landmarks', 'face-landmarking', 'face-landmark', 'laser-beams', 'head-rotation-angles', 'landmark-points', 'demo']",Deep learning based gaze estimation demo with a fun feature :-)
inmoonlight/koco,inmoonlight/koco,"['natural-language-processing', 'dataset-loader', 'korean', 'korean-nlp']",Easy installer of kocohub dataset
yas-sim/object-tracking-line-crossing-area-intrusion,yas-sim/object-tracking-line-crossing-area-intrusion,"['intel', 'openvino', 'openvino-toolkit', 'inference-engine', 'inference', 'object-detection', 'object-tracking', 'pedestrian-detection', 'pedestrian-tracking', 'line-crossing-detection', 'intrusion-detection', 'python', 'area-intrusion-detection', 'deep-learning', 'identification', 'identification-model', 'trajectory', 'surveillance-systems', 'video-surveillance', 'surveillance']",Deep learning based object tracking with line crossing and area intrusion detection
chenwwweixiang/opencoviddetector,ChenWWWeixiang/OpenCovidDetector,"['python', 'covid19', 'covid-19', 'diagnosis', 'pytorch']","New virsion for multi-categories were available. Since too many changes above old virsion, please refer to this site https://github.com/ChenWWWeixiang/diagnosis_covid19"
timchen0618/pytorch-leo,timchen0618/pytorch-leo,"['meta-learning', 'machine-learning', 'pytorch-implementation', 'python3', 'leo']",Pytorch Implemtation of Meta-Learning with Latent Embedding Optimization
yas-sim/person-detect-reidentification,yas-sim/person-detect-reidentification,"['intel', 'openvino', 'openvino-toolkit', 'inference', 'inference-engine', 'people-detection', 'face-detection', 'matching-problems', 'feature-extraction', 'deep-learning', 'python', 'hungarian-assignment', 'identification', 'identification-model', 'dl-models', 'demo', 'feature-vectores', 'multiple-cameras', 'surveillance']",Person or face detection and matching from multiple image inputs using Intel OpenVINO toolkit
cilame/yidun_icon,cilame/yidun_icon,[],易盾图标识别，包含定位以及点选顺序的识别，定位 pytorch 模型大小只有3M，执行速度极快。内附代码和测试用例，直接使用即可测试。定位准确率 95% 以上，识别用的sift算法，测试通过率大概 50%。
simeonedef/time-series_imaging_forecasting,Simeonedef/Time-Series_Imaging_Forecasting,"['time-series-forecasting', 'tensorflow2', 'conv-lstm', 'holt-winter', 'conv-mlp', 'lstm-architecture', 'series', 'predictions', 'convolutional-layers', 'convolutional-lstm', 'matplotlib', 'deep-learning', 'eth-zurich', 'ethz']","In this project we have explored the use of imaging time series to enhance forecasting results with Neural Networks. The approach has revealed itself to be extremely promising as, both in combination with an LSTM architecture and without, it has out-performed the pure LSTM architecture by a solid margin within our test datasets."
yas-sim/handwritten-japanese-ocr,yas-sim/handwritten-japanese-ocr,"['intel', 'openvino', 'ocr', 'japanese', 'text-recognition', 'text-detection', 'deep-learning', 'inference-engine', 'handwritten-text-recognition', 'ocr-demo', 'dl-models', 'text-regions', 'touch-panel', 'python']",Handwritten Japanese OCR demo using touch panel to draw the input text using Intel OpenVINO toolkit
kuangcaomvp/speech-recognize,kuangcaomvp/speech-recognize,[],transformer的 encoder-decoder结构基于tensorflow实现的中文语音识别项目
tanulsingh/emotion-and-its-stimulus-detection,tanulsingh/Emotion-and-its-Stimulus-Detection,"['nlp', 'transformer', 'huggingface-library', 't5', 'emotion-detection', 'question-answering']",Detection of Emotion and its cause from text
alexklwong/unsupervised-depth-completion-visual-inertial-odometry,alexklwong/unsupervised-depth-completion-visual-inertial-odometry,"['ucla', 'depth-completion', '3d-reconstruction', 'unsupervised-learning', 'machine-learning', 'sensor-fusion', 'deep-learning', 'self-supervised-learning', 'depth', 'icra', 'ral', 'tensorflow', 'computer-vision', 'kitti', 'void', '3d-vision', 'depth-estimation']",Tensorflow implementation of Unsupervised Depth Completion from Visual Inertial Odometry (in RA-L January 2020 & ICRA 2020)
avinashpaliwal/deep-slomo,avinashpaliwal/Deep-SloMo,"['hybrid-imaging', 'video-frame-interpolation', 'deep-slomo', 'slow-motion', 'deep-learning', 'slomo', 'convolutional-neural-networks', 'frame-interpolation', 'pytorch-implementation', 'pytorch', 'dual-cameras', 'super-resolution', 'video-super-resolution']","Official PyTorch implementation of ""Deep Slow Motion Video Reconstruction with Hybrid Imaging System"" (TPAMI)"
raghavian/graph_refinement,raghavian/graph_refinement,[],"This is official Pytorch implementation of ""Graph Refinement based Airway Extraction using Mean-Field Networks and Graph Neural Networks"", Raghavendra Selvan et al. 2020"
audio-captioning/dcase-2020-baseline,audio-captioning/dcase-2020-baseline,"['audio-captioning', 'audio-signal-processing', 'captioning', 'deep-learning', 'deep-neural-networks', 'machine-listening', 'machine-learning', 'signal-processing', 'dcase2020', 'dcase']",Audio captioning baseline system for DCASE 2020 challenge. 
yas-sim/interactive-image-inpainting,yas-sim/interactive-image-inpainting,"['intel', 'openvino', 'openvino-toolkit', 'deep-learning', 'inpaint', 'inference-engine', 'inference', 'image-ret', 'image-retrieval', 'image-inpainting', 'demo', 'dl-models', 'undesired-objects', 'picture', 'python', 'draw', 'interactive-demo']",Deep Learning Based Interactive Image Inpainting Demo
furkanom/tf-ssd,FurkanOM/tf-ssd,"['ssd', 'object-detection', 'ssd300', 'trained-models', 'tensorflow', 'tensorflow2', 'tf2', 'deep-learning', 'mobilenet-ssd', 'mobilenetv2', 'vgg16']",Tensorflow 2 single shot multibox detector (SSD) implementation from scratch with MobileNetV2 and VGG16 backbones
krishnadn/attentive-statistics-pooling-for-deep-speaker-embedding,KrishnaDN/Attentive-Statistics-Pooling-for-Deep-Speaker-Embedding,"['speaker-recognition', 'speaker-identification', 'speech', 'attention-model']","Implementation of the paper ""Attentive Statistics Pooling for Deep Speaker Embedding"" in Pytorch"
huffon/semantic-search-faiss,Huffon/semantic-search-faiss,"['faiss', 'semantic-search', 'elasticsearch', 'natural-language-processing']",Semantic Search using FAISS & ElasticSearch
nullbyte91/computer-pointer-controller,nullbyte91/Computer-Pointer-Controller,"['computer-pointer-controller', 'python3', 'gaze-estimation', 'head-pose-estimation', 'face-detection', 'face-landmark-detection', 'mouse-controls', 'openvino', 'adas', 'deep-learning', 'opencv']",Deep learning based Gaze detection model to control the mouse pointer of your computer
alfonmedela/triplet-loss-pytorch,alfonmedela/triplet-loss-pytorch,"['triplet-loss', 'triplet', 'loss-functions', 'metric-learning', 'constellation', 'pytorch', 'pytorch-implementation']",Highly efficient PyTorch version of the Semi-hard Triplet loss ⚡️
saic-vul/image_harmonization,saic-vul/image_harmonization,"['image-harmonization', 'harmonization', 'pytorch', 'hrnets']",[WACV2021] Foreground-aware Semantic Representations for Image Harmonization https://arxiv.org/abs/2006.00809
sicara/gpumonitor,sicara/gpumonitor,"['tensorflow', 'pytorch-lightning', 'gpu-monitoring']",TF 2.x and PyTorch Lightning Callbacks for GPU monitoring
elephantmipt/bert-distillation,elephantmipt/bert-distillation,"['catalyst', 'bert', 'nlp', 'distillation', 'distilbert', 'rubert']",Distillation of BERT model with catalyst framework
lht-curry/covid19_qa_baseline,LHT-Curry/COVID19_QA_baseline,[],DataFountain疫情问答助手keras-bert实现
mohammadkhalifa/fairseq-tagging,mukhal/fairseq-tagging,"['nlp', 'nlp-machine-learning', 'fairseq', 'machine-learning', 'sequence-labeling', 'named', 'ner', 'labeling-tasks', 'prediction', 'pos-tagging']",a Fairseq fork for sequence tagging/labeling tasks
chenao-phys/pytorch-jacobian,ChenAo-Phys/pytorch-Jacobian,[],Implement efficient jacobian method available for most pytorch networks
kyzhouhzau/nlpgnn,kyzhouhzau/NLPGNN,"['tensorflow2', 'bert', 'gpt2', 'albert', 'bert-ner', 'bert-cls', 'textcnn', 'bilstm-attention', 'albert-ner', 'tf2', 'message-passing', 'gcn', 'gin', 'gan', 'graph-convolutional-networks', 'graphsage', 'graph-classfication', 'textgcn', 'nlp', 'gnn']","1. Use BERT, ALBERT and GPT2 as  tensorflow2.0's layer.  2. Implement GCN, GAN, GIN and GraphSAGE based on message passing."
d-li14/ghostnet.pytorch,d-li14/ghostnet.pytorch,"['ghostnet', 'pytorch', 'reproduction', 'mobilenetv3', 'pretrained-models', 'imagenet']",73.6% GhostNet 1.0x pre-trained model on ImageNet
liujiaheng/compression,liujiaheng/compression,"['pytorch', 'compression', 'image-compression']",Learned image compression
uds-lsv/bert-stable-fine-tuning,uds-lsv/bert-stable-fine-tuning,"['nlp', 'bert', 'fine-tuning']","On the Stability of Fine-tuning BERT: Misconceptions, Explanations, and Strong Baselines"
confusezius/cvpr2020_pads,Confusezius/CVPR2020_PADS,"['deep-metric-learning', 'cvpr2020', 'pytorch', 'deep-learning', 'retrieval', 'cub200-2011', 'cars196', 'metric-learning']","(CVPR 2020) This repo contains code for ""PADS: Policy-Adapted Sampling for Visual Similarity Learning"", which proposes learnable triplet mining with Reinforcement Learning."
theshadow29/vognet-pytorch,TheShadow29/vognet-pytorch,"['grounding', 'visual-grounding', 'video', 'video-object-grounding', 'pytorch-implementation', 'vision', 'vision-and-language', 'nlp', 'object-grounding', 'video-grounding', 'captioning-videos']",[CVPR20] Video Object Grounding using Semantic Roles in Language Description (https://arxiv.org/abs/2003.10606)
goktug97/estorch,goktug97/estorch,"['evolutionary-algorithms', 'evolution-strategies', 'pytorch', 'neural-network', 'reinforcement-learning', 'mpi', 'parallel-computing', 'evolution-strategy-library']",Evolution Strategy Library
ajitrajasekharan/unsupervised_ner,ajitrajasekharan/unsupervised_NER,"['nlp', 'natural-language-processing', 'ner', 'self-supervised-learning']",Self-supervised NER prototype - updated version (69 entity types - 17 broad entity groups). Uses pretrained BERT models with no fine tuning. State-of-art performance on 3 biomedical datasets
gatsby2016/augmentation-pytorch-transforms,gatsby2016/Augmentation-PyTorch-Transforms,"['image-augmentation', 'augmentation', 'pytorch', 'pytorch-transforms', 'affine-transformation', 'elastic-transformation', 'color-deconvolution', 'pathology-image', 'histopathology-images']",Image data augmentation on-the-fly by add new class on transforms in PyTorch and torchvision.
inhwanbae/enet-sad_pytorch,InhwanBae/ENet-SAD_Pytorch,"['lane-detection', 'enet', 'self-attention-distillation', 'pytorch-implementation', 'deep-learning', 'semantic-segmentation', 'pytorch', 'python']","Pytorch implementation of ""Learning Lightweight Lane Detection CNNs by Self Attention Distillation (ICCV 2019)"""
menon92/banglatranslator,menon92/BanglaTranslator,"['tensorflow', 'attention', 'encoder-decoder', 'lstm', 'translators', 'bangla', 'bangla-nlp', 'bangla-machine-translation']",Bangla Machine Translator
syuntoku14/pytorch-rl-il,syuntoku14/pytorch-rl-il,[],A library for building reinforcement learning and imitation learning agents in Pytorch
grohith327/simplegan,grohith327/simplegan,"['deep-learning', 'gan', 'tensorflow', 'python-library', 'computer-vision', 'generative-adversarial-network', 'generative-model', 'python3', 'neural-networks']",Tensorflow-based framework to ease training of generative models
xialuxi/circleloss_face,xialuxi/CircleLoss_Face,"['pytorch', 'circleloss']",pytorch CircleLoss for Face recognition
zgcr/aicity2020_track2_reid_bebetter,zgcr/AICITY2020_track2_reid_BeBetter,"['aicitychallenge', 'aicity2020', 'vehicle-reid', 'pytorch']",AICITY2020 track2 reid open source code.
nlpatvcu/multitasking_transformers,NLPatVCU/multitasking_transformers,"['clinical-nlp', 'deep-learning', 'bert', 'multi-task-learning']",Multitask Learning with Pretrained Transformers
lululxvi/deep-learning-for-indentation,lululxvi/deep-learning-for-indentation,"['deep-learning', 'indentation', 'mechanics-of-materials', 'additive-manufacturing']",Extraction of mechanical properties of materials through deep learning from instrumented indentation
lucidrains/axial-positional-embedding,lucidrains/axial-positional-embedding,"['artificial-intelligence', 'deep-learning', 'pytorch']",Axial Positional Embedding for Pytorch
lukasruff/classification-ad,lukasruff/Classification-AD,"['anomaly-detection', 'deep-learning', 'one-class-classification', 'one-class-learning', 'deep-anomaly-detection', 'machine-learning', 'pytorch', 'python', 'python3']","Repository for the paper ""Rethinking Assumptions in Anomaly Detection"""
amanjain1397/huse,amanjain1397/HUSE,"['pytorch', 'universal-embedding', 'huse']",PyTorch implementation of HUSE: Hierarchical Universal Semantic Embeddings
alessiacosmos/trashdetection-huaweicloud,Alessiacosmos/TrashDetection-HuaweiCloud,"['pytorch', '2020huaweicloud', 'modelarts']",“华为云杯”2020深圳开放数据应用创新大赛·生活垃圾图片分类 Pytorch版本基础配置文件
lucidrains/product-key-memory,lucidrains/product-key-memory,"['artificial-intelligence', 'deep-learning', 'transformers', 'pytorch']",Standalone Product Key Memory module in Pytorch - for augmenting Transformer models
brendanxwhitaker/asta,langfield/asta,[],Shape annotations for numpy arrays and pytorch/tensorflow tensors.
pierresegonne/vinf,pierresegonne/VINF,"['variational-inference', 'python3', 'tensorflow', 'distributions']","Repository for DTU Special Course, focusing on Variational Inference using Normalizing Flows (VINF). Supervised by Michael Riis Andersen"
elliottwu/unsup3d,elliottwu/unsup3d,"['3d-objects', '3d', '3d-reconstuction', 'unsupervised', 'unsupervised-learning', 'cvpr', 'cvpr-2020', 'cvpr2020', 'pytorch']",(CVPR'20 Oral) Unsupervised Learning of Probably Symmetric Deformable 3D Objects from Images in the Wild
alvinwan/neural-backed-decision-trees,alvinwan/neural-backed-decision-trees,"['decision-trees', 'neural-networks', 'image-classification', 'explainability', 'tiny-imagenet', 'cifar10', 'cifar100', 'interpretability', 'imagenet', 'neural-backed-decision-trees', 'pretrained-weights', 'pretrained-models', 'pytorch']","Making decision trees competitive with neural networks on CIFAR10, CIFAR100, TinyImagenet200, Imagenet"
maclory/spsr,Maclory/SPSR,"['structure-preserving', 'super-resolution', 'image-restoration', 'computer-vision', 'deep-learning']",Pytorch implementation of Structure-Preserving Super Resolution with Gradient Guidance (CVPR 2020 & TPAMI 2021) 
nvlabs/ssv,NVlabs/SSV,[],Pytorch implementation of SSV: Self-Supervised Viewpoint Learning from Image Collections (CVPR 2020)
aiff22/pynet,aiff22/PyNET,"['pynet', 'image-enhancement', 'image-processing', 'image-reconstruction', 'deep-learning', 'raw-to-rgb', 'computer-vision', 'mobile', 'photography', 'isp', 'camera', 'image-to-image-translation', 'raw', 'photos']",Generating RGB photos from RAW image files with PyNET
prasunroy/stefann,prasunroy/stefann,"['stefann', 'fannet', 'colornet', 'scene-text-editor', 'font-generation', 'color-transfer', 'computer-vision', 'deep-learning', 'cvpr', 'cvpr2020']",:fire: [CVPR 2020] STEFANN: Scene Text Editor using Font Adaptive Neural Network @ The IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR) 2020.
chenmingxiang110/growing-neural-cellular-automata,chenmingxiang110/Growing-Neural-Cellular-Automata,"['cellular-automata', 'neural-cellular-automata', 'neural-networks', 'deep-learning', 'conway-s-game-of-life']",A reproduction of growing neural cellular automata using PyTorch.
rmokady/structural-analogy,rmokady/structural-analogy,[],"Pytorch implementation for the paper ""Structural-analogy from a Single Image Pair"""
aiff22/pynet-bokeh,aiff22/PyNET-Bokeh,"['pynet', 'bokeh', 'bokeh-effect', 'shallow-depth-of-field', 'blur', 'blurred-background', 'aperture', 'image-processing', 'image-reconstruction', 'image-to-image-translation', 'deep-learning', 'computer-vision', 'mobile', 'photography', 'smartphones', 'camera', 'photos', 'inference']",Rendering Realistic Bokeh Images with PyNET
kaixhin/imitation-learning,Kaixhin/imitation-learning,"['deep-learning', 'deep-reinforcement-learning', 'imitation-learning']",Imitation learning algorithms
visualcomputinginstitute/dcm-net,JonasSchult/dcm-net,"['dcm-net', '3d-deep-learning', 'deep-learning', 'semantic-segmentation', '3d-segmentation', 'scannet', 'cvpr2020', 'cvpr']","This work is based on our paper ""DualConvMesh-Net: Joint Geodesic and Euclidean Convolutions on 3D Meshes"", which appeared at the IEEE Conference On Computer Vision And Pattern Recognition (CVPR) 2020."
joffery/m-ada,joffery/M-ADA,[],"The Pytorch implementation for ""Learning to Learn Single Domain Generalization"" (CVPR 2020)"
glam-imperial/emotionalconversionstargan,glam-imperial/EmotionalConversionStarGAN,"['generative-adversarial-network', 'stargan', 'stargan-vc', 'data-augmentation', 'emotion-recognition', 'speech-synthesis', 'deep-learning', 'deep-neural-networks', 'icassp-2020', 'icassp', 'imperial-college-london', 'augsburg-university', 'imperial-glam']","This repository contains code to replicate results from the ICASSP 2020 paper ""StarGAN for Emotional Speech Conversion: Validated by Data Augmentation of End-to-End Emotion Recognition""."
clovaai/embedding-expansion,clovaai/embedding-expansion,"['metric-learning', 'image-retrieval', 'image-clustering', 'deep-learning', 'synthesis', 'cars196', 'stanford-online-products', 'cub200-2011', 'cvpr2020', 'mxnet']","Official MXNet implementation of ""Embedding Expansion: Augmentation in Embedding Space for Deep Metric Learning"" (CVPR 2020)"
claying/gckn,claying/GCKN,[],Pytorch Implementation of Graph Convolutional Kernel Networks
haamoon/mmtm,haamoon/mmtm,"['multimodal-deep-learning', 'multimodal-learning', 'cnn-fusion', 'pytorch', 'action-recognition', 'speech-enhancement', 'gesture-recognition']","Implementation of CVPR 2020 paper ""MMTM: Multimodal Transfer Module for CNN Fusion"""
murtyshikhar/expbert,MurtyShikhar/ExpBERT,"['nlp', 'bert']","Code for our ACL '20 paper ""Representation Engineering with Natural Language Explanations"""
linzichuan/admrl,LinZichuan/AdMRL,"['meta-reinforcement-learning', 'model-based-rl', 'adversarial-training', 'tensorflow']","Code for paper ""Model-based Adversarial Meta-Reinforcement Learning"" (https://arxiv.org/abs/2006.08875)"
angelwmab/time-flies,angelwmab/Time-Flies,"['pytorch', 'style-transfer', 'cvpr2020']","Time Flies: Animating a Still Image with Time-Lapse Video as Reference, CVPR2020"
gt-ripl/multiagentperception,GT-RIPL/MultiAgentPerception,"['cvpr2020', 'multi-agent-systems', 'semantic-segmentation', 'multi-view', 'deep-learning']","Official source code to CVPR'20 paper, ""When2com: Multi-Agent Perception via Communication Graph Grouping"""
yukariin/san_pytorch,Yukariin/SAN_pytorch,"['pytorch', 'super-resolution', 'single-image-super-resolution', 'attention']",Second-order Attention Network for Single Image Super-resolution (CVPR-2019)
cdj0311/two_tower_recommendation_system,cdj0311/two_tower_recommendation_system,[],"A two tower recommendation system  implementation with tensorflow estimator, for CTR or Recall."
oscarshu0719/pytorch-stargan-vc2,Oscarshu0719/pytorch-StarGAN-VC2,"['pytorch', 'python', 'python3', 'stargan', 'stargan-vc', 'stargan-vc2', 'voice-conversion']",A PyTorch implementation of StarGAN-VC2.
mingchaozhu/deeplearning,MingchaoZhu/DeepLearning,"['python', 'deep-learning', 'machine-learning', 'xgboost', 'ensemble-learning', 'bayesian', 'regularization']",Python for《Deep Learning》，该书为《深度学习》(花书) 数学推导、原理剖析与源码级别代码实现
alshedivat/meta-blocks,alshedivat/meta-blocks,"['learning-to-learn', 'meta-learning', 'deep-learning', 'benchmark', 'toolbox', 'tensorflow', 'python', 'api']",A modular toolbox for meta-learning research with a focus on speed and reproducibility.
raminmh/liquid_time_constant_networks,raminmh/liquid_time_constant_networks,"['deep-learning', 'liquid-neural-networks', 'recurrent-neural-networks', 'sequence-modeling', 'state-space-models', 'time-series']",Code Repository for Liquid Time-Constant Networks (LTCs)
mikoto10032/automaticweightedloss,Mikoto10032/AutomaticWeightedLoss,"['multi-task', 'multi-task-learning', 'weigh-losses', 'auxiliary-tasks', 'pytorch', 'deep-learning']","Multi-task learning using uncertainty to weigh losses for scene geometry and semantics, Auxiliary Tasks in Multi-task Learning"
xuyuan/waymo_2d_tracking,xuyuan/waymo_2d_tracking,"['autonomous-driving', 'deep-learning', 'object-detection', 'tracking', 'pytorch']",3rd place solution of Waymo open dataset challenge 2D tracking track
d-li14/regnet.pytorch,d-li14/regnet.pytorch,"['pytorch', 'regnet', 'resnext', 'imagenet', 'pretrained-models', 'neural-architecture-search']",PyTorch-style and human-readable RegNet with a spectrum of pre-trained models
positivepeng/nlp-beginner-projects,positivepeng/nlp-beginner-projects,[],NLP常见任务实现（pytorch版）
rmlin/comhe,rmlin/CoMHE,"['mhe', 'hyperspherical', 'energy', 'sphereface', 'regularization', 'neural-network', 'deep-learning', 'comhe', 'cvpr2020']",Implementation for <Regularizing Neural Networks via Minimizing Hyperspherical Energy> in CVPR'20.
gouthamvgk/facemesh_coreml_tf,gouthamvgk/facemesh_coreml_tf,[],This repository contains the code for converting tflite model of Real-time Facial Surface Geometry from Monocular Video on Mobile GPUs and Blazeface to tensorflow and coreml.
malteos/semantic-document-relations,malteos/semantic-document-relations,"['wikipedia', 'pytorch', 'document', 'similarity', 'transformer', 'bert', 'xlnet', 'document-classification']","Implementation, trained models and result data for the paper ""Pairwise Multi-Class Document Classification for Semantic Relations between Wikipedia Articles"""
monologg/goemotions-pytorch,monologg/GoEmotions-pytorch,"['goemotions', 'emotion-classification', 'pytorch', 'multi-label-classification', 'transformers', 'bert', 'pipeline']",Pytorch Implementation of GoEmotions 😍😢😱
jerrywei03/covid-q,JerryWei03/COVID-Q,"['nlp', 'covid-19', 'question-answering', 'questions', 'text-classification', 'sentence-classification', 'bert', 'bert-embeddings', 'svm', 'svm-model', 'knn-classification', 'few-shot-learning', 'triplet-loss']","COVID-19 Question Dataset from the paper ""What Are People Asking About COVID-19? A Question Classification Dataset"""
alejandrobarrera/birdnet2,AlejandroBarrera/birdnet2,"['deep-learning', 'object-detection', 'point-cloud', 'pytorch', 'neural-network', 'autonomous-driving']",Official Pytorch implementation of Birdnet+
xuyige/bert4doc-classification,xuyige/BERT4doc-Classification,"['natural-language-processing', 'bert', 'text-classification']",Code and source for paper ``How to Fine-Tune BERT for Text Classification?``
microsoft/cocosnet,microsoft/CoCosNet,"['image-synthesis', 'image-translation', 'generative-adversarial-network', 'image-manipulation', 'gans', 'cocosnet', 'pytorch', 'computer-vision', 'deep-learning']",Cross-domain Correspondence Learning for Exemplar-based Image Translation. (CVPR 2020 Oral)
zlthinker/kfnet,zlthinker/KFNet,"['kalman-filtering', 'uncertainties', 'optical-flows', 'tensorflow', '7scenes', 'localization']",KFNet: Learning Temporal Camera Relocalization using Kalman Filtering (CVPR 2020 Oral)
sahith02/machine-learning-algorithms,Sahith02/machine-learning-algorithms,"['machine-learning-algorithms', 'machine-learning', 'python', 'tutorial', 'implementation', 'implementation-of-algorithms', 'deep-learning', 'deep-learning-algorithms', 'deep-learning-tutorial', 'neural-network', 'regression', 'classification', 'trees']",A curated list of all machine learning algorithms and deep learning algorithms grouped by category.
chenrocks/distill-bert-textgen,ChenRocks/Distill-BERT-Textgen,"['natural-language-processing', 'machine-translation', 'knowledge-distillation', 'bert-model']","Research code for ACL 2020 paper: ""Distilling Knowledge Learned in BERT for Text Generation""."
spytensor/pytorch_img_classification_for_competition,spytensor/pytorch_img_classification_for_competition,"['pytorch', 'image-classification', 'competition']",use pytorch to do image classification
marload/aquvitae,marload/aquvitae,"['tensorflow', 'pytorch', 'light-weight', 'deep-learning', 'machine-learning', 'knowledge-distillation', 'model-compression']",Knowledge Distillation Toolkit
nlp-love/model_log,NLP-LOVE/Model_Log,"['machine-learning', 'deep-learning', 'model', 'log', 'tensorflow', 'pytorch', 'metric']",Model Log 是一款基于 Python3 的轻量级机器学习(Machine Learning)、深度学习(Deep Learning)模型训练评估指标可视化工具，可以记录模型训练过程当中的超参数、Loss、Accuracy、Precision、F1值等，并以曲线图的形式进行展现对比，轻松三步即可实现。
seongmin-kye/mct,seongmin-kye/MCT,"['few-shot-learning', 'meta-learning', 'transductive-learning']",Pytorch implementation of Meta-Learned Confidence for Few-shot Learning
parthpathak27/social-distancing-detector,parthsompura/Social-Distancing-Detector,"['python', 'opencv', 'yolov3', 'computer-vision', 'convolutional-neural-networks', 'deep-learning', 'social-distancing', 'social-distancing-detection', 'coronavirus']",An AI Tool to Help Customers Monitor Social Distancing in the Workplace.
pytorchlightning/lightning-covid19,Lightning-AI/lightning-Covid19,"['pytorch', 'xray', 'medical-imaging', 'classification', 'covid-19']",Classification for covid-19 chest X-ray images using Lightning
ml4bio/e2efold,ml4bio/e2efold,[],"pytorch implementation for ""RNA Secondary Structure Prediction By Learning Unrolled Algorithms"""
lucidrains/contrastive-learner,lucidrains/contrastive-learner,"['artificial-intelligence', 'self-supervised-learning', 'contrastive-loss', 'deep-learning']",A simple to use pytorch wrapper for contrastive self-supervised learning on any neural network
cyk1337/highway-transformer,cyk1337/Highway-Transformer,"['highway-transformer', 'transformer-xl', 'language-model', 'pytorch', 'transformer', 'gating-transformer', 'gated-attention']",[ACL‘20] Highway Transformer: A Gated Transformer.
suessmann/intelligent_traffic_lights,suessmann/intelligent_traffic_lights,"['q-learning', 'deep-learning', 'neural-network', 'reinforcement-learning', 'traffic-lights', 'traffic-control']",Traffic Lights Control with Deep Learning
hitlic/bijou,hitlic/bijou,[],"A fastai-like framework for training, tuning and probing pytorch models, which is compatible with pytorch_geometric and DGL."
grishavak/lidia-denoiser,grishavak/LIDIA-denoiser,"['image-denoising', 'residual-learning', 'pytorch', 'adaptation', 'lightweight', 'lightweight-neural-network', 'fine-tuning', 'deep-learning', 'machine-learning', 'image-processing']","LIDIA: Lightweight Learned Image Denoising with Instance Adaptation (NTIRE, 2020)"
miemie2013/keras-solo,miemie2013/Keras-SOLO,"['keras', 'solo', 'solov2', 'solov1']",Keras-SOLO(Segmenting Objects by Locations)
affjljoo3581/expanda,affjljoo3581/Expanda,"['dataset', 'deep-learning', 'nlp', 'bert', 'gpt2', 'wikipedia', 'corpus', 'build', 'machine-learning', 'python', 'natural-language-processing', 'datasets', 'pytorch', 'tensorflow']",The universal integrated corpus-building environment.
frank-zyw/chinese-text-classification,Frank-ZYW/Chinese-Text-Classification,[],基于Pytorch实现的一些经典自然语言处理模型中文短文本分类任务，包含TextCNN，TextRCNN，FastText，BERT，ROBERT以及ERNIE
mnamysl/nat-acl2020,mnamysl/nat-acl2020,"['deep-learning', 'nlp', 'natural-language-processing', 'sequence-labeling', 'named-entity-recognition', 'robustness', 'ocr', 'optical-character-recognition', 'nat', 'flair', 'typos', 'flair-framework', 'misspellings', 'ner', 'data-augmentation', 'stability-training']",
zxpzhong/3d-recgan-pytorch,zxpzhong/3D-RecGAN-pytorch,"['deep-learning', '3d-reconstruction', 'gan', 'unet', 'pytorch']",A pytorch implement of 3D-RecGAN
woodywff/nas_3d_unet,woodywff/nas_3d_unet,"['neural-architecture-search', 'segmentation', 'brain-tumor-segmentation', 'brats', 'pytorch']",Neural Architecture Search for Gliomas Segmentation on Multimodal Magnetic Resonance Imaging
ai4ce/deepsoro,ai4ce/DeepSoRo,"['robotics', 'softrobot', 'perception', 'data-driven', 'deep-learning', 'soft-robotics', 'softrobotics']",[RA-L/ICRA2020] Real-time Soft Body 3D Proprioception via Deep Vision-based Sensing
breezedeus/cnstd,breezedeus/CnSTD,"['object-detection', 'pytorch', 'text-detection', 'deep-learning', 'math-formula-detection']",CnSTD: 基于 PyTorch/MXNet 的 中文/英文 场景文字检测（Scene Text Detection）Python3 包
lonepatient/electra_pytorch,lonePatient/electra_pytorch,"['electra', 'pytorch', 'bert', 'nlp', 'deeplearning', 'glue', 'language-model']", ELECTRA: Pre-training Text Encoders as Discriminators Rather Than Generators 
slientge/sequential_recommendation_tensorflow,slientGe/Sequential_Recommendation_Tensorflow,"['recommendation', 'tensorflow', 'python', 'caser', 'gru4rec', 'attrec', 'fpmc', 'transrec', 'sequential-recommendation', 'sasrec']",Several sequential recommended models implemented by tenosrflow1.x
mhashas/document-image-unwarping-pytorch,mhashas/Document-Image-Unwarping-pytorch,"['computer-vision', 'deep-learning', 'convolutional-neural-networks', 'unet', 'deeplab-v3-plus', 'pytorch', 'document-unwarping', 'mobilenet-v2', 'resnet']","Pytorch implementation and extension of ""DocUnet: Document Image Unwarping via A Stacked U-Net"""
he-dhamo/simsg,he-dhamo/simsg,"['scene-graphs', 'image-manipulation', 'gans', 'generative-models', 'pytorch', 'deep-learning', 'graph-convolution']",Semantic Image Manipulation using Scene Graphs (CVPR 2020)
szzexpoi/air,szzexpoi/AiR,"['saliency-maps', 'attention-supervision', 'attention', 'machine-attention']","Official Repository for ECCV 2020 paper ""AiR: Attention with Reasoning Capability"""
jenojp/extractacy,jenojp/extractacy,"['nlp', 'spacy', 'spacy-extension', 'ner', 'entity-extraction', 'spacy-pipeline', 'pattern-matching', 'entity-linking']","Spacy pipeline object for extracting values that correspond to a named entity (e.g., birth dates, account numbers, laboratory results)"
weixmath/view-gcn,weixmath/view-GCN,[],Pytorch code for view-GCN (CVPR2020)
ligouhai-bigone/sentiment-analysis-chinese-pytorch,Ligouhai-bigone/Sentiment-Analysis-Chinese-pytorch,[],Sentiment Analysis-Pytorch(情感分析的Pytorch实现)
saminens/medi-coqa,saminens/Medi-CoQA,"['conversational-ai', 'pytorch', 'question-answering', 'dockerfile', 'coqa', 'squad', 'albert', 'clinicalbert', 'bert']",Conversational Question Answering on Clinical Text
jintao-huang/efficientdet_pytorch,Jintao-Huang/EfficientDet_PyTorch,"['efficientdet', 'pytorch', 'object-detection']",EfficientDet_PyTorch 目标检测(Object Detection)
dongpoli/ec-bert,DongPoLI/EC-BERT,"['bert', 'relation-extraction', 'bert-relation-extraction', 'pytorch', 'relation-classification', 'r-bert', 'ec-bert']",Relation Classificaton based on information enhanced BERT
vsainteuf/lightweight-temporal-attention-pytorch,VSainteuf/lightweight-temporal-attention-pytorch,"['deep-learning', 'deep-neural-networks', 'deeplearning', 'self-attention', 'satellite', 'satellite-imagery', 'satellite-data', 'time-series', 'classification', 'pytorch', 'remote-sensing', 'time-series-classification', 'machine-learning']",A PyTorch implementation of the Light Temporal Attention Encoder (L-TAE) for satellite image time series. classification
chandar-lab/patchup,chandar-lab/PatchUp,"['regularization-methods', 'convolutional-neural-network', 'pytorch']",
includeamin/covid-19,includeamin/COVID-19,"['covid-19', 'classification', 'coronavirus', 'covid-virus', 'covid-data', 'x-ray', 'coronavirus-analysis', 'tensorflow', 'keras', 'deep-learning', 'docker', 'python3', 'python', 'fastapi', 'xray-image', 'detection', 'dataset', 'label', 'ct', 'computer-vision']",detection of covid-19 from X-ray images Using keras and tensorflow
puneesh00/cs-mri-gan,puneesh00/cs-mri-gan,"['mri', 'reconstruction', 'compressive-sensing', 'gan', 'cvpr2020', 'cvprw', 'inverse-problems', 'deep-learning', 'cvpr']",Structure preserving Compressive Sensing MRI Reconstruction using Generative Adversarial Networks (CVPRW 2020)
fxmeng/filter-grafting,fxmeng/filter-grafting,"['filter', 'grafting', 'pruning', 'distillation', 'multi-network', 'pytorch']",Filter Grafting for Deep Neural Networks(CVPR 2020)
cientgu/giqa,cientgu/GIQA,"['generative-model', 'image-quality-assessment', 'generative-adversarial-networks']",Pytorch implementation of Generated Image Quality Assessment
badbadbadboy/pytorch.ctpn,BADBADBADBOY/pytorch.ctpn,"['ctpn', 'pytorch', 'ocr', 'text-detection', 'python3', 'ohem']","pytorch, ctpn ,text detection ,ocr,文本检测"
chriswu1997/pq-net,ChrisWu1997/PQ-NET,"['paper', '3d-shapes', 'deep-learning', 'cvpr2020']","code for our CVPR 2020 paper ""PQ-NET: A Generative Part Seq2Seq Network for 3D Shapes"""
manpreet1130/realtime-sudoku-solver,manpreet1130/RealTime-Sudoku-Solver,"['pytorch', 'opencv-python', 'image-processing', 'cnn', 'artificial-intelligence', 'sudoku-solver', 'realtime']",Solving sudoku puzzles with the help of OpenCV and PyTorch(CNN)
hasnainraz/fast-aginggan,HasnainRaz/Fast-AgingGAN,"['gan', 'generative-adversarial-network', 'face-aging', 'cycle-gan', 'pytorch', 'pytorch-lightning', 'neural-network', 'tensorboard', 'cnn', 'realtime-face-aging', 'faceapp']","A deep learning model to age faces in the wild, currently runs at 60+ fps on GPUs"
csyanbin/scot,csyanbin/SCOT,"['semantic-correspondence', 'pytorch', 'optimal-transport']","CVPR 2020, Semantic Correspondence as an Optimal Transport Problem, Pytorch Implementation. "
justusthies/neuraltexgen,JustusThies/NeuralTexGen,"['texture-mapping', 'pytorch', 'optimization', 'image-generation']",Image-space texture optimization of 3D meshes using PyTorch
raymond-sci/pica,Raymond-sci/PICA,[],Official Pytorch Implementation for CVPR'20 paper: Deep Semantic Clustering by Partition Confidence Maximisation
chenchongthu/ensfm,chenchongthu/ENSFM,"['recommender-system', 'neural-network', 'efficient-algorithm', 'non-sampling', 'recommendation', 'context', 'feature']",This is our implementation of ENSFM: Efficient Non-Sampling Factorization Machines (WWW 2020)
yangrui2015/sparse-reward-algorithms,YangRui2015/Sparse-Reward-Algorithms,"['sparse-reward-algorithms', 'hindsight-experience-replay', 'ddpg', 'curriculum-learning', 'imitation-learning', 'tensorflow']",Implement many Sparse Reward algorithms in Gym Fetch environment
dwromero/att_gconvs,dwromero/att_gconvs,"['equivariance', 'group-convolution', 'cnns', 'attention', 'pytorch']","Code repository for the paper ""Attentive Group Equivariant Convolutional Neural Networks"" published at ICML 2020. https://arxiv.org/abs/2002.03830"
pvlachas/rnn-rc-chaos,pvlachas/RNN-RC-Chaos,"['rnn', 'rc', 'chaos', 'echo-state-networks', 'recurrent-neural-networks', 'kuramoto-sivashinsky', 'lorenz-96', 'lorenz-3d', 'reservoir-computing', 'reservoir-computer', 'backpropagation', 'forecasting', 'esn', 'rnn-tensorflow', 'rnn-gru', 'rnn-lstm']",RNN architectures trained with Backpropagation and Reservoir Computing (RC) methods for forecasting high-dimensional chaotic dynamical systems.
daintlab/confidence-aware-learning,daintlab/confidence-aware-learning,['pytorch'],Confidence-Aware Learning for Deep Neural Networks (ICML2020)
wuxinwang1997/wheatdetection,wuxinwang1997/wheatdetection,[],Pytorch project for https://www.kaggle.com/c/global-wheat-detection
iduta/pyconvsegnet,iduta/pyconvsegnet,"['semantic-segmentation', 'scene-parsing', 'ade20k', 'pytorch', 'scene-recognition', 'deep-learning', 'computer-vision', 'pattern-recognition', 'machine-learning', 'neural-networks', 'pyconv', 'segmentation']",Semantic Segmentation PyTorch code for our paper: Pyramidal Convolution: Rethinking Convolutional Neural Networks for Visual Recognition (https://arxiv.org/pdf/2006.11538.pdf)
prasanna1991/latentmixing,Prasanna1991/LatentMixing,"['semi-supervised', 'latent-mixmatch', 'manifold-mixmatch', 'latent-mixing', 'pytorch']","The implementation of ""Semi-supervised Medical Image Classification with Global Latent Mixing"". [MICCAI2020]"
erenbalatkan/depthvisualizer,ErenBalatkan/DepthVisualizer,"['point-clouds', 'depth-maps', 'computer-vision', 'deep-learning', 'tools']",OpenGL Based Python Library for 3D visualization of Point Clouds & Depth Maps
clovaai/assembled-cnn,clovaai/assembled-cnn,"['convolutional-neural-networks', 'tensorflow', 'image-classification', 'deep-learning', 'transfer-learning', 'computer-vision', 'mce', 'imagenet', 'inference-throughput', 'robustness', 'food-101']","Tensorflow implementation of ""Compounding the Performance Improvements of Assembled Techniques in a Convolutional Neural Network"""
jusperlee/dual-path-rnn-pytorch,JusperLee/Dual-Path-RNN-Pytorch,"['pytorch', 'speech-separation-algorithm', 'deep-learning', 'rnn-model', 'speech-separation']",Dual-path RNN: efficient long sequence modeling for time-domain single-channel speech separation implemented by Pytorch
d-li14/psconv,d-li14/PSConv,"['convolution', 'multi-scale', 'feature-pyramids', 'object-detection', 'instance-segmentation', 'mmdetection', 'pytorch', 'eccv2020']",[ECCV 2020] PSConv: Squeezing Feature Pyramid into One Compact Poly-Scale Convolutional Layer
eliahuhorwitz/deepsim,eliahuhorwitz/DeepSIM,"['single-image', 'image-editing', 'deep-neural-networks', 'generative-adversarial-network', 'computer-vision', 'computer-graphics', 'edge-to-image', 'segmantation-to-image', 'pytorch', 'image-to-image-translation', 'deep-learning', 'iccv2021']","Official PyTorch implementation of the paper: ""DeepSIM: Image Shape Manipulation from a Single Augmented Training Sample"" (ICCV 2021 Oral)"
yeh-yu-hsuan/bifuse,Yeh-yu-hsuan/BiFuse,"['depth', 'depth-estimation', 'monocular-depth-estimation', 'spherical', 'deep-learning', 'computer-vision', 'cvpr2020', '360-camera', 'pytorch']",[CVPR2020] BiFuse: Monocular 360 Depth Estimation via Bi-Projection Fusion
pokaxpoka/sunrise,pokaxpoka/sunrise,"['reinforcement-learning', 'rl', 'deep-learning', 'mujoco', 'dm-control', 'codebase', 'model-free', 'off-policy', 'deep-reinforcement-learning', 'deep-neural-networks', 'deep-q-learning', 'deep-q-network', 'soft-actor-critic', 'sac', 'rainbow']",SUNRISE: A Simple Unified Framework for Ensemble Learning in Deep Reinforcement Learning
suoivy/lpd-net,Suoivy/LPD-net,"['computer-vision', 'point-cloud', 'deep-learning', 'place-recognition']","LPD-Net: 3D Point Cloud Learning for Large-Scale Place Recognition and Environment Analysis, ICCV 2019, Seoul, Korea"
autosoft-dev/code-bert,autosoft-dev/code-bert,"['machine-learning', 'machine-learning-on-source-code', 'bert-model', 'roberta', 'mlmodel', 'python3', 'deep-learning', 'transformer', 'function-docstring-pairs', 'python']",Automatically check mismatch between code and comments using AI and ML
jind11/titlestylist,jind11/TitleStylist,"['natural-language-processing', 'summarization', 'transformer', 'style-transfer', 'pytorch-implementation']","Source code for our ""TitleStylist"" paper at ACL 2020"
maartengr/reinlife,MaartenGr/ReinLife,"['python', 'reinforcement-learning', 'artificial-intelligence', 'artificial-life', 'deep-learning']",Creating Artificial Life with Reinforcement Learning
yiqun-wang/mgcn,yiqun-wang/MGCN,"['pytorch', 'descriptor-learning', 'multiscale-gcns', 'graphics', 'siggraph']",MGCN: Descriptor Learning using Multiscale GCNs (SIGGRAPH 2020)
jywa/overlap_local_sgd,JYWa/Overlap_Local_SGD,"['pytorch', 'distributed-optimization', 'sgd-optimizer', 'deep-learning']",Implementation of (overlap) local SGD in Pytorch
bojone/adafactor,bojone/adafactor,[],adafactor optimizer for keras
deepraj1729/yplate,deepraj1729/yplate,"['machine-learning', 'deep-learning', 'neural-networks', 'yolov3', 'opencv', 'detect-plates', 'number-plate-recognition', 'numpy', 'tensorflow', 'computer-vision']",License Plate Detection library powered by YOLO v3 and OpenCV with Command Line Interface
kaist-amsg/composition-conditioned-crystal-gan,kaist-amsg/Composition-Conditioned-Crystal-GAN,[],Composition-Conditioned Crystal GAN pytorch code
mrrobot2211/pytorch-deep-photo-enhancer,MrRobot2211/pytorch-deep-photo-enhancer,"['deep-photo-enhancer', 'pytorch', 'gans']",pytorch implementation of deep photo enhancer
jelly54/pytorch_train,tf2jaguar/pytorch_train,"['resnet-34', 'pytorch-tutorial']",毕业设计 使用pytorch进行深度学习网络模型训练，实现车型识别
pvjosue/waveblocks,pvjosue/WaveBlocks,"['pytorch', 'microscopy', 'psf-engineering', 'optimization-framework', 'wave-optics', 'calibration']","Optimization framework developed in Pytorch, allowing calibration, and joint optimization of optics and deep learning models."
apockill/creepycrawlai,apockill/CreepyCrawlAI,"['godot-python', 'tensorflow', 'reinforcement-learning', 'genetic-algorithm', 'godot']","A deep neural network evolutionary sim, built with Godot, godot-python, and tensorflow."
twni2016/meta-sac,twni2016/Meta-SAC,"['automl', 'sac', 'soft-actor-critic', 'mujoco', 'deep-reinforcement-learning', 'hyperparameter-optimization', 'pytorch', 'meta-learning']",Auto-tune the Entropy Temperature of Soft Actor-Critic via Metagradient - 7th ICML AutoML workshop 2020
ma-dan/keras-yolo4,Ma-Dan/keras-yolo4,"['keras', 'yolov4', 'object-detection']",A Keras implementation of YOLOv4 (Tensorflow backend)
yangnaruto/fq-gan,YangNaruto/FQ-GAN,"['biggan', 'gans', 'pytorch', 'tensorflow', 'image-translation', 'image-generation', 'stylegan']",Official implementation of FQ-GAN
d-li14/dhm,d-li14/DHM,"['pytorch', 'imagenet', 'pretrained-models', 'deeply-supervised', 'knowledge-distillation', 'cvpr2020']",[CVPR 2020] Dynamic Hierarchical Mimicking Towards Consistent Optimization Objectives
tatigabru/kaggle-rsna,tatigabru/kaggle-rsna,"['object-detection', 'python', 'machine-learning', 'deep-learning', 'detection', 'image-processing', 'image-augmentation', 'pneumonia-detection', 'retinanet', 'neural-networks', 'classification', 'medical-imaging', 'computer-assisted-diagnosis']","Deep Learning for Automatic Pneumonia Detection, RSNA challenge"
ncarraz/esrganplus,ncarraz/ESRGANplus,"['super-resolution', 'deep-learning', 'generative-adversarial-network', 'convolutional-neural-network']",ICASSP 2020 - ESRGAN+ : Further Improving Enhanced Super-Resolution Generative Adversarial Network - ICPR 2020 - Tarsier: Evolving Noise Injection in Super-Resolution GANs
zlinao/variational-transformer,zlinao/Variational-Transformer,"['machine-learning', 'transformer', 'variational-transformer', 'dialog', 'dialogue-systems']",Variational Transformers for Diverse Response Generation
lyhue1991/torchkeras,lyhue1991/torchkeras,[],Pytorch❤️  Keras 😋😋
bojone/bert-of-theseus,bojone/bert-of-theseus,[],bert-of-theseus via bert4keras
tshrjn/finetune-qa,tshrjn/Finetune-QA,[],"BERT, RoBERTa fine-tuning over SQuAD Dataset using pytorch-lightning⚡️, 🤗-transformers & 🤗-nlp."
utahnlp/infotabs-code,utahnlp/infotabs-code,"['nlp', 'nlp-datasets', 'nlp-machine-learning', 'acl2020', 'wikipedia', 'tables', 'semi-structured-data', 'svm', 'roberta', 'transformer', 'nli', 'inference', 'infotabs']","Implementation of the semi-structured inference model in our ACL 2020 paper, INFOTABS: Inference on Tables as Semi-structured Data."
lyqun/pu-net_pytorch,lyqun/PU-Net_pytorch,"['pytorch', 'cvpr2018', 'point-cloud', 'pu-net', 'upsampled-point-clouds']","PyTorch Implementation of PU-Net. PU-Net: Point Cloud Upsampling Network, CVPR 2018"
maheshkkumar/fscc,maheshkkumar/fscc,"['crowd-counting', 'few-shot-learning', 'meta-learning', 'pytorch']",Few-Shot Scene Adaptive Crowd Counting Using Meta-Learning (WACV 2020)
gkunnan97/fastgcn_pytorch,Gkunnan97/FastGCN_pytorch,"['fastgcn', 'pytorch', 'as-gcn']",an implementation of FastGCN with pytorch
malllabiisc/compgcn,malllabiisc/CompGCN,"['link-prediction', 'relation-embeddings', 'iclr2020', 'graph-convolutional-networks', 'deep-learning', 'pytorch', 'graph-representation-learning']",ICLR 2020: Composition-Based Multi-Relational Graph Convolutional Networks
yinyunie/total3dunderstanding,yinyunie/Total3DUnderstanding,"['scene-understanding', 'scene-reconstruction', 'cvpr2020', 'pytorch']","Implementation of CVPR'20 Oral: Total3DUnderstanding: Joint Layout, Object Pose and Mesh Reconstruction for Indoor Scenes from a Single Image"
lucidrains/siren-pytorch,lucidrains/siren-pytorch,"['artificial-intelligence', 'deep-learning', 'activation-functions']",Pytorch implementation of SIREN -  Implicit Neural Representations with Periodic Activation Function
guolinke/tupe,guolinke/TUPE,"['bert', 'pretraining', 'language-model', 'transformer']","Transformer with Untied Positional Encoding (TUPE). Code of paper ""Rethinking Positional Encoding in Language Pre-training"". Improve existing models like BERT."
ziwei-zh/corrpm,ziwei-zh/CorrPM,"['human-parsing', 'semantic-segmantation', 'pytorch', 'cvpr2020', 'cvpr']","Pytorch implementation of CVPR2020 paper ""Correlating Edge, Pose with Parsing"""
svip-lab/indoor-sfmlearner,svip-lab/Indoor-SfMLearner,"['pytorch', 'eccv2020', 'unsupervised-learning', 'indoor', 'depth-estimation', 'nyuv2', 'extract-superpixel', 'scannet', 'pose-estimation', 'self-supervised']",[ECCV'20] Patch-match and Plane-regularization for Unsupervised Indoor Depth Estimation
dingmyu/dapn,dingmyu/DAPN,[],"A pytorch implementation of ""Domain-Adaptive Few-Shot Learning"""
mikel-brostrom/yolov3_deepsort_pytorch,mikel-brostrom/Yolov3_DeepSort_Pytorch,"['deep-sort', 'yolo-v3', 'pytorch', 'real-time', 'multple-object-tracking', 'pedestrian-tracking', 'computer-camera', 'yolov3', 'deep-association-metric', 'pytorch-yolov3', 'video', 'web-camera', 'rtsp-stream', 'http-stream', 'simple-online-and-realtime-tracking', 'you-only-look-once']",Real-time multi-person tracker using YOLO v3 and deep sort
mdeib/berkeley-deep-rl-pytorch-starter,mdeib/berkeley-deep-RL-pytorch-starter,"['cs285', 'reinforcement-learning', 'pytorch-rl']",Pytorch starter code for UC Berkeley's cs285 assignments
jimmychame/sadnet,JimmyChame/SADNet,[],"Pytorch code for ""Spatial-Adaptive Network for Single Image Denoising"""
cendelian/yolov4-hat-detection,yumulinfeng1/YOLOv4-Hat-detection,"['yolov4', 'hat-detection', 'pytorch']",基于YOLOv4的安全帽佩戴检测
xcmyz/fastspeech2,xcmyz/FastSpeech2,"['fastspeech', 'fastspeech2', 'speech-synthesis', 'pytorch', 'tts']",The Implementation of FastSpeech2 Based on Pytorch.
christophreich1996/semantic_pyramid_for_image_generation,ChristophReich1996/Semantic_Pyramid_for_Image_Generation,"['generative-adversarial-network', 'gan', 'adversarial-learning', 'semantic-pyramid', 'image-generation', 'pytorch', 'deep-learning', 'deep-neural-networks', 'machine-learning', 'convolutional-neural-networks', 'cnn', 'semantic-pyramid-image-generation']","PyTorch reimplementation of the paper: ""Semantic Pyramid for Image Generation"" [CVPR 2020]."
jojonki/beamsearch,jojonki/BeamSearch,[],Beam search decoding with Pytorch
anyleopeace/durleca,AnyLeoPeace/DURLECA,"['reinforcement-learning', 'deep-learning']",The released code for DUal-objective Reinforcement-Learning Epidemic Control Agent.
adumrewal/imagematting,adumrewal/imageMatting,"['deep-image-matting', 'deep-learning', 'deep-neural-networks', 'model-training', 'flexible-code', 'foreground-segmentation', 'foreground-detection', 'foreground-background', 'background-image', 'foreground-extraction', 'foreground-segmentation-network', 'image-segmentation', 'image-matting', 'matting', 'computer-vision', 'background-subtraction', 'background-removal']",Simplified Deep Image Matting training code with keras on tensorflow
c8241998/cv_attention,c8241998/CV_attention,[],pytorch-version implementation codes of some CV attention models
justusschock/dl-utils,justusschock/dl-utils,"['pytorch', 'python', 'cnn', 'deep-learning', 'neural-network', 'deep-neural-networks', 'models', 'loss-functions', 'metrics']","Utilities for Deep Learning with PyTorch (models, losses, metrics etc.)"
google-research/fast-soft-sort,google-research/fast-soft-sort,"['differentiable', 'sorting', 'ranking', 'pytorch', 'tensorflow', 'jax']",Fast Differentiable Sorting and Ranking
allenai/dont-stop-pretraining,allenai/dont-stop-pretraining,"['natural-language-processing', 'pretrained-language-model']",Code associated with the Don't Stop Pretraining ACL 2020 paper
clovaai/clovacall,clovaai/ClovaCall,"['speech-recognition', 'speech-corpus', 'korean-speech', 'call-based-speech-corpus', 'goal-oriented-dialog', 'interspeech2020']",ClovaCall dataset and Pytorch LAS baseline code (Interspeech 2020)
da-southampton/read_bert_code,DA-southampton/Read_Bert_Code,[],Bert源码阅读与讲解(Pytorch版本)-以BERT文本分类代码为例子
alexeykarnachev/full_stack_transformer,alexeykarnachev/full_stack_transformer,"['transformers', 'pytorch-lightning', 'language-model', 'telegram-bot', 'language-model-generation', 'language-model-finetuning', 'gpt-2']","Pytorch library for end-to-end transformer models training, inference and serving"
ejcgt/attention-target-detection,ejcgt/attention-target-detection,"['cvpr2020', 'attention', 'gaze-estimation', 'pytorch', 'gaze', 'cvpr', 'dataset']","[CVPR2020] ""Detecting Attended Visual Targets in Video"""
zsyoaoa/danet,zsyOAOA/DANet,[],Dual Adversarial Network: Toward Real-world Noise Removal and Noise Generation (ECCV 2020) (Pytorch)
michaelharms/comcrawl,michaelharms/comcrawl,"['commoncrawl', 'python', 'data', 'common-crawl', 'scraping', 'deep-learning', 'training-dataset']",A python utility for downloading Common Crawl data
kayoyin/transformer-slt,kayoyin/transformer-slt,"['sign-language-translation', 'neural-machine-translation', 'transformer', 'machine-learning', 'deep-learning']","Sign Language Translation with Transformers (COLING'2020, ECCV'20 SLRTP Workshop)"
borchero/pycave,borchero/pycave,"['machine-learning', 'gaussian-mixture-models', 'markov-model', 'pytorch', 'kmeans', 'pytorch-lightning']",Traditional Machine Learning Models for Large-Scale Datasets in PyTorch.
cdj0311/dssm,cdj0311/dssm,[],A BiGRU-Attention DSSM implementation with tensorflow estimator.
lucidrains/compressive-transformer-pytorch,lucidrains/compressive-transformer-pytorch,"['artificial-intelligence', 'deep-learning', 'transformer', 'attention-mechanism']","Pytorch implementation of Compressive Transformers, from Deepmind"
martinomensio/spacy-sentence-bert,MartinoMensio/spacy-sentence-bert,"['nlp', 'spacy', 'models', 'bert', 'sentence-bert', 'sentence-transformers']",Sentence transformers models for SpaCy
zacario-li/fast-scnn_pytorch,zacario-li/Fast-SCNN_pytorch,"['pytorch', 'fast-scnn', 'semantic-segmentation', 'segmentation']",A PyTorch Implementation of Fast-SCNN: Fast Semantic Segmentation Network(PyTorch >= 1.4)
yuk6heo/ivos-atnet,yuk6heo/IVOS-ATNet,['video-object-segmentation'],"Pytorch implementation of ECCV2020 paper, ""Interactive Video Object Segmentation Using Global and Local Transfer Modules"""
hairlab/pbsgd,HAIRLAB/pbSGD,"['deep-learning', 'machine-learning', 'optimization', 'pytorch']",Powered Stochastic Gradient Descent Methods for AcceleratedNonconvex Optimization
microsoft/reconner,microsoft/reconner,"['ner-data', 'nlp', 'ai', 'data']","ReconNER, Debug annotated Named Entity Recognition (NER) data for inconsistencies and get insights on improving the quality of your data."
zassou65535/image_generator,zassou65535/image_generator,"['python', 'gan', 'image-generation', 'dcgan', 'pytorch']",GANのpytorch実装
lucidrains/memory-compressed-attention,lucidrains/memory-compressed-attention,"['artificial-intelligence', 'deep-learning', 'attention-mechanism']","Implementation of Memory-Compressed Attention, from the paper ""Generating Wikipedia By Summarizing Long Sequences"""
maraoz/gpt-scrolls,maraoz/gpt-scrolls,"['openai', 'gpt-3', 'language-model', 'transformer', 'generator', 'safety']",A collaborative collection of open-source safe GPT-3 prompts that work well
qiaoranc/tf_resnest_regnet_model,QiaoranC/tf_ResNeSt_RegNet_model,[],"tensorflow 2.x version of ResNeSt,RegNet,DETR"
abdelrahman-gaber/tf2-object-detection-api-tutorial,abdelrahman-gaber/tf2-object-detection-api-tutorial,"['tf2', 'tensorflow2', 'tensorflow', 'object-detection', 'object-detection-api', 'tensorflow2-models', 'keras-tensorflow', 'tf2-tutorial', 'object-detection-api-tutorial', 'tensorflow-object-detection-api', 'tf2-object-detection-api', 'detection-models']","Tensorflow 2 Object Detection API Tutorial. This tutorial will take you from installation, to running pre-trained detection model, and training your model with a custom dataset, then exporting it for inference."
siyuhuang/posestylizer,siyuhuang/PoseStylizer,"['person-image-generation', 'pytorch']",PyTorch implementation of Generating Person Images with Appearance-aware Pose Stylizer (IJCAI 2020)
longlongman/casrel-pytorch-reimplement,longlongman/CasRel-pytorch-reimplement,[],"Pytorch reimplement of the paper ""A Novel Cascade Binary Tagging Framework for Relational Triple Extraction"" ACL2020. The original code is written in keras."
mdeib/berkeley-deep-rl-pytorch-solutions,mdeib/berkeley-deep-RL-pytorch-solutions,"['cs285', 'reinforcement-learning', 'pytorch-rl']",Pytorch solutions for UC Berkeley's cs285 assignments
audioku/meta-transfer-learning,audioku/meta-transfer-learning,"['meta-learning', 'speech', 'speech-recognition', 'asr', 'code-switching', 'multi-lingual', 'language', 'language-model', 'neural-network', 'transformer', 'pytorch', 'meta-transfer-learning', 'mixed-language', 'acl']",Implementation of meta-transfer-learning for ASR and LM (ACL 2020)
chihyaoma/cyclical-visual-captioning,chihyaoma/cyclical-visual-captioning,"['pytorch', 'vision-and-language', 'visual-grounding', 'captioning-images', 'captioning-videos']",PyTorch code for: Learning to Generate Grounded Visual Captions without Localization Supervision
anisha2102/docvqa,anisha2102/docvqa,"['visual-question-answering', 'computer-vision', 'deep-learning', 'document-analysis']",Document Visual Question Answering
ricolike/mmgnn_textvqa,likenneth/mmgnn_textvqa,"['gnn', 'vqa', 'pytorch']",A Pytorch implementation of CVPR 2020 paper: Multi-Modal Graph Neural Network for Joint Reasoning on Vision and Scene Text
hanxunh/active-passive-losses,HanxunH/Active-Passive-Losses,"['icml-2020', 'label-noise', 'pytorch', 'icml', 'noisy-labels', 'deep-learning', 'deep-neural-networks', 'noisy-data', 'unreliable-labels', 'robust-learning']",[ICML2020] Normalized Loss Functions for Deep Learning with Noisy Labels
rajghugare19/rl-algorithms,RajGhugare19/RL-algorithms,[],Pytorch implementations deep RL research papers
lucidrains/memory-transformer-xl,lucidrains/memory-transformer-xl,"['artificial-intelligence', 'deep-learning', 'transformer', 'attention-mechanism', 'memory']","A variant of Transformer-XL where the memory is updated not with a queue, but with attention"
minivision-ai/silent-face-anti-spoofing,minivision-ai/Silent-Face-Anti-Spoofing,"['computer-vision', 'deep-learning', 'face-anti-spoofing', 'android-app', 'sdk']",静默活体检测（Silent-Face-Anti-Spoofing）
wangt-cn/vc-r-cnn,Wangt-CN/VC-R-CNN,[],[CVPR 2020] The official pytorch implementation of ``Visual Commonsense R-CNN''
nerminsamet/houghnet,nerminsamet/houghnet,"['object-detection', 'deep-learning', 'pytorch', 'voting', 'voting-classifier', 'bottom-up-model', 'hough-transform', 'hough', 'hough-transformation', 'instance-segmentation', 'video-object-detection', 'video-object-tracking', '3d-object-detection', 'human-pose-estimation', '2d-pose-estimation', 'pose-estimation', 'kitti-dataset', 'coco-dataset', 'eccv', 'eccv-2020']","[ECCV-20] Official PyTorch implementation of HoughNet, a voting-based object detector."
takapy0210/nlplot,takapy0210/nlplot,"['visualization', 'nlp', 'plotly', 'wordcloud', 'analytics', 'python']",Visualization Module for Natural Language Processing
gyunggyung/kogpt2-finetuning,gyunggyung/KoGPT2-FineTuning,"['nlp', 'gpt2', 'kogpt2', 'finetuning', 'korean-nlp', 'fine-tuning', 'korean', 'text-generation', 'lyrics-generator', 'language-model']","🔥 Korean GPT-2, KoGPT2 FineTuning cased. 한국어 가사 데이터 학습 🔥"
dido1998/recurrent-independent-mechanisms,dido1998/Recurrent-Independent-Mechanisms,"['deep-learning', 'generalization', 'rim', 'attention', 'recurrent-networks', 'lstms', 'grus', 'pytorch']",Implementation of the paper Recurrent Independent Mechanisms (https://arxiv.org/pdf/1909.10893.pdf)
apple/ml-mkqa,apple/ml-mkqa,"['dataset', 'nlp', 'multilingual-evaluation']","We introduce MKQA, an open-domain question answering evaluation set comprising 10k question-answer pairs aligned across 26 typologically diverse languages (260k question-answer pairs in total). The goal of this dataset is to provide a challenging benchmark for question answering quality across a wide set of languages. Please refer to our paper for details, MKQA: A Linguistically Diverse Benchmark for Multilingual Open Domain Question Answering"
firyuza/graphsage,Firyuza/GraphSAGE,"['graphsage', 'gat', 'tensorflow']",Graph Neural Networks
kpoeppel/pytorch_probgraph,kpoeppel/pytorch_probgraph,"['probabilistic-graphical-models', 'pytorch', 'restricted-boltzmann-machine', 'deep-belief-network']",A Library for Modelling Probabilistic Hierarchical Graphical Models in PyTorch
ericguo5513/action-to-motion,EricGuo5513/action-to-motion,"['deep-learning', 'human-motion-analysis', 'motion-generation', 'motion-synthesis']","Official implementations for ""Action2Motion: Conditioned Generation of 3D Human Motions (ACM MultiMedia 2020)"""
qiqihaer/3dssd-pytorch,qiqihaer/3DSSD-pytorch,[],3DSSD's implementation with Pytorch
tpaul1611/python_tflite_for_amazonlinux,tpaul1611/python_tflite_for_amazonlinux,"['tensorflow-lite', 'aws-lambda-python', 'amazonlinux', 'tflite', 'tensorflow', 'tensorflow-python', 'dockerfile']",Python TensorFlow Lite (tflite) for amazonlinux/aws lambda.
lironui/linear-attention-mechanism,lironui/Linear-Attention-Mechanism,"['attention-mechanism', 'attention', 'segmentation']",Attention mechanism
cli98/dmnet,Cli98/DMNet,"['deep-learning', 'aerial-image-detection', 'remote-sensing']",Official implementation for DMNet: Density map guided object detection in aerial image (CVPR 2020 EarthVision workshop)
mrkieumy/task-conditioned,mrkieumy/task-conditioned,"['computer-vision', 'object-detection', 'pedestrian-detection', 'thermal-imaging', 'yolov3-kaist', 'domain-adaptation', 'transfer-learning', 'fine-tuning', 'cnn', 'detector', 'deep-learning', 'python']","This source code implements our ECCV paper ""task-conditioned domain adaptation for pedestrian detection in thermal imagery""."
zhaogangthu/keras-yolo3-ocr-tensorrt,zhaogangthu/keras-yolo3-ocr-tensorrt,[],"ocr with yolo3 as feature extractor, implemented by keras, and accelerated by tensorrt"
sicara/tf2-yolov4,sicara/tf2-yolov4,"['tensorflow', 'keras', 'object-detection', 'yolo', 'yolov4']",A TensorFlow 2.0 implementation of YOLOv4: Optimal Speed and Accuracy of Object Detection
phamquiluan/residualmaskingnetwork,phamquiluan/ResidualMaskingNetwork,"['fer2013', 'facial-expression-recognition', 'residual-masking-network', 'pytorch', 'image-classification']",ICPR 2020: Facial Expression Recognition using Residual Masking Network
raoyongming/pointglr,raoyongming/PointGLR,"['3d-point-clouds', 'deep-learning', 'unsupervised-learning', 'computer-vision', 'representation-learning', 'metric-learning']",[CVPR 2020] Global-Local Bidirectional Reasoning for Unsupervised Representation Learning of 3D Point Clouds
clovaai/rebias,clovaai/rebias,"['machine-learning', 'deep-learning', 'rebias', 'bias-generalisation', 'bias-generalization', 'pytorch', 'icml2020', 'icml-2020', 'icml']","Official Pytorch implementation of ReBias (Learning De-biased Representations with Biased Representations), ICML 2020"
snunlp/kr-bert,snunlp/KR-BERT,['nlp'],KoRean based BERT pre-trained models (KR-BERT) for Tensorflow and PyTorch
neuml/cord19q,neuml/cord19q,"['python', 'machine-learning', 'nlp', 'covid-19', 'medical', 'search', 'scientific-papers', 'document-search']",COVID-19 Open Research Dataset (CORD-19) Analysis
yusukeurakami/dreamer-pytorch,yusukeurakami/dreamer-pytorch,[],pytorch-implementation of Dreamer (Model-based Image RL Algorithm)
raivnlab/str,RAIVNLab/STR,"['sparsity', 'learnable-sparsity', 'sparsity-optimization', 'cnn', 'efficient-inference', 'edge-machine-learning', 'soft-thresholding', 'str', 'imagenet', 'resource-efficient', 'icml-2020', 'icml', 'icml2020', 'soft-threshold-reparameterization']",Soft Threshold Weight Reparameterization for Learnable Sparsity
liucongg/unilmchatchitrobot,liucongg/UnilmChatchitRobot,"['unilm', 'nlp', 'generation', 'chatbot', 'chinese']",Unilm for Chinese Chitchat Robot.基于Unilm模型的夸夸式闲聊机器人项目。
xinshengwang/s2igan,xinshengwang/S2IGAN,[],Pytorch Code for S2IGAN
zassou65535/image_generator_2,zassou65535/image_generator_2,"['python', 'gan', 'image-generation', 'progressive-gan', 'pytorch']",Progressive GANによる画像生成器
miaoyunzhao/gantransferlimiteddata,MiaoyunZhao/GANTransferLimitedData,[],"This is a pytorch implementation of the paper ""On Leveraging Pretrained GANs for Limited-Data Generation""."
ternaus/facemask_detection,ternaus/facemask_detection,"['python', 'pytorch', 'classification', 'image-processing', 'mask-detection']",Detection masks on faces.
lornatang/ugatit-pytorch,Lornatang/UGATIT-PyTorch,"['pytorch', 'pytorch-implmention', 'cnn', 'gan', 'ugatit', 'simple', 'speed', 'pre-trained-model']","Simple, fast and easy to read. Yes, we use the pytorch framework!"
pfnet-research/tgan2,pfnet-research/tgan2,"['generative-adversarial-network', 'video-generation', 'machine-learning', 'deep-learning']","The official implementation of ""Train Sparsely, Generate Densely: Memory-efficient Unsupervised Training of High-resolution Temporal GAN"""
audioku/cross-accent-maml-asr,audioku/cross-accent-maml-asr,"['maml', 'meta-learning', 'asr', 'cross-accent', 'accent', 'pytorch', 'speech']",Meta-learning model agnostic (MAML) implementation for cross-accented ASR
mandubian/codenets,mandubian/codenets,"['deep-learning', 'nlp', 'programming-language', 'huggingface', 'transformer', 'bert', 'tokenizer', 'ai']",My own playground for PLP (Programming Language Processing) using DeepLearning techniques
statguyuser/textfeatureselection,StatguyUser/TextFeatureSelection,"['feature-selection', 'nlp', 'nlp-machine-learning', 'machine-learning', 'machinelearning', 'natural-language-processing', 'natural-language-understanding', 'text-classification', 'text-categorization', 'natural-language', 'natural-language-generation', 'nlp-library', 'nlp-resources', 'nlproc', 'naturallanguageprocessing', 'natural-language-inference']","Python library for feature selection for text features. It has filter method, genetic algorithm and TextFeatureSelectionEnsemble for improving text classification models. Helps improve your machine learning models"
eliasnehme/deepstorm3d,EliasNehme/DeepSTORM3D,[],DeepSTORM3D implemented in Pytorch
massanishi/document_similarity_algorithms_experiments,massanishi/document_similarity_algorithms_experiments,"['tf-idf', 'jaccard', 'algorithm', 'universal-sentence-encoder', 'bert', 'document-similarity', 'new-york-times', 'deep-learning']","Document similarity algorithms experiment - Jaccard, TF-IDF, Doc2vec, USE, and BERT."
armanihm/gdc,armanihm/GDC,"['graphneuralnetwork', 'deep-learning', 'deep-neural-networks', 'gcn', 'gcnn', 'machine-learning', 'bayesian-neural-networks', 'bayesian-deep-learning', 'graph-deep-learning', 'graph-neural-networks', 'graph-neural-network', 'graph-convolutional-networks']",Bayesian Graph Neural Networks with Adaptive Connection Sampling - Pytorch
qz-cmd/yolov3-trt-jetson-nano,QZ-cmd/YOLOv3-TRT-jetson-nano,[],基于pytorch-yolov3的trt加速方案
hyoungsungkim/pytorch-tensorboard_tutorial,HyoungsungKim/Pytorch-tensorboard_tutorial,[],Pytorch-tensorboard simple tutorial and example for a beginner
microsoft/lid-tool,microsoft/LID-tool,"['language-identification', 'natural-language-processing', 'python3', 'mallet', 'language-tags', 'code-mixing', 'code-switching', 'linguistics']","This code provides word level language identification tool for identifying language for individual words in Code-Mixed text. e.g. The text that includes words from two languages such as Hindi written in roman script, mixed with English."
maudzung/rtm3d,maudzung/RTM3D,"['rtm3d', 'real-time', 'monocular-images', 'centernet', 'pytorch-implementation', '3d-object-detection', 'autonomous-vehicles', 'self-driving-car', 'autonomous-driving', 'pytorch', 'kitti-dataset']","Unofficial PyTorch implementation of ""RTM3D: Real-time Monocular 3D Detection from Object Keypoints for Autonomous Driving"" (ECCV 2020)"
didi/dlflow,didi/dlflow,"['deeplearning', 'tensorflow', 'deeplearning-framework']",DLFlow is a deep learning framework.
nerminsamet/ppdet,nerminsamet/ppdet,"['object-detection', 'deep-learning', 'pytorch', 'fpn', 'noise-reduction', 'small-object-detection', 'pooling', 'top-down', 'bmvc', 'bmvc20']",[BMVC-20] Official PyTorch implementation of PPDet.
fcakyon/craft-text-detector,fcakyon/craft-text-detector,"['text', 'ocr', 'text-detection', 'computer-vision', 'deep-learning', 'neural-network', 'pytorch', 'python', 'pypi', 'anaconda', 'windows', 'macos', 'linux', 'document', 'vision', 'actions', 'workflow', 'craft', 'hacktoberfest']","Packaged, Pytorch-based, easy to use, cross-platform version of the CRAFT text detector"
myungsub/meta-interpolation,myungsub/meta-interpolation,"['frame-interpolation', 'meta-learning', 'slow-motion', 'pytorch', 'cvpr2020', 'video-frame-interpolation', 'deep-learning', 'computer-vision']","Source code for CVPR 2020 paper ""Scene-Adaptive Video Frame Interpolation via Meta-Learning"""
slgero/receipt_parser,slgero/receipt_parser,"['receipt', 'receipt-validation', 'nlp']",Allow parsing Russian receipts
huangtinglin/ngcf-pytorch,huangtinglin/NGCF-PyTorch,"['pytorch', 'pytorch-implementation', 'machine-learning', 'graph-algorithms', 'recommender-system', 'neural-collaborative-filtering', 'deep-learning']",PyTorch Implementation for Neural Graph Collaborative Filtering
zzhanghub/gicd,zzhanghub/gicd,"['eccv', 'eccv2020', 'co-saliency', 'pytorch', 'coca', 'gicd', 'salient-object-detection', 'segmentation', 'jigsaw', 'saliency-detection', 'paper']",[ECCV 2020] Gradient-Induced Co-Saliency Detection
pingyu-iris/sa-gcn,PingYu-iris/SA-GCN,[],This code repository presents the pytorch implementation of the paper “Structure-Aware Human-ActionGeneration”(ECCV 2020).
biparnakroy/pseudolabelgeneratorforyolo,biparnakroy/pseudoLabelGeneratorForYOLO,"['yolov3', 'yolov4-darknet', 'darknet', 'dataset-generation', 'yololabel', 'semi-supervised-learning', 'python-script', 'deep-neural-networks', 'deep-learning', 'yolov4', 'pseudo-labeling']",Creating datasets in YOLO format using pretrained YOLO model in Darknet framework which could be used to train the model further
zeroized/deeprec-torch,zeroized/DeepRec-torch,"['fm', 'deepfm', 'pnn', 'fnn', 'pytorch', 'ctr', 'deep-learning', 'afm', 'wide-and-deep', 'dcn', 'flen', 'autoint']",Easy-to-use pytorch-based framework for RecSys models
pranavsastry/neowise,pranftw/neowise,"['neural-network', 'artificial-intelligence', 'deeplearning', 'framework', 'pypi-package', 'machine-learning', 'python', 'numpy']",Deep Learning library built from scratch with Python and NumPy
sparkjiao/self-training-mrc,SparkJiao/Self-Training-MRC,[],This is the pytorch implementation of the long paper on ACL 2020: A Self-Training Method for Machine Reading Comprehension with Soft Evidence Extraction.
lavieluo/drmea,LavieLuo/DRMEA,"['domain-adaptation', 'manifold-learning', 'aaai2020']",Pytorch code for “Unsupervised Domain Adaptation via Discriminative Manifold Embedding and Alignment ” (DRMEA) (AAAI 2020).
iantaehoonyoo/semantic-segmentation-pytorch,IanTaehoonYoo/semantic-segmentation-pytorch,"['pytorch', 'computer-vision', 'semantic-segmentation', 'fcn', 'fcn8s', 'resnet50', 'resnet', 'unet', 'pspnet', 'mobileunet', 'vgg', 'vgg16', 'convolutional-networks', 'deep-learning']","Pytorch implementation of FCN, UNet, PSPNet, and various encoder models."
dmburd/s-dcnet,dmburd/S-DCNet,"['deep-learning', 'convolutional-neural-networks', 'pytorch', 'crowd-counting', 'computer-vision', 'crowd-analysis']",Unofficial Pytorch implementation of S-DCNet and SS-DCNet
shuuchen/frelu.pytorch,shuuchen/frelu.pytorch,"['activation-functions', 'cnn']",A PyTorch implementation of funnel activation https://arxiv.org/pdf/2007.11824.pdf
layer6ai-labs/tafa,layer6ai-labs/TAFA,"['python', 'pytorch', 'autoencoder', 'recommender-system']","Code for the RecSys'20 paper ""TAFA: Two-headed Attention Fused Autoencoder for Context-Aware Recommendations"""
nekitmm/funnelact_pytorch,nekitmm/FunnelAct_Pytorch,"['frelu', 'funnel-act', 'funnel-activation', 'pytorch', 'resnet', 'deep-learning', 'deep-neural-networks']",pytorch implementation of Funnel Activation (FReLU)
daixiangzi/grad_cam-pytorch-resnet50,daixiangzi/Grad_Cam-pytorch-resnet50,"['pytorch', 'grad-cam']",Class activate map 
leonlok/deep-sort-yolov4,LeonLok/Deep-SORT-YOLOv4,"['yolov4', 'deep-sort', 'deep-sort-tracking', 'people-tracker', 'people-tracking', 'asynchronous', 'asynchronous-io', 'yolo', 'tensorflow', 'asynchronous-processing', 'tracking-algorithm', 'object-detection', 'object-tracking', 'tensorflow2', 'detection-algorithm', 'yolov3']",People detection and optional tracking with Tensorflow backend.
saic-vul/iterdet,saic-vul/iterdet,"['iterdet', 'object-detection', 'mmdetection', 'pytorch', 'faster-rcnn', 'retinanet', 'crowdhuman', 'widerperson']",[S+SSPR2020] IterDet: Iterative Scheme for Object Detection in Crowded Environments
hrnet/hrnet-bottom-up-pose-estimation,HRNet/HRNet-Bottom-Up-Pose-Estimation,[],This is an official pytorch implementation of “Bottom-Up Human Pose Estimation by Ranking Heatmap-Guided Adaptive Keypoint Estimates” (https://arxiv.org/abs/2006.15480). 
yangyanli/do-conv,yangyanli/DO-Conv,"['deep-learning', 'convolutional-neural-networks', 'tensorflow', 'pytorch', 'gluoncv']",Depthwise Over-parameterized Convolutional Layer
hoya012/carrier-of-tricks-for-classification-pytorch,hoya012/carrier-of-tricks-for-classification-pytorch,"['deep-learning', 'deep-neural-networks', 'classification-pytorch', 'classification', 'pytorch', 'pytorch-tutorial', 'pytorch-cnn']",carrier of tricks for image classification tutorials using pytorch.
patrick-kidger/torchcubicspline,patrick-kidger/torchcubicspline,"['pytorch', 'interpolation', 'spline']","Interpolating natural cubic splines. Includes batching, GPU support, support for missing values, evaluating derivatives of the spline, and backpropagation."
fu0511/xgrad-cam,Fu0511/XGrad-CAM,[],Axiom-based Grad-CAM implementation in Pytorch
avbuffer/unet3plus_pth,avBuffer/UNet3plus_pth,"['pytorch', 'unet', 'unet-plusplus', 'unet3plus', 'portrait-matting']","UNet3+/ UNet++/UNet, used in Deep Automatic Portrait Matting in Pytorth"
perrying/pytorch-consistency-regularization,perrying/pytorch-consistency-regularization,"['pytorch', 'python', 'semi-supervised', 'semi-supervised-learning', 'fixmatch']",PyTorch implementation of consistency regularization methods for semi-supervised learning
adityap27/face-mask-detector,adityap27/face-mask-detector,"['computer-vision', 'deep-learning', 'yolo', 'machine-learning', 'artificial-intelligence', 'neural-network']",𝐑𝐞𝐚𝐥-𝐓𝐢𝐦𝐞 𝐅𝐚𝐜𝐞 𝐦𝐚𝐬𝐤 𝐝𝐞𝐭𝐞𝐜𝐭𝐢𝐨𝐧 𝐮𝐬𝐢𝐧𝐠 𝐝𝐞𝐞𝐩𝐥𝐞𝐚𝐫𝐧𝐢𝐧𝐠 𝐰𝐢𝐭𝐡 𝐀𝐥𝐞𝐫𝐭 𝐬𝐲𝐬𝐭𝐞𝐦 💻🔔
csjunxu/noisy-as-clean-tip2020,csjunxu/Noisy-As-Clean-TIP2020,['pytorch'],"PyTorch Code for ""Noisy-As-Clean: Learning Self-supervised Denoising from Corrupted Image"", TIP 2020."
lewis-morris/mapextrackt,lewis-morris/mapextrackt,"['pytorch', 'feature-extraction', 'neural-network']",Pytorch Feature Map Extractor
sundw2014/dcm,sundw2014/DCM,"['cnn', 'deep-learning', 'machine-learning', 'image-classification', 'knowledge-transfer', 'knowledge-distillation']",Knowledge Transfer via Dense Cross-layer Mutual-distillation (ECCV'2020)
wwdkl/aabo,wwdkl/AABO,"['detection', 'pytorch', 'anchor-optimization']",Implementation for ECCV 2020 paper: AABO: Adaptive Anchor Box Optimization for Object Detection via Bayesian Sub-sampling.
zhiqiangdon/online-augment,zhiqiangdon/online-augment,"['data-augmentation', 'automl', 'less-domain-knowledge', 'auto-augment', 'online-augment', 'stn', 'autoaugment', 'pytorch', 'vae', 'efficient-training', 'generative-adversarial-network', 'online-learning']","Code for ""OnlineAugment: Online Data Augmentation with Less Domain Knowledge"" (ECCV 2020)"
openredact/nerwhal,openredact/nerwhal,"['named-entities', 'ner', 'suite', 'recognize', 'recognition', 'entity-ruler', 'flashtext', 'keyword', 'deep-learning', 'statistical', 'regular-expressions']",This is a prototype of a multi-lingual suite for named-entity recognition in Python.
jd730/strg,jd730/STRG,[],Pytorch Implementation of  Videos as Space-Time Region Graphs
baowentz/advancedeast-pytorch,BaoWentz/AdvancedEAST-PyTorch,"['pytorch', 'advancedeast', 'lmdb-dataset']","将原本Keras版本的AdvancedEAST改写成PyTorch版，将数据集由.npy文件改成一个LMDB文件，加入Precision，Recall, F1 score方便训练以及调试，底层网络仍然用VGG16。"
xingangpan/deep-generative-prior,XingangPan/deep-generative-prior,"['generative-adversarial-network', 'gan', 'deep-learning', 'image-restoration', 'image-manipulation', 'image-prior']",Code for deep generative prior (ECCV2020 oral)
project-splinter/monoport,Project-Splinter/MonoPort,"['deep-learning', 'machine-learning', 'volumetric', '3d-reconstruction', '3d-vision', 'siggraph', 'monocular', 'performance-capture', 'eccv2020', 'virtual-reality', 'pifu', 'clothed-humans', 'reconstruction', 'pytorch', 'pifuhd', 'real-time', 'teleportation', 'virtual-conference', 'teleportvr', 'sdf']",Volumetric Human Teleportation (SIGGRAPH 2020 Real-Time Live) Monocular Real-Time Volumetric Performance Capture(ECCV 2020)
microsoft/rat-sql,microsoft/rat-sql,"['program-synthesis', 'semantic-parsing', 'nlp', 'question-answering', 'dbqa', 'nl2sql', 'transformers']",A relation-aware semantic parsing model from English to SQL
ethanrosenthal/nannernest,EthanRosenthal/nannernest,"['machine-learning', 'computer-vision', 'sandwiches', 'deep-learning']",Optimal peanut butter and banana sandwiches
zxhuang1698/interpretability-by-parts,zxhuang1698/interpretability-by-parts,"['cvpr2020', 'explainable-ai', 'interpretability', 'fine-grained-classification', 'part-based-models', 'celeba-dataset', 'cvpr-2020', 'cvpr-oral', 'pytorch', 'pytorch-implementation', 'face-segmentation', 'celeba', 'weakly-supervised-segmentation', 'weakly-supervised-localization', 'cub-dataset']","Code repository for ""Interpretable and Accurate Fine-grained Recognition via Region Grouping"", CVPR 2020 (Oral)"
antoninodimaggio/hugging-captions,antoninodimaggio/Hugging-Captions,"['transformers', 'nlp', 'instagram', 'huggingface', 'gpt-2', 'language-models']",Generate realistic Instagram captions using transformers 🤗 
music-x-lab/pop909-dataset,music-x-lab/POP909-Dataset,"['dataset', 'music', 'python', 'jupyter-notebook', 'deep-learning', 'music-generation']",This is the dataset repository for the paper: POP909: A Pop-song Dataset for Music Arrangement Generation
kubraturker/social_distancing-cv,KubraTurker/Social_Distancing-CV,"['social-distancing', 'covid-19', 'computer-vision', 'opencv', 'tensorflow', 'ai', 'python', 'covid19', 'deep-learning', 'coronavirus', 'caffe', 'ssd', 'object-detection', 'social-distancing-detection', 'social-distance-monitoring']",I developed a computer vision project that measures the distance between people to check whether a specific distance exists between them or not.
jermmy/pytorch-quantization-demo,Jermmy/pytorch-quantization-demo,[],A simple network quantization demo using pytorch from scratch.
chargedmonk/social-distancing-using-yolov5,ChargedMonk/Social-Distancing-using-YOLOv5,"['python', 'opencv', 'yolo', 'computer-vision', 'deep-learning', 'social-distancing', 'social-distancing-detection', 'social-distance-monitoring', 'pytorch']",Classifying people as high risk and low risk based on their distance to other people.
dmgutierrez/spotify-musixmatch-data-collector,dmgutierrez/spotify-musixmatch-data-collector,"['natural-language-processing', 'spotify-api', 'musixmatch-api', 'audio-processing', 'data-science', 'dataset-generation']",A Python module to generate large scale Music datasets using both Spotify and MusixMatch API's.
xytpai/detx-retinanet,xytpai/DetX-Retinanet,"['retinanet', 'pytorch', 'object-detection', 'deep-learning']",(Pytorch) Beyond Paper ! 35.9mAP@r50-700px-1x
luckydc/generalizing-reid,LuckyDC/generalizing-reid,"['domain-adaptation', 'person-reidentification', 'deep-learning']","Repository of the paper ""Generalizing Person Re-Identification by Camera-Aware Instance Learning and Cross-Domain Mixup"""
confusezius/eccv2020_diva_multifeature_dml,Confusezius/ECCV2020_DiVA_MultiFeature_DML,"['deep-metric-learning', 'metric-learning', 'deep-learning', 'image-retrieval', 'wandb', 'cub200-2011', 'cars196', 'stanford-online-products']","(ECCV 2020) This repo contains code for ""DiVA: Diverse Visual Feature Aggregation for Deep Metric Learning"" (https://arxiv.org/abs/2004.13458), which extends vanilla DML with auxiliary and self-supervised features."
weichengtseng/pytorch-pcgrad,WeiChengTseng/Pytorch-PCGrad,"['deep-reinforcement-learning', 'multi-task-learning', 'deep-learning', 'reinforcement-learning', 'multi-task-reinforcement-learning', 'rl', 'multi-task-rl', 'pytorch-pcgrad', 'pytorch', 'gradient-surgery', 'mnist', 'mulit-mnist', 'reimplementation', 'cifar-100']","Pytorch reimplementation for ""Gradient Surgery for Multi-Task Learning"""
stuartemiddleton/geoparsepy,stuartemiddleton/geoparsepy,"['natural-language-processing', 'artificial-intelligence', 'information-extraction', 'geoparse', 'location-extraction', 'toponym-resolution', 'nlp', 'openstreetmap', 'postgresql']","geoparsepy is a Python geoparsing library that will extract and disambiguate locations from text. It uses a local OpenStreetMap database which allows very high and unlimited geoparsing throughput, unlike approaches that use a third-party geocoding service (e.g.  Google Geocoding API). this repository holds Python examples to use the PyPI library."
raghavian/lungvae,raghavian/lungVAE,[],"This is the official Pytorch implementation of ""Lung Segmentation from Chest X-rays using Variational Data Imputation"", Raghavendra Selvan et al. 2020"
rowanz/turingadvice,rowanz/turingadvice,"['natural-language-understanding', 'natural-language-processing', 'natural-language-generation']",Evaluating Machines by their Real-World Language Use
hhaandroid/deep_learning_codesegment,hhaAndroid/deep_learning_codesegment,[],Code segment are often used in deep learning algorithms(pytorch/numpy)
mbchang/decentralized-rl,mbchang/decentralized-rl,"['mechanism-design', 'machine-learning', 'deep-reinforcement-learning', 'pytorch', 'artificial-intelligence', 'deep-learning']",Decentralized Reinforcment Learning: Global Decision-Making via Local Economic Transactions (ICML 2020)
vevenom/scannet-layout,vevenom/ScanNet-Layout,"['3d-vision', 'room-layout', 'computer-vision', 'deep-learning', 'projective-geometry', 'augmented-reality']",We introduce the ScanNet-Layout dataset for benchmarking general 3D room layout estimation from single view. 
yeyupiaoling/tensorflow-facerecognition,yeyupiaoling/Tensorflow-FaceRecognition,"['face-recognition', 'tensorflow', 'mtcnn', 'mobilefacenet']",基于MTCNN和MobileFaceNet实现的人脸识别，提供三种预测方式，满足各种需求 。
ostamand/tensorflow-tabnet,ostamand/tensorflow-tabnet,"['tensorflow2', 'tabnet', 'keras']",Improved TabNet for TensorFlow
junleen/expression-manipulator,junleen/Expression-manipulator,"['expression-manipulator', 'pytorch', 'eccv']",ECCV'20 paper 'Toward Fine-grained Facial Expression Manipulation' code
omni-us/research-ganwriting,omni-us/research-GANwriting,"['generative-adversarial-network', 'handwriting-synthesis']","Source code for ECCV20 ""GANwriting: Content-Conditioned Generation of Styled Handwritten Word Images"""
horenbergerb/friendsimulator,horenbergerb/FriendSimulator,"['ai', 'ml', 'gpt2', 'gpt2-chatbot', 'machine-learning', 'huggingface', 'huggingface-transformers', 'nlp', 'gpt-2']",Uses GPT2 to simulate your friends
xu-peng-tao/ssd-pruning-and-quantization,xu-peng-tao/SSD-Pruning-and-quantization,"['ssd', 'prune', 'pruning', 'quantization', 'quantification', 'compression', 'pytorch']",Pruning and quantization for SSD.  Model compression.
mzhang367/dcdh-pytorch,mzhang367/DCDH-PyTorch,"['deep-hashing', 'face-image-retrieval', 'pytorch', 'deep-learning']",Official codes of the paper: Deep Center-Based Dual-Constrained Hashing for Discriminative Face Image Retrieval (DCDH)
hamanlp/hama-py,hamanlp/hama-py,"['natural-language-processing', 'text-processing', 'korean', 'python']",🦛 파이썬 한글 처리 라이브러리. Python Korean Morphological Analyzer
jianningli/autoimplant,Jianningli/autoimplant,"['autoimplant', 'skull', 'cranioplasty', 'shape-analysis', 'deep-learning', 'cranial-implant-design', 'volumetric-shape-completion', 'skull-reconstruction', 'craniotomy']",A Baseline Approach for the AutoImplant Challenge
abhimishra91/insight,abhimishra91/insight,"['fastapi', 'streamlit', 'streamlit-webapp', 'natural-language-processing', 'nlp', 'machine-learning', 'transformer', 'huggingface-transformer', 'huggingface', 'docker', 'microservice', 'transformers-models']",Repository for Project Insight: NLP as a Service
abelriboulot/onnxt5,abelriboulot/onnxt5,"['nlp', 'nlp-machine-learning', 'onnx', 'onnxruntime', 'transformer', 'transformers', 'inference', 'summarization', 'translation', 'text-generation', 'text-classification', 'sentiment-analysis']","Summarization, translation, sentiment-analysis, text-generation and more at blazing speed using a T5 version implemented in ONNX."
kb-bank-ai/kb-albert-ko,KB-AI-Research/KB-ALBERT,"['albert', 'korean-nlp', 'pytorch', 'transformers', 'nlp', 'language-model', 'financial-nlp']",KB국민은행에서 제공하는 경제/금융 도메인에 특화된 한국어 ALBERT 모델 
bshall/vectorquantizedcpc,bshall/VectorQuantizedCPC,"['pytorch', 'voice-conversion', 'contrastive-predictive-coding', 'vq-vae', 'speech-synthesis', 'zerospeech', 'acoustic-features']",Vector-Quantized Contrastive Predictive Coding for Acoustic Unit Discovery and Voice Conversion
bubblyyi/coronary-artery-tracking-via-3d-cnn-classification,BubblyYi/Coronary-Artery-Tracking-via-3D-CNN-Classification,"['3d-cnn', '3d-classification', 'pytorch', 'coronary-artery', 'centerline-extraction', '3d-cnn-tracker', 'centerline', 'medical-image-processing', 'deep-learning', 'blood-vessel', 'vessel', 'centerline-detection']",The PyTorch re-implement of a 3D CNN Tracker to extract coronary artery centerlines with state-of-the-art (SOTA) performance. (paper: 'Coronary artery centerline extraction in cardiac CT angiography using a CNN-based orientation classiﬁer')
mangye16/ddag,mangye16/DDAG,[],Pytorch Code of DDAG for Visible-Infrared Person Re-Identification (ECCV20)
ioangatop/srvae,ioangatop/srVAE,"['vae', 'vae-pytorch', 'super-resolution', 'representation-learning', 'unsupervised-learning', 'unsupervised-machine-learning', 'pytorch', 'python3', 'generative-model', 'variational-autoencoder', 'cifar10', 'cifar-10']",VAE with RealNVP prior and Super-Resolution VAE in PyTorch. Code release for https://arxiv.org/abs/2006.05218.
hoya012/automatic-mixed-precision-tutorials-pytorch,hoya012/automatic-mixed-precision-tutorials-pytorch,[],"Automatic Mixed Precision Tutorials using pytorch. Based on PyTorch 1.6 Official Features,  implement classification codebase using custom dataset."
valencebond/fixmatch_pytorch,valencebond/FixMatch_pytorch,"['semi-supervised-learning', 'pytorch', 'fixmatch']","Unofficial PyTorch implementation of ""FixMatch: Simplifying Semi-Supervised Learning with Consistency and Confidence"""
kajyuuen/allennlp-book,kajyuuen/allennlp-book,"['allennlp', 'nlp']",本リポジトリは「AllenNLP入門」のソースコード置き場です。
tomasbrezina/neuralnetworkracing,TomasBrezina/NeuralNetworkRacing,"['neural-network', 'deep-learning']",Neural networks race
laura-wang/video_repres_sts,laura-wang/video_repres_sts,[],Pytorch implementation of  our T-PAMI 2021 paper: Self-supervised Video Representation Learning by Uncovering Motion and Appearance Statistics
scagin/neurallogicreasoning,Scagin/NeuralLogicReasoning,"['paper', 'neural-network', 'reasoning']","An Implementation of NLR: Neural Collaborative Reasoning, paper: https://arxiv.org/abs/2005.08129"
je-santos/poreflow-net,je-santos/PoreFlow-Net,"['cnn', '3d', 'keras-tensorflow', 'porous-media-flow', '3d-images', 'lbm', 'surrogate-models', 'convolutional-neural-networks', 'digital-rockphysics', 'digital-rocks', 'permeability', 'poreflow-net', 'convolutional-neural-network', 'single-phase', 'lattice-boltzmann', 'neural-networks', 'machine-learning', 'keras', 'tensorflow', 'gpu']",3D CNN to predict single-phase flow velocity fields
taufeeque9/humanfalldetection,taufeeque9/HumanFallDetection,"['video-processing', 'multiple-cameras', 'fall-detection', 'human-pose-estimation', 'long-short-term-memory', 'lstm', 'neural-networks', 'deep-learning', 'python3-fall-detector']","Real-time, Multi-person & Multi-camera Fall Detector in Python"
mianzhang/dialogue_gcn,mianzhang/dialogue_gcn,[],"Pytorch implementation to paper ""DialogueGCN: A Graph Convolutional Neural Network for Emotion Recognition in Conversation"". "
rizavelioglu/challenge-aido_rl-il,rizavelioglu/challenge-aido_RL-IL,"['reinforcement-learning', 'self-driving-cars', 'imitation-learning', 'pytorch', 'keras', 'tensorflow', 'supervised-learning', 'behavioral-cloning']",Reinforcement Learning + Imitation Learning based approach to AI Driving Olympics
ktho22/vctts,ktho22/vctts,[],"pytorch implementation of ""Emotional Voice Conversion using Multitask Learning with Text-to-Speech"", Accepted to ICASSP 2020 "
dessa-oss/atlas,dessa-oss/atlas,"['machine-learning', 'data-science', 'artificial-intelligence', 'python', 'deep-learning', 'gpu', 'ai', 'ml', 'model-management']","An Open Source, Self-Hosted Platform For Applied Deep Learning Development"
tonyngjichun/solar,tonyngjichun/SOLAR,"['image-retrieval', 'global-descriptors', 'local-descriptors', 'second-order', 'non-local-block', 'eccv-2020', 'eccv2020', 'eccv', 'computer-vision', 'deep-learning', 'pytorch', 'cnn']","PyTorch code for ""SOLAR: Second-Order Loss and Attention for Image Retrieval"". In ECCV 2020"
vita-group/autospeech,VITA-Group/AutoSpeech,"['automl', 'autospeech', 'neural-architecture-search', 'speaker-recognition', 'pytorch']","[InterSpeech 2020] ""AutoSpeech: Neural Architecture Search for Speaker Recognition"" by Shaojin Ding*, Tianlong Chen*, Xinyu Gong, Weiwei Zha, Zhangyang Wang "
richardkxu/distributed-pytorch,richardkxu/distributed-pytorch,"['distributed-training', 'deep-learning', 'computer-vision', 'imagenet', 'mixed-precision-training', 'pytorch', 'nvidia-apex', 'tensorboard', 'horovod']","Distributed, mixed-precision training with PyTorch"
cattaneod/maskflownet-pytorch,cattaneod/MaskFlownet-Pytorch,"['deep-learning', 'computer-vision', 'convolutional-neural-networks', 'optical-flow', 'kitti-dataset', 'dnn', 'cnn', 'pytorch', 'maskflownet']",Pytorch implementation of MaskFlownet
rishikksh20/resunet,rishikksh20/ResUnet,"['resunet', 'unet', 'image-processing', 'image-segmentation', 'unet-pytorch', 'medical-image-processing', 'satellite-imagery', 'deep-residual-network', 'segmentation', 'image-to-image-translation']",Pytorch implementation of ResUnet and ResUnet ++
ahmdtaha/constrained_attention_filter,ahmdtaha/constrained_attention_filter,"['tensorflow', 'deep-neural-networks', 'attention-visualization', 'python-3', 'python3', 'imagenet', 'convolutional-neural-networks', 'weakly-supervised-localization', 'autonomous-vehicles', 'autonomous-driving', 'classification', 'retrieval', 'feature-embedding']",(ECCV2020) Tensorflow implementation of A Generic Visualization Approach for Convolutional Neural Networks
mattdl/clsurvey,Mattdl/CLsurvey,"['continual-learning', 'tpami', 'defy-forgetting', 'classification-tasks', 'deep-learning', 'neural-networks', 'framework', 'hyperparameter-tuning', 'inaturalist', 'tinyimagenet', 'icarl', 'synaptic-intelligence', 'gradient-episodic-memory', 'packnet', 'hat', 'memory-aware-synapses', 'elastic-weight-consolidation', 'incremental-learning', 'incremental-moment-matching']","Continual Hyperparameter Selection Framework. Compares 11 state-of-the-art Lifelong Learning methods and  4 baselines. Official Codebase of ""A continual learning survey: Defying forgetting in classification tasks."" in  IEEE TPAMI."
ocatak/malware_api_class,ocatak/malware_api_class,"['dataset', 'sandbox', 'cuckoo-sandbox', 'malware', 'machine-learning', 'malware-families', 'malware-dataset', 'adware', 'study', 'classification', 'deep-learning', 'lstm-neural-networks']","Malware dataset for security researchers, data scientists. Public malware dataset generated by Cuckoo Sandbox based on Windows OS API calls analysis for cyber security researchers"
wenxuecui/csnet-pytorch,WenxueCui/CSNet-Pytorch,[],"Pytorch code for paper ""Deep Networks for Compressed Image Sensing"" and ""Image Compressed Sensing Using Convolutional Neural Network"""
juliawolleb/descargan,JuliaWolleb/DeScarGAN,[],Official Pytorch implementation of the paper DeScarGAN
milvlg/mt-captioning,MILVLG/mt-captioning,"['image-captioning', 'pytorch', 'multimodal-transformer']",A PyTorch implementation of the paper Multimodal Transformer with Multiview Visual Representation for Image Captioning
mchughes288/emotion_detection_cpc,McHughes288/emotion_detection_cpc,"['emotion', 'emotion-recognition', 'emotion-detection', 'machine-learning', 'pytorch', 'self-supervised-learning', 'speech']",Emotion detection in audio utilising self-supervised representations trained with Contrastive Predictive Coding (CPC).
incheon-cho/dynamic_model_pruning_with_feedback,INCHEON-CHO/Dynamic_Model_Pruning_with_Feedback,"['pruning', 'pytorch-implementation', 'prune', 'pruning-structures']",Implement of Dynamic Model Pruning with Feedback with pytorch
choiw-public/crack-segmentation,choiw-public/Crack-segmentation,"['tensorflow', 'segmentation', 'crack-segmentation', 'crack-detection', 'python']",This repo contains customized deep learning models for segmenting cracks.
is2ai/chest-x-ray-module,IS2AI/Chest-X-ray-module,"['deep-learning', 'densenet121', 'medical-imaging', 'machine-learning', 'computer-vision', 'pytorch', 'catalyst']",
yang-han/p-reg,yang-han/P-reg,"['graph-neural-networks', 'gcn', 'gnn', 'regularization', 'aaai2021']",Rethinking Graph Regularization for Graph Neural Networks (AAAI2021)
kevinzakka/torchnca,kevinzakka/torchnca,"['pytorch', 'nca-python', 'neighbourhood-components-analysis', 'python', 'python3']",A PyTorch implementation of Neighbourhood Components Analysis.
neuml/codequestion,neuml/codequestion,"['python', 'machine-learning', 'search', 'nlp', 'txtai']",💭 Semantic search for developers
minyoungg/pix2latent,minyoungg/pix2latent,"['pytorch', 'cma-es', 'inverting-images', 'nevergrad', 'biggan', 'stylegan2', 'gan']",Code for: Transforming and Projecting Images into Class-conditional Generative Networks
samuelbroughton/stargan-voice-conversion-2,SamuelBroughton/StarGAN-Voice-Conversion-2,"['pytorch', 'voice-conversion', 'stargan-vc2', 'stagan-vc', 'speech', 'speech-synthesis']",A pytorch implementation of StarGAN-VC2
mhso/bombsolver,mhso/BombSolver,"['machine-learning', 'python', 'neural-network', 'image-recognition']",Defusing bombs in Keep Talking and Nobody Explodes
oke-aditya/image_similarity,oke-aditya/image_similarity,"['image-similarity', 'pytorch', 'image-retrieval', 'autoencoder', 'unsupervised-learning', 'auto-encoders']",PyTorch Blog Post On Image Similarity Search
zhenghao977/fcos-pytorch-37.2ap,zhenghao977/FCOS-PyTorch-37.2AP,"['anchor-free', 'fcos', 'object-detection']",A pure torch implement of FCOS 37.2AP
akwasigroch/pretext-invariant-representations,akwasigroch/Pretext-Invariant-Representations,"['machine-learning', 'deep-learning', 'self-supervised-learning', 'self-supervised', 'computer-vision']",Implementation of the paper Self-Supervised Learning of Pretext-Invariant Representations 
mihir135/yolov5,mihir135/yolov5,[],YOLO v5 pytorch implementation. This repository contains code for this tutorial.
xming521/ctai,xming521/CTAI,"['pytorch', 'flask', 'vue']",基于深度学习的肿瘤辅助诊断系统，以图像分割为核心，利用人工智能完成肿瘤区域的识别勾画并提供肿瘤区域的特征来辅助医生进行诊断。有完整的模型构建、后端架设和前端访问功能。
jingliang-duan/distributional-soft-actor-critic,Jingliang-Duan/Distributional-Soft-Actor-Critic,"['reinforcement-learning', 'pytorch']",
zhou13/holicity,zhou13/holicity,"['cad-models', 'panorama-image', 'dataset', 'deep-learning', 'deep-neural-networks', '3d-reconstruction', 'streetview']",HoliCity: A City-Scale Data Platform for Learning Holistic 3D Structures
yanbeic/val,yanbeic/VAL,"['image-search', 'vision-and-language', 'attention', 'cvpr2020', 'tensorflow', 'retrieval']",Tensorflow Implementation on Paper [CVPR2020]Image Search with Text Feedback by Visiolinguistic Attention Learning
unicredit/charade,andreaferretti/charade,"['nlp', 'nlp-apis', 'python']","A server for multilanguage, composable NLP API in Python"
lipairui/textgo,Lipairui/textgo,"['text-preprocessing', 'nlp', 'text-classification', 'text-search', 'text-similarity', 'text-representation', 'bert']","Text preprocessing, representation, similarity calculation, text search and classification. Let's go and play with text!"
qinnzou/deepcrack,qinnzou/DeepCrack,"['deepcrack', 'pavement-images', 'crack-detection', 'cnn', 'deep-learning', 'pavement-crack-detection', 'convolutional-neural-network']",DeepCrack: Learning Hierarchical Convolutional Features for Crack Detection
developers-cosmos/covid-race-game,developers-cosmos/COVID-Race-Game,"['artificial-intelligence', 'pygame', 'deep-learning', 'covid-19', 'python-game-development', 'game', 'covid-race-game', '2d-game']",A Game is developed with pygame and AI where the user can control the actions through his hands (gestures)
philipperemy/keras-sde-net,philipperemy/keras-sde-net,"['sde-net', 'keras', 'keras-tensorflow', 'tensorflow', 'neural-networks']",Keras implementation of SDE-Net (ICML 2020).
tianweidadada/smp2020---weibo-sentiment-classification,Tianweidadada/SMP2020---Weibo-sentiment-classification,"['nlp', 'smp']",SMP 2020年微博情感分类评测任务 第六名解决方案
mahmoodlab/toad,mahmoodlab/TOAD,"['histology', 'pathology', 'wsi-images', 'histopathology', 'cancer-imaging-research', 'cancer-research', 'cancer-detection', 'mahmoodlab', 'deep', 'deep-learning', 'bioimage-analysis', 'bioimage-informatics', 'toad', 'unknown-primary', 'cup']",AI-based pathology predicts origins for cancers of unknown primary - Nature
debeshjha/resunetplusplus-with-crf-and-tta,DebeshJha/ResUNetPlusPlus-with-CRF-and-TTA,"['semantic-segmentation', 'convolutional-neural-networks', 'computer-vision', 'image-segmentation', 'unet-image-segmentation', 'deep-learning', 'unet', 'resunet', 'resunet-architecture', 'medical-imaging', 'pytorch', 'pytorch-implementation', 'segmentation', 'tensorflow', 'image-segmantation']","ResUNet++, CRF, and TTA  for segmentation of medical images  (IEEE JBIHI)"
umitkaanusta/mint-youtube,umitkaanusta/mint-youtube,"['youtube-videos', 'youtube', 'youtube-api', 'video', 'nlp', 'text-classification', 'text-analysis', 'comment', 'self-hosted', 'channel']",Comment analytics tool for YouTube videos
gabrielspadon/regenn,gabrielspadon/ReGENN,"['deep-learning', 'neural-network', 'evolution', 'series-forecasting', 'paper', 'gse', 'artificial-intelligence']",Recurrent Graph Evolution Neural Network (ReGENN) using Graph Soft Evolution (GSE)
weizhepei/casrel,weizhepei/CasRel,"['knowledge-graph', 'relation-extraction', 'relational-triple-extraction', 'information-extraction', 'keras', 'bert']",A Novel Cascade Binary Tagging Framework for Relational Triple Extraction. Accepted by ACL 2020. 
cripac-dig/texting,CRIPAC-DIG/TextING,"['text-classification', 'graph-neural-networks', 'natural-language-processing', 'inductive-learning']","[ACL 2020] Tensorflow implementation for ""Every Document Owns Its Structure: Inductive Text Classification via Graph Neural Networks"""
badbadbadboy/dbnet-lite.pytorch,BADBADBADBOY/DBnet-lite.pytorch,"['dbnet', 'textdetection', 'ocr', 'lightweight', 'pytorch', 'python3']",A pytorch re-implementation of Real-time Scene Text Detection with Differentiable Binarization
mbrossar/denoise-imu-gyro,mbrossar/denoise-imu-gyro,"['imu', 'attitude-estimation', 'deep-learning']",Convolutional Neural Networks for Denoising Gyroscopes of Low-Cost IMUs
clovaai/dmfont,clovaai/dmfont,"['font-generation', 'pytorch', 'eccv2020', 'dmfont', 'few-shot']",Official PyTorch implementation of DM-Font (ECCV 2020)
lorenmt/shape-adaptor,lorenmt/shape-adaptor,"['neural-shape-learning', 'pytorch', 'automl', 'nas', 'pooling']","The implementation of ""Shape Adaptor: A Learnable Resizing Module"" [ECCV 2020]."
progamergov/neural-dream,ProGamerGov/neural-dream,"['deepdream', 'pytorch', 'visualization', 'computer-vision', 'resnet', 'googlenet', 'inception', 'vgg', 'nin', 'pytorch-deepdream', 'deep-dream', 'neural-dream', 'tiling']",PyTorch implementation of DeepDream algorithm
rdroste/unisal,rdroste/unisal,"['machine-learning', 'deep-learning', 'saliency-detection', 'saliency-prediction', 'visual-saliency', 'visual-salience', 'video-saliency-prediction', 'video-saliency', 'image-saliency', 'eccv2020', 'eccv-2020', 'eccv', 'saliency', 'saliency-map', 'saliency-model', 'salicon', 'dhf1k', 'ucf-sports']",Unified Image and Video Saliency Modeling (ECCV 2020)
puzzlelib/puzzlelib,puzzlelib/PuzzleLib,"['deep-learning', 'data-science', 'neural-network', 'machine-learning', 'library', 'python', 'deep-neural-networks', 'gpu', 'tensor', 'numpy', 'ml']",Deep Learning framework with NVIDIA & AMD support
seongmin-kye/meta-sr,seongmin-kye/meta-SR,"['speaker-recognition', 'short-utterances', 'speaker-verification', 'meta-learning']","Pytorch implementation of Meta-Learning for Short Utterance Speaker Recognition with Imbalance Length Pairs (Interspeech, 2020)"
crs4/atlantanet,crs4/AtlantaNet,"['3d-reconstruction', 'computer-vision', 'indoor-scenes', 'panorama-image']",Pytorch implementation of the ECCV 2020 paper: AtlantaNet: Inferring the 3D Indoor Layout from a Single 360 Image beyond the Manhattan World Assumption
amontgomerie/question_generator,AMontgomerie/question_generator,"['nlp', 'natural-language-processing', 'natural-language-generation', 'nlg', 'transformers', 't5', 'bert', 'question-generation']",An NLP system for generating reading comprehension questions
haoheliu/subband-music-separation,haoheliu/Subband-Music-Separation,[],Pytorch: Channel-wise subband (CWS) input for better voice and accompaniment separation
mmphego/face_mask_detection_openvino,mmphego/face_mask_detection_openvino,"['face-mask-detection', 'openvino', 'intel-openvino-toolkit', 'deep-learning', 'intel', 'edge', 'inference', 'blogpost', 'edgeai', 'covid-19', 'opencv']",Detect faces and determine whether people are wearing mask.
kaiyuyue/mgd,KaiyuYue/mgd,"['matching-guided-distillation', 'mgd', 'model-distillation', 'knowledge-distillation', 'pytorch', 'detectron2', 'kd', 'detection', 'classification', 'moco-v2', 'unsupervised-learning', 'deep-learning']",Matching Guided Distillation (ECCV 2020)
eugeneyan/recsys-nlp-graph,eugeneyan/recsys-nlp-graph,"['recommender-system', 'pytorch', 'nlp', 'graph', 'matrix-factorization']","🛒 Simple recommender with matrix factorization, graph, and NLP. Beating the regular collaborative filtering baseline."
amazon-research/meta-q-learning,amazon-science/meta-q-learning,"['deep-learning', 'meta-learning', 'reinforcement-learning', 'multi-task-learning']","Code for the paper ""Meta-Q-Learning""( ICLR 2020)"
ai4ce/spare3d,ai4ce/SPARE3D,"['line-drawings', 'spatial-reasoning', 'deep-learning', 'pythonocc', 'reasoning', 'line-drawing']",[CVPR2020] A Dataset for SPAtial REasoning on Three-View Line Drawings
chenchongthu/jnskr,chenchongthu/JNSKR,"['recommender-system', 'neural-network', 'efficient-algorithm', 'non-sampling']",This is our implementation of JNSKR: Jointly Non-Sampling Learning for Knowledge Graph Enhanced Recommendation (SIGIR 2020)
selfishgene/neuron_as_deep_net,SelfishGene/neuron_as_deep_net,"['deep-learning', 'convolutional-neural-networks', 'biological-modeling', 'neuroscience-inspired-ai', 'neuroscience-data']","Code behind the work ""Single Cortical Neurons as Deep Artificial Neural Networks"", published in Neuron 2021"
renovamen/text-classification,Renovamen/Text-Classification,"['text-classification', 'han', 'nlp', 'hierarchical-attention-networks', 'fasttext', 'bilstm-attention', 'textcnn', 'lstm', 'cnn', 'document-classification', 'transformer']","PyTorch implementation of some text classification models (HAN, fastText, BiLSTM-Attention, TextCNN, Transformer) | 文本分类"
googlecloudplatform/dataflow-contact-center-speech-analysis,GoogleCloudPlatform/dataflow-contact-center-speech-analysis,"['speech-to-text', 'natural-language-processing', 'google-cloud', 'dataflow', 'cloud-functions', 'data-loss-prevention']","Speech Analysis Framework, a collection of components and code from Google Cloud that you can use to transcribe audio files to create analytics."
pd3f/dehyphen,pd3f/dehyphen,"['python', 'pdf', 'dehyphenation', 'hyphens', 'nlp', 'german', 'flair-embeddings', 'flair', 'hyphen', 'pd3f']","📜 Dehyphenation of broken text (mainly German), i.e., extracted from a PDF"
nithin-holla/metalifelonglanguage,Nithin-Holla/MetaLifelongLanguage,"['meta-learning', 'lifelong-learning', 'continual-learning', 'text-classification', 'relation-extraction', 'natural-language-processing', 'experience-replay']","Repository containing code for the paper ""Meta-Learning with Sparse Experience Replay for Lifelong Language Learning""."
icbcbicc/focuslitenn,icbcbicc/FocusLiteNN,"['image-processing', 'digital-pathology', 'deep-learning', 'deep-neural-networks', 'convolutional-neural-network', 'medical-image-processing', 'image-quality-assessment', 'network-distillation', 'pathological-images', 'pytorch']","Official PyTorch and MATLAB implementations of our MICCAI 2020 paper ""FocusLiteNN: High Efficiency Focus Quality Assessment for Digital Pathology"""
venkanna37/label-pixels,venkanna37/Label-Pixels,"['semantic-segmentation', 'deep-learning', 'fully-convolutional-networks', 'keras', 'tensorflow', 'road-extraction', 'pixel-labeling', 'artificial-intelligence', 'msc-project', 'label-pixels', 'unet', 'segnet', 'resunet', 'satellite-image-segmentation', 'gdal', 'machine-learning', 'remote-sensing', 'satellite-imagery', 'segmentation']","Label-Pixels is the tool for semantic segmentation of remote sensing images using Fully Convolutional Networks. Initially, it is designed for extracting the road network from remote sensing imagery and now, it can be used to extract different features from remote sensing imagery."
dorukkarinca/keras-buoy,dorukkarinca/keras-buoy,"['keras', 'checkpointing', 'autosave', 'data-science', 'machine-learning', 'colab-notebook', 'colaboratory', 'colab', 'colab-automation']",Keras wrapper that autosaves what ModelCheckpoint cannot.
deng-mit/reactorch,DENG-MIT/reactorch,"['combustion', 'pytorch', 'chemical-kinetics', 'fluid-dynamics', 'scientific-machine-learning', 'kinetics']",A Differentiable Reacting Flow Simulation Package in PyTorch
yoonseok312/watch-out,yoonseok312/watch-out,"['ios', 'tensorflow']",Watch Out: Apple Watch App to detect dangerous sounds for people with hearing disablities.
knight825/models-pytorch,Knight825/models-pytorch,"['pytorch', 'self-attention', 'senet', 'cbam', 'cbam-resnet', 'se-resnet', 'attention-mechanism', 'cnn-model', 'crossstagepartial', 'csp-resnet', 'csp-densenet', 'exactfusionmodel']",This is a torchvision style CNN models collection based on pytorch.
taufikxu/triple-gan,taufikxu/Triple-GAN,[],Pytorch for Triple-GAN
asjidkalam/scrawl,Asjidkalam/Scrawl,"['ocr', 'machine-learning', 'keras', 'deep-learning', 'lstm']",Reverse OCR using DeepLearning
denisyarats/pytorch_sac,denisyarats/pytorch_sac,"['reinforcement-learning', 'dm-control', 'soft-actor-critic', 'pytorch', 'deep-reinforcement-learning', 'actor-critic', 'mujoco', 'gym', 'deep-learning', 'sac', 'continuous-control', 'd4pg']",PyTorch implementation of Soft Actor-Critic (SAC)
zeiss-microscopy/bsconv,zeiss-microscopy/BSConv,"['cvpr2020', 'pytorch', 'depthwise-separable-convolutions', 'resnet', 'mobilenet', 'image-classification', 'deep-learning', 'efficient-neural-networks', 'zeiss', 'cifar10', 'cifar100', 'blueprint-separable-convolutions']",Reference implementation for Blueprint Separable Convolutions (CVPR 2020)
amirassov/kaggle-global-wheat-detection,amirassov/kaggle-global-wheat-detection,"['kaggle', 'deep-learning', 'computer-vision', 'object-detection', 'mmdetection']",9th Place Solution of Kaggle Global Wheat Detection
affjljoo3581/canrevan,affjljoo3581/canrevan,"['naver', 'news', 'news-articles', 'nlp', 'naver-news', 'dataset', 'datasets', 'natural-language-processing', 'python']",대량의 네이버 뉴스 기사를 수집하는 라이브러리입니다.
andrewzlee/neuralblock,andrewzlee/NeuralBlock,"['video-youtube-sponsorships', 'neural-network', 'sponsorships']",Neural Network that detects in-video YouTube sponsorships.
patrick-kidger/fasterneuraldiffeq,patrick-kidger/FasterNeuralDiffEq,"['deep-neural-networks', 'deep-learning', 'pytorch', 'dynamical-systems', 'differential-equations', 'ordinary-differential-equations', 'controlled-differential-equations', 'neural-differential-equations', 'numerical-methods', 'numerical-analysis', 'machine-learning']","Code for ""'Hey, that's not an ODE:' Faster ODE Adjoints via Seminorms"" (ICML 2021)"
soongja/basic-image-eda,Soongja/basic-image-eda,"['eda', 'image-dataset', 'visualization', 'cnn', 'image-classification', 'image-segmentation', 'computer-vision', 'dataset', 'deep-learning']",A simple image dataset EDA tool (CLI / Code)
sjenni/temporal-ssl,sjenni/temporal-ssl,"['self-supervised-learning', 'action-recognition', 'tensorflow', 'ucf101', 'hmdb51', 'unsupervised-learning', 'c3d', 'transfer-learning']","Video Representation Learning by Recognizing Temporal Transformations. In ECCV, 2020."
dheeraj7596/conwea,dheeraj7596/ConWea,"['weakly-supervised-learning', 'contextualized-representation', 'contextualized-programming', 'text-classification', 'natural-language-processing', 'datamining', 'acl2020', 'acl']","Code for the paper ""Contextualized Weak Supervision for Text Classification"""
zonasw/dbnet,zonasw/DBNet,[],"This is a tensorflow2.x implementation of ""Real-time Scene Text Detection with Differentiable Binarization"""
narasimha1997/wavenet-stt,Narasimha1997/wavenet-stt,"['cplusplus-11', 'pybind', 'python3', 'python', 'wavenet', 'tensorflow', 'tensorflow2', 'tensorflowlite', 'speech-recognition']",An end-to-end speech recognition system with Wavenet. Built using C++ and python.
levindabhi/sievenet,levindabhi/SieveNet,"['pytorch', 'pytorch-implementation', 'vton', 'vitual-tryon', 'sievenet', '2d-virtual-try-on', 'image-based-tryon']",This is the unofficial implementation of SieveNet: A Unified Framework for Robust Image-Based Virtual Try-On
mlforhealth/s2sd,MLforHealth/S2SD,"['deep-metric-learning', 'metric-learning', 'deep-learning', 'pytorch', 'cub200-2011', 'cars196', 'stanford-online-products', 'image-retrieval', 'zero-shot-learning']",(ICML 2021) Implementation for S2SD - Simultaneous Similarity-based Self-Distillation for Deep Metric Learning. Paper Link: https://arxiv.org/abs/2009.08348
knowledgedefinednetworking/routenet-challenge,BNN-UPC/GNNetworkingChallenge,"['gnn', 'networking', 'ml', 'machine-learning', 'graph-neural-networks', 'communication-networks', 'computer-networks']",RouteNet baseline for the Graph Neural Networking Challenge (https://bnn.upc.edu/challenge/)
clutchsoftware/simurg,clutchsoftware/Simurg,"['nlp', 'python', 'pyqt5', 'bash', 'acikhack2']","Simurg - Yazım Yardımcınız. Simurg Python ve PyQt5 işbirliği ile ClutchSoftware tarafından inşa edilmiş, Türkçe Doğal Dil İşleme alanında kaynak ve araç oluşturma amacı ile tasarlanmıştır."
francesco-p/gpwho,francesco-p/gpwho,"['gpu-monitoring', 'gpu', 'logging', 'deep-learning']","gpwho? GPU usage logger, with Telegram bot integration."
alvinwan/nbdt-pytorch-image-models,alvinwan/nbdt-pytorch-image-models,"['pytorch', 'neural-backed-decision-trees', 'imagenet', 'efficientnet']",Neural-Backed Decision Tree sample integration with pytorch-image-models
keremzaman/semantic-sh,KeremZaman/semantic-sh,"['simhash', 'word-vectors', 'fasttext', 'bert', 'locality-sensitive-hashing', 'transformer', 'text-similarity', 'text-clustering', 'text-search']",semantic-sh is a SimHash implementation to detect and group similar texts by taking power of word vectors and transformer-based language models (BERT).
domyounglee/transformer-summarization,domyounglee/Transformer-Summarization,"['summarization', 'tensorflow', 'abstractive-summarization', 'abstractive-text-summarization', 'transformer', 'transformer-models']",An optimized Transformer based abstractive summarization model with Tensorflow
sunweikes/da-rnn,SunWeiKeS/DA-RNN,[],根据Seanny123复现论文A Dual-Stage Attention-Based Recurrent Neural Network for Time Series Prediction的pytorch代码进行相关修改，适应pytorch1.2版本
nrsyed/pytorch-yolov3,nrsyed/pytorch-yolov3,"['yolov3', 'object-detection', 'pytorch', 'yolo', 'python']",A (mostly from scratch) PyTorch implementation of YOLOv3 for real-time webcam object detection
leputa/mann-meta-learning,Leputa/MANN-meta-learning,"['tensorflow', 'meta-learning', 'few-shot-learning', 'neural-turing-machines', 'memory-augmented-neural-networks']",A tensorflow implement of Memory-Augmented Neural Network
spijkervet/simclr,Spijkervet/SimCLR,"['simclr', 'pytorch', 'contrastive-learning', 'unsupervised-learning', 'representation-learning']",PyTorch implementation of SimCLR: A Simple Framework for Contrastive Learning of Visual Representations by T. Chen et al.
sjmoran/deeplpf,sjmoran/DeepLPF,"['cvpr2020', 'raw2rgb', 'deep-learning', 'computational-photography', 'computer-vision', 'adobe-upe', 'paper', 'rgb', 'cvpr']","Code for CVPR 2020 paper ""Deep Local Parametric Filters for Image Enhancement"""
nvlabs/dream,NVlabs/DREAM,"['pose-estimation', 'camera-calibration', 'deep-learning', 'pytorch', 'ros']",DREAM: Deep Robot-to-Camera Extrinsics for Articulated Manipulators (ICRA 2020)
lucidrains/axial-attention,lucidrains/axial-attention,"['artificial-intelligence', 'deep-learning', 'attention-mechanism', 'pytorch']",Implementation of Axial attention - attending to multi-dimensional data efficiently
smoke-trees/voice-synthesis,smoke-trees/Voice-synthesis,"['voice-synthesis', 'voice-cloning', 'sv2tts', 'pytorch-implementation', 'tensorflow', 'keras', 'speech-to-text']","This repository is an implementation of Transfer Learning from Speaker Verification to Multispeaker Text-To-Speech Synthesis (SV2TTS) with a vocoder that works in real-time. SV2TTS is a three-stage deep learning framework that allows to create a numerical representation of a voice from a few seconds of audio, and to use it to condition a text-to-speech model trained to generalize to new voices."
think989/real-time-stock-market-prediction-using-ensemble-dl-and-rainbow-dqn,THINK989/Real-Time-Stock-Market-Prediction-using-Ensemble-DL-and-Rainbow-DQN,"['real-time-prediction', 'rainbow-dqn', 'stock-price-forecasting', 'lstm', 'gru', 'ensemble', 'keras', 'trade-bot', 'tensorflow']",
dumitrescustefan/romanian-transformers,dumitrescustefan/Romanian-Transformers,"['romanian-bert', 'bert', 'huggingface-transformers', 'nlp', 'pytorch', 'language-model', 'romanian-language']",This repo is the home of Romanian Transformers. 
khrylx/dlow,Khrylx/DLow,"['eccv2020', 'motion-prediction', 'motion-forecasting', 'pose-prediction', 'pose-forecasting', 'generative-models', 'diversity', 'diversifying-latent-flows', 'vae', 'pytorch', 'deep-learning']","[ECCV 2020] Official PyTorch Implementation of ""DLow: Diversifying Latent Flows for Diverse Human Motion Prediction"". ECCV 2020."
mac-automl/xnas,MAC-AutoML/XNAS,"['pytorch', 'automl', 'neural-architecture-search']","XNAS: An effective, modular, and flexible Neural Architecture Search (NAS) framework."
itsuki8914/voice-morphing-relgan,itsuki8914/Voice-morphing-RelGAN,[],A implementation voice morphing using relgan with tensorflow
peteryux/pcdarts-tf2,peteryuX/pcdarts-tf2,"['neural-architecture-search', 'darts', 'pc-darts', 'pcdarts', 'tensorflow', 'tf2', 'tensorflow2', 'cifar10', 'cifar-10', 'iclr2020']","PC-DARTS (PC-DARTS: Partial Channel Connections for Memory-Efficient Differentiable Architecture Search, published in ICLR 2020) implemented in Tensorflow 2.0+. This is an unofficial implementation."
matheushent/covid-19-detector,matheushent/covid-19-detector,"['tensorflow', 'deep-learning', 'covid-19', 'grad-cam', 'occlusion-sensitivity', 'keras', 'python3', 'vgg16', 'vgg19', 'resnet-50', 'resnet-152', 'machine-learning-algorithms', 'transfer-learning', 'cuda', 'gpu-tensorflow', 'convolutional-neural-networks', 'efficientnet']",Repository containing scripts to train and test a neural network whose goal is to detect presence of COVID-19
nju-jet/sr_framework,NJU-Jet/SR_Framework,"['model-zoo', 'latticenet', 'imdn', 'srfbn', 'idn', 'carn', 'edsr', 'drrn', 'lapsrn', 'drcn', 'vdsr', 'pytorch', 'super-resolution']",A generic framework which implements some famouts super-resolution models
cyrilzakka/stylegan2-tpu,cyrilzakka/stylegan2-tpu,"['deep-learning', 'tensorflow']",StyleGAN2 but rewritten for TPUs.
theaiguyscode/yolov4-deepsort,theAIGuysCode/yolov4-deepsort,"['yolov4', 'yolov4-deepsort', 'deep-sort', 'object-tracker', 'tensorflow', 'object-tracking', 'object-detection']","Object tracking implemented with YOLOv4, DeepSort, and TensorFlow."
theaiguyscode/yolov3_deepsort,theAIGuysCode/yolov3_deepsort,"['yolov3', 'object-tracker', 'deep-sort', 'tensorflow']","Object tracking implemented with YOLOv3, Deep Sort and Tensorflow."
theaiguyscode/object-detection-api,theAIGuysCode/Object-Detection-API,"['yolov3', 'object-detection', 'tensorflow', 'yolo', 'inference', 'deep-learning']","Yolov3 Object Detection implemented as APIs, using TensorFlow and Flask"
developers-cosmos/meme-generator,developers-cosmos/Meme-Generator,"['cnn-classification', 'image-augmentation', 'chef-cookbook', 'flask-server', 'gcp', 'image-classification', 'gcp-auto-ml', 'balanced-data', 'meme-generator', 'artificial-intelligence', 'neural-networks', 'memegen', 'cnn', 'memes', 'projects', 'automated']",MemeGen is a web application where the user gives an image as input and our tool generates a meme at one click for the user.
stefanopini/simple-higherhrnet,stefanopini/simple-HigherHRNet,"['pytorch', 'hrnet', 'higher-hrnet', 'human-pose-estimation', 'keypoint-detection', 'coco-dataset', 'mscoco-keypoint', 'deep-learning']","Multi-person Human Pose Estimation with HigherHRNet in Pytorch, with TensorRT support"
affjljoo3581/gpt2,affjljoo3581/GPT2,"['pytorch', 'nlp', 'language-model', 'gpt2', 'natural-language-processing', 'natural-language-generation', 'transformer']",PyTorch Implementation of OpenAI GPT-2
antonior92/automatic-ecg-diagnosis,antonior92/automatic-ecg-diagnosis,"['deep-learning', 'convolutional-neural-networks', 'ecg', 'ecg-signal', 'ecg-classification', 'atrial-fibrillation', 'atrial-fibrillation-detection']","Scripts and modules for training and testing neural network for ECG automatic classification. Companion code to the paper  ""Automatic diagnosis of the 12-lead ECG using a deep neural network"". "
claying/otk,claying/OTK,[],A Pytorch implementation of the optimal transport kernel embedding
cripac-dig/grace,CRIPAC-DIG/GRACE,"['contrastive-learning', 'graph-representation-learning', 'deep-learning', 'machine-learning']","[GRL+ @ ICML 2020] PyTorch implementation for ""Deep Graph Contrastive Representation Learning"" (https://arxiv.org/abs/2006.04131v2)"
pkshatechnology-research/tdmelodic,PKSHATechnology-Research/tdmelodic,"['japanese', 'accent', 'nlp', 'speech-synthesis']",A Japanese accent dictionary generator
tsujuifu/pytorch_sscr,tsujuifu/pytorch_sscr,"['emnlp2020', 'pytorch', 'computer-vision', 'image-editing']",A PyTorch implementation of SSCR
hejingwenhejingwen/csrnet,hejingwenhejingwen/CSRNet,"['photo-retouching', 'deep-learning', 'image-enhancement', 'image-processing', 'color-enhancement', 'csrnet']",(ECCV 2020) Conditional Sequential Modulation for Efficient Global Image Retouching
quasarlight/pytorch_face_recognition-,QuasarLight/Pytorch_Face_Recognition-,[],"Pytorch implementation of mainstream face recognition algorithms(ArcFace, CosFace)."
renmin1991/dyamic_graph_representation,RenMin1991/Dyamic_Graph_Representation,"['pytorch', 'feature-graphs', 'feature-extraction', 'biometrics', 'iris-recognition', 'face-recognition', 'aaai2020']",Official Dynamic Graph Representation PyTorch implement for iris/face recognition
lukewys/dcase_2020_t6,lukewys/dcase_2020_T6,"['audio-captioning', 'deep-learning']",2nd place solution for 2020 DCASE challenge task 6 audio captioning. http://dcase.community/challenge2020/task-automatic-audio-captioning-results#wuyusong2020_t6
bm777/object_detection,bm777/object_detection,"['object-detection', 'python', 'tensorflow', 'opencv', 'detection', 'absl', 'yolov3', 'transfer-learning', 'darknet', 'graph-mode']",Implementatoin of object detection using Tensorflow 2.1.0 | this can be use in a car for object detection
deepraj1729/tchatbot,deepraj1729/TChatBot,"['machine-learning', 'nlp', 'nltk', 'python3', 'tensorflow', 'pypi', 'deep-learning', 'artificial-intelligence', 'neural-networks', 'speech-recognition', 'numpy', 'virtual-environment', 'pip', 'conda', 'sklearn', 'git', 'github', 'framework', 'chatbot-framework']","A ChatBot framework to create customizable all purpose Chatbots using NLP, Tensorflow, Speech Recognition "
liangheming/auto_assignv2,liangheming/auto_assignv2,[],An unofficial pytorch implementation of <<AutoAssign: Differentiable Label Assignment for Dense Object Detection>>
hccho2/transformer_dateconversion,hccho2/Transformer_DateConversion,[],"pytorch.nn.Transformer, torchtext, Tensorflow 2, Keras"
dkurt/openvino_practice,dkurt/openvino_practice,"['openvino', 'intel', 'computer-vision', 'practice', 'opencv', 'deep-learning']","Practice git, Travis CI and Intel OpenVINO"
